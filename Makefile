##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.7.1] date: [Thu Mar 19 10:12:08 CST 2020]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = BitOS

######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og

platrom = macos

#######################################
# paths
#######################################
# Build path
BUILD_DIR = Objects

######################################
# source
######################################
# C sources
C_SOURCES =  \
common/src/typeconversion.c \
DEBUG/src/debug.c \
SYSTEM/mem/memng.c \
SYSTEM/mutex/mutex.c \
SYSTEM/os_cli/os_cli.c \
SYSTEM/os_cli/cli_proc_tool.c \
SYSTEM/event/os_event.c \
SYSTEM/event/event_func.c \
SYSTEM/data_structure/queue.c \
SYSTEM/data_structure/linked_list.c \
SYSTEM/data_structure/binary_tree.c \
SYSTEM/task/task.c \
SYSTEM/task/task_delay.c \
SYSTEM/task/fault_check.c \
SYSTEM/delay/delay.c \
SYSTEM/runtime/runtime.c \
SYSTEM/sys/reboot.c \
SYSTEM/sys/sys.c \
SYSTEM/crc/crc16.c \
Flight/src/mpu_proc.c \
Flight/src/mavlink.c \
Flight/src/filter.c \
Flight/src/imu.c \
Flight/src/pid.c \
Flight/src/flash_disk.c \
Math/src/maths.c \
Math_LIB/src/Math_Lib.c \
device/led.c \
device/mpu6000.c \
device/dshot600.c \
device/max7456.c \
device/radio.c \
device/sbus.c \
device/sdcard_drv.c \
device/sdcard_opr.c \
device/sdcard_standard.c \
FatFs/src/asyncfatfs.c \
FatFs/src/fat_standard.c \
BlackBox/src/encoding.c \
BlackBox/src/blackbox.c \
BlackBox/src/blackbox_io.c \
BlackBox/src/blackbox_encoding.c \
BlackBox/src/printf_m.c \
FWLIB/src/misc.c \
FWLIB/src/stm32f4xx_adc.c \
FWLIB/src/stm32f4xx_can.c \
FWLIB/src/stm32f4xx_cec.c \
FWLIB/src/stm32f4xx_crc.c \
FWLIB/src/stm32f4xx_cryp_aes.c \
FWLIB/src/stm32f4xx_cryp_des.c \
FWLIB/src/stm32f4xx_cryp_tdes.c \
FWLIB/src/stm32f4xx_cryp.c \
FWLIB/src/stm32f4xx_dac.c \
FWLIB/src/stm32f4xx_dbgmcu.c \
FWLIB/src/stm32f4xx_dcmi.c \
FWLIB/src/stm32f4xx_dfsdm.c \
FWLIB/src/stm32f4xx_dma.c \
FWLIB/src/stm32f4xx_dma2d.c \
FWLIB/src/stm32f4xx_dsi.c \
FWLIB/src/stm32f4xx_exti.c \
FWLIB/src/stm32f4xx_flash_ramfunc.c \
FWLIB/src/stm32f4xx_flash.c \
FWLIB/src/stm32f4xx_fmpi2c.c \
FWLIB/src/stm32f4xx_gpio.c \
FWLIB/src/stm32f4xx_hash_md5.c \
FWLIB/src/stm32f4xx_hash_sha1.c \
FWLIB/src/stm32f4xx_hash.c \
FWLIB/src/stm32f4xx_i2c.c \
FWLIB/src/stm32f4xx_iwdg.c \
FWLIB/src/stm32f4xx_lptim.c \
FWLIB/src/stm32f4xx_ltdc.c \
FWLIB/src/stm32f4xx_pwr.c \
FWLIB/src/stm32f4xx_qspi.c \
FWLIB/src/stm32f4xx_rcc.c \
FWLIB/src/stm32f4xx_rng.c \
FWLIB/src/stm32f4xx_rtc.c \
FWLIB/src/stm32f4xx_sai.c \
FWLIB/src/stm32f4xx_sdio.c \
FWLIB/src/stm32f4xx_spdifrx.c \
FWLIB/src/stm32f4xx_spi.c \
FWLIB/src/stm32f4xx_syscfg.c \
FWLIB/src/stm32f4xx_tim.c \
FWLIB/src/stm32f4xx_usart.c \
FWLIB/src/stm32f4xx_wwdg.c \
periph/periph_dma.c \
periph/periph_flash.c \
periph/periph_gpio.c \
periph/periph_iic.c \
periph/periph_nvic.c \
periph/periph_serial_irq.c \
periph/periph_serial.c \
periph/periph_spi.c \
periph/periph_timer_irq.c \
periph/periph_timer.c \
periph/periph_dma_irq.c \
USB/config/vcp.c \
USB/config/tm_stm32f4_usb_vcp.c \
USB/core/usb_bsp.c \
USB/core/usb_core.c \
USB/core/usb_dcd_int.c \
USB/core/usb_dcd.c \
USB/core/usbd_cdc_core.c \
USB/core/usbd_cdc_vcp.c \
USB/core/usbd_core.c \
USB/core/usbd_desc.c \
USB/core/usbd_ioreq.c \
USB/core/usbd_req.c \
USB/core/usbd_usr.c \
USER/stm32f4xx_it.c\
USER/system_stm32f4xx.c \
USER/main.c \

# ASM sources
ASM_SOURCES =  \
startup_stm32f405xx.s
#startup_stm32f411xe.s

#######################################
# binaries
#######################################

ifeq ($(plafrom), win)
BINPATH = C:/Program Files (x86)/GNU Arm Embedded Toolchain/10 2020-q4-major/bin
endif

ifeq ($(plafrom), macos)
BINPATH = /usr/local/arm-none-eabi-gcc/gcc-arm-none-eabi-10-2020-q4-major/bin/
endif

PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_STDPERIPH_DRIVER \
-D__FPU_PRESENT=1 \
-D__FPU_USED=1 \

# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-Icommon/inc \
-IDEBUG/inc \
-IFlight/inc \
-IFatFs/inc \
-IBlackBox/inc \
-Idevice \
-IF4_CORE \
-IFWLIB/inc \
-IMath/inc \
-IMath_LIB/inc \
-Iperiph \
-ISYSTEM/data_structure \
-ISYSTEM/runtime \
-ISYSTEM/delay \
-ISYSTEM/mem \
-ISYSTEM/sys \
-ISYSTEM/mutex \
-ISYSTEM/os_cli \
-ISYSTEM/event \
-ISYSTEM/task \
-ISYSTEM/crc \
-IUSB/config \
-IUSB/core \
-IUSER \

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif

# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F405VGTx_FLASH.ld
#LDSCRIPT = STM32F411CEUx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys -u_printf_float
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@ 
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
# -rm -fR $(BUILD_DIR)
# -rd /s /q $(BUILD_DIR)
#######################################
clean:
	-rm -fR $(BUILD_DIR)
	
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***

OPENOCD := openocd -f interface/cmsis-dap.cfg \
        -c 'transport select swd' \
        -f target/stm32f4x.cfg \
# download your program
flash: all
	$(OPENOCD) -c init \
        -c 'reset halt' \
        -c 'flash write_image erase $(BUILD_DIR)/$(TARGET).elf' \
        -c 'reset run' \
        -c exit
debug:
	$(OPENOCD)

	