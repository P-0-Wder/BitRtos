ARM GAS  /tmp/cc7Dtwf5.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SPI_I2S_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	SPI_I2S_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SPI_I2S_DeInit:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "FWLIB/src/stm32f4xx_spi.c"
   1:FWLIB/src/stm32f4xx_spi.c **** /**
   2:FWLIB/src/stm32f4xx_spi.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_spi.c ****   * @file    stm32f4xx_spi.c
   4:FWLIB/src/stm32f4xx_spi.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_spi.c ****   * @version V1.8.0
   6:FWLIB/src/stm32f4xx_spi.c ****   * @date    04-November-2016
   7:FWLIB/src/stm32f4xx_spi.c ****   * @brief   This file provides firmware functions to manage the following 
   8:FWLIB/src/stm32f4xx_spi.c ****   *          functionalities of the Serial peripheral interface (SPI):
   9:FWLIB/src/stm32f4xx_spi.c ****   *           + Initialization and Configuration
  10:FWLIB/src/stm32f4xx_spi.c ****   *           + Data transfers functions
  11:FWLIB/src/stm32f4xx_spi.c ****   *           + Hardware CRC Calculation
  12:FWLIB/src/stm32f4xx_spi.c ****   *           + DMA transfers management
  13:FWLIB/src/stm32f4xx_spi.c ****   *           + Interrupts and flags management 
  14:FWLIB/src/stm32f4xx_spi.c ****   *           
  15:FWLIB/src/stm32f4xx_spi.c **** @verbatim
  16:FWLIB/src/stm32f4xx_spi.c **** 
  17:FWLIB/src/stm32f4xx_spi.c ****  ===================================================================
  18:FWLIB/src/stm32f4xx_spi.c ****                   ##### How to use this driver #####
  19:FWLIB/src/stm32f4xx_spi.c ****  ===================================================================
  20:FWLIB/src/stm32f4xx_spi.c ****  [..]
  21:FWLIB/src/stm32f4xx_spi.c ****    (#) Enable peripheral clock using the following functions 
  22:FWLIB/src/stm32f4xx_spi.c ****        RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE) for SPI1
  23:FWLIB/src/stm32f4xx_spi.c ****        RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE) for SPI2
  24:FWLIB/src/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI3
  25:FWLIB/src/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI4
  26:FWLIB/src/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI5
  27:FWLIB/src/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI6.
  28:FWLIB/src/stm32f4xx_spi.c ****   
  29:FWLIB/src/stm32f4xx_spi.c ****    (#) Enable SCK, MOSI, MISO and NSS GPIO clocks using RCC_AHB1PeriphClockCmd()
ARM GAS  /tmp/cc7Dtwf5.s 			page 2


  30:FWLIB/src/stm32f4xx_spi.c ****        function. In I2S mode, if an external clock source is used then the I2S 
  31:FWLIB/src/stm32f4xx_spi.c ****        CKIN pin GPIO clock should also be enabled.
  32:FWLIB/src/stm32f4xx_spi.c ****   
  33:FWLIB/src/stm32f4xx_spi.c ****    (#) Peripherals alternate function: 
  34:FWLIB/src/stm32f4xx_spi.c ****        (++) Connect the pin to the desired peripherals' Alternate Function (AF) 
  35:FWLIB/src/stm32f4xx_spi.c ****             using GPIO_PinAFConfig() function
  36:FWLIB/src/stm32f4xx_spi.c ****        (++) Configure the desired pin in alternate function by: 
  37:FWLIB/src/stm32f4xx_spi.c ****             GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  38:FWLIB/src/stm32f4xx_spi.c ****        (++) Select the type, pull-up/pull-down and output speed via GPIO_PuPd, 
  39:FWLIB/src/stm32f4xx_spi.c ****             GPIO_OType and GPIO_Speed members
  40:FWLIB/src/stm32f4xx_spi.c ****        (++) Call GPIO_Init() function In I2S mode, if an external clock source is 
  41:FWLIB/src/stm32f4xx_spi.c ****             used then the I2S CKIN pin should be also configured in Alternate 
  42:FWLIB/src/stm32f4xx_spi.c ****             function Push-pull pull-up mode. 
  43:FWLIB/src/stm32f4xx_spi.c ****           
  44:FWLIB/src/stm32f4xx_spi.c ****    (#) Program the Polarity, Phase, First Data, Baud Rate Prescaler, Slave 
  45:FWLIB/src/stm32f4xx_spi.c ****        Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
  46:FWLIB/src/stm32f4xx_spi.c ****        function.
  47:FWLIB/src/stm32f4xx_spi.c ****        In I2S mode, program the Mode, Standard, Data Format, MCLK Output, Audio 
  48:FWLIB/src/stm32f4xx_spi.c ****        frequency and Polarity using I2S_Init() function. For I2S mode, make sure 
  49:FWLIB/src/stm32f4xx_spi.c ****        that either:
  50:FWLIB/src/stm32f4xx_spi.c ****        (++) I2S PLL is configured using the functions 
  51:FWLIB/src/stm32f4xx_spi.c ****             RCC_I2SCLKConfig(RCC_I2S2CLKSource_PLLI2S), RCC_PLLI2SCmd(ENABLE) and 
  52:FWLIB/src/stm32f4xx_spi.c ****             RCC_GetFlagStatus(RCC_FLAG_PLLI2SRDY); or 
  53:FWLIB/src/stm32f4xx_spi.c ****        (++) External clock source is configured using the function 
  54:FWLIB/src/stm32f4xx_spi.c ****             RCC_I2SCLKConfig(RCC_I2S2CLKSource_Ext) and after setting correctly 
  55:FWLIB/src/stm32f4xx_spi.c ****             the define constant I2S_EXTERNAL_CLOCK_VAL in the stm32f4xx_conf.h file. 
  56:FWLIB/src/stm32f4xx_spi.c ****   
  57:FWLIB/src/stm32f4xx_spi.c ****    (#) Enable the NVIC and the corresponding interrupt using the function 
  58:FWLIB/src/stm32f4xx_spi.c ****        SPI_ITConfig() if you need to use interrupt mode. 
  59:FWLIB/src/stm32f4xx_spi.c ****   
  60:FWLIB/src/stm32f4xx_spi.c ****    (#) When using the DMA mode 
  61:FWLIB/src/stm32f4xx_spi.c ****        (++) Configure the DMA using DMA_Init() function
  62:FWLIB/src/stm32f4xx_spi.c ****        (++) Active the needed channel Request using SPI_I2S_DMACmd() function
  63:FWLIB/src/stm32f4xx_spi.c ****    
  64:FWLIB/src/stm32f4xx_spi.c ****    (#) Enable the SPI using the SPI_Cmd() function or enable the I2S using
  65:FWLIB/src/stm32f4xx_spi.c ****        I2S_Cmd().
  66:FWLIB/src/stm32f4xx_spi.c ****    
  67:FWLIB/src/stm32f4xx_spi.c ****    (#) Enable the DMA using the DMA_Cmd() function when using DMA mode. 
  68:FWLIB/src/stm32f4xx_spi.c ****   
  69:FWLIB/src/stm32f4xx_spi.c ****    (#) Optionally, you can enable/configure the following parameters without
  70:FWLIB/src/stm32f4xx_spi.c ****        re-initialization (i.e there is no need to call again SPI_Init() function):
  71:FWLIB/src/stm32f4xx_spi.c ****        (++) When bidirectional mode (SPI_Direction_1Line_Rx or SPI_Direction_1Line_Tx)
  72:FWLIB/src/stm32f4xx_spi.c ****             is programmed as Data direction parameter using the SPI_Init() function
  73:FWLIB/src/stm32f4xx_spi.c ****             it can be possible to switch between SPI_Direction_Tx or SPI_Direction_Rx
  74:FWLIB/src/stm32f4xx_spi.c ****             using the SPI_BiDirectionalLineConfig() function.
  75:FWLIB/src/stm32f4xx_spi.c ****        (++) When SPI_NSS_Soft is selected as Slave Select Management parameter 
  76:FWLIB/src/stm32f4xx_spi.c ****             using the SPI_Init() function it can be possible to manage the 
  77:FWLIB/src/stm32f4xx_spi.c ****             NSS internal signal using the SPI_NSSInternalSoftwareConfig() function.
  78:FWLIB/src/stm32f4xx_spi.c ****        (++) Reconfigure the data size using the SPI_DataSizeConfig() function  
  79:FWLIB/src/stm32f4xx_spi.c ****        (++) Enable or disable the SS output using the SPI_SSOutputCmd() function  
  80:FWLIB/src/stm32f4xx_spi.c ****             
  81:FWLIB/src/stm32f4xx_spi.c ****     (#) To use the CRC Hardware calculation feature refer to the Peripheral 
  82:FWLIB/src/stm32f4xx_spi.c ****         CRC hardware Calculation subsection.
  83:FWLIB/src/stm32f4xx_spi.c ****      
  84:FWLIB/src/stm32f4xx_spi.c ****   
  85:FWLIB/src/stm32f4xx_spi.c ****  [..] It is possible to use SPI in I2S full duplex mode, in this case, each SPI 
  86:FWLIB/src/stm32f4xx_spi.c ****       peripheral is able to manage sending and receiving data simultaneously
ARM GAS  /tmp/cc7Dtwf5.s 			page 3


  87:FWLIB/src/stm32f4xx_spi.c ****       using two data lines. Each SPI peripheral has an extended block called I2Sxext
  88:FWLIB/src/stm32f4xx_spi.c ****       (ie. I2S2ext for SPI2 and I2S3ext for SPI3).
  89:FWLIB/src/stm32f4xx_spi.c ****       The extension block is not a full SPI IP, it is used only as I2S slave to
  90:FWLIB/src/stm32f4xx_spi.c ****       implement full duplex mode. The extension block uses the same clock sources
  91:FWLIB/src/stm32f4xx_spi.c ****       as its master.          
  92:FWLIB/src/stm32f4xx_spi.c ****       To configure I2S full duplex you have to:
  93:FWLIB/src/stm32f4xx_spi.c ****               
  94:FWLIB/src/stm32f4xx_spi.c ****       (#) Configure SPIx in I2S mode (I2S_Init() function) as described above. 
  95:FWLIB/src/stm32f4xx_spi.c ****              
  96:FWLIB/src/stm32f4xx_spi.c ****       (#) Call the I2S_FullDuplexConfig() function using the same structure passed to  
  97:FWLIB/src/stm32f4xx_spi.c ****           I2S_Init() function.
  98:FWLIB/src/stm32f4xx_spi.c ****               
  99:FWLIB/src/stm32f4xx_spi.c ****       (#) Call I2S_Cmd() for SPIx then for its extended block.
 100:FWLIB/src/stm32f4xx_spi.c ****             
 101:FWLIB/src/stm32f4xx_spi.c ****       (#) To configure interrupts or DMA requests and to get/clear flag status, 
 102:FWLIB/src/stm32f4xx_spi.c ****           use I2Sxext instance for the extension block.
 103:FWLIB/src/stm32f4xx_spi.c ****                
 104:FWLIB/src/stm32f4xx_spi.c ****  [..] Functions that can be called with I2Sxext instances are: I2S_Cmd(), 
 105:FWLIB/src/stm32f4xx_spi.c ****       I2S_FullDuplexConfig(), SPI_I2S_ReceiveData(), SPI_I2S_SendData(), 
 106:FWLIB/src/stm32f4xx_spi.c ****       SPI_I2S_DMACmd(), SPI_I2S_ITConfig(), SPI_I2S_GetFlagStatus(), 
 107:FWLIB/src/stm32f4xx_spi.c ****       SPI_I2S_ClearFlag(), SPI_I2S_GetITStatus() and SPI_I2S_ClearITPendingBit().
 108:FWLIB/src/stm32f4xx_spi.c ****                    
 109:FWLIB/src/stm32f4xx_spi.c ****       Example: To use SPI3 in Full duplex mode (SPI3 is Master Tx, I2S3ext is Slave Rx):
 110:FWLIB/src/stm32f4xx_spi.c ****               
 111:FWLIB/src/stm32f4xx_spi.c ****       RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI3, ENABLE);   
 112:FWLIB/src/stm32f4xx_spi.c ****       I2S_StructInit(&I2SInitStruct);
 113:FWLIB/src/stm32f4xx_spi.c ****       I2SInitStruct.Mode = I2S_Mode_MasterTx;     
 114:FWLIB/src/stm32f4xx_spi.c ****       I2S_Init(SPI3, &I2SInitStruct);
 115:FWLIB/src/stm32f4xx_spi.c ****       I2S_FullDuplexConfig(SPI3ext, &I2SInitStruct)
 116:FWLIB/src/stm32f4xx_spi.c ****       I2S_Cmd(SPI3, ENABLE);
 117:FWLIB/src/stm32f4xx_spi.c ****       I2S_Cmd(SPI3ext, ENABLE);
 118:FWLIB/src/stm32f4xx_spi.c ****       ...
 119:FWLIB/src/stm32f4xx_spi.c ****       while (SPI_I2S_GetFlagStatus(SPI2, SPI_FLAG_TXE) == RESET)
 120:FWLIB/src/stm32f4xx_spi.c ****       {}
 121:FWLIB/src/stm32f4xx_spi.c ****       SPI_I2S_SendData(SPI3, txdata[i]);
 122:FWLIB/src/stm32f4xx_spi.c ****       ...  
 123:FWLIB/src/stm32f4xx_spi.c ****       while (SPI_I2S_GetFlagStatus(I2S3ext, SPI_FLAG_RXNE) == RESET)
 124:FWLIB/src/stm32f4xx_spi.c ****       {}
 125:FWLIB/src/stm32f4xx_spi.c ****       rxdata[i] = SPI_I2S_ReceiveData(I2S3ext);
 126:FWLIB/src/stm32f4xx_spi.c ****       ...          
 127:FWLIB/src/stm32f4xx_spi.c ****                 
 128:FWLIB/src/stm32f4xx_spi.c ****  [..]       
 129:FWLIB/src/stm32f4xx_spi.c ****    (@) In I2S mode: if an external clock is used as source clock for the I2S,  
 130:FWLIB/src/stm32f4xx_spi.c ****        then the define I2S_EXTERNAL_CLOCK_VAL in file stm32f4xx_conf.h should 
 131:FWLIB/src/stm32f4xx_spi.c ****        be enabled and set to the value of the source clock frequency (in Hz).
 132:FWLIB/src/stm32f4xx_spi.c ****    
 133:FWLIB/src/stm32f4xx_spi.c ****    (@) In SPI mode: To use the SPI TI mode, call the function SPI_TIModeCmd() 
 134:FWLIB/src/stm32f4xx_spi.c ****        just after calling the function SPI_Init().
 135:FWLIB/src/stm32f4xx_spi.c ****   
 136:FWLIB/src/stm32f4xx_spi.c **** @endverbatim  
 137:FWLIB/src/stm32f4xx_spi.c ****   *                                  
 138:FWLIB/src/stm32f4xx_spi.c ****   ******************************************************************************
 139:FWLIB/src/stm32f4xx_spi.c ****   * @attention
 140:FWLIB/src/stm32f4xx_spi.c ****   *
 141:FWLIB/src/stm32f4xx_spi.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
 142:FWLIB/src/stm32f4xx_spi.c ****   *
 143:FWLIB/src/stm32f4xx_spi.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
ARM GAS  /tmp/cc7Dtwf5.s 			page 4


 144:FWLIB/src/stm32f4xx_spi.c ****   * You may not use this file except in compliance with the License.
 145:FWLIB/src/stm32f4xx_spi.c ****   * You may obtain a copy of the License at:
 146:FWLIB/src/stm32f4xx_spi.c ****   *
 147:FWLIB/src/stm32f4xx_spi.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 148:FWLIB/src/stm32f4xx_spi.c ****   *
 149:FWLIB/src/stm32f4xx_spi.c ****   * Unless required by applicable law or agreed to in writing, software 
 150:FWLIB/src/stm32f4xx_spi.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 151:FWLIB/src/stm32f4xx_spi.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 152:FWLIB/src/stm32f4xx_spi.c ****   * See the License for the specific language governing permissions and
 153:FWLIB/src/stm32f4xx_spi.c ****   * limitations under the License.
 154:FWLIB/src/stm32f4xx_spi.c ****   *
 155:FWLIB/src/stm32f4xx_spi.c ****   ******************************************************************************  
 156:FWLIB/src/stm32f4xx_spi.c ****   */ 
 157:FWLIB/src/stm32f4xx_spi.c **** 
 158:FWLIB/src/stm32f4xx_spi.c **** /* Includes ------------------------------------------------------------------*/
 159:FWLIB/src/stm32f4xx_spi.c **** #include "stm32f4xx_spi.h"
 160:FWLIB/src/stm32f4xx_spi.c **** #include "stm32f4xx_rcc.h"
 161:FWLIB/src/stm32f4xx_spi.c **** 
 162:FWLIB/src/stm32f4xx_spi.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 163:FWLIB/src/stm32f4xx_spi.c ****   * @{
 164:FWLIB/src/stm32f4xx_spi.c ****   */
 165:FWLIB/src/stm32f4xx_spi.c **** 
 166:FWLIB/src/stm32f4xx_spi.c **** /** @defgroup SPI 
 167:FWLIB/src/stm32f4xx_spi.c ****   * @brief SPI driver modules
 168:FWLIB/src/stm32f4xx_spi.c ****   * @{
 169:FWLIB/src/stm32f4xx_spi.c ****   */ 
 170:FWLIB/src/stm32f4xx_spi.c **** 
 171:FWLIB/src/stm32f4xx_spi.c **** /* Private typedef -----------------------------------------------------------*/
 172:FWLIB/src/stm32f4xx_spi.c **** /* Private define ------------------------------------------------------------*/
 173:FWLIB/src/stm32f4xx_spi.c **** 
 174:FWLIB/src/stm32f4xx_spi.c **** /* SPI registers Masks */
 175:FWLIB/src/stm32f4xx_spi.c **** #define CR1_CLEAR_MASK            ((uint16_t)0x3040)
 176:FWLIB/src/stm32f4xx_spi.c **** #define I2SCFGR_CLEAR_MASK        ((uint16_t)0xF040)
 177:FWLIB/src/stm32f4xx_spi.c **** 
 178:FWLIB/src/stm32f4xx_spi.c **** /* RCC PLLs masks */
 179:FWLIB/src/stm32f4xx_spi.c **** #define PLLCFGR_PPLR_MASK         ((uint32_t)0x70000000)
 180:FWLIB/src/stm32f4xx_spi.c **** #define PLLCFGR_PPLN_MASK         ((uint32_t)0x00007FC0)
 181:FWLIB/src/stm32f4xx_spi.c **** 
 182:FWLIB/src/stm32f4xx_spi.c **** #define SPI_CR2_FRF               ((uint16_t)0x0010)
 183:FWLIB/src/stm32f4xx_spi.c **** #define SPI_SR_TIFRFE             ((uint16_t)0x0100)
 184:FWLIB/src/stm32f4xx_spi.c **** 
 185:FWLIB/src/stm32f4xx_spi.c **** /* Private macro -------------------------------------------------------------*/
 186:FWLIB/src/stm32f4xx_spi.c **** /* Private variables ---------------------------------------------------------*/
 187:FWLIB/src/stm32f4xx_spi.c **** /* Private function prototypes -----------------------------------------------*/
 188:FWLIB/src/stm32f4xx_spi.c **** /* Private functions ---------------------------------------------------------*/
 189:FWLIB/src/stm32f4xx_spi.c **** 
 190:FWLIB/src/stm32f4xx_spi.c **** /** @defgroup SPI_Private_Functions
 191:FWLIB/src/stm32f4xx_spi.c ****   * @{
 192:FWLIB/src/stm32f4xx_spi.c ****   */
 193:FWLIB/src/stm32f4xx_spi.c **** 
 194:FWLIB/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group1 Initialization and Configuration functions
 195:FWLIB/src/stm32f4xx_spi.c ****  *  @brief   Initialization and Configuration functions 
 196:FWLIB/src/stm32f4xx_spi.c ****  *
 197:FWLIB/src/stm32f4xx_spi.c **** @verbatim   
 198:FWLIB/src/stm32f4xx_spi.c ****  ===============================================================================
 199:FWLIB/src/stm32f4xx_spi.c ****              ##### Initialization and Configuration functions ##### 
 200:FWLIB/src/stm32f4xx_spi.c ****  ===============================================================================  
ARM GAS  /tmp/cc7Dtwf5.s 			page 5


 201:FWLIB/src/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to initialize the SPI 
 202:FWLIB/src/stm32f4xx_spi.c ****       Direction, SPI Mode, SPI Data Size, SPI Polarity, SPI Phase, SPI NSS 
 203:FWLIB/src/stm32f4xx_spi.c ****       Management, SPI Baud Rate Prescaler, SPI First Bit and SPI CRC Polynomial.
 204:FWLIB/src/stm32f4xx_spi.c ****   
 205:FWLIB/src/stm32f4xx_spi.c ****  [..] The SPI_Init() function follows the SPI configuration procedures for Master 
 206:FWLIB/src/stm32f4xx_spi.c ****       mode and Slave mode (details for these procedures are available in reference 
 207:FWLIB/src/stm32f4xx_spi.c ****       manual (RM0090)).
 208:FWLIB/src/stm32f4xx_spi.c ****   
 209:FWLIB/src/stm32f4xx_spi.c **** @endverbatim
 210:FWLIB/src/stm32f4xx_spi.c ****   * @{
 211:FWLIB/src/stm32f4xx_spi.c ****   */
 212:FWLIB/src/stm32f4xx_spi.c **** 
 213:FWLIB/src/stm32f4xx_spi.c **** /**
 214:FWLIB/src/stm32f4xx_spi.c ****   * @brief  De-initialize the SPIx peripheral registers to their default reset values.
 215:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
 216:FWLIB/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode.   
 217:FWLIB/src/stm32f4xx_spi.c ****   *         
 218:FWLIB/src/stm32f4xx_spi.c ****   * @note   The extended I2S blocks (ie. I2S2ext and I2S3ext blocks) are de-initialized
 219:FWLIB/src/stm32f4xx_spi.c ****   *         when the relative I2S peripheral is de-initialized (the extended block's clock
 220:FWLIB/src/stm32f4xx_spi.c ****   *         is managed by the I2S peripheral clock).
 221:FWLIB/src/stm32f4xx_spi.c ****   *             
 222:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 223:FWLIB/src/stm32f4xx_spi.c ****   */
 224:FWLIB/src/stm32f4xx_spi.c **** void SPI_I2S_DeInit(SPI_TypeDef* SPIx)
 225:FWLIB/src/stm32f4xx_spi.c **** {
  30              		.loc 1 225 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 225 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 226:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 227:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
  40              		.loc 1 227 3 is_stmt 1 view .LVU2
 228:FWLIB/src/stm32f4xx_spi.c **** 
 229:FWLIB/src/stm32f4xx_spi.c ****   if (SPIx == SPI1)
  41              		.loc 1 229 3 view .LVU3
  42              		.loc 1 229 6 is_stmt 0 view .LVU4
  43 0002 2A4B     		ldr	r3, .L15
  44 0004 9842     		cmp	r0, r3
  45 0006 0FD0     		beq	.L9
 230:FWLIB/src/stm32f4xx_spi.c ****   {
 231:FWLIB/src/stm32f4xx_spi.c ****     /* Enable SPI1 reset state */
 232:FWLIB/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);
 233:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI1 from reset state */
 234:FWLIB/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);
 235:FWLIB/src/stm32f4xx_spi.c ****   }
 236:FWLIB/src/stm32f4xx_spi.c ****   else if (SPIx == SPI2)
  46              		.loc 1 236 8 is_stmt 1 view .LVU5
  47              		.loc 1 236 11 is_stmt 0 view .LVU6
  48 0008 294B     		ldr	r3, .L15+4
  49 000a 9842     		cmp	r0, r3
  50 000c 17D0     		beq	.L10
ARM GAS  /tmp/cc7Dtwf5.s 			page 6


 237:FWLIB/src/stm32f4xx_spi.c ****   {
 238:FWLIB/src/stm32f4xx_spi.c ****     /* Enable SPI2 reset state */
 239:FWLIB/src/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);
 240:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI2 from reset state */
 241:FWLIB/src/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);
 242:FWLIB/src/stm32f4xx_spi.c ****   }
 243:FWLIB/src/stm32f4xx_spi.c ****   else if (SPIx == SPI3)
  51              		.loc 1 243 8 is_stmt 1 view .LVU7
  52              		.loc 1 243 11 is_stmt 0 view .LVU8
  53 000e 294B     		ldr	r3, .L15+8
  54 0010 9842     		cmp	r0, r3
  55 0012 1FD0     		beq	.L11
 244:FWLIB/src/stm32f4xx_spi.c ****   {
 245:FWLIB/src/stm32f4xx_spi.c ****     /* Enable SPI3 reset state */
 246:FWLIB/src/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);
 247:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI3 from reset state */
 248:FWLIB/src/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
 249:FWLIB/src/stm32f4xx_spi.c ****   }
 250:FWLIB/src/stm32f4xx_spi.c ****   else if (SPIx == SPI4)
  56              		.loc 1 250 8 is_stmt 1 view .LVU9
  57              		.loc 1 250 11 is_stmt 0 view .LVU10
  58 0014 284B     		ldr	r3, .L15+12
  59 0016 9842     		cmp	r0, r3
  60 0018 27D0     		beq	.L12
 251:FWLIB/src/stm32f4xx_spi.c ****   {
 252:FWLIB/src/stm32f4xx_spi.c ****     /* Enable SPI4 reset state */
 253:FWLIB/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI4, ENABLE);
 254:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI4 from reset state */
 255:FWLIB/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI4, DISABLE);
 256:FWLIB/src/stm32f4xx_spi.c ****   }
 257:FWLIB/src/stm32f4xx_spi.c ****   else if (SPIx == SPI5)
  61              		.loc 1 257 8 is_stmt 1 view .LVU11
  62              		.loc 1 257 11 is_stmt 0 view .LVU12
  63 001a 284B     		ldr	r3, .L15+16
  64 001c 9842     		cmp	r0, r3
  65 001e 2FD0     		beq	.L13
 258:FWLIB/src/stm32f4xx_spi.c ****   {
 259:FWLIB/src/stm32f4xx_spi.c ****     /* Enable SPI5 reset state */
 260:FWLIB/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI5, ENABLE);
 261:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI5 from reset state */
 262:FWLIB/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI5, DISABLE);
 263:FWLIB/src/stm32f4xx_spi.c ****   }
 264:FWLIB/src/stm32f4xx_spi.c ****   else 
 265:FWLIB/src/stm32f4xx_spi.c ****   {
 266:FWLIB/src/stm32f4xx_spi.c ****     if (SPIx == SPI6)
  66              		.loc 1 266 5 is_stmt 1 view .LVU13
  67              		.loc 1 266 8 is_stmt 0 view .LVU14
  68 0020 274B     		ldr	r3, .L15+20
  69 0022 9842     		cmp	r0, r3
  70 0024 37D0     		beq	.L14
  71              	.LVL1:
  72              	.L1:
 267:FWLIB/src/stm32f4xx_spi.c ****     {
 268:FWLIB/src/stm32f4xx_spi.c ****       /* Enable SPI6 reset state */
 269:FWLIB/src/stm32f4xx_spi.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI6, ENABLE);
 270:FWLIB/src/stm32f4xx_spi.c ****       /* Release SPI6 from reset state */
 271:FWLIB/src/stm32f4xx_spi.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI6, DISABLE);
ARM GAS  /tmp/cc7Dtwf5.s 			page 7


 272:FWLIB/src/stm32f4xx_spi.c ****     }
 273:FWLIB/src/stm32f4xx_spi.c ****   }
 274:FWLIB/src/stm32f4xx_spi.c **** }
  73              		.loc 1 274 1 view .LVU15
  74 0026 08BD     		pop	{r3, pc}
  75              	.LVL2:
  76              	.L9:
 232:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI1 from reset state */
  77              		.loc 1 232 5 is_stmt 1 view .LVU16
  78 0028 0121     		movs	r1, #1
  79 002a 4FF48050 		mov	r0, #4096
  80              	.LVL3:
 232:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI1 from reset state */
  81              		.loc 1 232 5 is_stmt 0 view .LVU17
  82 002e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  83              	.LVL4:
 234:FWLIB/src/stm32f4xx_spi.c ****   }
  84              		.loc 1 234 5 is_stmt 1 view .LVU18
  85 0032 0021     		movs	r1, #0
  86 0034 4FF48050 		mov	r0, #4096
  87 0038 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  88              	.LVL5:
  89 003c F3E7     		b	.L1
  90              	.LVL6:
  91              	.L10:
 239:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI2 from reset state */
  92              		.loc 1 239 5 view .LVU19
  93 003e 0121     		movs	r1, #1
  94 0040 4FF48040 		mov	r0, #16384
  95              	.LVL7:
 239:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI2 from reset state */
  96              		.loc 1 239 5 is_stmt 0 view .LVU20
  97 0044 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  98              	.LVL8:
 241:FWLIB/src/stm32f4xx_spi.c ****   }
  99              		.loc 1 241 5 is_stmt 1 view .LVU21
 100 0048 0021     		movs	r1, #0
 101 004a 4FF48040 		mov	r0, #16384
 102 004e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 103              	.LVL9:
 104 0052 E8E7     		b	.L1
 105              	.LVL10:
 106              	.L11:
 246:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI3 from reset state */
 107              		.loc 1 246 5 view .LVU22
 108 0054 0121     		movs	r1, #1
 109 0056 4FF40040 		mov	r0, #32768
 110              	.LVL11:
 246:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI3 from reset state */
 111              		.loc 1 246 5 is_stmt 0 view .LVU23
 112 005a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 113              	.LVL12:
 248:FWLIB/src/stm32f4xx_spi.c ****   }
 114              		.loc 1 248 5 is_stmt 1 view .LVU24
 115 005e 0021     		movs	r1, #0
 116 0060 4FF40040 		mov	r0, #32768
 117 0064 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
ARM GAS  /tmp/cc7Dtwf5.s 			page 8


 118              	.LVL13:
 119 0068 DDE7     		b	.L1
 120              	.LVL14:
 121              	.L12:
 253:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI4 from reset state */
 122              		.loc 1 253 5 view .LVU25
 123 006a 0121     		movs	r1, #1
 124 006c 4FF40050 		mov	r0, #8192
 125              	.LVL15:
 253:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI4 from reset state */
 126              		.loc 1 253 5 is_stmt 0 view .LVU26
 127 0070 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 128              	.LVL16:
 255:FWLIB/src/stm32f4xx_spi.c ****   }
 129              		.loc 1 255 5 is_stmt 1 view .LVU27
 130 0074 0021     		movs	r1, #0
 131 0076 4FF40050 		mov	r0, #8192
 132 007a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 133              	.LVL17:
 134 007e D2E7     		b	.L1
 135              	.LVL18:
 136              	.L13:
 260:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI5 from reset state */
 137              		.loc 1 260 5 view .LVU28
 138 0080 0121     		movs	r1, #1
 139 0082 4FF48010 		mov	r0, #1048576
 140              	.LVL19:
 260:FWLIB/src/stm32f4xx_spi.c ****     /* Release SPI5 from reset state */
 141              		.loc 1 260 5 is_stmt 0 view .LVU29
 142 0086 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 143              	.LVL20:
 262:FWLIB/src/stm32f4xx_spi.c ****   }
 144              		.loc 1 262 5 is_stmt 1 view .LVU30
 145 008a 0021     		movs	r1, #0
 146 008c 4FF48010 		mov	r0, #1048576
 147 0090 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 148              	.LVL21:
 149 0094 C7E7     		b	.L1
 150              	.LVL22:
 151              	.L14:
 269:FWLIB/src/stm32f4xx_spi.c ****       /* Release SPI6 from reset state */
 152              		.loc 1 269 7 view .LVU31
 153 0096 0121     		movs	r1, #1
 154 0098 4FF40010 		mov	r0, #2097152
 155              	.LVL23:
 269:FWLIB/src/stm32f4xx_spi.c ****       /* Release SPI6 from reset state */
 156              		.loc 1 269 7 is_stmt 0 view .LVU32
 157 009c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 158              	.LVL24:
 271:FWLIB/src/stm32f4xx_spi.c ****     }
 159              		.loc 1 271 7 is_stmt 1 view .LVU33
 160 00a0 0021     		movs	r1, #0
 161 00a2 4FF40010 		mov	r0, #2097152
 162 00a6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 163              	.LVL25:
 164              		.loc 1 274 1 is_stmt 0 view .LVU34
 165 00aa BCE7     		b	.L1
ARM GAS  /tmp/cc7Dtwf5.s 			page 9


 166              	.L16:
 167              		.align	2
 168              	.L15:
 169 00ac 00300140 		.word	1073819648
 170 00b0 00380040 		.word	1073756160
 171 00b4 003C0040 		.word	1073757184
 172 00b8 00340140 		.word	1073820672
 173 00bc 00500140 		.word	1073827840
 174 00c0 00540140 		.word	1073828864
 175              		.cfi_endproc
 176              	.LFE123:
 178              		.section	.text.SPI_Init,"ax",%progbits
 179              		.align	1
 180              		.global	SPI_Init
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	SPI_Init:
 187              	.LVL26:
 188              	.LFB124:
 275:FWLIB/src/stm32f4xx_spi.c **** 
 276:FWLIB/src/stm32f4xx_spi.c **** /**
 277:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 278:FWLIB/src/stm32f4xx_spi.c ****   *         parameters in the SPI_InitStruct.
 279:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 280:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
 281:FWLIB/src/stm32f4xx_spi.c ****   *         contains the configuration information for the specified SPI peripheral.
 282:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 283:FWLIB/src/stm32f4xx_spi.c ****   */
 284:FWLIB/src/stm32f4xx_spi.c **** void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
 285:FWLIB/src/stm32f4xx_spi.c **** {
 189              		.loc 1 285 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		.loc 1 285 1 is_stmt 0 view .LVU36
 194 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 195              	.LCFI1:
 196              		.cfi_def_cfa_offset 24
 197              		.cfi_offset 4, -24
 198              		.cfi_offset 5, -20
 199              		.cfi_offset 6, -16
 200              		.cfi_offset 7, -12
 201              		.cfi_offset 8, -8
 202              		.cfi_offset 14, -4
 286:FWLIB/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0;
 203              		.loc 1 286 3 is_stmt 1 view .LVU37
 204              	.LVL27:
 287:FWLIB/src/stm32f4xx_spi.c ****   
 288:FWLIB/src/stm32f4xx_spi.c ****   /* check the parameters */
 289:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 205              		.loc 1 289 3 view .LVU38
 290:FWLIB/src/stm32f4xx_spi.c ****   
 291:FWLIB/src/stm32f4xx_spi.c ****   /* Check the SPI parameters */
 292:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(SPI_InitStruct->SPI_Direction));
 206              		.loc 1 292 3 view .LVU39
ARM GAS  /tmp/cc7Dtwf5.s 			page 10


 293:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_MODE(SPI_InitStruct->SPI_Mode));
 207              		.loc 1 293 3 view .LVU40
 294:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_InitStruct->SPI_DataSize));
 208              		.loc 1 294 3 view .LVU41
 295:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
 209              		.loc 1 295 3 view .LVU42
 296:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
 210              		.loc 1 296 3 view .LVU43
 297:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_NSS(SPI_InitStruct->SPI_NSS));
 211              		.loc 1 297 3 view .LVU44
 298:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
 212              		.loc 1 298 3 view .LVU45
 299:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
 213              		.loc 1 299 3 view .LVU46
 300:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
 214              		.loc 1 300 3 view .LVU47
 301:FWLIB/src/stm32f4xx_spi.c **** 
 302:FWLIB/src/stm32f4xx_spi.c **** /*---------------------------- SPIx CR1 Configuration ------------------------*/
 303:FWLIB/src/stm32f4xx_spi.c ****   /* Get the SPIx CR1 value */
 304:FWLIB/src/stm32f4xx_spi.c ****   tmpreg = SPIx->CR1;
 215              		.loc 1 304 3 view .LVU48
 216              		.loc 1 304 10 is_stmt 0 view .LVU49
 217 0004 0388     		ldrh	r3, [r0]
 218              	.LVL28:
 305:FWLIB/src/stm32f4xx_spi.c ****   /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, MSTR, CPOL and CPHA bits */
 306:FWLIB/src/stm32f4xx_spi.c ****   tmpreg &= CR1_CLEAR_MASK;
 219              		.loc 1 306 3 is_stmt 1 view .LVU50
 220              		.loc 1 306 10 is_stmt 0 view .LVU51
 221 0006 03F44152 		and	r2, r3, #12352
 222              	.LVL29:
 307:FWLIB/src/stm32f4xx_spi.c ****   /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
 308:FWLIB/src/stm32f4xx_spi.c ****      master/salve mode, CPOL and CPHA */
 309:FWLIB/src/stm32f4xx_spi.c ****   /* Set BIDImode, BIDIOE and RxONLY bits according to SPI_Direction value */
 310:FWLIB/src/stm32f4xx_spi.c ****   /* Set SSM, SSI and MSTR bits according to SPI_Mode and SPI_NSS values */
 311:FWLIB/src/stm32f4xx_spi.c ****   /* Set LSBFirst bit according to SPI_FirstBit value */
 312:FWLIB/src/stm32f4xx_spi.c ****   /* Set BR bits according to SPI_BaudRatePrescaler value */
 313:FWLIB/src/stm32f4xx_spi.c ****   /* Set CPOL bit according to SPI_CPOL value */
 314:FWLIB/src/stm32f4xx_spi.c ****   /* Set CPHA bit according to SPI_CPHA value */
 315:FWLIB/src/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 223              		.loc 1 315 3 is_stmt 1 view .LVU52
 224              		.loc 1 315 48 is_stmt 0 view .LVU53
 225 000a B1F800E0 		ldrh	lr, [r1]
 226              		.loc 1 315 80 view .LVU54
 227 000e B1F80280 		ldrh	r8, [r1, #2]
 316:FWLIB/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 228              		.loc 1 316 33 view .LVU55
 229 0012 B1F804C0 		ldrh	ip, [r1, #4]
 230              		.loc 1 316 64 view .LVU56
 231 0016 CF88     		ldrh	r7, [r1, #6]
 317:FWLIB/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
 232              		.loc 1 317 33 view .LVU57
 233 0018 0E89     		ldrh	r6, [r1, #8]
 234              		.loc 1 317 60 view .LVU58
 235 001a 4D89     		ldrh	r5, [r1, #10]
 318:FWLIB/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
 236              		.loc 1 318 33 view .LVU59
 237 001c 8C89     		ldrh	r4, [r1, #12]
ARM GAS  /tmp/cc7Dtwf5.s 			page 11


 238              		.loc 1 318 73 view .LVU60
 239 001e CB89     		ldrh	r3, [r1, #14]
 315:FWLIB/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 240              		.loc 1 315 13 view .LVU61
 241 0020 4EEA080E 		orr	lr, lr, r8
 242 0024 4CEA0E0C 		orr	ip, ip, lr
 243 0028 47EA0C07 		orr	r7, r7, ip
 244 002c 3E43     		orrs	r6, r6, r7
 245 002e 3543     		orrs	r5, r5, r6
 246 0030 2C43     		orrs	r4, r4, r5
 247 0032 2343     		orrs	r3, r3, r4
 315:FWLIB/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 248              		.loc 1 315 10 view .LVU62
 249 0034 1343     		orrs	r3, r3, r2
 250              	.LVL30:
 319:FWLIB/src/stm32f4xx_spi.c ****   /* Write to SPIx CR1 */
 320:FWLIB/src/stm32f4xx_spi.c ****   SPIx->CR1 = tmpreg;
 251              		.loc 1 320 3 is_stmt 1 view .LVU63
 252              		.loc 1 320 13 is_stmt 0 view .LVU64
 253 0036 0380     		strh	r3, [r0]	@ movhi
 321:FWLIB/src/stm32f4xx_spi.c **** 
 322:FWLIB/src/stm32f4xx_spi.c ****   /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
 323:FWLIB/src/stm32f4xx_spi.c ****   SPIx->I2SCFGR &= (uint16_t)~((uint16_t)SPI_I2SCFGR_I2SMOD);
 254              		.loc 1 323 3 is_stmt 1 view .LVU65
 255              		.loc 1 323 17 is_stmt 0 view .LVU66
 256 0038 838B     		ldrh	r3, [r0, #28]
 257              	.LVL31:
 258              		.loc 1 323 17 view .LVU67
 259 003a 9BB2     		uxth	r3, r3
 260 003c 23F40063 		bic	r3, r3, #2048
 261 0040 9BB2     		uxth	r3, r3
 262 0042 8383     		strh	r3, [r0, #28]	@ movhi
 263              	.LVL32:
 324:FWLIB/src/stm32f4xx_spi.c **** /*---------------------------- SPIx CRCPOLY Configuration --------------------*/
 325:FWLIB/src/stm32f4xx_spi.c ****   /* Write to SPIx CRCPOLY */
 326:FWLIB/src/stm32f4xx_spi.c ****   SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
 264              		.loc 1 326 3 is_stmt 1 view .LVU68
 265              		.loc 1 326 31 is_stmt 0 view .LVU69
 266 0044 0B8A     		ldrh	r3, [r1, #16]
 267              		.loc 1 326 15 view .LVU70
 268 0046 0382     		strh	r3, [r0, #16]	@ movhi
 327:FWLIB/src/stm32f4xx_spi.c **** }
 269              		.loc 1 327 1 view .LVU71
 270 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 271              		.cfi_endproc
 272              	.LFE124:
 274              		.section	.text.I2S_Init,"ax",%progbits
 275              		.align	1
 276              		.global	I2S_Init
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv4-sp-d16
 282              	I2S_Init:
 283              	.LVL33:
 284              	.LFB125:
 328:FWLIB/src/stm32f4xx_spi.c **** 
ARM GAS  /tmp/cc7Dtwf5.s 			page 12


 329:FWLIB/src/stm32f4xx_spi.c **** /**
 330:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 331:FWLIB/src/stm32f4xx_spi.c ****   *         parameters in the I2S_InitStruct.
 332:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be  2 or 3 to select the SPI peripheral (configured in I2S mode).
 333:FWLIB/src/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 334:FWLIB/src/stm32f4xx_spi.c ****   *         contains the configuration information for the specified SPI peripheral
 335:FWLIB/src/stm32f4xx_spi.c ****   *         configured in I2S mode.
 336:FWLIB/src/stm32f4xx_spi.c ****   *           
 337:FWLIB/src/stm32f4xx_spi.c ****   * @note   The function calculates the optimal prescaler needed to obtain the most 
 338:FWLIB/src/stm32f4xx_spi.c ****   *         accurate audio frequency (depending on the I2S clock source, the PLL values 
 339:FWLIB/src/stm32f4xx_spi.c ****   *         and the product configuration). But in case the prescaler value is greater 
 340:FWLIB/src/stm32f4xx_spi.c ****   *         than 511, the default value (0x02) will be configured instead.    
 341:FWLIB/src/stm32f4xx_spi.c ****   * 
 342:FWLIB/src/stm32f4xx_spi.c ****   * @note   if an external clock is used as source clock for the I2S, then the define
 343:FWLIB/src/stm32f4xx_spi.c ****   *         I2S_EXTERNAL_CLOCK_VAL in file stm32f4xx_conf.h should be enabled and set
 344:FWLIB/src/stm32f4xx_spi.c ****   *         to the value of the source clock frequency (in Hz).
 345:FWLIB/src/stm32f4xx_spi.c ****   *  
 346:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 347:FWLIB/src/stm32f4xx_spi.c ****   */
 348:FWLIB/src/stm32f4xx_spi.c **** void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
 349:FWLIB/src/stm32f4xx_spi.c **** {
 285              		.loc 1 349 1 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              		.loc 1 349 1 is_stmt 0 view .LVU73
 291 0000 F0B4     		push	{r4, r5, r6, r7}
 292              	.LCFI2:
 293              		.cfi_def_cfa_offset 16
 294              		.cfi_offset 4, -16
 295              		.cfi_offset 5, -12
 296              		.cfi_offset 6, -8
 297              		.cfi_offset 7, -4
 350:FWLIB/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 298              		.loc 1 350 3 is_stmt 1 view .LVU74
 299              	.LVL34:
 351:FWLIB/src/stm32f4xx_spi.c ****   uint32_t tmp = 0, i2sclk = 0;
 300              		.loc 1 351 3 view .LVU75
 352:FWLIB/src/stm32f4xx_spi.c **** #ifndef I2S_EXTERNAL_CLOCK_VAL
 353:FWLIB/src/stm32f4xx_spi.c ****   uint32_t pllm = 0, plln = 0, pllr = 0;
 301              		.loc 1 353 3 view .LVU76
 354:FWLIB/src/stm32f4xx_spi.c **** #endif /* I2S_EXTERNAL_CLOCK_VAL */
 355:FWLIB/src/stm32f4xx_spi.c ****   
 356:FWLIB/src/stm32f4xx_spi.c ****   /* Check the I2S parameters */
 357:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 302              		.loc 1 357 3 view .LVU77
 358:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 303              		.loc 1 358 3 view .LVU78
 359:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 304              		.loc 1 359 3 view .LVU79
 360:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 305              		.loc 1 360 3 view .LVU80
 361:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_MCLK_OUTPUT(I2S_InitStruct->I2S_MCLKOutput));
 306              		.loc 1 361 3 view .LVU81
 362:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
 307              		.loc 1 362 3 view .LVU82
ARM GAS  /tmp/cc7Dtwf5.s 			page 13


 363:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 308              		.loc 1 363 3 view .LVU83
 364:FWLIB/src/stm32f4xx_spi.c **** 
 365:FWLIB/src/stm32f4xx_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 366:FWLIB/src/stm32f4xx_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 367:FWLIB/src/stm32f4xx_spi.c ****   SPIx->I2SCFGR &= I2SCFGR_CLEAR_MASK; 
 309              		.loc 1 367 3 view .LVU84
 310              		.loc 1 367 17 is_stmt 0 view .LVU85
 311 0002 838B     		ldrh	r3, [r0, #28]
 312 0004 9BB2     		uxth	r3, r3
 313 0006 23F47B63 		bic	r3, r3, #4016
 314 000a 23F00F03 		bic	r3, r3, #15
 315 000e 9BB2     		uxth	r3, r3
 316 0010 8383     		strh	r3, [r0, #28]	@ movhi
 368:FWLIB/src/stm32f4xx_spi.c ****   SPIx->I2SPR = 0x0002;
 317              		.loc 1 368 3 is_stmt 1 view .LVU86
 318              		.loc 1 368 15 is_stmt 0 view .LVU87
 319 0012 0223     		movs	r3, #2
 320 0014 0384     		strh	r3, [r0, #32]	@ movhi
 369:FWLIB/src/stm32f4xx_spi.c ****   
 370:FWLIB/src/stm32f4xx_spi.c ****   /* Get the I2SCFGR register value */
 371:FWLIB/src/stm32f4xx_spi.c ****   tmpreg = SPIx->I2SCFGR;
 321              		.loc 1 371 3 is_stmt 1 view .LVU88
 322              		.loc 1 371 10 is_stmt 0 view .LVU89
 323 0016 828B     		ldrh	r2, [r0, #28]
 324 0018 92B2     		uxth	r2, r2
 325              	.LVL35:
 372:FWLIB/src/stm32f4xx_spi.c ****   
 373:FWLIB/src/stm32f4xx_spi.c ****   /* If the default value has to be written, reinitialize i2sdiv and i2sodd*/
 374:FWLIB/src/stm32f4xx_spi.c ****   if(I2S_InitStruct->I2S_AudioFreq == I2S_AudioFreq_Default)
 326              		.loc 1 374 3 is_stmt 1 view .LVU90
 327              		.loc 1 374 20 is_stmt 0 view .LVU91
 328 001a 8B68     		ldr	r3, [r1, #8]
 329              		.loc 1 374 5 view .LVU92
 330 001c 022B     		cmp	r3, #2
 331 001e 68D0     		beq	.L28
 375:FWLIB/src/stm32f4xx_spi.c ****   {
 376:FWLIB/src/stm32f4xx_spi.c ****     i2sodd = (uint16_t)0;
 377:FWLIB/src/stm32f4xx_spi.c ****     i2sdiv = (uint16_t)2;   
 378:FWLIB/src/stm32f4xx_spi.c ****   }
 379:FWLIB/src/stm32f4xx_spi.c ****   /* If the requested audio frequency is not the default, compute the prescaler */
 380:FWLIB/src/stm32f4xx_spi.c ****   else
 381:FWLIB/src/stm32f4xx_spi.c ****   {
 382:FWLIB/src/stm32f4xx_spi.c ****     /* Check the frame length (For the Prescaler computing) *******************/
 383:FWLIB/src/stm32f4xx_spi.c ****     if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
 332              		.loc 1 383 5 is_stmt 1 view .LVU93
 333              		.loc 1 383 22 is_stmt 0 view .LVU94
 334 0020 8B88     		ldrh	r3, [r1, #4]
 335              		.loc 1 383 7 view .LVU95
 336 0022 002B     		cmp	r3, #0
 337 0024 51D1     		bne	.L29
 384:FWLIB/src/stm32f4xx_spi.c ****     {
 385:FWLIB/src/stm32f4xx_spi.c ****       /* Packet length is 16 bits */
 386:FWLIB/src/stm32f4xx_spi.c ****       packetlength = 1;
 338              		.loc 1 386 20 view .LVU96
 339 0026 0124     		movs	r4, #1
 340              	.L21:
ARM GAS  /tmp/cc7Dtwf5.s 			page 14


 341              	.LVL36:
 387:FWLIB/src/stm32f4xx_spi.c ****     }
 388:FWLIB/src/stm32f4xx_spi.c ****     else
 389:FWLIB/src/stm32f4xx_spi.c ****     {
 390:FWLIB/src/stm32f4xx_spi.c ****       /* Packet length is 32 bits */
 391:FWLIB/src/stm32f4xx_spi.c ****       packetlength = 2;
 392:FWLIB/src/stm32f4xx_spi.c ****     }
 393:FWLIB/src/stm32f4xx_spi.c **** 
 394:FWLIB/src/stm32f4xx_spi.c ****     /* Get I2S source Clock frequency  ****************************************/
 395:FWLIB/src/stm32f4xx_spi.c ****       
 396:FWLIB/src/stm32f4xx_spi.c ****     /* If an external I2S clock has to be used, this define should be set  
 397:FWLIB/src/stm32f4xx_spi.c ****        in the project configuration or in the stm32f4xx_conf.h file */
 398:FWLIB/src/stm32f4xx_spi.c ****   #ifdef I2S_EXTERNAL_CLOCK_VAL     
 399:FWLIB/src/stm32f4xx_spi.c ****     /* Set external clock as I2S clock source */
 400:FWLIB/src/stm32f4xx_spi.c ****     if ((RCC->CFGR & RCC_CFGR_I2SSRC) == 0)
 401:FWLIB/src/stm32f4xx_spi.c ****     {
 402:FWLIB/src/stm32f4xx_spi.c ****       RCC->CFGR |= (uint32_t)RCC_CFGR_I2SSRC;
 403:FWLIB/src/stm32f4xx_spi.c ****     }
 404:FWLIB/src/stm32f4xx_spi.c ****     
 405:FWLIB/src/stm32f4xx_spi.c ****     /* Set the I2S clock to the external clock  value */
 406:FWLIB/src/stm32f4xx_spi.c ****     i2sclk = I2S_EXTERNAL_CLOCK_VAL;
 407:FWLIB/src/stm32f4xx_spi.c **** 
 408:FWLIB/src/stm32f4xx_spi.c ****   #else /* There is no define for External I2S clock source */
 409:FWLIB/src/stm32f4xx_spi.c ****     /* Set PLLI2S as I2S clock source */
 410:FWLIB/src/stm32f4xx_spi.c ****     if ((RCC->CFGR & RCC_CFGR_I2SSRC) != 0)
 342              		.loc 1 410 5 is_stmt 1 view .LVU97
 343              		.loc 1 410 13 is_stmt 0 view .LVU98
 344 0028 334B     		ldr	r3, .L33
 345 002a 9B68     		ldr	r3, [r3, #8]
 346              		.loc 1 410 8 view .LVU99
 347 002c 13F4000F 		tst	r3, #8388608
 348 0030 04D0     		beq	.L22
 411:FWLIB/src/stm32f4xx_spi.c ****     {
 412:FWLIB/src/stm32f4xx_spi.c ****       RCC->CFGR &= ~(uint32_t)RCC_CFGR_I2SSRC;
 349              		.loc 1 412 7 is_stmt 1 view .LVU100
 350              		.loc 1 412 17 is_stmt 0 view .LVU101
 351 0032 314D     		ldr	r5, .L33
 352 0034 AB68     		ldr	r3, [r5, #8]
 353 0036 23F40003 		bic	r3, r3, #8388608
 354 003a AB60     		str	r3, [r5, #8]
 355              	.L22:
 413:FWLIB/src/stm32f4xx_spi.c ****     }    
 414:FWLIB/src/stm32f4xx_spi.c ****     
 415:FWLIB/src/stm32f4xx_spi.c ****     /* Get the PLLI2SN value */
 416:FWLIB/src/stm32f4xx_spi.c ****     plln = (uint32_t)(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6) & \
 356              		.loc 1 416 5 is_stmt 1 view .LVU102
 357              		.loc 1 416 28 is_stmt 0 view .LVU103
 358 003c 2E4E     		ldr	r6, .L33
 359 003e D6F88450 		ldr	r5, [r6, #132]
 360              		.loc 1 416 10 view .LVU104
 361 0042 C5F38815 		ubfx	r5, r5, #6, #9
 362              	.LVL37:
 417:FWLIB/src/stm32f4xx_spi.c ****                       (RCC_PLLI2SCFGR_PLLI2SN >> 6));
 418:FWLIB/src/stm32f4xx_spi.c ****     
 419:FWLIB/src/stm32f4xx_spi.c ****     /* Get the PLLI2SR value */
 420:FWLIB/src/stm32f4xx_spi.c ****     pllr = (uint32_t)(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28) & \
 363              		.loc 1 420 5 is_stmt 1 view .LVU105
ARM GAS  /tmp/cc7Dtwf5.s 			page 15


 364              		.loc 1 420 28 is_stmt 0 view .LVU106
 365 0046 D6F88430 		ldr	r3, [r6, #132]
 366              		.loc 1 420 10 view .LVU107
 367 004a C3F30273 		ubfx	r3, r3, #28, #3
 368              	.LVL38:
 421:FWLIB/src/stm32f4xx_spi.c ****                       (RCC_PLLI2SCFGR_PLLI2SR >> 28));
 422:FWLIB/src/stm32f4xx_spi.c ****     
 423:FWLIB/src/stm32f4xx_spi.c ****     /* Get the PLLM value */
 424:FWLIB/src/stm32f4xx_spi.c ****     pllm = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 369              		.loc 1 424 5 is_stmt 1 view .LVU108
 370              		.loc 1 424 26 is_stmt 0 view .LVU109
 371 004e 7768     		ldr	r7, [r6, #4]
 372              		.loc 1 424 10 view .LVU110
 373 0050 07F03F07 		and	r7, r7, #63
 374              	.LVL39:
 425:FWLIB/src/stm32f4xx_spi.c **** 
 426:FWLIB/src/stm32f4xx_spi.c ****     if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)
 375              		.loc 1 426 5 is_stmt 1 view .LVU111
 376              		.loc 1 426 12 is_stmt 0 view .LVU112
 377 0054 7668     		ldr	r6, [r6, #4]
 378              		.loc 1 426 7 view .LVU113
 379 0056 16F4800F 		tst	r6, #4194304
 380 005a 38D0     		beq	.L23
 427:FWLIB/src/stm32f4xx_spi.c ****     {
 428:FWLIB/src/stm32f4xx_spi.c ****       /* Get the I2S source clock value */
 429:FWLIB/src/stm32f4xx_spi.c ****       i2sclk = (uint32_t)(((HSE_VALUE / pllm) * plln) / pllr);
 381              		.loc 1 429 7 is_stmt 1 view .LVU114
 382              		.loc 1 429 39 is_stmt 0 view .LVU115
 383 005c 274E     		ldr	r6, .L33+4
 384 005e B6FBF7F7 		udiv	r7, r6, r7
 385              	.LVL40:
 386              		.loc 1 429 47 view .LVU116
 387 0062 05FB07F5 		mul	r5, r5, r7
 388              	.LVL41:
 389              		.loc 1 429 14 view .LVU117
 390 0066 B5FBF3F3 		udiv	r3, r5, r3
 391              	.LVL42:
 392              	.L24:
 430:FWLIB/src/stm32f4xx_spi.c ****     }
 431:FWLIB/src/stm32f4xx_spi.c ****     else
 432:FWLIB/src/stm32f4xx_spi.c ****     { /* Get the I2S source clock value */
 433:FWLIB/src/stm32f4xx_spi.c ****       i2sclk = (uint32_t)(((HSI_VALUE / pllm) * plln) / pllr);
 434:FWLIB/src/stm32f4xx_spi.c ****     }
 435:FWLIB/src/stm32f4xx_spi.c ****   #endif /* I2S_EXTERNAL_CLOCK_VAL */
 436:FWLIB/src/stm32f4xx_spi.c ****     
 437:FWLIB/src/stm32f4xx_spi.c ****     /* Compute the Real divider depending on the MCLK output state, with a floating point */
 438:FWLIB/src/stm32f4xx_spi.c ****     if(I2S_InitStruct->I2S_MCLKOutput == I2S_MCLKOutput_Enable)
 393              		.loc 1 438 5 is_stmt 1 view .LVU118
 394              		.loc 1 438 22 is_stmt 0 view .LVU119
 395 006a CD88     		ldrh	r5, [r1, #6]
 396              		.loc 1 438 7 view .LVU120
 397 006c B5F5007F 		cmp	r5, #512
 398 0070 35D0     		beq	.L32
 439:FWLIB/src/stm32f4xx_spi.c ****     {
 440:FWLIB/src/stm32f4xx_spi.c ****       /* MCLK output is enabled */
 441:FWLIB/src/stm32f4xx_spi.c ****       tmp = (uint16_t)(((((i2sclk / 256) * 10) / I2S_InitStruct->I2S_AudioFreq)) + 5);
 442:FWLIB/src/stm32f4xx_spi.c ****     }
ARM GAS  /tmp/cc7Dtwf5.s 			page 16


 443:FWLIB/src/stm32f4xx_spi.c ****     else
 444:FWLIB/src/stm32f4xx_spi.c ****     {
 445:FWLIB/src/stm32f4xx_spi.c ****       /* MCLK output is disabled */
 446:FWLIB/src/stm32f4xx_spi.c ****       tmp = (uint16_t)(((((i2sclk / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq)) + 
 399              		.loc 1 446 7 is_stmt 1 view .LVU121
 400              		.loc 1 446 41 is_stmt 0 view .LVU122
 401 0072 6401     		lsls	r4, r4, #5
 402              	.LVL43:
 403              		.loc 1 446 35 view .LVU123
 404 0074 B3FBF4F3 		udiv	r3, r3, r4
 405              	.LVL44:
 406              		.loc 1 446 58 view .LVU124
 407 0078 03EB8304 		add	r4, r3, r3, lsl #2
 408 007c 6300     		lsls	r3, r4, #1
 409              		.loc 1 446 80 view .LVU125
 410 007e 8C68     		ldr	r4, [r1, #8]
 411              		.loc 1 446 64 view .LVU126
 412 0080 B3FBF4F3 		udiv	r3, r3, r4
 413              		.loc 1 446 13 view .LVU127
 414 0084 0533     		adds	r3, r3, #5
 415 0086 9BB2     		uxth	r3, r3
 416              	.LVL45:
 417              	.L26:
 447:FWLIB/src/stm32f4xx_spi.c ****     }
 448:FWLIB/src/stm32f4xx_spi.c ****     
 449:FWLIB/src/stm32f4xx_spi.c ****     /* Remove the flatting point */
 450:FWLIB/src/stm32f4xx_spi.c ****     tmp = tmp / 10;  
 418              		.loc 1 450 5 is_stmt 1 view .LVU128
 419              		.loc 1 450 9 is_stmt 0 view .LVU129
 420 0088 1D4C     		ldr	r4, .L33+8
 421 008a A4FB0343 		umull	r4, r3, r4, r3
 422              	.LVL46:
 423              		.loc 1 450 9 view .LVU130
 424 008e DB08     		lsrs	r3, r3, #3
 425              	.LVL47:
 451:FWLIB/src/stm32f4xx_spi.c ****       
 452:FWLIB/src/stm32f4xx_spi.c ****     /* Check the parity of the divider */
 453:FWLIB/src/stm32f4xx_spi.c ****     i2sodd = (uint16_t)(tmp & (uint16_t)0x0001);
 426              		.loc 1 453 5 is_stmt 1 view .LVU131
 427              		.loc 1 453 12 is_stmt 0 view .LVU132
 428 0090 03F00104 		and	r4, r3, #1
 429              	.LVL48:
 454:FWLIB/src/stm32f4xx_spi.c ****    
 455:FWLIB/src/stm32f4xx_spi.c ****     /* Compute the i2sdiv prescaler */
 456:FWLIB/src/stm32f4xx_spi.c ****     i2sdiv = (uint16_t)((tmp - i2sodd) / 2);
 430              		.loc 1 456 5 is_stmt 1 view .LVU133
 431              		.loc 1 456 30 is_stmt 0 view .LVU134
 432 0094 1B1B     		subs	r3, r3, r4
 433              	.LVL49:
 434              		.loc 1 456 12 view .LVU135
 435 0096 C3F34F03 		ubfx	r3, r3, #1, #16
 436              	.LVL50:
 457:FWLIB/src/stm32f4xx_spi.c ****    
 458:FWLIB/src/stm32f4xx_spi.c ****     /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
 459:FWLIB/src/stm32f4xx_spi.c ****     i2sodd = (uint16_t) (i2sodd << 8);
 437              		.loc 1 459 5 is_stmt 1 view .LVU136
 438              		.loc 1 459 12 is_stmt 0 view .LVU137
ARM GAS  /tmp/cc7Dtwf5.s 			page 17


 439 009a 2502     		lsls	r5, r4, #8
 440              	.LVL51:
 441              	.L20:
 460:FWLIB/src/stm32f4xx_spi.c ****   }
 461:FWLIB/src/stm32f4xx_spi.c **** 
 462:FWLIB/src/stm32f4xx_spi.c ****   /* Test if the divider is 1 or 0 or greater than 0xFF */
 463:FWLIB/src/stm32f4xx_spi.c ****   if ((i2sdiv < 2) || (i2sdiv > 0xFF))
 442              		.loc 1 463 3 is_stmt 1 view .LVU138
 443              		.loc 1 463 20 is_stmt 0 view .LVU139
 444 009c 9C1E     		subs	r4, r3, #2
 445 009e A4B2     		uxth	r4, r4
 446              		.loc 1 463 6 view .LVU140
 447 00a0 FD2C     		cmp	r4, #253
 448 00a2 01D9     		bls	.L27
 464:FWLIB/src/stm32f4xx_spi.c ****   {
 465:FWLIB/src/stm32f4xx_spi.c ****     /* Set the default values */
 466:FWLIB/src/stm32f4xx_spi.c ****     i2sdiv = 2;
 467:FWLIB/src/stm32f4xx_spi.c ****     i2sodd = 0;
 449              		.loc 1 467 12 view .LVU141
 450 00a4 0025     		movs	r5, #0
 451              	.LVL52:
 466:FWLIB/src/stm32f4xx_spi.c ****     i2sodd = 0;
 452              		.loc 1 466 12 view .LVU142
 453 00a6 0223     		movs	r3, #2
 454              	.LVL53:
 455              	.L27:
 468:FWLIB/src/stm32f4xx_spi.c ****   }
 469:FWLIB/src/stm32f4xx_spi.c **** 
 470:FWLIB/src/stm32f4xx_spi.c ****   /* Write to SPIx I2SPR register the computed value */
 471:FWLIB/src/stm32f4xx_spi.c ****   SPIx->I2SPR = (uint16_t)((uint16_t)i2sdiv | (uint16_t)(i2sodd | (uint16_t)I2S_InitStruct->I2S_MCL
 456              		.loc 1 471 3 is_stmt 1 view .LVU143
 457              		.loc 1 471 91 is_stmt 0 view .LVU144
 458 00a8 CC88     		ldrh	r4, [r1, #6]
 459              		.loc 1 471 47 view .LVU145
 460 00aa 2C43     		orrs	r4, r4, r5
 461              		.loc 1 471 17 view .LVU146
 462 00ac 2343     		orrs	r3, r3, r4
 463              	.LVL54:
 464              		.loc 1 471 15 view .LVU147
 465 00ae 0384     		strh	r3, [r0, #32]	@ movhi
 472:FWLIB/src/stm32f4xx_spi.c ****  
 473:FWLIB/src/stm32f4xx_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 474:FWLIB/src/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 466              		.loc 1 474 3 is_stmt 1 view .LVU148
 467              		.loc 1 474 80 is_stmt 0 view .LVU149
 468 00b0 0B88     		ldrh	r3, [r1]
 475:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 469              		.loc 1 475 44 view .LVU150
 470 00b2 4C88     		ldrh	r4, [r1, #2]
 471              		.loc 1 475 86 view .LVU151
 472 00b4 8D88     		ldrh	r5, [r1, #4]
 473              	.LVL55:
 476:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 474              		.loc 1 476 43 view .LVU152
 475 00b6 8989     		ldrh	r1, [r1, #12]
 476              	.LVL56:
 475:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
ARM GAS  /tmp/cc7Dtwf5.s 			page 18


 477              		.loc 1 475 61 view .LVU153
 478 00b8 0D43     		orrs	r5, r5, r1
 475:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 479              		.loc 1 475 19 view .LVU154
 480 00ba 2C43     		orrs	r4, r4, r5
 474:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 481              		.loc 1 474 55 view .LVU155
 482 00bc 2343     		orrs	r3, r3, r4
 474:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 483              		.loc 1 474 10 view .LVU156
 484 00be 1A43     		orrs	r2, r2, r3
 485              	.LVL57:
 474:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 486              		.loc 1 474 10 view .LVU157
 487 00c0 42F40062 		orr	r2, r2, #2048
 488              	.LVL58:
 477:FWLIB/src/stm32f4xx_spi.c ****  
 478:FWLIB/src/stm32f4xx_spi.c **** #if defined(SPI_I2SCFGR_ASTRTEN)
 479:FWLIB/src/stm32f4xx_spi.c ****   if((I2S_InitStruct->I2S_Standard  == I2S_Standard_PCMShort) || (I2S_InitStruct->I2S_Standard  == 
 480:FWLIB/src/stm32f4xx_spi.c ****   {
 481:FWLIB/src/stm32f4xx_spi.c ****     /* Write to SPIx I2SCFGR */  
 482:FWLIB/src/stm32f4xx_spi.c ****     SPIx->I2SCFGR = tmpreg | SPI_I2SCFGR_ASTRTEN;
 483:FWLIB/src/stm32f4xx_spi.c ****   }
 484:FWLIB/src/stm32f4xx_spi.c **** #else
 485:FWLIB/src/stm32f4xx_spi.c ****   /* Write to SPIx I2SCFGR */  
 486:FWLIB/src/stm32f4xx_spi.c ****   SPIx->I2SCFGR = tmpreg ;
 489              		.loc 1 486 3 is_stmt 1 view .LVU158
 490              		.loc 1 486 17 is_stmt 0 view .LVU159
 491 00c4 8283     		strh	r2, [r0, #28]	@ movhi
 487:FWLIB/src/stm32f4xx_spi.c **** #endif 
 488:FWLIB/src/stm32f4xx_spi.c **** }
 492              		.loc 1 488 1 view .LVU160
 493 00c6 F0BC     		pop	{r4, r5, r6, r7}
 494              	.LCFI3:
 495              		.cfi_remember_state
 496              		.cfi_restore 7
 497              		.cfi_restore 6
 498              		.cfi_restore 5
 499              		.cfi_restore 4
 500              		.cfi_def_cfa_offset 0
 501 00c8 7047     		bx	lr
 502              	.LVL59:
 503              	.L29:
 504              	.LCFI4:
 505              		.cfi_restore_state
 391:FWLIB/src/stm32f4xx_spi.c ****     }
 506              		.loc 1 391 20 view .LVU161
 507 00ca 0224     		movs	r4, #2
 508 00cc ACE7     		b	.L21
 509              	.LVL60:
 510              	.L23:
 433:FWLIB/src/stm32f4xx_spi.c ****     }
 511              		.loc 1 433 7 is_stmt 1 view .LVU162
 433:FWLIB/src/stm32f4xx_spi.c ****     }
 512              		.loc 1 433 39 is_stmt 0 view .LVU163
 513 00ce 0D4E     		ldr	r6, .L33+12
 514 00d0 B6FBF7F7 		udiv	r7, r6, r7
ARM GAS  /tmp/cc7Dtwf5.s 			page 19


 515              	.LVL61:
 433:FWLIB/src/stm32f4xx_spi.c ****     }
 516              		.loc 1 433 47 view .LVU164
 517 00d4 05FB07F5 		mul	r5, r5, r7
 518              	.LVL62:
 433:FWLIB/src/stm32f4xx_spi.c ****     }
 519              		.loc 1 433 14 view .LVU165
 520 00d8 B5FBF3F3 		udiv	r3, r5, r3
 521              	.LVL63:
 433:FWLIB/src/stm32f4xx_spi.c ****     }
 522              		.loc 1 433 14 view .LVU166
 523 00dc C5E7     		b	.L24
 524              	.L32:
 441:FWLIB/src/stm32f4xx_spi.c ****     }
 525              		.loc 1 441 7 is_stmt 1 view .LVU167
 441:FWLIB/src/stm32f4xx_spi.c ****     }
 526              		.loc 1 441 35 is_stmt 0 view .LVU168
 527 00de 1B0A     		lsrs	r3, r3, #8
 528              	.LVL64:
 441:FWLIB/src/stm32f4xx_spi.c ****     }
 529              		.loc 1 441 42 view .LVU169
 530 00e0 03EB8304 		add	r4, r3, r3, lsl #2
 531              	.LVL65:
 441:FWLIB/src/stm32f4xx_spi.c ****     }
 532              		.loc 1 441 42 view .LVU170
 533 00e4 6300     		lsls	r3, r4, #1
 441:FWLIB/src/stm32f4xx_spi.c ****     }
 534              		.loc 1 441 64 view .LVU171
 535 00e6 8C68     		ldr	r4, [r1, #8]
 441:FWLIB/src/stm32f4xx_spi.c ****     }
 536              		.loc 1 441 48 view .LVU172
 537 00e8 B3FBF4F3 		udiv	r3, r3, r4
 441:FWLIB/src/stm32f4xx_spi.c ****     }
 538              		.loc 1 441 13 view .LVU173
 539 00ec 0533     		adds	r3, r3, #5
 540 00ee 9BB2     		uxth	r3, r3
 541              	.LVL66:
 441:FWLIB/src/stm32f4xx_spi.c ****     }
 542              		.loc 1 441 13 view .LVU174
 543 00f0 CAE7     		b	.L26
 544              	.LVL67:
 545              	.L28:
 376:FWLIB/src/stm32f4xx_spi.c ****     i2sdiv = (uint16_t)2;   
 546              		.loc 1 376 12 view .LVU175
 547 00f2 0025     		movs	r5, #0
 377:FWLIB/src/stm32f4xx_spi.c ****   }
 548              		.loc 1 377 12 view .LVU176
 549 00f4 0223     		movs	r3, #2
 550 00f6 D1E7     		b	.L20
 551              	.L34:
 552              		.align	2
 553              	.L33:
 554 00f8 00380240 		.word	1073887232
 555 00fc 00127A00 		.word	8000000
 556 0100 CDCCCCCC 		.word	-858993459
 557 0104 0024F400 		.word	16000000
 558              		.cfi_endproc
ARM GAS  /tmp/cc7Dtwf5.s 			page 20


 559              	.LFE125:
 561              		.section	.text.SPI_StructInit,"ax",%progbits
 562              		.align	1
 563              		.global	SPI_StructInit
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 567              		.fpu fpv4-sp-d16
 569              	SPI_StructInit:
 570              	.LVL68:
 571              	.LFB126:
 489:FWLIB/src/stm32f4xx_spi.c **** 
 490:FWLIB/src/stm32f4xx_spi.c **** /**
 491:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Fills each SPI_InitStruct member with its default value.
 492:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure which will be initialized.
 493:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 494:FWLIB/src/stm32f4xx_spi.c ****   */
 495:FWLIB/src/stm32f4xx_spi.c **** void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)
 496:FWLIB/src/stm32f4xx_spi.c **** {
 572              		.loc 1 496 1 is_stmt 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 497:FWLIB/src/stm32f4xx_spi.c **** /*--------------- Reset SPI init structure parameters values -----------------*/
 498:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the SPI_Direction member */
 499:FWLIB/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 577              		.loc 1 499 3 view .LVU178
 578              		.loc 1 499 33 is_stmt 0 view .LVU179
 579 0000 0023     		movs	r3, #0
 580 0002 0380     		strh	r3, [r0]	@ movhi
 500:FWLIB/src/stm32f4xx_spi.c ****   /* initialize the SPI_Mode member */
 501:FWLIB/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
 581              		.loc 1 501 3 is_stmt 1 view .LVU180
 582              		.loc 1 501 28 is_stmt 0 view .LVU181
 583 0004 4380     		strh	r3, [r0, #2]	@ movhi
 502:FWLIB/src/stm32f4xx_spi.c ****   /* initialize the SPI_DataSize member */
 503:FWLIB/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
 584              		.loc 1 503 3 is_stmt 1 view .LVU182
 585              		.loc 1 503 32 is_stmt 0 view .LVU183
 586 0006 8380     		strh	r3, [r0, #4]	@ movhi
 504:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the SPI_CPOL member */
 505:FWLIB/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
 587              		.loc 1 505 3 is_stmt 1 view .LVU184
 588              		.loc 1 505 28 is_stmt 0 view .LVU185
 589 0008 C380     		strh	r3, [r0, #6]	@ movhi
 506:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the SPI_CPHA member */
 507:FWLIB/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
 590              		.loc 1 507 3 is_stmt 1 view .LVU186
 591              		.loc 1 507 28 is_stmt 0 view .LVU187
 592 000a 0381     		strh	r3, [r0, #8]	@ movhi
 508:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the SPI_NSS member */
 509:FWLIB/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_NSS = SPI_NSS_Hard;
 593              		.loc 1 509 3 is_stmt 1 view .LVU188
 594              		.loc 1 509 27 is_stmt 0 view .LVU189
 595 000c 4381     		strh	r3, [r0, #10]	@ movhi
 510:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the SPI_BaudRatePrescaler member */
ARM GAS  /tmp/cc7Dtwf5.s 			page 21


 511:FWLIB/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
 596              		.loc 1 511 3 is_stmt 1 view .LVU190
 597              		.loc 1 511 41 is_stmt 0 view .LVU191
 598 000e 8381     		strh	r3, [r0, #12]	@ movhi
 512:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the SPI_FirstBit member */
 513:FWLIB/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_FirstBit = SPI_FirstBit_MSB;
 599              		.loc 1 513 3 is_stmt 1 view .LVU192
 600              		.loc 1 513 32 is_stmt 0 view .LVU193
 601 0010 C381     		strh	r3, [r0, #14]	@ movhi
 514:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the SPI_CRCPolynomial member */
 515:FWLIB/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CRCPolynomial = 7;
 602              		.loc 1 515 3 is_stmt 1 view .LVU194
 603              		.loc 1 515 37 is_stmt 0 view .LVU195
 604 0012 0723     		movs	r3, #7
 605 0014 0382     		strh	r3, [r0, #16]	@ movhi
 516:FWLIB/src/stm32f4xx_spi.c **** }
 606              		.loc 1 516 1 view .LVU196
 607 0016 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE126:
 611              		.section	.text.I2S_StructInit,"ax",%progbits
 612              		.align	1
 613              		.global	I2S_StructInit
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 617              		.fpu fpv4-sp-d16
 619              	I2S_StructInit:
 620              	.LVL69:
 621              	.LFB127:
 517:FWLIB/src/stm32f4xx_spi.c **** 
 518:FWLIB/src/stm32f4xx_spi.c **** /**
 519:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Fills each I2S_InitStruct member with its default value.
 520:FWLIB/src/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to a I2S_InitTypeDef structure which will be initialized.
 521:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 522:FWLIB/src/stm32f4xx_spi.c ****   */
 523:FWLIB/src/stm32f4xx_spi.c **** void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)
 524:FWLIB/src/stm32f4xx_spi.c **** {
 622              		.loc 1 524 1 is_stmt 1 view -0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 525:FWLIB/src/stm32f4xx_spi.c **** /*--------------- Reset I2S init structure parameters values -----------------*/
 526:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the I2S_Mode member */
 527:FWLIB/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
 627              		.loc 1 527 3 view .LVU198
 628              		.loc 1 527 28 is_stmt 0 view .LVU199
 629 0000 0023     		movs	r3, #0
 630 0002 0380     		strh	r3, [r0]	@ movhi
 528:FWLIB/src/stm32f4xx_spi.c ****   
 529:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the I2S_Standard member */
 530:FWLIB/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
 631              		.loc 1 530 3 is_stmt 1 view .LVU200
 632              		.loc 1 530 32 is_stmt 0 view .LVU201
 633 0004 4380     		strh	r3, [r0, #2]	@ movhi
 531:FWLIB/src/stm32f4xx_spi.c ****   
ARM GAS  /tmp/cc7Dtwf5.s 			page 22


 532:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the I2S_DataFormat member */
 533:FWLIB/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
 634              		.loc 1 533 3 is_stmt 1 view .LVU202
 635              		.loc 1 533 34 is_stmt 0 view .LVU203
 636 0006 8380     		strh	r3, [r0, #4]	@ movhi
 534:FWLIB/src/stm32f4xx_spi.c ****   
 535:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the I2S_MCLKOutput member */
 536:FWLIB/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
 637              		.loc 1 536 3 is_stmt 1 view .LVU204
 638              		.loc 1 536 34 is_stmt 0 view .LVU205
 639 0008 C380     		strh	r3, [r0, #6]	@ movhi
 537:FWLIB/src/stm32f4xx_spi.c ****   
 538:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the I2S_AudioFreq member */
 539:FWLIB/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_AudioFreq = I2S_AudioFreq_Default;
 640              		.loc 1 539 3 is_stmt 1 view .LVU206
 641              		.loc 1 539 33 is_stmt 0 view .LVU207
 642 000a 0222     		movs	r2, #2
 643 000c 8260     		str	r2, [r0, #8]
 540:FWLIB/src/stm32f4xx_spi.c ****   
 541:FWLIB/src/stm32f4xx_spi.c ****   /* Initialize the I2S_CPOL member */
 542:FWLIB/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_CPOL = I2S_CPOL_Low;
 644              		.loc 1 542 3 is_stmt 1 view .LVU208
 645              		.loc 1 542 28 is_stmt 0 view .LVU209
 646 000e 8381     		strh	r3, [r0, #12]	@ movhi
 543:FWLIB/src/stm32f4xx_spi.c **** }
 647              		.loc 1 543 1 view .LVU210
 648 0010 7047     		bx	lr
 649              		.cfi_endproc
 650              	.LFE127:
 652              		.section	.text.SPI_Cmd,"ax",%progbits
 653              		.align	1
 654              		.global	SPI_Cmd
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 658              		.fpu fpv4-sp-d16
 660              	SPI_Cmd:
 661              	.LVL70:
 662              	.LFB128:
 544:FWLIB/src/stm32f4xx_spi.c **** 
 545:FWLIB/src/stm32f4xx_spi.c **** /**
 546:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI peripheral.
 547:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 548:FWLIB/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 549:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 550:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 551:FWLIB/src/stm32f4xx_spi.c ****   */
 552:FWLIB/src/stm32f4xx_spi.c **** void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 553:FWLIB/src/stm32f4xx_spi.c **** {
 663              		.loc 1 553 1 is_stmt 1 view -0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              		@ link register save eliminated.
 554:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 555:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 668              		.loc 1 555 3 view .LVU212
ARM GAS  /tmp/cc7Dtwf5.s 			page 23


 556:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 669              		.loc 1 556 3 view .LVU213
 557:FWLIB/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 670              		.loc 1 557 3 view .LVU214
 671              		.loc 1 557 6 is_stmt 0 view .LVU215
 672 0000 21B1     		cbz	r1, .L38
 558:FWLIB/src/stm32f4xx_spi.c ****   {
 559:FWLIB/src/stm32f4xx_spi.c ****     /* Enable the selected SPI peripheral */
 560:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_CR1_SPE;
 673              		.loc 1 560 5 is_stmt 1 view .LVU216
 674              		.loc 1 560 15 is_stmt 0 view .LVU217
 675 0002 0388     		ldrh	r3, [r0]
 676 0004 43F04003 		orr	r3, r3, #64
 677 0008 0380     		strh	r3, [r0]	@ movhi
 678 000a 7047     		bx	lr
 679              	.L38:
 561:FWLIB/src/stm32f4xx_spi.c ****   }
 562:FWLIB/src/stm32f4xx_spi.c ****   else
 563:FWLIB/src/stm32f4xx_spi.c ****   {
 564:FWLIB/src/stm32f4xx_spi.c ****     /* Disable the selected SPI peripheral */
 565:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_SPE);
 680              		.loc 1 565 5 is_stmt 1 view .LVU218
 681              		.loc 1 565 15 is_stmt 0 view .LVU219
 682 000c 0388     		ldrh	r3, [r0]
 683 000e 9BB2     		uxth	r3, r3
 684 0010 23F04003 		bic	r3, r3, #64
 685 0014 9BB2     		uxth	r3, r3
 686 0016 0380     		strh	r3, [r0]	@ movhi
 566:FWLIB/src/stm32f4xx_spi.c ****   }
 567:FWLIB/src/stm32f4xx_spi.c **** }
 687              		.loc 1 567 1 view .LVU220
 688 0018 7047     		bx	lr
 689              		.cfi_endproc
 690              	.LFE128:
 692              		.section	.text.I2S_Cmd,"ax",%progbits
 693              		.align	1
 694              		.global	I2S_Cmd
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 698              		.fpu fpv4-sp-d16
 700              	I2S_Cmd:
 701              	.LVL71:
 702              	.LFB129:
 568:FWLIB/src/stm32f4xx_spi.c **** 
 569:FWLIB/src/stm32f4xx_spi.c **** /**
 570:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI peripheral (in I2S mode).
 571:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 2 or 3 to select the SPI peripheral (or I2Sxext 
 572:FWLIB/src/stm32f4xx_spi.c ****   *         for full duplex mode).
 573:FWLIB/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 574:FWLIB/src/stm32f4xx_spi.c ****   *         This parameter can be: ENABLE or DISABLE.
 575:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 576:FWLIB/src/stm32f4xx_spi.c ****   */
 577:FWLIB/src/stm32f4xx_spi.c **** void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 578:FWLIB/src/stm32f4xx_spi.c **** {
 703              		.loc 1 578 1 is_stmt 1 view -0
 704              		.cfi_startproc
ARM GAS  /tmp/cc7Dtwf5.s 			page 24


 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 579:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 580:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_23_PERIPH_EXT(SPIx));
 708              		.loc 1 580 3 view .LVU222
 581:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 709              		.loc 1 581 3 view .LVU223
 582:FWLIB/src/stm32f4xx_spi.c ****   
 583:FWLIB/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 710              		.loc 1 583 3 view .LVU224
 711              		.loc 1 583 6 is_stmt 0 view .LVU225
 712 0000 21B1     		cbz	r1, .L41
 584:FWLIB/src/stm32f4xx_spi.c ****   {
 585:FWLIB/src/stm32f4xx_spi.c ****     /* Enable the selected SPI peripheral (in I2S mode) */
 586:FWLIB/src/stm32f4xx_spi.c ****     SPIx->I2SCFGR |= SPI_I2SCFGR_I2SE;
 713              		.loc 1 586 5 is_stmt 1 view .LVU226
 714              		.loc 1 586 19 is_stmt 0 view .LVU227
 715 0002 838B     		ldrh	r3, [r0, #28]
 716 0004 43F48063 		orr	r3, r3, #1024
 717 0008 8383     		strh	r3, [r0, #28]	@ movhi
 718 000a 7047     		bx	lr
 719              	.L41:
 587:FWLIB/src/stm32f4xx_spi.c ****   }
 588:FWLIB/src/stm32f4xx_spi.c ****   else
 589:FWLIB/src/stm32f4xx_spi.c ****   {
 590:FWLIB/src/stm32f4xx_spi.c ****     /* Disable the selected SPI peripheral in I2S mode */
 591:FWLIB/src/stm32f4xx_spi.c ****     SPIx->I2SCFGR &= (uint16_t)~((uint16_t)SPI_I2SCFGR_I2SE);
 720              		.loc 1 591 5 is_stmt 1 view .LVU228
 721              		.loc 1 591 19 is_stmt 0 view .LVU229
 722 000c 838B     		ldrh	r3, [r0, #28]
 723 000e 9BB2     		uxth	r3, r3
 724 0010 23F48063 		bic	r3, r3, #1024
 725 0014 9BB2     		uxth	r3, r3
 726 0016 8383     		strh	r3, [r0, #28]	@ movhi
 592:FWLIB/src/stm32f4xx_spi.c ****   }
 593:FWLIB/src/stm32f4xx_spi.c **** }
 727              		.loc 1 593 1 view .LVU230
 728 0018 7047     		bx	lr
 729              		.cfi_endproc
 730              	.LFE129:
 732              		.section	.text.SPI_DataSizeConfig,"ax",%progbits
 733              		.align	1
 734              		.global	SPI_DataSizeConfig
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 738              		.fpu fpv4-sp-d16
 740              	SPI_DataSizeConfig:
 741              	.LVL72:
 742              	.LFB130:
 594:FWLIB/src/stm32f4xx_spi.c **** 
 595:FWLIB/src/stm32f4xx_spi.c **** /**
 596:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Configures the data size for the selected SPI.
 597:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 598:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPI_DataSize: specifies the SPI data size.
 599:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/cc7Dtwf5.s 			page 25


 600:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_DataSize_16b: Set data frame format to 16bit
 601:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_DataSize_8b: Set data frame format to 8bit
 602:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 603:FWLIB/src/stm32f4xx_spi.c ****   */
 604:FWLIB/src/stm32f4xx_spi.c **** void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
 605:FWLIB/src/stm32f4xx_spi.c **** {
 743              		.loc 1 605 1 is_stmt 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 606:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 607:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 748              		.loc 1 607 3 view .LVU232
 608:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_DataSize));
 749              		.loc 1 608 3 view .LVU233
 609:FWLIB/src/stm32f4xx_spi.c ****   /* Clear DFF bit */
 610:FWLIB/src/stm32f4xx_spi.c ****   SPIx->CR1 &= (uint16_t)~SPI_DataSize_16b;
 750              		.loc 1 610 3 view .LVU234
 751              		.loc 1 610 13 is_stmt 0 view .LVU235
 752 0000 0388     		ldrh	r3, [r0]
 753 0002 9BB2     		uxth	r3, r3
 754 0004 23F40063 		bic	r3, r3, #2048
 755 0008 9BB2     		uxth	r3, r3
 756 000a 0380     		strh	r3, [r0]	@ movhi
 611:FWLIB/src/stm32f4xx_spi.c ****   /* Set new DFF bit value */
 612:FWLIB/src/stm32f4xx_spi.c ****   SPIx->CR1 |= SPI_DataSize;
 757              		.loc 1 612 3 is_stmt 1 view .LVU236
 758              		.loc 1 612 13 is_stmt 0 view .LVU237
 759 000c 0388     		ldrh	r3, [r0]
 760 000e 1943     		orrs	r1, r1, r3
 761              	.LVL73:
 762              		.loc 1 612 13 view .LVU238
 763 0010 0180     		strh	r1, [r0]	@ movhi
 613:FWLIB/src/stm32f4xx_spi.c **** }
 764              		.loc 1 613 1 view .LVU239
 765 0012 7047     		bx	lr
 766              		.cfi_endproc
 767              	.LFE130:
 769              		.section	.text.SPI_BiDirectionalLineConfig,"ax",%progbits
 770              		.align	1
 771              		.global	SPI_BiDirectionalLineConfig
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 775              		.fpu fpv4-sp-d16
 777              	SPI_BiDirectionalLineConfig:
 778              	.LVL74:
 779              	.LFB131:
 614:FWLIB/src/stm32f4xx_spi.c **** 
 615:FWLIB/src/stm32f4xx_spi.c **** /**
 616:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Selects the data transfer direction in bidirectional mode for the specified SPI.
 617:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 618:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPI_Direction: specifies the data transfer direction in bidirectional mode. 
 619:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 620:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_Direction_Tx: Selects Tx transmission direction
 621:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_Direction_Rx: Selects Rx receive direction
ARM GAS  /tmp/cc7Dtwf5.s 			page 26


 622:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 623:FWLIB/src/stm32f4xx_spi.c ****   */
 624:FWLIB/src/stm32f4xx_spi.c **** void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
 625:FWLIB/src/stm32f4xx_spi.c **** {
 780              		.loc 1 625 1 is_stmt 1 view -0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 626:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 627:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 785              		.loc 1 627 3 view .LVU241
 628:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DIRECTION(SPI_Direction));
 786              		.loc 1 628 3 view .LVU242
 629:FWLIB/src/stm32f4xx_spi.c ****   if (SPI_Direction == SPI_Direction_Tx)
 787              		.loc 1 629 3 view .LVU243
 788              		.loc 1 629 6 is_stmt 0 view .LVU244
 789 0000 B1F5804F 		cmp	r1, #16384
 790 0004 06D0     		beq	.L47
 630:FWLIB/src/stm32f4xx_spi.c ****   {
 631:FWLIB/src/stm32f4xx_spi.c ****     /* Set the Tx only mode */
 632:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_Direction_Tx;
 633:FWLIB/src/stm32f4xx_spi.c ****   }
 634:FWLIB/src/stm32f4xx_spi.c ****   else
 635:FWLIB/src/stm32f4xx_spi.c ****   {
 636:FWLIB/src/stm32f4xx_spi.c ****     /* Set the Rx only mode */
 637:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR1 &= SPI_Direction_Rx;
 791              		.loc 1 637 5 is_stmt 1 view .LVU245
 792              		.loc 1 637 15 is_stmt 0 view .LVU246
 793 0006 0388     		ldrh	r3, [r0]
 794 0008 9BB2     		uxth	r3, r3
 795 000a 23F48043 		bic	r3, r3, #16384
 796 000e 9BB2     		uxth	r3, r3
 797 0010 0380     		strh	r3, [r0]	@ movhi
 638:FWLIB/src/stm32f4xx_spi.c ****   }
 639:FWLIB/src/stm32f4xx_spi.c **** }
 798              		.loc 1 639 1 view .LVU247
 799 0012 7047     		bx	lr
 800              	.L47:
 632:FWLIB/src/stm32f4xx_spi.c ****   }
 801              		.loc 1 632 5 is_stmt 1 view .LVU248
 632:FWLIB/src/stm32f4xx_spi.c ****   }
 802              		.loc 1 632 15 is_stmt 0 view .LVU249
 803 0014 0388     		ldrh	r3, [r0]
 804 0016 43F48043 		orr	r3, r3, #16384
 805 001a 0380     		strh	r3, [r0]	@ movhi
 806 001c 7047     		bx	lr
 807              		.cfi_endproc
 808              	.LFE131:
 810              		.section	.text.SPI_NSSInternalSoftwareConfig,"ax",%progbits
 811              		.align	1
 812              		.global	SPI_NSSInternalSoftwareConfig
 813              		.syntax unified
 814              		.thumb
 815              		.thumb_func
 816              		.fpu fpv4-sp-d16
 818              	SPI_NSSInternalSoftwareConfig:
ARM GAS  /tmp/cc7Dtwf5.s 			page 27


 819              	.LVL75:
 820              	.LFB132:
 640:FWLIB/src/stm32f4xx_spi.c **** 
 641:FWLIB/src/stm32f4xx_spi.c **** /**
 642:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Configures internally by software the NSS pin for the selected SPI.
 643:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 644:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPI_NSSInternalSoft: specifies the SPI NSS internal state.
 645:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 646:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_NSSInternalSoft_Set: Set NSS pin internally
 647:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_NSSInternalSoft_Reset: Reset NSS pin internally
 648:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 649:FWLIB/src/stm32f4xx_spi.c ****   */
 650:FWLIB/src/stm32f4xx_spi.c **** void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
 651:FWLIB/src/stm32f4xx_spi.c **** {
 821              		.loc 1 651 1 is_stmt 1 view -0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825              		@ link register save eliminated.
 652:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 653:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 826              		.loc 1 653 3 view .LVU251
 654:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_NSS_INTERNAL(SPI_NSSInternalSoft));
 827              		.loc 1 654 3 view .LVU252
 655:FWLIB/src/stm32f4xx_spi.c ****   if (SPI_NSSInternalSoft != SPI_NSSInternalSoft_Reset)
 828              		.loc 1 655 3 view .LVU253
 829              		.loc 1 655 6 is_stmt 0 view .LVU254
 830 0000 4FF6FF63 		movw	r3, #65279
 831 0004 9942     		cmp	r1, r3
 832 0006 04D0     		beq	.L49
 656:FWLIB/src/stm32f4xx_spi.c ****   {
 657:FWLIB/src/stm32f4xx_spi.c ****     /* Set NSS pin internally by software */
 658:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_NSSInternalSoft_Set;
 833              		.loc 1 658 5 is_stmt 1 view .LVU255
 834              		.loc 1 658 15 is_stmt 0 view .LVU256
 835 0008 0388     		ldrh	r3, [r0]
 836 000a 43F48073 		orr	r3, r3, #256
 837 000e 0380     		strh	r3, [r0]	@ movhi
 838 0010 7047     		bx	lr
 839              	.L49:
 659:FWLIB/src/stm32f4xx_spi.c ****   }
 660:FWLIB/src/stm32f4xx_spi.c ****   else
 661:FWLIB/src/stm32f4xx_spi.c ****   {
 662:FWLIB/src/stm32f4xx_spi.c ****     /* Reset NSS pin internally by software */
 663:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR1 &= SPI_NSSInternalSoft_Reset;
 840              		.loc 1 663 5 is_stmt 1 view .LVU257
 841              		.loc 1 663 15 is_stmt 0 view .LVU258
 842 0012 0388     		ldrh	r3, [r0]
 843 0014 9BB2     		uxth	r3, r3
 844 0016 23F48073 		bic	r3, r3, #256
 845 001a 9BB2     		uxth	r3, r3
 846 001c 0380     		strh	r3, [r0]	@ movhi
 664:FWLIB/src/stm32f4xx_spi.c ****   }
 665:FWLIB/src/stm32f4xx_spi.c **** }
 847              		.loc 1 665 1 view .LVU259
 848 001e 7047     		bx	lr
 849              		.cfi_endproc
ARM GAS  /tmp/cc7Dtwf5.s 			page 28


 850              	.LFE132:
 852              		.section	.text.SPI_SSOutputCmd,"ax",%progbits
 853              		.align	1
 854              		.global	SPI_SSOutputCmd
 855              		.syntax unified
 856              		.thumb
 857              		.thumb_func
 858              		.fpu fpv4-sp-d16
 860              	SPI_SSOutputCmd:
 861              	.LVL76:
 862              	.LFB133:
 666:FWLIB/src/stm32f4xx_spi.c **** 
 667:FWLIB/src/stm32f4xx_spi.c **** /**
 668:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the SS output for the selected SPI.
 669:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 670:FWLIB/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx SS output. 
 671:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 672:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 673:FWLIB/src/stm32f4xx_spi.c ****   */
 674:FWLIB/src/stm32f4xx_spi.c **** void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 675:FWLIB/src/stm32f4xx_spi.c **** {
 863              		.loc 1 675 1 is_stmt 1 view -0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 0
 866              		@ frame_needed = 0, uses_anonymous_args = 0
 867              		@ link register save eliminated.
 676:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 677:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 868              		.loc 1 677 3 view .LVU261
 678:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 869              		.loc 1 678 3 view .LVU262
 679:FWLIB/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 870              		.loc 1 679 3 view .LVU263
 871              		.loc 1 679 6 is_stmt 0 view .LVU264
 872 0000 21B1     		cbz	r1, .L52
 680:FWLIB/src/stm32f4xx_spi.c ****   {
 681:FWLIB/src/stm32f4xx_spi.c ****     /* Enable the selected SPI SS output */
 682:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR2 |= (uint16_t)SPI_CR2_SSOE;
 873              		.loc 1 682 5 is_stmt 1 view .LVU265
 874              		.loc 1 682 15 is_stmt 0 view .LVU266
 875 0002 8388     		ldrh	r3, [r0, #4]
 876 0004 43F00403 		orr	r3, r3, #4
 877 0008 8380     		strh	r3, [r0, #4]	@ movhi
 878 000a 7047     		bx	lr
 879              	.L52:
 683:FWLIB/src/stm32f4xx_spi.c ****   }
 684:FWLIB/src/stm32f4xx_spi.c ****   else
 685:FWLIB/src/stm32f4xx_spi.c ****   {
 686:FWLIB/src/stm32f4xx_spi.c ****     /* Disable the selected SPI SS output */
 687:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~((uint16_t)SPI_CR2_SSOE);
 880              		.loc 1 687 5 is_stmt 1 view .LVU267
 881              		.loc 1 687 15 is_stmt 0 view .LVU268
 882 000c 8388     		ldrh	r3, [r0, #4]
 883 000e 9BB2     		uxth	r3, r3
 884 0010 23F00403 		bic	r3, r3, #4
 885 0014 9BB2     		uxth	r3, r3
 886 0016 8380     		strh	r3, [r0, #4]	@ movhi
ARM GAS  /tmp/cc7Dtwf5.s 			page 29


 688:FWLIB/src/stm32f4xx_spi.c ****   }
 689:FWLIB/src/stm32f4xx_spi.c **** }
 887              		.loc 1 689 1 view .LVU269
 888 0018 7047     		bx	lr
 889              		.cfi_endproc
 890              	.LFE133:
 892              		.section	.text.SPI_TIModeCmd,"ax",%progbits
 893              		.align	1
 894              		.global	SPI_TIModeCmd
 895              		.syntax unified
 896              		.thumb
 897              		.thumb_func
 898              		.fpu fpv4-sp-d16
 900              	SPI_TIModeCmd:
 901              	.LVL77:
 902              	.LFB134:
 690:FWLIB/src/stm32f4xx_spi.c **** 
 691:FWLIB/src/stm32f4xx_spi.c **** /**
 692:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
 693:FWLIB/src/stm32f4xx_spi.c ****   *   
 694:FWLIB/src/stm32f4xx_spi.c ****   * @note   This function can be called only after the SPI_Init() function has 
 695:FWLIB/src/stm32f4xx_spi.c ****   *         been called. 
 696:FWLIB/src/stm32f4xx_spi.c ****   * @note   When TI mode is selected, the control bits SSM, SSI, CPOL and CPHA 
 697:FWLIB/src/stm32f4xx_spi.c ****   *         are not taken into consideration and are configured by hardware
 698:FWLIB/src/stm32f4xx_spi.c ****   *         respectively to the TI mode requirements.  
 699:FWLIB/src/stm32f4xx_spi.c ****   * 
 700:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 
 701:FWLIB/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the selected SPI TI communication mode.
 702:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 703:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 704:FWLIB/src/stm32f4xx_spi.c ****   */
 705:FWLIB/src/stm32f4xx_spi.c **** void SPI_TIModeCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 706:FWLIB/src/stm32f4xx_spi.c **** {
 903              		.loc 1 706 1 is_stmt 1 view -0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 707:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 708:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 908              		.loc 1 708 3 view .LVU271
 709:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 909              		.loc 1 709 3 view .LVU272
 710:FWLIB/src/stm32f4xx_spi.c **** 
 711:FWLIB/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 910              		.loc 1 711 3 view .LVU273
 911              		.loc 1 711 6 is_stmt 0 view .LVU274
 912 0000 21B1     		cbz	r1, .L55
 712:FWLIB/src/stm32f4xx_spi.c ****   {
 713:FWLIB/src/stm32f4xx_spi.c ****     /* Enable the TI mode for the selected SPI peripheral */
 714:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR2 |= SPI_CR2_FRF;
 913              		.loc 1 714 5 is_stmt 1 view .LVU275
 914              		.loc 1 714 15 is_stmt 0 view .LVU276
 915 0002 8388     		ldrh	r3, [r0, #4]
 916 0004 43F01003 		orr	r3, r3, #16
 917 0008 8380     		strh	r3, [r0, #4]	@ movhi
 918 000a 7047     		bx	lr
ARM GAS  /tmp/cc7Dtwf5.s 			page 30


 919              	.L55:
 715:FWLIB/src/stm32f4xx_spi.c ****   }
 716:FWLIB/src/stm32f4xx_spi.c ****   else
 717:FWLIB/src/stm32f4xx_spi.c ****   {
 718:FWLIB/src/stm32f4xx_spi.c ****     /* Disable the TI mode for the selected SPI peripheral */
 719:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_CR2_FRF;
 920              		.loc 1 719 5 is_stmt 1 view .LVU277
 921              		.loc 1 719 15 is_stmt 0 view .LVU278
 922 000c 8388     		ldrh	r3, [r0, #4]
 923 000e 9BB2     		uxth	r3, r3
 924 0010 23F01003 		bic	r3, r3, #16
 925 0014 9BB2     		uxth	r3, r3
 926 0016 8380     		strh	r3, [r0, #4]	@ movhi
 720:FWLIB/src/stm32f4xx_spi.c ****   }
 721:FWLIB/src/stm32f4xx_spi.c **** }
 927              		.loc 1 721 1 view .LVU279
 928 0018 7047     		bx	lr
 929              		.cfi_endproc
 930              	.LFE134:
 932              		.section	.text.I2S_FullDuplexConfig,"ax",%progbits
 933              		.align	1
 934              		.global	I2S_FullDuplexConfig
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 938              		.fpu fpv4-sp-d16
 940              	I2S_FullDuplexConfig:
 941              	.LVL78:
 942              	.LFB135:
 722:FWLIB/src/stm32f4xx_spi.c **** 
 723:FWLIB/src/stm32f4xx_spi.c **** /**
 724:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Configures the full duplex mode for the I2Sx peripheral using its
 725:FWLIB/src/stm32f4xx_spi.c ****   *         extension I2Sxext according to the specified parameters in the 
 726:FWLIB/src/stm32f4xx_spi.c ****   *         I2S_InitStruct.
 727:FWLIB/src/stm32f4xx_spi.c ****   * @param  I2Sxext: where x can be  2 or 3 to select the I2S peripheral extension block.
 728:FWLIB/src/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 729:FWLIB/src/stm32f4xx_spi.c ****   *         contains the configuration information for the specified I2S peripheral
 730:FWLIB/src/stm32f4xx_spi.c ****   *         extension.
 731:FWLIB/src/stm32f4xx_spi.c ****   * 
 732:FWLIB/src/stm32f4xx_spi.c ****   * @note   The structure pointed by I2S_InitStruct parameter should be the same
 733:FWLIB/src/stm32f4xx_spi.c ****   *         used for the master I2S peripheral. In this case, if the master is 
 734:FWLIB/src/stm32f4xx_spi.c ****   *         configured as transmitter, the slave will be receiver and vice versa.
 735:FWLIB/src/stm32f4xx_spi.c ****   *         Or you can force a different mode by modifying the field I2S_Mode to the
 736:FWLIB/src/stm32f4xx_spi.c ****   *         value I2S_SlaveRx or I2S_SlaveTx independently of the master configuration.    
 737:FWLIB/src/stm32f4xx_spi.c ****   *         
 738:FWLIB/src/stm32f4xx_spi.c ****   * @note   The I2S full duplex extension can be configured in slave mode only.    
 739:FWLIB/src/stm32f4xx_spi.c ****   *  
 740:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 741:FWLIB/src/stm32f4xx_spi.c ****   */
 742:FWLIB/src/stm32f4xx_spi.c **** void I2S_FullDuplexConfig(SPI_TypeDef* I2Sxext, I2S_InitTypeDef* I2S_InitStruct)
 743:FWLIB/src/stm32f4xx_spi.c **** {
 943              		.loc 1 743 1 is_stmt 1 view -0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 948              		.loc 1 743 1 is_stmt 0 view .LVU281
ARM GAS  /tmp/cc7Dtwf5.s 			page 31


 949 0000 30B4     		push	{r4, r5}
 950              	.LCFI5:
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 4, -8
 953              		.cfi_offset 5, -4
 744:FWLIB/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, tmp = 0;
 954              		.loc 1 744 3 is_stmt 1 view .LVU282
 955              	.LVL79:
 745:FWLIB/src/stm32f4xx_spi.c ****   
 746:FWLIB/src/stm32f4xx_spi.c ****   /* Check the I2S parameters */
 747:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_EXT_PERIPH(I2Sxext));
 956              		.loc 1 747 3 view .LVU283
 748:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 957              		.loc 1 748 3 view .LVU284
 749:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 958              		.loc 1 749 3 view .LVU285
 750:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 959              		.loc 1 750 3 view .LVU286
 751:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 960              		.loc 1 751 3 view .LVU287
 752:FWLIB/src/stm32f4xx_spi.c **** 
 753:FWLIB/src/stm32f4xx_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 754:FWLIB/src/stm32f4xx_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 755:FWLIB/src/stm32f4xx_spi.c ****   I2Sxext->I2SCFGR &= I2SCFGR_CLEAR_MASK; 
 961              		.loc 1 755 3 view .LVU288
 962              		.loc 1 755 20 is_stmt 0 view .LVU289
 963 0002 838B     		ldrh	r3, [r0, #28]
 964 0004 9BB2     		uxth	r3, r3
 965 0006 23F47B63 		bic	r3, r3, #4016
 966 000a 23F00F03 		bic	r3, r3, #15
 967 000e 9BB2     		uxth	r3, r3
 968 0010 8383     		strh	r3, [r0, #28]	@ movhi
 756:FWLIB/src/stm32f4xx_spi.c ****   I2Sxext->I2SPR = 0x0002;
 969              		.loc 1 756 3 is_stmt 1 view .LVU290
 970              		.loc 1 756 18 is_stmt 0 view .LVU291
 971 0012 0223     		movs	r3, #2
 972 0014 0384     		strh	r3, [r0, #32]	@ movhi
 757:FWLIB/src/stm32f4xx_spi.c ****   
 758:FWLIB/src/stm32f4xx_spi.c ****   /* Get the I2SCFGR register value */
 759:FWLIB/src/stm32f4xx_spi.c ****   tmpreg = I2Sxext->I2SCFGR;
 973              		.loc 1 759 3 is_stmt 1 view .LVU292
 974              		.loc 1 759 10 is_stmt 0 view .LVU293
 975 0016 838B     		ldrh	r3, [r0, #28]
 976 0018 9AB2     		uxth	r2, r3
 977              	.LVL80:
 760:FWLIB/src/stm32f4xx_spi.c ****   
 761:FWLIB/src/stm32f4xx_spi.c ****   /* Get the mode to be configured for the extended I2S */
 762:FWLIB/src/stm32f4xx_spi.c ****   if ((I2S_InitStruct->I2S_Mode == I2S_Mode_MasterTx) || (I2S_InitStruct->I2S_Mode == I2S_Mode_Slav
 978              		.loc 1 762 3 is_stmt 1 view .LVU294
 979              		.loc 1 762 22 is_stmt 0 view .LVU295
 980 001a 0B88     		ldrh	r3, [r1]
 981              		.loc 1 762 6 view .LVU296
 982 001c B3F5007F 		cmp	r3, #512
 983 0020 03D0     		beq	.L59
 984              		.loc 1 762 55 discriminator 1 view .LVU297
 985 0022 83B9     		cbnz	r3, .L60
 763:FWLIB/src/stm32f4xx_spi.c ****   {
ARM GAS  /tmp/cc7Dtwf5.s 			page 32


 764:FWLIB/src/stm32f4xx_spi.c ****     tmp = I2S_Mode_SlaveRx;
 986              		.loc 1 764 9 view .LVU298
 987 0024 4FF48075 		mov	r5, #256
 988 0028 01E0     		b	.L58
 989              	.L59:
 990 002a 4FF48075 		mov	r5, #256
 991              	.L58:
 992              	.LVL81:
 765:FWLIB/src/stm32f4xx_spi.c ****   }
 766:FWLIB/src/stm32f4xx_spi.c ****   else
 767:FWLIB/src/stm32f4xx_spi.c ****   {
 768:FWLIB/src/stm32f4xx_spi.c ****     if ((I2S_InitStruct->I2S_Mode == I2S_Mode_MasterRx) || (I2S_InitStruct->I2S_Mode == I2S_Mode_Sl
 769:FWLIB/src/stm32f4xx_spi.c ****     {
 770:FWLIB/src/stm32f4xx_spi.c ****       tmp = I2S_Mode_SlaveTx;
 771:FWLIB/src/stm32f4xx_spi.c ****     }
 772:FWLIB/src/stm32f4xx_spi.c ****   }
 773:FWLIB/src/stm32f4xx_spi.c **** 
 774:FWLIB/src/stm32f4xx_spi.c ****  
 775:FWLIB/src/stm32f4xx_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 776:FWLIB/src/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD | (uint16_t)(tmp | \
 993              		.loc 1 776 3 is_stmt 1 view .LVU299
 777:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 994              		.loc 1 777 44 is_stmt 0 view .LVU300
 995 002e 4B88     		ldrh	r3, [r1, #2]
 996              		.loc 1 777 86 view .LVU301
 997 0030 8C88     		ldrh	r4, [r1, #4]
 778:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 998              		.loc 1 778 43 view .LVU302
 999 0032 8989     		ldrh	r1, [r1, #12]
 1000              	.LVL82:
 777:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1001              		.loc 1 777 61 view .LVU303
 1002 0034 0C43     		orrs	r4, r4, r1
 777:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1003              		.loc 1 777 19 view .LVU304
 1004 0036 2343     		orrs	r3, r3, r4
 776:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1005              		.loc 1 776 55 view .LVU305
 1006 0038 2B43     		orrs	r3, r3, r5
 776:FWLIB/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1007              		.loc 1 776 10 view .LVU306
 1008 003a 1343     		orrs	r3, r3, r2
 1009 003c 43F40063 		orr	r3, r3, #2048
 1010              	.LVL83:
 779:FWLIB/src/stm32f4xx_spi.c ****  
 780:FWLIB/src/stm32f4xx_spi.c ****   /* Write to SPIx I2SCFGR */  
 781:FWLIB/src/stm32f4xx_spi.c ****   I2Sxext->I2SCFGR = tmpreg;
 1011              		.loc 1 781 3 is_stmt 1 view .LVU307
 1012              		.loc 1 781 20 is_stmt 0 view .LVU308
 1013 0040 8383     		strh	r3, [r0, #28]	@ movhi
 782:FWLIB/src/stm32f4xx_spi.c **** }
 1014              		.loc 1 782 1 view .LVU309
 1015 0042 30BC     		pop	{r4, r5}
 1016              	.LCFI6:
 1017              		.cfi_remember_state
 1018              		.cfi_restore 5
 1019              		.cfi_restore 4
ARM GAS  /tmp/cc7Dtwf5.s 			page 33


 1020              		.cfi_def_cfa_offset 0
 1021              	.LVL84:
 1022              		.loc 1 782 1 view .LVU310
 1023 0044 7047     		bx	lr
 1024              	.LVL85:
 1025              	.L60:
 1026              	.LCFI7:
 1027              		.cfi_restore_state
 770:FWLIB/src/stm32f4xx_spi.c ****     }
 1028              		.loc 1 770 11 view .LVU311
 1029 0046 0025     		movs	r5, #0
 1030 0048 F1E7     		b	.L58
 1031              		.cfi_endproc
 1032              	.LFE135:
 1034              		.section	.text.SPI_I2S_ReceiveData,"ax",%progbits
 1035              		.align	1
 1036              		.global	SPI_I2S_ReceiveData
 1037              		.syntax unified
 1038              		.thumb
 1039              		.thumb_func
 1040              		.fpu fpv4-sp-d16
 1042              	SPI_I2S_ReceiveData:
 1043              	.LVL86:
 1044              	.LFB136:
 783:FWLIB/src/stm32f4xx_spi.c **** 
 784:FWLIB/src/stm32f4xx_spi.c **** /**
 785:FWLIB/src/stm32f4xx_spi.c ****   * @}
 786:FWLIB/src/stm32f4xx_spi.c ****   */
 787:FWLIB/src/stm32f4xx_spi.c **** 
 788:FWLIB/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group2 Data transfers functions
 789:FWLIB/src/stm32f4xx_spi.c ****  *  @brief   Data transfers functions
 790:FWLIB/src/stm32f4xx_spi.c ****  *
 791:FWLIB/src/stm32f4xx_spi.c **** @verbatim   
 792:FWLIB/src/stm32f4xx_spi.c ****  ===============================================================================
 793:FWLIB/src/stm32f4xx_spi.c ****                       ##### Data transfers functions #####
 794:FWLIB/src/stm32f4xx_spi.c ****  ===============================================================================  
 795:FWLIB/src/stm32f4xx_spi.c **** 
 796:FWLIB/src/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to manage the SPI data 
 797:FWLIB/src/stm32f4xx_spi.c ****       transfers. In reception, data are received and then stored into an internal 
 798:FWLIB/src/stm32f4xx_spi.c ****       Rx buffer while. In transmission, data are first stored into an internal Tx 
 799:FWLIB/src/stm32f4xx_spi.c ****       buffer before being transmitted.
 800:FWLIB/src/stm32f4xx_spi.c **** 
 801:FWLIB/src/stm32f4xx_spi.c ****  [..] The read access of the SPI_DR register can be done using the SPI_I2S_ReceiveData()
 802:FWLIB/src/stm32f4xx_spi.c ****       function and returns the Rx buffered value. Whereas a write access to the SPI_DR 
 803:FWLIB/src/stm32f4xx_spi.c ****       can be done using SPI_I2S_SendData() function and stores the written data into 
 804:FWLIB/src/stm32f4xx_spi.c ****       Tx buffer.
 805:FWLIB/src/stm32f4xx_spi.c **** 
 806:FWLIB/src/stm32f4xx_spi.c **** @endverbatim
 807:FWLIB/src/stm32f4xx_spi.c ****   * @{
 808:FWLIB/src/stm32f4xx_spi.c ****   */
 809:FWLIB/src/stm32f4xx_spi.c **** 
 810:FWLIB/src/stm32f4xx_spi.c **** /**
 811:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Returns the most recent received data by the SPIx/I2Sx peripheral. 
 812:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
 813:FWLIB/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
 814:FWLIB/src/stm32f4xx_spi.c ****   * @retval The value of the received data.
 815:FWLIB/src/stm32f4xx_spi.c ****   */
ARM GAS  /tmp/cc7Dtwf5.s 			page 34


 816:FWLIB/src/stm32f4xx_spi.c **** uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
 817:FWLIB/src/stm32f4xx_spi.c **** {
 1045              		.loc 1 817 1 is_stmt 1 view -0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049              		@ link register save eliminated.
 818:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 819:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1050              		.loc 1 819 3 view .LVU313
 820:FWLIB/src/stm32f4xx_spi.c ****   
 821:FWLIB/src/stm32f4xx_spi.c ****   /* Return the data in the DR register */
 822:FWLIB/src/stm32f4xx_spi.c ****   return SPIx->DR;
 1051              		.loc 1 822 3 view .LVU314
 1052              		.loc 1 822 14 is_stmt 0 view .LVU315
 1053 0000 8089     		ldrh	r0, [r0, #12]
 1054              	.LVL87:
 823:FWLIB/src/stm32f4xx_spi.c **** }
 1055              		.loc 1 823 1 view .LVU316
 1056 0002 7047     		bx	lr
 1057              		.cfi_endproc
 1058              	.LFE136:
 1060              		.section	.text.SPI_I2S_SendData,"ax",%progbits
 1061              		.align	1
 1062              		.global	SPI_I2S_SendData
 1063              		.syntax unified
 1064              		.thumb
 1065              		.thumb_func
 1066              		.fpu fpv4-sp-d16
 1068              	SPI_I2S_SendData:
 1069              	.LVL88:
 1070              	.LFB137:
 824:FWLIB/src/stm32f4xx_spi.c **** 
 825:FWLIB/src/stm32f4xx_spi.c **** /**
 826:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Transmits a Data through the SPIx/I2Sx peripheral.
 827:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
 828:FWLIB/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.     
 829:FWLIB/src/stm32f4xx_spi.c ****   * @param  Data: Data to be transmitted.
 830:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 831:FWLIB/src/stm32f4xx_spi.c ****   */
 832:FWLIB/src/stm32f4xx_spi.c **** void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
 833:FWLIB/src/stm32f4xx_spi.c **** {
 1071              		.loc 1 833 1 is_stmt 1 view -0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075              		@ link register save eliminated.
 834:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 835:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1076              		.loc 1 835 3 view .LVU318
 836:FWLIB/src/stm32f4xx_spi.c ****   
 837:FWLIB/src/stm32f4xx_spi.c ****   /* Write in the DR register the data to be sent */
 838:FWLIB/src/stm32f4xx_spi.c ****   SPIx->DR = Data;
 1077              		.loc 1 838 3 view .LVU319
 1078              		.loc 1 838 12 is_stmt 0 view .LVU320
 1079 0000 8181     		strh	r1, [r0, #12]	@ movhi
 839:FWLIB/src/stm32f4xx_spi.c **** }
ARM GAS  /tmp/cc7Dtwf5.s 			page 35


 1080              		.loc 1 839 1 view .LVU321
 1081 0002 7047     		bx	lr
 1082              		.cfi_endproc
 1083              	.LFE137:
 1085              		.section	.text.SPI_CalculateCRC,"ax",%progbits
 1086              		.align	1
 1087              		.global	SPI_CalculateCRC
 1088              		.syntax unified
 1089              		.thumb
 1090              		.thumb_func
 1091              		.fpu fpv4-sp-d16
 1093              	SPI_CalculateCRC:
 1094              	.LVL89:
 1095              	.LFB138:
 840:FWLIB/src/stm32f4xx_spi.c **** 
 841:FWLIB/src/stm32f4xx_spi.c **** /**
 842:FWLIB/src/stm32f4xx_spi.c ****   * @}
 843:FWLIB/src/stm32f4xx_spi.c ****   */
 844:FWLIB/src/stm32f4xx_spi.c **** 
 845:FWLIB/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group3 Hardware CRC Calculation functions
 846:FWLIB/src/stm32f4xx_spi.c ****  *  @brief   Hardware CRC Calculation functions
 847:FWLIB/src/stm32f4xx_spi.c ****  *
 848:FWLIB/src/stm32f4xx_spi.c **** @verbatim   
 849:FWLIB/src/stm32f4xx_spi.c ****  ===============================================================================
 850:FWLIB/src/stm32f4xx_spi.c ****                  ##### Hardware CRC Calculation functions #####
 851:FWLIB/src/stm32f4xx_spi.c ****  ===============================================================================  
 852:FWLIB/src/stm32f4xx_spi.c **** 
 853:FWLIB/src/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to manage the SPI CRC hardware 
 854:FWLIB/src/stm32f4xx_spi.c ****       calculation
 855:FWLIB/src/stm32f4xx_spi.c **** 
 856:FWLIB/src/stm32f4xx_spi.c ****  [..] SPI communication using CRC is possible through the following procedure:
 857:FWLIB/src/stm32f4xx_spi.c ****    (#) Program the Data direction, Polarity, Phase, First Data, Baud Rate Prescaler, 
 858:FWLIB/src/stm32f4xx_spi.c ****        Slave Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
 859:FWLIB/src/stm32f4xx_spi.c ****        function.
 860:FWLIB/src/stm32f4xx_spi.c ****    (#) Enable the CRC calculation using the SPI_CalculateCRC() function.
 861:FWLIB/src/stm32f4xx_spi.c ****    (#) Enable the SPI using the SPI_Cmd() function
 862:FWLIB/src/stm32f4xx_spi.c ****    (#) Before writing the last data to the TX buffer, set the CRCNext bit using the 
 863:FWLIB/src/stm32f4xx_spi.c ****        SPI_TransmitCRC() function to indicate that after transmission of the last 
 864:FWLIB/src/stm32f4xx_spi.c ****        data, the CRC should be transmitted.
 865:FWLIB/src/stm32f4xx_spi.c ****    (#) After transmitting the last data, the SPI transmits the CRC. The SPI_CR1_CRCNEXT
 866:FWLIB/src/stm32f4xx_spi.c ****         bit is reset. The CRC is also received and compared against the SPI_RXCRCR 
 867:FWLIB/src/stm32f4xx_spi.c ****         value. 
 868:FWLIB/src/stm32f4xx_spi.c ****         If the value does not match, the SPI_FLAG_CRCERR flag is set and an interrupt
 869:FWLIB/src/stm32f4xx_spi.c ****         can be generated when the SPI_I2S_IT_ERR interrupt is enabled.
 870:FWLIB/src/stm32f4xx_spi.c **** 
 871:FWLIB/src/stm32f4xx_spi.c ****  [..]
 872:FWLIB/src/stm32f4xx_spi.c ****    (@) It is advised not to read the calculated CRC values during the communication.
 873:FWLIB/src/stm32f4xx_spi.c **** 
 874:FWLIB/src/stm32f4xx_spi.c ****    (@) When the SPI is in slave mode, be careful to enable CRC calculation only 
 875:FWLIB/src/stm32f4xx_spi.c ****        when the clock is stable, that is, when the clock is in the steady state. 
 876:FWLIB/src/stm32f4xx_spi.c ****        If not, a wrong CRC calculation may be done. In fact, the CRC is sensitive 
 877:FWLIB/src/stm32f4xx_spi.c ****        to the SCK slave input clock as soon as CRCEN is set, and this, whatever 
 878:FWLIB/src/stm32f4xx_spi.c ****        the value of the SPE bit.
 879:FWLIB/src/stm32f4xx_spi.c **** 
 880:FWLIB/src/stm32f4xx_spi.c ****    (@) With high bitrate frequencies, be careful when transmitting the CRC.
 881:FWLIB/src/stm32f4xx_spi.c ****        As the number of used CPU cycles has to be as low as possible in the CRC 
 882:FWLIB/src/stm32f4xx_spi.c ****        transfer phase, it is forbidden to call software functions in the CRC 
ARM GAS  /tmp/cc7Dtwf5.s 			page 36


 883:FWLIB/src/stm32f4xx_spi.c ****        transmission sequence to avoid errors in the last data and CRC reception. 
 884:FWLIB/src/stm32f4xx_spi.c ****        In fact, CRCNEXT bit has to be written before the end of the transmission/reception 
 885:FWLIB/src/stm32f4xx_spi.c ****        of the last data.
 886:FWLIB/src/stm32f4xx_spi.c **** 
 887:FWLIB/src/stm32f4xx_spi.c ****    (@) For high bit rate frequencies, it is advised to use the DMA mode to avoid the
 888:FWLIB/src/stm32f4xx_spi.c ****        degradation of the SPI speed performance due to CPU accesses impacting the 
 889:FWLIB/src/stm32f4xx_spi.c ****        SPI bandwidth.
 890:FWLIB/src/stm32f4xx_spi.c **** 
 891:FWLIB/src/stm32f4xx_spi.c ****    (@) When the STM32F4xx is configured as slave and the NSS hardware mode is 
 892:FWLIB/src/stm32f4xx_spi.c ****        used, the NSS pin needs to be kept low between the data phase and the CRC 
 893:FWLIB/src/stm32f4xx_spi.c ****        phase.
 894:FWLIB/src/stm32f4xx_spi.c **** 
 895:FWLIB/src/stm32f4xx_spi.c ****    (@) When the SPI is configured in slave mode with the CRC feature enabled, CRC
 896:FWLIB/src/stm32f4xx_spi.c ****        calculation takes place even if a high level is applied on the NSS pin. 
 897:FWLIB/src/stm32f4xx_spi.c ****        This may happen for example in case of a multi-slave environment where the 
 898:FWLIB/src/stm32f4xx_spi.c ****        communication master addresses slaves alternately.
 899:FWLIB/src/stm32f4xx_spi.c **** 
 900:FWLIB/src/stm32f4xx_spi.c ****    (@) Between a slave de-selection (high level on NSS) and a new slave selection 
 901:FWLIB/src/stm32f4xx_spi.c ****        (low level on NSS), the CRC value should be cleared on both master and slave
 902:FWLIB/src/stm32f4xx_spi.c ****        sides in order to resynchronize the master and slave for their respective 
 903:FWLIB/src/stm32f4xx_spi.c ****        CRC calculation.
 904:FWLIB/src/stm32f4xx_spi.c **** 
 905:FWLIB/src/stm32f4xx_spi.c ****    (@) To clear the CRC, follow the procedure below:
 906:FWLIB/src/stm32f4xx_spi.c ****        (#@) Disable SPI using the SPI_Cmd() function
 907:FWLIB/src/stm32f4xx_spi.c ****        (#@) Disable the CRC calculation using the SPI_CalculateCRC() function.
 908:FWLIB/src/stm32f4xx_spi.c ****        (#@) Enable the CRC calculation using the SPI_CalculateCRC() function.
 909:FWLIB/src/stm32f4xx_spi.c ****        (#@) Enable SPI using the SPI_Cmd() function.
 910:FWLIB/src/stm32f4xx_spi.c **** 
 911:FWLIB/src/stm32f4xx_spi.c **** @endverbatim
 912:FWLIB/src/stm32f4xx_spi.c ****   * @{
 913:FWLIB/src/stm32f4xx_spi.c ****   */
 914:FWLIB/src/stm32f4xx_spi.c **** 
 915:FWLIB/src/stm32f4xx_spi.c **** /**
 916:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the CRC value calculation of the transferred bytes.
 917:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 918:FWLIB/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx CRC value calculation.
 919:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 920:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 921:FWLIB/src/stm32f4xx_spi.c ****   */
 922:FWLIB/src/stm32f4xx_spi.c **** void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState)
 923:FWLIB/src/stm32f4xx_spi.c **** {
 1096              		.loc 1 923 1 is_stmt 1 view -0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 0
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100              		@ link register save eliminated.
 924:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 925:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1101              		.loc 1 925 3 view .LVU323
 926:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1102              		.loc 1 926 3 view .LVU324
 927:FWLIB/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1103              		.loc 1 927 3 view .LVU325
 1104              		.loc 1 927 6 is_stmt 0 view .LVU326
 1105 0000 21B1     		cbz	r1, .L65
 928:FWLIB/src/stm32f4xx_spi.c ****   {
 929:FWLIB/src/stm32f4xx_spi.c ****     /* Enable the selected SPI CRC calculation */
ARM GAS  /tmp/cc7Dtwf5.s 			page 37


 930:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_CR1_CRCEN;
 1106              		.loc 1 930 5 is_stmt 1 view .LVU327
 1107              		.loc 1 930 15 is_stmt 0 view .LVU328
 1108 0002 0388     		ldrh	r3, [r0]
 1109 0004 43F40053 		orr	r3, r3, #8192
 1110 0008 0380     		strh	r3, [r0]	@ movhi
 1111 000a 7047     		bx	lr
 1112              	.L65:
 931:FWLIB/src/stm32f4xx_spi.c ****   }
 932:FWLIB/src/stm32f4xx_spi.c ****   else
 933:FWLIB/src/stm32f4xx_spi.c ****   {
 934:FWLIB/src/stm32f4xx_spi.c ****     /* Disable the selected SPI CRC calculation */
 935:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_CRCEN);
 1113              		.loc 1 935 5 is_stmt 1 view .LVU329
 1114              		.loc 1 935 15 is_stmt 0 view .LVU330
 1115 000c 0388     		ldrh	r3, [r0]
 1116 000e 9BB2     		uxth	r3, r3
 1117 0010 23F40053 		bic	r3, r3, #8192
 1118 0014 9BB2     		uxth	r3, r3
 1119 0016 0380     		strh	r3, [r0]	@ movhi
 936:FWLIB/src/stm32f4xx_spi.c ****   }
 937:FWLIB/src/stm32f4xx_spi.c **** }
 1120              		.loc 1 937 1 view .LVU331
 1121 0018 7047     		bx	lr
 1122              		.cfi_endproc
 1123              	.LFE138:
 1125              		.section	.text.SPI_TransmitCRC,"ax",%progbits
 1126              		.align	1
 1127              		.global	SPI_TransmitCRC
 1128              		.syntax unified
 1129              		.thumb
 1130              		.thumb_func
 1131              		.fpu fpv4-sp-d16
 1133              	SPI_TransmitCRC:
 1134              	.LVL90:
 1135              	.LFB139:
 938:FWLIB/src/stm32f4xx_spi.c **** 
 939:FWLIB/src/stm32f4xx_spi.c **** /**
 940:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Transmit the SPIx CRC value.
 941:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 942:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
 943:FWLIB/src/stm32f4xx_spi.c ****   */
 944:FWLIB/src/stm32f4xx_spi.c **** void SPI_TransmitCRC(SPI_TypeDef* SPIx)
 945:FWLIB/src/stm32f4xx_spi.c **** {
 1136              		.loc 1 945 1 is_stmt 1 view -0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
 946:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 947:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1141              		.loc 1 947 3 view .LVU333
 948:FWLIB/src/stm32f4xx_spi.c ****   
 949:FWLIB/src/stm32f4xx_spi.c ****   /* Enable the selected SPI CRC transmission */
 950:FWLIB/src/stm32f4xx_spi.c ****   SPIx->CR1 |= SPI_CR1_CRCNEXT;
 1142              		.loc 1 950 3 view .LVU334
 1143              		.loc 1 950 13 is_stmt 0 view .LVU335
ARM GAS  /tmp/cc7Dtwf5.s 			page 38


 1144 0000 0388     		ldrh	r3, [r0]
 1145 0002 43F48053 		orr	r3, r3, #4096
 1146 0006 0380     		strh	r3, [r0]	@ movhi
 951:FWLIB/src/stm32f4xx_spi.c **** }
 1147              		.loc 1 951 1 view .LVU336
 1148 0008 7047     		bx	lr
 1149              		.cfi_endproc
 1150              	.LFE139:
 1152              		.section	.text.SPI_GetCRC,"ax",%progbits
 1153              		.align	1
 1154              		.global	SPI_GetCRC
 1155              		.syntax unified
 1156              		.thumb
 1157              		.thumb_func
 1158              		.fpu fpv4-sp-d16
 1160              	SPI_GetCRC:
 1161              	.LVL91:
 1162              	.LFB140:
 952:FWLIB/src/stm32f4xx_spi.c **** 
 953:FWLIB/src/stm32f4xx_spi.c **** /**
 954:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Returns the transmit or the receive CRC register value for the specified SPI.
 955:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 956:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPI_CRC: specifies the CRC register to be read.
 957:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 958:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_CRC_Tx: Selects Tx CRC register
 959:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_CRC_Rx: Selects Rx CRC register
 960:FWLIB/src/stm32f4xx_spi.c ****   * @retval The selected CRC register value..
 961:FWLIB/src/stm32f4xx_spi.c ****   */
 962:FWLIB/src/stm32f4xx_spi.c **** uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
 963:FWLIB/src/stm32f4xx_spi.c **** {
 1163              		.loc 1 963 1 is_stmt 1 view -0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 0
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
 1167              		@ link register save eliminated.
 964:FWLIB/src/stm32f4xx_spi.c ****   uint16_t crcreg = 0;
 1168              		.loc 1 964 3 view .LVU338
 965:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 966:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1169              		.loc 1 966 3 view .LVU339
 967:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CRC(SPI_CRC));
 1170              		.loc 1 967 3 view .LVU340
 968:FWLIB/src/stm32f4xx_spi.c ****   if (SPI_CRC != SPI_CRC_Rx)
 1171              		.loc 1 968 3 view .LVU341
 1172              		.loc 1 968 6 is_stmt 0 view .LVU342
 1173 0000 0129     		cmp	r1, #1
 1174 0002 02D0     		beq	.L69
 969:FWLIB/src/stm32f4xx_spi.c ****   {
 970:FWLIB/src/stm32f4xx_spi.c ****     /* Get the Tx CRC register */
 971:FWLIB/src/stm32f4xx_spi.c ****     crcreg = SPIx->TXCRCR;
 1175              		.loc 1 971 5 is_stmt 1 view .LVU343
 1176              		.loc 1 971 12 is_stmt 0 view .LVU344
 1177 0004 008B     		ldrh	r0, [r0, #24]
 1178              	.LVL92:
 1179              		.loc 1 971 12 view .LVU345
 1180 0006 80B2     		uxth	r0, r0
 1181              	.LVL93:
ARM GAS  /tmp/cc7Dtwf5.s 			page 39


 1182              		.loc 1 971 12 view .LVU346
 1183 0008 7047     		bx	lr
 1184              	.LVL94:
 1185              	.L69:
 972:FWLIB/src/stm32f4xx_spi.c ****   }
 973:FWLIB/src/stm32f4xx_spi.c ****   else
 974:FWLIB/src/stm32f4xx_spi.c ****   {
 975:FWLIB/src/stm32f4xx_spi.c ****     /* Get the Rx CRC register */
 976:FWLIB/src/stm32f4xx_spi.c ****     crcreg = SPIx->RXCRCR;
 1186              		.loc 1 976 5 is_stmt 1 view .LVU347
 1187              		.loc 1 976 12 is_stmt 0 view .LVU348
 1188 000a 808A     		ldrh	r0, [r0, #20]
 1189              	.LVL95:
 1190              		.loc 1 976 12 view .LVU349
 1191 000c 80B2     		uxth	r0, r0
 1192              	.LVL96:
 977:FWLIB/src/stm32f4xx_spi.c ****   }
 978:FWLIB/src/stm32f4xx_spi.c ****   /* Return the selected CRC register */
 979:FWLIB/src/stm32f4xx_spi.c ****   return crcreg;
 1193              		.loc 1 979 3 is_stmt 1 view .LVU350
 980:FWLIB/src/stm32f4xx_spi.c **** }
 1194              		.loc 1 980 1 is_stmt 0 view .LVU351
 1195 000e 7047     		bx	lr
 1196              		.cfi_endproc
 1197              	.LFE140:
 1199              		.section	.text.SPI_GetCRCPolynomial,"ax",%progbits
 1200              		.align	1
 1201              		.global	SPI_GetCRCPolynomial
 1202              		.syntax unified
 1203              		.thumb
 1204              		.thumb_func
 1205              		.fpu fpv4-sp-d16
 1207              	SPI_GetCRCPolynomial:
 1208              	.LVL97:
 1209              	.LFB141:
 981:FWLIB/src/stm32f4xx_spi.c **** 
 982:FWLIB/src/stm32f4xx_spi.c **** /**
 983:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Returns the CRC Polynomial register value for the specified SPI.
 984:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 985:FWLIB/src/stm32f4xx_spi.c ****   * @retval The CRC Polynomial register value.
 986:FWLIB/src/stm32f4xx_spi.c ****   */
 987:FWLIB/src/stm32f4xx_spi.c **** uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx)
 988:FWLIB/src/stm32f4xx_spi.c **** {
 1210              		.loc 1 988 1 is_stmt 1 view -0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
 989:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
 990:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1215              		.loc 1 990 3 view .LVU353
 991:FWLIB/src/stm32f4xx_spi.c ****   
 992:FWLIB/src/stm32f4xx_spi.c ****   /* Return the CRC polynomial register */
 993:FWLIB/src/stm32f4xx_spi.c ****   return SPIx->CRCPR;
 1216              		.loc 1 993 3 view .LVU354
 1217              		.loc 1 993 14 is_stmt 0 view .LVU355
 1218 0000 008A     		ldrh	r0, [r0, #16]
ARM GAS  /tmp/cc7Dtwf5.s 			page 40


 1219              	.LVL98:
 994:FWLIB/src/stm32f4xx_spi.c **** }
 1220              		.loc 1 994 1 view .LVU356
 1221 0002 7047     		bx	lr
 1222              		.cfi_endproc
 1223              	.LFE141:
 1225              		.section	.text.SPI_I2S_DMACmd,"ax",%progbits
 1226              		.align	1
 1227              		.global	SPI_I2S_DMACmd
 1228              		.syntax unified
 1229              		.thumb
 1230              		.thumb_func
 1231              		.fpu fpv4-sp-d16
 1233              	SPI_I2S_DMACmd:
 1234              	.LVL99:
 1235              	.LFB142:
 995:FWLIB/src/stm32f4xx_spi.c **** 
 996:FWLIB/src/stm32f4xx_spi.c **** /**
 997:FWLIB/src/stm32f4xx_spi.c ****   * @}
 998:FWLIB/src/stm32f4xx_spi.c ****   */
 999:FWLIB/src/stm32f4xx_spi.c **** 
1000:FWLIB/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group4 DMA transfers management functions
1001:FWLIB/src/stm32f4xx_spi.c ****  *  @brief   DMA transfers management functions
1002:FWLIB/src/stm32f4xx_spi.c ****   *
1003:FWLIB/src/stm32f4xx_spi.c **** @verbatim   
1004:FWLIB/src/stm32f4xx_spi.c ****  ===============================================================================
1005:FWLIB/src/stm32f4xx_spi.c ****                    ##### DMA transfers management functions #####
1006:FWLIB/src/stm32f4xx_spi.c ****  ===============================================================================  
1007:FWLIB/src/stm32f4xx_spi.c **** 
1008:FWLIB/src/stm32f4xx_spi.c **** @endverbatim
1009:FWLIB/src/stm32f4xx_spi.c ****   * @{
1010:FWLIB/src/stm32f4xx_spi.c ****   */
1011:FWLIB/src/stm32f4xx_spi.c **** 
1012:FWLIB/src/stm32f4xx_spi.c **** /**
1013:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
1014:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1015:FWLIB/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1016:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_DMAReq: specifies the SPI DMA transfer request to be enabled or disabled. 
1017:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be any combination of the following values:
1018:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_DMAReq_Tx: Tx buffer DMA transfer request
1019:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_DMAReq_Rx: Rx buffer DMA transfer request
1020:FWLIB/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the selected SPI DMA transfer request.
1021:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
1022:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
1023:FWLIB/src/stm32f4xx_spi.c ****   */
1024:FWLIB/src/stm32f4xx_spi.c **** void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
1025:FWLIB/src/stm32f4xx_spi.c **** {
 1236              		.loc 1 1025 1 is_stmt 1 view -0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 0
 1239              		@ frame_needed = 0, uses_anonymous_args = 0
 1240              		@ link register save eliminated.
1026:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
1027:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1241              		.loc 1 1027 3 view .LVU358
1028:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1242              		.loc 1 1028 3 view .LVU359
ARM GAS  /tmp/cc7Dtwf5.s 			page 41


1029:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_DMAREQ(SPI_I2S_DMAReq));
 1243              		.loc 1 1029 3 view .LVU360
1030:FWLIB/src/stm32f4xx_spi.c **** 
1031:FWLIB/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1244              		.loc 1 1031 3 view .LVU361
 1245              		.loc 1 1031 6 is_stmt 0 view .LVU362
 1246 0000 1AB1     		cbz	r2, .L73
1032:FWLIB/src/stm32f4xx_spi.c ****   {
1033:FWLIB/src/stm32f4xx_spi.c ****     /* Enable the selected SPI DMA requests */
1034:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR2 |= SPI_I2S_DMAReq;
 1247              		.loc 1 1034 5 is_stmt 1 view .LVU363
 1248              		.loc 1 1034 15 is_stmt 0 view .LVU364
 1249 0002 8388     		ldrh	r3, [r0, #4]
 1250 0004 1943     		orrs	r1, r1, r3
 1251              	.LVL100:
 1252              		.loc 1 1034 15 view .LVU365
 1253 0006 8180     		strh	r1, [r0, #4]	@ movhi
 1254 0008 7047     		bx	lr
 1255              	.LVL101:
 1256              	.L73:
1035:FWLIB/src/stm32f4xx_spi.c ****   }
1036:FWLIB/src/stm32f4xx_spi.c ****   else
1037:FWLIB/src/stm32f4xx_spi.c ****   {
1038:FWLIB/src/stm32f4xx_spi.c ****     /* Disable the selected SPI DMA requests */
1039:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_I2S_DMAReq;
 1257              		.loc 1 1039 5 is_stmt 1 view .LVU366
 1258              		.loc 1 1039 15 is_stmt 0 view .LVU367
 1259 000a 8388     		ldrh	r3, [r0, #4]
 1260 000c 23EA0101 		bic	r1, r3, r1
 1261              	.LVL102:
 1262              		.loc 1 1039 15 view .LVU368
 1263 0010 8180     		strh	r1, [r0, #4]	@ movhi
1040:FWLIB/src/stm32f4xx_spi.c ****   }
1041:FWLIB/src/stm32f4xx_spi.c **** }
 1264              		.loc 1 1041 1 view .LVU369
 1265 0012 7047     		bx	lr
 1266              		.cfi_endproc
 1267              	.LFE142:
 1269              		.section	.text.SPI_I2S_ITConfig,"ax",%progbits
 1270              		.align	1
 1271              		.global	SPI_I2S_ITConfig
 1272              		.syntax unified
 1273              		.thumb
 1274              		.thumb_func
 1275              		.fpu fpv4-sp-d16
 1277              	SPI_I2S_ITConfig:
 1278              	.LVL103:
 1279              	.LFB143:
1042:FWLIB/src/stm32f4xx_spi.c **** 
1043:FWLIB/src/stm32f4xx_spi.c **** /**
1044:FWLIB/src/stm32f4xx_spi.c ****   * @}
1045:FWLIB/src/stm32f4xx_spi.c ****   */
1046:FWLIB/src/stm32f4xx_spi.c **** 
1047:FWLIB/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group5 Interrupts and flags management functions
1048:FWLIB/src/stm32f4xx_spi.c ****  *  @brief   Interrupts and flags management functions
1049:FWLIB/src/stm32f4xx_spi.c ****   *
1050:FWLIB/src/stm32f4xx_spi.c **** @verbatim   
ARM GAS  /tmp/cc7Dtwf5.s 			page 42


1051:FWLIB/src/stm32f4xx_spi.c ****  ===============================================================================
1052:FWLIB/src/stm32f4xx_spi.c ****             ##### Interrupts and flags management functions #####
1053:FWLIB/src/stm32f4xx_spi.c ****  ===============================================================================  
1054:FWLIB/src/stm32f4xx_spi.c ****  
1055:FWLIB/src/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to configure the SPI Interrupts 
1056:FWLIB/src/stm32f4xx_spi.c ****       sources and check or clear the flags or pending bits status.
1057:FWLIB/src/stm32f4xx_spi.c ****       The user should identify which mode will be used in his application to manage 
1058:FWLIB/src/stm32f4xx_spi.c ****       the communication: Polling mode, Interrupt mode or DMA mode. 
1059:FWLIB/src/stm32f4xx_spi.c ****     
1060:FWLIB/src/stm32f4xx_spi.c ****  *** Polling Mode ***
1061:FWLIB/src/stm32f4xx_spi.c ****  ====================
1062:FWLIB/src/stm32f4xx_spi.c **** [..] In Polling Mode, the SPI/I2S communication can be managed by 9 flags:
1063:FWLIB/src/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_TXE : to indicate the status of the transmit buffer register
1064:FWLIB/src/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_RXNE : to indicate the status of the receive buffer register
1065:FWLIB/src/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_BSY : to indicate the state of the communication layer of the SPI.
1066:FWLIB/src/stm32f4xx_spi.c ****   (#) SPI_FLAG_CRCERR : to indicate if a CRC Calculation error occur              
1067:FWLIB/src/stm32f4xx_spi.c ****   (#) SPI_FLAG_MODF : to indicate if a Mode Fault error occur
1068:FWLIB/src/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_OVR : to indicate if an Overrun error occur
1069:FWLIB/src/stm32f4xx_spi.c ****   (#) I2S_FLAG_TIFRFE: to indicate a Frame Format error occurs.
1070:FWLIB/src/stm32f4xx_spi.c ****   (#) I2S_FLAG_UDR: to indicate an Underrun error occurs.
1071:FWLIB/src/stm32f4xx_spi.c ****   (#) I2S_FLAG_CHSIDE: to indicate Channel Side.
1072:FWLIB/src/stm32f4xx_spi.c **** 
1073:FWLIB/src/stm32f4xx_spi.c ****   (@) Do not use the BSY flag to handle each data transmission or reception. It is
1074:FWLIB/src/stm32f4xx_spi.c ****       better to use the TXE and RXNE flags instead.
1075:FWLIB/src/stm32f4xx_spi.c **** 
1076:FWLIB/src/stm32f4xx_spi.c ****  [..] In this Mode it is advised to use the following functions:
1077:FWLIB/src/stm32f4xx_spi.c ****    (+) FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
1078:FWLIB/src/stm32f4xx_spi.c ****    (+) void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
1079:FWLIB/src/stm32f4xx_spi.c **** 
1080:FWLIB/src/stm32f4xx_spi.c ****  *** Interrupt Mode ***
1081:FWLIB/src/stm32f4xx_spi.c ****  ======================
1082:FWLIB/src/stm32f4xx_spi.c ****  [..] In Interrupt Mode, the SPI communication can be managed by 3 interrupt sources
1083:FWLIB/src/stm32f4xx_spi.c ****       and 7 pending bits: 
1084:FWLIB/src/stm32f4xx_spi.c ****    (+) Pending Bits:
1085:FWLIB/src/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_TXE : to indicate the status of the transmit buffer register
1086:FWLIB/src/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_RXNE : to indicate the status of the receive buffer register
1087:FWLIB/src/stm32f4xx_spi.c ****        (##) SPI_IT_CRCERR : to indicate if a CRC Calculation error occur (available in SPI mode onl
1088:FWLIB/src/stm32f4xx_spi.c ****        (##) SPI_IT_MODF : to indicate if a Mode Fault error occur (available in SPI mode only)
1089:FWLIB/src/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_OVR : to indicate if an Overrun error occur
1090:FWLIB/src/stm32f4xx_spi.c ****        (##) I2S_IT_UDR : to indicate an Underrun Error occurs (available in I2S mode only).
1091:FWLIB/src/stm32f4xx_spi.c ****        (##) I2S_FLAG_TIFRFE : to indicate a Frame Format error occurs (available in TI mode only).
1092:FWLIB/src/stm32f4xx_spi.c **** 
1093:FWLIB/src/stm32f4xx_spi.c ****    (+) Interrupt Source:
1094:FWLIB/src/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_TXE: specifies the interrupt source for the Tx buffer empty 
1095:FWLIB/src/stm32f4xx_spi.c ****             interrupt.  
1096:FWLIB/src/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_RXNE : specifies the interrupt source for the Rx buffer not 
1097:FWLIB/src/stm32f4xx_spi.c ****             empty interrupt.
1098:FWLIB/src/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_ERR : specifies the interrupt source for the errors interrupt.
1099:FWLIB/src/stm32f4xx_spi.c **** 
1100:FWLIB/src/stm32f4xx_spi.c ****  [..] In this Mode it is advised to use the following functions:
1101:FWLIB/src/stm32f4xx_spi.c ****    (+) void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState);
1102:FWLIB/src/stm32f4xx_spi.c ****    (+) ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
1103:FWLIB/src/stm32f4xx_spi.c ****    (+) void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
1104:FWLIB/src/stm32f4xx_spi.c **** 
1105:FWLIB/src/stm32f4xx_spi.c ****  *** DMA Mode ***
1106:FWLIB/src/stm32f4xx_spi.c ****  ================
1107:FWLIB/src/stm32f4xx_spi.c ****  [..] In DMA Mode, the SPI communication can be managed by 2 DMA Channel requests:
ARM GAS  /tmp/cc7Dtwf5.s 			page 43


1108:FWLIB/src/stm32f4xx_spi.c ****    (#) SPI_I2S_DMAReq_Tx: specifies the Tx buffer DMA transfer request
1109:FWLIB/src/stm32f4xx_spi.c ****    (#) SPI_I2S_DMAReq_Rx: specifies the Rx buffer DMA transfer request
1110:FWLIB/src/stm32f4xx_spi.c **** 
1111:FWLIB/src/stm32f4xx_spi.c ****  [..] In this Mode it is advised to use the following function:
1112:FWLIB/src/stm32f4xx_spi.c ****    (+) void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState 
1113:FWLIB/src/stm32f4xx_spi.c ****        NewState);
1114:FWLIB/src/stm32f4xx_spi.c **** 
1115:FWLIB/src/stm32f4xx_spi.c **** @endverbatim
1116:FWLIB/src/stm32f4xx_spi.c ****   * @{
1117:FWLIB/src/stm32f4xx_spi.c ****   */
1118:FWLIB/src/stm32f4xx_spi.c **** 
1119:FWLIB/src/stm32f4xx_spi.c **** /**
1120:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI/I2S interrupts.
1121:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1122:FWLIB/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1123:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt source to be enabled or disabled. 
1124:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1125:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TXE: Tx buffer empty interrupt mask
1126:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_RXNE: Rx buffer not empty interrupt mask
1127:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_ERR: Error interrupt mask
1128:FWLIB/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the specified SPI interrupt.
1129:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
1130:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
1131:FWLIB/src/stm32f4xx_spi.c ****   */
1132:FWLIB/src/stm32f4xx_spi.c **** void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
1133:FWLIB/src/stm32f4xx_spi.c **** {
 1280              		.loc 1 1133 1 is_stmt 1 view -0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 0
 1283              		@ frame_needed = 0, uses_anonymous_args = 0
 1284              		@ link register save eliminated.
1134:FWLIB/src/stm32f4xx_spi.c ****   uint16_t itpos = 0, itmask = 0 ;
 1285              		.loc 1 1134 3 view .LVU371
1135:FWLIB/src/stm32f4xx_spi.c ****   
1136:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
1137:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1286              		.loc 1 1137 3 view .LVU372
1138:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1287              		.loc 1 1138 3 view .LVU373
1139:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CONFIG_IT(SPI_I2S_IT));
 1288              		.loc 1 1139 3 view .LVU374
1140:FWLIB/src/stm32f4xx_spi.c **** 
1141:FWLIB/src/stm32f4xx_spi.c ****   /* Get the SPI IT index */
1142:FWLIB/src/stm32f4xx_spi.c ****   itpos = SPI_I2S_IT >> 4;
 1289              		.loc 1 1142 3 view .LVU375
 1290              		.loc 1 1142 9 is_stmt 0 view .LVU376
 1291 0000 0909     		lsrs	r1, r1, #4
 1292              	.LVL104:
1143:FWLIB/src/stm32f4xx_spi.c **** 
1144:FWLIB/src/stm32f4xx_spi.c ****   /* Set the IT mask */
1145:FWLIB/src/stm32f4xx_spi.c ****   itmask = (uint16_t)1 << (uint16_t)itpos;
 1293              		.loc 1 1145 3 is_stmt 1 view .LVU377
 1294              		.loc 1 1145 24 is_stmt 0 view .LVU378
 1295 0002 0123     		movs	r3, #1
 1296 0004 8B40     		lsls	r3, r3, r1
 1297              		.loc 1 1145 10 view .LVU379
 1298 0006 9BB2     		uxth	r3, r3
ARM GAS  /tmp/cc7Dtwf5.s 			page 44


 1299              	.LVL105:
1146:FWLIB/src/stm32f4xx_spi.c **** 
1147:FWLIB/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1300              		.loc 1 1147 3 is_stmt 1 view .LVU380
 1301              		.loc 1 1147 6 is_stmt 0 view .LVU381
 1302 0008 1AB1     		cbz	r2, .L76
1148:FWLIB/src/stm32f4xx_spi.c ****   {
1149:FWLIB/src/stm32f4xx_spi.c ****     /* Enable the selected SPI interrupt */
1150:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR2 |= itmask;
 1303              		.loc 1 1150 5 is_stmt 1 view .LVU382
 1304              		.loc 1 1150 15 is_stmt 0 view .LVU383
 1305 000a 8188     		ldrh	r1, [r0, #4]
 1306              	.LVL106:
 1307              		.loc 1 1150 15 view .LVU384
 1308 000c 0B43     		orrs	r3, r3, r1
 1309              	.LVL107:
 1310              		.loc 1 1150 15 view .LVU385
 1311 000e 8380     		strh	r3, [r0, #4]	@ movhi
 1312 0010 7047     		bx	lr
 1313              	.LVL108:
 1314              	.L76:
1151:FWLIB/src/stm32f4xx_spi.c ****   }
1152:FWLIB/src/stm32f4xx_spi.c ****   else
1153:FWLIB/src/stm32f4xx_spi.c ****   {
1154:FWLIB/src/stm32f4xx_spi.c ****     /* Disable the selected SPI interrupt */
1155:FWLIB/src/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~itmask;
 1315              		.loc 1 1155 5 is_stmt 1 view .LVU386
 1316              		.loc 1 1155 15 is_stmt 0 view .LVU387
 1317 0012 8188     		ldrh	r1, [r0, #4]
 1318              	.LVL109:
 1319              		.loc 1 1155 15 view .LVU388
 1320 0014 21EA0303 		bic	r3, r1, r3
 1321              	.LVL110:
 1322              		.loc 1 1155 15 view .LVU389
 1323 0018 8380     		strh	r3, [r0, #4]	@ movhi
1156:FWLIB/src/stm32f4xx_spi.c ****   }
1157:FWLIB/src/stm32f4xx_spi.c **** }
 1324              		.loc 1 1157 1 view .LVU390
 1325 001a 7047     		bx	lr
 1326              		.cfi_endproc
 1327              	.LFE143:
 1329              		.section	.text.SPI_I2S_GetFlagStatus,"ax",%progbits
 1330              		.align	1
 1331              		.global	SPI_I2S_GetFlagStatus
 1332              		.syntax unified
 1333              		.thumb
 1334              		.thumb_func
 1335              		.fpu fpv4-sp-d16
 1337              	SPI_I2S_GetFlagStatus:
 1338              	.LVL111:
 1339              	.LFB144:
1158:FWLIB/src/stm32f4xx_spi.c **** 
1159:FWLIB/src/stm32f4xx_spi.c **** /**
1160:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Checks whether the specified SPIx/I2Sx flag is set or not.
1161:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1162:FWLIB/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1163:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to check. 
ARM GAS  /tmp/cc7Dtwf5.s 			page 45


1164:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1165:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_TXE: Transmit buffer empty flag.
1166:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_RXNE: Receive buffer not empty flag.
1167:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_BSY: Busy flag.
1168:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_OVR: Overrun flag.
1169:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_MODF: Mode Fault flag.
1170:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_CRCERR: CRC Error flag.
1171:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_TIFRFE: Format Error.
1172:FWLIB/src/stm32f4xx_spi.c ****   *            @arg I2S_FLAG_UDR: Underrun Error flag.
1173:FWLIB/src/stm32f4xx_spi.c ****   *            @arg I2S_FLAG_CHSIDE: Channel Side flag.  
1174:FWLIB/src/stm32f4xx_spi.c ****   * @retval The new state of SPI_I2S_FLAG (SET or RESET).
1175:FWLIB/src/stm32f4xx_spi.c ****   */
1176:FWLIB/src/stm32f4xx_spi.c **** FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
1177:FWLIB/src/stm32f4xx_spi.c **** {
 1340              		.loc 1 1177 1 is_stmt 1 view -0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 0
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
 1344              		@ link register save eliminated.
1178:FWLIB/src/stm32f4xx_spi.c ****   FlagStatus bitstatus = RESET;
 1345              		.loc 1 1178 3 view .LVU392
1179:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
1180:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1346              		.loc 1 1180 3 view .LVU393
1181:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
 1347              		.loc 1 1181 3 view .LVU394
1182:FWLIB/src/stm32f4xx_spi.c ****   
1183:FWLIB/src/stm32f4xx_spi.c ****   /* Check the status of the specified SPI flag */
1184:FWLIB/src/stm32f4xx_spi.c ****   if ((SPIx->SR & SPI_I2S_FLAG) != (uint16_t)RESET)
 1348              		.loc 1 1184 3 view .LVU395
 1349              		.loc 1 1184 12 is_stmt 0 view .LVU396
 1350 0000 0389     		ldrh	r3, [r0, #8]
 1351              		.loc 1 1184 6 view .LVU397
 1352 0002 1942     		tst	r1, r3
 1353 0004 01D0     		beq	.L80
1185:FWLIB/src/stm32f4xx_spi.c ****   {
1186:FWLIB/src/stm32f4xx_spi.c ****     /* SPI_I2S_FLAG is set */
1187:FWLIB/src/stm32f4xx_spi.c ****     bitstatus = SET;
 1354              		.loc 1 1187 15 view .LVU398
 1355 0006 0120     		movs	r0, #1
 1356              	.LVL112:
 1357              		.loc 1 1187 15 view .LVU399
 1358 0008 7047     		bx	lr
 1359              	.LVL113:
 1360              	.L80:
1188:FWLIB/src/stm32f4xx_spi.c ****   }
1189:FWLIB/src/stm32f4xx_spi.c ****   else
1190:FWLIB/src/stm32f4xx_spi.c ****   {
1191:FWLIB/src/stm32f4xx_spi.c ****     /* SPI_I2S_FLAG is reset */
1192:FWLIB/src/stm32f4xx_spi.c ****     bitstatus = RESET;
 1361              		.loc 1 1192 15 view .LVU400
 1362 000a 0020     		movs	r0, #0
 1363              	.LVL114:
1193:FWLIB/src/stm32f4xx_spi.c ****   }
1194:FWLIB/src/stm32f4xx_spi.c ****   /* Return the SPI_I2S_FLAG status */
1195:FWLIB/src/stm32f4xx_spi.c ****   return  bitstatus;
 1364              		.loc 1 1195 3 is_stmt 1 view .LVU401
ARM GAS  /tmp/cc7Dtwf5.s 			page 46


1196:FWLIB/src/stm32f4xx_spi.c **** }
 1365              		.loc 1 1196 1 is_stmt 0 view .LVU402
 1366 000c 7047     		bx	lr
 1367              		.cfi_endproc
 1368              	.LFE144:
 1370              		.section	.text.SPI_I2S_ClearFlag,"ax",%progbits
 1371              		.align	1
 1372              		.global	SPI_I2S_ClearFlag
 1373              		.syntax unified
 1374              		.thumb
 1375              		.thumb_func
 1376              		.fpu fpv4-sp-d16
 1378              	SPI_I2S_ClearFlag:
 1379              	.LVL115:
 1380              	.LFB145:
1197:FWLIB/src/stm32f4xx_spi.c **** 
1198:FWLIB/src/stm32f4xx_spi.c **** /**
1199:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) flag.
1200:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1201:FWLIB/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1202:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to clear. 
1203:FWLIB/src/stm32f4xx_spi.c ****   *          This function clears only CRCERR flag.
1204:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_CRCERR: CRC Error flag.  
1205:FWLIB/src/stm32f4xx_spi.c ****   *  
1206:FWLIB/src/stm32f4xx_spi.c ****   * @note   OVR (OverRun error) flag is cleared by software sequence: a read 
1207:FWLIB/src/stm32f4xx_spi.c ****   *          operation to SPI_DR register (SPI_I2S_ReceiveData()) followed by a read 
1208:FWLIB/src/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetFlagStatus()).
1209:FWLIB/src/stm32f4xx_spi.c ****   * @note   UDR (UnderRun error) flag is cleared by a read operation to 
1210:FWLIB/src/stm32f4xx_spi.c ****   *          SPI_SR register (SPI_I2S_GetFlagStatus()).   
1211:FWLIB/src/stm32f4xx_spi.c ****   * @note   MODF (Mode Fault) flag is cleared by software sequence: a read/write 
1212:FWLIB/src/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetFlagStatus()) followed by a 
1213:FWLIB/src/stm32f4xx_spi.c ****   *          write operation to SPI_CR1 register (SPI_Cmd() to enable the SPI).
1214:FWLIB/src/stm32f4xx_spi.c ****   *  
1215:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
1216:FWLIB/src/stm32f4xx_spi.c ****   */
1217:FWLIB/src/stm32f4xx_spi.c **** void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
1218:FWLIB/src/stm32f4xx_spi.c **** {
 1381              		.loc 1 1218 1 is_stmt 1 view -0
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 0
 1384              		@ frame_needed = 0, uses_anonymous_args = 0
 1385              		@ link register save eliminated.
1219:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
1220:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1386              		.loc 1 1220 3 view .LVU404
1221:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_FLAG(SPI_I2S_FLAG));
 1387              		.loc 1 1221 3 view .LVU405
1222:FWLIB/src/stm32f4xx_spi.c ****     
1223:FWLIB/src/stm32f4xx_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) flag */
1224:FWLIB/src/stm32f4xx_spi.c ****   SPIx->SR = (uint16_t)~SPI_I2S_FLAG;
 1388              		.loc 1 1224 3 view .LVU406
 1389              		.loc 1 1224 14 is_stmt 0 view .LVU407
 1390 0000 C943     		mvns	r1, r1
 1391              	.LVL116:
 1392              		.loc 1 1224 14 view .LVU408
 1393 0002 89B2     		uxth	r1, r1
 1394              		.loc 1 1224 12 view .LVU409
ARM GAS  /tmp/cc7Dtwf5.s 			page 47


 1395 0004 0181     		strh	r1, [r0, #8]	@ movhi
1225:FWLIB/src/stm32f4xx_spi.c **** }
 1396              		.loc 1 1225 1 view .LVU410
 1397 0006 7047     		bx	lr
 1398              		.cfi_endproc
 1399              	.LFE145:
 1401              		.section	.text.SPI_I2S_GetITStatus,"ax",%progbits
 1402              		.align	1
 1403              		.global	SPI_I2S_GetITStatus
 1404              		.syntax unified
 1405              		.thumb
 1406              		.thumb_func
 1407              		.fpu fpv4-sp-d16
 1409              	SPI_I2S_GetITStatus:
 1410              	.LVL117:
 1411              	.LFB146:
1226:FWLIB/src/stm32f4xx_spi.c **** 
1227:FWLIB/src/stm32f4xx_spi.c **** /**
1228:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Checks whether the specified SPIx/I2Sx interrupt has occurred or not.
1229:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1230:FWLIB/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.  
1231:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt source to check. 
1232:FWLIB/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1233:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TXE: Transmit buffer empty interrupt.
1234:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_RXNE: Receive buffer not empty interrupt.
1235:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_OVR: Overrun interrupt.
1236:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_IT_MODF: Mode Fault interrupt.
1237:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_IT_CRCERR: CRC Error interrupt.
1238:FWLIB/src/stm32f4xx_spi.c ****   *            @arg I2S_IT_UDR: Underrun interrupt.  
1239:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TIFRFE: Format Error interrupt.  
1240:FWLIB/src/stm32f4xx_spi.c ****   * @retval The new state of SPI_I2S_IT (SET or RESET).
1241:FWLIB/src/stm32f4xx_spi.c ****   */
1242:FWLIB/src/stm32f4xx_spi.c **** ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
1243:FWLIB/src/stm32f4xx_spi.c **** {
 1412              		.loc 1 1243 1 is_stmt 1 view -0
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 0
 1415              		@ frame_needed = 0, uses_anonymous_args = 0
 1416              		@ link register save eliminated.
1244:FWLIB/src/stm32f4xx_spi.c ****   ITStatus bitstatus = RESET;
 1417              		.loc 1 1244 3 view .LVU412
1245:FWLIB/src/stm32f4xx_spi.c ****   uint16_t itpos = 0, itmask = 0, enablestatus = 0;
 1418              		.loc 1 1245 3 view .LVU413
1246:FWLIB/src/stm32f4xx_spi.c **** 
1247:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
1248:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1419              		.loc 1 1248 3 view .LVU414
1249:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_GET_IT(SPI_I2S_IT));
 1420              		.loc 1 1249 3 view .LVU415
1250:FWLIB/src/stm32f4xx_spi.c **** 
1251:FWLIB/src/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT index */
1252:FWLIB/src/stm32f4xx_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 1421              		.loc 1 1252 3 view .LVU416
 1422              		.loc 1 1252 31 is_stmt 0 view .LVU417
 1423 0000 01F00F02 		and	r2, r1, #15
 1424              		.loc 1 1252 16 view .LVU418
 1425 0004 0123     		movs	r3, #1
ARM GAS  /tmp/cc7Dtwf5.s 			page 48


 1426 0006 03FA02F2 		lsl	r2, r3, r2
 1427              	.LVL118:
1253:FWLIB/src/stm32f4xx_spi.c **** 
1254:FWLIB/src/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT IT mask */
1255:FWLIB/src/stm32f4xx_spi.c ****   itmask = SPI_I2S_IT >> 4;
 1428              		.loc 1 1255 3 is_stmt 1 view .LVU419
 1429              		.loc 1 1255 10 is_stmt 0 view .LVU420
 1430 000a 0909     		lsrs	r1, r1, #4
 1431              	.LVL119:
1256:FWLIB/src/stm32f4xx_spi.c **** 
1257:FWLIB/src/stm32f4xx_spi.c ****   /* Set the IT mask */
1258:FWLIB/src/stm32f4xx_spi.c ****   itmask = 0x01 << itmask;
 1432              		.loc 1 1258 3 is_stmt 1 view .LVU421
 1433              		.loc 1 1258 17 is_stmt 0 view .LVU422
 1434 000c 8B40     		lsls	r3, r3, r1
 1435              	.LVL120:
1259:FWLIB/src/stm32f4xx_spi.c **** 
1260:FWLIB/src/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT enable bit status */
1261:FWLIB/src/stm32f4xx_spi.c ****   enablestatus = (SPIx->CR2 & itmask) ;
 1436              		.loc 1 1261 3 is_stmt 1 view .LVU423
 1437              		.loc 1 1261 23 is_stmt 0 view .LVU424
 1438 000e 8188     		ldrh	r1, [r0, #4]
 1439              		.loc 1 1261 16 view .LVU425
 1440 0010 0B40     		ands	r3, r3, r1
 1441              	.LVL121:
1262:FWLIB/src/stm32f4xx_spi.c **** 
1263:FWLIB/src/stm32f4xx_spi.c ****   /* Check the status of the specified SPI interrupt */
1264:FWLIB/src/stm32f4xx_spi.c ****   if (((SPIx->SR & itpos) != (uint16_t)RESET) && enablestatus)
 1442              		.loc 1 1264 3 is_stmt 1 view .LVU426
 1443              		.loc 1 1264 13 is_stmt 0 view .LVU427
 1444 0012 0189     		ldrh	r1, [r0, #8]
 1445              		.loc 1 1264 6 view .LVU428
 1446 0014 0A42     		tst	r2, r1
 1447 0016 02D0     		beq	.L84
 1448              		.loc 1 1264 47 discriminator 1 view .LVU429
 1449 0018 1BB9     		cbnz	r3, .L85
1265:FWLIB/src/stm32f4xx_spi.c ****   {
1266:FWLIB/src/stm32f4xx_spi.c ****     /* SPI_I2S_IT is set */
1267:FWLIB/src/stm32f4xx_spi.c ****     bitstatus = SET;
1268:FWLIB/src/stm32f4xx_spi.c ****   }
1269:FWLIB/src/stm32f4xx_spi.c ****   else
1270:FWLIB/src/stm32f4xx_spi.c ****   {
1271:FWLIB/src/stm32f4xx_spi.c ****     /* SPI_I2S_IT is reset */
1272:FWLIB/src/stm32f4xx_spi.c ****     bitstatus = RESET;
 1450              		.loc 1 1272 15 view .LVU430
 1451 001a 0020     		movs	r0, #0
 1452              	.LVL122:
 1453              		.loc 1 1272 15 view .LVU431
 1454 001c 7047     		bx	lr
 1455              	.LVL123:
 1456              	.L84:
 1457              		.loc 1 1272 15 view .LVU432
 1458 001e 0020     		movs	r0, #0
 1459              	.LVL124:
 1460              		.loc 1 1272 15 view .LVU433
 1461 0020 7047     		bx	lr
 1462              	.LVL125:
ARM GAS  /tmp/cc7Dtwf5.s 			page 49


 1463              	.L85:
1267:FWLIB/src/stm32f4xx_spi.c ****   }
 1464              		.loc 1 1267 15 view .LVU434
 1465 0022 0120     		movs	r0, #1
 1466              	.LVL126:
1273:FWLIB/src/stm32f4xx_spi.c ****   }
1274:FWLIB/src/stm32f4xx_spi.c ****   /* Return the SPI_I2S_IT status */
1275:FWLIB/src/stm32f4xx_spi.c ****   return bitstatus;
 1467              		.loc 1 1275 3 is_stmt 1 view .LVU435
1276:FWLIB/src/stm32f4xx_spi.c **** }
 1468              		.loc 1 1276 1 is_stmt 0 view .LVU436
 1469 0024 7047     		bx	lr
 1470              		.cfi_endproc
 1471              	.LFE146:
 1473              		.section	.text.SPI_I2S_ClearITPendingBit,"ax",%progbits
 1474              		.align	1
 1475              		.global	SPI_I2S_ClearITPendingBit
 1476              		.syntax unified
 1477              		.thumb
 1478              		.thumb_func
 1479              		.fpu fpv4-sp-d16
 1481              	SPI_I2S_ClearITPendingBit:
 1482              	.LVL127:
 1483              	.LFB147:
1277:FWLIB/src/stm32f4xx_spi.c **** 
1278:FWLIB/src/stm32f4xx_spi.c **** /**
1279:FWLIB/src/stm32f4xx_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) interrupt pending bit.
1280:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1281:FWLIB/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.  
1282:FWLIB/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt pending bit to clear.
1283:FWLIB/src/stm32f4xx_spi.c ****   *         This function clears only CRCERR interrupt pending bit.   
1284:FWLIB/src/stm32f4xx_spi.c ****   *            @arg SPI_IT_CRCERR: CRC Error interrupt.
1285:FWLIB/src/stm32f4xx_spi.c ****   *   
1286:FWLIB/src/stm32f4xx_spi.c ****   * @note   OVR (OverRun Error) interrupt pending bit is cleared by software 
1287:FWLIB/src/stm32f4xx_spi.c ****   *          sequence: a read operation to SPI_DR register (SPI_I2S_ReceiveData()) 
1288:FWLIB/src/stm32f4xx_spi.c ****   *          followed by a read operation to SPI_SR register (SPI_I2S_GetITStatus()).
1289:FWLIB/src/stm32f4xx_spi.c ****   * @note   UDR (UnderRun Error) interrupt pending bit is cleared by a read 
1290:FWLIB/src/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetITStatus()).   
1291:FWLIB/src/stm32f4xx_spi.c ****   * @note   MODF (Mode Fault) interrupt pending bit is cleared by software sequence:
1292:FWLIB/src/stm32f4xx_spi.c ****   *          a read/write operation to SPI_SR register (SPI_I2S_GetITStatus()) 
1293:FWLIB/src/stm32f4xx_spi.c ****   *          followed by a write operation to SPI_CR1 register (SPI_Cmd() to enable 
1294:FWLIB/src/stm32f4xx_spi.c ****   *          the SPI).
1295:FWLIB/src/stm32f4xx_spi.c ****   * @retval None
1296:FWLIB/src/stm32f4xx_spi.c ****   */
1297:FWLIB/src/stm32f4xx_spi.c **** void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
1298:FWLIB/src/stm32f4xx_spi.c **** {
 1484              		.loc 1 1298 1 is_stmt 1 view -0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 0
 1487              		@ frame_needed = 0, uses_anonymous_args = 0
 1488              		@ link register save eliminated.
1299:FWLIB/src/stm32f4xx_spi.c ****   uint16_t itpos = 0;
 1489              		.loc 1 1299 3 view .LVU438
1300:FWLIB/src/stm32f4xx_spi.c ****   /* Check the parameters */
1301:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1490              		.loc 1 1301 3 view .LVU439
1302:FWLIB/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_IT(SPI_I2S_IT));
ARM GAS  /tmp/cc7Dtwf5.s 			page 50


 1491              		.loc 1 1302 3 view .LVU440
1303:FWLIB/src/stm32f4xx_spi.c **** 
1304:FWLIB/src/stm32f4xx_spi.c ****   /* Get the SPI_I2S IT index */
1305:FWLIB/src/stm32f4xx_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 1492              		.loc 1 1305 3 view .LVU441
 1493              		.loc 1 1305 31 is_stmt 0 view .LVU442
 1494 0000 01F00F01 		and	r1, r1, #15
 1495              	.LVL128:
 1496              		.loc 1 1305 16 view .LVU443
 1497 0004 0123     		movs	r3, #1
 1498 0006 8B40     		lsls	r3, r3, r1
 1499              		.loc 1 1305 9 view .LVU444
 1500 0008 9BB2     		uxth	r3, r3
 1501              	.LVL129:
1306:FWLIB/src/stm32f4xx_spi.c **** 
1307:FWLIB/src/stm32f4xx_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) interrupt pending bit */
1308:FWLIB/src/stm32f4xx_spi.c ****   SPIx->SR = (uint16_t)~itpos;
 1502              		.loc 1 1308 3 is_stmt 1 view .LVU445
 1503              		.loc 1 1308 14 is_stmt 0 view .LVU446
 1504 000a DB43     		mvns	r3, r3
 1505              	.LVL130:
 1506              		.loc 1 1308 14 view .LVU447
 1507 000c 9BB2     		uxth	r3, r3
 1508              	.LVL131:
 1509              		.loc 1 1308 12 view .LVU448
 1510 000e 0381     		strh	r3, [r0, #8]	@ movhi
1309:FWLIB/src/stm32f4xx_spi.c **** }
 1511              		.loc 1 1309 1 view .LVU449
 1512 0010 7047     		bx	lr
 1513              		.cfi_endproc
 1514              	.LFE147:
 1516              		.text
 1517              	.Letext0:
 1518              		.file 2 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 1519              		.file 3 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 1520              		.file 4 "F4_CORE/core_cm4.h"
 1521              		.file 5 "USER/system_stm32f4xx.h"
 1522              		.file 6 "USER/stm32f4xx.h"
 1523              		.file 7 "FWLIB/inc/stm32f4xx_spi.h"
 1524              		.file 8 "FWLIB/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/cc7Dtwf5.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_spi.c
     /tmp/cc7Dtwf5.s:18     .text.SPI_I2S_DeInit:0000000000000000 $t
     /tmp/cc7Dtwf5.s:26     .text.SPI_I2S_DeInit:0000000000000000 SPI_I2S_DeInit
     /tmp/cc7Dtwf5.s:169    .text.SPI_I2S_DeInit:00000000000000ac $d
     /tmp/cc7Dtwf5.s:179    .text.SPI_Init:0000000000000000 $t
     /tmp/cc7Dtwf5.s:186    .text.SPI_Init:0000000000000000 SPI_Init
     /tmp/cc7Dtwf5.s:275    .text.I2S_Init:0000000000000000 $t
     /tmp/cc7Dtwf5.s:282    .text.I2S_Init:0000000000000000 I2S_Init
     /tmp/cc7Dtwf5.s:554    .text.I2S_Init:00000000000000f8 $d
     /tmp/cc7Dtwf5.s:562    .text.SPI_StructInit:0000000000000000 $t
     /tmp/cc7Dtwf5.s:569    .text.SPI_StructInit:0000000000000000 SPI_StructInit
     /tmp/cc7Dtwf5.s:612    .text.I2S_StructInit:0000000000000000 $t
     /tmp/cc7Dtwf5.s:619    .text.I2S_StructInit:0000000000000000 I2S_StructInit
     /tmp/cc7Dtwf5.s:653    .text.SPI_Cmd:0000000000000000 $t
     /tmp/cc7Dtwf5.s:660    .text.SPI_Cmd:0000000000000000 SPI_Cmd
     /tmp/cc7Dtwf5.s:693    .text.I2S_Cmd:0000000000000000 $t
     /tmp/cc7Dtwf5.s:700    .text.I2S_Cmd:0000000000000000 I2S_Cmd
     /tmp/cc7Dtwf5.s:733    .text.SPI_DataSizeConfig:0000000000000000 $t
     /tmp/cc7Dtwf5.s:740    .text.SPI_DataSizeConfig:0000000000000000 SPI_DataSizeConfig
     /tmp/cc7Dtwf5.s:770    .text.SPI_BiDirectionalLineConfig:0000000000000000 $t
     /tmp/cc7Dtwf5.s:777    .text.SPI_BiDirectionalLineConfig:0000000000000000 SPI_BiDirectionalLineConfig
     /tmp/cc7Dtwf5.s:811    .text.SPI_NSSInternalSoftwareConfig:0000000000000000 $t
     /tmp/cc7Dtwf5.s:818    .text.SPI_NSSInternalSoftwareConfig:0000000000000000 SPI_NSSInternalSoftwareConfig
     /tmp/cc7Dtwf5.s:853    .text.SPI_SSOutputCmd:0000000000000000 $t
     /tmp/cc7Dtwf5.s:860    .text.SPI_SSOutputCmd:0000000000000000 SPI_SSOutputCmd
     /tmp/cc7Dtwf5.s:893    .text.SPI_TIModeCmd:0000000000000000 $t
     /tmp/cc7Dtwf5.s:900    .text.SPI_TIModeCmd:0000000000000000 SPI_TIModeCmd
     /tmp/cc7Dtwf5.s:933    .text.I2S_FullDuplexConfig:0000000000000000 $t
     /tmp/cc7Dtwf5.s:940    .text.I2S_FullDuplexConfig:0000000000000000 I2S_FullDuplexConfig
     /tmp/cc7Dtwf5.s:1035   .text.SPI_I2S_ReceiveData:0000000000000000 $t
     /tmp/cc7Dtwf5.s:1042   .text.SPI_I2S_ReceiveData:0000000000000000 SPI_I2S_ReceiveData
     /tmp/cc7Dtwf5.s:1061   .text.SPI_I2S_SendData:0000000000000000 $t
     /tmp/cc7Dtwf5.s:1068   .text.SPI_I2S_SendData:0000000000000000 SPI_I2S_SendData
     /tmp/cc7Dtwf5.s:1086   .text.SPI_CalculateCRC:0000000000000000 $t
     /tmp/cc7Dtwf5.s:1093   .text.SPI_CalculateCRC:0000000000000000 SPI_CalculateCRC
     /tmp/cc7Dtwf5.s:1126   .text.SPI_TransmitCRC:0000000000000000 $t
     /tmp/cc7Dtwf5.s:1133   .text.SPI_TransmitCRC:0000000000000000 SPI_TransmitCRC
     /tmp/cc7Dtwf5.s:1153   .text.SPI_GetCRC:0000000000000000 $t
     /tmp/cc7Dtwf5.s:1160   .text.SPI_GetCRC:0000000000000000 SPI_GetCRC
     /tmp/cc7Dtwf5.s:1200   .text.SPI_GetCRCPolynomial:0000000000000000 $t
     /tmp/cc7Dtwf5.s:1207   .text.SPI_GetCRCPolynomial:0000000000000000 SPI_GetCRCPolynomial
     /tmp/cc7Dtwf5.s:1226   .text.SPI_I2S_DMACmd:0000000000000000 $t
     /tmp/cc7Dtwf5.s:1233   .text.SPI_I2S_DMACmd:0000000000000000 SPI_I2S_DMACmd
     /tmp/cc7Dtwf5.s:1270   .text.SPI_I2S_ITConfig:0000000000000000 $t
     /tmp/cc7Dtwf5.s:1277   .text.SPI_I2S_ITConfig:0000000000000000 SPI_I2S_ITConfig
     /tmp/cc7Dtwf5.s:1330   .text.SPI_I2S_GetFlagStatus:0000000000000000 $t
     /tmp/cc7Dtwf5.s:1337   .text.SPI_I2S_GetFlagStatus:0000000000000000 SPI_I2S_GetFlagStatus
     /tmp/cc7Dtwf5.s:1371   .text.SPI_I2S_ClearFlag:0000000000000000 $t
     /tmp/cc7Dtwf5.s:1378   .text.SPI_I2S_ClearFlag:0000000000000000 SPI_I2S_ClearFlag
     /tmp/cc7Dtwf5.s:1402   .text.SPI_I2S_GetITStatus:0000000000000000 $t
     /tmp/cc7Dtwf5.s:1409   .text.SPI_I2S_GetITStatus:0000000000000000 SPI_I2S_GetITStatus
     /tmp/cc7Dtwf5.s:1474   .text.SPI_I2S_ClearITPendingBit:0000000000000000 $t
     /tmp/cc7Dtwf5.s:1481   .text.SPI_I2S_ClearITPendingBit:0000000000000000 SPI_I2S_ClearITPendingBit

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
ARM GAS  /tmp/cc7Dtwf5.s 			page 52


RCC_APB1PeriphResetCmd
