ARM GAS  /tmp/ccYSNOoy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"shell.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.shellAdd,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	shellAdd:
  25              	.LFB125:
  26              		.file 1 "SYS/shell/shell.c"
   1:SYS/shell/shell.c **** /**
   2:SYS/shell/shell.c ****  * @file shell.c
   3:SYS/shell/shell.c ****  * @author Letter (NevermindZZT@gmail.com)
   4:SYS/shell/shell.c ****  * @version 3.0.0
   5:SYS/shell/shell.c ****  * @date 2019-12-30
   6:SYS/shell/shell.c ****  * 
   7:SYS/shell/shell.c ****  * @copyright (c) 2020 Letter
   8:SYS/shell/shell.c ****  * 
   9:SYS/shell/shell.c ****  */
  10:SYS/shell/shell.c **** 
  11:SYS/shell/shell.c **** #include "shell.h"
  12:SYS/shell/shell.c **** #include "string.h"
  13:SYS/shell/shell.c **** #include "stdio.h"
  14:SYS/shell/shell.c **** #include "stdarg.h"
  15:SYS/shell/shell.c **** #include "shell_ext.h"
  16:SYS/shell/shell.c **** #include "stm32f4xx_usart.h"
  17:SYS/shell/shell.c **** #include "task_manager_cfg.h"
  18:SYS/shell/shell.c **** 
  19:SYS/shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
  20:SYS/shell/shell.c **** /**
  21:SYS/shell/shell.c ****  * @brief 默认用户
  22:SYS/shell/shell.c ****  */
  23:SYS/shell/shell.c **** const char shellCmdDefaultUser[] = SHELL_DEFAULT_USER;
  24:SYS/shell/shell.c **** const char shellPasswordDefaultUser[] = SHELL_DEFAULT_USER_PASSWORD;
  25:SYS/shell/shell.c **** const char shellDesDefaultUser[] = "default user";
  26:SYS/shell/shell.c **** const ShellCommand shellUserDefault SECTION("shellCommand") =
  27:SYS/shell/shell.c ****     {
  28:SYS/shell/shell.c ****         .attr.value = SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_USER),
  29:SYS/shell/shell.c ****         .data.user.name = shellCmdDefaultUser,
  30:SYS/shell/shell.c ****         .data.user.password = shellPasswordDefaultUser,
  31:SYS/shell/shell.c ****         .data.user.desc = shellDesDefaultUser};
  32:SYS/shell/shell.c **** #endif
ARM GAS  /tmp/ccYSNOoy.s 			page 2


  33:SYS/shell/shell.c **** 
  34:SYS/shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
  35:SYS/shell/shell.c **** #if defined(__CC_ARM) || (defined(__ARMCC_VERSION) && __ARMCC_VERSION >= 6000000)
  36:SYS/shell/shell.c **** extern const unsigned int shellCommand$$Base;
  37:SYS/shell/shell.c **** extern const unsigned int shellCommand$$Limit;
  38:SYS/shell/shell.c **** #elif defined(__ICCARM__) || defined(__ICCRX__)
  39:SYS/shell/shell.c **** #pragma section = "shellCommand"
  40:SYS/shell/shell.c **** #elif defined(__GNUC__)
  41:SYS/shell/shell.c **** extern const unsigned int _shell_command_start;
  42:SYS/shell/shell.c **** extern const unsigned int _shell_command_end;
  43:SYS/shell/shell.c **** #endif
  44:SYS/shell/shell.c **** #else
  45:SYS/shell/shell.c **** extern const ShellCommand shellCommandList[];
  46:SYS/shell/shell.c **** extern const unsigned short shellCommandCount;
  47:SYS/shell/shell.c **** #endif
  48:SYS/shell/shell.c **** 
  49:SYS/shell/shell.c **** /**
  50:SYS/shell/shell.c ****  * @brief shell 常量文本索引
  51:SYS/shell/shell.c ****  */
  52:SYS/shell/shell.c **** enum
  53:SYS/shell/shell.c **** {
  54:SYS/shell/shell.c **** #if SHELL_SHOW_INFO == 1
  55:SYS/shell/shell.c ****     SHELL_TEXT_INFO, /**< shell信息 */
  56:SYS/shell/shell.c **** #endif
  57:SYS/shell/shell.c ****     SHELL_TEXT_CMD_TOO_LONG,                /**< 命令过长 */
  58:SYS/shell/shell.c ****     SHELL_TEXT_CMD_LIST,                    /**< 可执行命令列表标题 */
  59:SYS/shell/shell.c ****     SHELL_TEXT_VAR_LIST,                    /**< 变量列表标题 */
  60:SYS/shell/shell.c ****     SHELL_TEXT_USER_LIST,                   /**< 用户列表标题 */
  61:SYS/shell/shell.c ****     SHELL_TEXT_KEY_LIST,                    /**< 按键列表标题 */
  62:SYS/shell/shell.c ****     SHELL_TEXT_CMD_NOT_FOUND,               /**< 命令未找到 */
  63:SYS/shell/shell.c ****     SHELL_TEXT_POINT_CANNOT_MODIFY,         /**< 指针变量不允许修改 */
  64:SYS/shell/shell.c ****     SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY, /**< 只读变量不允许修改 */
  65:SYS/shell/shell.c ****     SHELL_TEXT_NOT_VAR,                     /**< 命令不是变量 */
  66:SYS/shell/shell.c ****     SHELL_TEXT_VAR_NOT_FOUND,               /**< 变量未找到 */
  67:SYS/shell/shell.c ****     SHELL_TEXT_HELP_HEADER,                 /**< help头 */
  68:SYS/shell/shell.c ****     SHELL_TEXT_PASSWORD_HINT,               /**< 密码输入提示 */
  69:SYS/shell/shell.c ****     SHELL_TEXT_PASSWORD_ERROR,              /**< 密码错误 */
  70:SYS/shell/shell.c ****     SHELL_TEXT_CLEAR_CONSOLE,               /**< 清空控制台 */
  71:SYS/shell/shell.c ****     SHELL_TEXT_CLEAR_LINE,                  /**< 清空当前行 */
  72:SYS/shell/shell.c ****     SHELL_TEXT_TYPE_CMD,                    /**< 命令类型 */
  73:SYS/shell/shell.c ****     SHELL_TEXT_TYPE_VAR,                    /**< 变量类型 */
  74:SYS/shell/shell.c ****     SHELL_TEXT_TYPE_USER,                   /**< 用户类型 */
  75:SYS/shell/shell.c ****     SHELL_TEXT_TYPE_KEY,                    /**< 按键类型 */
  76:SYS/shell/shell.c ****     SHELL_TEXT_TYPE_NONE,                   /**< 非法类型 */
  77:SYS/shell/shell.c **** #if SHELL_EXEC_UNDEF_FUNC == 1
  78:SYS/shell/shell.c ****     SHELL_TEXT_PARAM_ERROR, /**< 参数错误 */
  79:SYS/shell/shell.c **** #endif
  80:SYS/shell/shell.c **** };
  81:SYS/shell/shell.c **** 
  82:SYS/shell/shell.c **** static const char *shellText[] =
  83:SYS/shell/shell.c ****     {
  84:SYS/shell/shell.c **** #if SHELL_SHOW_INFO == 1
  85:SYS/shell/shell.c ****         [SHELL_TEXT_INFO] =
  86:SYS/shell/shell.c ****             "\r\n\r\n"
  87:SYS/shell/shell.c ****             "/************  BitRtos  ************\\r\n\r\n"
  88:SYS/shell/shell.c ****             "Team Mate:        8_B!T0\r\n"
  89:SYS/shell/shell.c ****             "                  WHY\r\n"
ARM GAS  /tmp/ccYSNOoy.s 			page 3


  90:SYS/shell/shell.c ****             "\r\n"
  91:SYS/shell/shell.c ****             "Build:            "__DATE__
  92:SYS/shell/shell.c ****             " "__TIME__
  93:SYS/shell/shell.c ****             "\r\n"
  94:SYS/shell/shell.c ****             "Shell   Version:  " SHELL_VERSION "\r\n"
  95:SYS/shell/shell.c ****             "BitRtos Version:  " RTOS_VERSION "\r\n",
  96:SYS/shell/shell.c **** #endif
  97:SYS/shell/shell.c ****         [SHELL_TEXT_CMD_TOO_LONG] =
  98:SYS/shell/shell.c ****             "\r\nWarning: Command is too long\r\n",
  99:SYS/shell/shell.c ****         [SHELL_TEXT_CMD_LIST] =
 100:SYS/shell/shell.c ****             "\r\nCommand List:\r\n",
 101:SYS/shell/shell.c ****         [SHELL_TEXT_VAR_LIST] =
 102:SYS/shell/shell.c ****             "\r\nVar List:\r\n",
 103:SYS/shell/shell.c ****         [SHELL_TEXT_USER_LIST] =
 104:SYS/shell/shell.c ****             "\r\nUser List:\r\n",
 105:SYS/shell/shell.c ****         [SHELL_TEXT_KEY_LIST] =
 106:SYS/shell/shell.c ****             "\r\nKey List:\r\n",
 107:SYS/shell/shell.c ****         [SHELL_TEXT_CMD_NOT_FOUND] =
 108:SYS/shell/shell.c ****             "Command not Found\r\n",
 109:SYS/shell/shell.c ****         [SHELL_TEXT_POINT_CANNOT_MODIFY] =
 110:SYS/shell/shell.c ****             "can't set pointer\r\n",
 111:SYS/shell/shell.c ****         [SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY] =
 112:SYS/shell/shell.c ****             "can't set read only var\r\n",
 113:SYS/shell/shell.c ****         [SHELL_TEXT_NOT_VAR] =
 114:SYS/shell/shell.c ****             " is not a var\r\n",
 115:SYS/shell/shell.c ****         [SHELL_TEXT_VAR_NOT_FOUND] =
 116:SYS/shell/shell.c ****             "Var not Fount\r\n",
 117:SYS/shell/shell.c ****         [SHELL_TEXT_HELP_HEADER] =
 118:SYS/shell/shell.c ****             "command help of ",
 119:SYS/shell/shell.c ****         [SHELL_TEXT_PASSWORD_HINT] =
 120:SYS/shell/shell.c ****             "\r\nPlease input password:",
 121:SYS/shell/shell.c ****         [SHELL_TEXT_PASSWORD_ERROR] =
 122:SYS/shell/shell.c ****             "\r\npassword error\r\n",
 123:SYS/shell/shell.c ****         [SHELL_TEXT_CLEAR_CONSOLE] =
 124:SYS/shell/shell.c ****             "\033[2J\033[1H",
 125:SYS/shell/shell.c ****         [SHELL_TEXT_CLEAR_LINE] =
 126:SYS/shell/shell.c ****             "\033[2K\r",
 127:SYS/shell/shell.c ****         [SHELL_TEXT_TYPE_CMD] =
 128:SYS/shell/shell.c ****             "CMD \r\n",
 129:SYS/shell/shell.c ****         [SHELL_TEXT_TYPE_VAR] =
 130:SYS/shell/shell.c ****             "VAR",
 131:SYS/shell/shell.c ****         [SHELL_TEXT_TYPE_USER] =
 132:SYS/shell/shell.c ****             "USER",
 133:SYS/shell/shell.c ****         [SHELL_TEXT_TYPE_KEY] =
 134:SYS/shell/shell.c ****             "KEY",
 135:SYS/shell/shell.c ****         [SHELL_TEXT_TYPE_NONE] =
 136:SYS/shell/shell.c ****             "NONE",
 137:SYS/shell/shell.c **** #if SHELL_EXEC_UNDEF_FUNC == 1
 138:SYS/shell/shell.c ****         [SHELL_TEXT_PARAM_ERROR] =
 139:SYS/shell/shell.c ****             "Parameter error\r\n",
 140:SYS/shell/shell.c **** #endif
 141:SYS/shell/shell.c **** };
 142:SYS/shell/shell.c **** 
 143:SYS/shell/shell.c **** /**
 144:SYS/shell/shell.c ****  * @brief shell对象表
 145:SYS/shell/shell.c ****  */
 146:SYS/shell/shell.c **** static Shell *shellList[SHELL_MAX_NUMBER] = {NULL};
ARM GAS  /tmp/ccYSNOoy.s 			page 4


 147:SYS/shell/shell.c **** 
 148:SYS/shell/shell.c **** static void shellAdd(Shell *shell);
 149:SYS/shell/shell.c **** static void shellWriteCommandLine(Shell *shell, unsigned char newline);
 150:SYS/shell/shell.c **** static void shellWriteReturnValue(Shell *shell, int value);
 151:SYS/shell/shell.c **** static int shellShowVar(Shell *shell, ShellCommand *command);
 152:SYS/shell/shell.c **** static void shellSetUser(Shell *shell, const ShellCommand *user);
 153:SYS/shell/shell.c **** ShellCommand *shellSeekCommand(Shell *shell,
 154:SYS/shell/shell.c ****                                const char *cmd,
 155:SYS/shell/shell.c ****                                ShellCommand *base,
 156:SYS/shell/shell.c ****                                unsigned short compareLength);
 157:SYS/shell/shell.c **** 
 158:SYS/shell/shell.c **** /**
 159:SYS/shell/shell.c ****  * @brief shell 初始化
 160:SYS/shell/shell.c ****  * 
 161:SYS/shell/shell.c ****  * @param shell shell对象
 162:SYS/shell/shell.c ****  */
 163:SYS/shell/shell.c **** void shellInit(Shell *shell, char *buffer, unsigned short size)
 164:SYS/shell/shell.c **** {
 165:SYS/shell/shell.c ****     __asm("cpsid i");
 166:SYS/shell/shell.c ****     shell->parser.length = 0;
 167:SYS/shell/shell.c ****     shell->parser.cursor = 0;
 168:SYS/shell/shell.c ****     shell->history.offset = 0;
 169:SYS/shell/shell.c ****     shell->history.number = 0;
 170:SYS/shell/shell.c ****     shell->history.record = 0;
 171:SYS/shell/shell.c ****     shell->info.user = NULL;
 172:SYS/shell/shell.c ****     shell->status.isChecked = 1;
 173:SYS/shell/shell.c **** 
 174:SYS/shell/shell.c ****     shell->parser.buffer = buffer;
 175:SYS/shell/shell.c ****     shell->parser.bufferSize = size / (SHELL_HISTORY_MAX_NUMBER + 1);
 176:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_HISTORY_MAX_NUMBER; i++)
 177:SYS/shell/shell.c ****     {
 178:SYS/shell/shell.c ****         shell->history.item[i] = buffer + shell->parser.bufferSize * (i + 1);
 179:SYS/shell/shell.c ****     }
 180:SYS/shell/shell.c **** 
 181:SYS/shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
 182:SYS/shell/shell.c **** #if defined(__CC_ARM) || (defined(__ARMCC_VERSION) && __ARMCC_VERSION >= 6000000)
 183:SYS/shell/shell.c ****     shell->commandList.base = (ShellCommand *)(&shellCommand$$Base);
 184:SYS/shell/shell.c ****     shell->commandList.count = ((unsigned int)(&shellCommand$$Limit) - (unsigned int)(&shellCommand
 185:SYS/shell/shell.c **** 
 186:SYS/shell/shell.c **** #elif defined(__ICCARM__) || defined(__ICCRX__)
 187:SYS/shell/shell.c ****     shell->commandList.base = (ShellCommand *)(__section_begin("shellCommand"));
 188:SYS/shell/shell.c ****     shell->commandList.count = ((unsigned int)(__section_end("shellCommand")) - (unsigned int)(__se
 189:SYS/shell/shell.c **** #elif defined(__GNUC__)
 190:SYS/shell/shell.c ****     shell->commandList.base = (ShellCommand *)(&_shell_command_start);
 191:SYS/shell/shell.c ****     shell->commandList.count = ((unsigned int)(&_shell_command_end) - (unsigned int)(&_shell_comman
 192:SYS/shell/shell.c **** #else
 193:SYS/shell/shell.c **** #error not supported compiler, please use command table mode
 194:SYS/shell/shell.c **** #endif
 195:SYS/shell/shell.c **** #else
 196:SYS/shell/shell.c ****     shell->commandList.base = (ShellCommand *)shellCommandList;
 197:SYS/shell/shell.c ****     shell->commandList.count = shellCommandCount;
 198:SYS/shell/shell.c **** #endif
 199:SYS/shell/shell.c **** 
 200:SYS/shell/shell.c ****     shellAdd(shell);
 201:SYS/shell/shell.c **** 
 202:SYS/shell/shell.c ****     shellSetUser(shell, shellSeekCommand(shell,
 203:SYS/shell/shell.c ****                                          SHELL_DEFAULT_USER,
ARM GAS  /tmp/ccYSNOoy.s 			page 5


 204:SYS/shell/shell.c ****                                          shell->commandList.base,
 205:SYS/shell/shell.c ****                                          0));
 206:SYS/shell/shell.c ****     shellWriteCommandLine(shell, 1);
 207:SYS/shell/shell.c ****     __asm("cpsie i");
 208:SYS/shell/shell.c **** }
 209:SYS/shell/shell.c **** 
 210:SYS/shell/shell.c **** /**
 211:SYS/shell/shell.c ****  * @brief 添加shell
 212:SYS/shell/shell.c ****  * 
 213:SYS/shell/shell.c ****  * @param shell shell对象
 214:SYS/shell/shell.c ****  */
 215:SYS/shell/shell.c **** static void shellAdd(Shell *shell)
 216:SYS/shell/shell.c **** {
  27              		.loc 1 216 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.LBB2:
 217:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
  34              		.loc 1 217 0
  35 0000 0023     		movs	r3, #0
  36              	.LVL1:
  37              	.L2:
  38              		.loc 1 217 0 is_stmt 0 discriminator 1
  39 0002 042B     		cmp	r3, #4
  40 0004 0BDC     		bgt	.L6
 218:SYS/shell/shell.c ****     {
 219:SYS/shell/shell.c ****         if (shellList[i] == NULL)
  41              		.loc 1 219 0 is_stmt 1
  42 0006 1946     		mov	r1, r3
  43 0008 054A     		ldr	r2, .L8
  44 000a 52F82320 		ldr	r2, [r2, r3, lsl #2]
  45 000e 12B1     		cbz	r2, .L7
 217:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
  46              		.loc 1 217 0 discriminator 2
  47 0010 0133     		adds	r3, r3, #1
  48              	.LVL2:
  49 0012 1BB2     		sxth	r3, r3
  50              	.LVL3:
  51 0014 F5E7     		b	.L2
  52              	.L7:
 220:SYS/shell/shell.c ****         {
 221:SYS/shell/shell.c ****             shellList[i] = shell;
  53              		.loc 1 221 0
  54 0016 024B     		ldr	r3, .L8
  55              	.LVL4:
  56 0018 43F82100 		str	r0, [r3, r1, lsl #2]
 222:SYS/shell/shell.c ****             return;
  57              		.loc 1 222 0
  58 001c 7047     		bx	lr
  59              	.LVL5:
  60              	.L6:
  61 001e 7047     		bx	lr
  62              	.L9:
  63              		.align	2
ARM GAS  /tmp/ccYSNOoy.s 			page 6


  64              	.L8:
  65 0020 00000000 		.word	.LANCHOR0
  66              	.LBE2:
  67              		.cfi_endproc
  68              	.LFE125:
  70              		.section	.text.shellStringCopy,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv4-sp-d16
  77              	shellStringCopy:
  78              	.LFB136:
 223:SYS/shell/shell.c ****         }
 224:SYS/shell/shell.c ****     }
 225:SYS/shell/shell.c **** }
 226:SYS/shell/shell.c **** 
 227:SYS/shell/shell.c **** /**
 228:SYS/shell/shell.c ****  * @brief 获取当前活动shell
 229:SYS/shell/shell.c ****  * 
 230:SYS/shell/shell.c ****  * @return Shell* 当前活动shell对象
 231:SYS/shell/shell.c ****  */
 232:SYS/shell/shell.c **** Shell *shellGetCurrent(void)
 233:SYS/shell/shell.c **** {
 234:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
 235:SYS/shell/shell.c ****     {
 236:SYS/shell/shell.c ****         if (shellList[i] && shellList[i]->status.isActive)
 237:SYS/shell/shell.c ****         {
 238:SYS/shell/shell.c ****             return shellList[i];
 239:SYS/shell/shell.c ****         }
 240:SYS/shell/shell.c ****     }
 241:SYS/shell/shell.c ****     return NULL;
 242:SYS/shell/shell.c **** }
 243:SYS/shell/shell.c **** 
 244:SYS/shell/shell.c **** /**
 245:SYS/shell/shell.c ****  * @brief shell写字符
 246:SYS/shell/shell.c ****  * 
 247:SYS/shell/shell.c ****  * @param shell shell对象
 248:SYS/shell/shell.c ****  * @param data 字符数据
 249:SYS/shell/shell.c ****  */
 250:SYS/shell/shell.c **** void shellWriteByte(Shell *shell, const char data)
 251:SYS/shell/shell.c **** {
 252:SYS/shell/shell.c ****     shell->write(&data, sizeof(data));
 253:SYS/shell/shell.c **** }
 254:SYS/shell/shell.c **** 
 255:SYS/shell/shell.c **** /**
 256:SYS/shell/shell.c ****  * @brief shell 写字符串
 257:SYS/shell/shell.c ****  * 
 258:SYS/shell/shell.c ****  * @param shell shell对象
 259:SYS/shell/shell.c ****  * @param string 字符串数据
 260:SYS/shell/shell.c ****  * 
 261:SYS/shell/shell.c ****  * @return unsigned short 写入字符的数量
 262:SYS/shell/shell.c ****  */
 263:SYS/shell/shell.c **** unsigned short shellWriteString(Shell *shell, const char *string)
 264:SYS/shell/shell.c **** {
 265:SYS/shell/shell.c ****     unsigned short count = 0;
 266:SYS/shell/shell.c ****     SHELL_ASSERT(shell->write, return 0);
ARM GAS  /tmp/ccYSNOoy.s 			page 7


 267:SYS/shell/shell.c **** 
 268:SYS/shell/shell.c ****     shell->write(string, strlen(string));
 269:SYS/shell/shell.c ****     return count;
 270:SYS/shell/shell.c **** }
 271:SYS/shell/shell.c **** 
 272:SYS/shell/shell.c **** /**
 273:SYS/shell/shell.c ****  * @brief shell 写命令描述字符串
 274:SYS/shell/shell.c ****  * 
 275:SYS/shell/shell.c ****  * @param shell shell对象
 276:SYS/shell/shell.c ****  * @param string 字符串数据
 277:SYS/shell/shell.c ****  * 
 278:SYS/shell/shell.c ****  * @return unsigned short 写入字符的数量
 279:SYS/shell/shell.c ****  */
 280:SYS/shell/shell.c **** static unsigned short shellWriteCommandDesc(Shell *shell, const char *string)
 281:SYS/shell/shell.c **** {
 282:SYS/shell/shell.c ****     const char dot = '.';
 283:SYS/shell/shell.c ****     unsigned short count = 0;
 284:SYS/shell/shell.c ****     SHELL_ASSERT(shell->write, return 0);
 285:SYS/shell/shell.c ****     while (*string && *string != '\r' && *string != '\n' && count < 36)
 286:SYS/shell/shell.c ****     {
 287:SYS/shell/shell.c ****         shell->write(*string++, 1);
 288:SYS/shell/shell.c ****         count++;
 289:SYS/shell/shell.c ****         if (count >= 36 && *(string + 1))
 290:SYS/shell/shell.c ****         {
 291:SYS/shell/shell.c ****             shell->write(&dot, sizeof(dot));
 292:SYS/shell/shell.c ****             shell->write(&dot, sizeof(dot));
 293:SYS/shell/shell.c ****             shell->write(&dot, sizeof(dot));
 294:SYS/shell/shell.c ****         }
 295:SYS/shell/shell.c ****     }
 296:SYS/shell/shell.c ****     return count;
 297:SYS/shell/shell.c **** }
 298:SYS/shell/shell.c **** 
 299:SYS/shell/shell.c **** /**
 300:SYS/shell/shell.c ****  * @brief shell写命令提示符
 301:SYS/shell/shell.c ****  * 
 302:SYS/shell/shell.c ****  * @param shell shell对象
 303:SYS/shell/shell.c ****  * @param newline 新行
 304:SYS/shell/shell.c ****  * 
 305:SYS/shell/shell.c ****  */
 306:SYS/shell/shell.c **** static void shellWriteCommandLine(Shell *shell, unsigned char newline)
 307:SYS/shell/shell.c **** {
 308:SYS/shell/shell.c ****     if (shell->status.isChecked)
 309:SYS/shell/shell.c ****     {
 310:SYS/shell/shell.c ****         if (newline)
 311:SYS/shell/shell.c ****         {
 312:SYS/shell/shell.c ****             shellWriteString(shell, "\r\n");
 313:SYS/shell/shell.c ****         }
 314:SYS/shell/shell.c ****         shellWriteString(shell, shell->info.user->data.user.name);
 315:SYS/shell/shell.c ****         shellWriteString(shell, ":");
 316:SYS/shell/shell.c ****         shellWriteString(shell, shell->info.path ? shell->info.path : "/");
 317:SYS/shell/shell.c ****         shellWriteString(shell, "$ ");
 318:SYS/shell/shell.c ****     }
 319:SYS/shell/shell.c ****     else
 320:SYS/shell/shell.c ****     {
 321:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_PASSWORD_HINT]);
 322:SYS/shell/shell.c ****     }
 323:SYS/shell/shell.c **** }
ARM GAS  /tmp/ccYSNOoy.s 			page 8


 324:SYS/shell/shell.c **** 
 325:SYS/shell/shell.c **** #if SHELL_PRINT_BUFFER > 0
 326:SYS/shell/shell.c **** /**
 327:SYS/shell/shell.c ****  * @brief shell格式化输出
 328:SYS/shell/shell.c ****  * 
 329:SYS/shell/shell.c ****  * @param shell shell对象
 330:SYS/shell/shell.c ****  * @param fmt 格式化字符串
 331:SYS/shell/shell.c ****  * @param ... 参数
 332:SYS/shell/shell.c ****  */
 333:SYS/shell/shell.c **** void shellPrint(Shell *shell, char *fmt, ...)
 334:SYS/shell/shell.c **** {
 335:SYS/shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 336:SYS/shell/shell.c ****     va_list vargs;
 337:SYS/shell/shell.c **** 
 338:SYS/shell/shell.c ****     SHELL_ASSERT(shell, return );
 339:SYS/shell/shell.c **** 
 340:SYS/shell/shell.c ****     va_start(vargs, fmt);
 341:SYS/shell/shell.c ****     vsnprintf(buffer, SHELL_PRINT_BUFFER - 1, fmt, vargs);
 342:SYS/shell/shell.c ****     va_end(vargs);
 343:SYS/shell/shell.c **** 
 344:SYS/shell/shell.c ****     shellWriteString(shell, buffer);
 345:SYS/shell/shell.c **** }
 346:SYS/shell/shell.c **** #endif
 347:SYS/shell/shell.c **** 
 348:SYS/shell/shell.c **** #if SHELL_SCAN_BUFFER > 0
 349:SYS/shell/shell.c **** /**
 350:SYS/shell/shell.c ****  * @brief shell格式化输入
 351:SYS/shell/shell.c ****  * 
 352:SYS/shell/shell.c ****  * @param shell shell对象
 353:SYS/shell/shell.c ****  * @param fmt 格式化字符串
 354:SYS/shell/shell.c ****  * @param ... 参数
 355:SYS/shell/shell.c ****  */
 356:SYS/shell/shell.c **** void shellScan(Shell *shell, char *fmt, ...)
 357:SYS/shell/shell.c **** {
 358:SYS/shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 359:SYS/shell/shell.c ****     va_list vargs;
 360:SYS/shell/shell.c ****     short index = 0;
 361:SYS/shell/shell.c **** 
 362:SYS/shell/shell.c ****     SHELL_ASSERT(shell, return );
 363:SYS/shell/shell.c **** 
 364:SYS/shell/shell.c ****     if (shell->read)
 365:SYS/shell/shell.c ****     {
 366:SYS/shell/shell.c ****         do
 367:SYS/shell/shell.c ****         {
 368:SYS/shell/shell.c ****             if (shell->read(&buffer[index]) == 0)
 369:SYS/shell/shell.c ****             {
 370:SYS/shell/shell.c ****                 shell->write(&buffer[index], sizeof(buffer[index]));
 371:SYS/shell/shell.c ****                 index++;
 372:SYS/shell/shell.c ****             }
 373:SYS/shell/shell.c ****         } while (buffer[index - 1] != '\r' && buffer[index - 1] != '\n' && index < SHELL_SCAN_BUFFE
 374:SYS/shell/shell.c ****         shellWriteString(shell, "\r\n");
 375:SYS/shell/shell.c ****         buffer[index] = '\0';
 376:SYS/shell/shell.c ****     }
 377:SYS/shell/shell.c **** 
 378:SYS/shell/shell.c ****     va_start(vargs, fmt);
 379:SYS/shell/shell.c ****     vsscanf(buffer, fmt, vargs);
 380:SYS/shell/shell.c ****     va_end(vargs);
ARM GAS  /tmp/ccYSNOoy.s 			page 9


 381:SYS/shell/shell.c **** }
 382:SYS/shell/shell.c **** #endif
 383:SYS/shell/shell.c **** 
 384:SYS/shell/shell.c **** /**
 385:SYS/shell/shell.c ****  * @brief shell 检查命令权限
 386:SYS/shell/shell.c ****  * 
 387:SYS/shell/shell.c ****  * @param shell shell对象
 388:SYS/shell/shell.c ****  * @param command ShellCommand
 389:SYS/shell/shell.c ****  * 
 390:SYS/shell/shell.c ****  * @return signed char 0 当前用户具有该命令权限
 391:SYS/shell/shell.c ****  * @return signec char -1 当前用户不具有该命令权限
 392:SYS/shell/shell.c ****  */
 393:SYS/shell/shell.c **** signed char shellCheckPermission(Shell *shell, ShellCommand *command)
 394:SYS/shell/shell.c **** {
 395:SYS/shell/shell.c ****     return ((!command->attr.attrs.permission || command->attr.attrs.type == SHELL_TYPE_USER || (com
 396:SYS/shell/shell.c ****                ? 0
 397:SYS/shell/shell.c ****                : -1;
 398:SYS/shell/shell.c **** }
 399:SYS/shell/shell.c **** 
 400:SYS/shell/shell.c **** /**
 401:SYS/shell/shell.c ****  * @brief int转16进制字符串
 402:SYS/shell/shell.c ****  * 
 403:SYS/shell/shell.c ****  * @param value 数值
 404:SYS/shell/shell.c ****  * @param buffer 缓冲
 405:SYS/shell/shell.c ****  * 
 406:SYS/shell/shell.c ****  * @return signed char 转换后有效数据长度
 407:SYS/shell/shell.c ****  */
 408:SYS/shell/shell.c **** signed char shellToHex(unsigned int value, char *buffer)
 409:SYS/shell/shell.c **** {
 410:SYS/shell/shell.c ****     char byte;
 411:SYS/shell/shell.c ****     unsigned char i = 8;
 412:SYS/shell/shell.c ****     buffer[8] = 0;
 413:SYS/shell/shell.c ****     while (value)
 414:SYS/shell/shell.c ****     {
 415:SYS/shell/shell.c ****         byte = value & 0x0000000F;
 416:SYS/shell/shell.c ****         buffer[--i] = (byte > 9) ? (byte + 87) : (byte + 48);
 417:SYS/shell/shell.c ****         value >>= 4;
 418:SYS/shell/shell.c ****     }
 419:SYS/shell/shell.c ****     return 8 - i;
 420:SYS/shell/shell.c **** }
 421:SYS/shell/shell.c **** 
 422:SYS/shell/shell.c **** /**
 423:SYS/shell/shell.c **** * @brief int转10进制字符串
 424:SYS/shell/shell.c ****  * 
 425:SYS/shell/shell.c ****  * @param value 数值
 426:SYS/shell/shell.c ****  * @param buffer 缓冲
 427:SYS/shell/shell.c ****  * 
 428:SYS/shell/shell.c ****  * @return signed char 转换后有效数据长度
 429:SYS/shell/shell.c ****  */
 430:SYS/shell/shell.c **** signed char shellToDec(int value, char *buffer)
 431:SYS/shell/shell.c **** {
 432:SYS/shell/shell.c ****     unsigned char i = 11;
 433:SYS/shell/shell.c ****     int v = value;
 434:SYS/shell/shell.c ****     if (value < 0)
 435:SYS/shell/shell.c ****     {
 436:SYS/shell/shell.c ****         v = -value;
 437:SYS/shell/shell.c ****     }
ARM GAS  /tmp/ccYSNOoy.s 			page 10


 438:SYS/shell/shell.c ****     buffer[11] = 0;
 439:SYS/shell/shell.c ****     while (v)
 440:SYS/shell/shell.c ****     {
 441:SYS/shell/shell.c ****         buffer[--i] = v % 10 + 48;
 442:SYS/shell/shell.c ****         v /= 10;
 443:SYS/shell/shell.c ****     }
 444:SYS/shell/shell.c ****     if (value < 0)
 445:SYS/shell/shell.c ****     {
 446:SYS/shell/shell.c ****         buffer[--i] = '-';
 447:SYS/shell/shell.c ****     }
 448:SYS/shell/shell.c ****     if (value == 0)
 449:SYS/shell/shell.c ****     {
 450:SYS/shell/shell.c ****         buffer[--i] = '0';
 451:SYS/shell/shell.c ****     }
 452:SYS/shell/shell.c ****     return 11 - i;
 453:SYS/shell/shell.c **** }
 454:SYS/shell/shell.c **** 
 455:SYS/shell/shell.c **** /**
 456:SYS/shell/shell.c ****  * @brief shell字符串复制
 457:SYS/shell/shell.c ****  * 
 458:SYS/shell/shell.c ****  * @param dest 目标字符串
 459:SYS/shell/shell.c ****  * @param src 源字符串
 460:SYS/shell/shell.c ****  * @return unsigned short 字符串长度
 461:SYS/shell/shell.c ****  */
 462:SYS/shell/shell.c **** static unsigned short shellStringCopy(char *dest, char *src)
 463:SYS/shell/shell.c **** {
  79              		.loc 1 463 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL6:
  85 0000 10B4     		push	{r4}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 4, -4
  89              	.LVL7:
 464:SYS/shell/shell.c ****     unsigned short count = 0;
  90              		.loc 1 464 0
  91 0002 0023     		movs	r3, #0
 465:SYS/shell/shell.c ****     while (*(src + count))
  92              		.loc 1 465 0
  93 0004 02E0     		b	.L11
  94              	.LVL8:
  95              	.L12:
 466:SYS/shell/shell.c ****     {
 467:SYS/shell/shell.c ****         *(dest + count) = *(src + count);
  96              		.loc 1 467 0
  97 0006 C254     		strb	r2, [r0, r3]
 468:SYS/shell/shell.c ****         count++;
  98              		.loc 1 468 0
  99 0008 0133     		adds	r3, r3, #1
 100              	.LVL9:
 101 000a 9BB2     		uxth	r3, r3
 102              	.LVL10:
 103              	.L11:
 465:SYS/shell/shell.c ****     while (*(src + count))
ARM GAS  /tmp/ccYSNOoy.s 			page 11


 104              		.loc 1 465 0
 105 000c CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
 106 000e 002A     		cmp	r2, #0
 107 0010 F9D1     		bne	.L12
 469:SYS/shell/shell.c ****     }
 470:SYS/shell/shell.c ****     *(dest + count) = 0;
 108              		.loc 1 470 0
 109 0012 C254     		strb	r2, [r0, r3]
 471:SYS/shell/shell.c ****     return count;
 472:SYS/shell/shell.c **** }
 110              		.loc 1 472 0
 111 0014 1846     		mov	r0, r3
 112              	.LVL11:
 113 0016 5DF8044B 		ldr	r4, [sp], #4
 114              	.LCFI1:
 115              		.cfi_restore 4
 116              		.cfi_def_cfa_offset 0
 117 001a 7047     		bx	lr
 118              		.cfi_endproc
 119              	.LFE136:
 121              		.section	.text.shellStringCompare,"ax",%progbits
 122              		.align	1
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu fpv4-sp-d16
 128              	shellStringCompare:
 129              	.LFB137:
 473:SYS/shell/shell.c **** 
 474:SYS/shell/shell.c **** /**
 475:SYS/shell/shell.c ****  * @brief shell字符串比较
 476:SYS/shell/shell.c ****  * 
 477:SYS/shell/shell.c ****  * @param dest 目标字符串
 478:SYS/shell/shell.c ****  * @param src 源字符串
 479:SYS/shell/shell.c ****  * @return unsigned short 匹配长度
 480:SYS/shell/shell.c ****  */
 481:SYS/shell/shell.c **** static unsigned short shellStringCompare(char *dest, char *src)
 482:SYS/shell/shell.c **** {
 130              		.loc 1 482 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135              	.LVL12:
 483:SYS/shell/shell.c ****     unsigned short match = 0;
 136              		.loc 1 483 0
 137 0000 0023     		movs	r3, #0
 138              	.LVL13:
 484:SYS/shell/shell.c ****     unsigned short i = 0;
 485:SYS/shell/shell.c **** 
 486:SYS/shell/shell.c ****     while (*(dest + i) && *(src + i))
 139              		.loc 1 486 0
 140 0002 C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 141 0004 6AB1     		cbz	r2, .L21
 482:SYS/shell/shell.c ****     unsigned short match = 0;
 142              		.loc 1 482 0
 143 0006 10B4     		push	{r4}
ARM GAS  /tmp/ccYSNOoy.s 			page 12


 144              	.LCFI2:
 145              		.cfi_def_cfa_offset 4
 146              		.cfi_offset 4, -4
 147              	.L20:
 148              		.loc 1 486 0 discriminator 1
 149 0008 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 150 000a 34B1     		cbz	r4, .L16
 487:SYS/shell/shell.c ****     {
 488:SYS/shell/shell.c ****         if (*(dest + i) != *(src + i))
 151              		.loc 1 488 0
 152 000c A242     		cmp	r2, r4
 153 000e 04D1     		bne	.L16
 489:SYS/shell/shell.c ****         {
 490:SYS/shell/shell.c ****             break;
 491:SYS/shell/shell.c ****         }
 492:SYS/shell/shell.c ****         match++;
 154              		.loc 1 492 0
 155 0010 0133     		adds	r3, r3, #1
 156              	.LVL14:
 157 0012 9BB2     		uxth	r3, r3
 158              	.LVL15:
 486:SYS/shell/shell.c ****     {
 159              		.loc 1 486 0
 160 0014 C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 161 0016 002A     		cmp	r2, #0
 162 0018 F6D1     		bne	.L20
 163              	.L16:
 493:SYS/shell/shell.c ****         i++;
 494:SYS/shell/shell.c ****     }
 495:SYS/shell/shell.c ****     return match;
 496:SYS/shell/shell.c **** }
 164              		.loc 1 496 0
 165 001a 1846     		mov	r0, r3
 166              	.LVL16:
 167 001c 5DF8044B 		ldr	r4, [sp], #4
 168              	.LCFI3:
 169              		.cfi_restore 4
 170              		.cfi_def_cfa_offset 0
 171 0020 7047     		bx	lr
 172              	.LVL17:
 173              	.L21:
 174 0022 1846     		mov	r0, r3
 175              	.LVL18:
 176 0024 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE137:
 180              		.section	.text.shellGetCommandDesc,"ax",%progbits
 181              		.align	1
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
 187              	shellGetCommandDesc:
 188              	.LFB139:
 497:SYS/shell/shell.c **** 
 498:SYS/shell/shell.c **** /**
 499:SYS/shell/shell.c ****  * @brief shell获取命令名
ARM GAS  /tmp/ccYSNOoy.s 			page 13


 500:SYS/shell/shell.c ****  * 
 501:SYS/shell/shell.c ****  * @param command 命令
 502:SYS/shell/shell.c ****  * @return const char* 命令名
 503:SYS/shell/shell.c ****  */
 504:SYS/shell/shell.c **** static const char *shellGetCommandName(ShellCommand *command)
 505:SYS/shell/shell.c **** {
 506:SYS/shell/shell.c ****     static char buffer[9];
 507:SYS/shell/shell.c ****     for (unsigned char i = 0; i < 9; i++)
 508:SYS/shell/shell.c ****     {
 509:SYS/shell/shell.c ****         buffer[i] = '0';
 510:SYS/shell/shell.c ****     }
 511:SYS/shell/shell.c ****     if (command->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 512:SYS/shell/shell.c ****     {
 513:SYS/shell/shell.c ****         return command->data.cmd.name;
 514:SYS/shell/shell.c ****     }
 515:SYS/shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 516:SYS/shell/shell.c ****     {
 517:SYS/shell/shell.c ****         return command->data.var.name;
 518:SYS/shell/shell.c ****     }
 519:SYS/shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_USER)
 520:SYS/shell/shell.c ****     {
 521:SYS/shell/shell.c ****         return command->data.user.name;
 522:SYS/shell/shell.c ****     }
 523:SYS/shell/shell.c ****     else
 524:SYS/shell/shell.c ****     {
 525:SYS/shell/shell.c ****         shellToHex(command->data.key.value, buffer);
 526:SYS/shell/shell.c ****         return buffer;
 527:SYS/shell/shell.c ****     }
 528:SYS/shell/shell.c **** }
 529:SYS/shell/shell.c **** 
 530:SYS/shell/shell.c **** /**
 531:SYS/shell/shell.c ****  * @brief shell获取命令描述
 532:SYS/shell/shell.c ****  * 
 533:SYS/shell/shell.c ****  * @param command 命令
 534:SYS/shell/shell.c ****  * @return const char* 命令描述
 535:SYS/shell/shell.c ****  */
 536:SYS/shell/shell.c **** static const char *shellGetCommandDesc(ShellCommand *command)
 537:SYS/shell/shell.c **** {
 189              		.loc 1 537 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194              	.LVL19:
 538:SYS/shell/shell.c ****     if (command->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 195              		.loc 1 538 0
 196 0000 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 197 0002 03F00F03 		and	r3, r3, #15
 198 0006 012B     		cmp	r3, #1
 199 0008 05DD     		ble	.L28
 539:SYS/shell/shell.c ****     {
 540:SYS/shell/shell.c ****         return command->data.cmd.desc;
 541:SYS/shell/shell.c ****     }
 542:SYS/shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 200              		.loc 1 542 0
 201 000a 072B     		cmp	r3, #7
 202 000c 05DD     		ble	.L29
ARM GAS  /tmp/ccYSNOoy.s 			page 14


 543:SYS/shell/shell.c ****     {
 544:SYS/shell/shell.c ****         return command->data.var.desc;
 545:SYS/shell/shell.c ****     }
 546:SYS/shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_USER)
 203              		.loc 1 546 0
 204 000e 082B     		cmp	r3, #8
 205 0010 05DD     		ble	.L30
 547:SYS/shell/shell.c ****     {
 548:SYS/shell/shell.c ****         return command->data.user.desc;
 549:SYS/shell/shell.c ****     }
 550:SYS/shell/shell.c ****     else
 551:SYS/shell/shell.c ****     {
 552:SYS/shell/shell.c ****         return command->data.key.desc;
 206              		.loc 1 552 0
 207 0012 C068     		ldr	r0, [r0, #12]
 208              	.LVL20:
 553:SYS/shell/shell.c ****     }
 554:SYS/shell/shell.c **** }
 209              		.loc 1 554 0
 210 0014 7047     		bx	lr
 211              	.LVL21:
 212              	.L28:
 540:SYS/shell/shell.c ****     }
 213              		.loc 1 540 0
 214 0016 C068     		ldr	r0, [r0, #12]
 215              	.LVL22:
 216 0018 7047     		bx	lr
 217              	.LVL23:
 218              	.L29:
 544:SYS/shell/shell.c ****     }
 219              		.loc 1 544 0
 220 001a C068     		ldr	r0, [r0, #12]
 221              	.LVL24:
 222 001c 7047     		bx	lr
 223              	.LVL25:
 224              	.L30:
 548:SYS/shell/shell.c ****     }
 225              		.loc 1 548 0
 226 001e C068     		ldr	r0, [r0, #12]
 227              	.LVL26:
 228 0020 7047     		bx	lr
 229              		.cfi_endproc
 230              	.LFE139:
 232              		.section	.text.shellParserParam,"ax",%progbits
 233              		.align	1
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu fpv4-sp-d16
 239              	shellParserParam:
 240              	.LFB150:
 555:SYS/shell/shell.c **** 
 556:SYS/shell/shell.c **** /**
 557:SYS/shell/shell.c ****  * @brief shell 列出命令条目
 558:SYS/shell/shell.c ****  * 
 559:SYS/shell/shell.c ****  * @param shell shell对象
 560:SYS/shell/shell.c ****  * @param item 命令条目
ARM GAS  /tmp/ccYSNOoy.s 			page 15


 561:SYS/shell/shell.c ****  */
 562:SYS/shell/shell.c **** void shellListItem(Shell *shell, ShellCommand *item)
 563:SYS/shell/shell.c **** {
 564:SYS/shell/shell.c ****     short spaceLength;
 565:SYS/shell/shell.c **** 
 566:SYS/shell/shell.c ****     spaceLength = 22 - shellWriteString(shell, shellGetCommandName(item));
 567:SYS/shell/shell.c ****     spaceLength = (spaceLength > 0) ? spaceLength : 4;
 568:SYS/shell/shell.c ****     do
 569:SYS/shell/shell.c ****     {
 570:SYS/shell/shell.c ****         shellWriteByte(shell, '-');
 571:SYS/shell/shell.c ****     } while (--spaceLength);
 572:SYS/shell/shell.c ****     if (item->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 573:SYS/shell/shell.c ****     {
 574:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_CMD]);
 575:SYS/shell/shell.c ****     }
 576:SYS/shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 577:SYS/shell/shell.c ****     {
 578:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_VAR]);
 579:SYS/shell/shell.c ****     }
 580:SYS/shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_USER)
 581:SYS/shell/shell.c ****     {
 582:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_USER]);
 583:SYS/shell/shell.c ****     }
 584:SYS/shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_KEY)
 585:SYS/shell/shell.c ****     {
 586:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_KEY]);
 587:SYS/shell/shell.c ****     }
 588:SYS/shell/shell.c ****     else
 589:SYS/shell/shell.c ****     {
 590:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_NONE]);
 591:SYS/shell/shell.c ****     }
 592:SYS/shell/shell.c **** #if SHELL_HELP_SHOW_PERMISSION == 1
 593:SYS/shell/shell.c ****     shellWriteString(shell, " ");
 594:SYS/shell/shell.c ****     for (signed char i = 7; i >= 0; i--)
 595:SYS/shell/shell.c ****     {
 596:SYS/shell/shell.c ****         shellWriteByte(shell, item->attr.attrs.permission & (1 << i) ? 'x' : '-');
 597:SYS/shell/shell.c ****     }
 598:SYS/shell/shell.c **** #endif
 599:SYS/shell/shell.c ****     // shellWriteString(shell, " ");
 600:SYS/shell/shell.c ****     // shellWriteCommandDesc(shell, shellGetCommandDesc(item));
 601:SYS/shell/shell.c ****     // shellWriteString(shell, "\r\n");
 602:SYS/shell/shell.c **** }
 603:SYS/shell/shell.c **** 
 604:SYS/shell/shell.c **** /**
 605:SYS/shell/shell.c ****  * @brief shell列出可执行命令
 606:SYS/shell/shell.c ****  * 
 607:SYS/shell/shell.c ****  * @param shell shell对象
 608:SYS/shell/shell.c ****  */
 609:SYS/shell/shell.c **** void shellListCommand(Shell *shell)
 610:SYS/shell/shell.c **** {
 611:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 612:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CMD_LIST]);
 613:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 614:SYS/shell/shell.c ****     {
 615:SYS/shell/shell.c ****         if (base[i].attr.attrs.type <= SHELL_TYPE_CMD_FUNC && shellCheckPermission(shell, &base[i])
 616:SYS/shell/shell.c ****         {
 617:SYS/shell/shell.c ****             shellListItem(shell, &base[i]);
ARM GAS  /tmp/ccYSNOoy.s 			page 16


 618:SYS/shell/shell.c ****         }
 619:SYS/shell/shell.c ****     }
 620:SYS/shell/shell.c **** }
 621:SYS/shell/shell.c **** 
 622:SYS/shell/shell.c **** /**
 623:SYS/shell/shell.c ****  * @brief shell列出变量
 624:SYS/shell/shell.c ****  * 
 625:SYS/shell/shell.c ****  * @param shell shell对象
 626:SYS/shell/shell.c ****  */
 627:SYS/shell/shell.c **** void shellListVar(Shell *shell)
 628:SYS/shell/shell.c **** {
 629:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 630:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_VAR_LIST]);
 631:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 632:SYS/shell/shell.c ****     {
 633:SYS/shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_CMD_FUNC && base[i].attr.attrs.type <= SHELL_TYPE_
 634:SYS/shell/shell.c ****         {
 635:SYS/shell/shell.c ****             shellListItem(shell, &base[i]);
 636:SYS/shell/shell.c ****         }
 637:SYS/shell/shell.c ****     }
 638:SYS/shell/shell.c **** }
 639:SYS/shell/shell.c **** 
 640:SYS/shell/shell.c **** /**
 641:SYS/shell/shell.c ****  * @brief shell列出用户
 642:SYS/shell/shell.c ****  * 
 643:SYS/shell/shell.c ****  * @param shell shell对象
 644:SYS/shell/shell.c ****  */
 645:SYS/shell/shell.c **** void shellListUser(Shell *shell)
 646:SYS/shell/shell.c **** {
 647:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 648:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_USER_LIST]);
 649:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 650:SYS/shell/shell.c ****     {
 651:SYS/shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_VAR_NODE && base[i].attr.attrs.type <= SHELL_TYPE_
 652:SYS/shell/shell.c ****         {
 653:SYS/shell/shell.c ****             shellListItem(shell, &base[i]);
 654:SYS/shell/shell.c ****         }
 655:SYS/shell/shell.c ****     }
 656:SYS/shell/shell.c **** }
 657:SYS/shell/shell.c **** 
 658:SYS/shell/shell.c **** /**
 659:SYS/shell/shell.c ****  * @brief shell列出按键
 660:SYS/shell/shell.c ****  * 
 661:SYS/shell/shell.c ****  * @param shell shell对象
 662:SYS/shell/shell.c ****  */
 663:SYS/shell/shell.c **** void shellListKey(Shell *shell)
 664:SYS/shell/shell.c **** {
 665:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 666:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_KEY_LIST]);
 667:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 668:SYS/shell/shell.c ****     {
 669:SYS/shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_USER && base[i].attr.attrs.type <= SHELL_TYPE_KEY 
 670:SYS/shell/shell.c ****         {
 671:SYS/shell/shell.c ****             shellListItem(shell, &base[i]);
 672:SYS/shell/shell.c ****         }
 673:SYS/shell/shell.c ****     }
 674:SYS/shell/shell.c **** }
ARM GAS  /tmp/ccYSNOoy.s 			page 17


 675:SYS/shell/shell.c **** 
 676:SYS/shell/shell.c **** /**
 677:SYS/shell/shell.c ****  * @brief shell列出所有命令
 678:SYS/shell/shell.c ****  * 
 679:SYS/shell/shell.c ****  * @param shell shell对象
 680:SYS/shell/shell.c ****  */
 681:SYS/shell/shell.c **** void shellListAll(Shell *shell)
 682:SYS/shell/shell.c **** {
 683:SYS/shell/shell.c **** #if SHELL_HELP_LIST_USER == 1
 684:SYS/shell/shell.c ****     shellListUser(shell);
 685:SYS/shell/shell.c **** #endif
 686:SYS/shell/shell.c ****     shellListCommand(shell);
 687:SYS/shell/shell.c **** #if SHELL_HELP_LIST_VAR == 1
 688:SYS/shell/shell.c ****     shellListVar(shell);
 689:SYS/shell/shell.c **** #endif
 690:SYS/shell/shell.c **** #if SHELL_HELP_LIST_KEY == 1
 691:SYS/shell/shell.c ****     shellListKey(shell);
 692:SYS/shell/shell.c **** #endif
 693:SYS/shell/shell.c **** }
 694:SYS/shell/shell.c **** 
 695:SYS/shell/shell.c **** /**
 696:SYS/shell/shell.c ****  * @brief shell删除命令行数据
 697:SYS/shell/shell.c ****  * 
 698:SYS/shell/shell.c ****  * @param shell shell对象
 699:SYS/shell/shell.c ****  * @param length 删除长度
 700:SYS/shell/shell.c ****  */
 701:SYS/shell/shell.c **** void shellDeleteCommandLine(Shell *shell, unsigned char length)
 702:SYS/shell/shell.c **** {
 703:SYS/shell/shell.c ****     while (length--)
 704:SYS/shell/shell.c ****     {
 705:SYS/shell/shell.c ****         shellWriteString(shell, "\b \b");
 706:SYS/shell/shell.c ****     }
 707:SYS/shell/shell.c **** }
 708:SYS/shell/shell.c **** 
 709:SYS/shell/shell.c **** /**
 710:SYS/shell/shell.c ****  * @brief shell 清空命令行输入
 711:SYS/shell/shell.c ****  * 
 712:SYS/shell/shell.c ****  * @param shell shell对象
 713:SYS/shell/shell.c ****  */
 714:SYS/shell/shell.c **** void shellClearCommandLine(Shell *shell)
 715:SYS/shell/shell.c **** {
 716:SYS/shell/shell.c ****     for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 717:SYS/shell/shell.c ****     {
 718:SYS/shell/shell.c ****         shellWriteByte(shell, ' ');
 719:SYS/shell/shell.c ****     }
 720:SYS/shell/shell.c ****     shellDeleteCommandLine(shell, shell->parser.length);
 721:SYS/shell/shell.c **** }
 722:SYS/shell/shell.c **** 
 723:SYS/shell/shell.c **** /**
 724:SYS/shell/shell.c ****  * @brief shell插入一个字符到光标位置
 725:SYS/shell/shell.c ****  * 
 726:SYS/shell/shell.c ****  * @param shell shell对象
 727:SYS/shell/shell.c ****  * @param data 字符数据
 728:SYS/shell/shell.c ****  */
 729:SYS/shell/shell.c **** void shellInsertByte(Shell *shell, char data)
 730:SYS/shell/shell.c **** {
 731:SYS/shell/shell.c ****     /* 判断输入数据是否过长 */
ARM GAS  /tmp/ccYSNOoy.s 			page 18


 732:SYS/shell/shell.c ****     if (shell->parser.length >= shell->parser.bufferSize - 1)
 733:SYS/shell/shell.c ****     {
 734:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CMD_TOO_LONG]);
 735:SYS/shell/shell.c ****         shellWriteCommandLine(shell, 1);
 736:SYS/shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 737:SYS/shell/shell.c ****         return;
 738:SYS/shell/shell.c ****     }
 739:SYS/shell/shell.c **** 
 740:SYS/shell/shell.c ****     /* 插入数据 */
 741:SYS/shell/shell.c ****     if (shell->parser.cursor == shell->parser.length)
 742:SYS/shell/shell.c ****     {
 743:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length++] = data;
 744:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 745:SYS/shell/shell.c ****         shell->parser.cursor++;
 746:SYS/shell/shell.c ****         shellWriteByte(shell, data);
 747:SYS/shell/shell.c ****     }
 748:SYS/shell/shell.c ****     else if (shell->parser.cursor < shell->parser.length)
 749:SYS/shell/shell.c ****     {
 750:SYS/shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 751:SYS/shell/shell.c ****         {
 752:SYS/shell/shell.c ****             shell->parser.buffer[shell->parser.cursor + i] =
 753:SYS/shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 754:SYS/shell/shell.c ****         }
 755:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.cursor++] = data;
 756:SYS/shell/shell.c ****         shell->parser.buffer[++shell->parser.length] = 0;
 757:SYS/shell/shell.c ****         for (short i = shell->parser.cursor - 1; i < shell->parser.length; i++)
 758:SYS/shell/shell.c ****         {
 759:SYS/shell/shell.c ****             shellWriteByte(shell, shell->parser.buffer[i]);
 760:SYS/shell/shell.c ****         }
 761:SYS/shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 762:SYS/shell/shell.c ****         {
 763:SYS/shell/shell.c ****             shellWriteByte(shell, '\b');
 764:SYS/shell/shell.c ****         }
 765:SYS/shell/shell.c ****     }
 766:SYS/shell/shell.c **** }
 767:SYS/shell/shell.c **** 
 768:SYS/shell/shell.c **** /**
 769:SYS/shell/shell.c ****  * @brief shell 删除字节
 770:SYS/shell/shell.c ****  * 
 771:SYS/shell/shell.c ****  * @param shell shell对象
 772:SYS/shell/shell.c ****  * @param direction 删除方向 {@code 1}删除光标前字符 {@code -1}删除光标处字符
 773:SYS/shell/shell.c ****  */
 774:SYS/shell/shell.c **** void shellDeleteByte(Shell *shell, signed char direction)
 775:SYS/shell/shell.c **** {
 776:SYS/shell/shell.c ****     char offset = (direction == -1) ? 1 : 0;
 777:SYS/shell/shell.c **** 
 778:SYS/shell/shell.c ****     if ((shell->parser.cursor == 0 && direction == 1) || (shell->parser.cursor == shell->parser.len
 779:SYS/shell/shell.c ****     {
 780:SYS/shell/shell.c ****         return;
 781:SYS/shell/shell.c ****     }
 782:SYS/shell/shell.c ****     if (shell->parser.cursor == shell->parser.length && direction == 1)
 783:SYS/shell/shell.c ****     {
 784:SYS/shell/shell.c ****         shell->parser.cursor--;
 785:SYS/shell/shell.c ****         shell->parser.length--;
 786:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 787:SYS/shell/shell.c ****         shellDeleteCommandLine(shell, 1);
 788:SYS/shell/shell.c ****     }
ARM GAS  /tmp/ccYSNOoy.s 			page 19


 789:SYS/shell/shell.c ****     else
 790:SYS/shell/shell.c ****     {
 791:SYS/shell/shell.c ****         for (short i = offset; i < shell->parser.length - shell->parser.cursor; i++)
 792:SYS/shell/shell.c ****         {
 793:SYS/shell/shell.c ****             shell->parser.buffer[shell->parser.cursor + i - 1] =
 794:SYS/shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 795:SYS/shell/shell.c ****         }
 796:SYS/shell/shell.c ****         shell->parser.length--;
 797:SYS/shell/shell.c ****         if (!offset)
 798:SYS/shell/shell.c ****         {
 799:SYS/shell/shell.c ****             shell->parser.cursor--;
 800:SYS/shell/shell.c ****             shellWriteByte(shell, '\b');
 801:SYS/shell/shell.c ****         }
 802:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 803:SYS/shell/shell.c ****         for (short i = shell->parser.cursor; i < shell->parser.length; i++)
 804:SYS/shell/shell.c ****         {
 805:SYS/shell/shell.c ****             shellWriteByte(shell, shell->parser.buffer[i]);
 806:SYS/shell/shell.c ****         }
 807:SYS/shell/shell.c ****         shellWriteByte(shell, ' ');
 808:SYS/shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor + 1; i > 0; i--)
 809:SYS/shell/shell.c ****         {
 810:SYS/shell/shell.c ****             shellWriteByte(shell, '\b');
 811:SYS/shell/shell.c ****         }
 812:SYS/shell/shell.c ****     }
 813:SYS/shell/shell.c **** }
 814:SYS/shell/shell.c **** 
 815:SYS/shell/shell.c **** /**
 816:SYS/shell/shell.c ****  * @brief shell 解析参数
 817:SYS/shell/shell.c ****  * 
 818:SYS/shell/shell.c ****  * @param shell shell对象
 819:SYS/shell/shell.c ****  */
 820:SYS/shell/shell.c **** static void shellParserParam(Shell *shell)
 821:SYS/shell/shell.c **** {
 241              		.loc 1 821 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246              	.LVL27:
 247 0000 F0B4     		push	{r4, r5, r6, r7}
 248              	.LCFI4:
 249              		.cfi_def_cfa_offset 16
 250              		.cfi_offset 4, -16
 251              		.cfi_offset 5, -12
 252              		.cfi_offset 6, -8
 253              		.cfi_offset 7, -4
 254              	.LVL28:
 255              	.LBB3:
 822:SYS/shell/shell.c ****     unsigned char quotes = 0;
 823:SYS/shell/shell.c ****     unsigned char record = 1;
 824:SYS/shell/shell.c **** 
 825:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_PARAMETER_MAX_NUMBER; i++)
 256              		.loc 1 825 0
 257 0002 0023     		movs	r3, #0
 258 0004 06E0     		b	.L32
 259              	.LVL29:
 260              	.L33:
ARM GAS  /tmp/ccYSNOoy.s 			page 20


 826:SYS/shell/shell.c ****     {
 827:SYS/shell/shell.c ****         shell->parser.param[i] = NULL;
 261              		.loc 1 827 0 discriminator 3
 262 0006 1A1D     		adds	r2, r3, #4
 263 0008 00EB8202 		add	r2, r0, r2, lsl #2
 264 000c 0021     		movs	r1, #0
 265 000e 5160     		str	r1, [r2, #4]
 825:SYS/shell/shell.c ****     {
 266              		.loc 1 825 0 discriminator 3
 267 0010 0133     		adds	r3, r3, #1
 268              	.LVL30:
 269 0012 1BB2     		sxth	r3, r3
 270              	.LVL31:
 271              	.L32:
 825:SYS/shell/shell.c ****     {
 272              		.loc 1 825 0 is_stmt 0 discriminator 1
 273 0014 072B     		cmp	r3, #7
 274 0016 F6DD     		ble	.L33
 275              	.LBE3:
 828:SYS/shell/shell.c ****     }
 829:SYS/shell/shell.c **** 
 830:SYS/shell/shell.c ****     shell->parser.paramCount = 0;
 276              		.loc 1 830 0 is_stmt 1
 277 0018 0021     		movs	r1, #0
 278 001a C186     		strh	r1, [r0, #54]	@ movhi
 279              	.LVL32:
 280              	.LBB4:
 831:SYS/shell/shell.c ****     for (unsigned short i = 0; i < shell->parser.length; i++)
 281              		.loc 1 831 0
 282 001c 0B46     		mov	r3, r1
 283              	.LVL33:
 284              	.LBE4:
 823:SYS/shell/shell.c **** 
 285              		.loc 1 823 0
 286 001e 0126     		movs	r6, #1
 287              	.LBB5:
 288              		.loc 1 831 0
 289 0020 0BE0     		b	.L34
 290              	.LVL34:
 291              	.L35:
 832:SYS/shell/shell.c ****     {
 833:SYS/shell/shell.c ****         if (quotes != 0 || (shell->parser.buffer[i] != ' ' && shell->parser.buffer[i] != 0))
 834:SYS/shell/shell.c ****         {
 835:SYS/shell/shell.c ****             if (shell->parser.buffer[i] == '\"')
 292              		.loc 1 835 0
 293 0022 0269     		ldr	r2, [r0, #16]
 294 0024 1F46     		mov	r7, r3
 295 0026 D418     		adds	r4, r2, r3
 296 0028 D55C     		ldrb	r5, [r2, r3]	@ zero_extendqisi2
 297 002a 222D     		cmp	r5, #34
 298 002c 15D0     		beq	.L43
 299              	.L37:
 836:SYS/shell/shell.c ****             {
 837:SYS/shell/shell.c ****                 quotes = quotes ? 0 : 1;
 838:SYS/shell/shell.c ****             }
 839:SYS/shell/shell.c ****             if (record == 1)
 300              		.loc 1 839 0
ARM GAS  /tmp/ccYSNOoy.s 			page 21


 301 002e BEB9     		cbnz	r6, .L44
 302              	.LVL35:
 303              	.L38:
 840:SYS/shell/shell.c ****             {
 841:SYS/shell/shell.c ****                 if (shell->parser.paramCount < SHELL_PARAMETER_MAX_NUMBER)
 842:SYS/shell/shell.c ****                 {
 843:SYS/shell/shell.c ****                     shell->parser.param[shell->parser.paramCount++] =
 844:SYS/shell/shell.c ****                         &(shell->parser.buffer[i]);
 845:SYS/shell/shell.c ****                 }
 846:SYS/shell/shell.c ****                 record = 0;
 847:SYS/shell/shell.c ****             }
 848:SYS/shell/shell.c ****             if (shell->parser.buffer[i] == '\\' && shell->parser.buffer[i + 1] != 0)
 304              		.loc 1 848 0
 305 0030 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 306 0032 5C2C     		cmp	r4, #92
 307 0034 21D0     		beq	.L45
 308              	.LVL36:
 309              	.L39:
 831:SYS/shell/shell.c ****     {
 310              		.loc 1 831 0 discriminator 2
 311 0036 0133     		adds	r3, r3, #1
 312              	.LVL37:
 313 0038 9BB2     		uxth	r3, r3
 314              	.LVL38:
 315              	.L34:
 831:SYS/shell/shell.c ****     {
 316              		.loc 1 831 0 is_stmt 0 discriminator 1
 317 003a 8289     		ldrh	r2, [r0, #12]
 318 003c 9342     		cmp	r3, r2
 319 003e 23D2     		bcs	.L46
 833:SYS/shell/shell.c ****         {
 320              		.loc 1 833 0 is_stmt 1
 321 0040 0029     		cmp	r1, #0
 322 0042 EED1     		bne	.L35
 833:SYS/shell/shell.c ****         {
 323              		.loc 1 833 0 is_stmt 0 discriminator 1
 324 0044 0269     		ldr	r2, [r0, #16]
 325 0046 D418     		adds	r4, r2, r3
 326 0048 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 327 004a 202A     		cmp	r2, #32
 328 004c 01D0     		beq	.L36
 833:SYS/shell/shell.c ****         {
 329              		.loc 1 833 0 discriminator 2
 330 004e 002A     		cmp	r2, #0
 331 0050 E7D1     		bne	.L35
 332              	.L36:
 849:SYS/shell/shell.c ****             {
 850:SYS/shell/shell.c ****                 i++;
 851:SYS/shell/shell.c ****             }
 852:SYS/shell/shell.c ****         }
 853:SYS/shell/shell.c ****         else
 854:SYS/shell/shell.c ****         {
 855:SYS/shell/shell.c ****             shell->parser.buffer[i] = 0;
 333              		.loc 1 855 0 is_stmt 1
 334 0052 0022     		movs	r2, #0
 335 0054 2270     		strb	r2, [r4]
 336              	.LVL39:
ARM GAS  /tmp/ccYSNOoy.s 			page 22


 856:SYS/shell/shell.c ****             record = 1;
 337              		.loc 1 856 0
 338 0056 0126     		movs	r6, #1
 339 0058 EDE7     		b	.L39
 340              	.LVL40:
 341              	.L43:
 837:SYS/shell/shell.c ****             }
 342              		.loc 1 837 0
 343 005a 81F00101 		eor	r1, r1, #1
 344              	.LVL41:
 345 005e E6E7     		b	.L37
 346              	.L44:
 841:SYS/shell/shell.c ****                 {
 347              		.loc 1 841 0
 348 0060 C58E     		ldrh	r5, [r0, #54]
 349 0062 072D     		cmp	r5, #7
 350 0064 07D8     		bhi	.L41
 843:SYS/shell/shell.c ****                         &(shell->parser.buffer[i]);
 351              		.loc 1 843 0
 352 0066 6E1C     		adds	r6, r5, #1
 353              	.LVL42:
 354 0068 C686     		strh	r6, [r0, #54]	@ movhi
 355 006a 0435     		adds	r5, r5, #4
 356 006c 00EB8505 		add	r5, r0, r5, lsl #2
 357 0070 6C60     		str	r4, [r5, #4]
 846:SYS/shell/shell.c ****             }
 358              		.loc 1 846 0
 359 0072 0026     		movs	r6, #0
 360 0074 DCE7     		b	.L38
 361              	.LVL43:
 362              	.L41:
 363 0076 0026     		movs	r6, #0
 364              	.LVL44:
 365 0078 DAE7     		b	.L38
 366              	.LVL45:
 367              	.L45:
 848:SYS/shell/shell.c ****             {
 368              		.loc 1 848 0 discriminator 1
 369 007a 3A44     		add	r2, r2, r7
 370 007c 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 371 007e 002A     		cmp	r2, #0
 372 0080 D9D0     		beq	.L39
 850:SYS/shell/shell.c ****             }
 373              		.loc 1 850 0
 374 0082 0133     		adds	r3, r3, #1
 375              	.LVL46:
 376 0084 9BB2     		uxth	r3, r3
 377              	.LVL47:
 378 0086 D6E7     		b	.L39
 379              	.L46:
 380              	.LBE5:
 857:SYS/shell/shell.c ****         }
 858:SYS/shell/shell.c ****     }
 859:SYS/shell/shell.c **** }
 381              		.loc 1 859 0
 382 0088 F0BC     		pop	{r4, r5, r6, r7}
 383              	.LCFI5:
ARM GAS  /tmp/ccYSNOoy.s 			page 23


 384              		.cfi_restore 7
 385              		.cfi_restore 6
 386              		.cfi_restore 5
 387              		.cfi_restore 4
 388              		.cfi_def_cfa_offset 0
 389              	.LVL48:
 390 008a 7047     		bx	lr
 391              		.cfi_endproc
 392              	.LFE150:
 394              		.section	.text.shellHistoryAdd,"ax",%progbits
 395              		.align	1
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu fpv4-sp-d16
 401              	shellHistoryAdd:
 402              	.LFB161:
 860:SYS/shell/shell.c **** 
 861:SYS/shell/shell.c **** /**
 862:SYS/shell/shell.c ****  * @brief shell去除字符串参数头尾的双引号
 863:SYS/shell/shell.c ****  * 
 864:SYS/shell/shell.c ****  * @param shell shell对象
 865:SYS/shell/shell.c ****  */
 866:SYS/shell/shell.c **** static void shellRemoveParamQuotes(Shell *shell)
 867:SYS/shell/shell.c **** {
 868:SYS/shell/shell.c ****     unsigned short paramLength;
 869:SYS/shell/shell.c ****     for (unsigned short i = 0; i < shell->parser.paramCount; i++)
 870:SYS/shell/shell.c ****     {
 871:SYS/shell/shell.c ****         if (shell->parser.param[i][0] == '\"')
 872:SYS/shell/shell.c ****         {
 873:SYS/shell/shell.c ****             shell->parser.param[i][0] = 0;
 874:SYS/shell/shell.c ****             shell->parser.param[i] = &shell->parser.param[i][1];
 875:SYS/shell/shell.c ****         }
 876:SYS/shell/shell.c ****         paramLength = strlen(shell->parser.param[i]);
 877:SYS/shell/shell.c ****         if (shell->parser.param[i][paramLength - 1] == '\"')
 878:SYS/shell/shell.c ****         {
 879:SYS/shell/shell.c ****             shell->parser.param[i][paramLength - 1] = 0;
 880:SYS/shell/shell.c ****         }
 881:SYS/shell/shell.c ****     }
 882:SYS/shell/shell.c **** }
 883:SYS/shell/shell.c **** 
 884:SYS/shell/shell.c **** /**
 885:SYS/shell/shell.c ****  * @brief shell匹配命令
 886:SYS/shell/shell.c ****  * 
 887:SYS/shell/shell.c ****  * @param shell shell对象
 888:SYS/shell/shell.c ****  * @param cmd 命令
 889:SYS/shell/shell.c ****  * @param base 匹配命令表基址
 890:SYS/shell/shell.c ****  * @param compareLength 匹配字符串长度
 891:SYS/shell/shell.c ****  * @return ShellCommand* 匹配到的命令
 892:SYS/shell/shell.c ****  */
 893:SYS/shell/shell.c **** ShellCommand *shellSeekCommand(Shell *shell,
 894:SYS/shell/shell.c ****                                const char *cmd,
 895:SYS/shell/shell.c ****                                ShellCommand *base,
 896:SYS/shell/shell.c ****                                unsigned short compareLength)
 897:SYS/shell/shell.c **** {
 898:SYS/shell/shell.c ****     const char *name;
 899:SYS/shell/shell.c ****     int ret;
ARM GAS  /tmp/ccYSNOoy.s 			page 24


 900:SYS/shell/shell.c ****     unsigned short count = shell->commandList.count -
 901:SYS/shell/shell.c ****                            ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 902:SYS/shell/shell.c ****     for (unsigned short i = 0; i < count; i++)
 903:SYS/shell/shell.c ****     {
 904:SYS/shell/shell.c ****         if (base[i].attr.attrs.type == SHELL_TYPE_KEY || shellCheckPermission(shell, &base[i]) != 0
 905:SYS/shell/shell.c ****         {
 906:SYS/shell/shell.c ****             continue;
 907:SYS/shell/shell.c ****         }
 908:SYS/shell/shell.c ****         name = shellGetCommandName(&base[i]);
 909:SYS/shell/shell.c ****         if (!compareLength)
 910:SYS/shell/shell.c ****         {
 911:SYS/shell/shell.c ****             ret = strcmp(cmd, name);
 912:SYS/shell/shell.c ****             if (strcmp(cmd, name) == 0)
 913:SYS/shell/shell.c ****             {
 914:SYS/shell/shell.c ****                 return &base[i];
 915:SYS/shell/shell.c ****             }
 916:SYS/shell/shell.c ****         }
 917:SYS/shell/shell.c ****         else
 918:SYS/shell/shell.c ****         {
 919:SYS/shell/shell.c ****             if (strncmp(cmd, name, compareLength) == 0)
 920:SYS/shell/shell.c ****             {
 921:SYS/shell/shell.c ****                 return &base[i];
 922:SYS/shell/shell.c ****             }
 923:SYS/shell/shell.c ****         }
 924:SYS/shell/shell.c ****     }
 925:SYS/shell/shell.c ****     return NULL;
 926:SYS/shell/shell.c **** }
 927:SYS/shell/shell.c **** 
 928:SYS/shell/shell.c **** /**
 929:SYS/shell/shell.c ****  * @brief shell 获取变量值
 930:SYS/shell/shell.c ****  * 
 931:SYS/shell/shell.c ****  * @param shell shell对象
 932:SYS/shell/shell.c ****  * @param command 命令
 933:SYS/shell/shell.c ****  * @return int 变量值
 934:SYS/shell/shell.c ****  */
 935:SYS/shell/shell.c **** int shellGetVarValue(Shell *shell, ShellCommand *command)
 936:SYS/shell/shell.c **** {
 937:SYS/shell/shell.c ****     int value = 0;
 938:SYS/shell/shell.c ****     switch (command->attr.attrs.type)
 939:SYS/shell/shell.c ****     {
 940:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_INT:
 941:SYS/shell/shell.c ****         value = *((int *)(command->data.var.value));
 942:SYS/shell/shell.c ****         break;
 943:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_SHORT:
 944:SYS/shell/shell.c ****         value = *((short *)(command->data.var.value));
 945:SYS/shell/shell.c ****         break;
 946:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_CHAR:
 947:SYS/shell/shell.c ****         value = *((char *)(command->data.var.value));
 948:SYS/shell/shell.c ****         break;
 949:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
 950:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_POINT:
 951:SYS/shell/shell.c ****         value = (int)(command->data.var.value);
 952:SYS/shell/shell.c ****         break;
 953:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_NODE:
 954:SYS/shell/shell.c ****         value = ((ShellNodeVarAttr *)command->data.var.value)->get ? ((ShellNodeVarAttr *)command->
 955:SYS/shell/shell.c ****                                                                          ->get(((ShellNodeVarAttr *
 956:SYS/shell/shell.c ****                                                                    : 0;
ARM GAS  /tmp/ccYSNOoy.s 			page 25


 957:SYS/shell/shell.c ****         break;
 958:SYS/shell/shell.c ****     default:
 959:SYS/shell/shell.c ****         break;
 960:SYS/shell/shell.c ****     }
 961:SYS/shell/shell.c ****     return value;
 962:SYS/shell/shell.c **** }
 963:SYS/shell/shell.c **** 
 964:SYS/shell/shell.c **** /**
 965:SYS/shell/shell.c ****  * @brief shell设置变量值
 966:SYS/shell/shell.c ****  * 
 967:SYS/shell/shell.c ****  * @param shell shell对象
 968:SYS/shell/shell.c ****  * @param command 命令
 969:SYS/shell/shell.c ****  * @param value 值
 970:SYS/shell/shell.c ****  * @return int 返回变量值
 971:SYS/shell/shell.c ****  */
 972:SYS/shell/shell.c **** int shellSetVarValue(Shell *shell, ShellCommand *command, int value)
 973:SYS/shell/shell.c **** {
 974:SYS/shell/shell.c ****     if (command->attr.attrs.readOnly)
 975:SYS/shell/shell.c ****     {
 976:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY]);
 977:SYS/shell/shell.c ****     }
 978:SYS/shell/shell.c ****     else
 979:SYS/shell/shell.c ****     {
 980:SYS/shell/shell.c ****         switch (command->attr.attrs.type)
 981:SYS/shell/shell.c ****         {
 982:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_INT:
 983:SYS/shell/shell.c ****             *((int *)(command->data.var.value)) = value;
 984:SYS/shell/shell.c ****             break;
 985:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_SHORT:
 986:SYS/shell/shell.c ****             *((short *)(command->data.var.value)) = value;
 987:SYS/shell/shell.c ****             break;
 988:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_CHAR:
 989:SYS/shell/shell.c ****             *((char *)(command->data.var.value)) = value;
 990:SYS/shell/shell.c ****             break;
 991:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_STRING:
 992:SYS/shell/shell.c ****             shellStringCopy(((char *)(command->data.var.value)), (char *)value);
 993:SYS/shell/shell.c ****             break;
 994:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_POINT:
 995:SYS/shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_POINT_CANNOT_MODIFY]);
 996:SYS/shell/shell.c ****             break;
 997:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_NODE:
 998:SYS/shell/shell.c ****             if (((ShellNodeVarAttr *)command->data.var.value)->set)
 999:SYS/shell/shell.c ****             {
1000:SYS/shell/shell.c ****                 if (((ShellNodeVarAttr *)command->data.var.value)->var)
1001:SYS/shell/shell.c ****                 {
1002:SYS/shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)
1003:SYS/shell/shell.c ****                         ->set(((ShellNodeVarAttr *)command->data.var.value)->var, value);
1004:SYS/shell/shell.c ****                 }
1005:SYS/shell/shell.c ****                 else
1006:SYS/shell/shell.c ****                 {
1007:SYS/shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)->set(value);
1008:SYS/shell/shell.c ****                 }
1009:SYS/shell/shell.c ****             }
1010:SYS/shell/shell.c ****             break;
1011:SYS/shell/shell.c ****         default:
1012:SYS/shell/shell.c ****             break;
1013:SYS/shell/shell.c ****         }
ARM GAS  /tmp/ccYSNOoy.s 			page 26


1014:SYS/shell/shell.c ****     }
1015:SYS/shell/shell.c ****     return shellShowVar(shell, command);
1016:SYS/shell/shell.c **** }
1017:SYS/shell/shell.c **** 
1018:SYS/shell/shell.c **** /**
1019:SYS/shell/shell.c ****  * @brief shell变量输出
1020:SYS/shell/shell.c ****  * 
1021:SYS/shell/shell.c ****  * @param shell shell对象
1022:SYS/shell/shell.c ****  * @param command 命令
1023:SYS/shell/shell.c ****  * @return int 返回变量值
1024:SYS/shell/shell.c ****  */
1025:SYS/shell/shell.c **** static int shellShowVar(Shell *shell, ShellCommand *command)
1026:SYS/shell/shell.c **** {
1027:SYS/shell/shell.c ****     char buffer[12] = "00000000000";
1028:SYS/shell/shell.c ****     int value = shellGetVarValue(shell, command);
1029:SYS/shell/shell.c **** 
1030:SYS/shell/shell.c ****     shellWriteString(shell, command->data.var.name);
1031:SYS/shell/shell.c ****     shellWriteString(shell, " = ");
1032:SYS/shell/shell.c **** 
1033:SYS/shell/shell.c ****     switch (command->attr.attrs.type)
1034:SYS/shell/shell.c ****     {
1035:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
1036:SYS/shell/shell.c ****         shellWriteString(shell, "\"");
1037:SYS/shell/shell.c ****         shellWriteString(shell, (char *)value);
1038:SYS/shell/shell.c ****         shellWriteString(shell, "\"");
1039:SYS/shell/shell.c ****         break;
1040:SYS/shell/shell.c ****     // case SHELL_TYPE_VAR_INT:
1041:SYS/shell/shell.c ****     // case SHELL_TYPE_VAR_SHORT:
1042:SYS/shell/shell.c ****     // case SHELL_TYPE_VAR_CHAR:
1043:SYS/shell/shell.c ****     // case SHELL_TYPE_VAR_POINT:
1044:SYS/shell/shell.c ****     default:
1045:SYS/shell/shell.c ****         shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
1046:SYS/shell/shell.c ****         shellWriteString(shell, ", 0x");
1047:SYS/shell/shell.c ****         for (short i = 0; i < 11; i++)
1048:SYS/shell/shell.c ****         {
1049:SYS/shell/shell.c ****             buffer[i] = '0';
1050:SYS/shell/shell.c ****         }
1051:SYS/shell/shell.c ****         shellToHex(value, buffer);
1052:SYS/shell/shell.c ****         shellWriteString(shell, buffer);
1053:SYS/shell/shell.c ****         break;
1054:SYS/shell/shell.c ****     }
1055:SYS/shell/shell.c **** 
1056:SYS/shell/shell.c ****     shellWriteString(shell, "\r\n");
1057:SYS/shell/shell.c ****     return value;
1058:SYS/shell/shell.c **** }
1059:SYS/shell/shell.c **** 
1060:SYS/shell/shell.c **** /**
1061:SYS/shell/shell.c ****  * @brief shell设置变量
1062:SYS/shell/shell.c ****  * 
1063:SYS/shell/shell.c ****  * @param name 变量名
1064:SYS/shell/shell.c ****  * @param value 变量值
1065:SYS/shell/shell.c ****  * @return int 返回变量值
1066:SYS/shell/shell.c ****  */
1067:SYS/shell/shell.c **** int shellSetVar(char *name, int value)
1068:SYS/shell/shell.c **** {
1069:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
1070:SYS/shell/shell.c ****     if (shell == NULL)
ARM GAS  /tmp/ccYSNOoy.s 			page 27


1071:SYS/shell/shell.c ****     {
1072:SYS/shell/shell.c ****         return 0;
1073:SYS/shell/shell.c ****     }
1074:SYS/shell/shell.c ****     ShellCommand *command = shellSeekCommand(shell,
1075:SYS/shell/shell.c ****                                              name,
1076:SYS/shell/shell.c ****                                              shell->commandList.base,
1077:SYS/shell/shell.c ****                                              0);
1078:SYS/shell/shell.c ****     if (!command)
1079:SYS/shell/shell.c ****     {
1080:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_VAR_NOT_FOUND]);
1081:SYS/shell/shell.c ****         return 0;
1082:SYS/shell/shell.c ****     }
1083:SYS/shell/shell.c ****     if (command->attr.attrs.type < SHELL_TYPE_VAR_INT || command->attr.attrs.type > SHELL_TYPE_VAR_
1084:SYS/shell/shell.c ****     {
1085:SYS/shell/shell.c ****         shellWriteString(shell, name);
1086:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_NOT_VAR]);
1087:SYS/shell/shell.c ****         return 0;
1088:SYS/shell/shell.c ****     }
1089:SYS/shell/shell.c ****     return shellSetVarValue(shell, command, value);
1090:SYS/shell/shell.c **** }
1091:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1092:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_RETURN,
1093:SYS/shell/shell.c ****     setVar, shellSetVar, set var);
1094:SYS/shell/shell.c **** 
1095:SYS/shell/shell.c **** /**
1096:SYS/shell/shell.c ****  * @brief shell运行命令
1097:SYS/shell/shell.c ****  * 
1098:SYS/shell/shell.c ****  * @param shell shell对象
1099:SYS/shell/shell.c ****  * @param command 命令
1100:SYS/shell/shell.c ****  * 
1101:SYS/shell/shell.c ****  * @return unsigned int 命令返回值
1102:SYS/shell/shell.c ****  */
1103:SYS/shell/shell.c **** unsigned int shellRunCommand(Shell *shell, ShellCommand *command)
1104:SYS/shell/shell.c **** {
1105:SYS/shell/shell.c ****     int returnValue = 0;
1106:SYS/shell/shell.c ****     shell->status.isActive = 1;
1107:SYS/shell/shell.c ****     if (command->attr.attrs.type == SHELL_TYPE_CMD_MAIN)
1108:SYS/shell/shell.c ****     {
1109:SYS/shell/shell.c ****         shellRemoveParamQuotes(shell);
1110:SYS/shell/shell.c ****         returnValue = command->data.cmd.function(shell->parser.paramCount,
1111:SYS/shell/shell.c ****                                                  shell->parser.param);
1112:SYS/shell/shell.c ****         if (!command->attr.attrs.disableReturn)
1113:SYS/shell/shell.c ****         {
1114:SYS/shell/shell.c ****             shellWriteReturnValue(shell, returnValue);
1115:SYS/shell/shell.c ****         }
1116:SYS/shell/shell.c ****     }
1117:SYS/shell/shell.c ****     else if (command->attr.attrs.type == SHELL_TYPE_CMD_FUNC)
1118:SYS/shell/shell.c ****     {
1119:SYS/shell/shell.c ****         returnValue = shellExtRun(shell,
1120:SYS/shell/shell.c ****                                   command,
1121:SYS/shell/shell.c ****                                   shell->parser.paramCount,
1122:SYS/shell/shell.c ****                                   shell->parser.param);
1123:SYS/shell/shell.c ****         if (!command->attr.attrs.disableReturn)
1124:SYS/shell/shell.c ****         {
1125:SYS/shell/shell.c ****             shellWriteReturnValue(shell, returnValue);
1126:SYS/shell/shell.c ****         }
1127:SYS/shell/shell.c ****     }
ARM GAS  /tmp/ccYSNOoy.s 			page 28


1128:SYS/shell/shell.c ****     else if (command->attr.attrs.type >= SHELL_TYPE_VAR_INT && command->attr.attrs.type <= SHELL_TY
1129:SYS/shell/shell.c ****     {
1130:SYS/shell/shell.c ****         shellShowVar(shell, command);
1131:SYS/shell/shell.c ****     }
1132:SYS/shell/shell.c ****     else if (command->attr.attrs.type == SHELL_TYPE_USER)
1133:SYS/shell/shell.c ****     {
1134:SYS/shell/shell.c ****         shellSetUser(shell, command);
1135:SYS/shell/shell.c ****     }
1136:SYS/shell/shell.c ****     shell->status.isActive = 0;
1137:SYS/shell/shell.c **** 
1138:SYS/shell/shell.c ****     return returnValue;
1139:SYS/shell/shell.c **** }
1140:SYS/shell/shell.c **** 
1141:SYS/shell/shell.c **** /**
1142:SYS/shell/shell.c ****  * @brief shell校验密码
1143:SYS/shell/shell.c ****  * 
1144:SYS/shell/shell.c ****  * @param shell shell对象
1145:SYS/shell/shell.c ****  */
1146:SYS/shell/shell.c **** static void shellCheckPassword(Shell *shell)
1147:SYS/shell/shell.c **** {
1148:SYS/shell/shell.c ****     if (strcmp(shell->parser.buffer, shell->info.user->data.user.password) == 0)
1149:SYS/shell/shell.c ****     {
1150:SYS/shell/shell.c ****         shell->status.isChecked = 1;
1151:SYS/shell/shell.c **** #if SHELL_SHOW_INFO == 1
1152:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_INFO]);
1153:SYS/shell/shell.c **** #endif
1154:SYS/shell/shell.c ****     }
1155:SYS/shell/shell.c ****     else
1156:SYS/shell/shell.c ****     {
1157:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_PASSWORD_ERROR]);
1158:SYS/shell/shell.c ****     }
1159:SYS/shell/shell.c ****     shell->parser.length = 0;
1160:SYS/shell/shell.c ****     shell->parser.cursor = 0;
1161:SYS/shell/shell.c **** }
1162:SYS/shell/shell.c **** 
1163:SYS/shell/shell.c **** /**
1164:SYS/shell/shell.c ****  * @brief shell设置用户
1165:SYS/shell/shell.c ****  * 
1166:SYS/shell/shell.c ****  * @param shell shell对象
1167:SYS/shell/shell.c ****  * @param user 用户
1168:SYS/shell/shell.c ****  */
1169:SYS/shell/shell.c **** static void shellSetUser(Shell *shell, const ShellCommand *user)
1170:SYS/shell/shell.c **** {
1171:SYS/shell/shell.c ****     shell->info.user = user;
1172:SYS/shell/shell.c ****     shell->status.isChecked =
1173:SYS/shell/shell.c ****         ((user->data.user.password && strlen(user->data.user.password) != 0) && (shell->parser.para
1174:SYS/shell/shell.c ****             ? 0
1175:SYS/shell/shell.c ****             : 1;
1176:SYS/shell/shell.c **** 
1177:SYS/shell/shell.c **** #if SHELL_CLS_WHEN_LOGIN == 1
1178:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_CONSOLE]);
1179:SYS/shell/shell.c **** #endif
1180:SYS/shell/shell.c **** #if SHELL_SHOW_INFO == 1
1181:SYS/shell/shell.c ****     if (shell->status.isChecked)
1182:SYS/shell/shell.c ****     {
1183:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_INFO]);
1184:SYS/shell/shell.c ****     }
ARM GAS  /tmp/ccYSNOoy.s 			page 29


1185:SYS/shell/shell.c **** #endif
1186:SYS/shell/shell.c **** }
1187:SYS/shell/shell.c **** 
1188:SYS/shell/shell.c **** /**
1189:SYS/shell/shell.c ****  * @brief shell写返回值
1190:SYS/shell/shell.c ****  * 
1191:SYS/shell/shell.c ****  * @param shell shell对象
1192:SYS/shell/shell.c ****  * @param value 返回值
1193:SYS/shell/shell.c ****  */
1194:SYS/shell/shell.c **** static void shellWriteReturnValue(Shell *shell, int value)
1195:SYS/shell/shell.c **** {
1196:SYS/shell/shell.c ****     char buffer[12] = "00000000000";
1197:SYS/shell/shell.c ****     shellWriteString(shell, "Return: ");
1198:SYS/shell/shell.c ****     shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
1199:SYS/shell/shell.c ****     shellWriteString(shell, ", 0x");
1200:SYS/shell/shell.c ****     for (short i = 0; i < 11; i++)
1201:SYS/shell/shell.c ****     {
1202:SYS/shell/shell.c ****         buffer[i] = '0';
1203:SYS/shell/shell.c ****     }
1204:SYS/shell/shell.c ****     shellToHex(value, buffer);
1205:SYS/shell/shell.c ****     shellWriteString(shell, buffer);
1206:SYS/shell/shell.c ****     shellWriteString(shell, "\r\n");
1207:SYS/shell/shell.c **** }
1208:SYS/shell/shell.c **** 
1209:SYS/shell/shell.c **** /**
1210:SYS/shell/shell.c ****  * @brief shell历史记录添加
1211:SYS/shell/shell.c ****  * 
1212:SYS/shell/shell.c ****  * @param shell shell对象
1213:SYS/shell/shell.c ****  */
1214:SYS/shell/shell.c **** static void shellHistoryAdd(Shell *shell)
1215:SYS/shell/shell.c **** {
 403              		.loc 1 1215 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              	.LVL49:
 408 0000 10B5     		push	{r4, lr}
 409              	.LCFI6:
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0002 0446     		mov	r4, r0
1216:SYS/shell/shell.c ****     shell->history.offset = 0;
 414              		.loc 1 1216 0
 415 0004 0023     		movs	r3, #0
 416 0006 A0F85430 		strh	r3, [r0, #84]	@ movhi
1217:SYS/shell/shell.c ****     if (shell->history.number > 0 && strcmp(shell->history.item[(shell->history.record == 0 ? SHELL
 417              		.loc 1 1217 0
 418 000a B0F85030 		ldrh	r3, [r0, #80]
 419 000e 5BB1     		cbz	r3, .L48
 420              		.loc 1 1217 0 is_stmt 0 discriminator 1
 421 0010 B0F85230 		ldrh	r3, [r0, #82]
 422 0014 53B3     		cbz	r3, .L53
 423              		.loc 1 1217 0 discriminator 2
 424 0016 013B     		subs	r3, r3, #1
 425              	.L49:
 426              		.loc 1 1217 0 discriminator 5
ARM GAS  /tmp/ccYSNOoy.s 			page 30


 427 0018 0E33     		adds	r3, r3, #14
 428 001a 04EB8303 		add	r3, r4, r3, lsl #2
 429 001e 2169     		ldr	r1, [r4, #16]
 430 0020 5868     		ldr	r0, [r3, #4]
 431              	.LVL50:
 432 0022 FFF7FEFF 		bl	strcmp
 433              	.LVL51:
 434 0026 00B3     		cbz	r0, .L47
 435              	.L48:
1218:SYS/shell/shell.c ****                                             shell->parser.buffer) == 0)
1219:SYS/shell/shell.c ****     {
1220:SYS/shell/shell.c ****         return;
1221:SYS/shell/shell.c ****     }
1222:SYS/shell/shell.c ****     if (shellStringCopy(shell->history.item[shell->history.record],
 436              		.loc 1 1222 0 is_stmt 1
 437 0028 B4F85230 		ldrh	r3, [r4, #82]
 438 002c 0E33     		adds	r3, r3, #14
 439 002e 04EB8303 		add	r3, r4, r3, lsl #2
 440 0032 2169     		ldr	r1, [r4, #16]
 441 0034 5868     		ldr	r0, [r3, #4]
 442 0036 FFF7FEFF 		bl	shellStringCopy
 443              	.LVL52:
 444 003a 20B1     		cbz	r0, .L51
1223:SYS/shell/shell.c ****                         shell->parser.buffer) != 0)
1224:SYS/shell/shell.c ****     {
1225:SYS/shell/shell.c ****         shell->history.record++;
 445              		.loc 1 1225 0
 446 003c B4F85230 		ldrh	r3, [r4, #82]
 447 0040 0133     		adds	r3, r3, #1
 448 0042 A4F85230 		strh	r3, [r4, #82]	@ movhi
 449              	.L51:
1226:SYS/shell/shell.c ****     }
1227:SYS/shell/shell.c ****     if (++shell->history.number > SHELL_HISTORY_MAX_NUMBER)
 450              		.loc 1 1227 0
 451 0046 B4F85030 		ldrh	r3, [r4, #80]
 452 004a 0133     		adds	r3, r3, #1
 453 004c 9BB2     		uxth	r3, r3
 454 004e A4F85030 		strh	r3, [r4, #80]	@ movhi
 455 0052 052B     		cmp	r3, #5
 456 0054 02D9     		bls	.L52
1228:SYS/shell/shell.c ****     {
1229:SYS/shell/shell.c ****         shell->history.number = SHELL_HISTORY_MAX_NUMBER;
 457              		.loc 1 1229 0
 458 0056 0523     		movs	r3, #5
 459 0058 A4F85030 		strh	r3, [r4, #80]	@ movhi
 460              	.L52:
1230:SYS/shell/shell.c ****     }
1231:SYS/shell/shell.c ****     if (shell->history.record >= SHELL_HISTORY_MAX_NUMBER)
 461              		.loc 1 1231 0
 462 005c B4F85230 		ldrh	r3, [r4, #82]
 463 0060 042B     		cmp	r3, #4
 464 0062 02D9     		bls	.L47
1232:SYS/shell/shell.c ****     {
1233:SYS/shell/shell.c ****         shell->history.record = 0;
 465              		.loc 1 1233 0
 466 0064 0023     		movs	r3, #0
 467 0066 A4F85230 		strh	r3, [r4, #82]	@ movhi
ARM GAS  /tmp/ccYSNOoy.s 			page 31


 468              	.L47:
 469 006a 10BD     		pop	{r4, pc}
 470              	.LVL53:
 471              	.L53:
1217:SYS/shell/shell.c ****                                             shell->parser.buffer) == 0)
 472              		.loc 1 1217 0
 473 006c 0423     		movs	r3, #4
 474 006e D3E7     		b	.L49
 475              		.cfi_endproc
 476              	.LFE161:
 478              		.section	.text.shellRemoveParamQuotes,"ax",%progbits
 479              		.align	1
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu fpv4-sp-d16
 485              	shellRemoveParamQuotes:
 486              	.LFB151:
 867:SYS/shell/shell.c ****     unsigned short paramLength;
 487              		.loc 1 867 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              	.LVL54:
 492 0000 70B5     		push	{r4, r5, r6, lr}
 493              	.LCFI7:
 494              		.cfi_def_cfa_offset 16
 495              		.cfi_offset 4, -16
 496              		.cfi_offset 5, -12
 497              		.cfi_offset 6, -8
 498              		.cfi_offset 14, -4
 499 0002 0546     		mov	r5, r0
 500              	.LVL55:
 501              	.LBB6:
 869:SYS/shell/shell.c ****     {
 502              		.loc 1 869 0
 503 0004 0024     		movs	r4, #0
 504 0006 0AE0     		b	.L56
 505              	.LVL56:
 506              	.L62:
 873:SYS/shell/shell.c ****             shell->parser.param[i] = &shell->parser.param[i][1];
 507              		.loc 1 873 0
 508 0008 0021     		movs	r1, #0
 509 000a 1170     		strb	r1, [r2]
 874:SYS/shell/shell.c ****         }
 510              		.loc 1 874 0
 511 000c 221D     		adds	r2, r4, #4
 512 000e 05EB8202 		add	r2, r5, r2, lsl #2
 513 0012 5168     		ldr	r1, [r2, #4]
 514 0014 0131     		adds	r1, r1, #1
 515 0016 5160     		str	r1, [r2, #4]
 516 0018 0CE0     		b	.L57
 517              	.LVL57:
 518              	.L58:
 869:SYS/shell/shell.c ****     {
 519              		.loc 1 869 0 discriminator 2
 520 001a 0134     		adds	r4, r4, #1
ARM GAS  /tmp/ccYSNOoy.s 			page 32


 521              	.LVL58:
 522 001c A4B2     		uxth	r4, r4
 523              	.LVL59:
 524              	.L56:
 869:SYS/shell/shell.c ****     {
 525              		.loc 1 869 0 is_stmt 0 discriminator 1
 526 001e EB8E     		ldrh	r3, [r5, #54]
 527 0020 9C42     		cmp	r4, r3
 528 0022 16D2     		bcs	.L61
 871:SYS/shell/shell.c ****         {
 529              		.loc 1 871 0 is_stmt 1
 530 0024 2346     		mov	r3, r4
 531 0026 221D     		adds	r2, r4, #4
 532 0028 05EB8202 		add	r2, r5, r2, lsl #2
 533 002c 5268     		ldr	r2, [r2, #4]
 534 002e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 535 0030 2229     		cmp	r1, #34
 536 0032 E9D0     		beq	.L62
 537              	.L57:
 876:SYS/shell/shell.c ****         if (shell->parser.param[i][paramLength - 1] == '\"')
 538              		.loc 1 876 0
 539 0034 0433     		adds	r3, r3, #4
 540 0036 05EB8303 		add	r3, r5, r3, lsl #2
 541 003a 5E68     		ldr	r6, [r3, #4]
 542 003c 3046     		mov	r0, r6
 543 003e FFF7FEFF 		bl	strlen
 544              	.LVL60:
 877:SYS/shell/shell.c ****         {
 545              		.loc 1 877 0
 546 0042 80B2     		uxth	r0, r0
 547 0044 0138     		subs	r0, r0, #1
 548              	.LVL61:
 549 0046 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
 550 0048 222B     		cmp	r3, #34
 551 004a E6D1     		bne	.L58
 879:SYS/shell/shell.c ****         }
 552              		.loc 1 879 0
 553 004c 0023     		movs	r3, #0
 554 004e 3354     		strb	r3, [r6, r0]
 555 0050 E3E7     		b	.L58
 556              	.LVL62:
 557              	.L61:
 558              	.LBE6:
 882:SYS/shell/shell.c **** 
 559              		.loc 1 882 0
 560 0052 70BD     		pop	{r4, r5, r6, pc}
 561              		.cfi_endproc
 562              	.LFE151:
 564              		.section	.text.shellGetCurrent,"ax",%progbits
 565              		.align	1
 566              		.global	shellGetCurrent
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv4-sp-d16
 572              	shellGetCurrent:
 573              	.LFB126:
ARM GAS  /tmp/ccYSNOoy.s 			page 33


 233:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
 574              		.loc 1 233 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579              	.LVL63:
 580              	.LBB7:
 234:SYS/shell/shell.c ****     {
 581              		.loc 1 234 0
 582 0000 0023     		movs	r3, #0
 583 0002 01E0     		b	.L64
 584              	.LVL64:
 585              	.L65:
 234:SYS/shell/shell.c ****     {
 586              		.loc 1 234 0 is_stmt 0 discriminator 2
 587 0004 0133     		adds	r3, r3, #1
 588              	.LVL65:
 589 0006 1BB2     		sxth	r3, r3
 590              	.LVL66:
 591              	.L64:
 234:SYS/shell/shell.c ****     {
 592              		.loc 1 234 0 discriminator 1
 593 0008 042B     		cmp	r3, #4
 594 000a 0ADC     		bgt	.L68
 236:SYS/shell/shell.c ****         {
 595              		.loc 1 236 0 is_stmt 1
 596 000c 064A     		ldr	r2, .L69
 597 000e 52F82300 		ldr	r0, [r2, r3, lsl #2]
 598 0012 0028     		cmp	r0, #0
 599 0014 F6D0     		beq	.L65
 236:SYS/shell/shell.c ****         {
 600              		.loc 1 236 0 is_stmt 0 discriminator 1
 601 0016 90F86020 		ldrb	r2, [r0, #96]	@ zero_extendqisi2
 602 001a 12F0020F 		tst	r2, #2
 603 001e F1D0     		beq	.L65
 604 0020 00E0     		b	.L63
 605              	.L68:
 606              	.LBE7:
 241:SYS/shell/shell.c **** }
 607              		.loc 1 241 0 is_stmt 1
 608 0022 0020     		movs	r0, #0
 609              	.L63:
 242:SYS/shell/shell.c **** 
 610              		.loc 1 242 0
 611 0024 7047     		bx	lr
 612              	.L70:
 613 0026 00BF     		.align	2
 614              	.L69:
 615 0028 00000000 		.word	.LANCHOR0
 616              		.cfi_endproc
 617              	.LFE126:
 619              		.section	.text.shellWriteByte,"ax",%progbits
 620              		.align	1
 621              		.global	shellWriteByte
 622              		.syntax unified
 623              		.thumb
ARM GAS  /tmp/ccYSNOoy.s 			page 34


 624              		.thumb_func
 625              		.fpu fpv4-sp-d16
 627              	shellWriteByte:
 628              	.LFB127:
 251:SYS/shell/shell.c ****     shell->write(&data, sizeof(data));
 629              		.loc 1 251 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 8
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              	.LVL67:
 634 0000 00B5     		push	{lr}
 635              	.LCFI8:
 636              		.cfi_def_cfa_offset 4
 637              		.cfi_offset 14, -4
 638 0002 83B0     		sub	sp, sp, #12
 639              	.LCFI9:
 640              		.cfi_def_cfa_offset 16
 641 0004 02AB     		add	r3, sp, #8
 642 0006 03F8011D 		strb	r1, [r3, #-1]!
 252:SYS/shell/shell.c **** }
 643              		.loc 1 252 0
 644 000a 826E     		ldr	r2, [r0, #104]
 645 000c 0121     		movs	r1, #1
 646              	.LVL68:
 647 000e 1846     		mov	r0, r3
 648              	.LVL69:
 649 0010 9047     		blx	r2
 650              	.LVL70:
 253:SYS/shell/shell.c **** 
 651              		.loc 1 253 0
 652 0012 03B0     		add	sp, sp, #12
 653              	.LCFI10:
 654              		.cfi_def_cfa_offset 4
 655              		@ sp needed
 656 0014 5DF804FB 		ldr	pc, [sp], #4
 657              		.cfi_endproc
 658              	.LFE127:
 660              		.section	.text.shellRight,"ax",%progbits
 661              		.align	1
 662              		.global	shellRight
 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 666              		.fpu fpv4-sp-d16
 668              	shellRight:
 669              	.LFB167:
1234:SYS/shell/shell.c ****     }
1235:SYS/shell/shell.c **** }
1236:SYS/shell/shell.c **** 
1237:SYS/shell/shell.c **** /**
1238:SYS/shell/shell.c ****  * @brief shell历史记录查找
1239:SYS/shell/shell.c ****  * 
1240:SYS/shell/shell.c ****  * @param shell shell对象
1241:SYS/shell/shell.c ****  * @param dir 方向 {@code <0}往上查找 {@code >0}往下查找
1242:SYS/shell/shell.c ****  */
1243:SYS/shell/shell.c **** static void shellHistory(Shell *shell, signed char dir)
1244:SYS/shell/shell.c **** {
ARM GAS  /tmp/ccYSNOoy.s 			page 35


1245:SYS/shell/shell.c ****     if (dir > 0)
1246:SYS/shell/shell.c ****     {
1247:SYS/shell/shell.c ****         if (shell->history.offset-- <=
1248:SYS/shell/shell.c ****             -((shell->history.number > shell->history.record) ? shell->history.number : shell->hist
1249:SYS/shell/shell.c ****         {
1250:SYS/shell/shell.c ****             shell->history.offset = -((shell->history.number > shell->history.record)
1251:SYS/shell/shell.c ****                                           ? shell->history.number
1252:SYS/shell/shell.c ****                                           : shell->history.record);
1253:SYS/shell/shell.c ****         }
1254:SYS/shell/shell.c ****     }
1255:SYS/shell/shell.c ****     else if (dir < 0)
1256:SYS/shell/shell.c ****     {
1257:SYS/shell/shell.c ****         if (++shell->history.offset > 0)
1258:SYS/shell/shell.c ****         {
1259:SYS/shell/shell.c ****             shell->history.offset = 0;
1260:SYS/shell/shell.c ****             return;
1261:SYS/shell/shell.c ****         }
1262:SYS/shell/shell.c ****     }
1263:SYS/shell/shell.c ****     else
1264:SYS/shell/shell.c ****     {
1265:SYS/shell/shell.c ****         return;
1266:SYS/shell/shell.c ****     }
1267:SYS/shell/shell.c ****     shellClearCommandLine(shell);
1268:SYS/shell/shell.c ****     if (shell->history.offset == 0)
1269:SYS/shell/shell.c ****     {
1270:SYS/shell/shell.c ****         shell->parser.cursor = shell->parser.length = 0;
1271:SYS/shell/shell.c ****     }
1272:SYS/shell/shell.c ****     else
1273:SYS/shell/shell.c ****     {
1274:SYS/shell/shell.c ****         if ((shell->parser.length = shellStringCopy(shell->parser.buffer,
1275:SYS/shell/shell.c ****                                                     shell->history.item[(shell->history.record + SH
1276:SYS/shell/shell.c ****         {
1277:SYS/shell/shell.c ****             return;
1278:SYS/shell/shell.c ****         }
1279:SYS/shell/shell.c ****         shell->parser.cursor = shell->parser.length;
1280:SYS/shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
1281:SYS/shell/shell.c ****     }
1282:SYS/shell/shell.c **** }
1283:SYS/shell/shell.c **** 
1284:SYS/shell/shell.c **** /**
1285:SYS/shell/shell.c ****  * @brief shell 常规输入
1286:SYS/shell/shell.c ****  * 
1287:SYS/shell/shell.c ****  * @param shell shell 对象
1288:SYS/shell/shell.c ****  * @param data 输入字符
1289:SYS/shell/shell.c ****  */
1290:SYS/shell/shell.c **** void shellNormalInput(Shell *shell, char data)
1291:SYS/shell/shell.c **** {
1292:SYS/shell/shell.c ****     shell->status.tabFlag = 0;
1293:SYS/shell/shell.c ****     shellInsertByte(shell, data);
1294:SYS/shell/shell.c **** }
1295:SYS/shell/shell.c **** 
1296:SYS/shell/shell.c **** /**
1297:SYS/shell/shell.c ****  * @brief shell运行命令
1298:SYS/shell/shell.c ****  * 
1299:SYS/shell/shell.c ****  * @param shell shell对象
1300:SYS/shell/shell.c ****  */
1301:SYS/shell/shell.c **** void shellExec(Shell *shell)
ARM GAS  /tmp/ccYSNOoy.s 			page 36


1302:SYS/shell/shell.c **** {
1303:SYS/shell/shell.c **** 
1304:SYS/shell/shell.c ****     if (shell->parser.length == 0)
1305:SYS/shell/shell.c ****     {
1306:SYS/shell/shell.c ****         return;
1307:SYS/shell/shell.c ****     }
1308:SYS/shell/shell.c **** 
1309:SYS/shell/shell.c ****     shell->parser.buffer[shell->parser.length] = 0;
1310:SYS/shell/shell.c **** 
1311:SYS/shell/shell.c ****     if (shell->status.isChecked)
1312:SYS/shell/shell.c ****     {
1313:SYS/shell/shell.c ****         shellHistoryAdd(shell);
1314:SYS/shell/shell.c ****         shellParserParam(shell);
1315:SYS/shell/shell.c ****         shell->parser.length = shell->parser.cursor = 0;
1316:SYS/shell/shell.c ****         if (shell->parser.paramCount == 0)
1317:SYS/shell/shell.c ****         {
1318:SYS/shell/shell.c ****             return;
1319:SYS/shell/shell.c ****         }
1320:SYS/shell/shell.c ****         shellWriteString(shell, "\r\n");
1321:SYS/shell/shell.c **** 
1322:SYS/shell/shell.c ****         ShellCommand *command = shellSeekCommand(shell,
1323:SYS/shell/shell.c ****                                                  shell->parser.param[0],
1324:SYS/shell/shell.c ****                                                  shell->commandList.base,
1325:SYS/shell/shell.c ****                                                  0);
1326:SYS/shell/shell.c ****         if (command != NULL)
1327:SYS/shell/shell.c ****         {
1328:SYS/shell/shell.c ****             shellRunCommand(shell, command);
1329:SYS/shell/shell.c ****         }
1330:SYS/shell/shell.c ****         else
1331:SYS/shell/shell.c ****         {
1332:SYS/shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_CMD_NOT_FOUND]);
1333:SYS/shell/shell.c ****         }
1334:SYS/shell/shell.c ****     }
1335:SYS/shell/shell.c ****     else
1336:SYS/shell/shell.c ****     {
1337:SYS/shell/shell.c ****         shellCheckPassword(shell);
1338:SYS/shell/shell.c ****     }
1339:SYS/shell/shell.c **** }
1340:SYS/shell/shell.c **** 
1341:SYS/shell/shell.c **** /**
1342:SYS/shell/shell.c ****  * @brief shell上方向键输入
1343:SYS/shell/shell.c ****  * 
1344:SYS/shell/shell.c ****  * @param shell shell对象
1345:SYS/shell/shell.c ****  */
1346:SYS/shell/shell.c **** void shellUp(Shell *shell)
1347:SYS/shell/shell.c **** {
1348:SYS/shell/shell.c ****     shellHistory(shell, 1);
1349:SYS/shell/shell.c **** }
1350:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x1B5B4100, shellUp, up);
1351:SYS/shell/shell.c **** 
1352:SYS/shell/shell.c **** /**
1353:SYS/shell/shell.c ****  * @brief shell下方向键输入
1354:SYS/shell/shell.c ****  * 
1355:SYS/shell/shell.c ****  * @param shell shell对象
1356:SYS/shell/shell.c ****  */
1357:SYS/shell/shell.c **** void shellDown(Shell *shell)
1358:SYS/shell/shell.c **** {
ARM GAS  /tmp/ccYSNOoy.s 			page 37


1359:SYS/shell/shell.c ****     shellHistory(shell, -1);
1360:SYS/shell/shell.c **** }
1361:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x1B5B4200, shellDown, down);
1362:SYS/shell/shell.c **** 
1363:SYS/shell/shell.c **** /**
1364:SYS/shell/shell.c ****  * @brief shell右方向键输入
1365:SYS/shell/shell.c ****  * 
1366:SYS/shell/shell.c ****  * @param shell shell对象
1367:SYS/shell/shell.c ****  */
1368:SYS/shell/shell.c **** void shellRight(Shell *shell)
1369:SYS/shell/shell.c **** {
 670              		.loc 1 1369 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              	.LVL71:
 675 0000 08B5     		push	{r3, lr}
 676              	.LCFI11:
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 3, -8
 679              		.cfi_offset 14, -4
1370:SYS/shell/shell.c ****     if (shell->parser.cursor < shell->parser.length)
 680              		.loc 1 1370 0
 681 0002 C389     		ldrh	r3, [r0, #14]
 682 0004 8289     		ldrh	r2, [r0, #12]
 683 0006 9342     		cmp	r3, r2
 684 0008 00D3     		bcc	.L76
 685              	.LVL72:
 686              	.L73:
 687 000a 08BD     		pop	{r3, pc}
 688              	.LVL73:
 689              	.L76:
1371:SYS/shell/shell.c ****     {
1372:SYS/shell/shell.c ****         shellWriteByte(shell, shell->parser.buffer[shell->parser.cursor++]);
 690              		.loc 1 1372 0
 691 000c 0269     		ldr	r2, [r0, #16]
 692 000e 591C     		adds	r1, r3, #1
 693 0010 C181     		strh	r1, [r0, #14]	@ movhi
 694 0012 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 695 0014 FFF7FEFF 		bl	shellWriteByte
 696              	.LVL74:
1373:SYS/shell/shell.c ****     }
1374:SYS/shell/shell.c **** }
 697              		.loc 1 1374 0
 698 0018 F7E7     		b	.L73
 699              		.cfi_endproc
 700              	.LFE167:
 702              		.section	.text.shellLeft,"ax",%progbits
 703              		.align	1
 704              		.global	shellLeft
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv4-sp-d16
 710              	shellLeft:
 711              	.LFB168:
1375:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
ARM GAS  /tmp/ccYSNOoy.s 			page 38


1376:SYS/shell/shell.c ****                  0x1B5B4300, shellRight, right);
1377:SYS/shell/shell.c **** 
1378:SYS/shell/shell.c **** /**
1379:SYS/shell/shell.c ****  * @brief shell左方向键输入
1380:SYS/shell/shell.c ****  * 
1381:SYS/shell/shell.c ****  * @param shell shell对象
1382:SYS/shell/shell.c ****  */
1383:SYS/shell/shell.c **** void shellLeft(Shell *shell)
1384:SYS/shell/shell.c **** {
 712              		.loc 1 1384 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              	.LVL75:
1385:SYS/shell/shell.c ****     if (shell->parser.cursor > 0)
 717              		.loc 1 1385 0
 718 0000 C389     		ldrh	r3, [r0, #14]
 719 0002 03B9     		cbnz	r3, .L83
 720 0004 7047     		bx	lr
 721              	.L83:
1384:SYS/shell/shell.c ****     if (shell->parser.cursor > 0)
 722              		.loc 1 1384 0
 723 0006 10B5     		push	{r4, lr}
 724              	.LCFI12:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 4, -8
 727              		.cfi_offset 14, -4
 728 0008 0446     		mov	r4, r0
1386:SYS/shell/shell.c ****     {
1387:SYS/shell/shell.c ****         shellWriteByte(shell, '\b');
 729              		.loc 1 1387 0
 730 000a 0821     		movs	r1, #8
 731 000c FFF7FEFF 		bl	shellWriteByte
 732              	.LVL76:
1388:SYS/shell/shell.c ****         shell->parser.cursor--;
 733              		.loc 1 1388 0
 734 0010 E389     		ldrh	r3, [r4, #14]
 735 0012 013B     		subs	r3, r3, #1
 736 0014 E381     		strh	r3, [r4, #14]	@ movhi
 737 0016 10BD     		pop	{r4, pc}
 738              		.cfi_endproc
 739              	.LFE168:
 741              		.section	.text.shellWriteString,"ax",%progbits
 742              		.align	1
 743              		.global	shellWriteString
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 747              		.fpu fpv4-sp-d16
 749              	shellWriteString:
 750              	.LFB128:
 264:SYS/shell/shell.c ****     unsigned short count = 0;
 751              		.loc 1 264 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              	.LVL77:
ARM GAS  /tmp/ccYSNOoy.s 			page 39


 756 0000 38B5     		push	{r3, r4, r5, lr}
 757              	.LCFI13:
 758              		.cfi_def_cfa_offset 16
 759              		.cfi_offset 3, -16
 760              		.cfi_offset 4, -12
 761              		.cfi_offset 5, -8
 762              		.cfi_offset 14, -4
 763              	.LVL78:
 266:SYS/shell/shell.c **** 
 764              		.loc 1 266 0
 765 0002 856E     		ldr	r5, [r0, #104]
 766 0004 35B1     		cbz	r5, .L85
 767 0006 0C46     		mov	r4, r1
 268:SYS/shell/shell.c ****     return count;
 768              		.loc 1 268 0
 769 0008 0846     		mov	r0, r1
 770              	.LVL79:
 771 000a FFF7FEFF 		bl	strlen
 772              	.LVL80:
 773 000e 81B2     		uxth	r1, r0
 774 0010 2046     		mov	r0, r4
 775 0012 A847     		blx	r5
 776              	.LVL81:
 777              	.L85:
 270:SYS/shell/shell.c **** 
 778              		.loc 1 270 0
 779 0014 0020     		movs	r0, #0
 780 0016 38BD     		pop	{r3, r4, r5, pc}
 781              		.cfi_endproc
 782              	.LFE128:
 784              		.section	.text.shellSetUser,"ax",%progbits
 785              		.align	1
 786              		.syntax unified
 787              		.thumb
 788              		.thumb_func
 789              		.fpu fpv4-sp-d16
 791              	shellSetUser:
 792              	.LFB159:
1170:SYS/shell/shell.c ****     shell->info.user = user;
 793              		.loc 1 1170 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              	.LVL82:
 798 0000 10B5     		push	{r4, lr}
 799              	.LCFI14:
 800              		.cfi_def_cfa_offset 8
 801              		.cfi_offset 4, -8
 802              		.cfi_offset 14, -4
 803 0002 0446     		mov	r4, r0
1171:SYS/shell/shell.c ****     shell->status.isChecked =
 804              		.loc 1 1171 0
 805 0004 0160     		str	r1, [r0]
1173:SYS/shell/shell.c ****             ? 0
 806              		.loc 1 1173 0
 807 0006 8868     		ldr	r0, [r1, #8]
 808              	.LVL83:
ARM GAS  /tmp/ccYSNOoy.s 			page 40


1175:SYS/shell/shell.c **** 
 809              		.loc 1 1175 0
 810 0008 50B1     		cbz	r0, .L90
1173:SYS/shell/shell.c ****             ? 0
 811              		.loc 1 1173 0
 812 000a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 813 000c 53B1     		cbz	r3, .L91
1173:SYS/shell/shell.c ****             ? 0
 814              		.loc 1 1173 0 is_stmt 0 discriminator 1
 815 000e E38E     		ldrh	r3, [r4, #54]
1175:SYS/shell/shell.c **** 
 816              		.loc 1 1175 0 is_stmt 1 discriminator 1
 817 0010 012B     		cmp	r3, #1
 818 0012 18D9     		bls	.L92
1173:SYS/shell/shell.c ****             ? 0
 819              		.loc 1 1173 0
 820 0014 A169     		ldr	r1, [r4, #24]
 821              	.LVL84:
 822 0016 FFF7FEFF 		bl	strcmp
 823              	.LVL85:
 824 001a B0B1     		cbz	r0, .L93
1175:SYS/shell/shell.c **** 
 825              		.loc 1 1175 0
 826 001c 0022     		movs	r2, #0
 827 001e 02E0     		b	.L88
 828              	.LVL86:
 829              	.L90:
 830 0020 0122     		movs	r2, #1
 831 0022 00E0     		b	.L88
 832              	.L91:
 833 0024 0122     		movs	r2, #1
 834              	.LVL87:
 835              	.L88:
1172:SYS/shell/shell.c ****         ((user->data.user.password && strlen(user->data.user.password) != 0) && (shell->parser.para
 836              		.loc 1 1172 0 discriminator 4
 837 0026 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 838 002a 62F30003 		bfi	r3, r2, #0, #1
 839 002e 84F86030 		strb	r3, [r4, #96]
1178:SYS/shell/shell.c **** #endif
 840              		.loc 1 1178 0 discriminator 4
 841 0032 0949     		ldr	r1, .L96
 842 0034 2046     		mov	r0, r4
 843 0036 FFF7FEFF 		bl	shellWriteString
 844              	.LVL88:
1181:SYS/shell/shell.c ****     {
 845              		.loc 1 1181 0 discriminator 4
 846 003a 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 847 003e 13F0010F 		tst	r3, #1
 848 0042 04D1     		bne	.L95
 849              	.L87:
 850 0044 10BD     		pop	{r4, pc}
 851              	.LVL89:
 852              	.L92:
1175:SYS/shell/shell.c **** 
 853              		.loc 1 1175 0
 854 0046 0022     		movs	r2, #0
 855 0048 EDE7     		b	.L88
ARM GAS  /tmp/ccYSNOoy.s 			page 41


 856              	.LVL90:
 857              	.L93:
 858 004a 0122     		movs	r2, #1
 859 004c EBE7     		b	.L88
 860              	.L95:
1183:SYS/shell/shell.c ****     }
 861              		.loc 1 1183 0
 862 004e 0349     		ldr	r1, .L96+4
 863 0050 2046     		mov	r0, r4
 864 0052 FFF7FEFF 		bl	shellWriteString
 865              	.LVL91:
1186:SYS/shell/shell.c **** 
 866              		.loc 1 1186 0
 867 0056 F5E7     		b	.L87
 868              	.L97:
 869              		.align	2
 870              	.L96:
 871 0058 00000000 		.word	.LC0
 872 005c 0C000000 		.word	.LC1
 873              		.cfi_endproc
 874              	.LFE159:
 876              		.section	.text.shellWriteCommandLine,"ax",%progbits
 877              		.align	1
 878              		.syntax unified
 879              		.thumb
 880              		.thumb_func
 881              		.fpu fpv4-sp-d16
 883              	shellWriteCommandLine:
 884              	.LFB130:
 307:SYS/shell/shell.c ****     if (shell->status.isChecked)
 885              		.loc 1 307 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              	.LVL92:
 890 0000 10B5     		push	{r4, lr}
 891              	.LCFI15:
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 4, -8
 894              		.cfi_offset 14, -4
 895 0002 0446     		mov	r4, r0
 308:SYS/shell/shell.c ****     {
 896              		.loc 1 308 0
 897 0004 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 898 0008 13F0010F 		tst	r3, #1
 899 000c 19D0     		beq	.L99
 310:SYS/shell/shell.c ****         {
 900              		.loc 1 310 0
 901 000e 91B9     		cbnz	r1, .L105
 902              	.LVL93:
 903              	.L100:
 314:SYS/shell/shell.c ****         shellWriteString(shell, ":");
 904              		.loc 1 314 0
 905 0010 2368     		ldr	r3, [r4]
 906 0012 5968     		ldr	r1, [r3, #4]
 907 0014 2046     		mov	r0, r4
 908 0016 FFF7FEFF 		bl	shellWriteString
ARM GAS  /tmp/ccYSNOoy.s 			page 42


 909              	.LVL94:
 315:SYS/shell/shell.c ****         shellWriteString(shell, shell->info.path ? shell->info.path : "/");
 910              		.loc 1 315 0
 911 001a 0C49     		ldr	r1, .L107
 912 001c 2046     		mov	r0, r4
 913 001e FFF7FEFF 		bl	shellWriteString
 914              	.LVL95:
 316:SYS/shell/shell.c ****         shellWriteString(shell, "$ ");
 915              		.loc 1 316 0
 916 0022 A168     		ldr	r1, [r4, #8]
 917 0024 59B1     		cbz	r1, .L106
 918              	.L101:
 316:SYS/shell/shell.c ****         shellWriteString(shell, "$ ");
 919              		.loc 1 316 0 is_stmt 0 discriminator 4
 920 0026 2046     		mov	r0, r4
 921 0028 FFF7FEFF 		bl	shellWriteString
 922              	.LVL96:
 317:SYS/shell/shell.c ****     }
 923              		.loc 1 317 0 is_stmt 1 discriminator 4
 924 002c 0849     		ldr	r1, .L107+4
 925 002e 2046     		mov	r0, r4
 926 0030 FFF7FEFF 		bl	shellWriteString
 927              	.LVL97:
 928 0034 10BD     		pop	{r4, pc}
 929              	.LVL98:
 930              	.L105:
 312:SYS/shell/shell.c ****         }
 931              		.loc 1 312 0
 932 0036 0749     		ldr	r1, .L107+8
 933              	.LVL99:
 934 0038 FFF7FEFF 		bl	shellWriteString
 935              	.LVL100:
 936 003c E8E7     		b	.L100
 937              	.L106:
 316:SYS/shell/shell.c ****         shellWriteString(shell, "$ ");
 938              		.loc 1 316 0
 939 003e 0649     		ldr	r1, .L107+12
 940 0040 F1E7     		b	.L101
 941              	.LVL101:
 942              	.L99:
 321:SYS/shell/shell.c ****     }
 943              		.loc 1 321 0
 944 0042 0649     		ldr	r1, .L107+16
 945              	.LVL102:
 946 0044 FFF7FEFF 		bl	shellWriteString
 947              	.LVL103:
 948 0048 10BD     		pop	{r4, pc}
 949              	.LVL104:
 950              	.L108:
 951 004a 00BF     		.align	2
 952              	.L107:
 953 004c 08000000 		.word	.LC4
 954 0050 0C000000 		.word	.LC5
 955 0054 04000000 		.word	.LC3
 956 0058 00000000 		.word	.LC2
 957 005c 10000000 		.word	.LC6
 958              		.cfi_endproc
ARM GAS  /tmp/ccYSNOoy.s 			page 43


 959              	.LFE130:
 961              		.section	.text.shellCheckPassword,"ax",%progbits
 962              		.align	1
 963              		.syntax unified
 964              		.thumb
 965              		.thumb_func
 966              		.fpu fpv4-sp-d16
 968              	shellCheckPassword:
 969              	.LFB158:
1147:SYS/shell/shell.c ****     if (strcmp(shell->parser.buffer, shell->info.user->data.user.password) == 0)
 970              		.loc 1 1147 0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974              	.LVL105:
 975 0000 10B5     		push	{r4, lr}
 976              	.LCFI16:
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 4, -8
 979              		.cfi_offset 14, -4
 980 0002 0446     		mov	r4, r0
1148:SYS/shell/shell.c ****     {
 981              		.loc 1 1148 0
 982 0004 0368     		ldr	r3, [r0]
 983 0006 9968     		ldr	r1, [r3, #8]
 984 0008 0069     		ldr	r0, [r0, #16]
 985              	.LVL106:
 986 000a FFF7FEFF 		bl	strcmp
 987              	.LVL107:
 988 000e 38B1     		cbz	r0, .L113
1157:SYS/shell/shell.c ****     }
 989              		.loc 1 1157 0
 990 0010 0949     		ldr	r1, .L114
 991 0012 2046     		mov	r0, r4
 992 0014 FFF7FEFF 		bl	shellWriteString
 993              	.LVL108:
 994              	.L111:
1159:SYS/shell/shell.c ****     shell->parser.cursor = 0;
 995              		.loc 1 1159 0
 996 0018 0023     		movs	r3, #0
 997 001a A381     		strh	r3, [r4, #12]	@ movhi
1160:SYS/shell/shell.c **** }
 998              		.loc 1 1160 0
 999 001c E381     		strh	r3, [r4, #14]	@ movhi
 1000 001e 10BD     		pop	{r4, pc}
 1001              	.LVL109:
 1002              	.L113:
1150:SYS/shell/shell.c **** #if SHELL_SHOW_INFO == 1
 1003              		.loc 1 1150 0
 1004 0020 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 1005 0024 43F00103 		orr	r3, r3, #1
 1006 0028 84F86030 		strb	r3, [r4, #96]
1152:SYS/shell/shell.c **** #endif
 1007              		.loc 1 1152 0
 1008 002c 0349     		ldr	r1, .L114+4
 1009 002e 2046     		mov	r0, r4
 1010 0030 FFF7FEFF 		bl	shellWriteString
ARM GAS  /tmp/ccYSNOoy.s 			page 44


 1011              	.LVL110:
 1012 0034 F0E7     		b	.L111
 1013              	.L115:
 1014 0036 00BF     		.align	2
 1015              	.L114:
 1016 0038 00000000 		.word	.LC7
 1017 003c 0C000000 		.word	.LC1
 1018              		.cfi_endproc
 1019              	.LFE158:
 1021              		.section	.text.shellClear,"ax",%progbits
 1022              		.align	1
 1023              		.global	shellClear
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
 1027              		.fpu fpv4-sp-d16
 1029              	shellClear:
 1030              	.LFB180:
1389:SYS/shell/shell.c ****     }
1390:SYS/shell/shell.c **** }
1391:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1392:SYS/shell/shell.c ****                  0x1B5B4400, shellLeft, left);
1393:SYS/shell/shell.c **** 
1394:SYS/shell/shell.c **** /**
1395:SYS/shell/shell.c ****  * @brief shell Tab按键处理
1396:SYS/shell/shell.c ****  * 
1397:SYS/shell/shell.c ****  * @param shell shell对象
1398:SYS/shell/shell.c ****  */
1399:SYS/shell/shell.c **** void shellTab(Shell *shell)
1400:SYS/shell/shell.c **** {
1401:SYS/shell/shell.c ****     unsigned short maxMatch = shell->parser.bufferSize;
1402:SYS/shell/shell.c ****     unsigned short lastMatchIndex = 0;
1403:SYS/shell/shell.c ****     unsigned short matchNum = 0;
1404:SYS/shell/shell.c ****     unsigned short length;
1405:SYS/shell/shell.c **** 
1406:SYS/shell/shell.c ****     if (shell->parser.length == 0)
1407:SYS/shell/shell.c ****     {
1408:SYS/shell/shell.c ****         shellListAll(shell);
1409:SYS/shell/shell.c ****         shellWriteCommandLine(shell, 1);
1410:SYS/shell/shell.c ****     }
1411:SYS/shell/shell.c ****     else if (shell->parser.length > 0)
1412:SYS/shell/shell.c ****     {
1413:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
1414:SYS/shell/shell.c ****         ShellCommand *base = (ShellCommand *)shell->commandList.base;
1415:SYS/shell/shell.c ****         for (short i = 0; i < shell->commandList.count; i++)
1416:SYS/shell/shell.c ****         {
1417:SYS/shell/shell.c ****             if (shellCheckPermission(shell, &base[i]) == 0 && shellStringCompare(shell->parser.buff
1418:SYS/shell/shell.c ****                                                                                  (char *)shellGetCo
1419:SYS/shell/shell.c ****             {
1420:SYS/shell/shell.c ****                 if (matchNum != 0)
1421:SYS/shell/shell.c ****                 {
1422:SYS/shell/shell.c ****                     if (matchNum == 1)
1423:SYS/shell/shell.c ****                     {
1424:SYS/shell/shell.c ****                         shellWriteString(shell, "\r\n");
1425:SYS/shell/shell.c ****                     }
1426:SYS/shell/shell.c ****                     shellListItem(shell, &base[lastMatchIndex]);
1427:SYS/shell/shell.c ****                     length =
ARM GAS  /tmp/ccYSNOoy.s 			page 45


1428:SYS/shell/shell.c ****                         shellStringCompare((char *)shellGetCommandName(&base[lastMatchIndex]),
1429:SYS/shell/shell.c ****                                            (char *)shellGetCommandName(&base[i]));
1430:SYS/shell/shell.c ****                     maxMatch = (maxMatch > length) ? length : maxMatch;
1431:SYS/shell/shell.c ****                 }
1432:SYS/shell/shell.c ****                 lastMatchIndex = i;
1433:SYS/shell/shell.c ****                 matchNum++;
1434:SYS/shell/shell.c ****             }
1435:SYS/shell/shell.c ****         }
1436:SYS/shell/shell.c ****         if (matchNum == 0)
1437:SYS/shell/shell.c ****         {
1438:SYS/shell/shell.c ****             return;
1439:SYS/shell/shell.c ****         }
1440:SYS/shell/shell.c ****         if (matchNum == 1)
1441:SYS/shell/shell.c ****         {
1442:SYS/shell/shell.c ****             shellClearCommandLine(shell);
1443:SYS/shell/shell.c ****         }
1444:SYS/shell/shell.c ****         if (matchNum != 0)
1445:SYS/shell/shell.c ****         {
1446:SYS/shell/shell.c ****             shell->parser.length =
1447:SYS/shell/shell.c ****                 shellStringCopy(shell->parser.buffer,
1448:SYS/shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
1449:SYS/shell/shell.c ****         }
1450:SYS/shell/shell.c ****         if (matchNum > 1)
1451:SYS/shell/shell.c ****         {
1452:SYS/shell/shell.c ****             shellListItem(shell, &base[lastMatchIndex]);
1453:SYS/shell/shell.c ****             shellWriteCommandLine(shell, 1);
1454:SYS/shell/shell.c ****             shell->parser.length = maxMatch;
1455:SYS/shell/shell.c ****         }
1456:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
1457:SYS/shell/shell.c ****         shell->parser.cursor = shell->parser.length;
1458:SYS/shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
1459:SYS/shell/shell.c ****     }
1460:SYS/shell/shell.c **** 
1461:SYS/shell/shell.c ****     if (SHELL_GET_TICK())
1462:SYS/shell/shell.c ****     {
1463:SYS/shell/shell.c ****         if (matchNum == 1 && shell->status.tabFlag && SHELL_GET_TICK() - shell->info.activeTime < S
1464:SYS/shell/shell.c ****         {
1465:SYS/shell/shell.c ****             shellClearCommandLine(shell);
1466:SYS/shell/shell.c ****             for (short i = shell->parser.length; i >= 0; i--)
1467:SYS/shell/shell.c ****             {
1468:SYS/shell/shell.c ****                 shell->parser.buffer[i + 5] = shell->parser.buffer[i];
1469:SYS/shell/shell.c ****             }
1470:SYS/shell/shell.c ****             shellStringCopy(shell->parser.buffer, "help");
1471:SYS/shell/shell.c ****             shell->parser.buffer[4] = ' ';
1472:SYS/shell/shell.c ****             shell->parser.length += 5;
1473:SYS/shell/shell.c ****             shell->parser.cursor = shell->parser.length;
1474:SYS/shell/shell.c ****             shellWriteString(shell, shell->parser.buffer);
1475:SYS/shell/shell.c ****         }
1476:SYS/shell/shell.c ****         else
1477:SYS/shell/shell.c ****         {
1478:SYS/shell/shell.c ****             shell->status.tabFlag = 1;
1479:SYS/shell/shell.c ****         }
1480:SYS/shell/shell.c ****     }
1481:SYS/shell/shell.c **** }
1482:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x09000000, shellTab, tab);
1483:SYS/shell/shell.c **** 
1484:SYS/shell/shell.c **** /**
ARM GAS  /tmp/ccYSNOoy.s 			page 46


1485:SYS/shell/shell.c ****  * @brief shell 退格
1486:SYS/shell/shell.c ****  * 
1487:SYS/shell/shell.c ****  * @param shell shell对象
1488:SYS/shell/shell.c ****  */
1489:SYS/shell/shell.c **** void shellBackspace(Shell *shell)
1490:SYS/shell/shell.c **** {
1491:SYS/shell/shell.c ****     shellDeleteByte(shell, 1);
1492:SYS/shell/shell.c **** }
1493:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1494:SYS/shell/shell.c ****                  0x08000000, shellBackspace, backspace);
1495:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1496:SYS/shell/shell.c ****                  0x7F000000, shellBackspace, backspace);
1497:SYS/shell/shell.c **** 
1498:SYS/shell/shell.c **** /**
1499:SYS/shell/shell.c ****  * @brief shell 删除
1500:SYS/shell/shell.c ****  * 
1501:SYS/shell/shell.c ****  * @param shell shell对象
1502:SYS/shell/shell.c ****  */
1503:SYS/shell/shell.c **** void shellDelete(Shell *shell)
1504:SYS/shell/shell.c **** {
1505:SYS/shell/shell.c ****     shellDeleteByte(shell, -1);
1506:SYS/shell/shell.c **** }
1507:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1508:SYS/shell/shell.c ****                  0x1B5B337E, shellDelete, delete);
1509:SYS/shell/shell.c **** 
1510:SYS/shell/shell.c **** /**
1511:SYS/shell/shell.c ****  * @brief shell 回车处理
1512:SYS/shell/shell.c ****  * 
1513:SYS/shell/shell.c ****  * @param shell shell对象
1514:SYS/shell/shell.c ****  */
1515:SYS/shell/shell.c **** void shellEnter(Shell *shell)
1516:SYS/shell/shell.c **** {
1517:SYS/shell/shell.c ****     shellExec(shell);
1518:SYS/shell/shell.c ****     shellWriteCommandLine(shell, 1);
1519:SYS/shell/shell.c **** }
1520:SYS/shell/shell.c **** #if SHELL_ENTER_LF == 1
1521:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1522:SYS/shell/shell.c ****                  0x0A000000, shellEnter, enter);
1523:SYS/shell/shell.c **** #endif
1524:SYS/shell/shell.c **** #if SHELL_ENTER_CR == 1
1525:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1526:SYS/shell/shell.c ****                  0x0D000000, shellEnter, enter);
1527:SYS/shell/shell.c **** #endif
1528:SYS/shell/shell.c **** #if SHELL_ENTER_CRLF == 1
1529:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1530:SYS/shell/shell.c ****                  0x0D0A0000, shellEnter, enter);
1531:SYS/shell/shell.c **** #endif
1532:SYS/shell/shell.c **** 
1533:SYS/shell/shell.c **** /**
1534:SYS/shell/shell.c ****  * @brief shell help
1535:SYS/shell/shell.c ****  * 
1536:SYS/shell/shell.c ****  * @param argc 参数个数
1537:SYS/shell/shell.c ****  * @param argv 参数
1538:SYS/shell/shell.c ****  */
1539:SYS/shell/shell.c **** void shellHelp(int argc, char *argv[])
1540:SYS/shell/shell.c **** {
1541:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
ARM GAS  /tmp/ccYSNOoy.s 			page 47


1542:SYS/shell/shell.c ****     SHELL_ASSERT(shell, return );
1543:SYS/shell/shell.c ****     if (argc == 1)
1544:SYS/shell/shell.c ****     {
1545:SYS/shell/shell.c ****         shellListAll(shell);
1546:SYS/shell/shell.c ****     }
1547:SYS/shell/shell.c ****     else if (argc > 1)
1548:SYS/shell/shell.c ****     {
1549:SYS/shell/shell.c ****         ShellCommand *command = shellSeekCommand(shell,
1550:SYS/shell/shell.c ****                                                  argv[1],
1551:SYS/shell/shell.c ****                                                  shell->commandList.base,
1552:SYS/shell/shell.c ****                                                  0);
1553:SYS/shell/shell.c ****         if (command)
1554:SYS/shell/shell.c ****         {
1555:SYS/shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_HELP_HEADER]);
1556:SYS/shell/shell.c ****             shellWriteString(shell, shellGetCommandName(command));
1557:SYS/shell/shell.c ****             shellWriteString(shell, "\r\n");
1558:SYS/shell/shell.c ****             shellWriteString(shell, shellGetCommandDesc(command));
1559:SYS/shell/shell.c ****             shellWriteString(shell, "\r\n");
1560:SYS/shell/shell.c ****         }
1561:SYS/shell/shell.c ****         else
1562:SYS/shell/shell.c ****         {
1563:SYS/shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_CMD_NOT_FOUND]);
1564:SYS/shell/shell.c ****         }
1565:SYS/shell/shell.c ****     }
1566:SYS/shell/shell.c **** }
1567:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1568:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_MAIN) | SHELL_CMD_DISABLE_RETURN,
1569:SYS/shell/shell.c ****     help, shellHelp, show command info\r\nhelp[cmd]);
1570:SYS/shell/shell.c **** 
1571:SYS/shell/shell.c **** /**
1572:SYS/shell/shell.c ****  * @brief shell 输入处理
1573:SYS/shell/shell.c ****  * 
1574:SYS/shell/shell.c ****  * @param shell shell对象
1575:SYS/shell/shell.c ****  * @param data 输入数据
1576:SYS/shell/shell.c ****  */
1577:SYS/shell/shell.c **** void shellHandler(Shell *shell, char data)
1578:SYS/shell/shell.c **** {
1579:SYS/shell/shell.c ****     SHELL_ASSERT(data, return );
1580:SYS/shell/shell.c **** 
1581:SYS/shell/shell.c **** #if SHELL_LOCK_TIMEOUT > 0
1582:SYS/shell/shell.c ****     if (shell->info.user->data.user.password && strlen(shell->info.user->data.user.password) != 0 &
1583:SYS/shell/shell.c ****     {
1584:SYS/shell/shell.c ****         if (SHELL_GET_TICK() - shell->info.activeTime > SHELL_LOCK_TIMEOUT)
1585:SYS/shell/shell.c ****         {
1586:SYS/shell/shell.c ****             shell->status.isChecked = 0;
1587:SYS/shell/shell.c ****         }
1588:SYS/shell/shell.c ****     }
1589:SYS/shell/shell.c **** #endif
1590:SYS/shell/shell.c **** 
1591:SYS/shell/shell.c ****     /* 根据记录的按键键值计算当前字节在按键键值中的偏移 */
1592:SYS/shell/shell.c ****     char keyByteOffset = 24;
1593:SYS/shell/shell.c ****     int keyFilter = 0x00000000;
1594:SYS/shell/shell.c ****     if ((shell->parser.keyValue & 0x0000FF00) != 0x00000000)
1595:SYS/shell/shell.c ****     {
1596:SYS/shell/shell.c ****         keyByteOffset = 0;
1597:SYS/shell/shell.c ****         keyFilter = 0xFFFFFF00;
1598:SYS/shell/shell.c ****     }
ARM GAS  /tmp/ccYSNOoy.s 			page 48


1599:SYS/shell/shell.c ****     else if ((shell->parser.keyValue & 0x00FF0000) != 0x00000000)
1600:SYS/shell/shell.c ****     {
1601:SYS/shell/shell.c ****         keyByteOffset = 8;
1602:SYS/shell/shell.c ****         keyFilter = 0xFFFF0000;
1603:SYS/shell/shell.c ****     }
1604:SYS/shell/shell.c ****     else if ((shell->parser.keyValue & 0xFF000000) != 0x00000000)
1605:SYS/shell/shell.c ****     {
1606:SYS/shell/shell.c ****         keyByteOffset = 16;
1607:SYS/shell/shell.c ****         keyFilter = 0xFF000000;
1608:SYS/shell/shell.c ****     }
1609:SYS/shell/shell.c **** 
1610:SYS/shell/shell.c ****     /* 遍历ShellCommand列表，尝试进行按键键值匹配 */
1611:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
1612:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
1613:SYS/shell/shell.c ****     {
1614:SYS/shell/shell.c ****         /* 判断是否是按键定义并验证权限 */
1615:SYS/shell/shell.c ****         if (base[i].attr.attrs.type == SHELL_TYPE_KEY && shellCheckPermission(shell, &(base[i])) ==
1616:SYS/shell/shell.c ****         {
1617:SYS/shell/shell.c ****             /* 对输入的字节同按键键值进行匹配 */
1618:SYS/shell/shell.c ****             if ((base[i].data.key.value & keyFilter) == shell->parser.keyValue && (base[i].data.key
1619:SYS/shell/shell.c ****             {
1620:SYS/shell/shell.c ****                 shell->parser.keyValue |= data << keyByteOffset;
1621:SYS/shell/shell.c ****                 data = 0x00;
1622:SYS/shell/shell.c ****                 if (keyByteOffset == 0 || (base[i].data.key.value & (0xFF << (keyByteOffset - 8))) 
1623:SYS/shell/shell.c ****                 {
1624:SYS/shell/shell.c ****                     if (base[i].data.key.function)
1625:SYS/shell/shell.c ****                     {
1626:SYS/shell/shell.c ****                         base[i].data.key.function(shell);
1627:SYS/shell/shell.c ****                     }
1628:SYS/shell/shell.c ****                     shell->parser.keyValue = 0x00000000;
1629:SYS/shell/shell.c ****                     break;
1630:SYS/shell/shell.c ****                 }
1631:SYS/shell/shell.c ****             }
1632:SYS/shell/shell.c ****         }
1633:SYS/shell/shell.c ****     }
1634:SYS/shell/shell.c **** 
1635:SYS/shell/shell.c ****     if (data != 0x00)
1636:SYS/shell/shell.c ****     {
1637:SYS/shell/shell.c ****         shell->parser.keyValue = 0x00000000;
1638:SYS/shell/shell.c ****         shellNormalInput(shell, data);
1639:SYS/shell/shell.c ****     }
1640:SYS/shell/shell.c **** 
1641:SYS/shell/shell.c ****     if (SHELL_GET_TICK())
1642:SYS/shell/shell.c ****     {
1643:SYS/shell/shell.c ****         shell->info.activeTime = SHELL_GET_TICK();
1644:SYS/shell/shell.c ****     }
1645:SYS/shell/shell.c **** }
1646:SYS/shell/shell.c **** 
1647:SYS/shell/shell.c **** #if SHELL_SUPPORT_END_LINE == 1
1648:SYS/shell/shell.c **** void shellWriteEndLine(Shell *shell, char *buffer, int len)
1649:SYS/shell/shell.c **** {
1650:SYS/shell/shell.c ****     if (!shell->status.isActive)
1651:SYS/shell/shell.c ****     {
1652:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_LINE]);
1653:SYS/shell/shell.c ****     }
1654:SYS/shell/shell.c ****     while (len--)
1655:SYS/shell/shell.c ****     {
ARM GAS  /tmp/ccYSNOoy.s 			page 49


1656:SYS/shell/shell.c ****         shell->write(*buffer++);
1657:SYS/shell/shell.c ****     }
1658:SYS/shell/shell.c ****     if (!shell->status.isActive)
1659:SYS/shell/shell.c ****     {
1660:SYS/shell/shell.c ****         shellWriteCommandLine(shell, 0);
1661:SYS/shell/shell.c ****         if (shell->parser.length > 0)
1662:SYS/shell/shell.c ****         {
1663:SYS/shell/shell.c ****             shellWriteString(shell, shell->parser.buffer);
1664:SYS/shell/shell.c ****             for (short i = 0; i < shell->parser.length - shell->parser.cursor; i++)
1665:SYS/shell/shell.c ****             {
1666:SYS/shell/shell.c ****                 shell->write('\b');
1667:SYS/shell/shell.c ****             }
1668:SYS/shell/shell.c ****         }
1669:SYS/shell/shell.c ****     }
1670:SYS/shell/shell.c **** }
1671:SYS/shell/shell.c **** #endif /** SHELL_SUPPORT_END_LINE == 1 */
1672:SYS/shell/shell.c **** 
1673:SYS/shell/shell.c **** /**
1674:SYS/shell/shell.c ****  * @brief shell 任务
1675:SYS/shell/shell.c ****  * 
1676:SYS/shell/shell.c ****  * @param param 参数(shell对象)
1677:SYS/shell/shell.c ****  * 
1678:SYS/shell/shell.c ****  */
1679:SYS/shell/shell.c **** void shellTask(void *param)
1680:SYS/shell/shell.c **** {
1681:SYS/shell/shell.c ****     Shell *shell = (Shell *)param;
1682:SYS/shell/shell.c ****     char data;
1683:SYS/shell/shell.c **** #if SHELL_TASK_WHILE == 1
1684:SYS/shell/shell.c ****     while (1)
1685:SYS/shell/shell.c ****     {
1686:SYS/shell/shell.c **** #endif
1687:SYS/shell/shell.c ****         if (shell->read && shell->read(&data) == 0)
1688:SYS/shell/shell.c ****         {
1689:SYS/shell/shell.c ****             shellHandler(shell, data);
1690:SYS/shell/shell.c ****         }
1691:SYS/shell/shell.c **** #if SHELL_TASK_WHILE == 1
1692:SYS/shell/shell.c ****     }
1693:SYS/shell/shell.c **** #endif
1694:SYS/shell/shell.c **** }
1695:SYS/shell/shell.c **** 
1696:SYS/shell/shell.c **** /**
1697:SYS/shell/shell.c ****  * @brief shell 输出用户列表(shell调用)
1698:SYS/shell/shell.c ****  */
1699:SYS/shell/shell.c **** void shellUsers(void)
1700:SYS/shell/shell.c **** {
1701:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
1702:SYS/shell/shell.c ****     if (shell)
1703:SYS/shell/shell.c ****     {
1704:SYS/shell/shell.c ****         shellListUser(shell);
1705:SYS/shell/shell.c ****     }
1706:SYS/shell/shell.c **** }
1707:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1708:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_RETURN,
1709:SYS/shell/shell.c ****     users, shellUsers, list all user);
1710:SYS/shell/shell.c **** 
1711:SYS/shell/shell.c **** /**
1712:SYS/shell/shell.c ****  * @brief shell 输出命令列表(shell调用)
ARM GAS  /tmp/ccYSNOoy.s 			page 50


1713:SYS/shell/shell.c ****  */
1714:SYS/shell/shell.c **** void shellCmds(void)
1715:SYS/shell/shell.c **** {
1716:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
1717:SYS/shell/shell.c ****     if (shell)
1718:SYS/shell/shell.c ****     {
1719:SYS/shell/shell.c ****         shellListCommand(shell);
1720:SYS/shell/shell.c ****     }
1721:SYS/shell/shell.c **** }
1722:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1723:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_RETURN,
1724:SYS/shell/shell.c ****     cmds, shellCmds, list all cmd);
1725:SYS/shell/shell.c **** 
1726:SYS/shell/shell.c **** /**
1727:SYS/shell/shell.c ****  * @brief shell 输出变量列表(shell调用)
1728:SYS/shell/shell.c ****  */
1729:SYS/shell/shell.c **** void shellVars(void)
1730:SYS/shell/shell.c **** {
1731:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
1732:SYS/shell/shell.c ****     if (shell)
1733:SYS/shell/shell.c ****     {
1734:SYS/shell/shell.c ****         shellListVar(shell);
1735:SYS/shell/shell.c ****     }
1736:SYS/shell/shell.c **** }
1737:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1738:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_RETURN,
1739:SYS/shell/shell.c ****     vars, shellVars, list all var);
1740:SYS/shell/shell.c **** 
1741:SYS/shell/shell.c **** /**
1742:SYS/shell/shell.c ****  * @brief shell 输出按键列表(shell调用)
1743:SYS/shell/shell.c ****  */
1744:SYS/shell/shell.c **** void shellKeys(void)
1745:SYS/shell/shell.c **** {
1746:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
1747:SYS/shell/shell.c ****     if (shell)
1748:SYS/shell/shell.c ****     {
1749:SYS/shell/shell.c ****         shellListKey(shell);
1750:SYS/shell/shell.c ****     }
1751:SYS/shell/shell.c **** }
1752:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1753:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_RETURN,
1754:SYS/shell/shell.c ****     keys, shellKeys, list all key);
1755:SYS/shell/shell.c **** 
1756:SYS/shell/shell.c **** /**
1757:SYS/shell/shell.c ****  * @brief shell 清空控制台(shell调用)
1758:SYS/shell/shell.c ****  */
1759:SYS/shell/shell.c **** void shellClear(void)
1760:SYS/shell/shell.c **** {
 1031              		.loc 1 1760 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035 0000 08B5     		push	{r3, lr}
 1036              	.LCFI17:
 1037              		.cfi_def_cfa_offset 8
 1038              		.cfi_offset 3, -8
 1039              		.cfi_offset 14, -4
ARM GAS  /tmp/ccYSNOoy.s 			page 51


1761:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 1040              		.loc 1 1761 0
 1041 0002 FFF7FEFF 		bl	shellGetCurrent
 1042              	.LVL111:
1762:SYS/shell/shell.c ****     if (shell)
 1043              		.loc 1 1762 0
 1044 0006 10B1     		cbz	r0, .L116
1763:SYS/shell/shell.c ****     {
1764:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_CONSOLE]);
 1045              		.loc 1 1764 0
 1046 0008 0149     		ldr	r1, .L119
 1047 000a FFF7FEFF 		bl	shellWriteString
 1048              	.LVL112:
 1049              	.L116:
 1050 000e 08BD     		pop	{r3, pc}
 1051              	.L120:
 1052              		.align	2
 1053              	.L119:
 1054 0010 00000000 		.word	.LC0
 1055              		.cfi_endproc
 1056              	.LFE180:
 1058              		.section	.text.shellPrint,"ax",%progbits
 1059              		.align	1
 1060              		.global	shellPrint
 1061              		.syntax unified
 1062              		.thumb
 1063              		.thumb_func
 1064              		.fpu fpv4-sp-d16
 1066              	shellPrint:
 1067              	.LFB131:
 334:SYS/shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 1068              		.loc 1 334 0
 1069              		.cfi_startproc
 1070              		@ args = 4, pretend = 12, frame = 136
 1071              		@ frame_needed = 0, uses_anonymous_args = 1
 1072              	.LVL113:
 338:SYS/shell/shell.c **** 
 1073              		.loc 1 338 0
 1074 0000 90B1     		cbz	r0, .L128
 334:SYS/shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 1075              		.loc 1 334 0
 1076 0002 0EB4     		push	{r1, r2, r3}
 1077              	.LCFI18:
 1078              		.cfi_def_cfa_offset 12
 1079              		.cfi_offset 1, -12
 1080              		.cfi_offset 2, -8
 1081              		.cfi_offset 3, -4
 1082 0004 10B5     		push	{r4, lr}
 1083              	.LCFI19:
 1084              		.cfi_def_cfa_offset 20
 1085              		.cfi_offset 4, -20
 1086              		.cfi_offset 14, -16
 1087 0006 A3B0     		sub	sp, sp, #140
 1088              	.LCFI20:
 1089              		.cfi_def_cfa_offset 160
 1090 0008 0446     		mov	r4, r0
 340:SYS/shell/shell.c ****     vsnprintf(buffer, SHELL_PRINT_BUFFER - 1, fmt, vargs);
ARM GAS  /tmp/ccYSNOoy.s 			page 52


 1091              		.loc 1 340 0
 1092 000a 26AB     		add	r3, sp, #152
 1093 000c 0193     		str	r3, [sp, #4]
 341:SYS/shell/shell.c ****     va_end(vargs);
 1094              		.loc 1 341 0
 1095 000e 259A     		ldr	r2, [sp, #148]
 1096 0010 7F21     		movs	r1, #127
 1097 0012 02A8     		add	r0, sp, #8
 1098              	.LVL114:
 1099 0014 FFF7FEFF 		bl	vsnprintf
 1100              	.LVL115:
 344:SYS/shell/shell.c **** }
 1101              		.loc 1 344 0
 1102 0018 02A9     		add	r1, sp, #8
 1103 001a 2046     		mov	r0, r4
 1104 001c FFF7FEFF 		bl	shellWriteString
 1105              	.LVL116:
 345:SYS/shell/shell.c **** #endif
 1106              		.loc 1 345 0
 1107 0020 23B0     		add	sp, sp, #140
 1108              	.LCFI21:
 1109              		.cfi_def_cfa_offset 20
 1110              		@ sp needed
 1111 0022 BDE81040 		pop	{r4, lr}
 1112              	.LCFI22:
 1113              		.cfi_restore 14
 1114              		.cfi_restore 4
 1115              		.cfi_def_cfa_offset 12
 1116              	.LVL117:
 1117 0026 03B0     		add	sp, sp, #12
 1118              	.LCFI23:
 1119              		.cfi_restore 3
 1120              		.cfi_restore 2
 1121              		.cfi_restore 1
 1122              		.cfi_def_cfa_offset 0
 1123              	.L128:
 1124 0028 7047     		bx	lr
 1125              		.cfi_endproc
 1126              	.LFE131:
 1128              		.section	.text.shellScan,"ax",%progbits
 1129              		.align	1
 1130              		.global	shellScan
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1134              		.fpu fpv4-sp-d16
 1136              	shellScan:
 1137              	.LFB132:
 357:SYS/shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 1138              		.loc 1 357 0
 1139              		.cfi_startproc
 1140              		@ args = 4, pretend = 12, frame = 8
 1141              		@ frame_needed = 0, uses_anonymous_args = 1
 1142              	.LVL118:
 362:SYS/shell/shell.c **** 
 1143              		.loc 1 362 0
 1144 0000 0028     		cmp	r0, #0
ARM GAS  /tmp/ccYSNOoy.s 			page 53


 1145 0002 34D0     		beq	.L140
 357:SYS/shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 1146              		.loc 1 357 0
 1147 0004 0EB4     		push	{r1, r2, r3}
 1148              	.LCFI24:
 1149              		.cfi_def_cfa_offset 12
 1150              		.cfi_offset 1, -12
 1151              		.cfi_offset 2, -8
 1152              		.cfi_offset 3, -4
 1153 0006 70B5     		push	{r4, r5, r6, lr}
 1154              	.LCFI25:
 1155              		.cfi_def_cfa_offset 28
 1156              		.cfi_offset 4, -28
 1157              		.cfi_offset 5, -24
 1158              		.cfi_offset 6, -20
 1159              		.cfi_offset 14, -16
 1160 0008 83B0     		sub	sp, sp, #12
 1161              	.LCFI26:
 1162              		.cfi_def_cfa_offset 40
 1163 000a 0646     		mov	r6, r0
 364:SYS/shell/shell.c ****     {
 1164              		.loc 1 364 0
 1165 000c 436E     		ldr	r3, [r0, #100]
 1166 000e 23B3     		cbz	r3, .L131
 1167 0010 0024     		movs	r4, #0
 1168 0012 0BE0     		b	.L134
 1169              	.LVL119:
 1170              	.L132:
 373:SYS/shell/shell.c ****         shellWriteString(shell, "\r\n");
 1171              		.loc 1 373 0
 1172 0014 2546     		mov	r5, r4
 1173 0016 631E     		subs	r3, r4, #1
 1174 0018 02AA     		add	r2, sp, #8
 1175 001a 1344     		add	r3, r3, r2
 1176 001c 13F8043C 		ldrb	r3, [r3, #-4]	@ zero_extendqisi2
 1177 0020 0D2B     		cmp	r3, #13
 1178 0022 11D0     		beq	.L133
 373:SYS/shell/shell.c ****         shellWriteString(shell, "\r\n");
 1179              		.loc 1 373 0 is_stmt 0 discriminator 1
 1180 0024 0A2B     		cmp	r3, #10
 1181 0026 0FD0     		beq	.L133
 373:SYS/shell/shell.c ****         shellWriteString(shell, "\r\n");
 1182              		.loc 1 373 0 discriminator 2
 1183 0028 002C     		cmp	r4, #0
 1184 002a 0DDC     		bgt	.L133
 1185              	.LVL120:
 1186              	.L134:
 368:SYS/shell/shell.c ****             {
 1187              		.loc 1 368 0 is_stmt 1
 1188 002c 736E     		ldr	r3, [r6, #100]
 1189 002e 01AA     		add	r2, sp, #4
 1190 0030 1519     		adds	r5, r2, r4
 1191 0032 2846     		mov	r0, r5
 1192 0034 9847     		blx	r3
 1193              	.LVL121:
 1194 0036 0028     		cmp	r0, #0
 1195 0038 ECD1     		bne	.L132
ARM GAS  /tmp/ccYSNOoy.s 			page 54


 370:SYS/shell/shell.c ****                 index++;
 1196              		.loc 1 370 0
 1197 003a B36E     		ldr	r3, [r6, #104]
 1198 003c 0121     		movs	r1, #1
 1199 003e 2846     		mov	r0, r5
 1200 0040 9847     		blx	r3
 1201              	.LVL122:
 371:SYS/shell/shell.c ****             }
 1202              		.loc 1 371 0
 1203 0042 0134     		adds	r4, r4, #1
 1204              	.LVL123:
 1205 0044 24B2     		sxth	r4, r4
 1206              	.LVL124:
 1207 0046 E5E7     		b	.L132
 1208              	.L133:
 374:SYS/shell/shell.c ****         buffer[index] = '\0';
 1209              		.loc 1 374 0
 1210 0048 0949     		ldr	r1, .L141
 1211 004a 3046     		mov	r0, r6
 1212 004c FFF7FEFF 		bl	shellWriteString
 1213              	.LVL125:
 375:SYS/shell/shell.c ****     }
 1214              		.loc 1 375 0
 1215 0050 02AB     		add	r3, sp, #8
 1216 0052 1D44     		add	r5, r5, r3
 1217 0054 0023     		movs	r3, #0
 1218 0056 05F8043C 		strb	r3, [r5, #-4]
 1219              	.LVL126:
 1220              	.L131:
 378:SYS/shell/shell.c ****     vsscanf(buffer, fmt, vargs);
 1221              		.loc 1 378 0
 1222 005a 08AA     		add	r2, sp, #32
 1223 005c 0092     		str	r2, [sp]
 379:SYS/shell/shell.c ****     va_end(vargs);
 1224              		.loc 1 379 0
 1225 005e 0799     		ldr	r1, [sp, #28]
 1226 0060 01A8     		add	r0, sp, #4
 1227 0062 FFF7FEFF 		bl	vsscanf
 1228              	.LVL127:
 381:SYS/shell/shell.c **** #endif
 1229              		.loc 1 381 0
 1230 0066 03B0     		add	sp, sp, #12
 1231              	.LCFI27:
 1232              		.cfi_def_cfa_offset 28
 1233              		@ sp needed
 1234 0068 BDE87040 		pop	{r4, r5, r6, lr}
 1235              	.LCFI28:
 1236              		.cfi_restore 14
 1237              		.cfi_restore 6
 1238              		.cfi_restore 5
 1239              		.cfi_restore 4
 1240              		.cfi_def_cfa_offset 12
 1241              	.LVL128:
 1242 006c 03B0     		add	sp, sp, #12
 1243              	.LCFI29:
 1244              		.cfi_restore 3
 1245              		.cfi_restore 2
ARM GAS  /tmp/ccYSNOoy.s 			page 55


 1246              		.cfi_restore 1
 1247              		.cfi_def_cfa_offset 0
 1248              	.L140:
 1249 006e 7047     		bx	lr
 1250              	.L142:
 1251              		.align	2
 1252              	.L141:
 1253 0070 04000000 		.word	.LC3
 1254              		.cfi_endproc
 1255              	.LFE132:
 1257              		.section	.text.shellCheckPermission,"ax",%progbits
 1258              		.align	1
 1259              		.global	shellCheckPermission
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1263              		.fpu fpv4-sp-d16
 1265              	shellCheckPermission:
 1266              	.LFB133:
 394:SYS/shell/shell.c ****     return ((!command->attr.attrs.permission || command->attr.attrs.type == SHELL_TYPE_USER || (com
 1267              		.loc 1 394 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              		@ link register save eliminated.
 1272              	.LVL129:
 395:SYS/shell/shell.c ****                ? 0
 1273              		.loc 1 395 0
 1274 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 397:SYS/shell/shell.c **** }
 1275              		.loc 1 397 0
 1276 0002 43B1     		cbz	r3, .L144
 395:SYS/shell/shell.c ****                ? 0
 1277              		.loc 1 395 0
 1278 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1279 0006 02F00F02 		and	r2, r2, #15
 1280 000a 082A     		cmp	r2, #8
 1281 000c 03D0     		beq	.L144
 395:SYS/shell/shell.c ****                ? 0
 1282              		.loc 1 395 0 is_stmt 0 discriminator 2
 1283 000e 0268     		ldr	r2, [r0]
 1284 0010 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1285 0012 1342     		tst	r3, r2
 1286 0014 0DD0     		beq	.L146
 1287              	.L144:
 395:SYS/shell/shell.c ****                ? 0
 1288              		.loc 1 395 0 discriminator 3
 1289 0016 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 1290 001a 13F0010F 		tst	r3, #1
 1291 001e 0BD1     		bne	.L147
 395:SYS/shell/shell.c ****                ? 0
 1292              		.loc 1 395 0 discriminator 4
 1293 0020 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1294 0022 13F0100F 		tst	r3, #16
 1295 0026 01D0     		beq	.L149
 397:SYS/shell/shell.c **** }
 1296              		.loc 1 397 0 is_stmt 1
ARM GAS  /tmp/ccYSNOoy.s 			page 56


 1297 0028 0020     		movs	r0, #0
 1298              	.LVL130:
 398:SYS/shell/shell.c **** 
 1299              		.loc 1 398 0
 1300 002a 7047     		bx	lr
 1301              	.LVL131:
 1302              	.L149:
 397:SYS/shell/shell.c **** }
 1303              		.loc 1 397 0
 1304 002c 4FF0FF30 		mov	r0, #-1
 1305              	.LVL132:
 1306 0030 7047     		bx	lr
 1307              	.LVL133:
 1308              	.L146:
 1309 0032 4FF0FF30 		mov	r0, #-1
 1310              	.LVL134:
 1311 0036 7047     		bx	lr
 1312              	.LVL135:
 1313              	.L147:
 1314 0038 0020     		movs	r0, #0
 1315              	.LVL136:
 1316 003a 7047     		bx	lr
 1317              		.cfi_endproc
 1318              	.LFE133:
 1320              		.section	.text.shellToHex,"ax",%progbits
 1321              		.align	1
 1322              		.global	shellToHex
 1323              		.syntax unified
 1324              		.thumb
 1325              		.thumb_func
 1326              		.fpu fpv4-sp-d16
 1328              	shellToHex:
 1329              	.LFB134:
 409:SYS/shell/shell.c ****     char byte;
 1330              		.loc 1 409 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 1335              	.LVL137:
 412:SYS/shell/shell.c ****     while (value)
 1336              		.loc 1 412 0
 1337 0000 0023     		movs	r3, #0
 1338 0002 0B72     		strb	r3, [r1, #8]
 411:SYS/shell/shell.c ****     buffer[8] = 0;
 1339              		.loc 1 411 0
 1340 0004 0823     		movs	r3, #8
 1341              	.LVL138:
 413:SYS/shell/shell.c ****     {
 1342              		.loc 1 413 0
 1343 0006 A0B1     		cbz	r0, .L159
 409:SYS/shell/shell.c ****     char byte;
 1344              		.loc 1 409 0
 1345 0008 10B4     		push	{r4}
 1346              	.LCFI30:
 1347              		.cfi_def_cfa_offset 4
 1348              		.cfi_offset 4, -4
ARM GAS  /tmp/ccYSNOoy.s 			page 57


 1349 000a 03E0     		b	.L154
 1350              	.LVL139:
 1351              	.L152:
 416:SYS/shell/shell.c ****         value >>= 4;
 1352              		.loc 1 416 0 discriminator 2
 1353 000c 3032     		adds	r2, r2, #48
 1354              	.LVL140:
 1355              	.L153:
 416:SYS/shell/shell.c ****         value >>= 4;
 1356              		.loc 1 416 0 is_stmt 0 discriminator 4
 1357 000e 2270     		strb	r2, [r4]
 417:SYS/shell/shell.c ****     }
 1358              		.loc 1 417 0 is_stmt 1 discriminator 4
 1359 0010 0009     		lsrs	r0, r0, #4
 1360              	.LVL141:
 413:SYS/shell/shell.c ****     {
 1361              		.loc 1 413 0 discriminator 4
 1362 0012 40B1     		cbz	r0, .L160
 1363              	.L154:
 415:SYS/shell/shell.c ****         buffer[--i] = (byte > 9) ? (byte + 87) : (byte + 48);
 1364              		.loc 1 415 0
 1365 0014 00F00F02 		and	r2, r0, #15
 1366              	.LVL142:
 416:SYS/shell/shell.c ****         value >>= 4;
 1367              		.loc 1 416 0
 1368 0018 013B     		subs	r3, r3, #1
 1369              	.LVL143:
 1370 001a DBB2     		uxtb	r3, r3
 1371              	.LVL144:
 1372 001c CC18     		adds	r4, r1, r3
 1373 001e 092A     		cmp	r2, #9
 1374 0020 F4D9     		bls	.L152
 416:SYS/shell/shell.c ****         value >>= 4;
 1375              		.loc 1 416 0 is_stmt 0 discriminator 1
 1376 0022 5732     		adds	r2, r2, #87
 1377              	.LVL145:
 1378 0024 F3E7     		b	.L153
 1379              	.LVL146:
 1380              	.L160:
 419:SYS/shell/shell.c **** }
 1381              		.loc 1 419 0 is_stmt 1
 1382 0026 C3F10800 		rsb	r0, r3, #8
 1383              	.LVL147:
 420:SYS/shell/shell.c **** 
 1384              		.loc 1 420 0
 1385 002a 40B2     		sxtb	r0, r0
 1386 002c 5DF8044B 		ldr	r4, [sp], #4
 1387              	.LCFI31:
 1388              		.cfi_restore 4
 1389              		.cfi_def_cfa_offset 0
 1390 0030 7047     		bx	lr
 1391              	.LVL148:
 1392              	.L159:
 419:SYS/shell/shell.c **** }
 1393              		.loc 1 419 0
 1394 0032 C3F10800 		rsb	r0, r3, #8
 1395              	.LVL149:
ARM GAS  /tmp/ccYSNOoy.s 			page 58


 420:SYS/shell/shell.c **** 
 1396              		.loc 1 420 0
 1397 0036 40B2     		sxtb	r0, r0
 1398 0038 7047     		bx	lr
 1399              		.cfi_endproc
 1400              	.LFE134:
 1402              		.section	.text.shellGetCommandName,"ax",%progbits
 1403              		.align	1
 1404              		.syntax unified
 1405              		.thumb
 1406              		.thumb_func
 1407              		.fpu fpv4-sp-d16
 1409              	shellGetCommandName:
 1410              	.LFB138:
 505:SYS/shell/shell.c ****     static char buffer[9];
 1411              		.loc 1 505 0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 0
 1414              		@ frame_needed = 0, uses_anonymous_args = 0
 1415              	.LVL150:
 1416              	.LBB8:
 507:SYS/shell/shell.c ****     {
 1417              		.loc 1 507 0
 1418 0000 0023     		movs	r3, #0
 1419 0002 04E0     		b	.L162
 1420              	.LVL151:
 1421              	.L163:
 509:SYS/shell/shell.c ****     }
 1422              		.loc 1 509 0 discriminator 3
 1423 0004 3021     		movs	r1, #48
 1424 0006 0E4A     		ldr	r2, .L173
 1425 0008 D154     		strb	r1, [r2, r3]
 507:SYS/shell/shell.c ****     {
 1426              		.loc 1 507 0 discriminator 3
 1427 000a 0133     		adds	r3, r3, #1
 1428              	.LVL152:
 1429 000c DBB2     		uxtb	r3, r3
 1430              	.LVL153:
 1431              	.L162:
 507:SYS/shell/shell.c ****     {
 1432              		.loc 1 507 0 is_stmt 0 discriminator 1
 1433 000e 082B     		cmp	r3, #8
 1434 0010 F8D9     		bls	.L163
 1435              	.LBE8:
 511:SYS/shell/shell.c ****     {
 1436              		.loc 1 511 0 is_stmt 1
 1437 0012 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1438              	.LVL154:
 1439 0014 03F00F03 		and	r3, r3, #15
 1440 0018 012B     		cmp	r3, #1
 1441 001a 05DD     		ble	.L171
 515:SYS/shell/shell.c ****     {
 1442              		.loc 1 515 0
 1443 001c 072B     		cmp	r3, #7
 1444 001e 05DD     		ble	.L172
 519:SYS/shell/shell.c ****     {
 1445              		.loc 1 519 0
ARM GAS  /tmp/ccYSNOoy.s 			page 59


 1446 0020 082B     		cmp	r3, #8
 1447 0022 05DC     		bgt	.L167
 521:SYS/shell/shell.c ****     }
 1448              		.loc 1 521 0
 1449 0024 4068     		ldr	r0, [r0, #4]
 1450              	.LVL155:
 1451 0026 7047     		bx	lr
 1452              	.LVL156:
 1453              	.L171:
 513:SYS/shell/shell.c ****     }
 1454              		.loc 1 513 0
 1455 0028 4068     		ldr	r0, [r0, #4]
 1456              	.LVL157:
 1457 002a 7047     		bx	lr
 1458              	.LVL158:
 1459              	.L172:
 517:SYS/shell/shell.c ****     }
 1460              		.loc 1 517 0
 1461 002c 4068     		ldr	r0, [r0, #4]
 1462              	.LVL159:
 1463 002e 7047     		bx	lr
 1464              	.LVL160:
 1465              	.L167:
 505:SYS/shell/shell.c ****     static char buffer[9];
 1466              		.loc 1 505 0
 1467 0030 10B5     		push	{r4, lr}
 1468              	.LCFI32:
 1469              		.cfi_def_cfa_offset 8
 1470              		.cfi_offset 4, -8
 1471              		.cfi_offset 14, -4
 525:SYS/shell/shell.c ****         return buffer;
 1472              		.loc 1 525 0
 1473 0032 034C     		ldr	r4, .L173
 1474 0034 2146     		mov	r1, r4
 1475 0036 4068     		ldr	r0, [r0, #4]
 1476              	.LVL161:
 1477 0038 FFF7FEFF 		bl	shellToHex
 1478              	.LVL162:
 526:SYS/shell/shell.c ****     }
 1479              		.loc 1 526 0
 1480 003c 2046     		mov	r0, r4
 528:SYS/shell/shell.c **** 
 1481              		.loc 1 528 0
 1482 003e 10BD     		pop	{r4, pc}
 1483              	.L174:
 1484              		.align	2
 1485              	.L173:
 1486 0040 00000000 		.word	.LANCHOR1
 1487              		.cfi_endproc
 1488              	.LFE138:
 1490              		.section	.text.shellToDec,"ax",%progbits
 1491              		.align	1
 1492              		.global	shellToDec
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1496              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccYSNOoy.s 			page 60


 1498              	shellToDec:
 1499              	.LFB135:
 431:SYS/shell/shell.c ****     unsigned char i = 11;
 1500              		.loc 1 431 0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 1504              		@ link register save eliminated.
 1505              	.LVL163:
 1506 0000 70B4     		push	{r4, r5, r6}
 1507              	.LCFI33:
 1508              		.cfi_def_cfa_offset 12
 1509              		.cfi_offset 4, -12
 1510              		.cfi_offset 5, -8
 1511              		.cfi_offset 6, -4
 1512              	.LVL164:
 434:SYS/shell/shell.c ****     {
 1513              		.loc 1 434 0
 1514 0002 0028     		cmp	r0, #0
 1515 0004 04DB     		blt	.L183
 433:SYS/shell/shell.c ****     if (value < 0)
 1516              		.loc 1 433 0
 1517 0006 0446     		mov	r4, r0
 1518              	.LVL165:
 1519              	.L176:
 438:SYS/shell/shell.c ****     while (v)
 1520              		.loc 1 438 0
 1521 0008 0023     		movs	r3, #0
 1522 000a CB72     		strb	r3, [r1, #11]
 432:SYS/shell/shell.c ****     int v = value;
 1523              		.loc 1 432 0
 1524 000c 0B22     		movs	r2, #11
 439:SYS/shell/shell.c ****     {
 1525              		.loc 1 439 0
 1526 000e 11E0     		b	.L177
 1527              	.LVL166:
 1528              	.L183:
 436:SYS/shell/shell.c ****     }
 1529              		.loc 1 436 0
 1530 0010 4442     		negs	r4, r0
 1531              	.LVL167:
 1532 0012 F9E7     		b	.L176
 1533              	.LVL168:
 1534              	.L178:
 441:SYS/shell/shell.c ****         v /= 10;
 1535              		.loc 1 441 0
 1536 0014 013A     		subs	r2, r2, #1
 1537              	.LVL169:
 1538 0016 D2B2     		uxtb	r2, r2
 1539              	.LVL170:
 1540 0018 104D     		ldr	r5, .L185
 1541 001a 85FB0435 		smull	r3, r5, r5, r4
 1542 001e E317     		asrs	r3, r4, #31
 1543 0020 C3EBA503 		rsb	r3, r3, r5, asr #2
 1544 0024 1E46     		mov	r6, r3
 1545 0026 03EB8303 		add	r3, r3, r3, lsl #2
 1546 002a 5D00     		lsls	r5, r3, #1
ARM GAS  /tmp/ccYSNOoy.s 			page 61


 1547 002c 631B     		subs	r3, r4, r5
 1548 002e 3033     		adds	r3, r3, #48
 1549 0030 8B54     		strb	r3, [r1, r2]
 442:SYS/shell/shell.c ****     }
 1550              		.loc 1 442 0
 1551 0032 3446     		mov	r4, r6
 1552              	.LVL171:
 1553              	.L177:
 439:SYS/shell/shell.c ****     {
 1554              		.loc 1 439 0
 1555 0034 002C     		cmp	r4, #0
 1556 0036 EDD1     		bne	.L178
 444:SYS/shell/shell.c ****     {
 1557              		.loc 1 444 0
 1558 0038 0028     		cmp	r0, #0
 1559 003a 09DB     		blt	.L184
 1560              	.L179:
 448:SYS/shell/shell.c ****     {
 1561              		.loc 1 448 0
 1562 003c 18B9     		cbnz	r0, .L180
 450:SYS/shell/shell.c ****     }
 1563              		.loc 1 450 0
 1564 003e 013A     		subs	r2, r2, #1
 1565              	.LVL172:
 1566 0040 D2B2     		uxtb	r2, r2
 1567              	.LVL173:
 1568 0042 3023     		movs	r3, #48
 1569 0044 8B54     		strb	r3, [r1, r2]
 1570              	.L180:
 452:SYS/shell/shell.c **** }
 1571              		.loc 1 452 0
 1572 0046 C2F10B00 		rsb	r0, r2, #11
 1573              	.LVL174:
 453:SYS/shell/shell.c **** 
 1574              		.loc 1 453 0
 1575 004a 40B2     		sxtb	r0, r0
 1576 004c 70BC     		pop	{r4, r5, r6}
 1577              	.LCFI34:
 1578              		.cfi_remember_state
 1579              		.cfi_restore 6
 1580              		.cfi_restore 5
 1581              		.cfi_restore 4
 1582              		.cfi_def_cfa_offset 0
 1583              	.LVL175:
 1584 004e 7047     		bx	lr
 1585              	.LVL176:
 1586              	.L184:
 1587              	.LCFI35:
 1588              		.cfi_restore_state
 446:SYS/shell/shell.c ****     }
 1589              		.loc 1 446 0
 1590 0050 013A     		subs	r2, r2, #1
 1591              	.LVL177:
 1592 0052 D2B2     		uxtb	r2, r2
 1593              	.LVL178:
 1594 0054 2D23     		movs	r3, #45
 1595 0056 8B54     		strb	r3, [r1, r2]
ARM GAS  /tmp/ccYSNOoy.s 			page 62


 1596 0058 F0E7     		b	.L179
 1597              	.L186:
 1598 005a 00BF     		.align	2
 1599              	.L185:
 1600 005c 67666666 		.word	1717986919
 1601              		.cfi_endproc
 1602              	.LFE135:
 1604              		.section	.text.shellWriteReturnValue,"ax",%progbits
 1605              		.align	1
 1606              		.syntax unified
 1607              		.thumb
 1608              		.thumb_func
 1609              		.fpu fpv4-sp-d16
 1611              	shellWriteReturnValue:
 1612              	.LFB160:
1195:SYS/shell/shell.c ****     char buffer[12] = "00000000000";
 1613              		.loc 1 1195 0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 16
 1616              		@ frame_needed = 0, uses_anonymous_args = 0
 1617              	.LVL179:
 1618 0000 70B5     		push	{r4, r5, r6, lr}
 1619              	.LCFI36:
 1620              		.cfi_def_cfa_offset 16
 1621              		.cfi_offset 4, -16
 1622              		.cfi_offset 5, -12
 1623              		.cfi_offset 6, -8
 1624              		.cfi_offset 14, -4
 1625 0002 84B0     		sub	sp, sp, #16
 1626              	.LCFI37:
 1627              		.cfi_def_cfa_offset 32
 1628 0004 0446     		mov	r4, r0
 1629 0006 0E46     		mov	r6, r1
1196:SYS/shell/shell.c ****     shellWriteString(shell, "Return: ");
 1630              		.loc 1 1196 0
 1631 0008 184B     		ldr	r3, .L191
 1632 000a 01AD     		add	r5, sp, #4
 1633 000c 93E80700 		ldm	r3, {r0, r1, r2}
 1634              	.LVL180:
 1635 0010 85E80700 		stm	r5, {r0, r1, r2}
1197:SYS/shell/shell.c ****     shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
 1636              		.loc 1 1197 0
 1637 0014 1649     		ldr	r1, .L191+4
 1638 0016 2046     		mov	r0, r4
 1639 0018 FFF7FEFF 		bl	shellWriteString
 1640              	.LVL181:
1198:SYS/shell/shell.c ****     shellWriteString(shell, ", 0x");
 1641              		.loc 1 1198 0
 1642 001c 2946     		mov	r1, r5
 1643 001e 3046     		mov	r0, r6
 1644 0020 FFF7FEFF 		bl	shellToDec
 1645              	.LVL182:
 1646 0024 C0F10B01 		rsb	r1, r0, #11
 1647 0028 2944     		add	r1, r1, r5
 1648 002a 2046     		mov	r0, r4
 1649 002c FFF7FEFF 		bl	shellWriteString
 1650              	.LVL183:
ARM GAS  /tmp/ccYSNOoy.s 			page 63


1199:SYS/shell/shell.c ****     for (short i = 0; i < 11; i++)
 1651              		.loc 1 1199 0
 1652 0030 1049     		ldr	r1, .L191+8
 1653 0032 2046     		mov	r0, r4
 1654 0034 FFF7FEFF 		bl	shellWriteString
 1655              	.LVL184:
 1656              	.LBB9:
1200:SYS/shell/shell.c ****     {
 1657              		.loc 1 1200 0
 1658 0038 0023     		movs	r3, #0
 1659 003a 06E0     		b	.L188
 1660              	.LVL185:
 1661              	.L189:
1202:SYS/shell/shell.c ****     }
 1662              		.loc 1 1202 0 discriminator 3
 1663 003c 04AA     		add	r2, sp, #16
 1664 003e 1A44     		add	r2, r2, r3
 1665 0040 3021     		movs	r1, #48
 1666 0042 02F80C1C 		strb	r1, [r2, #-12]
1200:SYS/shell/shell.c ****     {
 1667              		.loc 1 1200 0 discriminator 3
 1668 0046 0133     		adds	r3, r3, #1
 1669              	.LVL186:
 1670 0048 1BB2     		sxth	r3, r3
 1671              	.LVL187:
 1672              	.L188:
1200:SYS/shell/shell.c ****     {
 1673              		.loc 1 1200 0 is_stmt 0 discriminator 1
 1674 004a 0A2B     		cmp	r3, #10
 1675 004c F6DD     		ble	.L189
 1676              	.LBE9:
1204:SYS/shell/shell.c ****     shellWriteString(shell, buffer);
 1677              		.loc 1 1204 0 is_stmt 1
 1678 004e 01A9     		add	r1, sp, #4
 1679 0050 3046     		mov	r0, r6
 1680 0052 FFF7FEFF 		bl	shellToHex
 1681              	.LVL188:
1205:SYS/shell/shell.c ****     shellWriteString(shell, "\r\n");
 1682              		.loc 1 1205 0
 1683 0056 01A9     		add	r1, sp, #4
 1684 0058 2046     		mov	r0, r4
 1685 005a FFF7FEFF 		bl	shellWriteString
 1686              	.LVL189:
1206:SYS/shell/shell.c **** }
 1687              		.loc 1 1206 0
 1688 005e 0649     		ldr	r1, .L191+12
 1689 0060 2046     		mov	r0, r4
 1690 0062 FFF7FEFF 		bl	shellWriteString
 1691              	.LVL190:
1207:SYS/shell/shell.c **** 
 1692              		.loc 1 1207 0
 1693 0066 04B0     		add	sp, sp, #16
 1694              	.LCFI38:
 1695              		.cfi_def_cfa_offset 16
 1696              		@ sp needed
 1697 0068 70BD     		pop	{r4, r5, r6, pc}
 1698              	.LVL191:
ARM GAS  /tmp/ccYSNOoy.s 			page 64


 1699              	.L192:
 1700 006a 00BF     		.align	2
 1701              	.L191:
 1702 006c 14000000 		.word	.LC8
 1703 0070 00000000 		.word	.LC9
 1704 0074 0C000000 		.word	.LC10
 1705 0078 04000000 		.word	.LC3
 1706              		.cfi_endproc
 1707              	.LFE160:
 1709              		.section	.text.shellListItem,"ax",%progbits
 1710              		.align	1
 1711              		.global	shellListItem
 1712              		.syntax unified
 1713              		.thumb
 1714              		.thumb_func
 1715              		.fpu fpv4-sp-d16
 1717              	shellListItem:
 1718              	.LFB140:
 563:SYS/shell/shell.c ****     short spaceLength;
 1719              		.loc 1 563 0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 0
 1722              		@ frame_needed = 0, uses_anonymous_args = 0
 1723              	.LVL192:
 1724 0000 70B5     		push	{r4, r5, r6, lr}
 1725              	.LCFI39:
 1726              		.cfi_def_cfa_offset 16
 1727              		.cfi_offset 4, -16
 1728              		.cfi_offset 5, -12
 1729              		.cfi_offset 6, -8
 1730              		.cfi_offset 14, -4
 1731 0002 0546     		mov	r5, r0
 1732 0004 0E46     		mov	r6, r1
 566:SYS/shell/shell.c ****     spaceLength = (spaceLength > 0) ? spaceLength : 4;
 1733              		.loc 1 566 0
 1734 0006 0846     		mov	r0, r1
 1735              	.LVL193:
 1736 0008 FFF7FEFF 		bl	shellGetCommandName
 1737              	.LVL194:
 1738 000c 0146     		mov	r1, r0
 1739 000e 2846     		mov	r0, r5
 1740 0010 FFF7FEFF 		bl	shellWriteString
 1741              	.LVL195:
 1742 0014 C0F11600 		rsb	r0, r0, #22
 1743 0018 04B2     		sxth	r4, r0
 1744              	.LVL196:
 567:SYS/shell/shell.c ****     do
 1745              		.loc 1 567 0
 1746 001a 002C     		cmp	r4, #0
 1747 001c 17DD     		ble	.L203
 1748              	.LVL197:
 1749              	.L195:
 570:SYS/shell/shell.c ****     } while (--spaceLength);
 1750              		.loc 1 570 0 discriminator 1
 1751 001e 2D21     		movs	r1, #45
 1752 0020 2846     		mov	r0, r5
 1753 0022 FFF7FEFF 		bl	shellWriteByte
ARM GAS  /tmp/ccYSNOoy.s 			page 65


 1754              	.LVL198:
 571:SYS/shell/shell.c ****     if (item->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 1755              		.loc 1 571 0 discriminator 1
 1756 0026 013C     		subs	r4, r4, #1
 1757              	.LVL199:
 1758 0028 24B2     		sxth	r4, r4
 1759              	.LVL200:
 1760 002a 002C     		cmp	r4, #0
 1761 002c F7D1     		bne	.L195
 572:SYS/shell/shell.c ****     {
 1762              		.loc 1 572 0
 1763 002e 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 1764 0030 03F00F03 		and	r3, r3, #15
 1765 0034 012B     		cmp	r3, #1
 1766 0036 0CDD     		ble	.L204
 576:SYS/shell/shell.c ****     {
 1767              		.loc 1 576 0
 1768 0038 072B     		cmp	r3, #7
 1769 003a 0FDD     		ble	.L205
 580:SYS/shell/shell.c ****     {
 1770              		.loc 1 580 0
 1771 003c 082B     		cmp	r3, #8
 1772 003e 12DD     		ble	.L206
 584:SYS/shell/shell.c ****     {
 1773              		.loc 1 584 0
 1774 0040 092B     		cmp	r3, #9
 1775 0042 15DD     		ble	.L207
 590:SYS/shell/shell.c ****     }
 1776              		.loc 1 590 0
 1777 0044 0D49     		ldr	r1, .L208
 1778 0046 2846     		mov	r0, r5
 1779 0048 FFF7FEFF 		bl	shellWriteString
 1780              	.LVL201:
 1781 004c 70BD     		pop	{r4, r5, r6, pc}
 1782              	.LVL202:
 1783              	.L203:
 567:SYS/shell/shell.c ****     do
 1784              		.loc 1 567 0
 1785 004e 0424     		movs	r4, #4
 1786              	.LVL203:
 1787 0050 E5E7     		b	.L195
 1788              	.LVL204:
 1789              	.L204:
 574:SYS/shell/shell.c ****     }
 1790              		.loc 1 574 0
 1791 0052 0B49     		ldr	r1, .L208+4
 1792 0054 2846     		mov	r0, r5
 1793 0056 FFF7FEFF 		bl	shellWriteString
 1794              	.LVL205:
 1795 005a 70BD     		pop	{r4, r5, r6, pc}
 1796              	.LVL206:
 1797              	.L205:
 578:SYS/shell/shell.c ****     }
 1798              		.loc 1 578 0
 1799 005c 0949     		ldr	r1, .L208+8
 1800 005e 2846     		mov	r0, r5
 1801 0060 FFF7FEFF 		bl	shellWriteString
ARM GAS  /tmp/ccYSNOoy.s 			page 66


 1802              	.LVL207:
 1803 0064 70BD     		pop	{r4, r5, r6, pc}
 1804              	.LVL208:
 1805              	.L206:
 582:SYS/shell/shell.c ****     }
 1806              		.loc 1 582 0
 1807 0066 0849     		ldr	r1, .L208+12
 1808 0068 2846     		mov	r0, r5
 1809 006a FFF7FEFF 		bl	shellWriteString
 1810              	.LVL209:
 1811 006e 70BD     		pop	{r4, r5, r6, pc}
 1812              	.LVL210:
 1813              	.L207:
 586:SYS/shell/shell.c ****     }
 1814              		.loc 1 586 0
 1815 0070 0649     		ldr	r1, .L208+16
 1816 0072 2846     		mov	r0, r5
 1817 0074 FFF7FEFF 		bl	shellWriteString
 1818              	.LVL211:
 1819 0078 70BD     		pop	{r4, r5, r6, pc}
 1820              	.LVL212:
 1821              	.L209:
 1822 007a 00BF     		.align	2
 1823              	.L208:
 1824 007c 18000000 		.word	.LC15
 1825 0080 00000000 		.word	.LC11
 1826 0084 08000000 		.word	.LC12
 1827 0088 0C000000 		.word	.LC13
 1828 008c 14000000 		.word	.LC14
 1829              		.cfi_endproc
 1830              	.LFE140:
 1832              		.section	.text.shellListCommand,"ax",%progbits
 1833              		.align	1
 1834              		.global	shellListCommand
 1835              		.syntax unified
 1836              		.thumb
 1837              		.thumb_func
 1838              		.fpu fpv4-sp-d16
 1840              	shellListCommand:
 1841              	.LFB141:
 610:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1842              		.loc 1 610 0
 1843              		.cfi_startproc
 1844              		@ args = 0, pretend = 0, frame = 0
 1845              		@ frame_needed = 0, uses_anonymous_args = 0
 1846              	.LVL213:
 1847 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1848              	.LCFI40:
 1849              		.cfi_def_cfa_offset 24
 1850              		.cfi_offset 3, -24
 1851              		.cfi_offset 4, -20
 1852              		.cfi_offset 5, -16
 1853              		.cfi_offset 6, -12
 1854              		.cfi_offset 7, -8
 1855              		.cfi_offset 14, -4
 1856 0002 0646     		mov	r6, r0
 611:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CMD_LIST]);
ARM GAS  /tmp/ccYSNOoy.s 			page 67


 1857              		.loc 1 611 0
 1858 0004 876D     		ldr	r7, [r0, #88]
 1859              	.LVL214:
 612:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1860              		.loc 1 612 0
 1861 0006 0F49     		ldr	r1, .L216
 1862 0008 FFF7FEFF 		bl	shellWriteString
 1863              	.LVL215:
 1864              	.LBB10:
 613:SYS/shell/shell.c ****     {
 1865              		.loc 1 613 0
 1866 000c 0024     		movs	r4, #0
 1867 000e 01E0     		b	.L211
 1868              	.LVL216:
 1869              	.L212:
 613:SYS/shell/shell.c ****     {
 1870              		.loc 1 613 0 is_stmt 0 discriminator 2
 1871 0010 0134     		adds	r4, r4, #1
 1872              	.LVL217:
 1873 0012 24B2     		sxth	r4, r4
 1874              	.LVL218:
 1875              	.L211:
 613:SYS/shell/shell.c ****     {
 1876              		.loc 1 613 0 discriminator 1
 1877 0014 B6F85C30 		ldrh	r3, [r6, #92]
 1878 0018 9C42     		cmp	r4, r3
 1879 001a 11DA     		bge	.L215
 615:SYS/shell/shell.c ****         {
 1880              		.loc 1 615 0 is_stmt 1
 1881 001c 07EB0415 		add	r5, r7, r4, lsl #4
 1882 0020 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1883 0022 03F00F03 		and	r3, r3, #15
 1884 0026 012B     		cmp	r3, #1
 1885 0028 F2DC     		bgt	.L212
 615:SYS/shell/shell.c ****         {
 1886              		.loc 1 615 0 is_stmt 0 discriminator 1
 1887 002a 2946     		mov	r1, r5
 1888 002c 3046     		mov	r0, r6
 1889 002e FFF7FEFF 		bl	shellCheckPermission
 1890              	.LVL219:
 1891 0032 0028     		cmp	r0, #0
 1892 0034 ECD1     		bne	.L212
 617:SYS/shell/shell.c ****         }
 1893              		.loc 1 617 0 is_stmt 1
 1894 0036 2946     		mov	r1, r5
 1895 0038 3046     		mov	r0, r6
 1896 003a FFF7FEFF 		bl	shellListItem
 1897              	.LVL220:
 1898 003e E7E7     		b	.L212
 1899              	.L215:
 1900              	.LBE10:
 620:SYS/shell/shell.c **** 
 1901              		.loc 1 620 0
 1902 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1903              	.LVL221:
 1904              	.L217:
 1905 0042 00BF     		.align	2
ARM GAS  /tmp/ccYSNOoy.s 			page 68


 1906              	.L216:
 1907 0044 00000000 		.word	.LC16
 1908              		.cfi_endproc
 1909              	.LFE141:
 1911              		.section	.text.shellCmds,"ax",%progbits
 1912              		.align	1
 1913              		.global	shellCmds
 1914              		.syntax unified
 1915              		.thumb
 1916              		.thumb_func
 1917              		.fpu fpv4-sp-d16
 1919              	shellCmds:
 1920              	.LFB177:
1715:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 1921              		.loc 1 1715 0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 0
 1924              		@ frame_needed = 0, uses_anonymous_args = 0
 1925 0000 08B5     		push	{r3, lr}
 1926              	.LCFI41:
 1927              		.cfi_def_cfa_offset 8
 1928              		.cfi_offset 3, -8
 1929              		.cfi_offset 14, -4
1716:SYS/shell/shell.c ****     if (shell)
 1930              		.loc 1 1716 0
 1931 0002 FFF7FEFF 		bl	shellGetCurrent
 1932              	.LVL222:
1717:SYS/shell/shell.c ****     {
 1933              		.loc 1 1717 0
 1934 0006 08B1     		cbz	r0, .L218
1719:SYS/shell/shell.c ****     }
 1935              		.loc 1 1719 0
 1936 0008 FFF7FEFF 		bl	shellListCommand
 1937              	.LVL223:
 1938              	.L218:
 1939 000c 08BD     		pop	{r3, pc}
 1940              		.cfi_endproc
 1941              	.LFE177:
 1943              		.section	.text.shellListVar,"ax",%progbits
 1944              		.align	1
 1945              		.global	shellListVar
 1946              		.syntax unified
 1947              		.thumb
 1948              		.thumb_func
 1949              		.fpu fpv4-sp-d16
 1951              	shellListVar:
 1952              	.LFB142:
 628:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1953              		.loc 1 628 0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 0
 1956              		@ frame_needed = 0, uses_anonymous_args = 0
 1957              	.LVL224:
 1958 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1959              	.LCFI42:
 1960              		.cfi_def_cfa_offset 24
 1961              		.cfi_offset 3, -24
ARM GAS  /tmp/ccYSNOoy.s 			page 69


 1962              		.cfi_offset 4, -20
 1963              		.cfi_offset 5, -16
 1964              		.cfi_offset 6, -12
 1965              		.cfi_offset 7, -8
 1966              		.cfi_offset 14, -4
 1967 0002 0646     		mov	r6, r0
 629:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_VAR_LIST]);
 1968              		.loc 1 629 0
 1969 0004 876D     		ldr	r7, [r0, #88]
 1970              	.LVL225:
 630:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1971              		.loc 1 630 0
 1972 0006 1049     		ldr	r1, .L227
 1973 0008 FFF7FEFF 		bl	shellWriteString
 1974              	.LVL226:
 1975              	.LBB11:
 631:SYS/shell/shell.c ****     {
 1976              		.loc 1 631 0
 1977 000c 0024     		movs	r4, #0
 1978 000e 01E0     		b	.L222
 1979              	.LVL227:
 1980              	.L223:
 631:SYS/shell/shell.c ****     {
 1981              		.loc 1 631 0 is_stmt 0 discriminator 2
 1982 0010 0134     		adds	r4, r4, #1
 1983              	.LVL228:
 1984 0012 24B2     		sxth	r4, r4
 1985              	.LVL229:
 1986              	.L222:
 631:SYS/shell/shell.c ****     {
 1987              		.loc 1 631 0 discriminator 1
 1988 0014 B6F85C30 		ldrh	r3, [r6, #92]
 1989 0018 9C42     		cmp	r4, r3
 1990 001a 14DA     		bge	.L226
 633:SYS/shell/shell.c ****         {
 1991              		.loc 1 633 0 is_stmt 1
 1992 001c 07EB0415 		add	r5, r7, r4, lsl #4
 1993 0020 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1994 0022 03F00F03 		and	r3, r3, #15
 1995 0026 0E33     		adds	r3, r3, #14
 1996 0028 03F00F03 		and	r3, r3, #15
 1997 002c 052B     		cmp	r3, #5
 1998 002e EFD8     		bhi	.L223
 633:SYS/shell/shell.c ****         {
 1999              		.loc 1 633 0 is_stmt 0 discriminator 1
 2000 0030 2946     		mov	r1, r5
 2001 0032 3046     		mov	r0, r6
 2002 0034 FFF7FEFF 		bl	shellCheckPermission
 2003              	.LVL230:
 2004 0038 0028     		cmp	r0, #0
 2005 003a E9D1     		bne	.L223
 635:SYS/shell/shell.c ****         }
 2006              		.loc 1 635 0 is_stmt 1
 2007 003c 2946     		mov	r1, r5
 2008 003e 3046     		mov	r0, r6
 2009 0040 FFF7FEFF 		bl	shellListItem
 2010              	.LVL231:
ARM GAS  /tmp/ccYSNOoy.s 			page 70


 2011 0044 E4E7     		b	.L223
 2012              	.L226:
 2013              	.LBE11:
 638:SYS/shell/shell.c **** 
 2014              		.loc 1 638 0
 2015 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2016              	.LVL232:
 2017              	.L228:
 2018              		.align	2
 2019              	.L227:
 2020 0048 00000000 		.word	.LC17
 2021              		.cfi_endproc
 2022              	.LFE142:
 2024              		.section	.text.shellVars,"ax",%progbits
 2025              		.align	1
 2026              		.global	shellVars
 2027              		.syntax unified
 2028              		.thumb
 2029              		.thumb_func
 2030              		.fpu fpv4-sp-d16
 2032              	shellVars:
 2033              	.LFB178:
1730:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 2034              		.loc 1 1730 0
 2035              		.cfi_startproc
 2036              		@ args = 0, pretend = 0, frame = 0
 2037              		@ frame_needed = 0, uses_anonymous_args = 0
 2038 0000 08B5     		push	{r3, lr}
 2039              	.LCFI43:
 2040              		.cfi_def_cfa_offset 8
 2041              		.cfi_offset 3, -8
 2042              		.cfi_offset 14, -4
1731:SYS/shell/shell.c ****     if (shell)
 2043              		.loc 1 1731 0
 2044 0002 FFF7FEFF 		bl	shellGetCurrent
 2045              	.LVL233:
1732:SYS/shell/shell.c ****     {
 2046              		.loc 1 1732 0
 2047 0006 08B1     		cbz	r0, .L229
1734:SYS/shell/shell.c ****     }
 2048              		.loc 1 1734 0
 2049 0008 FFF7FEFF 		bl	shellListVar
 2050              	.LVL234:
 2051              	.L229:
 2052 000c 08BD     		pop	{r3, pc}
 2053              		.cfi_endproc
 2054              	.LFE178:
 2056              		.section	.text.shellListUser,"ax",%progbits
 2057              		.align	1
 2058              		.global	shellListUser
 2059              		.syntax unified
 2060              		.thumb
 2061              		.thumb_func
 2062              		.fpu fpv4-sp-d16
 2064              	shellListUser:
 2065              	.LFB143:
 646:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
ARM GAS  /tmp/ccYSNOoy.s 			page 71


 2066              		.loc 1 646 0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 0
 2069              		@ frame_needed = 0, uses_anonymous_args = 0
 2070              	.LVL235:
 2071 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2072              	.LCFI44:
 2073              		.cfi_def_cfa_offset 24
 2074              		.cfi_offset 3, -24
 2075              		.cfi_offset 4, -20
 2076              		.cfi_offset 5, -16
 2077              		.cfi_offset 6, -12
 2078              		.cfi_offset 7, -8
 2079              		.cfi_offset 14, -4
 2080 0002 0646     		mov	r6, r0
 647:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_USER_LIST]);
 2081              		.loc 1 647 0
 2082 0004 876D     		ldr	r7, [r0, #88]
 2083              	.LVL236:
 648:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 2084              		.loc 1 648 0
 2085 0006 0F49     		ldr	r1, .L238
 2086 0008 FFF7FEFF 		bl	shellWriteString
 2087              	.LVL237:
 2088              	.LBB12:
 649:SYS/shell/shell.c ****     {
 2089              		.loc 1 649 0
 2090 000c 0024     		movs	r4, #0
 2091 000e 01E0     		b	.L233
 2092              	.LVL238:
 2093              	.L234:
 649:SYS/shell/shell.c ****     {
 2094              		.loc 1 649 0 is_stmt 0 discriminator 2
 2095 0010 0134     		adds	r4, r4, #1
 2096              	.LVL239:
 2097 0012 24B2     		sxth	r4, r4
 2098              	.LVL240:
 2099              	.L233:
 649:SYS/shell/shell.c ****     {
 2100              		.loc 1 649 0 discriminator 1
 2101 0014 B6F85C30 		ldrh	r3, [r6, #92]
 2102 0018 9C42     		cmp	r4, r3
 2103 001a 11DA     		bge	.L237
 651:SYS/shell/shell.c ****         {
 2104              		.loc 1 651 0 is_stmt 1
 2105 001c 07EB0415 		add	r5, r7, r4, lsl #4
 2106 0020 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 2107 0022 03F00F03 		and	r3, r3, #15
 2108 0026 082B     		cmp	r3, #8
 2109 0028 F2D1     		bne	.L234
 651:SYS/shell/shell.c ****         {
 2110              		.loc 1 651 0 is_stmt 0 discriminator 1
 2111 002a 2946     		mov	r1, r5
 2112 002c 3046     		mov	r0, r6
 2113 002e FFF7FEFF 		bl	shellCheckPermission
 2114              	.LVL241:
 2115 0032 0028     		cmp	r0, #0
ARM GAS  /tmp/ccYSNOoy.s 			page 72


 2116 0034 ECD1     		bne	.L234
 653:SYS/shell/shell.c ****         }
 2117              		.loc 1 653 0 is_stmt 1
 2118 0036 2946     		mov	r1, r5
 2119 0038 3046     		mov	r0, r6
 2120 003a FFF7FEFF 		bl	shellListItem
 2121              	.LVL242:
 2122 003e E7E7     		b	.L234
 2123              	.L237:
 2124              	.LBE12:
 656:SYS/shell/shell.c **** 
 2125              		.loc 1 656 0
 2126 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2127              	.LVL243:
 2128              	.L239:
 2129 0042 00BF     		.align	2
 2130              	.L238:
 2131 0044 00000000 		.word	.LC18
 2132              		.cfi_endproc
 2133              	.LFE143:
 2135              		.section	.text.shellUsers,"ax",%progbits
 2136              		.align	1
 2137              		.global	shellUsers
 2138              		.syntax unified
 2139              		.thumb
 2140              		.thumb_func
 2141              		.fpu fpv4-sp-d16
 2143              	shellUsers:
 2144              	.LFB176:
1700:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 2145              		.loc 1 1700 0
 2146              		.cfi_startproc
 2147              		@ args = 0, pretend = 0, frame = 0
 2148              		@ frame_needed = 0, uses_anonymous_args = 0
 2149 0000 08B5     		push	{r3, lr}
 2150              	.LCFI45:
 2151              		.cfi_def_cfa_offset 8
 2152              		.cfi_offset 3, -8
 2153              		.cfi_offset 14, -4
1701:SYS/shell/shell.c ****     if (shell)
 2154              		.loc 1 1701 0
 2155 0002 FFF7FEFF 		bl	shellGetCurrent
 2156              	.LVL244:
1702:SYS/shell/shell.c ****     {
 2157              		.loc 1 1702 0
 2158 0006 08B1     		cbz	r0, .L240
1704:SYS/shell/shell.c ****     }
 2159              		.loc 1 1704 0
 2160 0008 FFF7FEFF 		bl	shellListUser
 2161              	.LVL245:
 2162              	.L240:
 2163 000c 08BD     		pop	{r3, pc}
 2164              		.cfi_endproc
 2165              	.LFE176:
 2167              		.section	.text.shellListKey,"ax",%progbits
 2168              		.align	1
 2169              		.global	shellListKey
ARM GAS  /tmp/ccYSNOoy.s 			page 73


 2170              		.syntax unified
 2171              		.thumb
 2172              		.thumb_func
 2173              		.fpu fpv4-sp-d16
 2175              	shellListKey:
 2176              	.LFB144:
 664:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 2177              		.loc 1 664 0
 2178              		.cfi_startproc
 2179              		@ args = 0, pretend = 0, frame = 0
 2180              		@ frame_needed = 0, uses_anonymous_args = 0
 2181              	.LVL246:
 2182 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2183              	.LCFI46:
 2184              		.cfi_def_cfa_offset 24
 2185              		.cfi_offset 3, -24
 2186              		.cfi_offset 4, -20
 2187              		.cfi_offset 5, -16
 2188              		.cfi_offset 6, -12
 2189              		.cfi_offset 7, -8
 2190              		.cfi_offset 14, -4
 2191 0002 0646     		mov	r6, r0
 665:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_KEY_LIST]);
 2192              		.loc 1 665 0
 2193 0004 876D     		ldr	r7, [r0, #88]
 2194              	.LVL247:
 666:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 2195              		.loc 1 666 0
 2196 0006 0F49     		ldr	r1, .L249
 2197 0008 FFF7FEFF 		bl	shellWriteString
 2198              	.LVL248:
 2199              	.LBB13:
 667:SYS/shell/shell.c ****     {
 2200              		.loc 1 667 0
 2201 000c 0024     		movs	r4, #0
 2202 000e 01E0     		b	.L244
 2203              	.LVL249:
 2204              	.L245:
 667:SYS/shell/shell.c ****     {
 2205              		.loc 1 667 0 is_stmt 0 discriminator 2
 2206 0010 0134     		adds	r4, r4, #1
 2207              	.LVL250:
 2208 0012 24B2     		sxth	r4, r4
 2209              	.LVL251:
 2210              	.L244:
 667:SYS/shell/shell.c ****     {
 2211              		.loc 1 667 0 discriminator 1
 2212 0014 B6F85C30 		ldrh	r3, [r6, #92]
 2213 0018 9C42     		cmp	r4, r3
 2214 001a 11DA     		bge	.L248
 669:SYS/shell/shell.c ****         {
 2215              		.loc 1 669 0 is_stmt 1
 2216 001c 07EB0415 		add	r5, r7, r4, lsl #4
 2217 0020 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 2218 0022 03F00F03 		and	r3, r3, #15
 2219 0026 092B     		cmp	r3, #9
 2220 0028 F2D1     		bne	.L245
ARM GAS  /tmp/ccYSNOoy.s 			page 74


 669:SYS/shell/shell.c ****         {
 2221              		.loc 1 669 0 is_stmt 0 discriminator 1
 2222 002a 2946     		mov	r1, r5
 2223 002c 3046     		mov	r0, r6
 2224 002e FFF7FEFF 		bl	shellCheckPermission
 2225              	.LVL252:
 2226 0032 0028     		cmp	r0, #0
 2227 0034 ECD1     		bne	.L245
 671:SYS/shell/shell.c ****         }
 2228              		.loc 1 671 0 is_stmt 1
 2229 0036 2946     		mov	r1, r5
 2230 0038 3046     		mov	r0, r6
 2231 003a FFF7FEFF 		bl	shellListItem
 2232              	.LVL253:
 2233 003e E7E7     		b	.L245
 2234              	.L248:
 2235              	.LBE13:
 674:SYS/shell/shell.c **** 
 2236              		.loc 1 674 0
 2237 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2238              	.LVL254:
 2239              	.L250:
 2240 0042 00BF     		.align	2
 2241              	.L249:
 2242 0044 00000000 		.word	.LC19
 2243              		.cfi_endproc
 2244              	.LFE144:
 2246              		.section	.text.shellKeys,"ax",%progbits
 2247              		.align	1
 2248              		.global	shellKeys
 2249              		.syntax unified
 2250              		.thumb
 2251              		.thumb_func
 2252              		.fpu fpv4-sp-d16
 2254              	shellKeys:
 2255              	.LFB179:
1745:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 2256              		.loc 1 1745 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 0
 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260 0000 08B5     		push	{r3, lr}
 2261              	.LCFI47:
 2262              		.cfi_def_cfa_offset 8
 2263              		.cfi_offset 3, -8
 2264              		.cfi_offset 14, -4
1746:SYS/shell/shell.c ****     if (shell)
 2265              		.loc 1 1746 0
 2266 0002 FFF7FEFF 		bl	shellGetCurrent
 2267              	.LVL255:
1747:SYS/shell/shell.c ****     {
 2268              		.loc 1 1747 0
 2269 0006 08B1     		cbz	r0, .L251
1749:SYS/shell/shell.c ****     }
 2270              		.loc 1 1749 0
 2271 0008 FFF7FEFF 		bl	shellListKey
 2272              	.LVL256:
ARM GAS  /tmp/ccYSNOoy.s 			page 75


 2273              	.L251:
 2274 000c 08BD     		pop	{r3, pc}
 2275              		.cfi_endproc
 2276              	.LFE179:
 2278              		.section	.text.shellListAll,"ax",%progbits
 2279              		.align	1
 2280              		.global	shellListAll
 2281              		.syntax unified
 2282              		.thumb
 2283              		.thumb_func
 2284              		.fpu fpv4-sp-d16
 2286              	shellListAll:
 2287              	.LFB145:
 682:SYS/shell/shell.c **** #if SHELL_HELP_LIST_USER == 1
 2288              		.loc 1 682 0
 2289              		.cfi_startproc
 2290              		@ args = 0, pretend = 0, frame = 0
 2291              		@ frame_needed = 0, uses_anonymous_args = 0
 2292              	.LVL257:
 2293 0000 08B5     		push	{r3, lr}
 2294              	.LCFI48:
 2295              		.cfi_def_cfa_offset 8
 2296              		.cfi_offset 3, -8
 2297              		.cfi_offset 14, -4
 686:SYS/shell/shell.c **** #if SHELL_HELP_LIST_VAR == 1
 2298              		.loc 1 686 0
 2299 0002 FFF7FEFF 		bl	shellListCommand
 2300              	.LVL258:
 2301 0006 08BD     		pop	{r3, pc}
 2302              		.cfi_endproc
 2303              	.LFE145:
 2305              		.section	.text.shellDeleteCommandLine,"ax",%progbits
 2306              		.align	1
 2307              		.global	shellDeleteCommandLine
 2308              		.syntax unified
 2309              		.thumb
 2310              		.thumb_func
 2311              		.fpu fpv4-sp-d16
 2313              	shellDeleteCommandLine:
 2314              	.LFB146:
 702:SYS/shell/shell.c ****     while (length--)
 2315              		.loc 1 702 0
 2316              		.cfi_startproc
 2317              		@ args = 0, pretend = 0, frame = 0
 2318              		@ frame_needed = 0, uses_anonymous_args = 0
 2319              	.LVL259:
 2320 0000 38B5     		push	{r3, r4, r5, lr}
 2321              	.LCFI49:
 2322              		.cfi_def_cfa_offset 16
 2323              		.cfi_offset 3, -16
 2324              		.cfi_offset 4, -12
 2325              		.cfi_offset 5, -8
 2326              		.cfi_offset 14, -4
 2327 0002 0546     		mov	r5, r0
 703:SYS/shell/shell.c ****     {
 2328              		.loc 1 703 0
 2329 0004 04E0     		b	.L257
ARM GAS  /tmp/ccYSNOoy.s 			page 76


 2330              	.LVL260:
 2331              	.L258:
 705:SYS/shell/shell.c ****     }
 2332              		.loc 1 705 0
 2333 0006 0549     		ldr	r1, .L260
 2334 0008 2846     		mov	r0, r5
 2335 000a FFF7FEFF 		bl	shellWriteString
 2336              	.LVL261:
 703:SYS/shell/shell.c ****     {
 2337              		.loc 1 703 0
 2338 000e 2146     		mov	r1, r4
 2339              	.LVL262:
 2340              	.L257:
 2341 0010 4B1E     		subs	r3, r1, #1
 2342 0012 DCB2     		uxtb	r4, r3
 2343              	.LVL263:
 2344 0014 0029     		cmp	r1, #0
 2345 0016 F6D1     		bne	.L258
 707:SYS/shell/shell.c **** 
 2346              		.loc 1 707 0
 2347 0018 38BD     		pop	{r3, r4, r5, pc}
 2348              	.LVL264:
 2349              	.L261:
 2350 001a 00BF     		.align	2
 2351              	.L260:
 2352 001c 00000000 		.word	.LC20
 2353              		.cfi_endproc
 2354              	.LFE146:
 2356              		.section	.text.shellClearCommandLine,"ax",%progbits
 2357              		.align	1
 2358              		.global	shellClearCommandLine
 2359              		.syntax unified
 2360              		.thumb
 2361              		.thumb_func
 2362              		.fpu fpv4-sp-d16
 2364              	shellClearCommandLine:
 2365              	.LFB147:
 715:SYS/shell/shell.c ****     for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 2366              		.loc 1 715 0
 2367              		.cfi_startproc
 2368              		@ args = 0, pretend = 0, frame = 0
 2369              		@ frame_needed = 0, uses_anonymous_args = 0
 2370              	.LVL265:
 2371 0000 38B5     		push	{r3, r4, r5, lr}
 2372              	.LCFI50:
 2373              		.cfi_def_cfa_offset 16
 2374              		.cfi_offset 3, -16
 2375              		.cfi_offset 4, -12
 2376              		.cfi_offset 5, -8
 2377              		.cfi_offset 14, -4
 2378 0002 0546     		mov	r5, r0
 2379              	.LBB14:
 716:SYS/shell/shell.c ****     {
 2380              		.loc 1 716 0
 2381 0004 8489     		ldrh	r4, [r0, #12]
 2382 0006 C389     		ldrh	r3, [r0, #14]
 2383 0008 E41A     		subs	r4, r4, r3
ARM GAS  /tmp/ccYSNOoy.s 			page 77


 2384 000a 24B2     		sxth	r4, r4
 2385              	.LVL266:
 2386 000c 05E0     		b	.L263
 2387              	.LVL267:
 2388              	.L264:
 718:SYS/shell/shell.c ****     }
 2389              		.loc 1 718 0 discriminator 3
 2390 000e 2021     		movs	r1, #32
 2391 0010 2846     		mov	r0, r5
 2392 0012 FFF7FEFF 		bl	shellWriteByte
 2393              	.LVL268:
 716:SYS/shell/shell.c ****     {
 2394              		.loc 1 716 0 discriminator 3
 2395 0016 013C     		subs	r4, r4, #1
 2396              	.LVL269:
 2397 0018 24B2     		sxth	r4, r4
 2398              	.LVL270:
 2399              	.L263:
 716:SYS/shell/shell.c ****     {
 2400              		.loc 1 716 0 is_stmt 0 discriminator 1
 2401 001a 002C     		cmp	r4, #0
 2402 001c F7DC     		bgt	.L264
 2403              	.LBE14:
 720:SYS/shell/shell.c **** }
 2404              		.loc 1 720 0 is_stmt 1
 2405 001e 297B     		ldrb	r1, [r5, #12]	@ zero_extendqisi2
 2406 0020 2846     		mov	r0, r5
 2407 0022 FFF7FEFF 		bl	shellDeleteCommandLine
 2408              	.LVL271:
 2409 0026 38BD     		pop	{r3, r4, r5, pc}
 2410              		.cfi_endproc
 2411              	.LFE147:
 2413              		.section	.text.shellHistory,"ax",%progbits
 2414              		.align	1
 2415              		.syntax unified
 2416              		.thumb
 2417              		.thumb_func
 2418              		.fpu fpv4-sp-d16
 2420              	shellHistory:
 2421              	.LFB162:
1244:SYS/shell/shell.c ****     if (dir > 0)
 2422              		.loc 1 1244 0
 2423              		.cfi_startproc
 2424              		@ args = 0, pretend = 0, frame = 0
 2425              		@ frame_needed = 0, uses_anonymous_args = 0
 2426              	.LVL272:
 2427 0000 10B5     		push	{r4, lr}
 2428              	.LCFI51:
 2429              		.cfi_def_cfa_offset 8
 2430              		.cfi_offset 4, -8
 2431              		.cfi_offset 14, -4
1245:SYS/shell/shell.c ****     {
 2432              		.loc 1 1245 0
 2433 0002 0029     		cmp	r1, #0
 2434              	.LVL273:
 2435 0004 21DD     		ble	.L267
1247:SYS/shell/shell.c ****             -((shell->history.number > shell->history.record) ? shell->history.number : shell->hist
ARM GAS  /tmp/ccYSNOoy.s 			page 78


 2436              		.loc 1 1247 0
 2437 0006 B0F95410 		ldrsh	r1, [r0, #84]
 2438 000a 4B1E     		subs	r3, r1, #1
 2439 000c A0F85430 		strh	r3, [r0, #84]	@ movhi
1248:SYS/shell/shell.c ****         {
 2440              		.loc 1 1248 0
 2441 0010 B0F85020 		ldrh	r2, [r0, #80]
 2442 0014 B0F85230 		ldrh	r3, [r0, #82]
 2443 0018 9A42     		cmp	r2, r3
 2444 001a 11D9     		bls	.L268
1248:SYS/shell/shell.c ****         {
 2445              		.loc 1 1248 0 is_stmt 0 discriminator 1
 2446 001c 5442     		negs	r4, r2
 2447              	.L269:
1247:SYS/shell/shell.c ****             -((shell->history.number > shell->history.record) ? shell->history.number : shell->hist
 2448              		.loc 1 1247 0 is_stmt 1
 2449 001e 8C42     		cmp	r4, r1
 2450 0020 05DB     		blt	.L270
1250:SYS/shell/shell.c ****                                           ? shell->history.number
 2451              		.loc 1 1250 0
 2452 0022 9A42     		cmp	r2, r3
 2453 0024 0ED9     		bls	.L271
1250:SYS/shell/shell.c ****                                           ? shell->history.number
 2454              		.loc 1 1250 0 is_stmt 0 discriminator 1
 2455 0026 5342     		negs	r3, r2
 2456 0028 1BB2     		sxth	r3, r3
 2457              	.L272:
1250:SYS/shell/shell.c ****                                           ? shell->history.number
 2458              		.loc 1 1250 0 discriminator 4
 2459 002a A0F85430 		strh	r3, [r0, #84]	@ movhi
 2460              	.L270:
 2461 002e 0446     		mov	r4, r0
1267:SYS/shell/shell.c ****     if (shell->history.offset == 0)
 2462              		.loc 1 1267 0 is_stmt 1
 2463 0030 FFF7FEFF 		bl	shellClearCommandLine
 2464              	.LVL274:
1268:SYS/shell/shell.c ****     {
 2465              		.loc 1 1268 0
 2466 0034 B4F95430 		ldrsh	r3, [r4, #84]
 2467 0038 ABB9     		cbnz	r3, .L274
1270:SYS/shell/shell.c ****     }
 2468              		.loc 1 1270 0
 2469 003a A381     		strh	r3, [r4, #12]	@ movhi
 2470 003c E381     		strh	r3, [r4, #14]	@ movhi
 2471 003e 10BD     		pop	{r4, pc}
 2472              	.LVL275:
 2473              	.L268:
1248:SYS/shell/shell.c ****         {
 2474              		.loc 1 1248 0 discriminator 2
 2475 0040 5C42     		negs	r4, r3
 2476 0042 ECE7     		b	.L269
 2477              	.L271:
1250:SYS/shell/shell.c ****                                           ? shell->history.number
 2478              		.loc 1 1250 0 discriminator 2
 2479 0044 5B42     		negs	r3, r3
 2480 0046 1BB2     		sxth	r3, r3
 2481 0048 EFE7     		b	.L272
ARM GAS  /tmp/ccYSNOoy.s 			page 79


 2482              	.L267:
1255:SYS/shell/shell.c ****     {
 2483              		.loc 1 1255 0
 2484 004a 0029     		cmp	r1, #0
 2485 004c 21DA     		bge	.L266
1257:SYS/shell/shell.c ****         {
 2486              		.loc 1 1257 0
 2487 004e B0F95430 		ldrsh	r3, [r0, #84]
 2488 0052 0133     		adds	r3, r3, #1
 2489 0054 1BB2     		sxth	r3, r3
 2490 0056 A0F85430 		strh	r3, [r0, #84]	@ movhi
 2491 005a 002B     		cmp	r3, #0
 2492 005c E7DD     		ble	.L270
1259:SYS/shell/shell.c ****             return;
 2493              		.loc 1 1259 0
 2494 005e 0023     		movs	r3, #0
 2495 0060 A0F85430 		strh	r3, [r0, #84]	@ movhi
1260:SYS/shell/shell.c ****         }
 2496              		.loc 1 1260 0
 2497 0064 10BD     		pop	{r4, pc}
 2498              	.LVL276:
 2499              	.L274:
1275:SYS/shell/shell.c ****         {
 2500              		.loc 1 1275 0
 2501 0066 B4F85220 		ldrh	r2, [r4, #82]
 2502 006a 0532     		adds	r2, r2, #5
 2503 006c 1A44     		add	r2, r2, r3
 2504 006e 0C49     		ldr	r1, .L277
 2505 0070 81FB0231 		smull	r3, r1, r1, r2
 2506 0074 D317     		asrs	r3, r2, #31
 2507 0076 C3EB6103 		rsb	r3, r3, r1, asr #1
 2508 007a 03EB8303 		add	r3, r3, r3, lsl #2
 2509 007e D31A     		subs	r3, r2, r3
1274:SYS/shell/shell.c ****                                                     shell->history.item[(shell->history.record + SH
 2510              		.loc 1 1274 0
 2511 0080 0E33     		adds	r3, r3, #14
 2512 0082 04EB8303 		add	r3, r4, r3, lsl #2
 2513 0086 5968     		ldr	r1, [r3, #4]
 2514 0088 2069     		ldr	r0, [r4, #16]
 2515 008a FFF7FEFF 		bl	shellStringCopy
 2516              	.LVL277:
 2517 008e A081     		strh	r0, [r4, #12]	@ movhi
 2518 0090 00B9     		cbnz	r0, .L276
 2519              	.LVL278:
 2520              	.L266:
 2521 0092 10BD     		pop	{r4, pc}
 2522              	.LVL279:
 2523              	.L276:
1279:SYS/shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2524              		.loc 1 1279 0
 2525 0094 E081     		strh	r0, [r4, #14]	@ movhi
1280:SYS/shell/shell.c ****     }
 2526              		.loc 1 1280 0
 2527 0096 2169     		ldr	r1, [r4, #16]
 2528 0098 2046     		mov	r0, r4
 2529 009a FFF7FEFF 		bl	shellWriteString
 2530              	.LVL280:
ARM GAS  /tmp/ccYSNOoy.s 			page 80


 2531 009e F8E7     		b	.L266
 2532              	.L278:
 2533              		.align	2
 2534              	.L277:
 2535 00a0 67666666 		.word	1717986919
 2536              		.cfi_endproc
 2537              	.LFE162:
 2539              		.section	.text.shellUp,"ax",%progbits
 2540              		.align	1
 2541              		.global	shellUp
 2542              		.syntax unified
 2543              		.thumb
 2544              		.thumb_func
 2545              		.fpu fpv4-sp-d16
 2547              	shellUp:
 2548              	.LFB165:
1347:SYS/shell/shell.c ****     shellHistory(shell, 1);
 2549              		.loc 1 1347 0
 2550              		.cfi_startproc
 2551              		@ args = 0, pretend = 0, frame = 0
 2552              		@ frame_needed = 0, uses_anonymous_args = 0
 2553              	.LVL281:
 2554 0000 08B5     		push	{r3, lr}
 2555              	.LCFI52:
 2556              		.cfi_def_cfa_offset 8
 2557              		.cfi_offset 3, -8
 2558              		.cfi_offset 14, -4
1348:SYS/shell/shell.c **** }
 2559              		.loc 1 1348 0
 2560 0002 0121     		movs	r1, #1
 2561 0004 FFF7FEFF 		bl	shellHistory
 2562              	.LVL282:
 2563 0008 08BD     		pop	{r3, pc}
 2564              		.cfi_endproc
 2565              	.LFE165:
 2567              		.section	.text.shellDown,"ax",%progbits
 2568              		.align	1
 2569              		.global	shellDown
 2570              		.syntax unified
 2571              		.thumb
 2572              		.thumb_func
 2573              		.fpu fpv4-sp-d16
 2575              	shellDown:
 2576              	.LFB166:
1358:SYS/shell/shell.c ****     shellHistory(shell, -1);
 2577              		.loc 1 1358 0
 2578              		.cfi_startproc
 2579              		@ args = 0, pretend = 0, frame = 0
 2580              		@ frame_needed = 0, uses_anonymous_args = 0
 2581              	.LVL283:
 2582 0000 08B5     		push	{r3, lr}
 2583              	.LCFI53:
 2584              		.cfi_def_cfa_offset 8
 2585              		.cfi_offset 3, -8
 2586              		.cfi_offset 14, -4
1359:SYS/shell/shell.c **** }
 2587              		.loc 1 1359 0
ARM GAS  /tmp/ccYSNOoy.s 			page 81


 2588 0002 4FF0FF31 		mov	r1, #-1
 2589 0006 FFF7FEFF 		bl	shellHistory
 2590              	.LVL284:
 2591 000a 08BD     		pop	{r3, pc}
 2592              		.cfi_endproc
 2593              	.LFE166:
 2595              		.section	.text.shellTab,"ax",%progbits
 2596              		.align	1
 2597              		.global	shellTab
 2598              		.syntax unified
 2599              		.thumb
 2600              		.thumb_func
 2601              		.fpu fpv4-sp-d16
 2603              	shellTab:
 2604              	.LFB169:
1400:SYS/shell/shell.c ****     unsigned short maxMatch = shell->parser.bufferSize;
 2605              		.loc 1 1400 0
 2606              		.cfi_startproc
 2607              		@ args = 0, pretend = 0, frame = 0
 2608              		@ frame_needed = 0, uses_anonymous_args = 0
 2609              	.LVL285:
 2610 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2611              	.LCFI54:
 2612              		.cfi_def_cfa_offset 40
 2613              		.cfi_offset 3, -40
 2614              		.cfi_offset 4, -36
 2615              		.cfi_offset 5, -32
 2616              		.cfi_offset 6, -28
 2617              		.cfi_offset 7, -24
 2618              		.cfi_offset 8, -20
 2619              		.cfi_offset 9, -16
 2620              		.cfi_offset 10, -12
 2621              		.cfi_offset 11, -8
 2622              		.cfi_offset 14, -4
 2623 0004 0546     		mov	r5, r0
1401:SYS/shell/shell.c ****     unsigned short lastMatchIndex = 0;
 2624              		.loc 1 1401 0
 2625 0006 B0F834A0 		ldrh	r10, [r0, #52]
 2626              	.LVL286:
1406:SYS/shell/shell.c ****     {
 2627              		.loc 1 1406 0
 2628 000a 8389     		ldrh	r3, [r0, #12]
 2629 000c 43B1     		cbz	r3, .L294
 2630              	.LBB15:
1413:SYS/shell/shell.c ****         ShellCommand *base = (ShellCommand *)shell->commandList.base;
 2631              		.loc 1 1413 0
 2632 000e 0269     		ldr	r2, [r0, #16]
 2633 0010 4FF00008 		mov	r8, #0
 2634 0014 02F80380 		strb	r8, [r2, r3]
1414:SYS/shell/shell.c ****         for (short i = 0; i < shell->commandList.count; i++)
 2635              		.loc 1 1414 0
 2636 0018 876D     		ldr	r7, [r0, #88]
 2637              	.LVL287:
 2638              	.LBB16:
1415:SYS/shell/shell.c ****         {
 2639              		.loc 1 1415 0
 2640 001a 4446     		mov	r4, r8
ARM GAS  /tmp/ccYSNOoy.s 			page 82


 2641              	.LBE16:
 2642              	.LBE15:
1403:SYS/shell/shell.c ****     unsigned short length;
 2643              		.loc 1 1403 0
 2644 001c C146     		mov	r9, r8
 2645              	.LBB19:
 2646              	.LBB17:
1415:SYS/shell/shell.c ****         {
 2647              		.loc 1 1415 0
 2648 001e 25E0     		b	.L286
 2649              	.LVL288:
 2650              	.L294:
 2651              	.LBE17:
 2652              	.LBE19:
1408:SYS/shell/shell.c ****         shellWriteCommandLine(shell, 1);
 2653              		.loc 1 1408 0
 2654 0020 FFF7FEFF 		bl	shellListAll
 2655              	.LVL289:
1409:SYS/shell/shell.c ****     }
 2656              		.loc 1 1409 0
 2657 0024 0121     		movs	r1, #1
 2658 0026 2846     		mov	r0, r5
 2659 0028 FFF7FEFF 		bl	shellWriteCommandLine
 2660              	.LVL290:
 2661 002c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2662              	.LVL291:
 2663              	.L289:
 2664              	.LBB20:
 2665              	.LBB18:
1426:SYS/shell/shell.c ****                     length =
 2666              		.loc 1 1426 0
 2667 0030 07EB0818 		add	r8, r7, r8, lsl #4
 2668              	.LVL292:
 2669 0034 4146     		mov	r1, r8
 2670 0036 2846     		mov	r0, r5
 2671 0038 FFF7FEFF 		bl	shellListItem
 2672              	.LVL293:
1428:SYS/shell/shell.c ****                                            (char *)shellGetCommandName(&base[i]));
 2673              		.loc 1 1428 0
 2674 003c 4046     		mov	r0, r8
 2675 003e FFF7FEFF 		bl	shellGetCommandName
 2676              	.LVL294:
 2677 0042 8046     		mov	r8, r0
1429:SYS/shell/shell.c ****                     maxMatch = (maxMatch > length) ? length : maxMatch;
 2678              		.loc 1 1429 0
 2679 0044 3046     		mov	r0, r6
 2680 0046 FFF7FEFF 		bl	shellGetCommandName
 2681              	.LVL295:
1427:SYS/shell/shell.c ****                         shellStringCompare((char *)shellGetCommandName(&base[lastMatchIndex]),
 2682              		.loc 1 1427 0
 2683 004a 0146     		mov	r1, r0
 2684 004c 4046     		mov	r0, r8
 2685 004e FFF7FEFF 		bl	shellStringCompare
 2686              	.LVL296:
1430:SYS/shell/shell.c ****                 }
 2687              		.loc 1 1430 0
 2688 0052 8245     		cmp	r10, r0
ARM GAS  /tmp/ccYSNOoy.s 			page 83


 2689 0054 28BF     		it	cs
 2690 0056 8246     		movcs	r10, r0
 2691              	.LVL297:
 2692 0058 1FFA8AFA 		uxth	r10, r10
 2693              	.LVL298:
 2694              	.L288:
1432:SYS/shell/shell.c ****                 matchNum++;
 2695              		.loc 1 1432 0
 2696 005c 1FFA84F8 		uxth	r8, r4
 2697              	.LVL299:
1433:SYS/shell/shell.c ****             }
 2698              		.loc 1 1433 0
 2699 0060 09F10109 		add	r9, r9, #1
 2700              	.LVL300:
 2701 0064 1FFA89F9 		uxth	r9, r9
 2702              	.LVL301:
 2703              	.L287:
1415:SYS/shell/shell.c ****         {
 2704              		.loc 1 1415 0 discriminator 2
 2705 0068 0134     		adds	r4, r4, #1
 2706              	.LVL302:
 2707 006a 24B2     		sxth	r4, r4
 2708              	.LVL303:
 2709              	.L286:
1415:SYS/shell/shell.c ****         {
 2710              		.loc 1 1415 0 is_stmt 0 discriminator 1
 2711 006c B5F85C30 		ldrh	r3, [r5, #92]
 2712 0070 9C42     		cmp	r4, r3
 2713 0072 1EDA     		bge	.L295
1417:SYS/shell/shell.c ****                                                                                  (char *)shellGetCo
 2714              		.loc 1 1417 0 is_stmt 1
 2715 0074 07EB0416 		add	r6, r7, r4, lsl #4
 2716 0078 3146     		mov	r1, r6
 2717 007a 2846     		mov	r0, r5
 2718 007c FFF7FEFF 		bl	shellCheckPermission
 2719              	.LVL304:
 2720 0080 0028     		cmp	r0, #0
 2721 0082 F1D1     		bne	.L287
1417:SYS/shell/shell.c ****                                                                                  (char *)shellGetCo
 2722              		.loc 1 1417 0 is_stmt 0 discriminator 1
 2723 0084 D5F810B0 		ldr	fp, [r5, #16]
1418:SYS/shell/shell.c ****             {
 2724              		.loc 1 1418 0 is_stmt 1 discriminator 1
 2725 0088 3046     		mov	r0, r6
 2726 008a FFF7FEFF 		bl	shellGetCommandName
 2727              	.LVL305:
1417:SYS/shell/shell.c ****                                                                                  (char *)shellGetCo
 2728              		.loc 1 1417 0 discriminator 1
 2729 008e 0146     		mov	r1, r0
 2730 0090 5846     		mov	r0, fp
 2731 0092 FFF7FEFF 		bl	shellStringCompare
 2732              	.LVL306:
1418:SYS/shell/shell.c ****             {
 2733              		.loc 1 1418 0 discriminator 1
 2734 0096 AB89     		ldrh	r3, [r5, #12]
1417:SYS/shell/shell.c ****                                                                                  (char *)shellGetCo
 2735              		.loc 1 1417 0 discriminator 1
ARM GAS  /tmp/ccYSNOoy.s 			page 84


 2736 0098 9842     		cmp	r0, r3
 2737 009a E5D1     		bne	.L287
1420:SYS/shell/shell.c ****                 {
 2738              		.loc 1 1420 0
 2739 009c B9F1000F 		cmp	r9, #0
 2740 00a0 DCD0     		beq	.L288
1422:SYS/shell/shell.c ****                     {
 2741              		.loc 1 1422 0
 2742 00a2 B9F1010F 		cmp	r9, #1
 2743 00a6 C3D1     		bne	.L289
1424:SYS/shell/shell.c ****                     }
 2744              		.loc 1 1424 0
 2745 00a8 1949     		ldr	r1, .L297
 2746 00aa 2846     		mov	r0, r5
 2747 00ac FFF7FEFF 		bl	shellWriteString
 2748              	.LVL307:
 2749 00b0 BEE7     		b	.L289
 2750              	.L295:
 2751              	.LBE18:
1436:SYS/shell/shell.c ****         {
 2752              		.loc 1 1436 0
 2753 00b2 B9F1000F 		cmp	r9, #0
 2754 00b6 24D0     		beq	.L283
1440:SYS/shell/shell.c ****         {
 2755              		.loc 1 1440 0
 2756 00b8 B9F1010F 		cmp	r9, #1
 2757 00bc 23D0     		beq	.L296
 2758              	.L291:
1447:SYS/shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
 2759              		.loc 1 1447 0
 2760 00be 2C69     		ldr	r4, [r5, #16]
 2761              	.LVL308:
1448:SYS/shell/shell.c ****         }
 2762              		.loc 1 1448 0
 2763 00c0 07EB0810 		add	r0, r7, r8, lsl #4
 2764 00c4 FFF7FEFF 		bl	shellGetCommandName
 2765              	.LVL309:
1447:SYS/shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
 2766              		.loc 1 1447 0
 2767 00c8 0146     		mov	r1, r0
 2768 00ca 2046     		mov	r0, r4
 2769 00cc FFF7FEFF 		bl	shellStringCopy
 2770              	.LVL310:
1446:SYS/shell/shell.c ****                 shellStringCopy(shell->parser.buffer,
 2771              		.loc 1 1446 0
 2772 00d0 A881     		strh	r0, [r5, #12]	@ movhi
1450:SYS/shell/shell.c ****         {
 2773              		.loc 1 1450 0
 2774 00d2 B9F1010F 		cmp	r9, #1
 2775 00d6 0AD9     		bls	.L292
1452:SYS/shell/shell.c ****             shellWriteCommandLine(shell, 1);
 2776              		.loc 1 1452 0
 2777 00d8 07EB0811 		add	r1, r7, r8, lsl #4
 2778 00dc 2846     		mov	r0, r5
 2779 00de FFF7FEFF 		bl	shellListItem
 2780              	.LVL311:
1453:SYS/shell/shell.c ****             shell->parser.length = maxMatch;
ARM GAS  /tmp/ccYSNOoy.s 			page 85


 2781              		.loc 1 1453 0
 2782 00e2 0121     		movs	r1, #1
 2783 00e4 2846     		mov	r0, r5
 2784 00e6 FFF7FEFF 		bl	shellWriteCommandLine
 2785              	.LVL312:
1454:SYS/shell/shell.c ****         }
 2786              		.loc 1 1454 0
 2787 00ea A5F80CA0 		strh	r10, [r5, #12]	@ movhi
 2788              	.L292:
1456:SYS/shell/shell.c ****         shell->parser.cursor = shell->parser.length;
 2789              		.loc 1 1456 0
 2790 00ee 2A69     		ldr	r2, [r5, #16]
 2791 00f0 AB89     		ldrh	r3, [r5, #12]
 2792 00f2 0021     		movs	r1, #0
 2793 00f4 D154     		strb	r1, [r2, r3]
1457:SYS/shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2794              		.loc 1 1457 0
 2795 00f6 AB89     		ldrh	r3, [r5, #12]
 2796 00f8 EB81     		strh	r3, [r5, #14]	@ movhi
1458:SYS/shell/shell.c ****     }
 2797              		.loc 1 1458 0
 2798 00fa 2969     		ldr	r1, [r5, #16]
 2799 00fc 2846     		mov	r0, r5
 2800 00fe FFF7FEFF 		bl	shellWriteString
 2801              	.LVL313:
 2802              	.L283:
 2803 0102 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2804              	.LVL314:
 2805              	.L296:
1442:SYS/shell/shell.c ****         }
 2806              		.loc 1 1442 0
 2807 0106 2846     		mov	r0, r5
 2808 0108 FFF7FEFF 		bl	shellClearCommandLine
 2809              	.LVL315:
 2810 010c D7E7     		b	.L291
 2811              	.L298:
 2812 010e 00BF     		.align	2
 2813              	.L297:
 2814 0110 04000000 		.word	.LC3
 2815              	.LBE20:
 2816              		.cfi_endproc
 2817              	.LFE169:
 2819              		.section	.text.shellInsertByte,"ax",%progbits
 2820              		.align	1
 2821              		.global	shellInsertByte
 2822              		.syntax unified
 2823              		.thumb
 2824              		.thumb_func
 2825              		.fpu fpv4-sp-d16
 2827              	shellInsertByte:
 2828              	.LFB148:
 730:SYS/shell/shell.c ****     /* 判断输入数据是否过长 */
 2829              		.loc 1 730 0
 2830              		.cfi_startproc
 2831              		@ args = 0, pretend = 0, frame = 0
 2832              		@ frame_needed = 0, uses_anonymous_args = 0
 2833              	.LVL316:
ARM GAS  /tmp/ccYSNOoy.s 			page 86


 2834 0000 70B5     		push	{r4, r5, r6, lr}
 2835              	.LCFI55:
 2836              		.cfi_def_cfa_offset 16
 2837              		.cfi_offset 4, -16
 2838              		.cfi_offset 5, -12
 2839              		.cfi_offset 6, -8
 2840              		.cfi_offset 14, -4
 2841 0002 0446     		mov	r4, r0
 732:SYS/shell/shell.c ****     {
 2842              		.loc 1 732 0
 2843 0004 8389     		ldrh	r3, [r0, #12]
 2844 0006 828E     		ldrh	r2, [r0, #52]
 2845 0008 013A     		subs	r2, r2, #1
 2846 000a 9342     		cmp	r3, r2
 2847 000c 07DA     		bge	.L310
 741:SYS/shell/shell.c ****     {
 2848              		.loc 1 741 0
 2849 000e C289     		ldrh	r2, [r0, #14]
 2850 0010 9342     		cmp	r3, r2
 2851 0012 10D0     		beq	.L311
 748:SYS/shell/shell.c ****     {
 2852              		.loc 1 748 0
 2853 0014 9342     		cmp	r3, r2
 2854 0016 4ED9     		bls	.L299
 2855              	.LBB21:
 750:SYS/shell/shell.c ****         {
 2856              		.loc 1 750 0
 2857 0018 9B1A     		subs	r3, r3, r2
 2858 001a 1BB2     		sxth	r3, r3
 2859              	.LVL317:
 2860 001c 23E0     		b	.L303
 2861              	.LVL318:
 2862              	.L310:
 2863              	.LBE21:
 734:SYS/shell/shell.c ****         shellWriteCommandLine(shell, 1);
 2864              		.loc 1 734 0
 2865 001e 2649     		ldr	r1, .L312
 2866              	.LVL319:
 2867 0020 FFF7FEFF 		bl	shellWriteString
 2868              	.LVL320:
 735:SYS/shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2869              		.loc 1 735 0
 2870 0024 0121     		movs	r1, #1
 2871 0026 2046     		mov	r0, r4
 2872 0028 FFF7FEFF 		bl	shellWriteCommandLine
 2873              	.LVL321:
 736:SYS/shell/shell.c ****         return;
 2874              		.loc 1 736 0
 2875 002c 2169     		ldr	r1, [r4, #16]
 2876 002e 2046     		mov	r0, r4
 2877 0030 FFF7FEFF 		bl	shellWriteString
 2878              	.LVL322:
 737:SYS/shell/shell.c ****     }
 2879              		.loc 1 737 0
 2880 0034 70BD     		pop	{r4, r5, r6, pc}
 2881              	.LVL323:
 2882              	.L311:
ARM GAS  /tmp/ccYSNOoy.s 			page 87


 743:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 2883              		.loc 1 743 0
 2884 0036 0269     		ldr	r2, [r0, #16]
 2885 0038 581C     		adds	r0, r3, #1
 2886              	.LVL324:
 2887 003a A081     		strh	r0, [r4, #12]	@ movhi
 2888 003c D154     		strb	r1, [r2, r3]
 744:SYS/shell/shell.c ****         shell->parser.cursor++;
 2889              		.loc 1 744 0
 2890 003e 2269     		ldr	r2, [r4, #16]
 2891 0040 A389     		ldrh	r3, [r4, #12]
 2892 0042 0020     		movs	r0, #0
 2893 0044 D054     		strb	r0, [r2, r3]
 745:SYS/shell/shell.c ****         shellWriteByte(shell, data);
 2894              		.loc 1 745 0
 2895 0046 E389     		ldrh	r3, [r4, #14]
 2896 0048 0133     		adds	r3, r3, #1
 2897 004a E381     		strh	r3, [r4, #14]	@ movhi
 746:SYS/shell/shell.c ****     }
 2898              		.loc 1 746 0
 2899 004c 2046     		mov	r0, r4
 2900 004e FFF7FEFF 		bl	shellWriteByte
 2901              	.LVL325:
 2902 0052 70BD     		pop	{r4, r5, r6, pc}
 2903              	.LVL326:
 2904              	.L304:
 2905              	.LBB22:
 752:SYS/shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 2906              		.loc 1 752 0 discriminator 3
 2907 0054 2069     		ldr	r0, [r4, #16]
 2908 0056 E289     		ldrh	r2, [r4, #14]
 2909 0058 1A44     		add	r2, r2, r3
 2910 005a 8518     		adds	r5, r0, r2
 753:SYS/shell/shell.c ****         }
 2911              		.loc 1 753 0 discriminator 3
 2912 005c 15F8015C 		ldrb	r5, [r5, #-1]	@ zero_extendqisi2
 752:SYS/shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 2913              		.loc 1 752 0 discriminator 3
 2914 0060 8554     		strb	r5, [r0, r2]
 750:SYS/shell/shell.c ****         {
 2915              		.loc 1 750 0 discriminator 3
 2916 0062 013B     		subs	r3, r3, #1
 2917              	.LVL327:
 2918 0064 1BB2     		sxth	r3, r3
 2919              	.LVL328:
 2920              	.L303:
 750:SYS/shell/shell.c ****         {
 2921              		.loc 1 750 0 is_stmt 0 discriminator 1
 2922 0066 002B     		cmp	r3, #0
 2923 0068 F4DC     		bgt	.L304
 2924              	.LBE22:
 755:SYS/shell/shell.c ****         shell->parser.buffer[++shell->parser.length] = 0;
 2925              		.loc 1 755 0 is_stmt 1
 2926 006a 2269     		ldr	r2, [r4, #16]
 2927 006c E389     		ldrh	r3, [r4, #14]
 2928              	.LVL329:
 2929 006e 581C     		adds	r0, r3, #1
ARM GAS  /tmp/ccYSNOoy.s 			page 88


 2930 0070 E081     		strh	r0, [r4, #14]	@ movhi
 2931 0072 D154     		strb	r1, [r2, r3]
 756:SYS/shell/shell.c ****         for (short i = shell->parser.cursor - 1; i < shell->parser.length; i++)
 2932              		.loc 1 756 0
 2933 0074 2269     		ldr	r2, [r4, #16]
 2934 0076 A389     		ldrh	r3, [r4, #12]
 2935 0078 0133     		adds	r3, r3, #1
 2936 007a 9BB2     		uxth	r3, r3
 2937 007c A381     		strh	r3, [r4, #12]	@ movhi
 2938 007e 0021     		movs	r1, #0
 2939              	.LVL330:
 2940 0080 D154     		strb	r1, [r2, r3]
 2941              	.LBB23:
 757:SYS/shell/shell.c ****         {
 2942              		.loc 1 757 0
 2943 0082 E689     		ldrh	r6, [r4, #14]
 2944 0084 013E     		subs	r6, r6, #1
 2945 0086 36B2     		sxth	r6, r6
 2946              	.LVL331:
 2947 0088 06E0     		b	.L305
 2948              	.L306:
 759:SYS/shell/shell.c ****         }
 2949              		.loc 1 759 0 discriminator 3
 2950 008a 2369     		ldr	r3, [r4, #16]
 2951 008c 995D     		ldrb	r1, [r3, r6]	@ zero_extendqisi2
 2952 008e 2046     		mov	r0, r4
 2953 0090 FFF7FEFF 		bl	shellWriteByte
 2954              	.LVL332:
 757:SYS/shell/shell.c ****         {
 2955              		.loc 1 757 0 discriminator 3
 2956 0094 0136     		adds	r6, r6, #1
 2957              	.LVL333:
 2958 0096 36B2     		sxth	r6, r6
 2959              	.LVL334:
 2960              	.L305:
 757:SYS/shell/shell.c ****         {
 2961              		.loc 1 757 0 is_stmt 0 discriminator 1
 2962 0098 A589     		ldrh	r5, [r4, #12]
 2963 009a AE42     		cmp	r6, r5
 2964 009c F5DB     		blt	.L306
 2965              	.LBE23:
 2966              	.LBB24:
 761:SYS/shell/shell.c ****         {
 2967              		.loc 1 761 0 is_stmt 1
 2968 009e E389     		ldrh	r3, [r4, #14]
 2969 00a0 ED1A     		subs	r5, r5, r3
 2970 00a2 2DB2     		sxth	r5, r5
 2971              	.LVL335:
 2972 00a4 05E0     		b	.L307
 2973              	.L308:
 763:SYS/shell/shell.c ****         }
 2974              		.loc 1 763 0 discriminator 3
 2975 00a6 0821     		movs	r1, #8
 2976 00a8 2046     		mov	r0, r4
 2977 00aa FFF7FEFF 		bl	shellWriteByte
 2978              	.LVL336:
 761:SYS/shell/shell.c ****         {
ARM GAS  /tmp/ccYSNOoy.s 			page 89


 2979              		.loc 1 761 0 discriminator 3
 2980 00ae 013D     		subs	r5, r5, #1
 2981              	.LVL337:
 2982 00b0 2DB2     		sxth	r5, r5
 2983              	.LVL338:
 2984              	.L307:
 761:SYS/shell/shell.c ****         {
 2985              		.loc 1 761 0 is_stmt 0 discriminator 1
 2986 00b2 002D     		cmp	r5, #0
 2987 00b4 F7DC     		bgt	.L308
 2988              	.LVL339:
 2989              	.L299:
 2990 00b6 70BD     		pop	{r4, r5, r6, pc}
 2991              	.LVL340:
 2992              	.L313:
 2993              		.align	2
 2994              	.L312:
 2995 00b8 00000000 		.word	.LC21
 2996              	.LBE24:
 2997              		.cfi_endproc
 2998              	.LFE148:
 3000              		.section	.text.shellDeleteByte,"ax",%progbits
 3001              		.align	1
 3002              		.global	shellDeleteByte
 3003              		.syntax unified
 3004              		.thumb
 3005              		.thumb_func
 3006              		.fpu fpv4-sp-d16
 3008              	shellDeleteByte:
 3009              	.LFB149:
 775:SYS/shell/shell.c ****     char offset = (direction == -1) ? 1 : 0;
 3010              		.loc 1 775 0 is_stmt 1
 3011              		.cfi_startproc
 3012              		@ args = 0, pretend = 0, frame = 0
 3013              		@ frame_needed = 0, uses_anonymous_args = 0
 3014              	.LVL341:
 3015 0000 38B5     		push	{r3, r4, r5, lr}
 3016              	.LCFI56:
 3017              		.cfi_def_cfa_offset 16
 3018              		.cfi_offset 3, -16
 3019              		.cfi_offset 4, -12
 3020              		.cfi_offset 5, -8
 3021              		.cfi_offset 14, -4
 776:SYS/shell/shell.c **** 
 3022              		.loc 1 776 0
 3023 0002 B1F1FF3F 		cmp	r1, #-1
 3024 0006 14BF     		ite	ne
 3025 0008 0023     		movne	r3, #0
 3026 000a 0123     		moveq	r3, #1
 3027              	.LVL342:
 778:SYS/shell/shell.c ****     {
 3028              		.loc 1 778 0
 3029 000c C289     		ldrh	r2, [r0, #14]
 3030 000e 0AB9     		cbnz	r2, .L315
 778:SYS/shell/shell.c ****     {
 3031              		.loc 1 778 0 is_stmt 0 discriminator 1
 3032 0010 0129     		cmp	r1, #1
ARM GAS  /tmp/ccYSNOoy.s 			page 90


 3033 0012 54D0     		beq	.L314
 3034              	.L315:
 778:SYS/shell/shell.c ****     {
 3035              		.loc 1 778 0 discriminator 3
 3036 0014 8589     		ldrh	r5, [r0, #12]
 3037 0016 AA42     		cmp	r2, r5
 3038 0018 04D0     		beq	.L327
 3039              	.L317:
 3040 001a 0446     		mov	r4, r0
 782:SYS/shell/shell.c ****     {
 3041              		.loc 1 782 0 is_stmt 1
 3042 001c AA42     		cmp	r2, r5
 3043 001e 05D0     		beq	.L328
 3044              	.L318:
 3045              	.LBB25:
 791:SYS/shell/shell.c ****         {
 3046              		.loc 1 791 0
 3047 0020 1BB2     		sxth	r3, r3
 3048              	.LVL343:
 3049 0022 18E0     		b	.L319
 3050              	.LVL344:
 3051              	.L327:
 3052              	.LBE25:
 778:SYS/shell/shell.c ****     {
 3053              		.loc 1 778 0 discriminator 4
 3054 0024 B1F1FF3F 		cmp	r1, #-1
 3055 0028 F7D1     		bne	.L317
 3056 002a 48E0     		b	.L314
 3057              	.L328:
 782:SYS/shell/shell.c ****     {
 3058              		.loc 1 782 0 discriminator 1
 3059 002c 0129     		cmp	r1, #1
 3060 002e F7D1     		bne	.L318
 784:SYS/shell/shell.c ****         shell->parser.length--;
 3061              		.loc 1 784 0
 3062 0030 013A     		subs	r2, r2, #1
 3063 0032 C281     		strh	r2, [r0, #14]	@ movhi
 785:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 3064              		.loc 1 785 0
 3065 0034 6B1E     		subs	r3, r5, #1
 3066              	.LVL345:
 3067 0036 9BB2     		uxth	r3, r3
 3068 0038 8381     		strh	r3, [r0, #12]	@ movhi
 786:SYS/shell/shell.c ****         shellDeleteCommandLine(shell, 1);
 3069              		.loc 1 786 0
 3070 003a 0269     		ldr	r2, [r0, #16]
 3071 003c 0021     		movs	r1, #0
 3072              	.LVL346:
 3073 003e D154     		strb	r1, [r2, r3]
 787:SYS/shell/shell.c ****     }
 3074              		.loc 1 787 0
 3075 0040 0121     		movs	r1, #1
 3076 0042 FFF7FEFF 		bl	shellDeleteCommandLine
 3077              	.LVL347:
 3078 0046 38BD     		pop	{r3, r4, r5, pc}
 3079              	.LVL348:
 3080              	.L320:
ARM GAS  /tmp/ccYSNOoy.s 			page 91


 3081              	.LBB26:
 793:SYS/shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 3082              		.loc 1 793 0 discriminator 3
 3083 0048 2069     		ldr	r0, [r4, #16]
 3084 004a 1A44     		add	r2, r2, r3
 3085 004c 551E     		subs	r5, r2, #1
 794:SYS/shell/shell.c ****         }
 3086              		.loc 1 794 0 discriminator 3
 3087 004e 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 793:SYS/shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 3088              		.loc 1 793 0 discriminator 3
 3089 0050 4255     		strb	r2, [r0, r5]
 791:SYS/shell/shell.c ****         {
 3090              		.loc 1 791 0 discriminator 3
 3091 0052 0133     		adds	r3, r3, #1
 3092              	.LVL349:
 3093 0054 1BB2     		sxth	r3, r3
 3094              	.LVL350:
 3095              	.L319:
 791:SYS/shell/shell.c ****         {
 3096              		.loc 1 791 0 is_stmt 0 discriminator 1
 3097 0056 A089     		ldrh	r0, [r4, #12]
 3098 0058 E289     		ldrh	r2, [r4, #14]
 3099 005a 851A     		subs	r5, r0, r2
 3100 005c AB42     		cmp	r3, r5
 3101 005e F3DB     		blt	.L320
 3102              	.LBE26:
 796:SYS/shell/shell.c ****         if (!offset)
 3103              		.loc 1 796 0 is_stmt 1
 3104 0060 0138     		subs	r0, r0, #1
 3105 0062 A081     		strh	r0, [r4, #12]	@ movhi
 797:SYS/shell/shell.c ****         {
 3106              		.loc 1 797 0
 3107 0064 B1F1FF3F 		cmp	r1, #-1
 3108 0068 05D0     		beq	.L321
 799:SYS/shell/shell.c ****             shellWriteByte(shell, '\b');
 3109              		.loc 1 799 0
 3110 006a 013A     		subs	r2, r2, #1
 3111 006c E281     		strh	r2, [r4, #14]	@ movhi
 800:SYS/shell/shell.c ****         }
 3112              		.loc 1 800 0
 3113 006e 0821     		movs	r1, #8
 3114              	.LVL351:
 3115 0070 2046     		mov	r0, r4
 3116 0072 FFF7FEFF 		bl	shellWriteByte
 3117              	.LVL352:
 3118              	.L321:
 802:SYS/shell/shell.c ****         for (short i = shell->parser.cursor; i < shell->parser.length; i++)
 3119              		.loc 1 802 0
 3120 0076 2269     		ldr	r2, [r4, #16]
 3121 0078 A389     		ldrh	r3, [r4, #12]
 3122 007a 0021     		movs	r1, #0
 3123 007c D154     		strb	r1, [r2, r3]
 3124              	.LBB27:
 803:SYS/shell/shell.c ****         {
 3125              		.loc 1 803 0
 3126 007e B4F90E50 		ldrsh	r5, [r4, #14]
ARM GAS  /tmp/ccYSNOoy.s 			page 92


 3127              	.LVL353:
 3128 0082 06E0     		b	.L322
 3129              	.L323:
 805:SYS/shell/shell.c ****         }
 3130              		.loc 1 805 0 discriminator 3
 3131 0084 2369     		ldr	r3, [r4, #16]
 3132 0086 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 3133 0088 2046     		mov	r0, r4
 3134 008a FFF7FEFF 		bl	shellWriteByte
 3135              	.LVL354:
 803:SYS/shell/shell.c ****         {
 3136              		.loc 1 803 0 discriminator 3
 3137 008e 0135     		adds	r5, r5, #1
 3138              	.LVL355:
 3139 0090 2DB2     		sxth	r5, r5
 3140              	.LVL356:
 3141              	.L322:
 803:SYS/shell/shell.c ****         {
 3142              		.loc 1 803 0 is_stmt 0 discriminator 1
 3143 0092 A389     		ldrh	r3, [r4, #12]
 3144 0094 9D42     		cmp	r5, r3
 3145 0096 F5DB     		blt	.L323
 3146              	.LBE27:
 807:SYS/shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor + 1; i > 0; i--)
 3147              		.loc 1 807 0 is_stmt 1
 3148 0098 2021     		movs	r1, #32
 3149 009a 2046     		mov	r0, r4
 3150 009c FFF7FEFF 		bl	shellWriteByte
 3151              	.LVL357:
 3152              	.LBB28:
 808:SYS/shell/shell.c ****         {
 3153              		.loc 1 808 0
 3154 00a0 A589     		ldrh	r5, [r4, #12]
 3155              	.LVL358:
 3156 00a2 E389     		ldrh	r3, [r4, #14]
 3157 00a4 ED1A     		subs	r5, r5, r3
 3158 00a6 ADB2     		uxth	r5, r5
 3159 00a8 0135     		adds	r5, r5, #1
 3160 00aa 2DB2     		sxth	r5, r5
 3161              	.LVL359:
 3162 00ac 05E0     		b	.L324
 3163              	.L325:
 810:SYS/shell/shell.c ****         }
 3164              		.loc 1 810 0 discriminator 3
 3165 00ae 0821     		movs	r1, #8
 3166 00b0 2046     		mov	r0, r4
 3167 00b2 FFF7FEFF 		bl	shellWriteByte
 3168              	.LVL360:
 808:SYS/shell/shell.c ****         {
 3169              		.loc 1 808 0 discriminator 3
 3170 00b6 013D     		subs	r5, r5, #1
 3171              	.LVL361:
 3172 00b8 2DB2     		sxth	r5, r5
 3173              	.LVL362:
 3174              	.L324:
 808:SYS/shell/shell.c ****         {
 3175              		.loc 1 808 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccYSNOoy.s 			page 93


 3176 00ba 002D     		cmp	r5, #0
 3177 00bc F7DC     		bgt	.L325
 3178              	.LVL363:
 3179              	.L314:
 3180 00be 38BD     		pop	{r3, r4, r5, pc}
 3181              	.LBE28:
 3182              		.cfi_endproc
 3183              	.LFE149:
 3185              		.section	.text.shellBackspace,"ax",%progbits
 3186              		.align	1
 3187              		.global	shellBackspace
 3188              		.syntax unified
 3189              		.thumb
 3190              		.thumb_func
 3191              		.fpu fpv4-sp-d16
 3193              	shellBackspace:
 3194              	.LFB170:
1490:SYS/shell/shell.c ****     shellDeleteByte(shell, 1);
 3195              		.loc 1 1490 0 is_stmt 1
 3196              		.cfi_startproc
 3197              		@ args = 0, pretend = 0, frame = 0
 3198              		@ frame_needed = 0, uses_anonymous_args = 0
 3199              	.LVL364:
 3200 0000 08B5     		push	{r3, lr}
 3201              	.LCFI57:
 3202              		.cfi_def_cfa_offset 8
 3203              		.cfi_offset 3, -8
 3204              		.cfi_offset 14, -4
1491:SYS/shell/shell.c **** }
 3205              		.loc 1 1491 0
 3206 0002 0121     		movs	r1, #1
 3207 0004 FFF7FEFF 		bl	shellDeleteByte
 3208              	.LVL365:
 3209 0008 08BD     		pop	{r3, pc}
 3210              		.cfi_endproc
 3211              	.LFE170:
 3213              		.section	.text.shellDelete,"ax",%progbits
 3214              		.align	1
 3215              		.global	shellDelete
 3216              		.syntax unified
 3217              		.thumb
 3218              		.thumb_func
 3219              		.fpu fpv4-sp-d16
 3221              	shellDelete:
 3222              	.LFB171:
1504:SYS/shell/shell.c ****     shellDeleteByte(shell, -1);
 3223              		.loc 1 1504 0
 3224              		.cfi_startproc
 3225              		@ args = 0, pretend = 0, frame = 0
 3226              		@ frame_needed = 0, uses_anonymous_args = 0
 3227              	.LVL366:
 3228 0000 08B5     		push	{r3, lr}
 3229              	.LCFI58:
 3230              		.cfi_def_cfa_offset 8
 3231              		.cfi_offset 3, -8
 3232              		.cfi_offset 14, -4
1505:SYS/shell/shell.c **** }
ARM GAS  /tmp/ccYSNOoy.s 			page 94


 3233              		.loc 1 1505 0
 3234 0002 4FF0FF31 		mov	r1, #-1
 3235 0006 FFF7FEFF 		bl	shellDeleteByte
 3236              	.LVL367:
 3237 000a 08BD     		pop	{r3, pc}
 3238              		.cfi_endproc
 3239              	.LFE171:
 3241              		.section	.text.shellSeekCommand,"ax",%progbits
 3242              		.align	1
 3243              		.global	shellSeekCommand
 3244              		.syntax unified
 3245              		.thumb
 3246              		.thumb_func
 3247              		.fpu fpv4-sp-d16
 3249              	shellSeekCommand:
 3250              	.LFB152:
 897:SYS/shell/shell.c ****     const char *name;
 3251              		.loc 1 897 0
 3252              		.cfi_startproc
 3253              		@ args = 0, pretend = 0, frame = 0
 3254              		@ frame_needed = 0, uses_anonymous_args = 0
 3255              	.LVL368:
 3256 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3257              	.LCFI59:
 3258              		.cfi_def_cfa_offset 32
 3259              		.cfi_offset 4, -32
 3260              		.cfi_offset 5, -28
 3261              		.cfi_offset 6, -24
 3262              		.cfi_offset 7, -20
 3263              		.cfi_offset 8, -16
 3264              		.cfi_offset 9, -12
 3265              		.cfi_offset 10, -8
 3266              		.cfi_offset 14, -4
 3267 0004 8046     		mov	r8, r0
 3268 0006 8A46     		mov	r10, r1
 3269 0008 1746     		mov	r7, r2
 3270 000a 9946     		mov	r9, r3
 900:SYS/shell/shell.c ****                            ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 3271              		.loc 1 900 0
 3272 000c B0F85C60 		ldrh	r6, [r0, #92]
 901:SYS/shell/shell.c ****     for (unsigned short i = 0; i < count; i++)
 3273              		.loc 1 901 0
 3274 0010 836D     		ldr	r3, [r0, #88]
 3275              	.LVL369:
 3276 0012 D31A     		subs	r3, r2, r3
 900:SYS/shell/shell.c ****                            ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 3277              		.loc 1 900 0
 3278 0014 C3F30F13 		ubfx	r3, r3, #4, #16
 3279 0018 F31A     		subs	r3, r6, r3
 3280 001a 9EB2     		uxth	r6, r3
 3281              	.LVL370:
 3282              	.LBB29:
 902:SYS/shell/shell.c ****     {
 3283              		.loc 1 902 0
 3284 001c 0024     		movs	r4, #0
 3285 001e 06E0     		b	.L334
 3286              	.LVL371:
ARM GAS  /tmp/ccYSNOoy.s 			page 95


 3287              	.L336:
 919:SYS/shell/shell.c ****             {
 3288              		.loc 1 919 0
 3289 0020 4A46     		mov	r2, r9
 3290 0022 5046     		mov	r0, r10
 3291              	.LVL372:
 3292 0024 FFF7FEFF 		bl	strncmp
 3293              	.LVL373:
 3294 0028 F0B1     		cbz	r0, .L333
 3295              	.L335:
 902:SYS/shell/shell.c ****     {
 3296              		.loc 1 902 0 discriminator 2
 3297 002a 0134     		adds	r4, r4, #1
 3298              	.LVL374:
 3299 002c A4B2     		uxth	r4, r4
 3300              	.LVL375:
 3301              	.L334:
 902:SYS/shell/shell.c ****     {
 3302              		.loc 1 902 0 is_stmt 0 discriminator 1
 3303 002e B442     		cmp	r4, r6
 3304 0030 19D2     		bcs	.L340
 904:SYS/shell/shell.c ****         {
 3305              		.loc 1 904 0 is_stmt 1
 3306 0032 07EB0415 		add	r5, r7, r4, lsl #4
 3307 0036 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3308 0038 03F00F03 		and	r3, r3, #15
 3309 003c 092B     		cmp	r3, #9
 3310 003e F4D0     		beq	.L335
 904:SYS/shell/shell.c ****         {
 3311              		.loc 1 904 0 is_stmt 0 discriminator 1
 3312 0040 2946     		mov	r1, r5
 3313 0042 4046     		mov	r0, r8
 3314 0044 FFF7FEFF 		bl	shellCheckPermission
 3315              	.LVL376:
 3316 0048 0028     		cmp	r0, #0
 3317 004a EED1     		bne	.L335
 908:SYS/shell/shell.c ****         if (!compareLength)
 3318              		.loc 1 908 0 is_stmt 1
 3319 004c 2846     		mov	r0, r5
 3320 004e FFF7FEFF 		bl	shellGetCommandName
 3321              	.LVL377:
 3322 0052 0146     		mov	r1, r0
 3323              	.LVL378:
 909:SYS/shell/shell.c ****         {
 3324              		.loc 1 909 0
 3325 0054 B9F1000F 		cmp	r9, #0
 3326 0058 E2D1     		bne	.L336
 911:SYS/shell/shell.c ****             if (strcmp(cmd, name) == 0)
 3327              		.loc 1 911 0
 3328 005a 5046     		mov	r0, r10
 3329              	.LVL379:
 3330 005c FFF7FEFF 		bl	strcmp
 3331              	.LVL380:
 912:SYS/shell/shell.c ****             {
 3332              		.loc 1 912 0
 3333 0060 0028     		cmp	r0, #0
 3334 0062 E2D1     		bne	.L335
ARM GAS  /tmp/ccYSNOoy.s 			page 96


 3335 0064 00E0     		b	.L333
 3336              	.LVL381:
 3337              	.L340:
 3338              	.LBE29:
 925:SYS/shell/shell.c **** }
 3339              		.loc 1 925 0
 3340 0066 0025     		movs	r5, #0
 3341              	.L333:
 926:SYS/shell/shell.c **** 
 3342              		.loc 1 926 0
 3343 0068 2846     		mov	r0, r5
 3344 006a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3345              		.cfi_endproc
 3346              	.LFE152:
 3348              		.section	.text.shellInit,"ax",%progbits
 3349              		.align	1
 3350              		.global	shellInit
 3351              		.syntax unified
 3352              		.thumb
 3353              		.thumb_func
 3354              		.fpu fpv4-sp-d16
 3356              	shellInit:
 3357              	.LFB124:
 164:SYS/shell/shell.c ****     __asm("cpsid i");
 3358              		.loc 1 164 0
 3359              		.cfi_startproc
 3360              		@ args = 0, pretend = 0, frame = 0
 3361              		@ frame_needed = 0, uses_anonymous_args = 0
 3362              	.LVL382:
 3363 0000 38B5     		push	{r3, r4, r5, lr}
 3364              	.LCFI60:
 3365              		.cfi_def_cfa_offset 16
 3366              		.cfi_offset 3, -16
 3367              		.cfi_offset 4, -12
 3368              		.cfi_offset 5, -8
 3369              		.cfi_offset 14, -4
 3370 0002 0446     		mov	r4, r0
 165:SYS/shell/shell.c ****     shell->parser.length = 0;
 3371              		.loc 1 165 0
 3372              		.syntax unified
 3373              	@ 165 "SYS/shell/shell.c" 1
 3374 0004 72B6     		cpsid i
 3375              	@ 0 "" 2
 166:SYS/shell/shell.c ****     shell->parser.cursor = 0;
 3376              		.loc 1 166 0
 3377              		.thumb
 3378              		.syntax unified
 3379 0006 0023     		movs	r3, #0
 3380 0008 8381     		strh	r3, [r0, #12]	@ movhi
 167:SYS/shell/shell.c ****     shell->history.offset = 0;
 3381              		.loc 1 167 0
 3382 000a C381     		strh	r3, [r0, #14]	@ movhi
 168:SYS/shell/shell.c ****     shell->history.number = 0;
 3383              		.loc 1 168 0
 3384 000c A0F85430 		strh	r3, [r0, #84]	@ movhi
 169:SYS/shell/shell.c ****     shell->history.record = 0;
 3385              		.loc 1 169 0
ARM GAS  /tmp/ccYSNOoy.s 			page 97


 3386 0010 A0F85030 		strh	r3, [r0, #80]	@ movhi
 170:SYS/shell/shell.c ****     shell->info.user = NULL;
 3387              		.loc 1 170 0
 3388 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
 171:SYS/shell/shell.c ****     shell->status.isChecked = 1;
 3389              		.loc 1 171 0
 3390 0018 0360     		str	r3, [r0]
 172:SYS/shell/shell.c **** 
 3391              		.loc 1 172 0
 3392 001a 90F86000 		ldrb	r0, [r0, #96]	@ zero_extendqisi2
 3393              	.LVL383:
 3394 001e 40F00100 		orr	r0, r0, #1
 3395 0022 84F86000 		strb	r0, [r4, #96]
 174:SYS/shell/shell.c ****     shell->parser.bufferSize = size / (SHELL_HISTORY_MAX_NUMBER + 1);
 3396              		.loc 1 174 0
 3397 0026 2161     		str	r1, [r4, #16]
 175:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_HISTORY_MAX_NUMBER; i++)
 3398              		.loc 1 175 0
 3399 0028 154D     		ldr	r5, .L345
 3400 002a A5FB0225 		umull	r2, r5, r5, r2
 3401              	.LVL384:
 3402 002e AD08     		lsrs	r5, r5, #2
 3403 0030 A586     		strh	r5, [r4, #52]	@ movhi
 3404              	.LVL385:
 3405              	.LBB30:
 176:SYS/shell/shell.c ****     {
 3406              		.loc 1 176 0
 3407 0032 09E0     		b	.L342
 3408              	.LVL386:
 3409              	.L343:
 178:SYS/shell/shell.c ****     }
 3410              		.loc 1 178 0 discriminator 3
 3411 0034 03FB0550 		mla	r0, r3, r5, r5
 3412 0038 0844     		add	r0, r0, r1
 3413 003a 03F10E02 		add	r2, r3, #14
 3414 003e 04EB8202 		add	r2, r4, r2, lsl #2
 3415 0042 5060     		str	r0, [r2, #4]
 176:SYS/shell/shell.c ****     {
 3416              		.loc 1 176 0 discriminator 3
 3417 0044 0133     		adds	r3, r3, #1
 3418              	.LVL387:
 3419 0046 1BB2     		sxth	r3, r3
 3420              	.LVL388:
 3421              	.L342:
 176:SYS/shell/shell.c ****     {
 3422              		.loc 1 176 0 is_stmt 0 discriminator 1
 3423 0048 042B     		cmp	r3, #4
 3424 004a F3DD     		ble	.L343
 3425              	.LBE30:
 190:SYS/shell/shell.c ****     shell->commandList.count = ((unsigned int)(&_shell_command_end) - (unsigned int)(&_shell_comman
 3426              		.loc 1 190 0 is_stmt 1
 3427 004c 0D4A     		ldr	r2, .L345+4
 3428 004e A265     		str	r2, [r4, #88]
 191:SYS/shell/shell.c **** #else
 3429              		.loc 1 191 0
 3430 0050 0D4B     		ldr	r3, .L345+8
 3431              	.LVL389:
ARM GAS  /tmp/ccYSNOoy.s 			page 98


 3432 0052 9B1A     		subs	r3, r3, r2
 3433 0054 1B09     		lsrs	r3, r3, #4
 3434 0056 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 200:SYS/shell/shell.c **** 
 3435              		.loc 1 200 0
 3436 005a 2046     		mov	r0, r4
 3437 005c FFF7FEFF 		bl	shellAdd
 3438              	.LVL390:
 202:SYS/shell/shell.c ****                                          SHELL_DEFAULT_USER,
 3439              		.loc 1 202 0
 3440 0060 0023     		movs	r3, #0
 3441 0062 A26D     		ldr	r2, [r4, #88]
 3442 0064 0949     		ldr	r1, .L345+12
 3443 0066 2046     		mov	r0, r4
 3444 0068 FFF7FEFF 		bl	shellSeekCommand
 3445              	.LVL391:
 3446 006c 0146     		mov	r1, r0
 3447 006e 2046     		mov	r0, r4
 3448 0070 FFF7FEFF 		bl	shellSetUser
 3449              	.LVL392:
 206:SYS/shell/shell.c ****     __asm("cpsie i");
 3450              		.loc 1 206 0
 3451 0074 0121     		movs	r1, #1
 3452 0076 2046     		mov	r0, r4
 3453 0078 FFF7FEFF 		bl	shellWriteCommandLine
 3454              	.LVL393:
 207:SYS/shell/shell.c **** }
 3455              		.loc 1 207 0
 3456              		.syntax unified
 3457              	@ 207 "SYS/shell/shell.c" 1
 3458 007c 62B6     		cpsie i
 3459              	@ 0 "" 2
 3460              		.thumb
 3461              		.syntax unified
 3462 007e 38BD     		pop	{r3, r4, r5, pc}
 3463              	.LVL394:
 3464              	.L346:
 3465              		.align	2
 3466              	.L345:
 3467 0080 ABAAAAAA 		.word	-1431655765
 3468 0084 00000000 		.word	_shell_command_start
 3469 0088 00000000 		.word	_shell_command_end
 3470 008c 00000000 		.word	.LC22
 3471              		.cfi_endproc
 3472              	.LFE124:
 3474              		.section	.text.shellHelp,"ax",%progbits
 3475              		.align	1
 3476              		.global	shellHelp
 3477              		.syntax unified
 3478              		.thumb
 3479              		.thumb_func
 3480              		.fpu fpv4-sp-d16
 3482              	shellHelp:
 3483              	.LFB173:
1540:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 3484              		.loc 1 1540 0
 3485              		.cfi_startproc
ARM GAS  /tmp/ccYSNOoy.s 			page 99


 3486              		@ args = 0, pretend = 0, frame = 0
 3487              		@ frame_needed = 0, uses_anonymous_args = 0
 3488              	.LVL395:
 3489 0000 70B5     		push	{r4, r5, r6, lr}
 3490              	.LCFI61:
 3491              		.cfi_def_cfa_offset 16
 3492              		.cfi_offset 4, -16
 3493              		.cfi_offset 5, -12
 3494              		.cfi_offset 6, -8
 3495              		.cfi_offset 14, -4
 3496 0002 0546     		mov	r5, r0
 3497 0004 0E46     		mov	r6, r1
1541:SYS/shell/shell.c ****     SHELL_ASSERT(shell, return );
 3498              		.loc 1 1541 0
 3499 0006 FFF7FEFF 		bl	shellGetCurrent
 3500              	.LVL396:
1542:SYS/shell/shell.c ****     if (argc == 1)
 3501              		.loc 1 1542 0
 3502 000a 70B3     		cbz	r0, .L347
 3503 000c 0446     		mov	r4, r0
1543:SYS/shell/shell.c ****     {
 3504              		.loc 1 1543 0
 3505 000e 012D     		cmp	r5, #1
 3506 0010 24D0     		beq	.L352
1547:SYS/shell/shell.c ****     {
 3507              		.loc 1 1547 0
 3508 0012 012D     		cmp	r5, #1
 3509 0014 29DD     		ble	.L347
 3510              	.LBB31:
1549:SYS/shell/shell.c ****                                                  argv[1],
 3511              		.loc 1 1549 0
 3512 0016 0023     		movs	r3, #0
 3513 0018 826D     		ldr	r2, [r0, #88]
 3514 001a 7168     		ldr	r1, [r6, #4]
 3515 001c FFF7FEFF 		bl	shellSeekCommand
 3516              	.LVL397:
1553:SYS/shell/shell.c ****         {
 3517              		.loc 1 1553 0
 3518 0020 0546     		mov	r5, r0
 3519              	.LVL398:
 3520 0022 F0B1     		cbz	r0, .L350
1555:SYS/shell/shell.c ****             shellWriteString(shell, shellGetCommandName(command));
 3521              		.loc 1 1555 0
 3522 0024 1149     		ldr	r1, .L353
 3523 0026 2046     		mov	r0, r4
 3524              	.LVL399:
 3525 0028 FFF7FEFF 		bl	shellWriteString
 3526              	.LVL400:
1556:SYS/shell/shell.c ****             shellWriteString(shell, "\r\n");
 3527              		.loc 1 1556 0
 3528 002c 2846     		mov	r0, r5
 3529 002e FFF7FEFF 		bl	shellGetCommandName
 3530              	.LVL401:
 3531 0032 0146     		mov	r1, r0
 3532 0034 2046     		mov	r0, r4
 3533 0036 FFF7FEFF 		bl	shellWriteString
 3534              	.LVL402:
ARM GAS  /tmp/ccYSNOoy.s 			page 100


1557:SYS/shell/shell.c ****             shellWriteString(shell, shellGetCommandDesc(command));
 3535              		.loc 1 1557 0
 3536 003a 0D4E     		ldr	r6, .L353+4
 3537              	.LVL403:
 3538 003c 3146     		mov	r1, r6
 3539 003e 2046     		mov	r0, r4
 3540 0040 FFF7FEFF 		bl	shellWriteString
 3541              	.LVL404:
1558:SYS/shell/shell.c ****             shellWriteString(shell, "\r\n");
 3542              		.loc 1 1558 0
 3543 0044 2846     		mov	r0, r5
 3544 0046 FFF7FEFF 		bl	shellGetCommandDesc
 3545              	.LVL405:
 3546 004a 0146     		mov	r1, r0
 3547 004c 2046     		mov	r0, r4
 3548 004e FFF7FEFF 		bl	shellWriteString
 3549              	.LVL406:
1559:SYS/shell/shell.c ****         }
 3550              		.loc 1 1559 0
 3551 0052 3146     		mov	r1, r6
 3552 0054 2046     		mov	r0, r4
 3553 0056 FFF7FEFF 		bl	shellWriteString
 3554              	.LVL407:
 3555 005a 70BD     		pop	{r4, r5, r6, pc}
 3556              	.LVL408:
 3557              	.L352:
 3558              	.LBE31:
1545:SYS/shell/shell.c ****     }
 3559              		.loc 1 1545 0
 3560 005c FFF7FEFF 		bl	shellListAll
 3561              	.LVL409:
 3562 0060 70BD     		pop	{r4, r5, r6, pc}
 3563              	.LVL410:
 3564              	.L350:
 3565              	.LBB32:
1563:SYS/shell/shell.c ****         }
 3566              		.loc 1 1563 0
 3567 0062 0449     		ldr	r1, .L353+8
 3568 0064 2046     		mov	r0, r4
 3569              	.LVL411:
 3570 0066 FFF7FEFF 		bl	shellWriteString
 3571              	.LVL412:
 3572              	.L347:
 3573 006a 70BD     		pop	{r4, r5, r6, pc}
 3574              	.LVL413:
 3575              	.L354:
 3576              		.align	2
 3577              	.L353:
 3578 006c 00000000 		.word	.LC23
 3579 0070 04000000 		.word	.LC3
 3580 0074 14000000 		.word	.LC24
 3581              	.LBE32:
 3582              		.cfi_endproc
 3583              	.LFE173:
 3585              		.section	.text.shellGetVarValue,"ax",%progbits
 3586              		.align	1
 3587              		.global	shellGetVarValue
ARM GAS  /tmp/ccYSNOoy.s 			page 101


 3588              		.syntax unified
 3589              		.thumb
 3590              		.thumb_func
 3591              		.fpu fpv4-sp-d16
 3593              	shellGetVarValue:
 3594              	.LFB153:
 936:SYS/shell/shell.c ****     int value = 0;
 3595              		.loc 1 936 0
 3596              		.cfi_startproc
 3597              		@ args = 0, pretend = 0, frame = 0
 3598              		@ frame_needed = 0, uses_anonymous_args = 0
 3599              	.LVL414:
 3600 0000 08B5     		push	{r3, lr}
 3601              	.LCFI62:
 3602              		.cfi_def_cfa_offset 8
 3603              		.cfi_offset 3, -8
 3604              		.cfi_offset 14, -4
 3605              	.LVL415:
 938:SYS/shell/shell.c ****     {
 3606              		.loc 1 938 0
 3607 0002 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3608 0004 03F00F03 		and	r3, r3, #15
 3609 0008 023B     		subs	r3, r3, #2
 3610 000a 052B     		cmp	r3, #5
 3611 000c 16D8     		bhi	.L363
 3612 000e DFE803F0 		tbb	[pc, r3]
 3613              	.L358:
 3614 0012 03       		.byte	(.L357-.L358)/2
 3615 0013 06       		.byte	(.L359-.L358)/2
 3616 0014 0A       		.byte	(.L360-.L358)/2
 3617 0015 0D       		.byte	(.L361-.L358)/2
 3618 0016 0D       		.byte	(.L361-.L358)/2
 3619 0017 0F       		.byte	(.L362-.L358)/2
 3620              		.p2align 1
 3621              	.L357:
 941:SYS/shell/shell.c ****         break;
 3622              		.loc 1 941 0
 3623 0018 8B68     		ldr	r3, [r1, #8]
 3624 001a 1868     		ldr	r0, [r3]
 3625              	.LVL416:
 942:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_SHORT:
 3626              		.loc 1 942 0
 3627 001c 08BD     		pop	{r3, pc}
 3628              	.LVL417:
 3629              	.L359:
 944:SYS/shell/shell.c ****         break;
 3630              		.loc 1 944 0
 3631 001e 8B68     		ldr	r3, [r1, #8]
 3632 0020 B3F90000 		ldrsh	r0, [r3]
 3633              	.LVL418:
 945:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_CHAR:
 3634              		.loc 1 945 0
 3635 0024 08BD     		pop	{r3, pc}
 3636              	.LVL419:
 3637              	.L360:
 947:SYS/shell/shell.c ****         break;
 3638              		.loc 1 947 0
ARM GAS  /tmp/ccYSNOoy.s 			page 102


 3639 0026 8B68     		ldr	r3, [r1, #8]
 3640 0028 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3641              	.LVL420:
 948:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
 3642              		.loc 1 948 0
 3643 002a 08BD     		pop	{r3, pc}
 3644              	.LVL421:
 3645              	.L361:
 951:SYS/shell/shell.c ****         break;
 3646              		.loc 1 951 0
 3647 002c 8868     		ldr	r0, [r1, #8]
 3648              	.LVL422:
 952:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_NODE:
 3649              		.loc 1 952 0
 3650 002e 08BD     		pop	{r3, pc}
 3651              	.LVL423:
 3652              	.L362:
 954:SYS/shell/shell.c ****                                                                          ->get(((ShellNodeVarAttr *
 3653              		.loc 1 954 0
 3654 0030 8A68     		ldr	r2, [r1, #8]
 3655 0032 5368     		ldr	r3, [r2, #4]
 956:SYS/shell/shell.c ****         break;
 3656              		.loc 1 956 0
 3657 0034 23B1     		cbz	r3, .L364
 956:SYS/shell/shell.c ****         break;
 3658              		.loc 1 956 0 is_stmt 0 discriminator 1
 3659 0036 1068     		ldr	r0, [r2]
 3660              	.LVL424:
 3661 0038 9847     		blx	r3
 3662              	.LVL425:
 3663 003a 08BD     		pop	{r3, pc}
 3664              	.LVL426:
 3665              	.L363:
 937:SYS/shell/shell.c ****     switch (command->attr.attrs.type)
 3666              		.loc 1 937 0 is_stmt 1
 3667 003c 0020     		movs	r0, #0
 3668              	.LVL427:
 3669 003e 08BD     		pop	{r3, pc}
 3670              	.LVL428:
 3671              	.L364:
 956:SYS/shell/shell.c ****         break;
 3672              		.loc 1 956 0
 3673 0040 0020     		movs	r0, #0
 3674              	.LVL429:
 962:SYS/shell/shell.c **** 
 3675              		.loc 1 962 0
 3676 0042 08BD     		pop	{r3, pc}
 3677              		.cfi_endproc
 3678              	.LFE153:
 3680              		.section	.text.shellShowVar,"ax",%progbits
 3681              		.align	1
 3682              		.syntax unified
 3683              		.thumb
 3684              		.thumb_func
 3685              		.fpu fpv4-sp-d16
 3687              	shellShowVar:
 3688              	.LFB155:
ARM GAS  /tmp/ccYSNOoy.s 			page 103


1026:SYS/shell/shell.c ****     char buffer[12] = "00000000000";
 3689              		.loc 1 1026 0
 3690              		.cfi_startproc
 3691              		@ args = 0, pretend = 0, frame = 16
 3692              		@ frame_needed = 0, uses_anonymous_args = 0
 3693              	.LVL430:
 3694 0000 70B5     		push	{r4, r5, r6, lr}
 3695              	.LCFI63:
 3696              		.cfi_def_cfa_offset 16
 3697              		.cfi_offset 4, -16
 3698              		.cfi_offset 5, -12
 3699              		.cfi_offset 6, -8
 3700              		.cfi_offset 14, -4
 3701 0002 84B0     		sub	sp, sp, #16
 3702              	.LCFI64:
 3703              		.cfi_def_cfa_offset 32
 3704 0004 0446     		mov	r4, r0
 3705 0006 0E46     		mov	r6, r1
1027:SYS/shell/shell.c ****     int value = shellGetVarValue(shell, command);
 3706              		.loc 1 1027 0
 3707 0008 274B     		ldr	r3, .L375
 3708 000a 93E80700 		ldm	r3, {r0, r1, r2}
 3709              	.LVL431:
 3710 000e 04AB     		add	r3, sp, #16
 3711 0010 03E90700 		stmdb	r3, {r0, r1, r2}
1028:SYS/shell/shell.c **** 
 3712              		.loc 1 1028 0
 3713 0014 3146     		mov	r1, r6
 3714 0016 2046     		mov	r0, r4
 3715 0018 FFF7FEFF 		bl	shellGetVarValue
 3716              	.LVL432:
 3717 001c 0546     		mov	r5, r0
 3718              	.LVL433:
1030:SYS/shell/shell.c ****     shellWriteString(shell, " = ");
 3719              		.loc 1 1030 0
 3720 001e 7168     		ldr	r1, [r6, #4]
 3721 0020 2046     		mov	r0, r4
 3722              	.LVL434:
 3723 0022 FFF7FEFF 		bl	shellWriteString
 3724              	.LVL435:
1031:SYS/shell/shell.c **** 
 3725              		.loc 1 1031 0
 3726 0026 2149     		ldr	r1, .L375+4
 3727 0028 2046     		mov	r0, r4
 3728 002a FFF7FEFF 		bl	shellWriteString
 3729              	.LVL436:
1033:SYS/shell/shell.c ****     {
 3730              		.loc 1 1033 0
 3731 002e 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 3732 0030 03F00F03 		and	r3, r3, #15
 3733 0034 052B     		cmp	r3, #5
 3734 0036 10D0     		beq	.L374
1045:SYS/shell/shell.c ****         shellWriteString(shell, ", 0x");
 3735              		.loc 1 1045 0
 3736 0038 01A9     		add	r1, sp, #4
 3737 003a 2846     		mov	r0, r5
 3738 003c FFF7FEFF 		bl	shellToDec
ARM GAS  /tmp/ccYSNOoy.s 			page 104


 3739              	.LVL437:
 3740 0040 C0F10B01 		rsb	r1, r0, #11
 3741 0044 01AB     		add	r3, sp, #4
 3742 0046 1944     		add	r1, r1, r3
 3743 0048 2046     		mov	r0, r4
 3744 004a FFF7FEFF 		bl	shellWriteString
 3745              	.LVL438:
1046:SYS/shell/shell.c ****         for (short i = 0; i < 11; i++)
 3746              		.loc 1 1046 0
 3747 004e 1849     		ldr	r1, .L375+8
 3748 0050 2046     		mov	r0, r4
 3749 0052 FFF7FEFF 		bl	shellWriteString
 3750              	.LVL439:
 3751              	.LBB33:
1047:SYS/shell/shell.c ****         {
 3752              		.loc 1 1047 0
 3753 0056 0023     		movs	r3, #0
 3754 0058 14E0     		b	.L370
 3755              	.LVL440:
 3756              	.L374:
 3757              	.LBE33:
1036:SYS/shell/shell.c ****         shellWriteString(shell, (char *)value);
 3758              		.loc 1 1036 0
 3759 005a 164E     		ldr	r6, .L375+12
 3760              	.LVL441:
 3761 005c 3146     		mov	r1, r6
 3762 005e 2046     		mov	r0, r4
 3763 0060 FFF7FEFF 		bl	shellWriteString
 3764              	.LVL442:
1037:SYS/shell/shell.c ****         shellWriteString(shell, "\"");
 3765              		.loc 1 1037 0
 3766 0064 2946     		mov	r1, r5
 3767 0066 2046     		mov	r0, r4
 3768 0068 FFF7FEFF 		bl	shellWriteString
 3769              	.LVL443:
1038:SYS/shell/shell.c ****         break;
 3770              		.loc 1 1038 0
 3771 006c 3146     		mov	r1, r6
 3772 006e 2046     		mov	r0, r4
 3773 0070 FFF7FEFF 		bl	shellWriteString
 3774              	.LVL444:
1039:SYS/shell/shell.c ****     // case SHELL_TYPE_VAR_INT:
 3775              		.loc 1 1039 0
 3776 0074 10E0     		b	.L369
 3777              	.LVL445:
 3778              	.L371:
 3779              	.LBB34:
1049:SYS/shell/shell.c ****         }
 3780              		.loc 1 1049 0 discriminator 3
 3781 0076 04AA     		add	r2, sp, #16
 3782 0078 1A44     		add	r2, r2, r3
 3783 007a 3021     		movs	r1, #48
 3784 007c 02F80C1C 		strb	r1, [r2, #-12]
1047:SYS/shell/shell.c ****         {
 3785              		.loc 1 1047 0 discriminator 3
 3786 0080 0133     		adds	r3, r3, #1
 3787              	.LVL446:
ARM GAS  /tmp/ccYSNOoy.s 			page 105


 3788 0082 1BB2     		sxth	r3, r3
 3789              	.LVL447:
 3790              	.L370:
1047:SYS/shell/shell.c ****         {
 3791              		.loc 1 1047 0 is_stmt 0 discriminator 1
 3792 0084 0A2B     		cmp	r3, #10
 3793 0086 F6DD     		ble	.L371
 3794              	.LBE34:
1051:SYS/shell/shell.c ****         shellWriteString(shell, buffer);
 3795              		.loc 1 1051 0 is_stmt 1
 3796 0088 01A9     		add	r1, sp, #4
 3797 008a 2846     		mov	r0, r5
 3798 008c FFF7FEFF 		bl	shellToHex
 3799              	.LVL448:
1052:SYS/shell/shell.c ****         break;
 3800              		.loc 1 1052 0
 3801 0090 01A9     		add	r1, sp, #4
 3802 0092 2046     		mov	r0, r4
 3803 0094 FFF7FEFF 		bl	shellWriteString
 3804              	.LVL449:
 3805              	.L369:
1056:SYS/shell/shell.c ****     return value;
 3806              		.loc 1 1056 0
 3807 0098 0749     		ldr	r1, .L375+16
 3808 009a 2046     		mov	r0, r4
 3809 009c FFF7FEFF 		bl	shellWriteString
 3810              	.LVL450:
1058:SYS/shell/shell.c **** 
 3811              		.loc 1 1058 0
 3812 00a0 2846     		mov	r0, r5
 3813 00a2 04B0     		add	sp, sp, #16
 3814              	.LCFI65:
 3815              		.cfi_def_cfa_offset 16
 3816              		@ sp needed
 3817 00a4 70BD     		pop	{r4, r5, r6, pc}
 3818              	.LVL451:
 3819              	.L376:
 3820 00a6 00BF     		.align	2
 3821              	.L375:
 3822 00a8 14000000 		.word	.LC8
 3823 00ac 00000000 		.word	.LC25
 3824 00b0 0C000000 		.word	.LC10
 3825 00b4 04000000 		.word	.LC26
 3826 00b8 04000000 		.word	.LC3
 3827              		.cfi_endproc
 3828              	.LFE155:
 3830              		.section	.text.shellSetVarValue,"ax",%progbits
 3831              		.align	1
 3832              		.global	shellSetVarValue
 3833              		.syntax unified
 3834              		.thumb
 3835              		.thumb_func
 3836              		.fpu fpv4-sp-d16
 3838              	shellSetVarValue:
 3839              	.LFB154:
 973:SYS/shell/shell.c ****     if (command->attr.attrs.readOnly)
 3840              		.loc 1 973 0
ARM GAS  /tmp/ccYSNOoy.s 			page 106


 3841              		.cfi_startproc
 3842              		@ args = 0, pretend = 0, frame = 0
 3843              		@ frame_needed = 0, uses_anonymous_args = 0
 3844              	.LVL452:
 3845 0000 38B5     		push	{r3, r4, r5, lr}
 3846              	.LCFI66:
 3847              		.cfi_def_cfa_offset 16
 3848              		.cfi_offset 3, -16
 3849              		.cfi_offset 4, -12
 3850              		.cfi_offset 5, -8
 3851              		.cfi_offset 14, -4
 3852 0002 0546     		mov	r5, r0
 3853 0004 0C46     		mov	r4, r1
 974:SYS/shell/shell.c ****     {
 3854              		.loc 1 974 0
 3855 0006 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3856 0008 13F0400F 		tst	r3, #64
 3857 000c 0AD1     		bne	.L389
 980:SYS/shell/shell.c ****         {
 3858              		.loc 1 980 0
 3859 000e 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3860 0010 03F00F03 		and	r3, r3, #15
 3861 0014 023B     		subs	r3, r3, #2
 3862 0016 052B     		cmp	r3, #5
 3863 0018 07D8     		bhi	.L379
 3864 001a DFE803F0 		tbb	[pc, r3]
 3865              	.LVL453:
 3866              	.L381:
 3867 001e 0B       		.byte	(.L380-.L381)/2
 3868 001f 0E       		.byte	(.L382-.L381)/2
 3869 0020 11       		.byte	(.L383-.L381)/2
 3870 0021 14       		.byte	(.L384-.L381)/2
 3871 0022 19       		.byte	(.L385-.L381)/2
 3872 0023 1D       		.byte	(.L386-.L381)/2
 3873              		.p2align 1
 3874              	.L389:
 976:SYS/shell/shell.c ****     }
 3875              		.loc 1 976 0
 3876 0024 1249     		ldr	r1, .L390
 3877              	.LVL454:
 3878 0026 FFF7FEFF 		bl	shellWriteString
 3879              	.LVL455:
 3880              	.L379:
1015:SYS/shell/shell.c **** }
 3881              		.loc 1 1015 0
 3882 002a 2146     		mov	r1, r4
 3883 002c 2846     		mov	r0, r5
 3884 002e FFF7FEFF 		bl	shellShowVar
 3885              	.LVL456:
1016:SYS/shell/shell.c **** 
 3886              		.loc 1 1016 0
 3887 0032 38BD     		pop	{r3, r4, r5, pc}
 3888              	.LVL457:
 3889              	.L380:
 983:SYS/shell/shell.c ****             break;
 3890              		.loc 1 983 0
 3891 0034 A368     		ldr	r3, [r4, #8]
ARM GAS  /tmp/ccYSNOoy.s 			page 107


 3892 0036 1A60     		str	r2, [r3]
 984:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_SHORT:
 3893              		.loc 1 984 0
 3894 0038 F7E7     		b	.L379
 3895              	.L382:
 986:SYS/shell/shell.c ****             break;
 3896              		.loc 1 986 0
 3897 003a A368     		ldr	r3, [r4, #8]
 3898 003c 1A80     		strh	r2, [r3]	@ movhi
 987:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_CHAR:
 3899              		.loc 1 987 0
 3900 003e F4E7     		b	.L379
 3901              	.L383:
 989:SYS/shell/shell.c ****             break;
 3902              		.loc 1 989 0
 3903 0040 A368     		ldr	r3, [r4, #8]
 3904 0042 1A70     		strb	r2, [r3]
 990:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_STRING:
 3905              		.loc 1 990 0
 3906 0044 F1E7     		b	.L379
 3907              	.L384:
 992:SYS/shell/shell.c ****             break;
 3908              		.loc 1 992 0
 3909 0046 1146     		mov	r1, r2
 3910 0048 A068     		ldr	r0, [r4, #8]
 3911              	.LVL458:
 3912 004a FFF7FEFF 		bl	shellStringCopy
 3913              	.LVL459:
 993:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_POINT:
 3914              		.loc 1 993 0
 3915 004e ECE7     		b	.L379
 3916              	.LVL460:
 3917              	.L385:
 995:SYS/shell/shell.c ****             break;
 3918              		.loc 1 995 0
 3919 0050 0849     		ldr	r1, .L390+4
 3920 0052 FFF7FEFF 		bl	shellWriteString
 3921              	.LVL461:
 996:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_NODE:
 3922              		.loc 1 996 0
 3923 0056 E8E7     		b	.L379
 3924              	.LVL462:
 3925              	.L386:
 998:SYS/shell/shell.c ****             {
 3926              		.loc 1 998 0
 3927 0058 A168     		ldr	r1, [r4, #8]
 3928 005a 8B68     		ldr	r3, [r1, #8]
 3929 005c 002B     		cmp	r3, #0
 3930 005e E4D0     		beq	.L379
1000:SYS/shell/shell.c ****                 {
 3931              		.loc 1 1000 0
 3932 0060 0868     		ldr	r0, [r1]
 3933              	.LVL463:
 3934 0062 10B1     		cbz	r0, .L387
1002:SYS/shell/shell.c ****                         ->set(((ShellNodeVarAttr *)command->data.var.value)->var, value);
 3935              		.loc 1 1002 0
 3936 0064 1146     		mov	r1, r2
ARM GAS  /tmp/ccYSNOoy.s 			page 108


 3937 0066 9847     		blx	r3
 3938              	.LVL464:
 3939 0068 DFE7     		b	.L379
 3940              	.LVL465:
 3941              	.L387:
1007:SYS/shell/shell.c ****                 }
 3942              		.loc 1 1007 0
 3943 006a 1046     		mov	r0, r2
 3944 006c 9847     		blx	r3
 3945              	.LVL466:
 3946 006e DCE7     		b	.L379
 3947              	.L391:
 3948              		.align	2
 3949              	.L390:
 3950 0070 00000000 		.word	.LC27
 3951 0074 1C000000 		.word	.LC28
 3952              		.cfi_endproc
 3953              	.LFE154:
 3955              		.section	.text.shellSetVar,"ax",%progbits
 3956              		.align	1
 3957              		.global	shellSetVar
 3958              		.syntax unified
 3959              		.thumb
 3960              		.thumb_func
 3961              		.fpu fpv4-sp-d16
 3963              	shellSetVar:
 3964              	.LFB156:
1068:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 3965              		.loc 1 1068 0
 3966              		.cfi_startproc
 3967              		@ args = 0, pretend = 0, frame = 0
 3968              		@ frame_needed = 0, uses_anonymous_args = 0
 3969              	.LVL467:
 3970 0000 70B5     		push	{r4, r5, r6, lr}
 3971              	.LCFI67:
 3972              		.cfi_def_cfa_offset 16
 3973              		.cfi_offset 4, -16
 3974              		.cfi_offset 5, -12
 3975              		.cfi_offset 6, -8
 3976              		.cfi_offset 14, -4
 3977 0002 0546     		mov	r5, r0
 3978 0004 0E46     		mov	r6, r1
1069:SYS/shell/shell.c ****     if (shell == NULL)
 3979              		.loc 1 1069 0
 3980 0006 FFF7FEFF 		bl	shellGetCurrent
 3981              	.LVL468:
1070:SYS/shell/shell.c ****     {
 3982              		.loc 1 1070 0
 3983 000a 20B3     		cbz	r0, .L396
 3984 000c 0446     		mov	r4, r0
1074:SYS/shell/shell.c ****                                              name,
 3985              		.loc 1 1074 0
 3986 000e 0023     		movs	r3, #0
 3987 0010 826D     		ldr	r2, [r0, #88]
 3988 0012 2946     		mov	r1, r5
 3989 0014 FFF7FEFF 		bl	shellSeekCommand
 3990              	.LVL469:
ARM GAS  /tmp/ccYSNOoy.s 			page 109


1078:SYS/shell/shell.c ****     {
 3991              		.loc 1 1078 0
 3992 0018 0146     		mov	r1, r0
 3993 001a 60B1     		cbz	r0, .L398
1083:SYS/shell/shell.c ****     {
 3994              		.loc 1 1083 0
 3995 001c 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 3996 001e 03F00F03 		and	r3, r3, #15
 3997 0022 0E33     		adds	r3, r3, #14
 3998 0024 03F00F03 		and	r3, r3, #15
 3999 0028 052B     		cmp	r3, #5
 4000 002a 0AD8     		bhi	.L399
1089:SYS/shell/shell.c **** }
 4001              		.loc 1 1089 0
 4002 002c 3246     		mov	r2, r6
 4003 002e 2046     		mov	r0, r4
 4004              	.LVL470:
 4005 0030 FFF7FEFF 		bl	shellSetVarValue
 4006              	.LVL471:
 4007 0034 70BD     		pop	{r4, r5, r6, pc}
 4008              	.LVL472:
 4009              	.L398:
1080:SYS/shell/shell.c ****         return 0;
 4010              		.loc 1 1080 0
 4011 0036 0949     		ldr	r1, .L400
 4012 0038 2046     		mov	r0, r4
 4013              	.LVL473:
 4014 003a FFF7FEFF 		bl	shellWriteString
 4015              	.LVL474:
1081:SYS/shell/shell.c ****     }
 4016              		.loc 1 1081 0
 4017 003e 0020     		movs	r0, #0
 4018 0040 70BD     		pop	{r4, r5, r6, pc}
 4019              	.LVL475:
 4020              	.L399:
1085:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_NOT_VAR]);
 4021              		.loc 1 1085 0
 4022 0042 2946     		mov	r1, r5
 4023 0044 2046     		mov	r0, r4
 4024              	.LVL476:
 4025 0046 FFF7FEFF 		bl	shellWriteString
 4026              	.LVL477:
1086:SYS/shell/shell.c ****         return 0;
 4027              		.loc 1 1086 0
 4028 004a 0549     		ldr	r1, .L400+4
 4029 004c 2046     		mov	r0, r4
 4030 004e FFF7FEFF 		bl	shellWriteString
 4031              	.LVL478:
1087:SYS/shell/shell.c ****     }
 4032              		.loc 1 1087 0
 4033 0052 0020     		movs	r0, #0
 4034 0054 70BD     		pop	{r4, r5, r6, pc}
 4035              	.LVL479:
 4036              	.L396:
1072:SYS/shell/shell.c ****     }
 4037              		.loc 1 1072 0
 4038 0056 0020     		movs	r0, #0
ARM GAS  /tmp/ccYSNOoy.s 			page 110


 4039              	.LVL480:
1090:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
 4040              		.loc 1 1090 0
 4041 0058 70BD     		pop	{r4, r5, r6, pc}
 4042              	.LVL481:
 4043              	.L401:
 4044 005a 00BF     		.align	2
 4045              	.L400:
 4046 005c 00000000 		.word	.LC29
 4047 0060 10000000 		.word	.LC30
 4048              		.cfi_endproc
 4049              	.LFE156:
 4051              		.section	.text.shellRunCommand,"ax",%progbits
 4052              		.align	1
 4053              		.global	shellRunCommand
 4054              		.syntax unified
 4055              		.thumb
 4056              		.thumb_func
 4057              		.fpu fpv4-sp-d16
 4059              	shellRunCommand:
 4060              	.LFB157:
1104:SYS/shell/shell.c ****     int returnValue = 0;
 4061              		.loc 1 1104 0
 4062              		.cfi_startproc
 4063              		@ args = 0, pretend = 0, frame = 0
 4064              		@ frame_needed = 0, uses_anonymous_args = 0
 4065              	.LVL482:
 4066 0000 70B5     		push	{r4, r5, r6, lr}
 4067              	.LCFI68:
 4068              		.cfi_def_cfa_offset 16
 4069              		.cfi_offset 4, -16
 4070              		.cfi_offset 5, -12
 4071              		.cfi_offset 6, -8
 4072              		.cfi_offset 14, -4
 4073 0002 0446     		mov	r4, r0
 4074 0004 0D46     		mov	r5, r1
 4075              	.LVL483:
1106:SYS/shell/shell.c ****     if (command->attr.attrs.type == SHELL_TYPE_CMD_MAIN)
 4076              		.loc 1 1106 0
 4077 0006 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 4078 000a 43F00203 		orr	r3, r3, #2
 4079 000e 80F86030 		strb	r3, [r0, #96]
1107:SYS/shell/shell.c ****     {
 4080              		.loc 1 1107 0
 4081 0012 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 4082 0014 13F00F03 		ands	r3, r3, #15
 4083 0018 14D0     		beq	.L409
1117:SYS/shell/shell.c ****     {
 4084              		.loc 1 1117 0
 4085 001a 012B     		cmp	r3, #1
 4086 001c 23D0     		beq	.L410
1128:SYS/shell/shell.c ****     {
 4087              		.loc 1 1128 0
 4088 001e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 4089 0020 02F00F02 		and	r2, r2, #15
 4090 0024 0E32     		adds	r2, r2, #14
 4091 0026 02F00F02 		and	r2, r2, #15
ARM GAS  /tmp/ccYSNOoy.s 			page 111


 4092 002a 052A     		cmp	r2, #5
 4093 002c 2AD9     		bls	.L411
1132:SYS/shell/shell.c ****     {
 4094              		.loc 1 1132 0
 4095 002e 082B     		cmp	r3, #8
 4096 0030 2CD0     		beq	.L412
1105:SYS/shell/shell.c ****     shell->status.isActive = 1;
 4097              		.loc 1 1105 0
 4098 0032 0026     		movs	r6, #0
 4099              	.LVL484:
 4100              	.L404:
1136:SYS/shell/shell.c **** 
 4101              		.loc 1 1136 0
 4102 0034 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 4103 0038 6FF34103 		bfc	r3, #1, #1
 4104 003c 84F86030 		strb	r3, [r4, #96]
1139:SYS/shell/shell.c **** 
 4105              		.loc 1 1139 0
 4106 0040 3046     		mov	r0, r6
 4107 0042 70BD     		pop	{r4, r5, r6, pc}
 4108              	.LVL485:
 4109              	.L409:
1109:SYS/shell/shell.c ****         returnValue = command->data.cmd.function(shell->parser.paramCount,
 4110              		.loc 1 1109 0
 4111 0044 FFF7FEFF 		bl	shellRemoveParamQuotes
 4112              	.LVL486:
1110:SYS/shell/shell.c ****                                                  shell->parser.param);
 4113              		.loc 1 1110 0
 4114 0048 AB68     		ldr	r3, [r5, #8]
 4115 004a 04F11401 		add	r1, r4, #20
 4116 004e E08E     		ldrh	r0, [r4, #54]
 4117 0050 9847     		blx	r3
 4118              	.LVL487:
 4119 0052 0646     		mov	r6, r0
 4120              	.LVL488:
1112:SYS/shell/shell.c ****         {
 4121              		.loc 1 1112 0
 4122 0054 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 4123 0056 13F0200F 		tst	r3, #32
 4124 005a EBD1     		bne	.L404
1114:SYS/shell/shell.c ****         }
 4125              		.loc 1 1114 0
 4126 005c 0146     		mov	r1, r0
 4127 005e 2046     		mov	r0, r4
 4128              	.LVL489:
 4129 0060 FFF7FEFF 		bl	shellWriteReturnValue
 4130              	.LVL490:
 4131 0064 E6E7     		b	.L404
 4132              	.LVL491:
 4133              	.L410:
1119:SYS/shell/shell.c ****                                   command,
 4134              		.loc 1 1119 0
 4135 0066 00F11403 		add	r3, r0, #20
 4136 006a C28E     		ldrh	r2, [r0, #54]
 4137 006c FFF7FEFF 		bl	shellExtRun
 4138              	.LVL492:
 4139 0070 0646     		mov	r6, r0
ARM GAS  /tmp/ccYSNOoy.s 			page 112


 4140              	.LVL493:
1123:SYS/shell/shell.c ****         {
 4141              		.loc 1 1123 0
 4142 0072 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 4143 0074 13F0200F 		tst	r3, #32
 4144 0078 DCD1     		bne	.L404
1125:SYS/shell/shell.c ****         }
 4145              		.loc 1 1125 0
 4146 007a 0146     		mov	r1, r0
 4147 007c 2046     		mov	r0, r4
 4148              	.LVL494:
 4149 007e FFF7FEFF 		bl	shellWriteReturnValue
 4150              	.LVL495:
 4151 0082 D7E7     		b	.L404
 4152              	.LVL496:
 4153              	.L411:
1130:SYS/shell/shell.c ****     }
 4154              		.loc 1 1130 0
 4155 0084 FFF7FEFF 		bl	shellShowVar
 4156              	.LVL497:
1105:SYS/shell/shell.c ****     shell->status.isActive = 1;
 4157              		.loc 1 1105 0
 4158 0088 0026     		movs	r6, #0
 4159 008a D3E7     		b	.L404
 4160              	.LVL498:
 4161              	.L412:
1134:SYS/shell/shell.c ****     }
 4162              		.loc 1 1134 0
 4163 008c FFF7FEFF 		bl	shellSetUser
 4164              	.LVL499:
1105:SYS/shell/shell.c ****     shell->status.isActive = 1;
 4165              		.loc 1 1105 0
 4166 0090 0026     		movs	r6, #0
 4167 0092 CFE7     		b	.L404
 4168              		.cfi_endproc
 4169              	.LFE157:
 4171              		.section	.text.shellNormalInput,"ax",%progbits
 4172              		.align	1
 4173              		.global	shellNormalInput
 4174              		.syntax unified
 4175              		.thumb
 4176              		.thumb_func
 4177              		.fpu fpv4-sp-d16
 4179              	shellNormalInput:
 4180              	.LFB163:
1291:SYS/shell/shell.c ****     shell->status.tabFlag = 0;
 4181              		.loc 1 1291 0
 4182              		.cfi_startproc
 4183              		@ args = 0, pretend = 0, frame = 0
 4184              		@ frame_needed = 0, uses_anonymous_args = 0
 4185              	.LVL500:
 4186 0000 08B5     		push	{r3, lr}
 4187              	.LCFI69:
 4188              		.cfi_def_cfa_offset 8
 4189              		.cfi_offset 3, -8
 4190              		.cfi_offset 14, -4
1292:SYS/shell/shell.c ****     shellInsertByte(shell, data);
ARM GAS  /tmp/ccYSNOoy.s 			page 113


 4191              		.loc 1 1292 0
 4192 0002 90F86020 		ldrb	r2, [r0, #96]	@ zero_extendqisi2
 4193 0006 6FF38202 		bfc	r2, #2, #1
 4194 000a 80F86020 		strb	r2, [r0, #96]
1293:SYS/shell/shell.c **** }
 4195              		.loc 1 1293 0
 4196 000e FFF7FEFF 		bl	shellInsertByte
 4197              	.LVL501:
 4198 0012 08BD     		pop	{r3, pc}
 4199              		.cfi_endproc
 4200              	.LFE163:
 4202              		.section	.text.shellExec,"ax",%progbits
 4203              		.align	1
 4204              		.global	shellExec
 4205              		.syntax unified
 4206              		.thumb
 4207              		.thumb_func
 4208              		.fpu fpv4-sp-d16
 4210              	shellExec:
 4211              	.LFB164:
1302:SYS/shell/shell.c **** 
 4212              		.loc 1 1302 0
 4213              		.cfi_startproc
 4214              		@ args = 0, pretend = 0, frame = 0
 4215              		@ frame_needed = 0, uses_anonymous_args = 0
 4216              	.LVL502:
1304:SYS/shell/shell.c ****     {
 4217              		.loc 1 1304 0
 4218 0000 8389     		ldrh	r3, [r0, #12]
 4219 0002 5BB3     		cbz	r3, .L420
1302:SYS/shell/shell.c **** 
 4220              		.loc 1 1302 0
 4221 0004 10B5     		push	{r4, lr}
 4222              	.LCFI70:
 4223              		.cfi_def_cfa_offset 8
 4224              		.cfi_offset 4, -8
 4225              		.cfi_offset 14, -4
 4226 0006 0446     		mov	r4, r0
1309:SYS/shell/shell.c **** 
 4227              		.loc 1 1309 0
 4228 0008 0269     		ldr	r2, [r0, #16]
 4229 000a 0021     		movs	r1, #0
 4230 000c D154     		strb	r1, [r2, r3]
1311:SYS/shell/shell.c ****     {
 4231              		.loc 1 1311 0
 4232 000e 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 4233 0012 13F0010F 		tst	r3, #1
 4234 0016 1ED0     		beq	.L417
 4235              	.LBB35:
1313:SYS/shell/shell.c ****         shellParserParam(shell);
 4236              		.loc 1 1313 0
 4237 0018 FFF7FEFF 		bl	shellHistoryAdd
 4238              	.LVL503:
1314:SYS/shell/shell.c ****         shell->parser.length = shell->parser.cursor = 0;
 4239              		.loc 1 1314 0
 4240 001c 2046     		mov	r0, r4
 4241 001e FFF7FEFF 		bl	shellParserParam
ARM GAS  /tmp/ccYSNOoy.s 			page 114


 4242              	.LVL504:
1315:SYS/shell/shell.c ****         if (shell->parser.paramCount == 0)
 4243              		.loc 1 1315 0
 4244 0022 0023     		movs	r3, #0
 4245 0024 E381     		strh	r3, [r4, #14]	@ movhi
 4246 0026 A381     		strh	r3, [r4, #12]	@ movhi
1316:SYS/shell/shell.c ****         {
 4247              		.loc 1 1316 0
 4248 0028 E38E     		ldrh	r3, [r4, #54]
 4249 002a B3B1     		cbz	r3, .L415
1320:SYS/shell/shell.c **** 
 4250              		.loc 1 1320 0
 4251 002c 0C49     		ldr	r1, .L423
 4252 002e 2046     		mov	r0, r4
 4253 0030 FFF7FEFF 		bl	shellWriteString
 4254              	.LVL505:
1322:SYS/shell/shell.c ****                                                  shell->parser.param[0],
 4255              		.loc 1 1322 0
 4256 0034 0023     		movs	r3, #0
 4257 0036 A26D     		ldr	r2, [r4, #88]
 4258 0038 6169     		ldr	r1, [r4, #20]
 4259 003a 2046     		mov	r0, r4
 4260 003c FFF7FEFF 		bl	shellSeekCommand
 4261              	.LVL506:
1326:SYS/shell/shell.c ****         {
 4262              		.loc 1 1326 0
 4263 0040 0146     		mov	r1, r0
 4264 0042 18B1     		cbz	r0, .L418
1328:SYS/shell/shell.c ****         }
 4265              		.loc 1 1328 0
 4266 0044 2046     		mov	r0, r4
 4267              	.LVL507:
 4268 0046 FFF7FEFF 		bl	shellRunCommand
 4269              	.LVL508:
 4270 004a 10BD     		pop	{r4, pc}
 4271              	.LVL509:
 4272              	.L418:
1332:SYS/shell/shell.c ****         }
 4273              		.loc 1 1332 0
 4274 004c 0549     		ldr	r1, .L423+4
 4275 004e 2046     		mov	r0, r4
 4276              	.LVL510:
 4277 0050 FFF7FEFF 		bl	shellWriteString
 4278              	.LVL511:
 4279 0054 10BD     		pop	{r4, pc}
 4280              	.LVL512:
 4281              	.L417:
 4282              	.LBE35:
1337:SYS/shell/shell.c ****     }
 4283              		.loc 1 1337 0
 4284 0056 FFF7FEFF 		bl	shellCheckPassword
 4285              	.LVL513:
 4286              	.L415:
 4287 005a 10BD     		pop	{r4, pc}
 4288              	.LVL514:
 4289              	.L420:
 4290              	.LCFI71:
ARM GAS  /tmp/ccYSNOoy.s 			page 115


 4291              		.cfi_def_cfa_offset 0
 4292              		.cfi_restore 4
 4293              		.cfi_restore 14
 4294 005c 7047     		bx	lr
 4295              	.L424:
 4296 005e 00BF     		.align	2
 4297              	.L423:
 4298 0060 04000000 		.word	.LC3
 4299 0064 14000000 		.word	.LC24
 4300              		.cfi_endproc
 4301              	.LFE164:
 4303              		.section	.text.shellEnter,"ax",%progbits
 4304              		.align	1
 4305              		.global	shellEnter
 4306              		.syntax unified
 4307              		.thumb
 4308              		.thumb_func
 4309              		.fpu fpv4-sp-d16
 4311              	shellEnter:
 4312              	.LFB172:
1516:SYS/shell/shell.c ****     shellExec(shell);
 4313              		.loc 1 1516 0
 4314              		.cfi_startproc
 4315              		@ args = 0, pretend = 0, frame = 0
 4316              		@ frame_needed = 0, uses_anonymous_args = 0
 4317              	.LVL515:
 4318 0000 10B5     		push	{r4, lr}
 4319              	.LCFI72:
 4320              		.cfi_def_cfa_offset 8
 4321              		.cfi_offset 4, -8
 4322              		.cfi_offset 14, -4
 4323 0002 0446     		mov	r4, r0
1517:SYS/shell/shell.c ****     shellWriteCommandLine(shell, 1);
 4324              		.loc 1 1517 0
 4325 0004 FFF7FEFF 		bl	shellExec
 4326              	.LVL516:
1518:SYS/shell/shell.c **** }
 4327              		.loc 1 1518 0
 4328 0008 0121     		movs	r1, #1
 4329 000a 2046     		mov	r0, r4
 4330 000c FFF7FEFF 		bl	shellWriteCommandLine
 4331              	.LVL517:
 4332 0010 10BD     		pop	{r4, pc}
 4333              		.cfi_endproc
 4334              	.LFE172:
 4336              		.section	.text.shellHandler,"ax",%progbits
 4337              		.align	1
 4338              		.global	shellHandler
 4339              		.syntax unified
 4340              		.thumb
 4341              		.thumb_func
 4342              		.fpu fpv4-sp-d16
 4344              	shellHandler:
 4345              	.LFB174:
1578:SYS/shell/shell.c ****     SHELL_ASSERT(data, return );
 4346              		.loc 1 1578 0
 4347              		.cfi_startproc
ARM GAS  /tmp/ccYSNOoy.s 			page 116


 4348              		@ args = 0, pretend = 0, frame = 0
 4349              		@ frame_needed = 0, uses_anonymous_args = 0
 4350              	.LVL518:
1579:SYS/shell/shell.c **** 
 4351              		.loc 1 1579 0
 4352 0000 0029     		cmp	r1, #0
 4353 0002 65D0     		beq	.L441
1578:SYS/shell/shell.c ****     SHELL_ASSERT(data, return );
 4354              		.loc 1 1578 0
 4355 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4356              	.LCFI73:
 4357              		.cfi_def_cfa_offset 32
 4358              		.cfi_offset 4, -32
 4359              		.cfi_offset 5, -28
 4360              		.cfi_offset 6, -24
 4361              		.cfi_offset 7, -20
 4362              		.cfi_offset 8, -16
 4363              		.cfi_offset 9, -12
 4364              		.cfi_offset 10, -8
 4365              		.cfi_offset 14, -4
 4366 0008 0646     		mov	r6, r0
 4367 000a 8A46     		mov	r10, r1
 4368              	.LVL519:
1594:SYS/shell/shell.c ****     {
 4369              		.loc 1 1594 0
 4370 000c 836B     		ldr	r3, [r0, #56]
 4371 000e 13F47F4F 		tst	r3, #65280
 4372 0012 08D1     		bne	.L436
1599:SYS/shell/shell.c ****     {
 4373              		.loc 1 1599 0
 4374 0014 13F47F08 		ands	r8, r3, #16711680
 4375 0018 0AD1     		bne	.L437
1604:SYS/shell/shell.c ****     {
 4376              		.loc 1 1604 0
 4377 001a 13F07F4F 		tst	r3, #-16777216
 4378 001e 0ED1     		bne	.L438
1592:SYS/shell/shell.c ****     int keyFilter = 0x00000000;
 4379              		.loc 1 1592 0
 4380 0020 4FF01809 		mov	r9, #24
 4381 0024 08E0     		b	.L429
 4382              	.L436:
1597:SYS/shell/shell.c ****     }
 4383              		.loc 1 1597 0
 4384 0026 6FF0FF08 		mvn	r8, #255
1596:SYS/shell/shell.c ****         keyFilter = 0xFFFFFF00;
 4385              		.loc 1 1596 0
 4386 002a 4FF00009 		mov	r9, #0
 4387 002e 03E0     		b	.L429
 4388              	.L437:
1602:SYS/shell/shell.c ****     }
 4389              		.loc 1 1602 0
 4390 0030 DFF8A080 		ldr	r8, .L445
1601:SYS/shell/shell.c ****         keyFilter = 0xFFFF0000;
 4391              		.loc 1 1601 0
 4392 0034 4FF00809 		mov	r9, #8
 4393              	.L429:
 4394              	.LVL520:
ARM GAS  /tmp/ccYSNOoy.s 			page 117


1611:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 4395              		.loc 1 1611 0
 4396 0038 B76D     		ldr	r7, [r6, #88]
 4397              	.LVL521:
 4398              	.LBB36:
1612:SYS/shell/shell.c ****     {
 4399              		.loc 1 1612 0
 4400 003a 0024     		movs	r4, #0
 4401 003c 12E0     		b	.L430
 4402              	.LVL522:
 4403              	.L438:
 4404              	.LBE36:
1607:SYS/shell/shell.c ****     }
 4405              		.loc 1 1607 0
 4406 003e 4FF07F48 		mov	r8, #-16777216
1606:SYS/shell/shell.c ****         keyFilter = 0xFF000000;
 4407              		.loc 1 1606 0
 4408 0042 4FF01009 		mov	r9, #16
 4409 0046 F7E7     		b	.L429
 4410              	.LVL523:
 4411              	.L432:
 4412              	.LBB37:
1624:SYS/shell/shell.c ****                     {
 4413              		.loc 1 1624 0
 4414 0048 AB68     		ldr	r3, [r5, #8]
 4415 004a 0BB1     		cbz	r3, .L433
1626:SYS/shell/shell.c ****                     }
 4416              		.loc 1 1626 0
 4417 004c 3046     		mov	r0, r6
 4418 004e 9847     		blx	r3
 4419              	.LVL524:
 4420              	.L433:
1628:SYS/shell/shell.c ****                     break;
 4421              		.loc 1 1628 0
 4422 0050 0023     		movs	r3, #0
 4423 0052 B363     		str	r3, [r6, #56]
1621:SYS/shell/shell.c ****                 if (keyByteOffset == 0 || (base[i].data.key.value & (0xFF << (keyByteOffset - 8))) 
 4424              		.loc 1 1621 0
 4425 0054 9A46     		mov	r10, r3
 4426              	.LVL525:
 4427              	.L434:
 4428              	.LBE37:
1635:SYS/shell/shell.c ****     {
 4429              		.loc 1 1635 0
 4430 0056 BAF1000F 		cmp	r10, #0
 4431 005a 32D1     		bne	.L444
 4432              	.L427:
 4433 005c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4434              	.LVL526:
 4435              	.L431:
 4436              	.LBB38:
1612:SYS/shell/shell.c ****     {
 4437              		.loc 1 1612 0 discriminator 2
 4438 0060 0134     		adds	r4, r4, #1
 4439              	.LVL527:
 4440 0062 24B2     		sxth	r4, r4
 4441              	.LVL528:
ARM GAS  /tmp/ccYSNOoy.s 			page 118


 4442              	.L430:
1612:SYS/shell/shell.c ****     {
 4443              		.loc 1 1612 0 is_stmt 0 discriminator 1
 4444 0064 B6F85C30 		ldrh	r3, [r6, #92]
 4445 0068 9C42     		cmp	r4, r3
 4446 006a F4DA     		bge	.L434
1615:SYS/shell/shell.c ****         {
 4447              		.loc 1 1615 0 is_stmt 1
 4448 006c 07EB0415 		add	r5, r7, r4, lsl #4
 4449 0070 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 4450 0072 03F00F03 		and	r3, r3, #15
 4451 0076 092B     		cmp	r3, #9
 4452 0078 F2D1     		bne	.L431
1615:SYS/shell/shell.c ****         {
 4453              		.loc 1 1615 0 is_stmt 0 discriminator 1
 4454 007a 2946     		mov	r1, r5
 4455 007c 3046     		mov	r0, r6
 4456 007e FFF7FEFF 		bl	shellCheckPermission
 4457              	.LVL529:
 4458 0082 0028     		cmp	r0, #0
 4459 0084 ECD1     		bne	.L431
1618:SYS/shell/shell.c ****             {
 4460              		.loc 1 1618 0 is_stmt 1
 4461 0086 6B68     		ldr	r3, [r5, #4]
 4462 0088 08EA0301 		and	r1, r8, r3
 4463 008c B26B     		ldr	r2, [r6, #56]
 4464 008e 9142     		cmp	r1, r2
 4465 0090 E6D1     		bne	.L431
1618:SYS/shell/shell.c ****             {
 4466              		.loc 1 1618 0 is_stmt 0 discriminator 1
 4467 0092 FF21     		movs	r1, #255
 4468 0094 01FA09F1 		lsl	r1, r1, r9
 4469 0098 0B40     		ands	r3, r3, r1
 4470 009a 0AFA09F1 		lsl	r1, r10, r9
 4471 009e 8B42     		cmp	r3, r1
 4472 00a0 DED1     		bne	.L431
1620:SYS/shell/shell.c ****                 data = 0x00;
 4473              		.loc 1 1620 0 is_stmt 1
 4474 00a2 0A43     		orrs	r2, r2, r1
 4475 00a4 B263     		str	r2, [r6, #56]
 4476              	.LVL530:
1622:SYS/shell/shell.c ****                 {
 4477              		.loc 1 1622 0
 4478 00a6 B9F1000F 		cmp	r9, #0
 4479 00aa CDD0     		beq	.L432
1622:SYS/shell/shell.c ****                 {
 4480              		.loc 1 1622 0 is_stmt 0 discriminator 1
 4481 00ac 6B68     		ldr	r3, [r5, #4]
 4482 00ae A9F10800 		sub	r0, r9, #8
 4483 00b2 FF22     		movs	r2, #255
 4484 00b4 02FA00F0 		lsl	r0, r2, r0
 4485 00b8 0342     		tst	r3, r0
 4486 00ba C5D0     		beq	.L432
1621:SYS/shell/shell.c ****                 if (keyByteOffset == 0 || (base[i].data.key.value & (0xFF << (keyByteOffset - 8))) 
 4487              		.loc 1 1621 0 is_stmt 1
 4488 00bc 4FF0000A 		mov	r10, #0
 4489 00c0 CEE7     		b	.L431
ARM GAS  /tmp/ccYSNOoy.s 			page 119


 4490              	.LVL531:
 4491              	.L444:
 4492              	.LBE38:
1637:SYS/shell/shell.c ****         shellNormalInput(shell, data);
 4493              		.loc 1 1637 0
 4494 00c2 0023     		movs	r3, #0
 4495 00c4 B363     		str	r3, [r6, #56]
1638:SYS/shell/shell.c ****     }
 4496              		.loc 1 1638 0
 4497 00c6 5146     		mov	r1, r10
 4498 00c8 3046     		mov	r0, r6
 4499 00ca FFF7FEFF 		bl	shellNormalInput
 4500              	.LVL532:
 4501 00ce C5E7     		b	.L427
 4502              	.LVL533:
 4503              	.L441:
 4504              	.LCFI74:
 4505              		.cfi_def_cfa_offset 0
 4506              		.cfi_restore 4
 4507              		.cfi_restore 5
 4508              		.cfi_restore 6
 4509              		.cfi_restore 7
 4510              		.cfi_restore 8
 4511              		.cfi_restore 9
 4512              		.cfi_restore 10
 4513              		.cfi_restore 14
 4514 00d0 7047     		bx	lr
 4515              	.L446:
 4516 00d2 00BF     		.align	2
 4517              	.L445:
 4518 00d4 0000FFFF 		.word	-65536
 4519              		.cfi_endproc
 4520              	.LFE174:
 4522              		.section	.text.shellTask,"ax",%progbits
 4523              		.align	1
 4524              		.global	shellTask
 4525              		.syntax unified
 4526              		.thumb
 4527              		.thumb_func
 4528              		.fpu fpv4-sp-d16
 4530              	shellTask:
 4531              	.LFB175:
1680:SYS/shell/shell.c ****     Shell *shell = (Shell *)param;
 4532              		.loc 1 1680 0
 4533              		.cfi_startproc
 4534              		@ args = 0, pretend = 0, frame = 8
 4535              		@ frame_needed = 0, uses_anonymous_args = 0
 4536              	.LVL534:
1687:SYS/shell/shell.c ****         {
 4537              		.loc 1 1687 0
 4538 0000 436E     		ldr	r3, [r0, #100]
 4539 0002 73B1     		cbz	r3, .L450
1680:SYS/shell/shell.c ****     Shell *shell = (Shell *)param;
 4540              		.loc 1 1680 0 discriminator 1
 4541 0004 10B5     		push	{r4, lr}
 4542              	.LCFI75:
 4543              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccYSNOoy.s 			page 120


 4544              		.cfi_offset 4, -8
 4545              		.cfi_offset 14, -4
 4546 0006 82B0     		sub	sp, sp, #8
 4547              	.LCFI76:
 4548              		.cfi_def_cfa_offset 16
 4549 0008 0446     		mov	r4, r0
1687:SYS/shell/shell.c ****         {
 4550              		.loc 1 1687 0 discriminator 1
 4551 000a 0DF10700 		add	r0, sp, #7
 4552              	.LVL535:
 4553 000e 9847     		blx	r3
 4554              	.LVL536:
 4555 0010 08B1     		cbz	r0, .L453
 4556              	.L447:
1694:SYS/shell/shell.c **** 
 4557              		.loc 1 1694 0
 4558 0012 02B0     		add	sp, sp, #8
 4559              	.LCFI77:
 4560              		.cfi_remember_state
 4561              		.cfi_def_cfa_offset 8
 4562              		@ sp needed
 4563 0014 10BD     		pop	{r4, pc}
 4564              	.LVL537:
 4565              	.L453:
 4566              	.LCFI78:
 4567              		.cfi_restore_state
1689:SYS/shell/shell.c ****         }
 4568              		.loc 1 1689 0
 4569 0016 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 4570 001a 2046     		mov	r0, r4
 4571 001c FFF7FEFF 		bl	shellHandler
 4572              	.LVL538:
1694:SYS/shell/shell.c **** 
 4573              		.loc 1 1694 0
 4574 0020 F7E7     		b	.L447
 4575              	.LVL539:
 4576              	.L450:
 4577              	.LCFI79:
 4578              		.cfi_def_cfa_offset 0
 4579              		.cfi_restore 4
 4580              		.cfi_restore 14
 4581 0022 7047     		bx	lr
 4582              		.cfi_endproc
 4583              	.LFE175:
 4585              		.section	.text.shellRun,"ax",%progbits
 4586              		.align	1
 4587              		.global	shellRun
 4588              		.syntax unified
 4589              		.thumb
 4590              		.thumb_func
 4591              		.fpu fpv4-sp-d16
 4593              	shellRun:
 4594              	.LFB181:
1765:SYS/shell/shell.c ****     }
1766:SYS/shell/shell.c **** }
1767:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1768:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_RETURN,
ARM GAS  /tmp/ccYSNOoy.s 			page 121


1769:SYS/shell/shell.c ****     clear, shellClear, clear console);
1770:SYS/shell/shell.c **** 
1771:SYS/shell/shell.c **** /**
1772:SYS/shell/shell.c ****  * @brief shell执行命令
1773:SYS/shell/shell.c ****  * 
1774:SYS/shell/shell.c ****  * @param shell shell对象
1775:SYS/shell/shell.c ****  * @param cmd 命令字符串
1776:SYS/shell/shell.c ****  * @return int 返回值
1777:SYS/shell/shell.c ****  */
1778:SYS/shell/shell.c **** int shellRun(Shell *shell, const char *cmd)
1779:SYS/shell/shell.c **** {
 4595              		.loc 1 1779 0
 4596              		.cfi_startproc
 4597              		@ args = 0, pretend = 0, frame = 0
 4598              		@ frame_needed = 0, uses_anonymous_args = 0
 4599              	.LVL540:
1780:SYS/shell/shell.c ****     SHELL_ASSERT(shell && cmd, return -1);
 4600              		.loc 1 1780 0
 4601 0000 28B3     		cbz	r0, .L457
1779:SYS/shell/shell.c ****     SHELL_ASSERT(shell && cmd, return -1);
 4602              		.loc 1 1779 0 discriminator 2
 4603 0002 70B5     		push	{r4, r5, r6, lr}
 4604              	.LCFI80:
 4605              		.cfi_def_cfa_offset 16
 4606              		.cfi_offset 4, -16
 4607              		.cfi_offset 5, -12
 4608              		.cfi_offset 6, -8
 4609              		.cfi_offset 14, -4
 4610 0004 0446     		mov	r4, r0
 4611              		.loc 1 1780 0 discriminator 2
 4612 0006 29B3     		cbz	r1, .L458
 4613 0008 0D46     		mov	r5, r1
1781:SYS/shell/shell.c ****     char active = shell->status.isActive;
 4614              		.loc 1 1781 0
 4615 000a 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 4616 000e C3F34006 		ubfx	r6, r3, #1, #1
 4617              	.LVL541:
1782:SYS/shell/shell.c ****     if (strlen(cmd) > shell->parser.bufferSize - 1)
 4618              		.loc 1 1782 0
 4619 0012 0846     		mov	r0, r1
 4620              	.LVL542:
 4621 0014 FFF7FEFF 		bl	strlen
 4622              	.LVL543:
 4623 0018 A38E     		ldrh	r3, [r4, #52]
 4624 001a 013B     		subs	r3, r3, #1
 4625 001c 9842     		cmp	r0, r3
 4626 001e 0FD8     		bhi	.L463
1783:SYS/shell/shell.c ****     {
1784:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CMD_TOO_LONG]);
1785:SYS/shell/shell.c ****         return -1;
1786:SYS/shell/shell.c ****     }
1787:SYS/shell/shell.c ****     else
1788:SYS/shell/shell.c ****     {
1789:SYS/shell/shell.c ****         shell->parser.length = shellStringCopy(shell->parser.buffer, (char *)cmd);
 4627              		.loc 1 1789 0
 4628 0020 2946     		mov	r1, r5
 4629 0022 2069     		ldr	r0, [r4, #16]
ARM GAS  /tmp/ccYSNOoy.s 			page 122


 4630 0024 FFF7FEFF 		bl	shellStringCopy
 4631              	.LVL544:
 4632 0028 A081     		strh	r0, [r4, #12]	@ movhi
1790:SYS/shell/shell.c ****         shellExec(shell);
 4633              		.loc 1 1790 0
 4634 002a 2046     		mov	r0, r4
 4635 002c FFF7FEFF 		bl	shellExec
 4636              	.LVL545:
1791:SYS/shell/shell.c ****         shell->status.isActive = active;
 4637              		.loc 1 1791 0
 4638 0030 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 4639 0034 66F34103 		bfi	r3, r6, #1, #1
 4640 0038 84F86030 		strb	r3, [r4, #96]
1792:SYS/shell/shell.c ****         return 0;
 4641              		.loc 1 1792 0
 4642 003c 0020     		movs	r0, #0
 4643 003e 70BD     		pop	{r4, r5, r6, pc}
 4644              	.LVL546:
 4645              	.L463:
1784:SYS/shell/shell.c ****         return -1;
 4646              		.loc 1 1784 0
 4647 0040 0649     		ldr	r1, .L464
 4648 0042 2046     		mov	r0, r4
 4649 0044 FFF7FEFF 		bl	shellWriteString
 4650              	.LVL547:
1785:SYS/shell/shell.c ****     }
 4651              		.loc 1 1785 0
 4652 0048 4FF0FF30 		mov	r0, #-1
 4653 004c 70BD     		pop	{r4, r5, r6, pc}
 4654              	.LVL548:
 4655              	.L457:
 4656              	.LCFI81:
 4657              		.cfi_def_cfa_offset 0
 4658              		.cfi_restore 4
 4659              		.cfi_restore 5
 4660              		.cfi_restore 6
 4661              		.cfi_restore 14
1780:SYS/shell/shell.c ****     char active = shell->status.isActive;
 4662              		.loc 1 1780 0
 4663 004e 4FF0FF30 		mov	r0, #-1
 4664              	.LVL549:
 4665 0052 7047     		bx	lr
 4666              	.LVL550:
 4667              	.L458:
 4668              	.LCFI82:
 4669              		.cfi_def_cfa_offset 16
 4670              		.cfi_offset 4, -16
 4671              		.cfi_offset 5, -12
 4672              		.cfi_offset 6, -8
 4673              		.cfi_offset 14, -4
 4674 0054 4FF0FF30 		mov	r0, #-1
 4675              	.LVL551:
1793:SYS/shell/shell.c ****     }
1794:SYS/shell/shell.c **** }
 4676              		.loc 1 1794 0
 4677 0058 70BD     		pop	{r4, r5, r6, pc}
 4678              	.LVL552:
ARM GAS  /tmp/ccYSNOoy.s 			page 123


 4679              	.L465:
 4680 005a 00BF     		.align	2
 4681              	.L464:
 4682 005c 00000000 		.word	.LC21
 4683              		.cfi_endproc
 4684              	.LFE181:
 4686              		.global	shellCommandclear
 4687              		.global	shellDescclear
 4688              		.global	shellCmdclear
 4689              		.global	shellCommandkeys
 4690              		.global	shellDesckeys
 4691              		.global	shellCmdkeys
 4692              		.global	shellCommandvars
 4693              		.global	shellDescvars
 4694              		.global	shellCmdvars
 4695              		.global	shellCommandcmds
 4696              		.global	shellDesccmds
 4697              		.global	shellCmdcmds
 4698              		.global	shellCommandusers
 4699              		.global	shellDescusers
 4700              		.global	shellCmdusers
 4701              		.global	shellCommandhelp
 4702              		.global	shellDeschelp
 4703              		.global	shellCmdhelp
 4704              		.global	shellKey0x0D000000
 4705              		.global	shellDesc0x0D000000
 4706              		.global	shellKey0x0A000000
 4707              		.global	shellDesc0x0A000000
 4708              		.global	shellKey0x1B5B337E
 4709              		.global	shellDesc0x1B5B337E
 4710              		.global	shellKey0x7F000000
 4711              		.global	shellDesc0x7F000000
 4712              		.global	shellKey0x08000000
 4713              		.global	shellDesc0x08000000
 4714              		.global	shellKey0x09000000
 4715              		.global	shellDesc0x09000000
 4716              		.global	shellKey0x1B5B4400
 4717              		.global	shellDesc0x1B5B4400
 4718              		.global	shellKey0x1B5B4300
 4719              		.global	shellDesc0x1B5B4300
 4720              		.global	shellKey0x1B5B4200
 4721              		.global	shellDesc0x1B5B4200
 4722              		.global	shellKey0x1B5B4100
 4723              		.global	shellDesc0x1B5B4100
 4724              		.global	shellCommandsetVar
 4725              		.global	shellDescsetVar
 4726              		.global	shellCmdsetVar
 4727              		.global	shellUserDefault
 4728              		.global	shellDesDefaultUser
 4729              		.global	shellPasswordDefaultUser
 4730              		.global	shellCmdDefaultUser
 4731              		.section	.bss.buffer.10246,"aw",%nobits
 4732              		.align	2
 4733              		.set	.LANCHOR1,. + 0
 4736              	buffer.10246:
 4737 0000 00000000 		.space	9
 4737      00000000 
ARM GAS  /tmp/ccYSNOoy.s 			page 124


 4737      00
 4738              		.section	.bss.shellList,"aw",%nobits
 4739              		.align	2
 4740              		.set	.LANCHOR0,. + 0
 4743              	shellList:
 4744 0000 00000000 		.space	20
 4744      00000000 
 4744      00000000 
 4744      00000000 
 4744      00000000 
 4745              		.section	.rodata.shellCheckPassword.str1.4,"aMS",%progbits,1
 4746              		.align	2
 4747              	.LC7:
 4748 0000 0D0A7061 		.ascii	"\015\012password error\015\012\000"
 4748      7373776F 
 4748      72642065 
 4748      72726F72 
 4748      0D0A00
 4749              		.section	.rodata.shellCmdDefaultUser,"a",%progbits
 4750              		.align	2
 4753              	shellCmdDefaultUser:
 4754 0000 502E302E 		.ascii	"P.0.Wder Squad\000"
 4754      57646572 
 4754      20537175 
 4754      616400
 4755              		.section	.rodata.shellCmdclear,"a",%progbits
 4756              		.align	2
 4759              	shellCmdclear:
 4760 0000 636C6561 		.ascii	"clear\000"
 4760      7200
 4761              		.section	.rodata.shellCmdcmds,"a",%progbits
 4762              		.align	2
 4765              	shellCmdcmds:
 4766 0000 636D6473 		.ascii	"cmds\000"
 4766      00
 4767              		.section	.rodata.shellCmdhelp,"a",%progbits
 4768              		.align	2
 4771              	shellCmdhelp:
 4772 0000 68656C70 		.ascii	"help\000"
 4772      00
 4773              		.section	.rodata.shellCmdkeys,"a",%progbits
 4774              		.align	2
 4777              	shellCmdkeys:
 4778 0000 6B657973 		.ascii	"keys\000"
 4778      00
 4779              		.section	.rodata.shellCmdsetVar,"a",%progbits
 4780              		.align	2
 4783              	shellCmdsetVar:
 4784 0000 73657456 		.ascii	"setVar\000"
 4784      617200
 4785              		.section	.rodata.shellCmdusers,"a",%progbits
 4786              		.align	2
 4789              	shellCmdusers:
 4790 0000 75736572 		.ascii	"users\000"
 4790      7300
 4791              		.section	.rodata.shellCmdvars,"a",%progbits
 4792              		.align	2
ARM GAS  /tmp/ccYSNOoy.s 			page 125


 4795              	shellCmdvars:
 4796 0000 76617273 		.ascii	"vars\000"
 4796      00
 4797              		.section	.rodata.shellDeleteCommandLine.str1.4,"aMS",%progbits,1
 4798              		.align	2
 4799              	.LC20:
 4800 0000 08200800 		.ascii	"\010 \010\000"
 4801              		.section	.rodata.shellDesDefaultUser,"a",%progbits
 4802              		.align	2
 4805              	shellDesDefaultUser:
 4806 0000 64656661 		.ascii	"default user\000"
 4806      756C7420 
 4806      75736572 
 4806      00
 4807              		.section	.rodata.shellDesc0x08000000,"a",%progbits
 4808              		.align	2
 4811              	shellDesc0x08000000:
 4812 0000 6261636B 		.ascii	"backspace\000"
 4812      73706163 
 4812      6500
 4813              		.section	.rodata.shellDesc0x09000000,"a",%progbits
 4814              		.align	2
 4817              	shellDesc0x09000000:
 4818 0000 74616200 		.ascii	"tab\000"
 4819              		.section	.rodata.shellDesc0x0A000000,"a",%progbits
 4820              		.align	2
 4823              	shellDesc0x0A000000:
 4824 0000 656E7465 		.ascii	"enter\000"
 4824      7200
 4825              		.section	.rodata.shellDesc0x0D000000,"a",%progbits
 4826              		.align	2
 4829              	shellDesc0x0D000000:
 4830 0000 656E7465 		.ascii	"enter\000"
 4830      7200
 4831              		.section	.rodata.shellDesc0x1B5B337E,"a",%progbits
 4832              		.align	2
 4835              	shellDesc0x1B5B337E:
 4836 0000 64656C65 		.ascii	"delete\000"
 4836      746500
 4837              		.section	.rodata.shellDesc0x1B5B4100,"a",%progbits
 4838              		.align	2
 4841              	shellDesc0x1B5B4100:
 4842 0000 757000   		.ascii	"up\000"
 4843              		.section	.rodata.shellDesc0x1B5B4200,"a",%progbits
 4844              		.align	2
 4847              	shellDesc0x1B5B4200:
 4848 0000 646F776E 		.ascii	"down\000"
 4848      00
 4849              		.section	.rodata.shellDesc0x1B5B4300,"a",%progbits
 4850              		.align	2
 4853              	shellDesc0x1B5B4300:
 4854 0000 72696768 		.ascii	"right\000"
 4854      7400
 4855              		.section	.rodata.shellDesc0x1B5B4400,"a",%progbits
 4856              		.align	2
 4859              	shellDesc0x1B5B4400:
 4860 0000 6C656674 		.ascii	"left\000"
ARM GAS  /tmp/ccYSNOoy.s 			page 126


 4860      00
 4861              		.section	.rodata.shellDesc0x7F000000,"a",%progbits
 4862              		.align	2
 4865              	shellDesc0x7F000000:
 4866 0000 6261636B 		.ascii	"backspace\000"
 4866      73706163 
 4866      6500
 4867              		.section	.rodata.shellDescclear,"a",%progbits
 4868              		.align	2
 4871              	shellDescclear:
 4872 0000 636C6561 		.ascii	"clear console\000"
 4872      7220636F 
 4872      6E736F6C 
 4872      6500
 4873              		.section	.rodata.shellDesccmds,"a",%progbits
 4874              		.align	2
 4877              	shellDesccmds:
 4878 0000 6C697374 		.ascii	"list all cmd\000"
 4878      20616C6C 
 4878      20636D64 
 4878      00
 4879              		.section	.rodata.shellDeschelp,"a",%progbits
 4880              		.align	2
 4883              	shellDeschelp:
 4884 0000 73686F77 		.ascii	"show command info\015\012help[cmd]\000"
 4884      20636F6D 
 4884      6D616E64 
 4884      20696E66 
 4884      6F0D0A68 
 4885              		.section	.rodata.shellDesckeys,"a",%progbits
 4886              		.align	2
 4889              	shellDesckeys:
 4890 0000 6C697374 		.ascii	"list all key\000"
 4890      20616C6C 
 4890      206B6579 
 4890      00
 4891              		.section	.rodata.shellDescsetVar,"a",%progbits
 4892              		.align	2
 4895              	shellDescsetVar:
 4896 0000 73657420 		.ascii	"set var\000"
 4896      76617200 
 4897              		.section	.rodata.shellDescusers,"a",%progbits
 4898              		.align	2
 4901              	shellDescusers:
 4902 0000 6C697374 		.ascii	"list all user\000"
 4902      20616C6C 
 4902      20757365 
 4902      7200
 4903              		.section	.rodata.shellDescvars,"a",%progbits
 4904              		.align	2
 4907              	shellDescvars:
 4908 0000 6C697374 		.ascii	"list all var\000"
 4908      20616C6C 
 4908      20766172 
 4908      00
 4909              		.section	.rodata.shellHelp.str1.4,"aMS",%progbits,1
 4910              		.align	2
ARM GAS  /tmp/ccYSNOoy.s 			page 127


 4911              	.LC23:
 4912 0000 636F6D6D 		.ascii	"command help of \000"
 4912      616E6420 
 4912      68656C70 
 4912      206F6620 
 4912      00
 4913 0011 000000   		.space	3
 4914              	.LC24:
 4915 0014 436F6D6D 		.ascii	"Command not Found\015\012\000"
 4915      616E6420 
 4915      6E6F7420 
 4915      466F756E 
 4915      640D0A00 
 4916              		.section	.rodata.shellInit.str1.4,"aMS",%progbits,1
 4917              		.align	2
 4918              	.LC22:
 4919 0000 502E302E 		.ascii	"P.0.Wder Squad\000"
 4919      57646572 
 4919      20537175 
 4919      616400
 4920              		.section	.rodata.shellInsertByte.str1.4,"aMS",%progbits,1
 4921              		.align	2
 4922              	.LC21:
 4923 0000 0D0A5761 		.ascii	"\015\012Warning: Command is too long\015\012\000"
 4923      726E696E 
 4923      673A2043 
 4923      6F6D6D61 
 4923      6E642069 
 4924              		.section	.rodata.shellListCommand.str1.4,"aMS",%progbits,1
 4925              		.align	2
 4926              	.LC16:
 4927 0000 0D0A436F 		.ascii	"\015\012Command List:\015\012\000"
 4927      6D6D616E 
 4927      64204C69 
 4927      73743A0D 
 4927      0A00
 4928              		.section	.rodata.shellListItem.str1.4,"aMS",%progbits,1
 4929              		.align	2
 4930              	.LC11:
 4931 0000 434D4420 		.ascii	"CMD \015\012\000"
 4931      0D0A00
 4932 0007 00       		.space	1
 4933              	.LC12:
 4934 0008 56415200 		.ascii	"VAR\000"
 4935              	.LC13:
 4936 000c 55534552 		.ascii	"USER\000"
 4936      00
 4937 0011 000000   		.space	3
 4938              	.LC14:
 4939 0014 4B455900 		.ascii	"KEY\000"
 4940              	.LC15:
 4941 0018 4E4F4E45 		.ascii	"NONE\000"
 4941      00
 4942              		.section	.rodata.shellListKey.str1.4,"aMS",%progbits,1
 4943              		.align	2
 4944              	.LC19:
 4945 0000 0D0A4B65 		.ascii	"\015\012Key List:\015\012\000"
ARM GAS  /tmp/ccYSNOoy.s 			page 128


 4945      79204C69 
 4945      73743A0D 
 4945      0A00
 4946              		.section	.rodata.shellListUser.str1.4,"aMS",%progbits,1
 4947              		.align	2
 4948              	.LC18:
 4949 0000 0D0A5573 		.ascii	"\015\012User List:\015\012\000"
 4949      6572204C 
 4949      6973743A 
 4949      0D0A00
 4950              		.section	.rodata.shellListVar.str1.4,"aMS",%progbits,1
 4951              		.align	2
 4952              	.LC17:
 4953 0000 0D0A5661 		.ascii	"\015\012Var List:\015\012\000"
 4953      72204C69 
 4953      73743A0D 
 4953      0A00
 4954              		.section	.rodata.shellPasswordDefaultUser,"a",%progbits
 4955              		.align	2
 4958              	shellPasswordDefaultUser:
 4959 0000 00       		.space	1
 4960              		.section	.rodata.shellSetUser.str1.4,"aMS",%progbits,1
 4961              		.align	2
 4962              	.LC0:
 4963 0000 1B5B324A 		.ascii	"\033[2J\033[1H\000"
 4963      1B5B3148 
 4963      00
 4964 0009 000000   		.space	3
 4965              	.LC1:
 4966 000c 0D0A0D0A 		.ascii	"\015\012\015\012/************  BitRtos  ***********"
 4966      2F2A2A2A 
 4966      2A2A2A2A 
 4966      2A2A2A2A 
 4966      2A202042 
 4967 0033 2A5C720A 		.ascii	"*\\r\012\015\012Team Mate:        8_B!T0\015\012   "
 4967      0D0A5465 
 4967      616D204D 
 4967      6174653A 
 4967      20202020 
 4968 0056 20202020 		.ascii	"               WHY\015\012\015\012Build:           "
 4968      20202020 
 4968      20202020 
 4968      20202057 
 4968      48590D0A 
 4969 007d 204E6F76 		.ascii	" Nov 30 2021 13:50:19\015\012Shell   Version:  3.0."
 4969      20333020 
 4969      32303231 
 4969      2031333A 
 4969      35303A31 
 4970 00aa 360D0A42 		.ascii	"6\015\012BitRtos Version:  1.0.0\015\012\000"
 4970      69745274 
 4970      6F732056 
 4970      65727369 
 4970      6F6E3A20 
 4971              		.section	.rodata.shellSetVar.str1.4,"aMS",%progbits,1
 4972              		.align	2
 4973              	.LC29:
ARM GAS  /tmp/ccYSNOoy.s 			page 129


 4974 0000 56617220 		.ascii	"Var not Fount\015\012\000"
 4974      6E6F7420 
 4974      466F756E 
 4974      740D0A00 
 4975              	.LC30:
 4976 0010 20697320 		.ascii	" is not a var\015\012\000"
 4976      6E6F7420 
 4976      61207661 
 4976      720D0A00 
 4977              		.section	.rodata.shellSetVarValue.str1.4,"aMS",%progbits,1
 4978              		.align	2
 4979              	.LC27:
 4980 0000 63616E27 		.ascii	"can't set read only var\015\012\000"
 4980      74207365 
 4980      74207265 
 4980      6164206F 
 4980      6E6C7920 
 4981 001a 0000     		.space	2
 4982              	.LC28:
 4983 001c 63616E27 		.ascii	"can't set pointer\015\012\000"
 4983      74207365 
 4983      7420706F 
 4983      696E7465 
 4983      720D0A00 
 4984              		.section	.rodata.shellShowVar.str1.4,"aMS",%progbits,1
 4985              		.align	2
 4986              	.LC25:
 4987 0000 203D2000 		.ascii	" = \000"
 4988              	.LC26:
 4989 0004 2200     		.ascii	"\"\000"
 4990              		.section	.rodata.shellWriteCommandLine.str1.4,"aMS",%progbits,1
 4991              		.align	2
 4992              	.LC2:
 4993 0000 2F00     		.ascii	"/\000"
 4994 0002 0000     		.space	2
 4995              	.LC3:
 4996 0004 0D0A00   		.ascii	"\015\012\000"
 4997 0007 00       		.space	1
 4998              	.LC4:
 4999 0008 3A00     		.ascii	":\000"
 5000 000a 0000     		.space	2
 5001              	.LC5:
 5002 000c 242000   		.ascii	"$ \000"
 5003 000f 00       		.space	1
 5004              	.LC6:
 5005 0010 0D0A506C 		.ascii	"\015\012Please input password:\000"
 5005      65617365 
 5005      20696E70 
 5005      75742070 
 5005      61737377 
 5006              		.section	.rodata.shellWriteReturnValue.str1.4,"aMS",%progbits,1
 5007              		.align	2
 5008              	.LC9:
 5009 0000 52657475 		.ascii	"Return: \000"
 5009      726E3A20 
 5009      00
 5010 0009 000000   		.space	3
ARM GAS  /tmp/ccYSNOoy.s 			page 130


 5011              	.LC10:
 5012 000c 2C203078 		.ascii	", 0x\000"
 5012      00
 5013 0011 000000   		.space	3
 5014              	.LC8:
 5015 0014 30303030 		.ascii	"00000000000\000"
 5015      30303030 
 5015      30303000 
 5016              		.section	shellCommand,"a",%progbits
 5017              		.align	2
 5020              	shellCommandclear:
 5021 0000 00210000 		.word	8448
 5022 0004 00000000 		.word	shellCmdclear
 5023 0008 00000000 		.word	shellClear
 5024 000c 00000000 		.word	shellDescclear
 5027              	shellCommandkeys:
 5028 0010 00210000 		.word	8448
 5029 0014 00000000 		.word	shellCmdkeys
 5030 0018 00000000 		.word	shellKeys
 5031 001c 00000000 		.word	shellDesckeys
 5034              	shellCommandvars:
 5035 0020 00210000 		.word	8448
 5036 0024 00000000 		.word	shellCmdvars
 5037 0028 00000000 		.word	shellVars
 5038 002c 00000000 		.word	shellDescvars
 5041              	shellCommandcmds:
 5042 0030 00210000 		.word	8448
 5043 0034 00000000 		.word	shellCmdcmds
 5044 0038 00000000 		.word	shellCmds
 5045 003c 00000000 		.word	shellDesccmds
 5048              	shellCommandusers:
 5049 0040 00210000 		.word	8448
 5050 0044 00000000 		.word	shellCmdusers
 5051 0048 00000000 		.word	shellUsers
 5052 004c 00000000 		.word	shellDescusers
 5055              	shellCommandhelp:
 5056 0050 00200000 		.word	8192
 5057 0054 00000000 		.word	shellCmdhelp
 5058 0058 00000000 		.word	shellHelp
 5059 005c 00000000 		.word	shellDeschelp
 5062              	shellKey0x0D000000:
 5063 0060 00190000 		.word	6400
 5064 0064 0000000D 		.word	218103808
 5065 0068 00000000 		.word	shellEnter
 5066 006c 00000000 		.word	shellDesc0x0D000000
 5069              	shellKey0x0A000000:
 5070 0070 00190000 		.word	6400
 5071 0074 0000000A 		.word	167772160
 5072 0078 00000000 		.word	shellEnter
 5073 007c 00000000 		.word	shellDesc0x0A000000
 5076              	shellKey0x1B5B337E:
 5077 0080 00190000 		.word	6400
 5078 0084 7E335B1B 		.word	458961790
 5079 0088 00000000 		.word	shellDelete
 5080 008c 00000000 		.word	shellDesc0x1B5B337E
 5083              	shellKey0x7F000000:
 5084 0090 00190000 		.word	6400
ARM GAS  /tmp/ccYSNOoy.s 			page 131


 5085 0094 0000007F 		.word	2130706432
 5086 0098 00000000 		.word	shellBackspace
 5087 009c 00000000 		.word	shellDesc0x7F000000
 5090              	shellKey0x08000000:
 5091 00a0 00190000 		.word	6400
 5092 00a4 00000008 		.word	134217728
 5093 00a8 00000000 		.word	shellBackspace
 5094 00ac 00000000 		.word	shellDesc0x08000000
 5097              	shellKey0x09000000:
 5098 00b0 00090000 		.word	2304
 5099 00b4 00000009 		.word	150994944
 5100 00b8 00000000 		.word	shellTab
 5101 00bc 00000000 		.word	shellDesc0x09000000
 5104              	shellKey0x1B5B4400:
 5105 00c0 00190000 		.word	6400
 5106 00c4 00445B1B 		.word	458966016
 5107 00c8 00000000 		.word	shellLeft
 5108 00cc 00000000 		.word	shellDesc0x1B5B4400
 5111              	shellKey0x1B5B4300:
 5112 00d0 00190000 		.word	6400
 5113 00d4 00435B1B 		.word	458965760
 5114 00d8 00000000 		.word	shellRight
 5115 00dc 00000000 		.word	shellDesc0x1B5B4300
 5118              	shellKey0x1B5B4200:
 5119 00e0 00090000 		.word	2304
 5120 00e4 00425B1B 		.word	458965504
 5121 00e8 00000000 		.word	shellDown
 5122 00ec 00000000 		.word	shellDesc0x1B5B4200
 5125              	shellKey0x1B5B4100:
 5126 00f0 00090000 		.word	2304
 5127 00f4 00415B1B 		.word	458965248
 5128 00f8 00000000 		.word	shellUp
 5129 00fc 00000000 		.word	shellDesc0x1B5B4100
 5132              	shellCommandsetVar:
 5133 0100 00210000 		.word	8448
 5134 0104 00000000 		.word	shellCmdsetVar
 5135 0108 00000000 		.word	shellSetVar
 5136 010c 00000000 		.word	shellDescsetVar
 5139              	shellUserDefault:
 5140 0110 00080000 		.word	2048
 5141 0114 00000000 		.word	shellCmdDefaultUser
 5142 0118 00000000 		.word	shellPasswordDefaultUser
 5143 011c 00000000 		.word	shellDesDefaultUser
 5144              		.text
 5145              	.Letext0:
 5146              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5147              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5148              		.file 4 "SYS/shell/shell.h"
 5149              		.file 5 "/usr/include/newlib/sys/lock.h"
 5150              		.file 6 "/usr/include/newlib/sys/_types.h"
 5151              		.file 7 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 5152              		.file 8 "/usr/include/newlib/sys/reent.h"
 5153              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stdarg.h"
 5154              		.file 10 "<built-in>"
 5155              		.file 11 "F4_CORE/core_cm4.h"
 5156              		.file 12 "USER/system_stm32f4xx.h"
 5157              		.file 13 "/usr/include/newlib/string.h"
ARM GAS  /tmp/ccYSNOoy.s 			page 132


 5158              		.file 14 "SYS/shell/shell_ext.h"
 5159              		.file 15 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccYSNOoy.s 			page 133


DEFINED SYMBOLS
                            *ABS*:0000000000000000 shell.c
     /tmp/ccYSNOoy.s:18     .text.shellAdd:0000000000000000 $t
     /tmp/ccYSNOoy.s:24     .text.shellAdd:0000000000000000 shellAdd
     /tmp/ccYSNOoy.s:65     .text.shellAdd:0000000000000020 $d
     /tmp/ccYSNOoy.s:71     .text.shellStringCopy:0000000000000000 $t
     /tmp/ccYSNOoy.s:77     .text.shellStringCopy:0000000000000000 shellStringCopy
     /tmp/ccYSNOoy.s:122    .text.shellStringCompare:0000000000000000 $t
     /tmp/ccYSNOoy.s:128    .text.shellStringCompare:0000000000000000 shellStringCompare
     /tmp/ccYSNOoy.s:181    .text.shellGetCommandDesc:0000000000000000 $t
     /tmp/ccYSNOoy.s:187    .text.shellGetCommandDesc:0000000000000000 shellGetCommandDesc
     /tmp/ccYSNOoy.s:233    .text.shellParserParam:0000000000000000 $t
     /tmp/ccYSNOoy.s:239    .text.shellParserParam:0000000000000000 shellParserParam
     /tmp/ccYSNOoy.s:395    .text.shellHistoryAdd:0000000000000000 $t
     /tmp/ccYSNOoy.s:401    .text.shellHistoryAdd:0000000000000000 shellHistoryAdd
     /tmp/ccYSNOoy.s:479    .text.shellRemoveParamQuotes:0000000000000000 $t
     /tmp/ccYSNOoy.s:485    .text.shellRemoveParamQuotes:0000000000000000 shellRemoveParamQuotes
     /tmp/ccYSNOoy.s:565    .text.shellGetCurrent:0000000000000000 $t
     /tmp/ccYSNOoy.s:572    .text.shellGetCurrent:0000000000000000 shellGetCurrent
     /tmp/ccYSNOoy.s:615    .text.shellGetCurrent:0000000000000028 $d
     /tmp/ccYSNOoy.s:620    .text.shellWriteByte:0000000000000000 $t
     /tmp/ccYSNOoy.s:627    .text.shellWriteByte:0000000000000000 shellWriteByte
     /tmp/ccYSNOoy.s:661    .text.shellRight:0000000000000000 $t
     /tmp/ccYSNOoy.s:668    .text.shellRight:0000000000000000 shellRight
     /tmp/ccYSNOoy.s:703    .text.shellLeft:0000000000000000 $t
     /tmp/ccYSNOoy.s:710    .text.shellLeft:0000000000000000 shellLeft
     /tmp/ccYSNOoy.s:742    .text.shellWriteString:0000000000000000 $t
     /tmp/ccYSNOoy.s:749    .text.shellWriteString:0000000000000000 shellWriteString
     /tmp/ccYSNOoy.s:785    .text.shellSetUser:0000000000000000 $t
     /tmp/ccYSNOoy.s:791    .text.shellSetUser:0000000000000000 shellSetUser
     /tmp/ccYSNOoy.s:871    .text.shellSetUser:0000000000000058 $d
     /tmp/ccYSNOoy.s:877    .text.shellWriteCommandLine:0000000000000000 $t
     /tmp/ccYSNOoy.s:883    .text.shellWriteCommandLine:0000000000000000 shellWriteCommandLine
     /tmp/ccYSNOoy.s:953    .text.shellWriteCommandLine:000000000000004c $d
     /tmp/ccYSNOoy.s:962    .text.shellCheckPassword:0000000000000000 $t
     /tmp/ccYSNOoy.s:968    .text.shellCheckPassword:0000000000000000 shellCheckPassword
     /tmp/ccYSNOoy.s:1016   .text.shellCheckPassword:0000000000000038 $d
     /tmp/ccYSNOoy.s:1022   .text.shellClear:0000000000000000 $t
     /tmp/ccYSNOoy.s:1029   .text.shellClear:0000000000000000 shellClear
     /tmp/ccYSNOoy.s:1054   .text.shellClear:0000000000000010 $d
     /tmp/ccYSNOoy.s:1059   .text.shellPrint:0000000000000000 $t
     /tmp/ccYSNOoy.s:1066   .text.shellPrint:0000000000000000 shellPrint
     /tmp/ccYSNOoy.s:1129   .text.shellScan:0000000000000000 $t
     /tmp/ccYSNOoy.s:1136   .text.shellScan:0000000000000000 shellScan
     /tmp/ccYSNOoy.s:1253   .text.shellScan:0000000000000070 $d
     /tmp/ccYSNOoy.s:1258   .text.shellCheckPermission:0000000000000000 $t
     /tmp/ccYSNOoy.s:1265   .text.shellCheckPermission:0000000000000000 shellCheckPermission
     /tmp/ccYSNOoy.s:1321   .text.shellToHex:0000000000000000 $t
     /tmp/ccYSNOoy.s:1328   .text.shellToHex:0000000000000000 shellToHex
     /tmp/ccYSNOoy.s:1403   .text.shellGetCommandName:0000000000000000 $t
     /tmp/ccYSNOoy.s:1409   .text.shellGetCommandName:0000000000000000 shellGetCommandName
     /tmp/ccYSNOoy.s:1486   .text.shellGetCommandName:0000000000000040 $d
     /tmp/ccYSNOoy.s:1491   .text.shellToDec:0000000000000000 $t
     /tmp/ccYSNOoy.s:1498   .text.shellToDec:0000000000000000 shellToDec
     /tmp/ccYSNOoy.s:1600   .text.shellToDec:000000000000005c $d
     /tmp/ccYSNOoy.s:1605   .text.shellWriteReturnValue:0000000000000000 $t
     /tmp/ccYSNOoy.s:1611   .text.shellWriteReturnValue:0000000000000000 shellWriteReturnValue
ARM GAS  /tmp/ccYSNOoy.s 			page 134


     /tmp/ccYSNOoy.s:1702   .text.shellWriteReturnValue:000000000000006c $d
     /tmp/ccYSNOoy.s:1710   .text.shellListItem:0000000000000000 $t
     /tmp/ccYSNOoy.s:1717   .text.shellListItem:0000000000000000 shellListItem
     /tmp/ccYSNOoy.s:1824   .text.shellListItem:000000000000007c $d
     /tmp/ccYSNOoy.s:1833   .text.shellListCommand:0000000000000000 $t
     /tmp/ccYSNOoy.s:1840   .text.shellListCommand:0000000000000000 shellListCommand
     /tmp/ccYSNOoy.s:1907   .text.shellListCommand:0000000000000044 $d
     /tmp/ccYSNOoy.s:1912   .text.shellCmds:0000000000000000 $t
     /tmp/ccYSNOoy.s:1919   .text.shellCmds:0000000000000000 shellCmds
     /tmp/ccYSNOoy.s:1944   .text.shellListVar:0000000000000000 $t
     /tmp/ccYSNOoy.s:1951   .text.shellListVar:0000000000000000 shellListVar
     /tmp/ccYSNOoy.s:2020   .text.shellListVar:0000000000000048 $d
     /tmp/ccYSNOoy.s:2025   .text.shellVars:0000000000000000 $t
     /tmp/ccYSNOoy.s:2032   .text.shellVars:0000000000000000 shellVars
     /tmp/ccYSNOoy.s:2057   .text.shellListUser:0000000000000000 $t
     /tmp/ccYSNOoy.s:2064   .text.shellListUser:0000000000000000 shellListUser
     /tmp/ccYSNOoy.s:2131   .text.shellListUser:0000000000000044 $d
     /tmp/ccYSNOoy.s:2136   .text.shellUsers:0000000000000000 $t
     /tmp/ccYSNOoy.s:2143   .text.shellUsers:0000000000000000 shellUsers
     /tmp/ccYSNOoy.s:2168   .text.shellListKey:0000000000000000 $t
     /tmp/ccYSNOoy.s:2175   .text.shellListKey:0000000000000000 shellListKey
     /tmp/ccYSNOoy.s:2242   .text.shellListKey:0000000000000044 $d
     /tmp/ccYSNOoy.s:2247   .text.shellKeys:0000000000000000 $t
     /tmp/ccYSNOoy.s:2254   .text.shellKeys:0000000000000000 shellKeys
     /tmp/ccYSNOoy.s:2279   .text.shellListAll:0000000000000000 $t
     /tmp/ccYSNOoy.s:2286   .text.shellListAll:0000000000000000 shellListAll
     /tmp/ccYSNOoy.s:2306   .text.shellDeleteCommandLine:0000000000000000 $t
     /tmp/ccYSNOoy.s:2313   .text.shellDeleteCommandLine:0000000000000000 shellDeleteCommandLine
     /tmp/ccYSNOoy.s:2352   .text.shellDeleteCommandLine:000000000000001c $d
     /tmp/ccYSNOoy.s:2357   .text.shellClearCommandLine:0000000000000000 $t
     /tmp/ccYSNOoy.s:2364   .text.shellClearCommandLine:0000000000000000 shellClearCommandLine
     /tmp/ccYSNOoy.s:2414   .text.shellHistory:0000000000000000 $t
     /tmp/ccYSNOoy.s:2420   .text.shellHistory:0000000000000000 shellHistory
     /tmp/ccYSNOoy.s:2535   .text.shellHistory:00000000000000a0 $d
     /tmp/ccYSNOoy.s:2540   .text.shellUp:0000000000000000 $t
     /tmp/ccYSNOoy.s:2547   .text.shellUp:0000000000000000 shellUp
     /tmp/ccYSNOoy.s:2568   .text.shellDown:0000000000000000 $t
     /tmp/ccYSNOoy.s:2575   .text.shellDown:0000000000000000 shellDown
     /tmp/ccYSNOoy.s:2596   .text.shellTab:0000000000000000 $t
     /tmp/ccYSNOoy.s:2603   .text.shellTab:0000000000000000 shellTab
     /tmp/ccYSNOoy.s:2814   .text.shellTab:0000000000000110 $d
     /tmp/ccYSNOoy.s:2820   .text.shellInsertByte:0000000000000000 $t
     /tmp/ccYSNOoy.s:2827   .text.shellInsertByte:0000000000000000 shellInsertByte
     /tmp/ccYSNOoy.s:2995   .text.shellInsertByte:00000000000000b8 $d
     /tmp/ccYSNOoy.s:3001   .text.shellDeleteByte:0000000000000000 $t
     /tmp/ccYSNOoy.s:3008   .text.shellDeleteByte:0000000000000000 shellDeleteByte
     /tmp/ccYSNOoy.s:3186   .text.shellBackspace:0000000000000000 $t
     /tmp/ccYSNOoy.s:3193   .text.shellBackspace:0000000000000000 shellBackspace
     /tmp/ccYSNOoy.s:3214   .text.shellDelete:0000000000000000 $t
     /tmp/ccYSNOoy.s:3221   .text.shellDelete:0000000000000000 shellDelete
     /tmp/ccYSNOoy.s:3242   .text.shellSeekCommand:0000000000000000 $t
     /tmp/ccYSNOoy.s:3249   .text.shellSeekCommand:0000000000000000 shellSeekCommand
     /tmp/ccYSNOoy.s:3349   .text.shellInit:0000000000000000 $t
     /tmp/ccYSNOoy.s:3356   .text.shellInit:0000000000000000 shellInit
     /tmp/ccYSNOoy.s:3467   .text.shellInit:0000000000000080 $d
     /tmp/ccYSNOoy.s:3475   .text.shellHelp:0000000000000000 $t
     /tmp/ccYSNOoy.s:3482   .text.shellHelp:0000000000000000 shellHelp
ARM GAS  /tmp/ccYSNOoy.s 			page 135


     /tmp/ccYSNOoy.s:3578   .text.shellHelp:000000000000006c $d
     /tmp/ccYSNOoy.s:3586   .text.shellGetVarValue:0000000000000000 $t
     /tmp/ccYSNOoy.s:3593   .text.shellGetVarValue:0000000000000000 shellGetVarValue
     /tmp/ccYSNOoy.s:3614   .text.shellGetVarValue:0000000000000012 $d
     /tmp/ccYSNOoy.s:3620   .text.shellGetVarValue:0000000000000018 $t
     /tmp/ccYSNOoy.s:3681   .text.shellShowVar:0000000000000000 $t
     /tmp/ccYSNOoy.s:3687   .text.shellShowVar:0000000000000000 shellShowVar
     /tmp/ccYSNOoy.s:3822   .text.shellShowVar:00000000000000a8 $d
     /tmp/ccYSNOoy.s:3831   .text.shellSetVarValue:0000000000000000 $t
     /tmp/ccYSNOoy.s:3838   .text.shellSetVarValue:0000000000000000 shellSetVarValue
     /tmp/ccYSNOoy.s:3867   .text.shellSetVarValue:000000000000001e $d
     /tmp/ccYSNOoy.s:3873   .text.shellSetVarValue:0000000000000024 $t
     /tmp/ccYSNOoy.s:3950   .text.shellSetVarValue:0000000000000070 $d
     /tmp/ccYSNOoy.s:3956   .text.shellSetVar:0000000000000000 $t
     /tmp/ccYSNOoy.s:3963   .text.shellSetVar:0000000000000000 shellSetVar
     /tmp/ccYSNOoy.s:4046   .text.shellSetVar:000000000000005c $d
     /tmp/ccYSNOoy.s:4052   .text.shellRunCommand:0000000000000000 $t
     /tmp/ccYSNOoy.s:4059   .text.shellRunCommand:0000000000000000 shellRunCommand
     /tmp/ccYSNOoy.s:4172   .text.shellNormalInput:0000000000000000 $t
     /tmp/ccYSNOoy.s:4179   .text.shellNormalInput:0000000000000000 shellNormalInput
     /tmp/ccYSNOoy.s:4203   .text.shellExec:0000000000000000 $t
     /tmp/ccYSNOoy.s:4210   .text.shellExec:0000000000000000 shellExec
     /tmp/ccYSNOoy.s:4298   .text.shellExec:0000000000000060 $d
     /tmp/ccYSNOoy.s:4304   .text.shellEnter:0000000000000000 $t
     /tmp/ccYSNOoy.s:4311   .text.shellEnter:0000000000000000 shellEnter
     /tmp/ccYSNOoy.s:4337   .text.shellHandler:0000000000000000 $t
     /tmp/ccYSNOoy.s:4344   .text.shellHandler:0000000000000000 shellHandler
     /tmp/ccYSNOoy.s:4518   .text.shellHandler:00000000000000d4 $d
     /tmp/ccYSNOoy.s:4523   .text.shellTask:0000000000000000 $t
     /tmp/ccYSNOoy.s:4530   .text.shellTask:0000000000000000 shellTask
     /tmp/ccYSNOoy.s:4586   .text.shellRun:0000000000000000 $t
     /tmp/ccYSNOoy.s:4593   .text.shellRun:0000000000000000 shellRun
     /tmp/ccYSNOoy.s:4682   .text.shellRun:000000000000005c $d
     /tmp/ccYSNOoy.s:5020   shellCommand:0000000000000000 shellCommandclear
     /tmp/ccYSNOoy.s:4871   .rodata.shellDescclear:0000000000000000 shellDescclear
     /tmp/ccYSNOoy.s:4759   .rodata.shellCmdclear:0000000000000000 shellCmdclear
     /tmp/ccYSNOoy.s:5027   shellCommand:0000000000000010 shellCommandkeys
     /tmp/ccYSNOoy.s:4889   .rodata.shellDesckeys:0000000000000000 shellDesckeys
     /tmp/ccYSNOoy.s:4777   .rodata.shellCmdkeys:0000000000000000 shellCmdkeys
     /tmp/ccYSNOoy.s:5034   shellCommand:0000000000000020 shellCommandvars
     /tmp/ccYSNOoy.s:4907   .rodata.shellDescvars:0000000000000000 shellDescvars
     /tmp/ccYSNOoy.s:4795   .rodata.shellCmdvars:0000000000000000 shellCmdvars
     /tmp/ccYSNOoy.s:5041   shellCommand:0000000000000030 shellCommandcmds
     /tmp/ccYSNOoy.s:4877   .rodata.shellDesccmds:0000000000000000 shellDesccmds
     /tmp/ccYSNOoy.s:4765   .rodata.shellCmdcmds:0000000000000000 shellCmdcmds
     /tmp/ccYSNOoy.s:5048   shellCommand:0000000000000040 shellCommandusers
     /tmp/ccYSNOoy.s:4901   .rodata.shellDescusers:0000000000000000 shellDescusers
     /tmp/ccYSNOoy.s:4789   .rodata.shellCmdusers:0000000000000000 shellCmdusers
     /tmp/ccYSNOoy.s:5055   shellCommand:0000000000000050 shellCommandhelp
     /tmp/ccYSNOoy.s:4883   .rodata.shellDeschelp:0000000000000000 shellDeschelp
     /tmp/ccYSNOoy.s:4771   .rodata.shellCmdhelp:0000000000000000 shellCmdhelp
     /tmp/ccYSNOoy.s:5062   shellCommand:0000000000000060 shellKey0x0D000000
     /tmp/ccYSNOoy.s:4829   .rodata.shellDesc0x0D000000:0000000000000000 shellDesc0x0D000000
     /tmp/ccYSNOoy.s:5069   shellCommand:0000000000000070 shellKey0x0A000000
     /tmp/ccYSNOoy.s:4823   .rodata.shellDesc0x0A000000:0000000000000000 shellDesc0x0A000000
     /tmp/ccYSNOoy.s:5076   shellCommand:0000000000000080 shellKey0x1B5B337E
     /tmp/ccYSNOoy.s:4835   .rodata.shellDesc0x1B5B337E:0000000000000000 shellDesc0x1B5B337E
ARM GAS  /tmp/ccYSNOoy.s 			page 136


     /tmp/ccYSNOoy.s:5083   shellCommand:0000000000000090 shellKey0x7F000000
     /tmp/ccYSNOoy.s:4865   .rodata.shellDesc0x7F000000:0000000000000000 shellDesc0x7F000000
     /tmp/ccYSNOoy.s:5090   shellCommand:00000000000000a0 shellKey0x08000000
     /tmp/ccYSNOoy.s:4811   .rodata.shellDesc0x08000000:0000000000000000 shellDesc0x08000000
     /tmp/ccYSNOoy.s:5097   shellCommand:00000000000000b0 shellKey0x09000000
     /tmp/ccYSNOoy.s:4817   .rodata.shellDesc0x09000000:0000000000000000 shellDesc0x09000000
     /tmp/ccYSNOoy.s:5104   shellCommand:00000000000000c0 shellKey0x1B5B4400
     /tmp/ccYSNOoy.s:4859   .rodata.shellDesc0x1B5B4400:0000000000000000 shellDesc0x1B5B4400
     /tmp/ccYSNOoy.s:5111   shellCommand:00000000000000d0 shellKey0x1B5B4300
     /tmp/ccYSNOoy.s:4853   .rodata.shellDesc0x1B5B4300:0000000000000000 shellDesc0x1B5B4300
     /tmp/ccYSNOoy.s:5118   shellCommand:00000000000000e0 shellKey0x1B5B4200
     /tmp/ccYSNOoy.s:4847   .rodata.shellDesc0x1B5B4200:0000000000000000 shellDesc0x1B5B4200
     /tmp/ccYSNOoy.s:5125   shellCommand:00000000000000f0 shellKey0x1B5B4100
     /tmp/ccYSNOoy.s:4841   .rodata.shellDesc0x1B5B4100:0000000000000000 shellDesc0x1B5B4100
     /tmp/ccYSNOoy.s:5132   shellCommand:0000000000000100 shellCommandsetVar
     /tmp/ccYSNOoy.s:4895   .rodata.shellDescsetVar:0000000000000000 shellDescsetVar
     /tmp/ccYSNOoy.s:4783   .rodata.shellCmdsetVar:0000000000000000 shellCmdsetVar
     /tmp/ccYSNOoy.s:5139   shellCommand:0000000000000110 shellUserDefault
     /tmp/ccYSNOoy.s:4805   .rodata.shellDesDefaultUser:0000000000000000 shellDesDefaultUser
     /tmp/ccYSNOoy.s:4958   .rodata.shellPasswordDefaultUser:0000000000000000 shellPasswordDefaultUser
     /tmp/ccYSNOoy.s:4753   .rodata.shellCmdDefaultUser:0000000000000000 shellCmdDefaultUser
     /tmp/ccYSNOoy.s:4732   .bss.buffer.10246:0000000000000000 $d
     /tmp/ccYSNOoy.s:4736   .bss.buffer.10246:0000000000000000 buffer.10246
     /tmp/ccYSNOoy.s:4739   .bss.shellList:0000000000000000 $d
     /tmp/ccYSNOoy.s:4743   .bss.shellList:0000000000000000 shellList
     /tmp/ccYSNOoy.s:4746   .rodata.shellCheckPassword.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4750   .rodata.shellCmdDefaultUser:0000000000000000 $d
     /tmp/ccYSNOoy.s:4756   .rodata.shellCmdclear:0000000000000000 $d
     /tmp/ccYSNOoy.s:4762   .rodata.shellCmdcmds:0000000000000000 $d
     /tmp/ccYSNOoy.s:4768   .rodata.shellCmdhelp:0000000000000000 $d
     /tmp/ccYSNOoy.s:4774   .rodata.shellCmdkeys:0000000000000000 $d
     /tmp/ccYSNOoy.s:4780   .rodata.shellCmdsetVar:0000000000000000 $d
     /tmp/ccYSNOoy.s:4786   .rodata.shellCmdusers:0000000000000000 $d
     /tmp/ccYSNOoy.s:4792   .rodata.shellCmdvars:0000000000000000 $d
     /tmp/ccYSNOoy.s:4798   .rodata.shellDeleteCommandLine.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4802   .rodata.shellDesDefaultUser:0000000000000000 $d
     /tmp/ccYSNOoy.s:4808   .rodata.shellDesc0x08000000:0000000000000000 $d
     /tmp/ccYSNOoy.s:4814   .rodata.shellDesc0x09000000:0000000000000000 $d
     /tmp/ccYSNOoy.s:4820   .rodata.shellDesc0x0A000000:0000000000000000 $d
     /tmp/ccYSNOoy.s:4826   .rodata.shellDesc0x0D000000:0000000000000000 $d
     /tmp/ccYSNOoy.s:4832   .rodata.shellDesc0x1B5B337E:0000000000000000 $d
     /tmp/ccYSNOoy.s:4838   .rodata.shellDesc0x1B5B4100:0000000000000000 $d
     /tmp/ccYSNOoy.s:4844   .rodata.shellDesc0x1B5B4200:0000000000000000 $d
     /tmp/ccYSNOoy.s:4850   .rodata.shellDesc0x1B5B4300:0000000000000000 $d
     /tmp/ccYSNOoy.s:4856   .rodata.shellDesc0x1B5B4400:0000000000000000 $d
     /tmp/ccYSNOoy.s:4862   .rodata.shellDesc0x7F000000:0000000000000000 $d
     /tmp/ccYSNOoy.s:4868   .rodata.shellDescclear:0000000000000000 $d
     /tmp/ccYSNOoy.s:4874   .rodata.shellDesccmds:0000000000000000 $d
     /tmp/ccYSNOoy.s:4880   .rodata.shellDeschelp:0000000000000000 $d
     /tmp/ccYSNOoy.s:4886   .rodata.shellDesckeys:0000000000000000 $d
     /tmp/ccYSNOoy.s:4892   .rodata.shellDescsetVar:0000000000000000 $d
     /tmp/ccYSNOoy.s:4898   .rodata.shellDescusers:0000000000000000 $d
     /tmp/ccYSNOoy.s:4904   .rodata.shellDescvars:0000000000000000 $d
     /tmp/ccYSNOoy.s:4910   .rodata.shellHelp.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4917   .rodata.shellInit.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4921   .rodata.shellInsertByte.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4925   .rodata.shellListCommand.str1.4:0000000000000000 $d
ARM GAS  /tmp/ccYSNOoy.s 			page 137


     /tmp/ccYSNOoy.s:4929   .rodata.shellListItem.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4943   .rodata.shellListKey.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4947   .rodata.shellListUser.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4951   .rodata.shellListVar.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4955   .rodata.shellPasswordDefaultUser:0000000000000000 $d
     /tmp/ccYSNOoy.s:4961   .rodata.shellSetUser.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4972   .rodata.shellSetVar.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4978   .rodata.shellSetVarValue.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4985   .rodata.shellShowVar.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:4991   .rodata.shellWriteCommandLine.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:5007   .rodata.shellWriteReturnValue.str1.4:0000000000000000 $d
     /tmp/ccYSNOoy.s:5017   shellCommand:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
strcmp
strlen
vsnprintf
vsscanf
strncmp
_shell_command_start
_shell_command_end
shellExtRun
