ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"shell.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.shellAdd,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	shellAdd:
  27              	.LFB125:
  28              		.file 1 "Dsp/letter_shell/shell.c"
   1:Dsp/letter_shell/shell.c **** /**
   2:Dsp/letter_shell/shell.c ****  * @file shell.c
   3:Dsp/letter_shell/shell.c ****  * @author Letter (NevermindZZT@gmail.com)
   4:Dsp/letter_shell/shell.c ****  * @version 3.0.0
   5:Dsp/letter_shell/shell.c ****  * @date 2019-12-30
   6:Dsp/letter_shell/shell.c ****  * 
   7:Dsp/letter_shell/shell.c ****  * @copyright (c) 2020 Letter
   8:Dsp/letter_shell/shell.c ****  * 
   9:Dsp/letter_shell/shell.c ****  */
  10:Dsp/letter_shell/shell.c **** 
  11:Dsp/letter_shell/shell.c **** #include "shell.h"
  12:Dsp/letter_shell/shell.c **** #include "string.h"
  13:Dsp/letter_shell/shell.c **** #include "stdio.h"
  14:Dsp/letter_shell/shell.c **** #include "stdarg.h"
  15:Dsp/letter_shell/shell.c **** #include "shell_ext.h"
  16:Dsp/letter_shell/shell.c **** #include "delay.h"
  17:Dsp/letter_shell/shell.c **** #include "stm32f4xx_usart.h"
  18:Dsp/letter_shell/shell.c **** 
  19:Dsp/letter_shell/shell.c **** 
  20:Dsp/letter_shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
  21:Dsp/letter_shell/shell.c **** /**
  22:Dsp/letter_shell/shell.c ****  * @brief 默认用户
  23:Dsp/letter_shell/shell.c ****  */
  24:Dsp/letter_shell/shell.c **** const char shellCmdDefaultUser[] = SHELL_DEFAULT_USER;
  25:Dsp/letter_shell/shell.c **** const char shellPasswordDefaultUser[] = SHELL_DEFAULT_USER_PASSWORD;
  26:Dsp/letter_shell/shell.c **** const char shellDesDefaultUser[] = "default user";
  27:Dsp/letter_shell/shell.c **** const ShellCommand shellUserDefault SECTION("shellCommand") =
  28:Dsp/letter_shell/shell.c **** {
  29:Dsp/letter_shell/shell.c ****     .attr.value = SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_USER),
  30:Dsp/letter_shell/shell.c ****     .data.user.name = shellCmdDefaultUser,
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 2


  31:Dsp/letter_shell/shell.c ****     .data.user.password = shellPasswordDefaultUser,
  32:Dsp/letter_shell/shell.c ****     .data.user.desc = shellDesDefaultUser
  33:Dsp/letter_shell/shell.c **** };
  34:Dsp/letter_shell/shell.c **** #endif
  35:Dsp/letter_shell/shell.c **** 
  36:Dsp/letter_shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
  37:Dsp/letter_shell/shell.c ****     #if defined(__CC_ARM) || (defined(__ARMCC_VERSION) && __ARMCC_VERSION >= 6000000)
  38:Dsp/letter_shell/shell.c ****         extern const unsigned int shellCommand$$Base;
  39:Dsp/letter_shell/shell.c ****         extern const unsigned int shellCommand$$Limit;
  40:Dsp/letter_shell/shell.c ****     #elif defined(__ICCARM__) || defined(__ICCRX__)
  41:Dsp/letter_shell/shell.c ****         #pragma section="shellCommand"
  42:Dsp/letter_shell/shell.c ****     #elif defined(__GNUC__)
  43:Dsp/letter_shell/shell.c ****         extern const unsigned int _shell_command_start;
  44:Dsp/letter_shell/shell.c ****         extern const unsigned int _shell_command_end;
  45:Dsp/letter_shell/shell.c ****     #endif
  46:Dsp/letter_shell/shell.c **** #else
  47:Dsp/letter_shell/shell.c ****     extern const ShellCommand shellCommandList[];
  48:Dsp/letter_shell/shell.c ****     extern const unsigned short shellCommandCount;
  49:Dsp/letter_shell/shell.c **** #endif
  50:Dsp/letter_shell/shell.c **** 
  51:Dsp/letter_shell/shell.c **** 
  52:Dsp/letter_shell/shell.c **** /**
  53:Dsp/letter_shell/shell.c ****  * @brief shell 常量文本索引
  54:Dsp/letter_shell/shell.c ****  */
  55:Dsp/letter_shell/shell.c **** enum
  56:Dsp/letter_shell/shell.c **** {
  57:Dsp/letter_shell/shell.c **** #if SHELL_SHOW_INFO == 1
  58:Dsp/letter_shell/shell.c ****     SHELL_TEXT_INFO,                                    /**< shell信息 */
  59:Dsp/letter_shell/shell.c **** #endif
  60:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CMD_TOO_LONG,                            /**< 命令过长 */
  61:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CMD_LIST,                                /**< 可执行命令列表标题 */
  62:Dsp/letter_shell/shell.c ****     SHELL_TEXT_VAR_LIST,                                /**< 变量列表标题 */
  63:Dsp/letter_shell/shell.c ****     SHELL_TEXT_USER_LIST,                               /**< 用户列表标题 */
  64:Dsp/letter_shell/shell.c ****     SHELL_TEXT_KEY_LIST,                                /**< 按键列表标题 */
  65:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CMD_NOT_FOUND,                           /**< 命令未找到 */
  66:Dsp/letter_shell/shell.c ****     SHELL_TEXT_POINT_CANNOT_MODIFY,                     /**< 指针变量不允许修改 */
  67:Dsp/letter_shell/shell.c ****     SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY,             /**< 只读变量不允许修改 */
  68:Dsp/letter_shell/shell.c ****     SHELL_TEXT_NOT_VAR,                                 /**< 命令不是变量 */
  69:Dsp/letter_shell/shell.c ****     SHELL_TEXT_VAR_NOT_FOUND,                           /**< 变量未找到 */
  70:Dsp/letter_shell/shell.c ****     SHELL_TEXT_HELP_HEADER,                             /**< help头 */
  71:Dsp/letter_shell/shell.c ****     SHELL_TEXT_PASSWORD_HINT,                           /**< 密码输入提示 */
  72:Dsp/letter_shell/shell.c ****     SHELL_TEXT_PASSWORD_ERROR,                          /**< 密码错误 */
  73:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CLEAR_CONSOLE,                           /**< 清空控制台 */
  74:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CLEAR_LINE,                              /**< 清空当前行 */
  75:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_CMD,                                /**< 命令类型 */
  76:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_VAR,                                /**< 变量类型 */
  77:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_USER,                               /**< 用户类型 */
  78:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_KEY,                                /**< 按键类型 */
  79:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_NONE,                               /**< 非法类型 */
  80:Dsp/letter_shell/shell.c **** #if SHELL_EXEC_UNDEF_FUNC == 1
  81:Dsp/letter_shell/shell.c ****     SHELL_TEXT_PARAM_ERROR,                             /**< 参数错误 */
  82:Dsp/letter_shell/shell.c **** #endif
  83:Dsp/letter_shell/shell.c **** };
  84:Dsp/letter_shell/shell.c **** 
  85:Dsp/letter_shell/shell.c **** 
  86:Dsp/letter_shell/shell.c **** 
  87:Dsp/letter_shell/shell.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 3


  88:Dsp/letter_shell/shell.c **** static const char *shellText[] =
  89:Dsp/letter_shell/shell.c **** {
  90:Dsp/letter_shell/shell.c **** #if SHELL_SHOW_INFO == 1
  91:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_INFO] =
  92:Dsp/letter_shell/shell.c ****         "\r\n"
  93:Dsp/letter_shell/shell.c **** 		"  ____    _      _       ___      _                   \r\n"
  94:Dsp/letter_shell/shell.c **** 		" |    \\  /_\\    | |     | _ \\   | |              ___ \r\n"
  95:Dsp/letter_shell/shell.c **** 		" |    |   _   __| |__   ||_|/ __| |__   ___    //    \r\n"
  96:Dsp/letter_shell/shell.c **** 		" |----/  | | |__   __|  |  \\ |__   __|  //   \\  \\__    \r\n"
  97:Dsp/letter_shell/shell.c **** 		" |    |  | |    | |_    | |\\    | |_   ||   ||      \\  \r\n"
  98:Dsp/letter_shell/shell.c **** 		" \\____/  |_|    |___/   |_| \\   |___/   \\___//   ___//  \r\n"
  99:Dsp/letter_shell/shell.c ****         "\r\n"
 100:Dsp/letter_shell/shell.c ****         "Build:       "__DATE__" "__TIME__"\r\n"
 101:Dsp/letter_shell/shell.c ****         "Version:     "SHELL_VERSION"\r\n",
 102:Dsp/letter_shell/shell.c **** #endif
 103:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CMD_TOO_LONG] = 
 104:Dsp/letter_shell/shell.c ****         "\r\nWarning: Command is too long\r\n",
 105:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CMD_LIST] = 
 106:Dsp/letter_shell/shell.c ****         "\r\nCommand List:\r\n",
 107:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_VAR_LIST] = 
 108:Dsp/letter_shell/shell.c ****         "\r\nVar List:\r\n",
 109:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_USER_LIST] = 
 110:Dsp/letter_shell/shell.c ****         "\r\nUser List:\r\n",
 111:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_KEY_LIST] =
 112:Dsp/letter_shell/shell.c ****         "\r\nKey List:\r\n",
 113:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CMD_NOT_FOUND] = 
 114:Dsp/letter_shell/shell.c ****         "Command not Found\r\n",
 115:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_POINT_CANNOT_MODIFY] = 
 116:Dsp/letter_shell/shell.c ****         "can't set pointer\r\n",
 117:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY] = 
 118:Dsp/letter_shell/shell.c ****         "can't set read only var\r\n",
 119:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_NOT_VAR] =
 120:Dsp/letter_shell/shell.c ****         " is not a var\r\n",
 121:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_VAR_NOT_FOUND] = 
 122:Dsp/letter_shell/shell.c ****         "Var not Fount\r\n",
 123:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_HELP_HEADER] =
 124:Dsp/letter_shell/shell.c ****         "command help of ",
 125:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_PASSWORD_HINT] = 
 126:Dsp/letter_shell/shell.c ****         "\r\nPlease input password:",
 127:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_PASSWORD_ERROR] = 
 128:Dsp/letter_shell/shell.c ****         "\r\npassword error\r\n",
 129:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CLEAR_CONSOLE] = 
 130:Dsp/letter_shell/shell.c ****         "\033[2J\033[1H",
 131:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CLEAR_LINE] = 
 132:Dsp/letter_shell/shell.c ****         "\033[2K\r",
 133:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_CMD] = 
 134:Dsp/letter_shell/shell.c ****         "CMD \r\n",
 135:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_VAR] = 
 136:Dsp/letter_shell/shell.c ****         "VAR",
 137:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_USER] = 
 138:Dsp/letter_shell/shell.c ****         "USER",
 139:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_KEY] = 
 140:Dsp/letter_shell/shell.c ****         "KEY",
 141:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_NONE] = 
 142:Dsp/letter_shell/shell.c ****         "NONE",
 143:Dsp/letter_shell/shell.c **** #if SHELL_EXEC_UNDEF_FUNC == 1
 144:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_PARAM_ERROR] = 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 4


 145:Dsp/letter_shell/shell.c ****         "Parameter error\r\n",
 146:Dsp/letter_shell/shell.c **** #endif
 147:Dsp/letter_shell/shell.c **** };
 148:Dsp/letter_shell/shell.c **** 
 149:Dsp/letter_shell/shell.c **** 
 150:Dsp/letter_shell/shell.c **** /**
 151:Dsp/letter_shell/shell.c ****  * @brief shell对象表
 152:Dsp/letter_shell/shell.c ****  */
 153:Dsp/letter_shell/shell.c **** static Shell *shellList[SHELL_MAX_NUMBER] = {NULL};
 154:Dsp/letter_shell/shell.c **** 
 155:Dsp/letter_shell/shell.c **** 
 156:Dsp/letter_shell/shell.c **** static void shellAdd(Shell *shell);
 157:Dsp/letter_shell/shell.c **** static void shellWriteCommandLine(Shell *shell, unsigned char newline);
 158:Dsp/letter_shell/shell.c **** static void shellWriteReturnValue(Shell *shell, int value);
 159:Dsp/letter_shell/shell.c **** static int shellShowVar(Shell *shell, ShellCommand *command);
 160:Dsp/letter_shell/shell.c **** static void shellSetUser(Shell *shell, const ShellCommand *user);
 161:Dsp/letter_shell/shell.c **** ShellCommand* shellSeekCommand(Shell *shell,
 162:Dsp/letter_shell/shell.c ****                                const char *cmd,
 163:Dsp/letter_shell/shell.c ****                                ShellCommand *base,
 164:Dsp/letter_shell/shell.c ****                                unsigned short compareLength);
 165:Dsp/letter_shell/shell.c **** 
 166:Dsp/letter_shell/shell.c **** /**
 167:Dsp/letter_shell/shell.c ****  * @brief shell 初始化
 168:Dsp/letter_shell/shell.c ****  * 
 169:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 170:Dsp/letter_shell/shell.c ****  */
 171:Dsp/letter_shell/shell.c **** void shellInit(Shell *shell, char *buffer, unsigned short size)
 172:Dsp/letter_shell/shell.c **** {
 173:Dsp/letter_shell/shell.c ****     shell->parser.length = 0;
 174:Dsp/letter_shell/shell.c ****     shell->parser.cursor = 0;
 175:Dsp/letter_shell/shell.c ****     shell->history.offset = 0;
 176:Dsp/letter_shell/shell.c ****     shell->history.number = 0;
 177:Dsp/letter_shell/shell.c ****     shell->history.record = 0;
 178:Dsp/letter_shell/shell.c ****     shell->info.user = NULL;
 179:Dsp/letter_shell/shell.c ****     shell->status.isChecked = 1;
 180:Dsp/letter_shell/shell.c **** 
 181:Dsp/letter_shell/shell.c ****     shell->parser.buffer = buffer;
 182:Dsp/letter_shell/shell.c ****     shell->parser.bufferSize = size / (SHELL_HISTORY_MAX_NUMBER + 1);
 183:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_HISTORY_MAX_NUMBER; i++)
 184:Dsp/letter_shell/shell.c ****     {
 185:Dsp/letter_shell/shell.c ****         shell->history.item[i] = buffer + shell->parser.bufferSize * (i + 1);
 186:Dsp/letter_shell/shell.c ****     }
 187:Dsp/letter_shell/shell.c **** 
 188:Dsp/letter_shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
 189:Dsp/letter_shell/shell.c ****     #if defined(__CC_ARM) || (defined(__ARMCC_VERSION) && __ARMCC_VERSION >= 6000000)
 190:Dsp/letter_shell/shell.c ****         shell->commandList.base = (ShellCommand *)(&shellCommand$$Base);
 191:Dsp/letter_shell/shell.c ****         shell->commandList.count = ((unsigned int)(&shellCommand$$Limit)
 192:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(&shellCommand$$Base))
 193:Dsp/letter_shell/shell.c ****                                 / sizeof(ShellCommand);
 194:Dsp/letter_shell/shell.c **** 
 195:Dsp/letter_shell/shell.c ****     #elif defined(__ICCARM__) || defined(__ICCRX__)
 196:Dsp/letter_shell/shell.c ****         shell->commandList.base = (ShellCommand *)(__section_begin("shellCommand"));
 197:Dsp/letter_shell/shell.c ****         shell->commandList.count = ((unsigned int)(__section_end("shellCommand"))
 198:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(__section_begin("shellCommand")))
 199:Dsp/letter_shell/shell.c ****                                 / sizeof(ShellCommand);
 200:Dsp/letter_shell/shell.c ****     #elif defined(__GNUC__)
 201:Dsp/letter_shell/shell.c ****         shell->commandList.base = (ShellCommand *)(&_shell_command_start);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 5


 202:Dsp/letter_shell/shell.c ****         shell->commandList.count = ((unsigned int)(&_shell_command_end)
 203:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(&_shell_command_start))
 204:Dsp/letter_shell/shell.c ****                                 / sizeof(ShellCommand);
 205:Dsp/letter_shell/shell.c ****     #else
 206:Dsp/letter_shell/shell.c ****         #error not supported compiler, please use command table mode
 207:Dsp/letter_shell/shell.c ****     #endif
 208:Dsp/letter_shell/shell.c **** #else
 209:Dsp/letter_shell/shell.c ****     shell->commandList.base = (ShellCommand *)shellCommandList;
 210:Dsp/letter_shell/shell.c ****     shell->commandList.count = shellCommandCount;
 211:Dsp/letter_shell/shell.c **** #endif
 212:Dsp/letter_shell/shell.c **** 
 213:Dsp/letter_shell/shell.c ****     shellAdd(shell);
 214:Dsp/letter_shell/shell.c **** 
 215:Dsp/letter_shell/shell.c ****     shellSetUser(shell, shellSeekCommand(shell,
 216:Dsp/letter_shell/shell.c ****                                          SHELL_DEFAULT_USER,
 217:Dsp/letter_shell/shell.c ****                                          shell->commandList.base,
 218:Dsp/letter_shell/shell.c ****                                          0));
 219:Dsp/letter_shell/shell.c ****     shellWriteCommandLine(shell, 1);
 220:Dsp/letter_shell/shell.c **** }
 221:Dsp/letter_shell/shell.c **** 
 222:Dsp/letter_shell/shell.c **** 
 223:Dsp/letter_shell/shell.c **** /**
 224:Dsp/letter_shell/shell.c ****  * @brief 添加shell
 225:Dsp/letter_shell/shell.c ****  * 
 226:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 227:Dsp/letter_shell/shell.c ****  */
 228:Dsp/letter_shell/shell.c **** static void shellAdd(Shell *shell)
 229:Dsp/letter_shell/shell.c **** {
  29              		.loc 1 229 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.LBB2:
 230:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
  36              		.loc 1 230 0
  37 0000 0023     		movs	r3, #0
  38 0002 0AE0     		b	.L2
  39              	.LVL1:
  40              	.L5:
 231:Dsp/letter_shell/shell.c ****     {
 232:Dsp/letter_shell/shell.c ****         if (shellList[i] == NULL)
  41              		.loc 1 232 0
  42 0004 1946     		mov	r1, r3
  43 0006 064A     		ldr	r2, .L6
  44 0008 52F82320 		ldr	r2, [r2, r3, lsl #2]
  45 000c 1AB9     		cbnz	r2, .L3
 233:Dsp/letter_shell/shell.c ****         {
 234:Dsp/letter_shell/shell.c ****             shellList[i] = shell;
  46              		.loc 1 234 0
  47 000e 044B     		ldr	r3, .L6
  48              	.LVL2:
  49 0010 43F82100 		str	r0, [r3, r1, lsl #2]
 235:Dsp/letter_shell/shell.c ****             return;
  50              		.loc 1 235 0
  51 0014 7047     		bx	lr
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 6


  52              	.LVL3:
  53              	.L3:
 230:Dsp/letter_shell/shell.c ****     {
  54              		.loc 1 230 0 discriminator 2
  55 0016 0133     		adds	r3, r3, #1
  56              	.LVL4:
  57 0018 1BB2     		sxth	r3, r3
  58              	.LVL5:
  59              	.L2:
 230:Dsp/letter_shell/shell.c ****     {
  60              		.loc 1 230 0 is_stmt 0 discriminator 1
  61 001a 042B     		cmp	r3, #4
  62 001c F2DD     		ble	.L5
  63 001e 7047     		bx	lr
  64              	.L7:
  65              		.align	2
  66              	.L6:
  67 0020 00000000 		.word	.LANCHOR0
  68              	.LBE2:
  69              		.cfi_endproc
  70              	.LFE125:
  72              		.section	.text.shellStringCopy,"ax",%progbits
  73              		.align	2
  74              		.thumb
  75              		.thumb_func
  77              	shellStringCopy:
  78              	.LFB136:
 236:Dsp/letter_shell/shell.c ****         }
 237:Dsp/letter_shell/shell.c ****     }
 238:Dsp/letter_shell/shell.c **** }
 239:Dsp/letter_shell/shell.c **** 
 240:Dsp/letter_shell/shell.c **** 
 241:Dsp/letter_shell/shell.c **** /**
 242:Dsp/letter_shell/shell.c ****  * @brief 获取当前活动shell
 243:Dsp/letter_shell/shell.c ****  * 
 244:Dsp/letter_shell/shell.c ****  * @return Shell* 当前活动shell对象
 245:Dsp/letter_shell/shell.c ****  */
 246:Dsp/letter_shell/shell.c **** Shell* shellGetCurrent(void)
 247:Dsp/letter_shell/shell.c **** {
 248:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
 249:Dsp/letter_shell/shell.c ****     {
 250:Dsp/letter_shell/shell.c ****         if (shellList[i] && shellList[i]->status.isActive)
 251:Dsp/letter_shell/shell.c ****         {
 252:Dsp/letter_shell/shell.c ****             return shellList[i];
 253:Dsp/letter_shell/shell.c ****         }
 254:Dsp/letter_shell/shell.c ****     }
 255:Dsp/letter_shell/shell.c ****     return NULL;
 256:Dsp/letter_shell/shell.c **** }
 257:Dsp/letter_shell/shell.c **** 
 258:Dsp/letter_shell/shell.c **** 
 259:Dsp/letter_shell/shell.c **** /**
 260:Dsp/letter_shell/shell.c ****  * @brief shell写字符
 261:Dsp/letter_shell/shell.c ****  * 
 262:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 263:Dsp/letter_shell/shell.c ****  * @param data 字符数据
 264:Dsp/letter_shell/shell.c ****  */
 265:Dsp/letter_shell/shell.c **** void shellWriteByte(Shell *shell, const char data)
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 7


 266:Dsp/letter_shell/shell.c **** {
 267:Dsp/letter_shell/shell.c ****     shell->write(data);
 268:Dsp/letter_shell/shell.c ****     delay_us(50);
 269:Dsp/letter_shell/shell.c **** }
 270:Dsp/letter_shell/shell.c **** 
 271:Dsp/letter_shell/shell.c **** 
 272:Dsp/letter_shell/shell.c **** /**
 273:Dsp/letter_shell/shell.c ****  * @brief shell 写字符串
 274:Dsp/letter_shell/shell.c ****  * 
 275:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 276:Dsp/letter_shell/shell.c ****  * @param string 字符串数据
 277:Dsp/letter_shell/shell.c ****  * 
 278:Dsp/letter_shell/shell.c ****  * @return unsigned short 写入字符的数量
 279:Dsp/letter_shell/shell.c ****  */
 280:Dsp/letter_shell/shell.c **** unsigned short shellWriteString(Shell *shell, const char *string)
 281:Dsp/letter_shell/shell.c **** {
 282:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
 283:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell->write, return 0);
 284:Dsp/letter_shell/shell.c ****     while(*string)
 285:Dsp/letter_shell/shell.c ****     {
 286:Dsp/letter_shell/shell.c ****         shell->write(*string ++);
 287:Dsp/letter_shell/shell.c ****         count ++;
 288:Dsp/letter_shell/shell.c ****         delay_us(100);
 289:Dsp/letter_shell/shell.c ****     }
 290:Dsp/letter_shell/shell.c ****     return count;
 291:Dsp/letter_shell/shell.c **** }
 292:Dsp/letter_shell/shell.c **** 
 293:Dsp/letter_shell/shell.c **** 
 294:Dsp/letter_shell/shell.c **** /**
 295:Dsp/letter_shell/shell.c ****  * @brief shell 写命令描述字符串
 296:Dsp/letter_shell/shell.c ****  * 
 297:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 298:Dsp/letter_shell/shell.c ****  * @param string 字符串数据
 299:Dsp/letter_shell/shell.c ****  * 
 300:Dsp/letter_shell/shell.c ****  * @return unsigned short 写入字符的数量
 301:Dsp/letter_shell/shell.c ****  */
 302:Dsp/letter_shell/shell.c **** static unsigned short shellWriteCommandDesc(Shell *shell, const char *string)
 303:Dsp/letter_shell/shell.c **** {
 304:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
 305:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell->write, return 0);
 306:Dsp/letter_shell/shell.c ****     while(*string
 307:Dsp/letter_shell/shell.c ****         && *string != '\r'
 308:Dsp/letter_shell/shell.c ****         && *string != '\n'
 309:Dsp/letter_shell/shell.c ****         && count < 36)
 310:Dsp/letter_shell/shell.c ****     {
 311:Dsp/letter_shell/shell.c ****         shell->write(*string ++);
 312:Dsp/letter_shell/shell.c ****         delay_us(10);
 313:Dsp/letter_shell/shell.c ****         count ++;
 314:Dsp/letter_shell/shell.c ****         if (count >= 36 && *(string + 1))
 315:Dsp/letter_shell/shell.c ****         {
 316:Dsp/letter_shell/shell.c ****             shell->write('.');
 317:Dsp/letter_shell/shell.c ****             shell->write('.');
 318:Dsp/letter_shell/shell.c ****             shell->write('.');
 319:Dsp/letter_shell/shell.c ****         }
 320:Dsp/letter_shell/shell.c ****     }
 321:Dsp/letter_shell/shell.c ****     return count;
 322:Dsp/letter_shell/shell.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 8


 323:Dsp/letter_shell/shell.c **** 
 324:Dsp/letter_shell/shell.c **** 
 325:Dsp/letter_shell/shell.c **** /**
 326:Dsp/letter_shell/shell.c ****  * @brief shell写命令提示符
 327:Dsp/letter_shell/shell.c ****  * 
 328:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 329:Dsp/letter_shell/shell.c ****  * @param newline 新行
 330:Dsp/letter_shell/shell.c ****  * 
 331:Dsp/letter_shell/shell.c ****  */
 332:Dsp/letter_shell/shell.c **** static void shellWriteCommandLine(Shell *shell, unsigned char newline)
 333:Dsp/letter_shell/shell.c **** {
 334:Dsp/letter_shell/shell.c ****     if (shell->status.isChecked)
 335:Dsp/letter_shell/shell.c ****     {
 336:Dsp/letter_shell/shell.c ****         if (newline)
 337:Dsp/letter_shell/shell.c ****         {
 338:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
 339:Dsp/letter_shell/shell.c ****         }
 340:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->info.user->data.user.name);
 341:Dsp/letter_shell/shell.c ****         shellWriteString(shell, ":");
 342:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->info.path ? shell->info.path : "/");
 343:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "$ ");
 344:Dsp/letter_shell/shell.c ****     }
 345:Dsp/letter_shell/shell.c ****     else
 346:Dsp/letter_shell/shell.c ****     {
 347:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_PASSWORD_HINT]);
 348:Dsp/letter_shell/shell.c ****     }
 349:Dsp/letter_shell/shell.c **** }
 350:Dsp/letter_shell/shell.c **** 
 351:Dsp/letter_shell/shell.c **** 
 352:Dsp/letter_shell/shell.c **** #if SHELL_PRINT_BUFFER > 0
 353:Dsp/letter_shell/shell.c **** /**
 354:Dsp/letter_shell/shell.c ****  * @brief shell格式化输出
 355:Dsp/letter_shell/shell.c ****  * 
 356:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 357:Dsp/letter_shell/shell.c ****  * @param fmt 格式化字符串
 358:Dsp/letter_shell/shell.c ****  * @param ... 参数
 359:Dsp/letter_shell/shell.c ****  */
 360:Dsp/letter_shell/shell.c **** void shellPrint(Shell *shell, char *fmt, ...)
 361:Dsp/letter_shell/shell.c **** {
 362:Dsp/letter_shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 363:Dsp/letter_shell/shell.c ****     va_list vargs;
 364:Dsp/letter_shell/shell.c **** 
 365:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell, return);
 366:Dsp/letter_shell/shell.c **** 
 367:Dsp/letter_shell/shell.c ****     va_start(vargs, fmt);
 368:Dsp/letter_shell/shell.c ****     vsnprintf(buffer, SHELL_PRINT_BUFFER - 1, fmt, vargs);
 369:Dsp/letter_shell/shell.c ****     va_end(vargs);
 370:Dsp/letter_shell/shell.c ****     
 371:Dsp/letter_shell/shell.c ****     shellWriteString(shell, buffer);
 372:Dsp/letter_shell/shell.c **** }
 373:Dsp/letter_shell/shell.c **** #endif
 374:Dsp/letter_shell/shell.c **** 
 375:Dsp/letter_shell/shell.c **** 
 376:Dsp/letter_shell/shell.c **** #if SHELL_SCAN_BUFFER > 0
 377:Dsp/letter_shell/shell.c **** /**
 378:Dsp/letter_shell/shell.c ****  * @brief shell格式化输入
 379:Dsp/letter_shell/shell.c ****  * 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 9


 380:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 381:Dsp/letter_shell/shell.c ****  * @param fmt 格式化字符串
 382:Dsp/letter_shell/shell.c ****  * @param ... 参数
 383:Dsp/letter_shell/shell.c ****  */
 384:Dsp/letter_shell/shell.c **** void shellScan(Shell *shell, char *fmt, ...)
 385:Dsp/letter_shell/shell.c **** {
 386:Dsp/letter_shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 387:Dsp/letter_shell/shell.c ****     va_list vargs;
 388:Dsp/letter_shell/shell.c ****     short index = 0;
 389:Dsp/letter_shell/shell.c **** 
 390:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell, return);
 391:Dsp/letter_shell/shell.c **** 
 392:Dsp/letter_shell/shell.c ****     if (shell->read)
 393:Dsp/letter_shell/shell.c ****     {
 394:Dsp/letter_shell/shell.c ****         do {
 395:Dsp/letter_shell/shell.c ****             if (shell->read(&buffer[index]) == 0)
 396:Dsp/letter_shell/shell.c ****             {
 397:Dsp/letter_shell/shell.c ****                 shell->write(buffer[index]);
 398:Dsp/letter_shell/shell.c ****                 index++;
 399:Dsp/letter_shell/shell.c ****             }
 400:Dsp/letter_shell/shell.c ****         } while (buffer[index -1] != '\r' && buffer[index -1] != '\n' && index < SHELL_SCAN_BUFFER)
 401:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 402:Dsp/letter_shell/shell.c ****         buffer[index] = '\0';
 403:Dsp/letter_shell/shell.c ****     }
 404:Dsp/letter_shell/shell.c **** 
 405:Dsp/letter_shell/shell.c ****     va_start(vargs, fmt);
 406:Dsp/letter_shell/shell.c ****     vsscanf(buffer, fmt, vargs);
 407:Dsp/letter_shell/shell.c ****     va_end(vargs);
 408:Dsp/letter_shell/shell.c **** }
 409:Dsp/letter_shell/shell.c **** #endif
 410:Dsp/letter_shell/shell.c **** 
 411:Dsp/letter_shell/shell.c **** 
 412:Dsp/letter_shell/shell.c **** /**
 413:Dsp/letter_shell/shell.c ****  * @brief shell 检查命令权限
 414:Dsp/letter_shell/shell.c ****  * 
 415:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 416:Dsp/letter_shell/shell.c ****  * @param command ShellCommand
 417:Dsp/letter_shell/shell.c ****  * 
 418:Dsp/letter_shell/shell.c ****  * @return signed char 0 当前用户具有该命令权限
 419:Dsp/letter_shell/shell.c ****  * @return signec char -1 当前用户不具有该命令权限
 420:Dsp/letter_shell/shell.c ****  */
 421:Dsp/letter_shell/shell.c **** signed char shellCheckPermission(Shell *shell, ShellCommand *command)
 422:Dsp/letter_shell/shell.c **** {
 423:Dsp/letter_shell/shell.c ****     return ((!command->attr.attrs.permission
 424:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.type == SHELL_TYPE_USER
 425:Dsp/letter_shell/shell.c ****                 || (command->attr.attrs.permission 
 426:Dsp/letter_shell/shell.c ****                     & shell->info.user->attr.attrs.permission))
 427:Dsp/letter_shell/shell.c ****             && (shell->status.isChecked
 428:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.enableUnchecked))
 429:Dsp/letter_shell/shell.c ****             ? 0 : -1;
 430:Dsp/letter_shell/shell.c **** }
 431:Dsp/letter_shell/shell.c **** 
 432:Dsp/letter_shell/shell.c **** 
 433:Dsp/letter_shell/shell.c **** /**
 434:Dsp/letter_shell/shell.c ****  * @brief int转16进制字符串
 435:Dsp/letter_shell/shell.c ****  * 
 436:Dsp/letter_shell/shell.c ****  * @param value 数值
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 10


 437:Dsp/letter_shell/shell.c ****  * @param buffer 缓冲
 438:Dsp/letter_shell/shell.c ****  * 
 439:Dsp/letter_shell/shell.c ****  * @return signed char 转换后有效数据长度
 440:Dsp/letter_shell/shell.c ****  */
 441:Dsp/letter_shell/shell.c **** signed char shellToHex(unsigned int value, char *buffer)
 442:Dsp/letter_shell/shell.c **** {
 443:Dsp/letter_shell/shell.c ****     char byte;
 444:Dsp/letter_shell/shell.c ****     unsigned char i = 8;
 445:Dsp/letter_shell/shell.c ****     buffer[8] = 0;
 446:Dsp/letter_shell/shell.c ****     while (value)
 447:Dsp/letter_shell/shell.c ****     {
 448:Dsp/letter_shell/shell.c ****         byte = value & 0x0000000F;
 449:Dsp/letter_shell/shell.c ****         buffer[--i] = (byte > 9) ? (byte + 87) : (byte + 48);
 450:Dsp/letter_shell/shell.c ****         value >>= 4;
 451:Dsp/letter_shell/shell.c ****     }
 452:Dsp/letter_shell/shell.c ****     return 8 - i;
 453:Dsp/letter_shell/shell.c **** }
 454:Dsp/letter_shell/shell.c **** 
 455:Dsp/letter_shell/shell.c **** 
 456:Dsp/letter_shell/shell.c **** /**
 457:Dsp/letter_shell/shell.c **** * @brief int转10进制字符串
 458:Dsp/letter_shell/shell.c ****  * 
 459:Dsp/letter_shell/shell.c ****  * @param value 数值
 460:Dsp/letter_shell/shell.c ****  * @param buffer 缓冲
 461:Dsp/letter_shell/shell.c ****  * 
 462:Dsp/letter_shell/shell.c ****  * @return signed char 转换后有效数据长度
 463:Dsp/letter_shell/shell.c ****  */
 464:Dsp/letter_shell/shell.c **** signed char shellToDec(int value, char *buffer)
 465:Dsp/letter_shell/shell.c **** {
 466:Dsp/letter_shell/shell.c ****     unsigned char i = 11;
 467:Dsp/letter_shell/shell.c ****     int v = value;
 468:Dsp/letter_shell/shell.c ****     if (value < 0)
 469:Dsp/letter_shell/shell.c ****     {
 470:Dsp/letter_shell/shell.c ****         v = -value;
 471:Dsp/letter_shell/shell.c ****     }
 472:Dsp/letter_shell/shell.c ****     buffer[11] = 0;
 473:Dsp/letter_shell/shell.c ****     while (v)
 474:Dsp/letter_shell/shell.c ****     {
 475:Dsp/letter_shell/shell.c ****         buffer[--i] = v % 10 + 48;
 476:Dsp/letter_shell/shell.c ****         v /= 10;
 477:Dsp/letter_shell/shell.c ****     }
 478:Dsp/letter_shell/shell.c ****     if (value < 0)
 479:Dsp/letter_shell/shell.c ****     {
 480:Dsp/letter_shell/shell.c ****         buffer[--i] = '-';
 481:Dsp/letter_shell/shell.c ****     }
 482:Dsp/letter_shell/shell.c ****     if (value == 0) {
 483:Dsp/letter_shell/shell.c ****         buffer[--i] = '0';
 484:Dsp/letter_shell/shell.c ****     }
 485:Dsp/letter_shell/shell.c ****     return 11 - i;
 486:Dsp/letter_shell/shell.c **** }
 487:Dsp/letter_shell/shell.c **** 
 488:Dsp/letter_shell/shell.c **** 
 489:Dsp/letter_shell/shell.c **** /**
 490:Dsp/letter_shell/shell.c ****  * @brief shell字符串复制
 491:Dsp/letter_shell/shell.c ****  * 
 492:Dsp/letter_shell/shell.c ****  * @param dest 目标字符串
 493:Dsp/letter_shell/shell.c ****  * @param src 源字符串
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 11


 494:Dsp/letter_shell/shell.c ****  * @return unsigned short 字符串长度
 495:Dsp/letter_shell/shell.c ****  */
 496:Dsp/letter_shell/shell.c **** static unsigned short shellStringCopy(char *dest, char* src)
 497:Dsp/letter_shell/shell.c **** {
  79              		.loc 1 497 0 is_stmt 1
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL6:
  85 0000 10B4     		push	{r4}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 4, -4
  89 0002 0446     		mov	r4, r0
  90              	.LVL7:
 498:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
  91              		.loc 1 498 0
  92 0004 0020     		movs	r0, #0
  93              	.LVL8:
 499:Dsp/letter_shell/shell.c ****     while (*(src + count))
  94              		.loc 1 499 0
  95 0006 02E0     		b	.L9
  96              	.LVL9:
  97              	.L10:
 500:Dsp/letter_shell/shell.c ****     {
 501:Dsp/letter_shell/shell.c ****         *(dest + count) = *(src + count);
  98              		.loc 1 501 0
  99 0008 2354     		strb	r3, [r4, r0]
 502:Dsp/letter_shell/shell.c ****         count++;
 100              		.loc 1 502 0
 101 000a 0130     		adds	r0, r0, #1
 102              	.LVL10:
 103 000c 80B2     		uxth	r0, r0
 104              	.LVL11:
 105              	.L9:
 499:Dsp/letter_shell/shell.c ****     while (*(src + count))
 106              		.loc 1 499 0
 107 000e 0B5C     		ldrb	r3, [r1, r0]	@ zero_extendqisi2
 108 0010 002B     		cmp	r3, #0
 109 0012 F9D1     		bne	.L10
 503:Dsp/letter_shell/shell.c ****     }
 504:Dsp/letter_shell/shell.c ****     *(dest + count) = 0;
 110              		.loc 1 504 0
 111 0014 2354     		strb	r3, [r4, r0]
 505:Dsp/letter_shell/shell.c ****     return count;
 506:Dsp/letter_shell/shell.c **** }
 112              		.loc 1 506 0
 113 0016 5DF8044B 		ldr	r4, [sp], #4
 114              	.LCFI1:
 115              		.cfi_restore 4
 116              		.cfi_def_cfa_offset 0
 117              	.LVL12:
 118 001a 7047     		bx	lr
 119              		.cfi_endproc
 120              	.LFE136:
 122              		.section	.text.shellStringCompare,"ax",%progbits
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 12


 123              		.align	2
 124              		.thumb
 125              		.thumb_func
 127              	shellStringCompare:
 128              	.LFB137:
 507:Dsp/letter_shell/shell.c **** 
 508:Dsp/letter_shell/shell.c **** 
 509:Dsp/letter_shell/shell.c **** /**
 510:Dsp/letter_shell/shell.c ****  * @brief shell字符串比较
 511:Dsp/letter_shell/shell.c ****  * 
 512:Dsp/letter_shell/shell.c ****  * @param dest 目标字符串
 513:Dsp/letter_shell/shell.c ****  * @param src 源字符串
 514:Dsp/letter_shell/shell.c ****  * @return unsigned short 匹配长度
 515:Dsp/letter_shell/shell.c ****  */
 516:Dsp/letter_shell/shell.c **** static unsigned short shellStringCompare(char* dest, char *src)
 517:Dsp/letter_shell/shell.c **** {
 129              		.loc 1 517 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              	.LVL13:
 135 0000 30B4     		push	{r4, r5}
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 4, -8
 139              		.cfi_offset 5, -4
 140 0002 0546     		mov	r5, r0
 141              	.LVL14:
 518:Dsp/letter_shell/shell.c ****     unsigned short match = 0;
 519:Dsp/letter_shell/shell.c ****     unsigned short i = 0;
 142              		.loc 1 519 0
 143 0004 0023     		movs	r3, #0
 518:Dsp/letter_shell/shell.c ****     unsigned short match = 0;
 144              		.loc 1 518 0
 145 0006 1846     		mov	r0, r3
 146              	.LVL15:
 520:Dsp/letter_shell/shell.c **** 
 521:Dsp/letter_shell/shell.c ****     while (*(dest +i) && *(src + i))
 147              		.loc 1 521 0
 148 0008 05E0     		b	.L13
 149              	.LVL16:
 150              	.L15:
 522:Dsp/letter_shell/shell.c ****     {
 523:Dsp/letter_shell/shell.c ****         if (*(dest + i) != *(src +i))
 151              		.loc 1 523 0
 152 000a A242     		cmp	r2, r4
 153 000c 08D1     		bne	.L14
 524:Dsp/letter_shell/shell.c ****         {
 525:Dsp/letter_shell/shell.c ****             break;
 526:Dsp/letter_shell/shell.c ****         }
 527:Dsp/letter_shell/shell.c ****         match ++;
 154              		.loc 1 527 0
 155 000e 0130     		adds	r0, r0, #1
 156              	.LVL17:
 157 0010 80B2     		uxth	r0, r0
 158              	.LVL18:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 13


 528:Dsp/letter_shell/shell.c ****         i++;
 159              		.loc 1 528 0
 160 0012 0133     		adds	r3, r3, #1
 161              	.LVL19:
 162 0014 9BB2     		uxth	r3, r3
 163              	.LVL20:
 164              	.L13:
 521:Dsp/letter_shell/shell.c ****     {
 165              		.loc 1 521 0
 166 0016 EA5C     		ldrb	r2, [r5, r3]	@ zero_extendqisi2
 167 0018 12B1     		cbz	r2, .L14
 521:Dsp/letter_shell/shell.c ****     {
 168              		.loc 1 521 0 is_stmt 0 discriminator 1
 169 001a CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 170 001c 002C     		cmp	r4, #0
 171 001e F4D1     		bne	.L15
 172              	.L14:
 529:Dsp/letter_shell/shell.c ****     }
 530:Dsp/letter_shell/shell.c ****     return match;
 531:Dsp/letter_shell/shell.c **** }
 173              		.loc 1 531 0 is_stmt 1
 174 0020 30BC     		pop	{r4, r5}
 175              	.LCFI3:
 176              		.cfi_restore 5
 177              		.cfi_restore 4
 178              		.cfi_def_cfa_offset 0
 179              	.LVL21:
 180 0022 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE137:
 184              		.section	.text.shellGetCommandDesc,"ax",%progbits
 185              		.align	2
 186              		.thumb
 187              		.thumb_func
 189              	shellGetCommandDesc:
 190              	.LFB139:
 532:Dsp/letter_shell/shell.c **** 
 533:Dsp/letter_shell/shell.c **** 
 534:Dsp/letter_shell/shell.c **** /**
 535:Dsp/letter_shell/shell.c ****  * @brief shell获取命令名
 536:Dsp/letter_shell/shell.c ****  * 
 537:Dsp/letter_shell/shell.c ****  * @param command 命令
 538:Dsp/letter_shell/shell.c ****  * @return const char* 命令名
 539:Dsp/letter_shell/shell.c ****  */
 540:Dsp/letter_shell/shell.c **** static const char* shellGetCommandName(ShellCommand *command)
 541:Dsp/letter_shell/shell.c **** {
 542:Dsp/letter_shell/shell.c ****     static char buffer[9];
 543:Dsp/letter_shell/shell.c ****     for (unsigned char i = 0; i < 9; i++)
 544:Dsp/letter_shell/shell.c ****     {
 545:Dsp/letter_shell/shell.c ****         buffer[i] = '0';
 546:Dsp/letter_shell/shell.c ****     }
 547:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 548:Dsp/letter_shell/shell.c ****     {
 549:Dsp/letter_shell/shell.c ****         return command->data.cmd.name;
 550:Dsp/letter_shell/shell.c ****     }
 551:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 552:Dsp/letter_shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 14


 553:Dsp/letter_shell/shell.c ****         return command->data.var.name;
 554:Dsp/letter_shell/shell.c ****     }
 555:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_USER)
 556:Dsp/letter_shell/shell.c ****     {
 557:Dsp/letter_shell/shell.c ****         return command->data.user.name;
 558:Dsp/letter_shell/shell.c ****     }
 559:Dsp/letter_shell/shell.c ****     else
 560:Dsp/letter_shell/shell.c ****     {
 561:Dsp/letter_shell/shell.c ****         shellToHex(command->data.key.value, buffer);
 562:Dsp/letter_shell/shell.c ****         return buffer;
 563:Dsp/letter_shell/shell.c ****     }
 564:Dsp/letter_shell/shell.c **** }
 565:Dsp/letter_shell/shell.c **** 
 566:Dsp/letter_shell/shell.c **** 
 567:Dsp/letter_shell/shell.c **** /**
 568:Dsp/letter_shell/shell.c ****  * @brief shell获取命令描述
 569:Dsp/letter_shell/shell.c ****  * 
 570:Dsp/letter_shell/shell.c ****  * @param command 命令
 571:Dsp/letter_shell/shell.c ****  * @return const char* 命令描述
 572:Dsp/letter_shell/shell.c ****  */
 573:Dsp/letter_shell/shell.c **** static const char* shellGetCommandDesc(ShellCommand *command)
 574:Dsp/letter_shell/shell.c **** {
 191              		.loc 1 574 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL22:
 575:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 197              		.loc 1 575 0
 198 0000 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 199 0002 03F00F03 		and	r3, r3, #15
 200 0006 012B     		cmp	r3, #1
 201 0008 01DC     		bgt	.L18
 576:Dsp/letter_shell/shell.c ****     {
 577:Dsp/letter_shell/shell.c ****         return command->data.cmd.desc;
 202              		.loc 1 577 0
 203 000a C068     		ldr	r0, [r0, #12]
 204              	.LVL23:
 205 000c 7047     		bx	lr
 206              	.LVL24:
 207              	.L18:
 578:Dsp/letter_shell/shell.c ****     }
 579:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 208              		.loc 1 579 0
 209 000e 072B     		cmp	r3, #7
 210 0010 01DC     		bgt	.L20
 580:Dsp/letter_shell/shell.c ****     {
 581:Dsp/letter_shell/shell.c ****         return command->data.var.desc;
 211              		.loc 1 581 0
 212 0012 C068     		ldr	r0, [r0, #12]
 213              	.LVL25:
 214 0014 7047     		bx	lr
 215              	.LVL26:
 216              	.L20:
 582:Dsp/letter_shell/shell.c ****     }
 583:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_USER)
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 15


 217              		.loc 1 583 0
 218 0016 082B     		cmp	r3, #8
 219 0018 01DC     		bgt	.L21
 584:Dsp/letter_shell/shell.c ****     {
 585:Dsp/letter_shell/shell.c ****         return command->data.user.desc;
 220              		.loc 1 585 0
 221 001a C068     		ldr	r0, [r0, #12]
 222              	.LVL27:
 223 001c 7047     		bx	lr
 224              	.LVL28:
 225              	.L21:
 586:Dsp/letter_shell/shell.c ****     }
 587:Dsp/letter_shell/shell.c ****     else
 588:Dsp/letter_shell/shell.c ****     {
 589:Dsp/letter_shell/shell.c ****         return command->data.key.desc;
 226              		.loc 1 589 0
 227 001e C068     		ldr	r0, [r0, #12]
 228              	.LVL29:
 590:Dsp/letter_shell/shell.c ****     }
 591:Dsp/letter_shell/shell.c **** }
 229              		.loc 1 591 0
 230 0020 7047     		bx	lr
 231              		.cfi_endproc
 232              	.LFE139:
 234 0022 00BF     		.section	.text.shellParserParam,"ax",%progbits
 235              		.align	2
 236              		.thumb
 237              		.thumb_func
 239              	shellParserParam:
 240              	.LFB150:
 592:Dsp/letter_shell/shell.c **** 
 593:Dsp/letter_shell/shell.c **** /**
 594:Dsp/letter_shell/shell.c ****  * @brief shell 列出命令条目
 595:Dsp/letter_shell/shell.c ****  * 
 596:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 597:Dsp/letter_shell/shell.c ****  * @param item 命令条目
 598:Dsp/letter_shell/shell.c ****  */
 599:Dsp/letter_shell/shell.c **** void shellListItem(Shell *shell, ShellCommand *item)
 600:Dsp/letter_shell/shell.c **** {
 601:Dsp/letter_shell/shell.c ****     short spaceLength;
 602:Dsp/letter_shell/shell.c **** 
 603:Dsp/letter_shell/shell.c ****     spaceLength = 22 - shellWriteString(shell, shellGetCommandName(item));
 604:Dsp/letter_shell/shell.c ****     spaceLength = (spaceLength > 0) ? spaceLength : 4;
 605:Dsp/letter_shell/shell.c ****     do {
 606:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, '-');
 607:Dsp/letter_shell/shell.c ****     } while (--spaceLength);
 608:Dsp/letter_shell/shell.c ****     if (item->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 609:Dsp/letter_shell/shell.c ****     {
 610:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_CMD]);
 611:Dsp/letter_shell/shell.c ****     }
 612:Dsp/letter_shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 613:Dsp/letter_shell/shell.c ****     {
 614:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_VAR]);
 615:Dsp/letter_shell/shell.c ****     }
 616:Dsp/letter_shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_USER)
 617:Dsp/letter_shell/shell.c ****     {
 618:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_USER]);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 16


 619:Dsp/letter_shell/shell.c ****     }
 620:Dsp/letter_shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_KEY)
 621:Dsp/letter_shell/shell.c ****     {
 622:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_KEY]);
 623:Dsp/letter_shell/shell.c ****     }
 624:Dsp/letter_shell/shell.c ****     else
 625:Dsp/letter_shell/shell.c ****     {
 626:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_NONE]);
 627:Dsp/letter_shell/shell.c ****     }
 628:Dsp/letter_shell/shell.c **** #if SHELL_HELP_SHOW_PERMISSION == 1
 629:Dsp/letter_shell/shell.c ****     shellWriteString(shell, " ");
 630:Dsp/letter_shell/shell.c ****     for (signed char i = 7; i >= 0; i--)
 631:Dsp/letter_shell/shell.c ****     {
 632:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, item->attr.attrs.permission & (1 << i) ? 'x' : '-');
 633:Dsp/letter_shell/shell.c ****     }
 634:Dsp/letter_shell/shell.c **** #endif
 635:Dsp/letter_shell/shell.c ****     // shellWriteString(shell, " ");
 636:Dsp/letter_shell/shell.c ****     // shellWriteCommandDesc(shell, shellGetCommandDesc(item));
 637:Dsp/letter_shell/shell.c ****     // shellWriteString(shell, "\r\n");
 638:Dsp/letter_shell/shell.c **** }
 639:Dsp/letter_shell/shell.c **** 
 640:Dsp/letter_shell/shell.c **** 
 641:Dsp/letter_shell/shell.c **** /**
 642:Dsp/letter_shell/shell.c ****  * @brief shell列出可执行命令
 643:Dsp/letter_shell/shell.c ****  * 
 644:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 645:Dsp/letter_shell/shell.c ****  */
 646:Dsp/letter_shell/shell.c **** void shellListCommand(Shell *shell)
 647:Dsp/letter_shell/shell.c **** {
 648:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 649:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CMD_LIST]);
 650:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 651:Dsp/letter_shell/shell.c ****     {
 652:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type <= SHELL_TYPE_CMD_FUNC
 653:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 654:Dsp/letter_shell/shell.c ****         {
 655:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[i]);
 656:Dsp/letter_shell/shell.c ****         }
 657:Dsp/letter_shell/shell.c ****     }
 658:Dsp/letter_shell/shell.c **** }
 659:Dsp/letter_shell/shell.c **** 
 660:Dsp/letter_shell/shell.c **** 
 661:Dsp/letter_shell/shell.c **** /**
 662:Dsp/letter_shell/shell.c ****  * @brief shell列出变量
 663:Dsp/letter_shell/shell.c ****  * 
 664:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 665:Dsp/letter_shell/shell.c ****  */
 666:Dsp/letter_shell/shell.c **** void shellListVar(Shell *shell)
 667:Dsp/letter_shell/shell.c **** {
 668:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 669:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_VAR_LIST]);
 670:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 671:Dsp/letter_shell/shell.c ****     {
 672:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_CMD_FUNC
 673:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_VAR_NODE
 674:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 675:Dsp/letter_shell/shell.c ****         {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 17


 676:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[i]);
 677:Dsp/letter_shell/shell.c ****         }
 678:Dsp/letter_shell/shell.c ****     }
 679:Dsp/letter_shell/shell.c **** }
 680:Dsp/letter_shell/shell.c **** 
 681:Dsp/letter_shell/shell.c **** 
 682:Dsp/letter_shell/shell.c **** /**
 683:Dsp/letter_shell/shell.c ****  * @brief shell列出用户
 684:Dsp/letter_shell/shell.c ****  * 
 685:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 686:Dsp/letter_shell/shell.c ****  */
 687:Dsp/letter_shell/shell.c **** void shellListUser(Shell *shell)
 688:Dsp/letter_shell/shell.c **** {
 689:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 690:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_USER_LIST]);
 691:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 692:Dsp/letter_shell/shell.c ****     {
 693:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_VAR_NODE
 694:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_USER
 695:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 696:Dsp/letter_shell/shell.c ****         {
 697:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[i]);
 698:Dsp/letter_shell/shell.c ****         }
 699:Dsp/letter_shell/shell.c ****     }
 700:Dsp/letter_shell/shell.c **** }
 701:Dsp/letter_shell/shell.c **** 
 702:Dsp/letter_shell/shell.c **** 
 703:Dsp/letter_shell/shell.c **** /**
 704:Dsp/letter_shell/shell.c ****  * @brief shell列出按键
 705:Dsp/letter_shell/shell.c ****  * 
 706:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 707:Dsp/letter_shell/shell.c ****  */
 708:Dsp/letter_shell/shell.c **** void shellListKey(Shell *shell)
 709:Dsp/letter_shell/shell.c **** {
 710:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 711:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_KEY_LIST]);
 712:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 713:Dsp/letter_shell/shell.c ****     {
 714:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_USER
 715:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_KEY
 716:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 717:Dsp/letter_shell/shell.c ****         {
 718:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[i]);
 719:Dsp/letter_shell/shell.c ****         }
 720:Dsp/letter_shell/shell.c ****     }
 721:Dsp/letter_shell/shell.c **** }
 722:Dsp/letter_shell/shell.c **** 
 723:Dsp/letter_shell/shell.c **** 
 724:Dsp/letter_shell/shell.c **** /**
 725:Dsp/letter_shell/shell.c ****  * @brief shell列出所有命令
 726:Dsp/letter_shell/shell.c ****  * 
 727:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 728:Dsp/letter_shell/shell.c ****  */
 729:Dsp/letter_shell/shell.c **** void shellListAll(Shell *shell)
 730:Dsp/letter_shell/shell.c **** {
 731:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_USER == 1
 732:Dsp/letter_shell/shell.c ****     shellListUser(shell);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 18


 733:Dsp/letter_shell/shell.c **** #endif
 734:Dsp/letter_shell/shell.c ****     shellListCommand(shell);
 735:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_VAR == 1
 736:Dsp/letter_shell/shell.c ****     shellListVar(shell);
 737:Dsp/letter_shell/shell.c **** #endif
 738:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_KEY == 1
 739:Dsp/letter_shell/shell.c ****     shellListKey(shell);
 740:Dsp/letter_shell/shell.c **** #endif
 741:Dsp/letter_shell/shell.c **** }
 742:Dsp/letter_shell/shell.c **** 
 743:Dsp/letter_shell/shell.c **** 
 744:Dsp/letter_shell/shell.c **** /**
 745:Dsp/letter_shell/shell.c ****  * @brief shell删除命令行数据
 746:Dsp/letter_shell/shell.c ****  * 
 747:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 748:Dsp/letter_shell/shell.c ****  * @param length 删除长度
 749:Dsp/letter_shell/shell.c ****  */
 750:Dsp/letter_shell/shell.c **** void shellDeleteCommandLine(Shell *shell, unsigned char length)
 751:Dsp/letter_shell/shell.c **** {
 752:Dsp/letter_shell/shell.c ****     while (length--)
 753:Dsp/letter_shell/shell.c ****     {
 754:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\b \b");
 755:Dsp/letter_shell/shell.c ****     }
 756:Dsp/letter_shell/shell.c **** }
 757:Dsp/letter_shell/shell.c **** 
 758:Dsp/letter_shell/shell.c **** 
 759:Dsp/letter_shell/shell.c **** /**
 760:Dsp/letter_shell/shell.c ****  * @brief shell 清空命令行输入
 761:Dsp/letter_shell/shell.c ****  * 
 762:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 763:Dsp/letter_shell/shell.c ****  */
 764:Dsp/letter_shell/shell.c **** void shellClearCommandLine(Shell *shell)
 765:Dsp/letter_shell/shell.c **** {
 766:Dsp/letter_shell/shell.c ****     for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 767:Dsp/letter_shell/shell.c ****     {
 768:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, ' ');
 769:Dsp/letter_shell/shell.c ****     }
 770:Dsp/letter_shell/shell.c ****     shellDeleteCommandLine(shell, shell->parser.length);
 771:Dsp/letter_shell/shell.c **** }
 772:Dsp/letter_shell/shell.c **** 
 773:Dsp/letter_shell/shell.c **** 
 774:Dsp/letter_shell/shell.c **** /**
 775:Dsp/letter_shell/shell.c ****  * @brief shell插入一个字符到光标位置
 776:Dsp/letter_shell/shell.c ****  * 
 777:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 778:Dsp/letter_shell/shell.c ****  * @param data 字符数据
 779:Dsp/letter_shell/shell.c ****  */
 780:Dsp/letter_shell/shell.c **** void shellInsertByte(Shell *shell, char data)
 781:Dsp/letter_shell/shell.c **** {
 782:Dsp/letter_shell/shell.c ****     /* 判断输入数据是否过长 */
 783:Dsp/letter_shell/shell.c ****     if (shell->parser.length >= shell->parser.bufferSize - 1)
 784:Dsp/letter_shell/shell.c ****     {
 785:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CMD_TOO_LONG]);
 786:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 1);
 787:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 788:Dsp/letter_shell/shell.c ****         return;
 789:Dsp/letter_shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 19


 790:Dsp/letter_shell/shell.c **** 
 791:Dsp/letter_shell/shell.c ****     /* 插入数据 */
 792:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor == shell->parser.length)
 793:Dsp/letter_shell/shell.c ****     {
 794:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length++] = data;
 795:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 796:Dsp/letter_shell/shell.c ****         shell->parser.cursor++;
 797:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, data);
 798:Dsp/letter_shell/shell.c ****     }
 799:Dsp/letter_shell/shell.c ****     else if (shell->parser.cursor < shell->parser.length)
 800:Dsp/letter_shell/shell.c ****     {
 801:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 802:Dsp/letter_shell/shell.c ****         {
 803:Dsp/letter_shell/shell.c ****             shell->parser.buffer[shell->parser.cursor + i] = 
 804:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 805:Dsp/letter_shell/shell.c ****         }
 806:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.cursor++] = data;
 807:Dsp/letter_shell/shell.c ****         shell->parser.buffer[++shell->parser.length] = 0;
 808:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.cursor - 1; i < shell->parser.length; i++)
 809:Dsp/letter_shell/shell.c ****         {
 810:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, shell->parser.buffer[i]);
 811:Dsp/letter_shell/shell.c ****         }
 812:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 813:Dsp/letter_shell/shell.c ****         {
 814:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, '\b');
 815:Dsp/letter_shell/shell.c ****         }
 816:Dsp/letter_shell/shell.c ****     }
 817:Dsp/letter_shell/shell.c **** }
 818:Dsp/letter_shell/shell.c **** 
 819:Dsp/letter_shell/shell.c **** 
 820:Dsp/letter_shell/shell.c **** /**
 821:Dsp/letter_shell/shell.c ****  * @brief shell 删除字节
 822:Dsp/letter_shell/shell.c ****  * 
 823:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 824:Dsp/letter_shell/shell.c ****  * @param direction 删除方向 {@code 1}删除光标前字符 {@code -1}删除光标处字符
 825:Dsp/letter_shell/shell.c ****  */
 826:Dsp/letter_shell/shell.c **** void shellDeleteByte(Shell *shell, signed char direction)
 827:Dsp/letter_shell/shell.c **** {
 828:Dsp/letter_shell/shell.c ****     char offset = (direction == -1) ? 1 : 0;
 829:Dsp/letter_shell/shell.c **** 
 830:Dsp/letter_shell/shell.c ****     if ((shell->parser.cursor == 0 && direction == 1)
 831:Dsp/letter_shell/shell.c ****         || (shell->parser.cursor == shell->parser.length && direction == -1))
 832:Dsp/letter_shell/shell.c ****     {
 833:Dsp/letter_shell/shell.c ****         return;
 834:Dsp/letter_shell/shell.c ****     }
 835:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor == shell->parser.length && direction == 1)
 836:Dsp/letter_shell/shell.c ****     {
 837:Dsp/letter_shell/shell.c ****         shell->parser.cursor--;
 838:Dsp/letter_shell/shell.c ****         shell->parser.length--;
 839:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 840:Dsp/letter_shell/shell.c ****         shellDeleteCommandLine(shell, 1);
 841:Dsp/letter_shell/shell.c ****     }
 842:Dsp/letter_shell/shell.c ****     else
 843:Dsp/letter_shell/shell.c ****     {
 844:Dsp/letter_shell/shell.c ****         for (short i = offset; i < shell->parser.length - shell->parser.cursor; i++)
 845:Dsp/letter_shell/shell.c ****         {
 846:Dsp/letter_shell/shell.c ****             shell->parser.buffer[shell->parser.cursor + i - 1] = 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 20


 847:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 848:Dsp/letter_shell/shell.c ****         }
 849:Dsp/letter_shell/shell.c ****         shell->parser.length--;
 850:Dsp/letter_shell/shell.c ****         if (!offset)
 851:Dsp/letter_shell/shell.c ****         {
 852:Dsp/letter_shell/shell.c ****             shell->parser.cursor--;
 853:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, '\b');
 854:Dsp/letter_shell/shell.c ****         }
 855:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 856:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.cursor; i < shell->parser.length; i++)
 857:Dsp/letter_shell/shell.c ****         {
 858:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, shell->parser.buffer[i]);
 859:Dsp/letter_shell/shell.c ****         }
 860:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, ' ');
 861:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor + 1; i > 0; i--)
 862:Dsp/letter_shell/shell.c ****         {
 863:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, '\b');
 864:Dsp/letter_shell/shell.c ****         }
 865:Dsp/letter_shell/shell.c ****     }
 866:Dsp/letter_shell/shell.c **** }
 867:Dsp/letter_shell/shell.c **** 
 868:Dsp/letter_shell/shell.c **** 
 869:Dsp/letter_shell/shell.c **** /**
 870:Dsp/letter_shell/shell.c ****  * @brief shell 解析参数
 871:Dsp/letter_shell/shell.c ****  * 
 872:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 873:Dsp/letter_shell/shell.c ****  */
 874:Dsp/letter_shell/shell.c **** static void shellParserParam(Shell *shell)
 875:Dsp/letter_shell/shell.c **** {
 241              		.loc 1 875 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246              	.LVL30:
 247              	.LBB3:
 876:Dsp/letter_shell/shell.c ****     unsigned char quotes = 0;
 877:Dsp/letter_shell/shell.c ****     unsigned char record = 1;
 878:Dsp/letter_shell/shell.c **** 
 879:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_PARAMETER_MAX_NUMBER; i++)
 248              		.loc 1 879 0
 249 0000 0023     		movs	r3, #0
 250 0002 06E0     		b	.L23
 251              	.LVL31:
 252              	.L24:
 880:Dsp/letter_shell/shell.c ****     {
 881:Dsp/letter_shell/shell.c ****         shell->parser.param[i] = NULL;
 253              		.loc 1 881 0 discriminator 3
 254 0004 1A1D     		adds	r2, r3, #4
 255 0006 00EB8202 		add	r2, r0, r2, lsl #2
 256 000a 0021     		movs	r1, #0
 257 000c 5160     		str	r1, [r2, #4]
 879:Dsp/letter_shell/shell.c ****     {
 258              		.loc 1 879 0 discriminator 3
 259 000e 0133     		adds	r3, r3, #1
 260              	.LVL32:
 261 0010 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 21


 262              	.LVL33:
 263              	.L23:
 879:Dsp/letter_shell/shell.c ****     {
 264              		.loc 1 879 0 is_stmt 0 discriminator 1
 265 0012 072B     		cmp	r3, #7
 266 0014 F6DD     		ble	.L24
 267              	.LBE3:
 875:Dsp/letter_shell/shell.c ****     unsigned char quotes = 0;
 268              		.loc 1 875 0 is_stmt 1
 269 0016 F0B4     		push	{r4, r5, r6, r7}
 270              	.LCFI4:
 271              		.cfi_def_cfa_offset 16
 272              		.cfi_offset 4, -16
 273              		.cfi_offset 5, -12
 274              		.cfi_offset 6, -8
 275              		.cfi_offset 7, -4
 882:Dsp/letter_shell/shell.c ****     }
 883:Dsp/letter_shell/shell.c **** 
 884:Dsp/letter_shell/shell.c ****     shell->parser.paramCount = 0;
 276              		.loc 1 884 0
 277 0018 0021     		movs	r1, #0
 278 001a C186     		strh	r1, [r0, #54]	@ movhi
 279              	.LVL34:
 280              	.LBB4:
 885:Dsp/letter_shell/shell.c ****     for (unsigned short i = 0; i < shell->parser.length; i++)
 281              		.loc 1 885 0
 282 001c 0B46     		mov	r3, r1
 283              	.LVL35:
 284              	.LBE4:
 877:Dsp/letter_shell/shell.c **** 
 285              		.loc 1 877 0
 286 001e 0126     		movs	r6, #1
 287              	.LBB5:
 288              		.loc 1 885 0
 289 0020 29E0     		b	.L25
 290              	.LVL36:
 291              	.L31:
 886:Dsp/letter_shell/shell.c ****     {
 887:Dsp/letter_shell/shell.c ****         if (quotes != 0
 292              		.loc 1 887 0
 293 0022 29B9     		cbnz	r1, .L26
 888:Dsp/letter_shell/shell.c ****             || (shell->parser.buffer[i] != ' '
 294              		.loc 1 888 0
 295 0024 0269     		ldr	r2, [r0, #16]
 296 0026 D418     		adds	r4, r2, r3
 297 0028 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 298 002a 202A     		cmp	r2, #32
 299 002c 1ED0     		beq	.L27
 889:Dsp/letter_shell/shell.c ****                 && shell->parser.buffer[i] != 0))
 300              		.loc 1 889 0
 301 002e EAB1     		cbz	r2, .L27
 302              	.L26:
 890:Dsp/letter_shell/shell.c ****         {
 891:Dsp/letter_shell/shell.c ****             if (shell->parser.buffer[i] == '\"')
 303              		.loc 1 891 0
 304 0030 0269     		ldr	r2, [r0, #16]
 305 0032 1F46     		mov	r7, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 22


 306 0034 D418     		adds	r4, r2, r3
 307 0036 D55C     		ldrb	r5, [r2, r3]	@ zero_extendqisi2
 308 0038 222D     		cmp	r5, #34
 309 003a 01D1     		bne	.L28
 892:Dsp/letter_shell/shell.c ****             {
 893:Dsp/letter_shell/shell.c ****                 quotes = quotes ? 0 : 1;
 310              		.loc 1 893 0
 311 003c 81F00101 		eor	r1, r1, #1
 312              	.LVL37:
 313              	.L28:
 894:Dsp/letter_shell/shell.c ****             }
 895:Dsp/letter_shell/shell.c ****             if (record == 1)
 314              		.loc 1 895 0
 315 0040 5EB1     		cbz	r6, .L29
 896:Dsp/letter_shell/shell.c ****             {
 897:Dsp/letter_shell/shell.c ****                 if (shell->parser.paramCount < SHELL_PARAMETER_MAX_NUMBER)
 316              		.loc 1 897 0
 317 0042 C58E     		ldrh	r5, [r0, #54]
 318 0044 072D     		cmp	r5, #7
 319 0046 07D8     		bhi	.L32
 898:Dsp/letter_shell/shell.c ****                 {
 899:Dsp/letter_shell/shell.c ****                     shell->parser.param[shell->parser.paramCount++] =
 320              		.loc 1 899 0
 321 0048 6E1C     		adds	r6, r5, #1
 322              	.LVL38:
 323 004a C686     		strh	r6, [r0, #54]	@ movhi
 324 004c 0435     		adds	r5, r5, #4
 325 004e 00EB8505 		add	r5, r0, r5, lsl #2
 326 0052 6C60     		str	r4, [r5, #4]
 900:Dsp/letter_shell/shell.c ****                         &(shell->parser.buffer[i]);
 901:Dsp/letter_shell/shell.c ****                 }
 902:Dsp/letter_shell/shell.c ****                 record = 0;
 327              		.loc 1 902 0
 328 0054 0026     		movs	r6, #0
 329 0056 00E0     		b	.L29
 330              	.LVL39:
 331              	.L32:
 332 0058 0026     		movs	r6, #0
 333              	.LVL40:
 334              	.L29:
 903:Dsp/letter_shell/shell.c ****             }
 904:Dsp/letter_shell/shell.c ****             if (shell->parser.buffer[i] == '\\'
 335              		.loc 1 904 0
 336 005a 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 337 005c 5C2C     		cmp	r4, #92
 338 005e 08D1     		bne	.L30
 905:Dsp/letter_shell/shell.c ****                 && shell->parser.buffer[i + 1] != 0)
 339              		.loc 1 905 0
 340 0060 0137     		adds	r7, r7, #1
 341 0062 D25D     		ldrb	r2, [r2, r7]	@ zero_extendqisi2
 342 0064 2AB1     		cbz	r2, .L30
 906:Dsp/letter_shell/shell.c ****             {
 907:Dsp/letter_shell/shell.c ****                 i++;
 343              		.loc 1 907 0
 344 0066 0133     		adds	r3, r3, #1
 345              	.LVL41:
 346 0068 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 23


 347              	.LVL42:
 348 006a 02E0     		b	.L30
 349              	.L27:
 908:Dsp/letter_shell/shell.c ****             }
 909:Dsp/letter_shell/shell.c ****         }
 910:Dsp/letter_shell/shell.c ****         else
 911:Dsp/letter_shell/shell.c ****         {
 912:Dsp/letter_shell/shell.c ****             shell->parser.buffer[i] = 0;
 350              		.loc 1 912 0
 351 006c 0022     		movs	r2, #0
 352 006e 2270     		strb	r2, [r4]
 353              	.LVL43:
 913:Dsp/letter_shell/shell.c ****             record = 1;
 354              		.loc 1 913 0
 355 0070 0126     		movs	r6, #1
 356              	.LVL44:
 357              	.L30:
 885:Dsp/letter_shell/shell.c ****     {
 358              		.loc 1 885 0 discriminator 2
 359 0072 0133     		adds	r3, r3, #1
 360              	.LVL45:
 361 0074 9BB2     		uxth	r3, r3
 362              	.LVL46:
 363              	.L25:
 885:Dsp/letter_shell/shell.c ****     {
 364              		.loc 1 885 0 is_stmt 0 discriminator 1
 365 0076 8289     		ldrh	r2, [r0, #12]
 366 0078 9342     		cmp	r3, r2
 367 007a D2D3     		bcc	.L31
 368              	.LBE5:
 914:Dsp/letter_shell/shell.c ****         }
 915:Dsp/letter_shell/shell.c ****     }
 916:Dsp/letter_shell/shell.c **** }
 369              		.loc 1 916 0 is_stmt 1
 370 007c F0BC     		pop	{r4, r5, r6, r7}
 371              	.LCFI5:
 372              		.cfi_restore 7
 373              		.cfi_restore 6
 374              		.cfi_restore 5
 375              		.cfi_restore 4
 376              		.cfi_def_cfa_offset 0
 377              	.LVL47:
 378 007e 7047     		bx	lr
 379              		.cfi_endproc
 380              	.LFE150:
 382              		.section	.text.shellHistoryAdd,"ax",%progbits
 383              		.align	2
 384              		.thumb
 385              		.thumb_func
 387              	shellHistoryAdd:
 388              	.LFB161:
 917:Dsp/letter_shell/shell.c **** 
 918:Dsp/letter_shell/shell.c **** 
 919:Dsp/letter_shell/shell.c **** /**
 920:Dsp/letter_shell/shell.c ****  * @brief shell去除字符串参数头尾的双引号
 921:Dsp/letter_shell/shell.c ****  * 
 922:Dsp/letter_shell/shell.c ****  * @param shell shell对象
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 24


 923:Dsp/letter_shell/shell.c ****  */
 924:Dsp/letter_shell/shell.c **** static void shellRemoveParamQuotes(Shell *shell)
 925:Dsp/letter_shell/shell.c **** {
 926:Dsp/letter_shell/shell.c ****     unsigned short paramLength;
 927:Dsp/letter_shell/shell.c ****     for (unsigned short i = 0; i < shell->parser.paramCount; i++)
 928:Dsp/letter_shell/shell.c ****     {
 929:Dsp/letter_shell/shell.c ****         if (shell->parser.param[i][0] == '\"')
 930:Dsp/letter_shell/shell.c ****         {
 931:Dsp/letter_shell/shell.c ****             shell->parser.param[i][0] = 0;
 932:Dsp/letter_shell/shell.c ****             shell->parser.param[i] = &shell->parser.param[i][1];
 933:Dsp/letter_shell/shell.c ****         }
 934:Dsp/letter_shell/shell.c ****         paramLength = strlen(shell->parser.param[i]);
 935:Dsp/letter_shell/shell.c ****         if (shell->parser.param[i][paramLength - 1] == '\"')
 936:Dsp/letter_shell/shell.c ****         {
 937:Dsp/letter_shell/shell.c ****             shell->parser.param[i][paramLength - 1] = 0;
 938:Dsp/letter_shell/shell.c ****         }
 939:Dsp/letter_shell/shell.c ****     }
 940:Dsp/letter_shell/shell.c **** }
 941:Dsp/letter_shell/shell.c **** 
 942:Dsp/letter_shell/shell.c **** 
 943:Dsp/letter_shell/shell.c **** /**
 944:Dsp/letter_shell/shell.c ****  * @brief shell匹配命令
 945:Dsp/letter_shell/shell.c ****  * 
 946:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 947:Dsp/letter_shell/shell.c ****  * @param cmd 命令
 948:Dsp/letter_shell/shell.c ****  * @param base 匹配命令表基址
 949:Dsp/letter_shell/shell.c ****  * @param compareLength 匹配字符串长度
 950:Dsp/letter_shell/shell.c ****  * @return ShellCommand* 匹配到的命令
 951:Dsp/letter_shell/shell.c ****  */
 952:Dsp/letter_shell/shell.c **** ShellCommand* shellSeekCommand(Shell *shell,
 953:Dsp/letter_shell/shell.c ****                                const char *cmd,
 954:Dsp/letter_shell/shell.c ****                                ShellCommand *base,
 955:Dsp/letter_shell/shell.c ****                                unsigned short compareLength)
 956:Dsp/letter_shell/shell.c **** {
 957:Dsp/letter_shell/shell.c ****     const char *name;
 958:Dsp/letter_shell/shell.c ****     int ret;
 959:Dsp/letter_shell/shell.c ****     unsigned short count = shell->commandList.count -
 960:Dsp/letter_shell/shell.c ****         ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 961:Dsp/letter_shell/shell.c ****     for (unsigned short i = 0; i < count; i++)
 962:Dsp/letter_shell/shell.c ****     {
 963:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type == SHELL_TYPE_KEY
 964:Dsp/letter_shell/shell.c ****             || shellCheckPermission(shell, &base[i]) != 0)
 965:Dsp/letter_shell/shell.c ****         {
 966:Dsp/letter_shell/shell.c ****             continue;
 967:Dsp/letter_shell/shell.c ****         }
 968:Dsp/letter_shell/shell.c ****         name = shellGetCommandName(&base[i]);
 969:Dsp/letter_shell/shell.c ****         if (!compareLength)
 970:Dsp/letter_shell/shell.c ****         {
 971:Dsp/letter_shell/shell.c ****             ret = strcmp(cmd, name);
 972:Dsp/letter_shell/shell.c ****             if (strcmp(cmd, name) == 0)
 973:Dsp/letter_shell/shell.c ****             {
 974:Dsp/letter_shell/shell.c ****                 return &base[i];
 975:Dsp/letter_shell/shell.c ****             }
 976:Dsp/letter_shell/shell.c ****         }
 977:Dsp/letter_shell/shell.c ****         else
 978:Dsp/letter_shell/shell.c ****         {
 979:Dsp/letter_shell/shell.c ****             if (strncmp(cmd, name, compareLength) == 0)
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 25


 980:Dsp/letter_shell/shell.c ****             {
 981:Dsp/letter_shell/shell.c ****                 return &base[i];
 982:Dsp/letter_shell/shell.c ****             }
 983:Dsp/letter_shell/shell.c ****         }
 984:Dsp/letter_shell/shell.c ****     }
 985:Dsp/letter_shell/shell.c ****     return NULL;
 986:Dsp/letter_shell/shell.c **** }
 987:Dsp/letter_shell/shell.c **** 
 988:Dsp/letter_shell/shell.c **** 
 989:Dsp/letter_shell/shell.c **** /**
 990:Dsp/letter_shell/shell.c ****  * @brief shell 获取变量值
 991:Dsp/letter_shell/shell.c ****  * 
 992:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 993:Dsp/letter_shell/shell.c ****  * @param command 命令
 994:Dsp/letter_shell/shell.c ****  * @return int 变量值
 995:Dsp/letter_shell/shell.c ****  */
 996:Dsp/letter_shell/shell.c **** int shellGetVarValue(Shell *shell, ShellCommand *command)
 997:Dsp/letter_shell/shell.c **** {
 998:Dsp/letter_shell/shell.c ****     int value = 0;
 999:Dsp/letter_shell/shell.c ****     switch (command->attr.attrs.type)
1000:Dsp/letter_shell/shell.c ****     {
1001:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_INT:
1002:Dsp/letter_shell/shell.c ****         value = *((int *)(command->data.var.value));
1003:Dsp/letter_shell/shell.c ****         break;
1004:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_SHORT:
1005:Dsp/letter_shell/shell.c ****         value = *((short *)(command->data.var.value));
1006:Dsp/letter_shell/shell.c ****         break;
1007:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_CHAR:
1008:Dsp/letter_shell/shell.c ****         value = *((char *)(command->data.var.value));
1009:Dsp/letter_shell/shell.c ****         break;
1010:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
1011:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_POINT:
1012:Dsp/letter_shell/shell.c ****         value = (int)(command->data.var.value);
1013:Dsp/letter_shell/shell.c ****         break;
1014:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_NODE:
1015:Dsp/letter_shell/shell.c ****         value = ((ShellNodeVarAttr *)command->data.var.value)->get ?
1016:Dsp/letter_shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)
1017:Dsp/letter_shell/shell.c ****                         ->get(((ShellNodeVarAttr *)command->data.var.value)->var) : 0;
1018:Dsp/letter_shell/shell.c ****         break;
1019:Dsp/letter_shell/shell.c ****     default:
1020:Dsp/letter_shell/shell.c ****         break;
1021:Dsp/letter_shell/shell.c ****     }
1022:Dsp/letter_shell/shell.c ****     return value;
1023:Dsp/letter_shell/shell.c **** }
1024:Dsp/letter_shell/shell.c **** 
1025:Dsp/letter_shell/shell.c **** 
1026:Dsp/letter_shell/shell.c **** /**
1027:Dsp/letter_shell/shell.c ****  * @brief shell设置变量值
1028:Dsp/letter_shell/shell.c ****  * 
1029:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1030:Dsp/letter_shell/shell.c ****  * @param command 命令
1031:Dsp/letter_shell/shell.c ****  * @param value 值
1032:Dsp/letter_shell/shell.c ****  * @return int 返回变量值
1033:Dsp/letter_shell/shell.c ****  */
1034:Dsp/letter_shell/shell.c **** int shellSetVarValue(Shell *shell, ShellCommand *command, int value)
1035:Dsp/letter_shell/shell.c **** {
1036:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.readOnly)
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 26


1037:Dsp/letter_shell/shell.c ****     {
1038:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY]);
1039:Dsp/letter_shell/shell.c ****     }
1040:Dsp/letter_shell/shell.c ****     else
1041:Dsp/letter_shell/shell.c ****     {
1042:Dsp/letter_shell/shell.c ****         switch (command->attr.attrs.type)
1043:Dsp/letter_shell/shell.c ****         {
1044:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_INT:
1045:Dsp/letter_shell/shell.c ****             *((int *)(command->data.var.value)) = value;
1046:Dsp/letter_shell/shell.c ****             break;
1047:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_SHORT:
1048:Dsp/letter_shell/shell.c ****             *((short *)(command->data.var.value)) = value;
1049:Dsp/letter_shell/shell.c ****             break;
1050:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_CHAR:
1051:Dsp/letter_shell/shell.c ****             *((char *)(command->data.var.value)) = value;
1052:Dsp/letter_shell/shell.c ****             break;
1053:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_STRING:
1054:Dsp/letter_shell/shell.c ****             shellStringCopy(((char *)(command->data.var.value)), (char *)value);
1055:Dsp/letter_shell/shell.c ****             break;
1056:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_POINT:
1057:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_POINT_CANNOT_MODIFY]);
1058:Dsp/letter_shell/shell.c ****             break;
1059:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_NODE:
1060:Dsp/letter_shell/shell.c ****             if (((ShellNodeVarAttr *)command->data.var.value)->set)
1061:Dsp/letter_shell/shell.c ****             {
1062:Dsp/letter_shell/shell.c ****                 if (((ShellNodeVarAttr *)command->data.var.value)->var)
1063:Dsp/letter_shell/shell.c ****                 {
1064:Dsp/letter_shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)
1065:Dsp/letter_shell/shell.c ****                         ->set(((ShellNodeVarAttr *)command->data.var.value)->var, value);
1066:Dsp/letter_shell/shell.c ****                 }
1067:Dsp/letter_shell/shell.c ****                 else
1068:Dsp/letter_shell/shell.c ****                 {
1069:Dsp/letter_shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)->set(value);
1070:Dsp/letter_shell/shell.c ****                 }
1071:Dsp/letter_shell/shell.c ****             }
1072:Dsp/letter_shell/shell.c ****             break;
1073:Dsp/letter_shell/shell.c ****         default:
1074:Dsp/letter_shell/shell.c ****             break;
1075:Dsp/letter_shell/shell.c ****         }
1076:Dsp/letter_shell/shell.c ****     }
1077:Dsp/letter_shell/shell.c ****     return shellShowVar(shell, command);
1078:Dsp/letter_shell/shell.c **** }
1079:Dsp/letter_shell/shell.c **** 
1080:Dsp/letter_shell/shell.c **** 
1081:Dsp/letter_shell/shell.c **** /**
1082:Dsp/letter_shell/shell.c ****  * @brief shell变量输出
1083:Dsp/letter_shell/shell.c ****  * 
1084:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1085:Dsp/letter_shell/shell.c ****  * @param command 命令
1086:Dsp/letter_shell/shell.c ****  * @return int 返回变量值
1087:Dsp/letter_shell/shell.c ****  */
1088:Dsp/letter_shell/shell.c **** static int shellShowVar(Shell *shell, ShellCommand *command)
1089:Dsp/letter_shell/shell.c **** {
1090:Dsp/letter_shell/shell.c ****     char buffer[12] = "00000000000";
1091:Dsp/letter_shell/shell.c ****     int value = shellGetVarValue(shell, command);
1092:Dsp/letter_shell/shell.c ****     
1093:Dsp/letter_shell/shell.c ****     shellWriteString(shell, command->data.var.name);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 27


1094:Dsp/letter_shell/shell.c ****     shellWriteString(shell, " = ");
1095:Dsp/letter_shell/shell.c **** 
1096:Dsp/letter_shell/shell.c ****     switch (command->attr.attrs.type)
1097:Dsp/letter_shell/shell.c ****     {
1098:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
1099:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\"");
1100:Dsp/letter_shell/shell.c ****         shellWriteString(shell, (char *)value);
1101:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\"");
1102:Dsp/letter_shell/shell.c ****         break;
1103:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_INT:
1104:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_SHORT:
1105:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_CHAR:
1106:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_POINT:
1107:Dsp/letter_shell/shell.c ****     default:
1108:Dsp/letter_shell/shell.c ****         shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
1109:Dsp/letter_shell/shell.c ****         shellWriteString(shell, ", 0x");
1110:Dsp/letter_shell/shell.c ****         for (short i = 0; i < 11; i++)
1111:Dsp/letter_shell/shell.c ****         {
1112:Dsp/letter_shell/shell.c ****             buffer[i] = '0';
1113:Dsp/letter_shell/shell.c ****         }
1114:Dsp/letter_shell/shell.c ****         shellToHex(value, buffer);
1115:Dsp/letter_shell/shell.c ****         shellWriteString(shell, buffer);
1116:Dsp/letter_shell/shell.c ****         break;
1117:Dsp/letter_shell/shell.c ****     }
1118:Dsp/letter_shell/shell.c **** 
1119:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "\r\n");
1120:Dsp/letter_shell/shell.c ****     return value;
1121:Dsp/letter_shell/shell.c **** }
1122:Dsp/letter_shell/shell.c **** 
1123:Dsp/letter_shell/shell.c **** 
1124:Dsp/letter_shell/shell.c **** /**
1125:Dsp/letter_shell/shell.c ****  * @brief shell设置变量
1126:Dsp/letter_shell/shell.c ****  * 
1127:Dsp/letter_shell/shell.c ****  * @param name 变量名
1128:Dsp/letter_shell/shell.c ****  * @param value 变量值
1129:Dsp/letter_shell/shell.c ****  * @return int 返回变量值
1130:Dsp/letter_shell/shell.c ****  */
1131:Dsp/letter_shell/shell.c **** int shellSetVar(char *name, int value)
1132:Dsp/letter_shell/shell.c **** {
1133:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1134:Dsp/letter_shell/shell.c ****     if (shell == NULL)
1135:Dsp/letter_shell/shell.c ****     {
1136:Dsp/letter_shell/shell.c ****         return 0;
1137:Dsp/letter_shell/shell.c ****     }
1138:Dsp/letter_shell/shell.c ****     ShellCommand *command = shellSeekCommand(shell,
1139:Dsp/letter_shell/shell.c ****                                              name,
1140:Dsp/letter_shell/shell.c ****                                              shell->commandList.base,
1141:Dsp/letter_shell/shell.c ****                                              0);
1142:Dsp/letter_shell/shell.c ****     if (!command)
1143:Dsp/letter_shell/shell.c ****     {
1144:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_VAR_NOT_FOUND]);
1145:Dsp/letter_shell/shell.c ****         return 0;
1146:Dsp/letter_shell/shell.c ****     }
1147:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type < SHELL_TYPE_VAR_INT
1148:Dsp/letter_shell/shell.c ****         || command->attr.attrs.type > SHELL_TYPE_VAR_NODE)
1149:Dsp/letter_shell/shell.c ****     {
1150:Dsp/letter_shell/shell.c ****         shellWriteString(shell, name);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 28


1151:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_NOT_VAR]);
1152:Dsp/letter_shell/shell.c ****         return 0;
1153:Dsp/letter_shell/shell.c ****     }
1154:Dsp/letter_shell/shell.c ****     return shellSetVarValue(shell, command, value);
1155:Dsp/letter_shell/shell.c **** }
1156:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1157:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1158:Dsp/letter_shell/shell.c **** setVar, shellSetVar, set var);
1159:Dsp/letter_shell/shell.c **** 
1160:Dsp/letter_shell/shell.c **** 
1161:Dsp/letter_shell/shell.c **** /**
1162:Dsp/letter_shell/shell.c ****  * @brief shell运行命令
1163:Dsp/letter_shell/shell.c ****  * 
1164:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1165:Dsp/letter_shell/shell.c ****  * @param command 命令
1166:Dsp/letter_shell/shell.c ****  * 
1167:Dsp/letter_shell/shell.c ****  * @return unsigned int 命令返回值
1168:Dsp/letter_shell/shell.c ****  */
1169:Dsp/letter_shell/shell.c **** unsigned int shellRunCommand(Shell *shell, ShellCommand *command)
1170:Dsp/letter_shell/shell.c **** {
1171:Dsp/letter_shell/shell.c ****     int returnValue = 0;
1172:Dsp/letter_shell/shell.c ****     shell->status.isActive = 1;
1173:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type == SHELL_TYPE_CMD_MAIN)
1174:Dsp/letter_shell/shell.c ****     {
1175:Dsp/letter_shell/shell.c ****         shellRemoveParamQuotes(shell);
1176:Dsp/letter_shell/shell.c ****         returnValue = command->data.cmd.function(shell->parser.paramCount,
1177:Dsp/letter_shell/shell.c ****                                                  shell->parser.param);
1178:Dsp/letter_shell/shell.c ****         if (!command->attr.attrs.disableReturn)
1179:Dsp/letter_shell/shell.c ****         {
1180:Dsp/letter_shell/shell.c ****             shellWriteReturnValue(shell, returnValue);
1181:Dsp/letter_shell/shell.c ****         }
1182:Dsp/letter_shell/shell.c ****     }
1183:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type == SHELL_TYPE_CMD_FUNC)
1184:Dsp/letter_shell/shell.c ****     {
1185:Dsp/letter_shell/shell.c ****         returnValue = shellExtRun(shell,
1186:Dsp/letter_shell/shell.c ****                                   command,
1187:Dsp/letter_shell/shell.c ****                                   shell->parser.paramCount,
1188:Dsp/letter_shell/shell.c ****                                   shell->parser.param);
1189:Dsp/letter_shell/shell.c ****         if (!command->attr.attrs.disableReturn)
1190:Dsp/letter_shell/shell.c ****         {
1191:Dsp/letter_shell/shell.c ****             shellWriteReturnValue(shell, returnValue);
1192:Dsp/letter_shell/shell.c ****         }
1193:Dsp/letter_shell/shell.c ****     }
1194:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type >= SHELL_TYPE_VAR_INT
1195:Dsp/letter_shell/shell.c ****         && command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
1196:Dsp/letter_shell/shell.c ****     {
1197:Dsp/letter_shell/shell.c ****         shellShowVar(shell, command);
1198:Dsp/letter_shell/shell.c ****     }
1199:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type == SHELL_TYPE_USER)
1200:Dsp/letter_shell/shell.c ****     {
1201:Dsp/letter_shell/shell.c ****         shellSetUser(shell, command);
1202:Dsp/letter_shell/shell.c ****     }
1203:Dsp/letter_shell/shell.c ****     shell->status.isActive = 0;
1204:Dsp/letter_shell/shell.c **** 
1205:Dsp/letter_shell/shell.c ****     return returnValue;
1206:Dsp/letter_shell/shell.c **** }
1207:Dsp/letter_shell/shell.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 29


1208:Dsp/letter_shell/shell.c **** 
1209:Dsp/letter_shell/shell.c **** /**
1210:Dsp/letter_shell/shell.c ****  * @brief shell校验密码
1211:Dsp/letter_shell/shell.c ****  * 
1212:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1213:Dsp/letter_shell/shell.c ****  */
1214:Dsp/letter_shell/shell.c **** static void shellCheckPassword(Shell *shell)
1215:Dsp/letter_shell/shell.c **** {
1216:Dsp/letter_shell/shell.c ****     if (strcmp(shell->parser.buffer, shell->info.user->data.user.password) == 0)
1217:Dsp/letter_shell/shell.c ****     {
1218:Dsp/letter_shell/shell.c ****         shell->status.isChecked = 1;
1219:Dsp/letter_shell/shell.c ****     #if SHELL_SHOW_INFO == 1
1220:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_INFO]);
1221:Dsp/letter_shell/shell.c ****     #endif
1222:Dsp/letter_shell/shell.c ****     }
1223:Dsp/letter_shell/shell.c ****     else
1224:Dsp/letter_shell/shell.c ****     {
1225:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_PASSWORD_ERROR]);
1226:Dsp/letter_shell/shell.c ****     }
1227:Dsp/letter_shell/shell.c ****     shell->parser.length = 0;
1228:Dsp/letter_shell/shell.c ****     shell->parser.cursor = 0;
1229:Dsp/letter_shell/shell.c **** }
1230:Dsp/letter_shell/shell.c **** 
1231:Dsp/letter_shell/shell.c **** 
1232:Dsp/letter_shell/shell.c **** /**
1233:Dsp/letter_shell/shell.c ****  * @brief shell设置用户
1234:Dsp/letter_shell/shell.c ****  * 
1235:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1236:Dsp/letter_shell/shell.c ****  * @param user 用户
1237:Dsp/letter_shell/shell.c ****  */
1238:Dsp/letter_shell/shell.c **** static void shellSetUser(Shell *shell, const ShellCommand *user)
1239:Dsp/letter_shell/shell.c **** {
1240:Dsp/letter_shell/shell.c ****     shell->info.user = user;
1241:Dsp/letter_shell/shell.c ****     shell->status.isChecked = 
1242:Dsp/letter_shell/shell.c ****         ((user->data.user.password && strlen(user->data.user.password) != 0)
1243:Dsp/letter_shell/shell.c ****             && (shell->parser.paramCount < 2
1244:Dsp/letter_shell/shell.c ****                 || strcmp(user->data.user.password, shell->parser.param[1]) != 0))
1245:Dsp/letter_shell/shell.c ****          ? 0 : 1;
1246:Dsp/letter_shell/shell.c ****         
1247:Dsp/letter_shell/shell.c **** #if SHELL_CLS_WHEN_LOGIN == 1
1248:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_CONSOLE]);
1249:Dsp/letter_shell/shell.c **** #endif
1250:Dsp/letter_shell/shell.c **** #if SHELL_SHOW_INFO == 1
1251:Dsp/letter_shell/shell.c ****     if (shell->status.isChecked)
1252:Dsp/letter_shell/shell.c ****     {
1253:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_INFO]);
1254:Dsp/letter_shell/shell.c ****     }
1255:Dsp/letter_shell/shell.c **** #endif
1256:Dsp/letter_shell/shell.c **** }
1257:Dsp/letter_shell/shell.c **** 
1258:Dsp/letter_shell/shell.c **** 
1259:Dsp/letter_shell/shell.c **** /**
1260:Dsp/letter_shell/shell.c ****  * @brief shell写返回值
1261:Dsp/letter_shell/shell.c ****  * 
1262:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1263:Dsp/letter_shell/shell.c ****  * @param value 返回值
1264:Dsp/letter_shell/shell.c ****  */
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 30


1265:Dsp/letter_shell/shell.c **** static void shellWriteReturnValue(Shell *shell, int value)
1266:Dsp/letter_shell/shell.c **** {
1267:Dsp/letter_shell/shell.c ****     char buffer[12] = "00000000000";
1268:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "Return: ");
1269:Dsp/letter_shell/shell.c ****     shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
1270:Dsp/letter_shell/shell.c ****     shellWriteString(shell, ", 0x");
1271:Dsp/letter_shell/shell.c ****     for (short i = 0; i < 11; i++)
1272:Dsp/letter_shell/shell.c ****     {
1273:Dsp/letter_shell/shell.c ****         buffer[i] = '0';
1274:Dsp/letter_shell/shell.c ****     }
1275:Dsp/letter_shell/shell.c ****     shellToHex(value, buffer);
1276:Dsp/letter_shell/shell.c ****     shellWriteString(shell, buffer);
1277:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "\r\n");
1278:Dsp/letter_shell/shell.c **** }
1279:Dsp/letter_shell/shell.c **** 
1280:Dsp/letter_shell/shell.c **** 
1281:Dsp/letter_shell/shell.c **** /**
1282:Dsp/letter_shell/shell.c ****  * @brief shell历史记录添加
1283:Dsp/letter_shell/shell.c ****  * 
1284:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1285:Dsp/letter_shell/shell.c ****  */
1286:Dsp/letter_shell/shell.c **** static void shellHistoryAdd(Shell *shell)
1287:Dsp/letter_shell/shell.c **** {
 389              		.loc 1 1287 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              	.LVL48:
 394 0000 10B5     		push	{r4, lr}
 395              	.LCFI6:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 4, -8
 398              		.cfi_offset 14, -4
 399 0002 0446     		mov	r4, r0
1288:Dsp/letter_shell/shell.c ****     shell->history.offset = 0;
 400              		.loc 1 1288 0
 401 0004 0023     		movs	r3, #0
 402 0006 A0F85430 		strh	r3, [r0, #84]	@ movhi
1289:Dsp/letter_shell/shell.c ****     if (shell->history.number > 0
 403              		.loc 1 1289 0
 404 000a B0F85030 		ldrh	r3, [r0, #80]
 405 000e 6BB1     		cbz	r3, .L35
1290:Dsp/letter_shell/shell.c ****         && strcmp(shell->history.item[(shell->history.record == 0 ? 
 406              		.loc 1 1290 0
 407 0010 B0F85230 		ldrh	r3, [r0, #82]
1291:Dsp/letter_shell/shell.c ****                 SHELL_HISTORY_MAX_NUMBER : shell->history.record) - 1],
 408              		.loc 1 1291 0
 409 0014 0BB1     		cbz	r3, .L40
 410              		.loc 1 1291 0 is_stmt 0 discriminator 1
 411 0016 013B     		subs	r3, r3, #1
 412 0018 00E0     		b	.L36
 413              	.L40:
 414              		.loc 1 1291 0
 415 001a 0423     		movs	r3, #4
 416              	.L36:
1290:Dsp/letter_shell/shell.c ****         && strcmp(shell->history.item[(shell->history.record == 0 ? 
 417              		.loc 1 1290 0 is_stmt 1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 31


 418 001c 0E33     		adds	r3, r3, #14
 419 001e 04EB8303 		add	r3, r4, r3, lsl #2
 420 0022 2169     		ldr	r1, [r4, #16]
 421 0024 5868     		ldr	r0, [r3, #4]
 422              	.LVL49:
 423 0026 FFF7FEFF 		bl	strcmp
 424              	.LVL50:
 425 002a 00B3     		cbz	r0, .L34
 426              	.L35:
1292:Dsp/letter_shell/shell.c ****                 shell->parser.buffer) == 0)
1293:Dsp/letter_shell/shell.c ****     {
1294:Dsp/letter_shell/shell.c ****         return;
1295:Dsp/letter_shell/shell.c ****     }
1296:Dsp/letter_shell/shell.c ****     if (shellStringCopy(shell->history.item[shell->history.record],
 427              		.loc 1 1296 0
 428 002c B4F85230 		ldrh	r3, [r4, #82]
 429 0030 0E33     		adds	r3, r3, #14
 430 0032 04EB8303 		add	r3, r4, r3, lsl #2
 431 0036 2169     		ldr	r1, [r4, #16]
 432 0038 5868     		ldr	r0, [r3, #4]
 433 003a FFF7FEFF 		bl	shellStringCopy
 434              	.LVL51:
 435 003e 20B1     		cbz	r0, .L38
1297:Dsp/letter_shell/shell.c ****                         shell->parser.buffer) != 0)
1298:Dsp/letter_shell/shell.c ****     {
1299:Dsp/letter_shell/shell.c ****         shell->history.record++;
 436              		.loc 1 1299 0
 437 0040 B4F85230 		ldrh	r3, [r4, #82]
 438 0044 0133     		adds	r3, r3, #1
 439 0046 A4F85230 		strh	r3, [r4, #82]	@ movhi
 440              	.L38:
1300:Dsp/letter_shell/shell.c ****     }
1301:Dsp/letter_shell/shell.c ****     if (++shell->history.number > SHELL_HISTORY_MAX_NUMBER)
 441              		.loc 1 1301 0
 442 004a B4F85030 		ldrh	r3, [r4, #80]
 443 004e 0133     		adds	r3, r3, #1
 444 0050 9BB2     		uxth	r3, r3
 445 0052 A4F85030 		strh	r3, [r4, #80]	@ movhi
 446 0056 052B     		cmp	r3, #5
 447 0058 02D9     		bls	.L39
1302:Dsp/letter_shell/shell.c ****     {
1303:Dsp/letter_shell/shell.c ****         shell->history.number = SHELL_HISTORY_MAX_NUMBER;
 448              		.loc 1 1303 0
 449 005a 0523     		movs	r3, #5
 450 005c A4F85030 		strh	r3, [r4, #80]	@ movhi
 451              	.L39:
1304:Dsp/letter_shell/shell.c ****     }
1305:Dsp/letter_shell/shell.c ****     if (shell->history.record >= SHELL_HISTORY_MAX_NUMBER)
 452              		.loc 1 1305 0
 453 0060 B4F85230 		ldrh	r3, [r4, #82]
 454 0064 042B     		cmp	r3, #4
 455 0066 02D9     		bls	.L34
1306:Dsp/letter_shell/shell.c ****     {
1307:Dsp/letter_shell/shell.c ****         shell->history.record = 0;
 456              		.loc 1 1307 0
 457 0068 0023     		movs	r3, #0
 458 006a A4F85230 		strh	r3, [r4, #82]	@ movhi
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 32


 459              	.L34:
 460 006e 10BD     		pop	{r4, pc}
 461              		.cfi_endproc
 462              	.LFE161:
 464              		.section	.text.shellRemoveParamQuotes,"ax",%progbits
 465              		.align	2
 466              		.thumb
 467              		.thumb_func
 469              	shellRemoveParamQuotes:
 470              	.LFB151:
 925:Dsp/letter_shell/shell.c ****     unsigned short paramLength;
 471              		.loc 1 925 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              	.LVL52:
 476 0000 70B5     		push	{r4, r5, r6, lr}
 477              	.LCFI7:
 478              		.cfi_def_cfa_offset 16
 479              		.cfi_offset 4, -16
 480              		.cfi_offset 5, -12
 481              		.cfi_offset 6, -8
 482              		.cfi_offset 14, -4
 483 0002 0546     		mov	r5, r0
 484              	.LVL53:
 485              	.LBB6:
 927:Dsp/letter_shell/shell.c ****     {
 486              		.loc 1 927 0
 487 0004 0024     		movs	r4, #0
 488 0006 1FE0     		b	.L43
 489              	.LVL54:
 490              	.L46:
 929:Dsp/letter_shell/shell.c ****         {
 491              		.loc 1 929 0
 492 0008 2346     		mov	r3, r4
 493 000a 221D     		adds	r2, r4, #4
 494 000c 05EB8202 		add	r2, r5, r2, lsl #2
 495 0010 5268     		ldr	r2, [r2, #4]
 496 0012 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 497 0014 2229     		cmp	r1, #34
 498 0016 07D1     		bne	.L44
 931:Dsp/letter_shell/shell.c ****             shell->parser.param[i] = &shell->parser.param[i][1];
 499              		.loc 1 931 0
 500 0018 0021     		movs	r1, #0
 501 001a 1170     		strb	r1, [r2]
 932:Dsp/letter_shell/shell.c ****         }
 502              		.loc 1 932 0
 503 001c 221D     		adds	r2, r4, #4
 504 001e 05EB8202 		add	r2, r5, r2, lsl #2
 505 0022 5168     		ldr	r1, [r2, #4]
 506 0024 0131     		adds	r1, r1, #1
 507 0026 5160     		str	r1, [r2, #4]
 508              	.L44:
 934:Dsp/letter_shell/shell.c ****         if (shell->parser.param[i][paramLength - 1] == '\"')
 509              		.loc 1 934 0
 510 0028 0433     		adds	r3, r3, #4
 511 002a 05EB8303 		add	r3, r5, r3, lsl #2
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 33


 512 002e 5E68     		ldr	r6, [r3, #4]
 513 0030 3046     		mov	r0, r6
 514 0032 FFF7FEFF 		bl	strlen
 515              	.LVL55:
 935:Dsp/letter_shell/shell.c ****         {
 516              		.loc 1 935 0
 517 0036 80B2     		uxth	r0, r0
 518 0038 0138     		subs	r0, r0, #1
 519              	.LVL56:
 520 003a 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
 521 003c 222B     		cmp	r3, #34
 522 003e 01D1     		bne	.L45
 937:Dsp/letter_shell/shell.c ****         }
 523              		.loc 1 937 0
 524 0040 0023     		movs	r3, #0
 525 0042 3354     		strb	r3, [r6, r0]
 526              	.L45:
 927:Dsp/letter_shell/shell.c ****     {
 527              		.loc 1 927 0 discriminator 2
 528 0044 0134     		adds	r4, r4, #1
 529              	.LVL57:
 530 0046 A4B2     		uxth	r4, r4
 531              	.LVL58:
 532              	.L43:
 927:Dsp/letter_shell/shell.c ****     {
 533              		.loc 1 927 0 is_stmt 0 discriminator 1
 534 0048 EB8E     		ldrh	r3, [r5, #54]
 535 004a 9C42     		cmp	r4, r3
 536 004c DCD3     		bcc	.L46
 537              	.LBE6:
 940:Dsp/letter_shell/shell.c **** 
 538              		.loc 1 940 0 is_stmt 1
 539 004e 70BD     		pop	{r4, r5, r6, pc}
 540              		.cfi_endproc
 541              	.LFE151:
 543              		.section	.text.shellGetCurrent,"ax",%progbits
 544              		.align	2
 545              		.global	shellGetCurrent
 546              		.thumb
 547              		.thumb_func
 549              	shellGetCurrent:
 550              	.LFB126:
 247:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
 551              		.loc 1 247 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556              	.LVL59:
 557              	.LBB7:
 248:Dsp/letter_shell/shell.c ****     {
 558              		.loc 1 248 0
 559 0000 0023     		movs	r3, #0
 560 0002 0AE0     		b	.L49
 561              	.LVL60:
 562              	.L52:
 250:Dsp/letter_shell/shell.c ****         {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 34


 563              		.loc 1 250 0
 564 0004 074A     		ldr	r2, .L53
 565 0006 52F82300 		ldr	r0, [r2, r3, lsl #2]
 566 000a 20B1     		cbz	r0, .L50
 250:Dsp/letter_shell/shell.c ****         {
 567              		.loc 1 250 0 is_stmt 0 discriminator 1
 568 000c 90F86020 		ldrb	r2, [r0, #96]	@ zero_extendqisi2
 569 0010 12F0020F 		tst	r2, #2
 570 0014 04D1     		bne	.L51
 571              	.L50:
 248:Dsp/letter_shell/shell.c ****     {
 572              		.loc 1 248 0 is_stmt 1 discriminator 2
 573 0016 0133     		adds	r3, r3, #1
 574              	.LVL61:
 575 0018 1BB2     		sxth	r3, r3
 576              	.LVL62:
 577              	.L49:
 248:Dsp/letter_shell/shell.c ****     {
 578              		.loc 1 248 0 is_stmt 0 discriminator 1
 579 001a 042B     		cmp	r3, #4
 580 001c F2DD     		ble	.L52
 581              	.LBE7:
 255:Dsp/letter_shell/shell.c **** }
 582              		.loc 1 255 0 is_stmt 1
 583 001e 0020     		movs	r0, #0
 584              	.L51:
 256:Dsp/letter_shell/shell.c **** 
 585              		.loc 1 256 0
 586 0020 7047     		bx	lr
 587              	.L54:
 588 0022 00BF     		.align	2
 589              	.L53:
 590 0024 00000000 		.word	.LANCHOR0
 591              		.cfi_endproc
 592              	.LFE126:
 594              		.section	.text.shellWriteByte,"ax",%progbits
 595              		.align	2
 596              		.global	shellWriteByte
 597              		.thumb
 598              		.thumb_func
 600              	shellWriteByte:
 601              	.LFB127:
 266:Dsp/letter_shell/shell.c ****     shell->write(data);
 602              		.loc 1 266 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              	.LVL63:
 607 0000 08B5     		push	{r3, lr}
 608              	.LCFI8:
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 3, -8
 611              		.cfi_offset 14, -4
 267:Dsp/letter_shell/shell.c ****     delay_us(50);
 612              		.loc 1 267 0
 613 0002 836E     		ldr	r3, [r0, #104]
 614 0004 0846     		mov	r0, r1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 35


 615              	.LVL64:
 616 0006 9847     		blx	r3
 617              	.LVL65:
 268:Dsp/letter_shell/shell.c **** }
 618              		.loc 1 268 0
 619 0008 3220     		movs	r0, #50
 620 000a FFF7FEFF 		bl	delay_us
 621              	.LVL66:
 622 000e 08BD     		pop	{r3, pc}
 623              		.cfi_endproc
 624              	.LFE127:
 626              		.section	.text.shellRight,"ax",%progbits
 627              		.align	2
 628              		.global	shellRight
 629              		.thumb
 630              		.thumb_func
 632              	shellRight:
 633              	.LFB167:
1308:Dsp/letter_shell/shell.c ****     }
1309:Dsp/letter_shell/shell.c **** }
1310:Dsp/letter_shell/shell.c **** 
1311:Dsp/letter_shell/shell.c **** 
1312:Dsp/letter_shell/shell.c **** /**
1313:Dsp/letter_shell/shell.c ****  * @brief shell历史记录查找
1314:Dsp/letter_shell/shell.c ****  * 
1315:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1316:Dsp/letter_shell/shell.c ****  * @param dir 方向 {@code <0}往上查找 {@code >0}往下查找
1317:Dsp/letter_shell/shell.c ****  */
1318:Dsp/letter_shell/shell.c **** static void shellHistory(Shell *shell, signed char dir)
1319:Dsp/letter_shell/shell.c **** {
1320:Dsp/letter_shell/shell.c ****     if (dir > 0)
1321:Dsp/letter_shell/shell.c ****     {
1322:Dsp/letter_shell/shell.c ****         if (shell->history.offset-- <= 
1323:Dsp/letter_shell/shell.c ****             -((shell->history.number > shell->history.record) ?
1324:Dsp/letter_shell/shell.c ****                 shell->history.number : shell->history.record))
1325:Dsp/letter_shell/shell.c ****         {
1326:Dsp/letter_shell/shell.c ****             shell->history.offset = -((shell->history.number > shell->history.record)
1327:Dsp/letter_shell/shell.c ****                                     ? shell->history.number : shell->history.record);
1328:Dsp/letter_shell/shell.c ****         }
1329:Dsp/letter_shell/shell.c ****     }
1330:Dsp/letter_shell/shell.c ****     else if (dir < 0)
1331:Dsp/letter_shell/shell.c ****     {
1332:Dsp/letter_shell/shell.c ****         if (++shell->history.offset > 0)
1333:Dsp/letter_shell/shell.c ****         {
1334:Dsp/letter_shell/shell.c ****             shell->history.offset = 0;
1335:Dsp/letter_shell/shell.c ****             return;
1336:Dsp/letter_shell/shell.c ****         }
1337:Dsp/letter_shell/shell.c ****     }
1338:Dsp/letter_shell/shell.c ****     else
1339:Dsp/letter_shell/shell.c ****     {
1340:Dsp/letter_shell/shell.c ****         return;
1341:Dsp/letter_shell/shell.c ****     }
1342:Dsp/letter_shell/shell.c ****     shellClearCommandLine(shell);
1343:Dsp/letter_shell/shell.c ****     if (shell->history.offset == 0)
1344:Dsp/letter_shell/shell.c ****     {
1345:Dsp/letter_shell/shell.c ****         shell->parser.cursor = shell->parser.length = 0;
1346:Dsp/letter_shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 36


1347:Dsp/letter_shell/shell.c ****     else
1348:Dsp/letter_shell/shell.c ****     {
1349:Dsp/letter_shell/shell.c ****         if ((shell->parser.length = shellStringCopy(shell->parser.buffer,
1350:Dsp/letter_shell/shell.c ****                 shell->history.item[(shell->history.record + SHELL_HISTORY_MAX_NUMBER
1351:Dsp/letter_shell/shell.c ****                     + shell->history.offset) % SHELL_HISTORY_MAX_NUMBER])) == 0)
1352:Dsp/letter_shell/shell.c ****         {
1353:Dsp/letter_shell/shell.c ****             return;
1354:Dsp/letter_shell/shell.c ****         }
1355:Dsp/letter_shell/shell.c ****         shell->parser.cursor = shell->parser.length;
1356:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
1357:Dsp/letter_shell/shell.c ****     }
1358:Dsp/letter_shell/shell.c ****     
1359:Dsp/letter_shell/shell.c **** }
1360:Dsp/letter_shell/shell.c **** 
1361:Dsp/letter_shell/shell.c **** 
1362:Dsp/letter_shell/shell.c **** /**
1363:Dsp/letter_shell/shell.c ****  * @brief shell 常规输入
1364:Dsp/letter_shell/shell.c ****  * 
1365:Dsp/letter_shell/shell.c ****  * @param shell shell 对象
1366:Dsp/letter_shell/shell.c ****  * @param data 输入字符
1367:Dsp/letter_shell/shell.c ****  */
1368:Dsp/letter_shell/shell.c **** void shellNormalInput(Shell *shell, char data)
1369:Dsp/letter_shell/shell.c **** {
1370:Dsp/letter_shell/shell.c ****     shell->status.tabFlag = 0;
1371:Dsp/letter_shell/shell.c ****     shellInsertByte(shell, data);
1372:Dsp/letter_shell/shell.c **** }
1373:Dsp/letter_shell/shell.c **** 
1374:Dsp/letter_shell/shell.c **** 
1375:Dsp/letter_shell/shell.c **** /**
1376:Dsp/letter_shell/shell.c ****  * @brief shell运行命令
1377:Dsp/letter_shell/shell.c ****  * 
1378:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1379:Dsp/letter_shell/shell.c ****  */
1380:Dsp/letter_shell/shell.c **** void shellExec(Shell *shell)
1381:Dsp/letter_shell/shell.c **** {
1382:Dsp/letter_shell/shell.c ****     
1383:Dsp/letter_shell/shell.c ****     if (shell->parser.length == 0)
1384:Dsp/letter_shell/shell.c ****     {
1385:Dsp/letter_shell/shell.c ****         return;
1386:Dsp/letter_shell/shell.c ****     }
1387:Dsp/letter_shell/shell.c **** 
1388:Dsp/letter_shell/shell.c ****     shell->parser.buffer[shell->parser.length] = 0;
1389:Dsp/letter_shell/shell.c **** 
1390:Dsp/letter_shell/shell.c ****     if (shell->status.isChecked)
1391:Dsp/letter_shell/shell.c ****     {
1392:Dsp/letter_shell/shell.c ****         shellHistoryAdd(shell);
1393:Dsp/letter_shell/shell.c ****         shellParserParam(shell);
1394:Dsp/letter_shell/shell.c ****         shell->parser.length = shell->parser.cursor = 0;
1395:Dsp/letter_shell/shell.c ****         if (shell->parser.paramCount == 0)
1396:Dsp/letter_shell/shell.c ****         {
1397:Dsp/letter_shell/shell.c ****             return;
1398:Dsp/letter_shell/shell.c ****         }
1399:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
1400:Dsp/letter_shell/shell.c **** 
1401:Dsp/letter_shell/shell.c ****         ShellCommand *command = shellSeekCommand(shell,
1402:Dsp/letter_shell/shell.c ****                                                  shell->parser.param[0],
1403:Dsp/letter_shell/shell.c ****                                                  shell->commandList.base,
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 37


1404:Dsp/letter_shell/shell.c ****                                                  0);
1405:Dsp/letter_shell/shell.c ****         if (command != NULL)
1406:Dsp/letter_shell/shell.c ****         {
1407:Dsp/letter_shell/shell.c ****             shellRunCommand(shell, command);
1408:Dsp/letter_shell/shell.c ****         }
1409:Dsp/letter_shell/shell.c ****         else
1410:Dsp/letter_shell/shell.c ****         {
1411:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_CMD_NOT_FOUND]);
1412:Dsp/letter_shell/shell.c ****         }
1413:Dsp/letter_shell/shell.c ****     }
1414:Dsp/letter_shell/shell.c ****     else
1415:Dsp/letter_shell/shell.c ****     {
1416:Dsp/letter_shell/shell.c ****         shellCheckPassword(shell);
1417:Dsp/letter_shell/shell.c ****     }
1418:Dsp/letter_shell/shell.c **** }
1419:Dsp/letter_shell/shell.c **** 
1420:Dsp/letter_shell/shell.c **** 
1421:Dsp/letter_shell/shell.c **** /**
1422:Dsp/letter_shell/shell.c ****  * @brief shell上方向键输入
1423:Dsp/letter_shell/shell.c ****  * 
1424:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1425:Dsp/letter_shell/shell.c ****  */
1426:Dsp/letter_shell/shell.c **** void shellUp(Shell *shell)
1427:Dsp/letter_shell/shell.c **** {
1428:Dsp/letter_shell/shell.c ****     shellHistory(shell, 1);
1429:Dsp/letter_shell/shell.c **** }
1430:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x1B5B4100, shellUp, up);
1431:Dsp/letter_shell/shell.c **** 
1432:Dsp/letter_shell/shell.c **** 
1433:Dsp/letter_shell/shell.c **** /**
1434:Dsp/letter_shell/shell.c ****  * @brief shell下方向键输入
1435:Dsp/letter_shell/shell.c ****  * 
1436:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1437:Dsp/letter_shell/shell.c ****  */
1438:Dsp/letter_shell/shell.c **** void shellDown(Shell *shell)
1439:Dsp/letter_shell/shell.c **** {
1440:Dsp/letter_shell/shell.c ****     shellHistory(shell, -1);
1441:Dsp/letter_shell/shell.c **** }
1442:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x1B5B4200, shellDown, down);
1443:Dsp/letter_shell/shell.c **** 
1444:Dsp/letter_shell/shell.c **** 
1445:Dsp/letter_shell/shell.c **** /**
1446:Dsp/letter_shell/shell.c ****  * @brief shell右方向键输入
1447:Dsp/letter_shell/shell.c ****  * 
1448:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1449:Dsp/letter_shell/shell.c ****  */
1450:Dsp/letter_shell/shell.c **** void shellRight(Shell *shell)
1451:Dsp/letter_shell/shell.c **** {
 634              		.loc 1 1451 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              	.LVL67:
 639 0000 08B5     		push	{r3, lr}
 640              	.LCFI9:
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 3, -8
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 38


 643              		.cfi_offset 14, -4
1452:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor < shell->parser.length)
 644              		.loc 1 1452 0
 645 0002 C389     		ldrh	r3, [r0, #14]
 646 0004 8289     		ldrh	r2, [r0, #12]
 647 0006 9342     		cmp	r3, r2
 648 0008 05D2     		bcs	.L57
1453:Dsp/letter_shell/shell.c ****     {
1454:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, shell->parser.buffer[shell->parser.cursor++]);
 649              		.loc 1 1454 0
 650 000a 0269     		ldr	r2, [r0, #16]
 651 000c 591C     		adds	r1, r3, #1
 652 000e C181     		strh	r1, [r0, #14]	@ movhi
 653 0010 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 654 0012 FFF7FEFF 		bl	shellWriteByte
 655              	.LVL68:
 656              	.L57:
 657 0016 08BD     		pop	{r3, pc}
 658              		.cfi_endproc
 659              	.LFE167:
 661              		.section	.text.shellLeft,"ax",%progbits
 662              		.align	2
 663              		.global	shellLeft
 664              		.thumb
 665              		.thumb_func
 667              	shellLeft:
 668              	.LFB168:
1455:Dsp/letter_shell/shell.c ****     }
1456:Dsp/letter_shell/shell.c **** }
1457:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1458:Dsp/letter_shell/shell.c **** 0x1B5B4300, shellRight, right);
1459:Dsp/letter_shell/shell.c **** 
1460:Dsp/letter_shell/shell.c **** 
1461:Dsp/letter_shell/shell.c **** /**
1462:Dsp/letter_shell/shell.c ****  * @brief shell左方向键输入
1463:Dsp/letter_shell/shell.c ****  * 
1464:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1465:Dsp/letter_shell/shell.c ****  */
1466:Dsp/letter_shell/shell.c **** void shellLeft(Shell *shell)
1467:Dsp/letter_shell/shell.c **** {
 669              		.loc 1 1467 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              	.LVL69:
1468:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor > 0)
 674              		.loc 1 1468 0
 675 0000 C389     		ldrh	r3, [r0, #14]
 676 0002 43B1     		cbz	r3, .L63
1467:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor > 0)
 677              		.loc 1 1467 0
 678 0004 10B5     		push	{r4, lr}
 679              	.LCFI10:
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 4, -8
 682              		.cfi_offset 14, -4
 683 0006 0446     		mov	r4, r0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 39


1469:Dsp/letter_shell/shell.c ****     {
1470:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, '\b');
 684              		.loc 1 1470 0
 685 0008 0821     		movs	r1, #8
 686 000a FFF7FEFF 		bl	shellWriteByte
 687              	.LVL70:
1471:Dsp/letter_shell/shell.c ****         shell->parser.cursor--;
 688              		.loc 1 1471 0
 689 000e E389     		ldrh	r3, [r4, #14]
 690 0010 013B     		subs	r3, r3, #1
 691 0012 E381     		strh	r3, [r4, #14]	@ movhi
 692 0014 10BD     		pop	{r4, pc}
 693              	.LVL71:
 694              	.L63:
 695              	.LCFI11:
 696              		.cfi_def_cfa_offset 0
 697              		.cfi_restore 4
 698              		.cfi_restore 14
 699 0016 7047     		bx	lr
 700              		.cfi_endproc
 701              	.LFE168:
 703              		.section	.text.shellWriteString,"ax",%progbits
 704              		.align	2
 705              		.global	shellWriteString
 706              		.thumb
 707              		.thumb_func
 709              	shellWriteString:
 710              	.LFB128:
 281:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
 711              		.loc 1 281 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              	.LVL72:
 283:Dsp/letter_shell/shell.c ****     while(*string)
 716              		.loc 1 283 0
 717 0000 836E     		ldr	r3, [r0, #104]
 718 0002 8BB1     		cbz	r3, .L68
 281:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
 719              		.loc 1 281 0
 720 0004 70B5     		push	{r4, r5, r6, lr}
 721              	.LCFI12:
 722              		.cfi_def_cfa_offset 16
 723              		.cfi_offset 4, -16
 724              		.cfi_offset 5, -12
 725              		.cfi_offset 6, -8
 726              		.cfi_offset 14, -4
 727 0006 0646     		mov	r6, r0
 728 0008 0D46     		mov	r5, r1
 729 000a 0024     		movs	r4, #0
 730 000c 07E0     		b	.L66
 731              	.LVL73:
 732              	.L67:
 286:Dsp/letter_shell/shell.c ****         count ++;
 733              		.loc 1 286 0
 734 000e B36E     		ldr	r3, [r6, #104]
 735 0010 0135     		adds	r5, r5, #1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 40


 736              	.LVL74:
 737 0012 9847     		blx	r3
 738              	.LVL75:
 287:Dsp/letter_shell/shell.c ****         delay_us(100);
 739              		.loc 1 287 0
 740 0014 0134     		adds	r4, r4, #1
 741              	.LVL76:
 742 0016 A4B2     		uxth	r4, r4
 743              	.LVL77:
 288:Dsp/letter_shell/shell.c ****     }
 744              		.loc 1 288 0
 745 0018 6420     		movs	r0, #100
 746 001a FFF7FEFF 		bl	delay_us
 747              	.LVL78:
 748              	.L66:
 284:Dsp/letter_shell/shell.c ****     {
 749              		.loc 1 284 0
 750 001e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 751 0020 0028     		cmp	r0, #0
 752 0022 F4D1     		bne	.L67
 290:Dsp/letter_shell/shell.c **** }
 753              		.loc 1 290 0
 754 0024 2046     		mov	r0, r4
 755 0026 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL79:
 757              	.L68:
 758              	.LCFI13:
 759              		.cfi_def_cfa_offset 0
 760              		.cfi_restore 4
 761              		.cfi_restore 5
 762              		.cfi_restore 6
 763              		.cfi_restore 14
 283:Dsp/letter_shell/shell.c ****     while(*string)
 764              		.loc 1 283 0
 765 0028 0020     		movs	r0, #0
 766              	.LVL80:
 767 002a 7047     		bx	lr
 768              		.cfi_endproc
 769              	.LFE128:
 771              		.section	.text.shellSetUser,"ax",%progbits
 772              		.align	2
 773              		.thumb
 774              		.thumb_func
 776              	shellSetUser:
 777              	.LFB159:
1239:Dsp/letter_shell/shell.c ****     shell->info.user = user;
 778              		.loc 1 1239 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              	.LVL81:
 783 0000 10B5     		push	{r4, lr}
 784              	.LCFI14:
 785              		.cfi_def_cfa_offset 8
 786              		.cfi_offset 4, -8
 787              		.cfi_offset 14, -4
 788 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 41


1240:Dsp/letter_shell/shell.c ****     shell->status.isChecked = 
 789              		.loc 1 1240 0
 790 0004 0160     		str	r1, [r0]
1242:Dsp/letter_shell/shell.c ****             && (shell->parser.paramCount < 2
 791              		.loc 1 1242 0
 792 0006 8868     		ldr	r0, [r1, #8]
 793              	.LVL82:
1245:Dsp/letter_shell/shell.c ****         
 794              		.loc 1 1245 0
 795 0008 50B1     		cbz	r0, .L74
1242:Dsp/letter_shell/shell.c ****             && (shell->parser.paramCount < 2
 796              		.loc 1 1242 0
 797 000a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 798 000c 53B1     		cbz	r3, .L75
1243:Dsp/letter_shell/shell.c ****                 || strcmp(user->data.user.password, shell->parser.param[1]) != 0))
 799              		.loc 1 1243 0
 800 000e E38E     		ldrh	r3, [r4, #54]
1245:Dsp/letter_shell/shell.c ****         
 801              		.loc 1 1245 0
 802 0010 012B     		cmp	r3, #1
 803 0012 09D9     		bls	.L76
1244:Dsp/letter_shell/shell.c ****          ? 0 : 1;
 804              		.loc 1 1244 0
 805 0014 A169     		ldr	r1, [r4, #24]
 806              	.LVL83:
 807 0016 FFF7FEFF 		bl	strcmp
 808              	.LVL84:
 809 001a 38B1     		cbz	r0, .L77
1245:Dsp/letter_shell/shell.c ****         
 810              		.loc 1 1245 0
 811 001c 0022     		movs	r2, #0
 812 001e 06E0     		b	.L72
 813              	.LVL85:
 814              	.L74:
 815 0020 0122     		movs	r2, #1
 816 0022 04E0     		b	.L72
 817              	.L75:
 818 0024 0122     		movs	r2, #1
 819 0026 02E0     		b	.L72
 820              	.L76:
 821 0028 0022     		movs	r2, #0
 822 002a 00E0     		b	.L72
 823              	.LVL86:
 824              	.L77:
 825 002c 0122     		movs	r2, #1
 826              	.L72:
1241:Dsp/letter_shell/shell.c ****         ((user->data.user.password && strlen(user->data.user.password) != 0)
 827              		.loc 1 1241 0
 828 002e 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 829 0032 62F30003 		bfi	r3, r2, #0, #1
 830 0036 84F86030 		strb	r3, [r4, #96]
1248:Dsp/letter_shell/shell.c **** #endif
 831              		.loc 1 1248 0
 832 003a 0749     		ldr	r1, .L79
 833 003c 2046     		mov	r0, r4
 834 003e FFF7FEFF 		bl	shellWriteString
 835              	.LVL87:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 42


1251:Dsp/letter_shell/shell.c ****     {
 836              		.loc 1 1251 0
 837 0042 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 838 0046 13F0010F 		tst	r3, #1
 839 004a 03D0     		beq	.L71
1253:Dsp/letter_shell/shell.c ****     }
 840              		.loc 1 1253 0
 841 004c 0349     		ldr	r1, .L79+4
 842 004e 2046     		mov	r0, r4
 843 0050 FFF7FEFF 		bl	shellWriteString
 844              	.LVL88:
 845              	.L71:
 846 0054 10BD     		pop	{r4, pc}
 847              	.LVL89:
 848              	.L80:
 849 0056 00BF     		.align	2
 850              	.L79:
 851 0058 00000000 		.word	.LC0
 852 005c 0C000000 		.word	.LC1
 853              		.cfi_endproc
 854              	.LFE159:
 856              		.section	.text.shellWriteCommandLine,"ax",%progbits
 857              		.align	2
 858              		.thumb
 859              		.thumb_func
 861              	shellWriteCommandLine:
 862              	.LFB130:
 333:Dsp/letter_shell/shell.c ****     if (shell->status.isChecked)
 863              		.loc 1 333 0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 0
 866              		@ frame_needed = 0, uses_anonymous_args = 0
 867              	.LVL90:
 868 0000 10B5     		push	{r4, lr}
 869              	.LCFI15:
 870              		.cfi_def_cfa_offset 8
 871              		.cfi_offset 4, -8
 872              		.cfi_offset 14, -4
 873 0002 0446     		mov	r4, r0
 334:Dsp/letter_shell/shell.c ****     {
 874              		.loc 1 334 0
 875 0004 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 876 0008 13F0010F 		tst	r3, #1
 877 000c 17D0     		beq	.L82
 336:Dsp/letter_shell/shell.c ****         {
 878              		.loc 1 336 0
 879 000e 11B1     		cbz	r1, .L83
 338:Dsp/letter_shell/shell.c ****         }
 880              		.loc 1 338 0
 881 0010 0D49     		ldr	r1, .L88
 882              	.LVL91:
 883 0012 FFF7FEFF 		bl	shellWriteString
 884              	.LVL92:
 885              	.L83:
 340:Dsp/letter_shell/shell.c ****         shellWriteString(shell, ":");
 886              		.loc 1 340 0
 887 0016 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 43


 888 0018 5968     		ldr	r1, [r3, #4]
 889 001a 2046     		mov	r0, r4
 890 001c FFF7FEFF 		bl	shellWriteString
 891              	.LVL93:
 341:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->info.path ? shell->info.path : "/");
 892              		.loc 1 341 0
 893 0020 0A49     		ldr	r1, .L88+4
 894 0022 2046     		mov	r0, r4
 895 0024 FFF7FEFF 		bl	shellWriteString
 896              	.LVL94:
 342:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "$ ");
 897              		.loc 1 342 0
 898 0028 A168     		ldr	r1, [r4, #8]
 899 002a 01B9     		cbnz	r1, .L84
 900 002c 0849     		ldr	r1, .L88+8
 901              	.L84:
 342:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "$ ");
 902              		.loc 1 342 0 is_stmt 0 discriminator 4
 903 002e 2046     		mov	r0, r4
 904 0030 FFF7FEFF 		bl	shellWriteString
 905              	.LVL95:
 343:Dsp/letter_shell/shell.c ****     }
 906              		.loc 1 343 0 is_stmt 1 discriminator 4
 907 0034 0749     		ldr	r1, .L88+12
 908 0036 2046     		mov	r0, r4
 909 0038 FFF7FEFF 		bl	shellWriteString
 910              	.LVL96:
 911 003c 10BD     		pop	{r4, pc}
 912              	.LVL97:
 913              	.L82:
 347:Dsp/letter_shell/shell.c ****     }
 914              		.loc 1 347 0
 915 003e 0649     		ldr	r1, .L88+16
 916              	.LVL98:
 917 0040 FFF7FEFF 		bl	shellWriteString
 918              	.LVL99:
 919 0044 10BD     		pop	{r4, pc}
 920              	.LVL100:
 921              	.L89:
 922 0046 00BF     		.align	2
 923              	.L88:
 924 0048 A0010000 		.word	.LC3
 925 004c A4010000 		.word	.LC4
 926 0050 9C010000 		.word	.LC2
 927 0054 A8010000 		.word	.LC5
 928 0058 AC010000 		.word	.LC6
 929              		.cfi_endproc
 930              	.LFE130:
 932              		.section	.text.shellCheckPassword,"ax",%progbits
 933              		.align	2
 934              		.thumb
 935              		.thumb_func
 937              	shellCheckPassword:
 938              	.LFB158:
1215:Dsp/letter_shell/shell.c ****     if (strcmp(shell->parser.buffer, shell->info.user->data.user.password) == 0)
 939              		.loc 1 1215 0
 940              		.cfi_startproc
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 44


 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL101:
 944 0000 10B5     		push	{r4, lr}
 945              	.LCFI16:
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 4, -8
 948              		.cfi_offset 14, -4
 949 0002 0446     		mov	r4, r0
1216:Dsp/letter_shell/shell.c ****     {
 950              		.loc 1 1216 0
 951 0004 0368     		ldr	r3, [r0]
 952 0006 9968     		ldr	r1, [r3, #8]
 953 0008 0069     		ldr	r0, [r0, #16]
 954              	.LVL102:
 955 000a FFF7FEFF 		bl	strcmp
 956              	.LVL103:
 957 000e 50B9     		cbnz	r0, .L91
1218:Dsp/letter_shell/shell.c ****     #if SHELL_SHOW_INFO == 1
 958              		.loc 1 1218 0
 959 0010 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 960 0014 43F00103 		orr	r3, r3, #1
 961 0018 84F86030 		strb	r3, [r4, #96]
1220:Dsp/letter_shell/shell.c ****     #endif
 962              		.loc 1 1220 0
 963 001c 0649     		ldr	r1, .L94
 964 001e 2046     		mov	r0, r4
 965 0020 FFF7FEFF 		bl	shellWriteString
 966              	.LVL104:
 967 0024 03E0     		b	.L92
 968              	.L91:
1225:Dsp/letter_shell/shell.c ****     }
 969              		.loc 1 1225 0
 970 0026 0549     		ldr	r1, .L94+4
 971 0028 2046     		mov	r0, r4
 972 002a FFF7FEFF 		bl	shellWriteString
 973              	.LVL105:
 974              	.L92:
1227:Dsp/letter_shell/shell.c ****     shell->parser.cursor = 0;
 975              		.loc 1 1227 0
 976 002e 0023     		movs	r3, #0
 977 0030 A381     		strh	r3, [r4, #12]	@ movhi
1228:Dsp/letter_shell/shell.c **** }
 978              		.loc 1 1228 0
 979 0032 E381     		strh	r3, [r4, #14]	@ movhi
 980 0034 10BD     		pop	{r4, pc}
 981              	.LVL106:
 982              	.L95:
 983 0036 00BF     		.align	2
 984              	.L94:
 985 0038 0C000000 		.word	.LC1
 986 003c C8010000 		.word	.LC7
 987              		.cfi_endproc
 988              	.LFE158:
 990              		.section	.text.shellClear,"ax",%progbits
 991              		.align	2
 992              		.global	shellClear
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 45


 993              		.thumb
 994              		.thumb_func
 996              	shellClear:
 997              	.LFB180:
1472:Dsp/letter_shell/shell.c ****     }
1473:Dsp/letter_shell/shell.c **** }
1474:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1475:Dsp/letter_shell/shell.c **** 0x1B5B4400, shellLeft, left);
1476:Dsp/letter_shell/shell.c **** 
1477:Dsp/letter_shell/shell.c **** 
1478:Dsp/letter_shell/shell.c **** /**
1479:Dsp/letter_shell/shell.c ****  * @brief shell Tab按键处理
1480:Dsp/letter_shell/shell.c ****  * 
1481:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1482:Dsp/letter_shell/shell.c ****  */
1483:Dsp/letter_shell/shell.c **** void shellTab(Shell *shell)
1484:Dsp/letter_shell/shell.c **** {
1485:Dsp/letter_shell/shell.c ****     unsigned short maxMatch = shell->parser.bufferSize;
1486:Dsp/letter_shell/shell.c ****     unsigned short lastMatchIndex = 0;
1487:Dsp/letter_shell/shell.c ****     unsigned short matchNum = 0;
1488:Dsp/letter_shell/shell.c ****     unsigned short length;
1489:Dsp/letter_shell/shell.c **** 
1490:Dsp/letter_shell/shell.c ****     if (shell->parser.length == 0)
1491:Dsp/letter_shell/shell.c ****     {
1492:Dsp/letter_shell/shell.c ****         shellListAll(shell);
1493:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 1);
1494:Dsp/letter_shell/shell.c ****     }
1495:Dsp/letter_shell/shell.c ****     else if (shell->parser.length > 0)
1496:Dsp/letter_shell/shell.c ****     {
1497:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
1498:Dsp/letter_shell/shell.c ****         ShellCommand *base = (ShellCommand *)shell->commandList.base;
1499:Dsp/letter_shell/shell.c ****         for (short i = 0; i < shell->commandList.count; i++)
1500:Dsp/letter_shell/shell.c ****         {
1501:Dsp/letter_shell/shell.c ****             if (shellCheckPermission(shell, &base[i]) == 0
1502:Dsp/letter_shell/shell.c ****                 && shellStringCompare(shell->parser.buffer,
1503:Dsp/letter_shell/shell.c ****                                    (char *)shellGetCommandName(&base[i]))
1504:Dsp/letter_shell/shell.c ****                         == shell->parser.length)
1505:Dsp/letter_shell/shell.c ****             {
1506:Dsp/letter_shell/shell.c ****                 if (matchNum != 0)
1507:Dsp/letter_shell/shell.c ****                 {
1508:Dsp/letter_shell/shell.c ****                     if (matchNum == 1)
1509:Dsp/letter_shell/shell.c ****                     {
1510:Dsp/letter_shell/shell.c ****                         shellWriteString(shell, "\r\n");
1511:Dsp/letter_shell/shell.c ****                     }
1512:Dsp/letter_shell/shell.c ****                     shellListItem(shell, &base[lastMatchIndex]);
1513:Dsp/letter_shell/shell.c ****                     length = 
1514:Dsp/letter_shell/shell.c ****                         shellStringCompare((char *)shellGetCommandName(&base[lastMatchIndex]),
1515:Dsp/letter_shell/shell.c ****                                            (char *)shellGetCommandName(&base[i]));
1516:Dsp/letter_shell/shell.c ****                     maxMatch = (maxMatch > length) ? length : maxMatch;
1517:Dsp/letter_shell/shell.c ****                 }
1518:Dsp/letter_shell/shell.c ****                 lastMatchIndex = i;
1519:Dsp/letter_shell/shell.c ****                 matchNum++;
1520:Dsp/letter_shell/shell.c ****             }
1521:Dsp/letter_shell/shell.c ****         }
1522:Dsp/letter_shell/shell.c ****         if (matchNum == 0)
1523:Dsp/letter_shell/shell.c ****         {
1524:Dsp/letter_shell/shell.c ****             return;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 46


1525:Dsp/letter_shell/shell.c ****         }
1526:Dsp/letter_shell/shell.c ****         if (matchNum == 1)
1527:Dsp/letter_shell/shell.c ****         {
1528:Dsp/letter_shell/shell.c ****             shellClearCommandLine(shell);
1529:Dsp/letter_shell/shell.c ****         }
1530:Dsp/letter_shell/shell.c ****         if (matchNum != 0)
1531:Dsp/letter_shell/shell.c ****         {
1532:Dsp/letter_shell/shell.c ****             shell->parser.length = 
1533:Dsp/letter_shell/shell.c ****                 shellStringCopy(shell->parser.buffer,
1534:Dsp/letter_shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
1535:Dsp/letter_shell/shell.c ****         }
1536:Dsp/letter_shell/shell.c ****         if (matchNum > 1)
1537:Dsp/letter_shell/shell.c ****         {
1538:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[lastMatchIndex]);
1539:Dsp/letter_shell/shell.c ****             shellWriteCommandLine(shell, 1);
1540:Dsp/letter_shell/shell.c ****             shell->parser.length = maxMatch;
1541:Dsp/letter_shell/shell.c ****         }
1542:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
1543:Dsp/letter_shell/shell.c ****         shell->parser.cursor = shell->parser.length;
1544:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
1545:Dsp/letter_shell/shell.c ****     }
1546:Dsp/letter_shell/shell.c **** 
1547:Dsp/letter_shell/shell.c ****     if (SHELL_GET_TICK())
1548:Dsp/letter_shell/shell.c ****     {
1549:Dsp/letter_shell/shell.c ****         if (matchNum == 1
1550:Dsp/letter_shell/shell.c ****             && shell->status.tabFlag
1551:Dsp/letter_shell/shell.c ****             && SHELL_GET_TICK() - shell->info.activeTime < SHELL_DOUBLE_CLICK_TIME)
1552:Dsp/letter_shell/shell.c ****         {
1553:Dsp/letter_shell/shell.c ****             shellClearCommandLine(shell);
1554:Dsp/letter_shell/shell.c ****             for (short i = shell->parser.length; i >= 0; i--)
1555:Dsp/letter_shell/shell.c ****             {
1556:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[i + 5] = shell->parser.buffer[i];
1557:Dsp/letter_shell/shell.c ****             }
1558:Dsp/letter_shell/shell.c ****             shellStringCopy(shell->parser.buffer, "help");
1559:Dsp/letter_shell/shell.c ****             shell->parser.buffer[4] = ' ';
1560:Dsp/letter_shell/shell.c ****             shell->parser.length += 5;
1561:Dsp/letter_shell/shell.c ****             shell->parser.cursor = shell->parser.length;
1562:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shell->parser.buffer);
1563:Dsp/letter_shell/shell.c ****         }
1564:Dsp/letter_shell/shell.c ****         else
1565:Dsp/letter_shell/shell.c ****         {
1566:Dsp/letter_shell/shell.c ****             shell->status.tabFlag = 1;
1567:Dsp/letter_shell/shell.c ****         }
1568:Dsp/letter_shell/shell.c ****     }
1569:Dsp/letter_shell/shell.c **** }
1570:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x09000000, shellTab, tab);
1571:Dsp/letter_shell/shell.c **** 
1572:Dsp/letter_shell/shell.c **** 
1573:Dsp/letter_shell/shell.c **** /**
1574:Dsp/letter_shell/shell.c ****  * @brief shell 退格
1575:Dsp/letter_shell/shell.c ****  * 
1576:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1577:Dsp/letter_shell/shell.c ****  */
1578:Dsp/letter_shell/shell.c **** void shellBackspace(Shell *shell)
1579:Dsp/letter_shell/shell.c **** {
1580:Dsp/letter_shell/shell.c ****     shellDeleteByte(shell, 1);
1581:Dsp/letter_shell/shell.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 47


1582:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1583:Dsp/letter_shell/shell.c **** 0x08000000, shellBackspace, backspace);
1584:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1585:Dsp/letter_shell/shell.c **** 0x7F000000, shellBackspace, backspace);
1586:Dsp/letter_shell/shell.c **** 
1587:Dsp/letter_shell/shell.c **** 
1588:Dsp/letter_shell/shell.c **** /**
1589:Dsp/letter_shell/shell.c ****  * @brief shell 删除
1590:Dsp/letter_shell/shell.c ****  * 
1591:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1592:Dsp/letter_shell/shell.c ****  */
1593:Dsp/letter_shell/shell.c **** void shellDelete(Shell *shell)
1594:Dsp/letter_shell/shell.c **** {
1595:Dsp/letter_shell/shell.c ****     shellDeleteByte(shell, -1);
1596:Dsp/letter_shell/shell.c **** }
1597:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1598:Dsp/letter_shell/shell.c **** 0x1B5B337E, shellDelete, delete);
1599:Dsp/letter_shell/shell.c **** 
1600:Dsp/letter_shell/shell.c **** 
1601:Dsp/letter_shell/shell.c **** /**
1602:Dsp/letter_shell/shell.c ****  * @brief shell 回车处理
1603:Dsp/letter_shell/shell.c ****  * 
1604:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1605:Dsp/letter_shell/shell.c ****  */
1606:Dsp/letter_shell/shell.c **** void shellEnter(Shell *shell)
1607:Dsp/letter_shell/shell.c **** {
1608:Dsp/letter_shell/shell.c ****     shellExec(shell);
1609:Dsp/letter_shell/shell.c ****     shellWriteCommandLine(shell, 1);
1610:Dsp/letter_shell/shell.c **** }
1611:Dsp/letter_shell/shell.c **** #if SHELL_ENTER_LF == 1
1612:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1613:Dsp/letter_shell/shell.c **** 0x0A000000, shellEnter, enter);
1614:Dsp/letter_shell/shell.c **** #endif
1615:Dsp/letter_shell/shell.c **** #if SHELL_ENTER_CR == 1
1616:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1617:Dsp/letter_shell/shell.c **** 0x0D000000, shellEnter, enter);
1618:Dsp/letter_shell/shell.c **** #endif
1619:Dsp/letter_shell/shell.c **** #if SHELL_ENTER_CRLF == 1
1620:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1621:Dsp/letter_shell/shell.c **** 0x0D0A0000, shellEnter, enter);
1622:Dsp/letter_shell/shell.c **** #endif
1623:Dsp/letter_shell/shell.c **** 
1624:Dsp/letter_shell/shell.c **** 
1625:Dsp/letter_shell/shell.c **** /**
1626:Dsp/letter_shell/shell.c ****  * @brief shell help
1627:Dsp/letter_shell/shell.c ****  * 
1628:Dsp/letter_shell/shell.c ****  * @param argc 参数个数
1629:Dsp/letter_shell/shell.c ****  * @param argv 参数
1630:Dsp/letter_shell/shell.c ****  */
1631:Dsp/letter_shell/shell.c **** void shellHelp(int argc, char *argv[])
1632:Dsp/letter_shell/shell.c **** {
1633:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1634:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell, return);
1635:Dsp/letter_shell/shell.c ****     if (argc == 1)
1636:Dsp/letter_shell/shell.c ****     {
1637:Dsp/letter_shell/shell.c ****         shellListAll(shell);
1638:Dsp/letter_shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 48


1639:Dsp/letter_shell/shell.c ****     else if (argc > 1)
1640:Dsp/letter_shell/shell.c ****     {
1641:Dsp/letter_shell/shell.c ****         ShellCommand *command = shellSeekCommand(shell,
1642:Dsp/letter_shell/shell.c ****                                                  argv[1],
1643:Dsp/letter_shell/shell.c ****                                                  shell->commandList.base,
1644:Dsp/letter_shell/shell.c ****                                                  0);
1645:Dsp/letter_shell/shell.c ****         if (command)
1646:Dsp/letter_shell/shell.c ****         {
1647:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_HELP_HEADER]);
1648:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellGetCommandName(command));
1649:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
1650:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellGetCommandDesc(command));
1651:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
1652:Dsp/letter_shell/shell.c ****         }
1653:Dsp/letter_shell/shell.c ****         else
1654:Dsp/letter_shell/shell.c ****         {
1655:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_CMD_NOT_FOUND]);
1656:Dsp/letter_shell/shell.c ****         }
1657:Dsp/letter_shell/shell.c ****     }
1658:Dsp/letter_shell/shell.c **** }
1659:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1660:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_MAIN)|SHELL_CMD_DISABLE_RETURN,
1661:Dsp/letter_shell/shell.c **** help, shellHelp, show command info\r\nhelp [cmd]);
1662:Dsp/letter_shell/shell.c **** 
1663:Dsp/letter_shell/shell.c **** /**
1664:Dsp/letter_shell/shell.c ****  * @brief shell 输入处理
1665:Dsp/letter_shell/shell.c ****  * 
1666:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1667:Dsp/letter_shell/shell.c ****  * @param data 输入数据
1668:Dsp/letter_shell/shell.c ****  */
1669:Dsp/letter_shell/shell.c **** void shellHandler(Shell *shell, char data)
1670:Dsp/letter_shell/shell.c **** {
1671:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(data, return);
1672:Dsp/letter_shell/shell.c **** 
1673:Dsp/letter_shell/shell.c **** #if SHELL_LOCK_TIMEOUT > 0
1674:Dsp/letter_shell/shell.c ****     if (shell->info.user->data.user.password
1675:Dsp/letter_shell/shell.c ****         && strlen(shell->info.user->data.user.password) != 0
1676:Dsp/letter_shell/shell.c ****         && SHELL_GET_TICK())
1677:Dsp/letter_shell/shell.c ****     {
1678:Dsp/letter_shell/shell.c ****         if (SHELL_GET_TICK() - shell->info.activeTime > SHELL_LOCK_TIMEOUT)
1679:Dsp/letter_shell/shell.c ****         {
1680:Dsp/letter_shell/shell.c ****             shell->status.isChecked = 0;
1681:Dsp/letter_shell/shell.c ****         }
1682:Dsp/letter_shell/shell.c ****     }
1683:Dsp/letter_shell/shell.c **** #endif
1684:Dsp/letter_shell/shell.c **** 
1685:Dsp/letter_shell/shell.c ****     /* 根据记录的按键键值计算当前字节在按键键值中的偏移 */
1686:Dsp/letter_shell/shell.c ****     char keyByteOffset = 24;
1687:Dsp/letter_shell/shell.c ****     int keyFilter = 0x00000000;
1688:Dsp/letter_shell/shell.c ****     if ((shell->parser.keyValue & 0x0000FF00) != 0x00000000)
1689:Dsp/letter_shell/shell.c ****     {
1690:Dsp/letter_shell/shell.c ****         keyByteOffset = 0;
1691:Dsp/letter_shell/shell.c ****         keyFilter = 0xFFFFFF00;
1692:Dsp/letter_shell/shell.c ****     }
1693:Dsp/letter_shell/shell.c ****     else if ((shell->parser.keyValue & 0x00FF0000) != 0x00000000)
1694:Dsp/letter_shell/shell.c ****     {
1695:Dsp/letter_shell/shell.c ****         keyByteOffset = 8;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 49


1696:Dsp/letter_shell/shell.c ****         keyFilter = 0xFFFF0000;
1697:Dsp/letter_shell/shell.c ****     }
1698:Dsp/letter_shell/shell.c ****     else if ((shell->parser.keyValue & 0xFF000000) != 0x00000000)
1699:Dsp/letter_shell/shell.c ****     {
1700:Dsp/letter_shell/shell.c ****         keyByteOffset = 16;
1701:Dsp/letter_shell/shell.c ****         keyFilter = 0xFF000000;
1702:Dsp/letter_shell/shell.c ****     }
1703:Dsp/letter_shell/shell.c **** 
1704:Dsp/letter_shell/shell.c ****     /* 遍历ShellCommand列表，尝试进行按键键值匹配 */
1705:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
1706:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
1707:Dsp/letter_shell/shell.c ****     {
1708:Dsp/letter_shell/shell.c ****         /* 判断是否是按键定义并验证权限 */
1709:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type == SHELL_TYPE_KEY
1710:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &(base[i])) == 0)
1711:Dsp/letter_shell/shell.c ****         {
1712:Dsp/letter_shell/shell.c ****             /* 对输入的字节同按键键值进行匹配 */
1713:Dsp/letter_shell/shell.c ****             if ((base[i].data.key.value & keyFilter) == shell->parser.keyValue
1714:Dsp/letter_shell/shell.c ****                 && (base[i].data.key.value & (0xFF << keyByteOffset))
1715:Dsp/letter_shell/shell.c ****                     == (data << keyByteOffset))
1716:Dsp/letter_shell/shell.c ****             {
1717:Dsp/letter_shell/shell.c ****                 shell->parser.keyValue |= data << keyByteOffset;
1718:Dsp/letter_shell/shell.c ****                 data = 0x00;
1719:Dsp/letter_shell/shell.c ****                 if (keyByteOffset == 0 
1720:Dsp/letter_shell/shell.c ****                     || (base[i].data.key.value & (0xFF << (keyByteOffset - 8)))
1721:Dsp/letter_shell/shell.c ****                         == 0x00000000)
1722:Dsp/letter_shell/shell.c ****                 {
1723:Dsp/letter_shell/shell.c ****                     if (base[i].data.key.function)
1724:Dsp/letter_shell/shell.c ****                     {
1725:Dsp/letter_shell/shell.c ****                         base[i].data.key.function(shell);
1726:Dsp/letter_shell/shell.c ****                     }
1727:Dsp/letter_shell/shell.c ****                     shell->parser.keyValue = 0x00000000;
1728:Dsp/letter_shell/shell.c ****                     break;
1729:Dsp/letter_shell/shell.c ****                 }
1730:Dsp/letter_shell/shell.c ****             }
1731:Dsp/letter_shell/shell.c ****         }
1732:Dsp/letter_shell/shell.c ****     }
1733:Dsp/letter_shell/shell.c **** 
1734:Dsp/letter_shell/shell.c ****     if (data != 0x00)
1735:Dsp/letter_shell/shell.c ****     {
1736:Dsp/letter_shell/shell.c ****         shell->parser.keyValue = 0x00000000;
1737:Dsp/letter_shell/shell.c ****         shellNormalInput(shell, data);
1738:Dsp/letter_shell/shell.c ****     }
1739:Dsp/letter_shell/shell.c **** 
1740:Dsp/letter_shell/shell.c ****     if (SHELL_GET_TICK())
1741:Dsp/letter_shell/shell.c ****     {
1742:Dsp/letter_shell/shell.c ****         shell->info.activeTime = SHELL_GET_TICK();
1743:Dsp/letter_shell/shell.c ****     }
1744:Dsp/letter_shell/shell.c **** }
1745:Dsp/letter_shell/shell.c **** 
1746:Dsp/letter_shell/shell.c **** 
1747:Dsp/letter_shell/shell.c **** #if SHELL_SUPPORT_END_LINE == 1
1748:Dsp/letter_shell/shell.c **** void shellWriteEndLine(Shell *shell, char *buffer, int len)
1749:Dsp/letter_shell/shell.c **** {
1750:Dsp/letter_shell/shell.c ****     if (!shell->status.isActive)
1751:Dsp/letter_shell/shell.c ****     {
1752:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_LINE]);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 50


1753:Dsp/letter_shell/shell.c ****     }
1754:Dsp/letter_shell/shell.c ****     while (len --)
1755:Dsp/letter_shell/shell.c ****     {
1756:Dsp/letter_shell/shell.c ****         shell->write(*buffer++);
1757:Dsp/letter_shell/shell.c ****     }
1758:Dsp/letter_shell/shell.c ****     if (!shell->status.isActive)
1759:Dsp/letter_shell/shell.c ****     {
1760:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 0);
1761:Dsp/letter_shell/shell.c ****         if (shell->parser.length > 0)
1762:Dsp/letter_shell/shell.c ****         {
1763:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shell->parser.buffer);
1764:Dsp/letter_shell/shell.c ****             for (short i = 0; i < shell->parser.length - shell->parser.cursor; i++)
1765:Dsp/letter_shell/shell.c ****             {
1766:Dsp/letter_shell/shell.c ****                 shell->write('\b');
1767:Dsp/letter_shell/shell.c ****             }
1768:Dsp/letter_shell/shell.c ****         }
1769:Dsp/letter_shell/shell.c ****     }
1770:Dsp/letter_shell/shell.c **** }
1771:Dsp/letter_shell/shell.c **** #endif /** SHELL_SUPPORT_END_LINE == 1 */
1772:Dsp/letter_shell/shell.c **** 
1773:Dsp/letter_shell/shell.c **** 
1774:Dsp/letter_shell/shell.c **** /**
1775:Dsp/letter_shell/shell.c ****  * @brief shell 任务
1776:Dsp/letter_shell/shell.c ****  * 
1777:Dsp/letter_shell/shell.c ****  * @param param 参数(shell对象)
1778:Dsp/letter_shell/shell.c ****  * 
1779:Dsp/letter_shell/shell.c ****  */
1780:Dsp/letter_shell/shell.c **** void shellTask(void *param)
1781:Dsp/letter_shell/shell.c **** {
1782:Dsp/letter_shell/shell.c ****     Shell *shell = (Shell *)param;
1783:Dsp/letter_shell/shell.c ****     char data;
1784:Dsp/letter_shell/shell.c **** #if SHELL_TASK_WHILE == 1
1785:Dsp/letter_shell/shell.c ****     while(1)
1786:Dsp/letter_shell/shell.c ****     {
1787:Dsp/letter_shell/shell.c **** #endif
1788:Dsp/letter_shell/shell.c ****         if (shell->read && shell->read(&data) == 0)
1789:Dsp/letter_shell/shell.c ****         {
1790:Dsp/letter_shell/shell.c ****             shellHandler(shell, data);
1791:Dsp/letter_shell/shell.c ****         }
1792:Dsp/letter_shell/shell.c **** #if SHELL_TASK_WHILE == 1
1793:Dsp/letter_shell/shell.c ****     }
1794:Dsp/letter_shell/shell.c **** #endif
1795:Dsp/letter_shell/shell.c **** }
1796:Dsp/letter_shell/shell.c **** 
1797:Dsp/letter_shell/shell.c **** 
1798:Dsp/letter_shell/shell.c **** /**
1799:Dsp/letter_shell/shell.c ****  * @brief shell 输出用户列表(shell调用)
1800:Dsp/letter_shell/shell.c ****  */
1801:Dsp/letter_shell/shell.c **** void shellUsers(void)
1802:Dsp/letter_shell/shell.c **** {
1803:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1804:Dsp/letter_shell/shell.c ****     if (shell)
1805:Dsp/letter_shell/shell.c ****     {
1806:Dsp/letter_shell/shell.c ****         shellListUser(shell);
1807:Dsp/letter_shell/shell.c ****     }
1808:Dsp/letter_shell/shell.c **** }
1809:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 51


1810:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1811:Dsp/letter_shell/shell.c **** users, shellUsers, list all user);
1812:Dsp/letter_shell/shell.c **** 
1813:Dsp/letter_shell/shell.c **** 
1814:Dsp/letter_shell/shell.c **** /**
1815:Dsp/letter_shell/shell.c ****  * @brief shell 输出命令列表(shell调用)
1816:Dsp/letter_shell/shell.c ****  */
1817:Dsp/letter_shell/shell.c **** void shellCmds(void)
1818:Dsp/letter_shell/shell.c **** {
1819:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1820:Dsp/letter_shell/shell.c ****     if (shell)
1821:Dsp/letter_shell/shell.c ****     {
1822:Dsp/letter_shell/shell.c ****         shellListCommand(shell);
1823:Dsp/letter_shell/shell.c ****     }
1824:Dsp/letter_shell/shell.c **** }
1825:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1826:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1827:Dsp/letter_shell/shell.c **** cmds, shellCmds, list all cmd);
1828:Dsp/letter_shell/shell.c **** 
1829:Dsp/letter_shell/shell.c **** 
1830:Dsp/letter_shell/shell.c **** /**
1831:Dsp/letter_shell/shell.c ****  * @brief shell 输出变量列表(shell调用)
1832:Dsp/letter_shell/shell.c ****  */
1833:Dsp/letter_shell/shell.c **** void shellVars(void)
1834:Dsp/letter_shell/shell.c **** {
1835:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1836:Dsp/letter_shell/shell.c ****     if (shell)
1837:Dsp/letter_shell/shell.c ****     {
1838:Dsp/letter_shell/shell.c ****         shellListVar(shell);
1839:Dsp/letter_shell/shell.c ****     }
1840:Dsp/letter_shell/shell.c **** }
1841:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1842:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1843:Dsp/letter_shell/shell.c **** vars, shellVars, list all var);
1844:Dsp/letter_shell/shell.c **** 
1845:Dsp/letter_shell/shell.c **** 
1846:Dsp/letter_shell/shell.c **** /**
1847:Dsp/letter_shell/shell.c ****  * @brief shell 输出按键列表(shell调用)
1848:Dsp/letter_shell/shell.c ****  */
1849:Dsp/letter_shell/shell.c **** void shellKeys(void)
1850:Dsp/letter_shell/shell.c **** {
1851:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1852:Dsp/letter_shell/shell.c ****     if (shell)
1853:Dsp/letter_shell/shell.c ****     {
1854:Dsp/letter_shell/shell.c ****         shellListKey(shell);
1855:Dsp/letter_shell/shell.c ****     }
1856:Dsp/letter_shell/shell.c **** }
1857:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1858:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1859:Dsp/letter_shell/shell.c **** keys, shellKeys, list all key);
1860:Dsp/letter_shell/shell.c **** 
1861:Dsp/letter_shell/shell.c **** 
1862:Dsp/letter_shell/shell.c **** /**
1863:Dsp/letter_shell/shell.c ****  * @brief shell 清空控制台(shell调用)
1864:Dsp/letter_shell/shell.c ****  */
1865:Dsp/letter_shell/shell.c **** void shellClear(void)
1866:Dsp/letter_shell/shell.c **** {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 52


 998              		.loc 1 1866 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002 0000 08B5     		push	{r3, lr}
 1003              	.LCFI17:
 1004              		.cfi_def_cfa_offset 8
 1005              		.cfi_offset 3, -8
 1006              		.cfi_offset 14, -4
1867:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 1007              		.loc 1 1867 0
 1008 0002 FFF7FEFF 		bl	shellGetCurrent
 1009              	.LVL107:
1868:Dsp/letter_shell/shell.c ****     if (shell)
 1010              		.loc 1 1868 0
 1011 0006 10B1     		cbz	r0, .L96
1869:Dsp/letter_shell/shell.c ****     {
1870:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_CONSOLE]);
 1012              		.loc 1 1870 0
 1013 0008 0149     		ldr	r1, .L99
 1014 000a FFF7FEFF 		bl	shellWriteString
 1015              	.LVL108:
 1016              	.L96:
 1017 000e 08BD     		pop	{r3, pc}
 1018              	.L100:
 1019              		.align	2
 1020              	.L99:
 1021 0010 00000000 		.word	.LC0
 1022              		.cfi_endproc
 1023              	.LFE180:
 1025              		.section	.text.shellPrint,"ax",%progbits
 1026              		.align	2
 1027              		.global	shellPrint
 1028              		.thumb
 1029              		.thumb_func
 1031              	shellPrint:
 1032              	.LFB131:
 361:Dsp/letter_shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 1033              		.loc 1 361 0
 1034              		.cfi_startproc
 1035              		@ args = 4, pretend = 12, frame = 136
 1036              		@ frame_needed = 0, uses_anonymous_args = 1
 1037              	.LVL109:
 365:Dsp/letter_shell/shell.c **** 
 1038              		.loc 1 365 0
 1039 0000 90B1     		cbz	r0, .L106
 361:Dsp/letter_shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 1040              		.loc 1 361 0
 1041 0002 0EB4     		push	{r1, r2, r3}
 1042              	.LCFI18:
 1043              		.cfi_def_cfa_offset 12
 1044              		.cfi_offset 1, -12
 1045              		.cfi_offset 2, -8
 1046              		.cfi_offset 3, -4
 1047 0004 10B5     		push	{r4, lr}
 1048              	.LCFI19:
 1049              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 53


 1050              		.cfi_offset 4, -20
 1051              		.cfi_offset 14, -16
 1052 0006 A3B0     		sub	sp, sp, #140
 1053              	.LCFI20:
 1054              		.cfi_def_cfa_offset 160
 1055 0008 0446     		mov	r4, r0
 367:Dsp/letter_shell/shell.c ****     vsnprintf(buffer, SHELL_PRINT_BUFFER - 1, fmt, vargs);
 1056              		.loc 1 367 0
 1057 000a 26AB     		add	r3, sp, #152
 1058 000c 0193     		str	r3, [sp, #4]
 368:Dsp/letter_shell/shell.c ****     va_end(vargs);
 1059              		.loc 1 368 0
 1060 000e 259A     		ldr	r2, [sp, #148]
 1061 0010 7F21     		movs	r1, #127
 1062 0012 02A8     		add	r0, sp, #8
 1063              	.LVL110:
 1064 0014 FFF7FEFF 		bl	vsnprintf
 1065              	.LVL111:
 371:Dsp/letter_shell/shell.c **** }
 1066              		.loc 1 371 0
 1067 0018 02A9     		add	r1, sp, #8
 1068 001a 2046     		mov	r0, r4
 1069 001c FFF7FEFF 		bl	shellWriteString
 1070              	.LVL112:
 372:Dsp/letter_shell/shell.c **** #endif
 1071              		.loc 1 372 0
 1072 0020 23B0     		add	sp, sp, #140
 1073              	.LCFI21:
 1074              		.cfi_def_cfa_offset 20
 1075              		@ sp needed
 1076 0022 BDE81040 		pop	{r4, lr}
 1077              	.LCFI22:
 1078              		.cfi_restore 14
 1079              		.cfi_restore 4
 1080              		.cfi_def_cfa_offset 12
 1081              	.LVL113:
 1082 0026 03B0     		add	sp, sp, #12
 1083              	.LCFI23:
 1084              		.cfi_restore 3
 1085              		.cfi_restore 2
 1086              		.cfi_restore 1
 1087              		.cfi_def_cfa_offset 0
 1088              	.L106:
 1089 0028 7047     		bx	lr
 1090              		.cfi_endproc
 1091              	.LFE131:
 1093 002a 00BF     		.section	.text.shellScan,"ax",%progbits
 1094              		.align	2
 1095              		.global	shellScan
 1096              		.thumb
 1097              		.thumb_func
 1099              	shellScan:
 1100              	.LFB132:
 385:Dsp/letter_shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 1101              		.loc 1 385 0
 1102              		.cfi_startproc
 1103              		@ args = 4, pretend = 12, frame = 8
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 54


 1104              		@ frame_needed = 0, uses_anonymous_args = 1
 1105              	.LVL114:
 390:Dsp/letter_shell/shell.c **** 
 1106              		.loc 1 390 0
 1107 0000 0028     		cmp	r0, #0
 1108 0002 32D0     		beq	.L116
 385:Dsp/letter_shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 1109              		.loc 1 385 0
 1110 0004 0EB4     		push	{r1, r2, r3}
 1111              	.LCFI24:
 1112              		.cfi_def_cfa_offset 12
 1113              		.cfi_offset 1, -12
 1114              		.cfi_offset 2, -8
 1115              		.cfi_offset 3, -4
 1116 0006 70B5     		push	{r4, r5, r6, lr}
 1117              	.LCFI25:
 1118              		.cfi_def_cfa_offset 28
 1119              		.cfi_offset 4, -28
 1120              		.cfi_offset 5, -24
 1121              		.cfi_offset 6, -20
 1122              		.cfi_offset 14, -16
 1123 0008 83B0     		sub	sp, sp, #12
 1124              	.LCFI26:
 1125              		.cfi_def_cfa_offset 40
 1126 000a 0646     		mov	r6, r0
 392:Dsp/letter_shell/shell.c ****     {
 1127              		.loc 1 392 0
 1128 000c 436E     		ldr	r3, [r0, #100]
 1129 000e 13B3     		cbz	r3, .L109
 1130 0010 0024     		movs	r4, #0
 1131              	.LVL115:
 1132              	.L112:
 395:Dsp/letter_shell/shell.c ****             {
 1133              		.loc 1 395 0
 1134 0012 736E     		ldr	r3, [r6, #100]
 1135 0014 01AA     		add	r2, sp, #4
 1136 0016 1019     		adds	r0, r2, r4
 1137 0018 9847     		blx	r3
 1138              	.LVL116:
 1139 001a 38B9     		cbnz	r0, .L110
 397:Dsp/letter_shell/shell.c ****                 index++;
 1140              		.loc 1 397 0
 1141 001c B36E     		ldr	r3, [r6, #104]
 1142 001e 02AA     		add	r2, sp, #8
 1143 0020 2244     		add	r2, r2, r4
 1144 0022 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 1145 0026 9847     		blx	r3
 1146              	.LVL117:
 398:Dsp/letter_shell/shell.c ****             }
 1147              		.loc 1 398 0
 1148 0028 0134     		adds	r4, r4, #1
 1149              	.LVL118:
 1150 002a 24B2     		sxth	r4, r4
 1151              	.LVL119:
 1152              	.L110:
 400:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 1153              		.loc 1 400 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 55


 1154 002c 2546     		mov	r5, r4
 1155 002e 631E     		subs	r3, r4, #1
 1156 0030 02AA     		add	r2, sp, #8
 1157 0032 1344     		add	r3, r3, r2
 1158 0034 13F8043C 		ldrb	r3, [r3, #-4]	@ zero_extendqisi2
 1159 0038 0D2B     		cmp	r3, #13
 1160 003a 03D0     		beq	.L111
 400:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 1161              		.loc 1 400 0 is_stmt 0 discriminator 1
 1162 003c 0A2B     		cmp	r3, #10
 1163 003e 01D0     		beq	.L111
 400:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 1164              		.loc 1 400 0 discriminator 2
 1165 0040 002C     		cmp	r4, #0
 1166 0042 E6DD     		ble	.L112
 1167              	.L111:
 401:Dsp/letter_shell/shell.c ****         buffer[index] = '\0';
 1168              		.loc 1 401 0 is_stmt 1
 1169 0044 0949     		ldr	r1, .L117
 1170 0046 3046     		mov	r0, r6
 1171 0048 FFF7FEFF 		bl	shellWriteString
 1172              	.LVL120:
 402:Dsp/letter_shell/shell.c ****     }
 1173              		.loc 1 402 0
 1174 004c 02AB     		add	r3, sp, #8
 1175 004e 1D44     		add	r5, r5, r3
 1176 0050 0023     		movs	r3, #0
 1177 0052 05F8043C 		strb	r3, [r5, #-4]
 1178              	.LVL121:
 1179              	.L109:
 405:Dsp/letter_shell/shell.c ****     vsscanf(buffer, fmt, vargs);
 1180              		.loc 1 405 0
 1181 0056 08AA     		add	r2, sp, #32
 1182 0058 0092     		str	r2, [sp]
 406:Dsp/letter_shell/shell.c ****     va_end(vargs);
 1183              		.loc 1 406 0
 1184 005a 0799     		ldr	r1, [sp, #28]
 1185 005c 01A8     		add	r0, sp, #4
 1186 005e FFF7FEFF 		bl	vsscanf
 1187              	.LVL122:
 408:Dsp/letter_shell/shell.c **** #endif
 1188              		.loc 1 408 0
 1189 0062 03B0     		add	sp, sp, #12
 1190              	.LCFI27:
 1191              		.cfi_def_cfa_offset 28
 1192              		@ sp needed
 1193 0064 BDE87040 		pop	{r4, r5, r6, lr}
 1194              	.LCFI28:
 1195              		.cfi_restore 14
 1196              		.cfi_restore 6
 1197              		.cfi_restore 5
 1198              		.cfi_restore 4
 1199              		.cfi_def_cfa_offset 12
 1200              	.LVL123:
 1201 0068 03B0     		add	sp, sp, #12
 1202              	.LCFI29:
 1203              		.cfi_restore 3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 56


 1204              		.cfi_restore 2
 1205              		.cfi_restore 1
 1206              		.cfi_def_cfa_offset 0
 1207              	.L116:
 1208 006a 7047     		bx	lr
 1209              	.L118:
 1210              		.align	2
 1211              	.L117:
 1212 006c A0010000 		.word	.LC3
 1213              		.cfi_endproc
 1214              	.LFE132:
 1216              		.section	.text.shellCheckPermission,"ax",%progbits
 1217              		.align	2
 1218              		.global	shellCheckPermission
 1219              		.thumb
 1220              		.thumb_func
 1222              	shellCheckPermission:
 1223              	.LFB133:
 422:Dsp/letter_shell/shell.c ****     return ((!command->attr.attrs.permission
 1224              		.loc 1 422 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228              		@ link register save eliminated.
 1229              	.LVL124:
 423:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.type == SHELL_TYPE_USER
 1230              		.loc 1 423 0
 1231 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1232 0002 43B1     		cbz	r3, .L120
 424:Dsp/letter_shell/shell.c ****                 || (command->attr.attrs.permission 
 1233              		.loc 1 424 0
 1234 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1235 0006 02F00F02 		and	r2, r2, #15
 1236 000a 082A     		cmp	r2, #8
 1237 000c 03D0     		beq	.L120
 426:Dsp/letter_shell/shell.c ****             && (shell->status.isChecked
 1238              		.loc 1 426 0
 1239 000e 0268     		ldr	r2, [r0]
 1240 0010 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 425:Dsp/letter_shell/shell.c ****                     & shell->info.user->attr.attrs.permission))
 1241              		.loc 1 425 0
 1242 0012 1342     		tst	r3, r2
 1243 0014 0BD0     		beq	.L122
 1244              	.L120:
 427:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.enableUnchecked))
 1245              		.loc 1 427 0
 1246 0016 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 1247 001a 13F0010F 		tst	r3, #1
 1248 001e 09D1     		bne	.L123
 428:Dsp/letter_shell/shell.c ****             ? 0 : -1;
 1249              		.loc 1 428 0
 1250 0020 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1251 0022 13F0100F 		tst	r3, #16
 1252 0026 07D1     		bne	.L124
 423:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.type == SHELL_TYPE_USER
 1253              		.loc 1 423 0
 1254 0028 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 57


 1255              	.LVL125:
 1256 002c 7047     		bx	lr
 1257              	.LVL126:
 1258              	.L122:
 1259 002e 4FF0FF30 		mov	r0, #-1
 1260              	.LVL127:
 1261 0032 7047     		bx	lr
 1262              	.LVL128:
 1263              	.L123:
 1264 0034 0020     		movs	r0, #0
 1265              	.LVL129:
 1266 0036 7047     		bx	lr
 1267              	.LVL130:
 1268              	.L124:
 1269 0038 0020     		movs	r0, #0
 1270              	.LVL131:
 430:Dsp/letter_shell/shell.c **** 
 1271              		.loc 1 430 0
 1272 003a 7047     		bx	lr
 1273              		.cfi_endproc
 1274              	.LFE133:
 1276              		.section	.text.shellToHex,"ax",%progbits
 1277              		.align	2
 1278              		.global	shellToHex
 1279              		.thumb
 1280              		.thumb_func
 1282              	shellToHex:
 1283              	.LFB134:
 442:Dsp/letter_shell/shell.c ****     char byte;
 1284              		.loc 1 442 0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288              		@ link register save eliminated.
 1289              	.LVL132:
 1290 0000 10B4     		push	{r4}
 1291              	.LCFI30:
 1292              		.cfi_def_cfa_offset 4
 1293              		.cfi_offset 4, -4
 1294              	.LVL133:
 445:Dsp/letter_shell/shell.c ****     while (value)
 1295              		.loc 1 445 0
 1296 0002 0023     		movs	r3, #0
 1297 0004 0B72     		strb	r3, [r1, #8]
 444:Dsp/letter_shell/shell.c ****     buffer[8] = 0;
 1298              		.loc 1 444 0
 1299 0006 0823     		movs	r3, #8
 446:Dsp/letter_shell/shell.c ****     {
 1300              		.loc 1 446 0
 1301 0008 0BE0     		b	.L126
 1302              	.LVL134:
 1303              	.L129:
 448:Dsp/letter_shell/shell.c ****         buffer[--i] = (byte > 9) ? (byte + 87) : (byte + 48);
 1304              		.loc 1 448 0
 1305 000a 00F00F02 		and	r2, r0, #15
 1306              	.LVL135:
 449:Dsp/letter_shell/shell.c ****         value >>= 4;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 58


 1307              		.loc 1 449 0
 1308 000e 013B     		subs	r3, r3, #1
 1309              	.LVL136:
 1310 0010 DBB2     		uxtb	r3, r3
 1311              	.LVL137:
 1312 0012 CC18     		adds	r4, r1, r3
 1313 0014 092A     		cmp	r2, #9
 1314 0016 01D9     		bls	.L127
 449:Dsp/letter_shell/shell.c ****         value >>= 4;
 1315              		.loc 1 449 0 is_stmt 0 discriminator 1
 1316 0018 5732     		adds	r2, r2, #87
 1317              	.LVL138:
 1318 001a 00E0     		b	.L128
 1319              	.LVL139:
 1320              	.L127:
 449:Dsp/letter_shell/shell.c ****         value >>= 4;
 1321              		.loc 1 449 0 discriminator 2
 1322 001c 3032     		adds	r2, r2, #48
 1323              	.LVL140:
 1324              	.L128:
 449:Dsp/letter_shell/shell.c ****         value >>= 4;
 1325              		.loc 1 449 0 discriminator 4
 1326 001e 2270     		strb	r2, [r4]
 450:Dsp/letter_shell/shell.c ****     }
 1327              		.loc 1 450 0 is_stmt 1 discriminator 4
 1328 0020 0009     		lsrs	r0, r0, #4
 1329              	.LVL141:
 1330              	.L126:
 446:Dsp/letter_shell/shell.c ****     {
 1331              		.loc 1 446 0
 1332 0022 0028     		cmp	r0, #0
 1333 0024 F1D1     		bne	.L129
 452:Dsp/letter_shell/shell.c **** }
 1334              		.loc 1 452 0
 1335 0026 C3F10800 		rsb	r0, r3, #8
 1336              	.LVL142:
 453:Dsp/letter_shell/shell.c **** 
 1337              		.loc 1 453 0
 1338 002a 40B2     		sxtb	r0, r0
 1339 002c 5DF8044B 		ldr	r4, [sp], #4
 1340              	.LCFI31:
 1341              		.cfi_restore 4
 1342              		.cfi_def_cfa_offset 0
 1343 0030 7047     		bx	lr
 1344              		.cfi_endproc
 1345              	.LFE134:
 1347 0032 00BF     		.section	.text.shellGetCommandName,"ax",%progbits
 1348              		.align	2
 1349              		.thumb
 1350              		.thumb_func
 1352              	shellGetCommandName:
 1353              	.LFB138:
 541:Dsp/letter_shell/shell.c ****     static char buffer[9];
 1354              		.loc 1 541 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 59


 1358              	.LVL143:
 1359              	.LBB8:
 543:Dsp/letter_shell/shell.c ****     {
 1360              		.loc 1 543 0
 1361 0000 0023     		movs	r3, #0
 1362 0002 04E0     		b	.L132
 1363              	.LVL144:
 1364              	.L133:
 545:Dsp/letter_shell/shell.c ****     }
 1365              		.loc 1 545 0 discriminator 3
 1366 0004 3021     		movs	r1, #48
 1367 0006 0E4A     		ldr	r2, .L140
 1368 0008 D154     		strb	r1, [r2, r3]
 543:Dsp/letter_shell/shell.c ****     {
 1369              		.loc 1 543 0 discriminator 3
 1370 000a 0133     		adds	r3, r3, #1
 1371              	.LVL145:
 1372 000c DBB2     		uxtb	r3, r3
 1373              	.LVL146:
 1374              	.L132:
 543:Dsp/letter_shell/shell.c ****     {
 1375              		.loc 1 543 0 is_stmt 0 discriminator 1
 1376 000e 082B     		cmp	r3, #8
 1377 0010 F8D9     		bls	.L133
 1378              	.LBE8:
 547:Dsp/letter_shell/shell.c ****     {
 1379              		.loc 1 547 0 is_stmt 1
 1380 0012 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1381              	.LVL147:
 1382 0014 03F00F03 		and	r3, r3, #15
 1383 0018 012B     		cmp	r3, #1
 1384 001a 01DC     		bgt	.L134
 549:Dsp/letter_shell/shell.c ****     }
 1385              		.loc 1 549 0
 1386 001c 4068     		ldr	r0, [r0, #4]
 1387              	.LVL148:
 564:Dsp/letter_shell/shell.c **** 
 1388              		.loc 1 564 0
 1389 001e 7047     		bx	lr
 1390              	.LVL149:
 1391              	.L134:
 551:Dsp/letter_shell/shell.c ****     {
 1392              		.loc 1 551 0
 1393 0020 072B     		cmp	r3, #7
 1394 0022 01DC     		bgt	.L136
 553:Dsp/letter_shell/shell.c ****     }
 1395              		.loc 1 553 0
 1396 0024 4068     		ldr	r0, [r0, #4]
 1397              	.LVL150:
 1398 0026 7047     		bx	lr
 1399              	.LVL151:
 1400              	.L136:
 555:Dsp/letter_shell/shell.c ****     {
 1401              		.loc 1 555 0
 1402 0028 082B     		cmp	r3, #8
 1403 002a 01DC     		bgt	.L137
 557:Dsp/letter_shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 60


 1404              		.loc 1 557 0
 1405 002c 4068     		ldr	r0, [r0, #4]
 1406              	.LVL152:
 1407 002e 7047     		bx	lr
 1408              	.LVL153:
 1409              	.L137:
 541:Dsp/letter_shell/shell.c ****     static char buffer[9];
 1410              		.loc 1 541 0
 1411 0030 10B5     		push	{r4, lr}
 1412              	.LCFI32:
 1413              		.cfi_def_cfa_offset 8
 1414              		.cfi_offset 4, -8
 1415              		.cfi_offset 14, -4
 561:Dsp/letter_shell/shell.c ****         return buffer;
 1416              		.loc 1 561 0
 1417 0032 034C     		ldr	r4, .L140
 1418 0034 2146     		mov	r1, r4
 1419 0036 4068     		ldr	r0, [r0, #4]
 1420              	.LVL154:
 1421 0038 FFF7FEFF 		bl	shellToHex
 1422              	.LVL155:
 562:Dsp/letter_shell/shell.c ****     }
 1423              		.loc 1 562 0
 1424 003c 2046     		mov	r0, r4
 564:Dsp/letter_shell/shell.c **** 
 1425              		.loc 1 564 0
 1426 003e 10BD     		pop	{r4, pc}
 1427              	.L141:
 1428              		.align	2
 1429              	.L140:
 1430 0040 00000000 		.word	.LANCHOR1
 1431              		.cfi_endproc
 1432              	.LFE138:
 1434              		.section	.text.shellToDec,"ax",%progbits
 1435              		.align	2
 1436              		.global	shellToDec
 1437              		.thumb
 1438              		.thumb_func
 1440              	shellToDec:
 1441              	.LFB135:
 465:Dsp/letter_shell/shell.c ****     unsigned char i = 11;
 1442              		.loc 1 465 0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 0
 1445              		@ frame_needed = 0, uses_anonymous_args = 0
 1446              		@ link register save eliminated.
 1447              	.LVL156:
 1448 0000 70B4     		push	{r4, r5, r6}
 1449              	.LCFI33:
 1450              		.cfi_def_cfa_offset 12
 1451              		.cfi_offset 4, -12
 1452              		.cfi_offset 5, -8
 1453              		.cfi_offset 6, -4
 1454              	.LVL157:
 468:Dsp/letter_shell/shell.c ****     {
 1455              		.loc 1 468 0
 1456 0002 0028     		cmp	r0, #0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 61


 1457 0004 01DA     		bge	.L148
 470:Dsp/letter_shell/shell.c ****     }
 1458              		.loc 1 470 0
 1459 0006 4442     		negs	r4, r0
 1460              	.LVL158:
 1461 0008 00E0     		b	.L143
 1462              	.LVL159:
 1463              	.L148:
 467:Dsp/letter_shell/shell.c ****     if (value < 0)
 1464              		.loc 1 467 0
 1465 000a 0446     		mov	r4, r0
 1466              	.LVL160:
 1467              	.L143:
 472:Dsp/letter_shell/shell.c ****     while (v)
 1468              		.loc 1 472 0
 1469 000c 0023     		movs	r3, #0
 1470 000e CB72     		strb	r3, [r1, #11]
 466:Dsp/letter_shell/shell.c ****     int v = value;
 1471              		.loc 1 466 0
 1472 0010 0B22     		movs	r2, #11
 473:Dsp/letter_shell/shell.c ****     {
 1473              		.loc 1 473 0
 1474 0012 0FE0     		b	.L144
 1475              	.LVL161:
 1476              	.L145:
 475:Dsp/letter_shell/shell.c ****         v /= 10;
 1477              		.loc 1 475 0
 1478 0014 013A     		subs	r2, r2, #1
 1479              	.LVL162:
 1480 0016 D2B2     		uxtb	r2, r2
 1481              	.LVL163:
 1482 0018 0F4B     		ldr	r3, .L150
 1483 001a 83FB0435 		smull	r3, r5, r3, r4
 1484 001e E317     		asrs	r3, r4, #31
 1485 0020 C3EBA503 		rsb	r3, r3, r5, asr #2
 1486 0024 1E46     		mov	r6, r3
 1487 0026 03EB8303 		add	r3, r3, r3, lsl #2
 1488 002a 5D00     		lsls	r5, r3, #1
 1489 002c 631B     		subs	r3, r4, r5
 1490 002e 3033     		adds	r3, r3, #48
 1491 0030 8B54     		strb	r3, [r1, r2]
 476:Dsp/letter_shell/shell.c ****     }
 1492              		.loc 1 476 0
 1493 0032 3446     		mov	r4, r6
 1494              	.LVL164:
 1495              	.L144:
 473:Dsp/letter_shell/shell.c ****     {
 1496              		.loc 1 473 0
 1497 0034 002C     		cmp	r4, #0
 1498 0036 EDD1     		bne	.L145
 478:Dsp/letter_shell/shell.c ****     {
 1499              		.loc 1 478 0
 1500 0038 0028     		cmp	r0, #0
 1501 003a 03DA     		bge	.L146
 480:Dsp/letter_shell/shell.c ****     }
 1502              		.loc 1 480 0
 1503 003c 013A     		subs	r2, r2, #1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 62


 1504              	.LVL165:
 1505 003e D2B2     		uxtb	r2, r2
 1506              	.LVL166:
 1507 0040 2D23     		movs	r3, #45
 1508 0042 8B54     		strb	r3, [r1, r2]
 1509              	.L146:
 482:Dsp/letter_shell/shell.c ****         buffer[--i] = '0';
 1510              		.loc 1 482 0
 1511 0044 18B9     		cbnz	r0, .L147
 483:Dsp/letter_shell/shell.c ****     }
 1512              		.loc 1 483 0
 1513 0046 013A     		subs	r2, r2, #1
 1514              	.LVL167:
 1515 0048 D2B2     		uxtb	r2, r2
 1516              	.LVL168:
 1517 004a 3023     		movs	r3, #48
 1518 004c 8B54     		strb	r3, [r1, r2]
 1519              	.L147:
 485:Dsp/letter_shell/shell.c **** }
 1520              		.loc 1 485 0
 1521 004e C2F10B00 		rsb	r0, r2, #11
 1522              	.LVL169:
 486:Dsp/letter_shell/shell.c **** 
 1523              		.loc 1 486 0
 1524 0052 40B2     		sxtb	r0, r0
 1525 0054 70BC     		pop	{r4, r5, r6}
 1526              	.LCFI34:
 1527              		.cfi_restore 6
 1528              		.cfi_restore 5
 1529              		.cfi_restore 4
 1530              		.cfi_def_cfa_offset 0
 1531              	.LVL170:
 1532 0056 7047     		bx	lr
 1533              	.L151:
 1534              		.align	2
 1535              	.L150:
 1536 0058 67666666 		.word	1717986919
 1537              		.cfi_endproc
 1538              	.LFE135:
 1540              		.section	.text.shellWriteReturnValue,"ax",%progbits
 1541              		.align	2
 1542              		.thumb
 1543              		.thumb_func
 1545              	shellWriteReturnValue:
 1546              	.LFB160:
1266:Dsp/letter_shell/shell.c ****     char buffer[12] = "00000000000";
 1547              		.loc 1 1266 0
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 16
 1550              		@ frame_needed = 0, uses_anonymous_args = 0
 1551              	.LVL171:
 1552 0000 70B5     		push	{r4, r5, r6, lr}
 1553              	.LCFI35:
 1554              		.cfi_def_cfa_offset 16
 1555              		.cfi_offset 4, -16
 1556              		.cfi_offset 5, -12
 1557              		.cfi_offset 6, -8
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 63


 1558              		.cfi_offset 14, -4
 1559 0002 84B0     		sub	sp, sp, #16
 1560              	.LCFI36:
 1561              		.cfi_def_cfa_offset 32
 1562 0004 0446     		mov	r4, r0
 1563 0006 0E46     		mov	r6, r1
1267:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "Return: ");
 1564              		.loc 1 1267 0
 1565 0008 184B     		ldr	r3, .L156
 1566 000a 01AD     		add	r5, sp, #4
 1567 000c 93E80700 		ldmia	r3, {r0, r1, r2}
 1568              	.LVL172:
 1569 0010 85E80700 		stmia	r5, {r0, r1, r2}
1268:Dsp/letter_shell/shell.c ****     shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
 1570              		.loc 1 1268 0
 1571 0014 1649     		ldr	r1, .L156+4
 1572 0016 2046     		mov	r0, r4
 1573 0018 FFF7FEFF 		bl	shellWriteString
 1574              	.LVL173:
1269:Dsp/letter_shell/shell.c ****     shellWriteString(shell, ", 0x");
 1575              		.loc 1 1269 0
 1576 001c 2946     		mov	r1, r5
 1577 001e 3046     		mov	r0, r6
 1578 0020 FFF7FEFF 		bl	shellToDec
 1579              	.LVL174:
 1580 0024 C0F10B01 		rsb	r1, r0, #11
 1581 0028 2944     		add	r1, r1, r5
 1582 002a 2046     		mov	r0, r4
 1583 002c FFF7FEFF 		bl	shellWriteString
 1584              	.LVL175:
1270:Dsp/letter_shell/shell.c ****     for (short i = 0; i < 11; i++)
 1585              		.loc 1 1270 0
 1586 0030 1049     		ldr	r1, .L156+8
 1587 0032 2046     		mov	r0, r4
 1588 0034 FFF7FEFF 		bl	shellWriteString
 1589              	.LVL176:
 1590              	.LBB9:
1271:Dsp/letter_shell/shell.c ****     {
 1591              		.loc 1 1271 0
 1592 0038 0023     		movs	r3, #0
 1593 003a 06E0     		b	.L153
 1594              	.LVL177:
 1595              	.L154:
1273:Dsp/letter_shell/shell.c ****     }
 1596              		.loc 1 1273 0 discriminator 3
 1597 003c 04AA     		add	r2, sp, #16
 1598 003e 1A44     		add	r2, r2, r3
 1599 0040 3021     		movs	r1, #48
 1600 0042 02F80C1C 		strb	r1, [r2, #-12]
1271:Dsp/letter_shell/shell.c ****     {
 1601              		.loc 1 1271 0 discriminator 3
 1602 0046 0133     		adds	r3, r3, #1
 1603              	.LVL178:
 1604 0048 1BB2     		sxth	r3, r3
 1605              	.LVL179:
 1606              	.L153:
1271:Dsp/letter_shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 64


 1607              		.loc 1 1271 0 is_stmt 0 discriminator 1
 1608 004a 0A2B     		cmp	r3, #10
 1609 004c F6DD     		ble	.L154
 1610              	.LBE9:
1275:Dsp/letter_shell/shell.c ****     shellWriteString(shell, buffer);
 1611              		.loc 1 1275 0 is_stmt 1
 1612 004e 01A9     		add	r1, sp, #4
 1613 0050 3046     		mov	r0, r6
 1614 0052 FFF7FEFF 		bl	shellToHex
 1615              	.LVL180:
1276:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "\r\n");
 1616              		.loc 1 1276 0
 1617 0056 01A9     		add	r1, sp, #4
 1618 0058 2046     		mov	r0, r4
 1619 005a FFF7FEFF 		bl	shellWriteString
 1620              	.LVL181:
1277:Dsp/letter_shell/shell.c **** }
 1621              		.loc 1 1277 0
 1622 005e 0649     		ldr	r1, .L156+12
 1623 0060 2046     		mov	r0, r4
 1624 0062 FFF7FEFF 		bl	shellWriteString
 1625              	.LVL182:
1278:Dsp/letter_shell/shell.c **** 
 1626              		.loc 1 1278 0
 1627 0066 04B0     		add	sp, sp, #16
 1628              	.LCFI37:
 1629              		.cfi_def_cfa_offset 16
 1630              		@ sp needed
 1631 0068 70BD     		pop	{r4, r5, r6, pc}
 1632              	.LVL183:
 1633              	.L157:
 1634 006a 00BF     		.align	2
 1635              	.L156:
 1636 006c F0010000 		.word	.LC8
 1637 0070 DC010000 		.word	.LC9
 1638 0074 E8010000 		.word	.LC10
 1639 0078 A0010000 		.word	.LC3
 1640              		.cfi_endproc
 1641              	.LFE160:
 1643              		.section	.text.shellListItem,"ax",%progbits
 1644              		.align	2
 1645              		.global	shellListItem
 1646              		.thumb
 1647              		.thumb_func
 1649              	shellListItem:
 1650              	.LFB140:
 600:Dsp/letter_shell/shell.c ****     short spaceLength;
 1651              		.loc 1 600 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 0
 1654              		@ frame_needed = 0, uses_anonymous_args = 0
 1655              	.LVL184:
 1656 0000 70B5     		push	{r4, r5, r6, lr}
 1657              	.LCFI38:
 1658              		.cfi_def_cfa_offset 16
 1659              		.cfi_offset 4, -16
 1660              		.cfi_offset 5, -12
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 65


 1661              		.cfi_offset 6, -8
 1662              		.cfi_offset 14, -4
 1663 0002 0546     		mov	r5, r0
 1664 0004 0E46     		mov	r6, r1
 603:Dsp/letter_shell/shell.c ****     spaceLength = (spaceLength > 0) ? spaceLength : 4;
 1665              		.loc 1 603 0
 1666 0006 0846     		mov	r0, r1
 1667              	.LVL185:
 1668 0008 FFF7FEFF 		bl	shellGetCommandName
 1669              	.LVL186:
 1670 000c 0146     		mov	r1, r0
 1671 000e 2846     		mov	r0, r5
 1672 0010 FFF7FEFF 		bl	shellWriteString
 1673              	.LVL187:
 1674 0014 C0F11600 		rsb	r0, r0, #22
 1675 0018 04B2     		sxth	r4, r0
 1676              	.LVL188:
 604:Dsp/letter_shell/shell.c ****     do {
 1677              		.loc 1 604 0
 1678 001a 002C     		cmp	r4, #0
 1679 001c 00DC     		bgt	.L160
 1680 001e 0424     		movs	r4, #4
 1681              	.LVL189:
 1682              	.L160:
 606:Dsp/letter_shell/shell.c ****     } while (--spaceLength);
 1683              		.loc 1 606 0 discriminator 1
 1684 0020 2D21     		movs	r1, #45
 1685 0022 2846     		mov	r0, r5
 1686 0024 FFF7FEFF 		bl	shellWriteByte
 1687              	.LVL190:
 607:Dsp/letter_shell/shell.c ****     if (item->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 1688              		.loc 1 607 0 discriminator 1
 1689 0028 013C     		subs	r4, r4, #1
 1690              	.LVL191:
 1691 002a 24B2     		sxth	r4, r4
 1692              	.LVL192:
 1693 002c 002C     		cmp	r4, #0
 1694 002e F7D1     		bne	.L160
 608:Dsp/letter_shell/shell.c ****     {
 1695              		.loc 1 608 0
 1696 0030 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 1697 0032 03F00F03 		and	r3, r3, #15
 1698 0036 012B     		cmp	r3, #1
 1699 0038 04DC     		bgt	.L161
 610:Dsp/letter_shell/shell.c ****     }
 1700              		.loc 1 610 0
 1701 003a 0F49     		ldr	r1, .L167
 1702 003c 2846     		mov	r0, r5
 1703 003e FFF7FEFF 		bl	shellWriteString
 1704              	.LVL193:
 1705 0042 70BD     		pop	{r4, r5, r6, pc}
 1706              	.LVL194:
 1707              	.L161:
 612:Dsp/letter_shell/shell.c ****     {
 1708              		.loc 1 612 0
 1709 0044 072B     		cmp	r3, #7
 1710 0046 04DC     		bgt	.L163
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 66


 614:Dsp/letter_shell/shell.c ****     }
 1711              		.loc 1 614 0
 1712 0048 0C49     		ldr	r1, .L167+4
 1713 004a 2846     		mov	r0, r5
 1714 004c FFF7FEFF 		bl	shellWriteString
 1715              	.LVL195:
 1716 0050 70BD     		pop	{r4, r5, r6, pc}
 1717              	.LVL196:
 1718              	.L163:
 616:Dsp/letter_shell/shell.c ****     {
 1719              		.loc 1 616 0
 1720 0052 082B     		cmp	r3, #8
 1721 0054 04DC     		bgt	.L164
 618:Dsp/letter_shell/shell.c ****     }
 1722              		.loc 1 618 0
 1723 0056 0A49     		ldr	r1, .L167+8
 1724 0058 2846     		mov	r0, r5
 1725 005a FFF7FEFF 		bl	shellWriteString
 1726              	.LVL197:
 1727 005e 70BD     		pop	{r4, r5, r6, pc}
 1728              	.LVL198:
 1729              	.L164:
 620:Dsp/letter_shell/shell.c ****     {
 1730              		.loc 1 620 0
 1731 0060 092B     		cmp	r3, #9
 1732 0062 04DC     		bgt	.L165
 622:Dsp/letter_shell/shell.c ****     }
 1733              		.loc 1 622 0
 1734 0064 0749     		ldr	r1, .L167+12
 1735 0066 2846     		mov	r0, r5
 1736 0068 FFF7FEFF 		bl	shellWriteString
 1737              	.LVL199:
 1738 006c 70BD     		pop	{r4, r5, r6, pc}
 1739              	.LVL200:
 1740              	.L165:
 626:Dsp/letter_shell/shell.c ****     }
 1741              		.loc 1 626 0
 1742 006e 0649     		ldr	r1, .L167+16
 1743 0070 2846     		mov	r0, r5
 1744 0072 FFF7FEFF 		bl	shellWriteString
 1745              	.LVL201:
 1746 0076 70BD     		pop	{r4, r5, r6, pc}
 1747              	.LVL202:
 1748              	.L168:
 1749              		.align	2
 1750              	.L167:
 1751 0078 FC010000 		.word	.LC11
 1752 007c 04020000 		.word	.LC12
 1753 0080 08020000 		.word	.LC13
 1754 0084 10020000 		.word	.LC14
 1755 0088 14020000 		.word	.LC15
 1756              		.cfi_endproc
 1757              	.LFE140:
 1759              		.section	.text.shellListCommand,"ax",%progbits
 1760              		.align	2
 1761              		.global	shellListCommand
 1762              		.thumb
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 67


 1763              		.thumb_func
 1765              	shellListCommand:
 1766              	.LFB141:
 647:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1767              		.loc 1 647 0
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 0
 1770              		@ frame_needed = 0, uses_anonymous_args = 0
 1771              	.LVL203:
 1772 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1773              	.LCFI39:
 1774              		.cfi_def_cfa_offset 24
 1775              		.cfi_offset 3, -24
 1776              		.cfi_offset 4, -20
 1777              		.cfi_offset 5, -16
 1778              		.cfi_offset 6, -12
 1779              		.cfi_offset 7, -8
 1780              		.cfi_offset 14, -4
 1781 0002 0646     		mov	r6, r0
 648:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CMD_LIST]);
 1782              		.loc 1 648 0
 1783 0004 876D     		ldr	r7, [r0, #88]
 1784              	.LVL204:
 649:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1785              		.loc 1 649 0
 1786 0006 0E49     		ldr	r1, .L174
 1787 0008 FFF7FEFF 		bl	shellWriteString
 1788              	.LVL205:
 1789              	.LBB10:
 650:Dsp/letter_shell/shell.c ****     {
 1790              		.loc 1 650 0
 1791 000c 0024     		movs	r4, #0
 1792 000e 11E0     		b	.L170
 1793              	.LVL206:
 1794              	.L172:
 652:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 1795              		.loc 1 652 0
 1796 0010 07EB0415 		add	r5, r7, r4, lsl #4
 1797 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1798 0016 03F00F03 		and	r3, r3, #15
 1799 001a 012B     		cmp	r3, #1
 1800 001c 08DC     		bgt	.L171
 653:Dsp/letter_shell/shell.c ****         {
 1801              		.loc 1 653 0
 1802 001e 2946     		mov	r1, r5
 1803 0020 3046     		mov	r0, r6
 1804 0022 FFF7FEFF 		bl	shellCheckPermission
 1805              	.LVL207:
 1806 0026 18B9     		cbnz	r0, .L171
 655:Dsp/letter_shell/shell.c ****         }
 1807              		.loc 1 655 0
 1808 0028 2946     		mov	r1, r5
 1809 002a 3046     		mov	r0, r6
 1810 002c FFF7FEFF 		bl	shellListItem
 1811              	.LVL208:
 1812              	.L171:
 650:Dsp/letter_shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 68


 1813              		.loc 1 650 0 discriminator 2
 1814 0030 0134     		adds	r4, r4, #1
 1815              	.LVL209:
 1816 0032 24B2     		sxth	r4, r4
 1817              	.LVL210:
 1818              	.L170:
 650:Dsp/letter_shell/shell.c ****     {
 1819              		.loc 1 650 0 is_stmt 0 discriminator 1
 1820 0034 B6F85C30 		ldrh	r3, [r6, #92]
 1821 0038 9C42     		cmp	r4, r3
 1822 003a E9DB     		blt	.L172
 1823              	.LBE10:
 658:Dsp/letter_shell/shell.c **** 
 1824              		.loc 1 658 0 is_stmt 1
 1825 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1826              	.LVL211:
 1827              	.L175:
 1828 003e 00BF     		.align	2
 1829              	.L174:
 1830 0040 1C020000 		.word	.LC16
 1831              		.cfi_endproc
 1832              	.LFE141:
 1834              		.section	.text.shellCmds,"ax",%progbits
 1835              		.align	2
 1836              		.global	shellCmds
 1837              		.thumb
 1838              		.thumb_func
 1840              	shellCmds:
 1841              	.LFB177:
1818:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 1842              		.loc 1 1818 0
 1843              		.cfi_startproc
 1844              		@ args = 0, pretend = 0, frame = 0
 1845              		@ frame_needed = 0, uses_anonymous_args = 0
 1846 0000 08B5     		push	{r3, lr}
 1847              	.LCFI40:
 1848              		.cfi_def_cfa_offset 8
 1849              		.cfi_offset 3, -8
 1850              		.cfi_offset 14, -4
1819:Dsp/letter_shell/shell.c ****     if (shell)
 1851              		.loc 1 1819 0
 1852 0002 FFF7FEFF 		bl	shellGetCurrent
 1853              	.LVL212:
1820:Dsp/letter_shell/shell.c ****     {
 1854              		.loc 1 1820 0
 1855 0006 08B1     		cbz	r0, .L176
1822:Dsp/letter_shell/shell.c ****     }
 1856              		.loc 1 1822 0
 1857 0008 FFF7FEFF 		bl	shellListCommand
 1858              	.LVL213:
 1859              	.L176:
 1860 000c 08BD     		pop	{r3, pc}
 1861              		.cfi_endproc
 1862              	.LFE177:
 1864 000e 00BF     		.section	.text.shellListVar,"ax",%progbits
 1865              		.align	2
 1866              		.global	shellListVar
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 69


 1867              		.thumb
 1868              		.thumb_func
 1870              	shellListVar:
 1871              	.LFB142:
 667:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1872              		.loc 1 667 0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 0
 1875              		@ frame_needed = 0, uses_anonymous_args = 0
 1876              	.LVL214:
 1877 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1878              	.LCFI41:
 1879              		.cfi_def_cfa_offset 24
 1880              		.cfi_offset 3, -24
 1881              		.cfi_offset 4, -20
 1882              		.cfi_offset 5, -16
 1883              		.cfi_offset 6, -12
 1884              		.cfi_offset 7, -8
 1885              		.cfi_offset 14, -4
 1886 0002 0646     		mov	r6, r0
 668:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_VAR_LIST]);
 1887              		.loc 1 668 0
 1888 0004 876D     		ldr	r7, [r0, #88]
 1889              	.LVL215:
 669:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1890              		.loc 1 669 0
 1891 0006 0F49     		ldr	r1, .L184
 1892 0008 FFF7FEFF 		bl	shellWriteString
 1893              	.LVL216:
 1894              	.LBB11:
 670:Dsp/letter_shell/shell.c ****     {
 1895              		.loc 1 670 0
 1896 000c 0024     		movs	r4, #0
 1897 000e 14E0     		b	.L180
 1898              	.LVL217:
 1899              	.L182:
 672:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_VAR_NODE
 1900              		.loc 1 672 0
 1901 0010 07EB0415 		add	r5, r7, r4, lsl #4
 1902 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1903 0016 03F00F03 		and	r3, r3, #15
 673:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 1904              		.loc 1 673 0
 1905 001a 0E33     		adds	r3, r3, #14
 1906 001c 03F00F03 		and	r3, r3, #15
 672:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_VAR_NODE
 1907              		.loc 1 672 0
 1908 0020 052B     		cmp	r3, #5
 1909 0022 08D8     		bhi	.L181
 674:Dsp/letter_shell/shell.c ****         {
 1910              		.loc 1 674 0
 1911 0024 2946     		mov	r1, r5
 1912 0026 3046     		mov	r0, r6
 1913 0028 FFF7FEFF 		bl	shellCheckPermission
 1914              	.LVL218:
 1915 002c 18B9     		cbnz	r0, .L181
 676:Dsp/letter_shell/shell.c ****         }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 70


 1916              		.loc 1 676 0
 1917 002e 2946     		mov	r1, r5
 1918 0030 3046     		mov	r0, r6
 1919 0032 FFF7FEFF 		bl	shellListItem
 1920              	.LVL219:
 1921              	.L181:
 670:Dsp/letter_shell/shell.c ****     {
 1922              		.loc 1 670 0 discriminator 2
 1923 0036 0134     		adds	r4, r4, #1
 1924              	.LVL220:
 1925 0038 24B2     		sxth	r4, r4
 1926              	.LVL221:
 1927              	.L180:
 670:Dsp/letter_shell/shell.c ****     {
 1928              		.loc 1 670 0 is_stmt 0 discriminator 1
 1929 003a B6F85C30 		ldrh	r3, [r6, #92]
 1930 003e 9C42     		cmp	r4, r3
 1931 0040 E6DB     		blt	.L182
 1932              	.LBE11:
 679:Dsp/letter_shell/shell.c **** 
 1933              		.loc 1 679 0 is_stmt 1
 1934 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1935              	.LVL222:
 1936              	.L185:
 1937              		.align	2
 1938              	.L184:
 1939 0044 30020000 		.word	.LC17
 1940              		.cfi_endproc
 1941              	.LFE142:
 1943              		.section	.text.shellVars,"ax",%progbits
 1944              		.align	2
 1945              		.global	shellVars
 1946              		.thumb
 1947              		.thumb_func
 1949              	shellVars:
 1950              	.LFB178:
1834:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 1951              		.loc 1 1834 0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 0
 1954              		@ frame_needed = 0, uses_anonymous_args = 0
 1955 0000 08B5     		push	{r3, lr}
 1956              	.LCFI42:
 1957              		.cfi_def_cfa_offset 8
 1958              		.cfi_offset 3, -8
 1959              		.cfi_offset 14, -4
1835:Dsp/letter_shell/shell.c ****     if (shell)
 1960              		.loc 1 1835 0
 1961 0002 FFF7FEFF 		bl	shellGetCurrent
 1962              	.LVL223:
1836:Dsp/letter_shell/shell.c ****     {
 1963              		.loc 1 1836 0
 1964 0006 08B1     		cbz	r0, .L186
1838:Dsp/letter_shell/shell.c ****     }
 1965              		.loc 1 1838 0
 1966 0008 FFF7FEFF 		bl	shellListVar
 1967              	.LVL224:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 71


 1968              	.L186:
 1969 000c 08BD     		pop	{r3, pc}
 1970              		.cfi_endproc
 1971              	.LFE178:
 1973 000e 00BF     		.section	.text.shellListUser,"ax",%progbits
 1974              		.align	2
 1975              		.global	shellListUser
 1976              		.thumb
 1977              		.thumb_func
 1979              	shellListUser:
 1980              	.LFB143:
 688:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1981              		.loc 1 688 0
 1982              		.cfi_startproc
 1983              		@ args = 0, pretend = 0, frame = 0
 1984              		@ frame_needed = 0, uses_anonymous_args = 0
 1985              	.LVL225:
 1986 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1987              	.LCFI43:
 1988              		.cfi_def_cfa_offset 24
 1989              		.cfi_offset 3, -24
 1990              		.cfi_offset 4, -20
 1991              		.cfi_offset 5, -16
 1992              		.cfi_offset 6, -12
 1993              		.cfi_offset 7, -8
 1994              		.cfi_offset 14, -4
 1995 0002 0646     		mov	r6, r0
 689:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_USER_LIST]);
 1996              		.loc 1 689 0
 1997 0004 876D     		ldr	r7, [r0, #88]
 1998              	.LVL226:
 690:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1999              		.loc 1 690 0
 2000 0006 0E49     		ldr	r1, .L194
 2001 0008 FFF7FEFF 		bl	shellWriteString
 2002              	.LVL227:
 2003              	.LBB12:
 691:Dsp/letter_shell/shell.c ****     {
 2004              		.loc 1 691 0
 2005 000c 0024     		movs	r4, #0
 2006 000e 11E0     		b	.L190
 2007              	.LVL228:
 2008              	.L192:
 693:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_USER
 2009              		.loc 1 693 0
 2010 0010 07EB0415 		add	r5, r7, r4, lsl #4
 694:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 2011              		.loc 1 694 0
 2012 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 2013 0016 03F00F03 		and	r3, r3, #15
 693:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_USER
 2014              		.loc 1 693 0
 2015 001a 082B     		cmp	r3, #8
 2016 001c 08D1     		bne	.L191
 695:Dsp/letter_shell/shell.c ****         {
 2017              		.loc 1 695 0
 2018 001e 2946     		mov	r1, r5
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 72


 2019 0020 3046     		mov	r0, r6
 2020 0022 FFF7FEFF 		bl	shellCheckPermission
 2021              	.LVL229:
 2022 0026 18B9     		cbnz	r0, .L191
 697:Dsp/letter_shell/shell.c ****         }
 2023              		.loc 1 697 0
 2024 0028 2946     		mov	r1, r5
 2025 002a 3046     		mov	r0, r6
 2026 002c FFF7FEFF 		bl	shellListItem
 2027              	.LVL230:
 2028              	.L191:
 691:Dsp/letter_shell/shell.c ****     {
 2029              		.loc 1 691 0 discriminator 2
 2030 0030 0134     		adds	r4, r4, #1
 2031              	.LVL231:
 2032 0032 24B2     		sxth	r4, r4
 2033              	.LVL232:
 2034              	.L190:
 691:Dsp/letter_shell/shell.c ****     {
 2035              		.loc 1 691 0 is_stmt 0 discriminator 1
 2036 0034 B6F85C30 		ldrh	r3, [r6, #92]
 2037 0038 9C42     		cmp	r4, r3
 2038 003a E9DB     		blt	.L192
 2039              	.LBE12:
 700:Dsp/letter_shell/shell.c **** 
 2040              		.loc 1 700 0 is_stmt 1
 2041 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2042              	.LVL233:
 2043              	.L195:
 2044 003e 00BF     		.align	2
 2045              	.L194:
 2046 0040 40020000 		.word	.LC18
 2047              		.cfi_endproc
 2048              	.LFE143:
 2050              		.section	.text.shellUsers,"ax",%progbits
 2051              		.align	2
 2052              		.global	shellUsers
 2053              		.thumb
 2054              		.thumb_func
 2056              	shellUsers:
 2057              	.LFB176:
1802:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 2058              		.loc 1 1802 0
 2059              		.cfi_startproc
 2060              		@ args = 0, pretend = 0, frame = 0
 2061              		@ frame_needed = 0, uses_anonymous_args = 0
 2062 0000 08B5     		push	{r3, lr}
 2063              	.LCFI44:
 2064              		.cfi_def_cfa_offset 8
 2065              		.cfi_offset 3, -8
 2066              		.cfi_offset 14, -4
1803:Dsp/letter_shell/shell.c ****     if (shell)
 2067              		.loc 1 1803 0
 2068 0002 FFF7FEFF 		bl	shellGetCurrent
 2069              	.LVL234:
1804:Dsp/letter_shell/shell.c ****     {
 2070              		.loc 1 1804 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 73


 2071 0006 08B1     		cbz	r0, .L196
1806:Dsp/letter_shell/shell.c ****     }
 2072              		.loc 1 1806 0
 2073 0008 FFF7FEFF 		bl	shellListUser
 2074              	.LVL235:
 2075              	.L196:
 2076 000c 08BD     		pop	{r3, pc}
 2077              		.cfi_endproc
 2078              	.LFE176:
 2080 000e 00BF     		.section	.text.shellListKey,"ax",%progbits
 2081              		.align	2
 2082              		.global	shellListKey
 2083              		.thumb
 2084              		.thumb_func
 2086              	shellListKey:
 2087              	.LFB144:
 709:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 2088              		.loc 1 709 0
 2089              		.cfi_startproc
 2090              		@ args = 0, pretend = 0, frame = 0
 2091              		@ frame_needed = 0, uses_anonymous_args = 0
 2092              	.LVL236:
 2093 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2094              	.LCFI45:
 2095              		.cfi_def_cfa_offset 24
 2096              		.cfi_offset 3, -24
 2097              		.cfi_offset 4, -20
 2098              		.cfi_offset 5, -16
 2099              		.cfi_offset 6, -12
 2100              		.cfi_offset 7, -8
 2101              		.cfi_offset 14, -4
 2102 0002 0646     		mov	r6, r0
 710:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_KEY_LIST]);
 2103              		.loc 1 710 0
 2104 0004 876D     		ldr	r7, [r0, #88]
 2105              	.LVL237:
 711:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 2106              		.loc 1 711 0
 2107 0006 0E49     		ldr	r1, .L204
 2108 0008 FFF7FEFF 		bl	shellWriteString
 2109              	.LVL238:
 2110              	.LBB13:
 712:Dsp/letter_shell/shell.c ****     {
 2111              		.loc 1 712 0
 2112 000c 0024     		movs	r4, #0
 2113 000e 11E0     		b	.L200
 2114              	.LVL239:
 2115              	.L202:
 714:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_KEY
 2116              		.loc 1 714 0
 2117 0010 07EB0415 		add	r5, r7, r4, lsl #4
 715:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 2118              		.loc 1 715 0
 2119 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 2120 0016 03F00F03 		and	r3, r3, #15
 714:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_KEY
 2121              		.loc 1 714 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 74


 2122 001a 092B     		cmp	r3, #9
 2123 001c 08D1     		bne	.L201
 716:Dsp/letter_shell/shell.c ****         {
 2124              		.loc 1 716 0
 2125 001e 2946     		mov	r1, r5
 2126 0020 3046     		mov	r0, r6
 2127 0022 FFF7FEFF 		bl	shellCheckPermission
 2128              	.LVL240:
 2129 0026 18B9     		cbnz	r0, .L201
 718:Dsp/letter_shell/shell.c ****         }
 2130              		.loc 1 718 0
 2131 0028 2946     		mov	r1, r5
 2132 002a 3046     		mov	r0, r6
 2133 002c FFF7FEFF 		bl	shellListItem
 2134              	.LVL241:
 2135              	.L201:
 712:Dsp/letter_shell/shell.c ****     {
 2136              		.loc 1 712 0 discriminator 2
 2137 0030 0134     		adds	r4, r4, #1
 2138              	.LVL242:
 2139 0032 24B2     		sxth	r4, r4
 2140              	.LVL243:
 2141              	.L200:
 712:Dsp/letter_shell/shell.c ****     {
 2142              		.loc 1 712 0 is_stmt 0 discriminator 1
 2143 0034 B6F85C30 		ldrh	r3, [r6, #92]
 2144 0038 9C42     		cmp	r4, r3
 2145 003a E9DB     		blt	.L202
 2146              	.LBE13:
 721:Dsp/letter_shell/shell.c **** 
 2147              		.loc 1 721 0 is_stmt 1
 2148 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2149              	.LVL244:
 2150              	.L205:
 2151 003e 00BF     		.align	2
 2152              	.L204:
 2153 0040 50020000 		.word	.LC19
 2154              		.cfi_endproc
 2155              	.LFE144:
 2157              		.section	.text.shellKeys,"ax",%progbits
 2158              		.align	2
 2159              		.global	shellKeys
 2160              		.thumb
 2161              		.thumb_func
 2163              	shellKeys:
 2164              	.LFB179:
1850:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 2165              		.loc 1 1850 0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 0
 2168              		@ frame_needed = 0, uses_anonymous_args = 0
 2169 0000 08B5     		push	{r3, lr}
 2170              	.LCFI46:
 2171              		.cfi_def_cfa_offset 8
 2172              		.cfi_offset 3, -8
 2173              		.cfi_offset 14, -4
1851:Dsp/letter_shell/shell.c ****     if (shell)
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 75


 2174              		.loc 1 1851 0
 2175 0002 FFF7FEFF 		bl	shellGetCurrent
 2176              	.LVL245:
1852:Dsp/letter_shell/shell.c ****     {
 2177              		.loc 1 1852 0
 2178 0006 08B1     		cbz	r0, .L206
1854:Dsp/letter_shell/shell.c ****     }
 2179              		.loc 1 1854 0
 2180 0008 FFF7FEFF 		bl	shellListKey
 2181              	.LVL246:
 2182              	.L206:
 2183 000c 08BD     		pop	{r3, pc}
 2184              		.cfi_endproc
 2185              	.LFE179:
 2187 000e 00BF     		.section	.text.shellListAll,"ax",%progbits
 2188              		.align	2
 2189              		.global	shellListAll
 2190              		.thumb
 2191              		.thumb_func
 2193              	shellListAll:
 2194              	.LFB145:
 730:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_USER == 1
 2195              		.loc 1 730 0
 2196              		.cfi_startproc
 2197              		@ args = 0, pretend = 0, frame = 0
 2198              		@ frame_needed = 0, uses_anonymous_args = 0
 2199              	.LVL247:
 2200 0000 08B5     		push	{r3, lr}
 2201              	.LCFI47:
 2202              		.cfi_def_cfa_offset 8
 2203              		.cfi_offset 3, -8
 2204              		.cfi_offset 14, -4
 734:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_VAR == 1
 2205              		.loc 1 734 0
 2206 0002 FFF7FEFF 		bl	shellListCommand
 2207              	.LVL248:
 2208 0006 08BD     		pop	{r3, pc}
 2209              		.cfi_endproc
 2210              	.LFE145:
 2212              		.section	.text.shellDeleteCommandLine,"ax",%progbits
 2213              		.align	2
 2214              		.global	shellDeleteCommandLine
 2215              		.thumb
 2216              		.thumb_func
 2218              	shellDeleteCommandLine:
 2219              	.LFB146:
 751:Dsp/letter_shell/shell.c ****     while (length--)
 2220              		.loc 1 751 0
 2221              		.cfi_startproc
 2222              		@ args = 0, pretend = 0, frame = 0
 2223              		@ frame_needed = 0, uses_anonymous_args = 0
 2224              	.LVL249:
 2225 0000 38B5     		push	{r3, r4, r5, lr}
 2226              	.LCFI48:
 2227              		.cfi_def_cfa_offset 16
 2228              		.cfi_offset 3, -16
 2229              		.cfi_offset 4, -12
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 76


 2230              		.cfi_offset 5, -8
 2231              		.cfi_offset 14, -4
 2232 0002 0546     		mov	r5, r0
 752:Dsp/letter_shell/shell.c ****     {
 2233              		.loc 1 752 0
 2234 0004 04E0     		b	.L212
 2235              	.LVL250:
 2236              	.L213:
 754:Dsp/letter_shell/shell.c ****     }
 2237              		.loc 1 754 0
 2238 0006 0549     		ldr	r1, .L215
 2239 0008 2846     		mov	r0, r5
 2240 000a FFF7FEFF 		bl	shellWriteString
 2241              	.LVL251:
 752:Dsp/letter_shell/shell.c ****     {
 2242              		.loc 1 752 0
 2243 000e 2146     		mov	r1, r4
 2244              	.LVL252:
 2245              	.L212:
 2246 0010 4B1E     		subs	r3, r1, #1
 2247 0012 DCB2     		uxtb	r4, r3
 2248              	.LVL253:
 2249 0014 0029     		cmp	r1, #0
 2250 0016 F6D1     		bne	.L213
 756:Dsp/letter_shell/shell.c **** 
 2251              		.loc 1 756 0
 2252 0018 38BD     		pop	{r3, r4, r5, pc}
 2253              	.LVL254:
 2254              	.L216:
 2255 001a 00BF     		.align	2
 2256              	.L215:
 2257 001c 60020000 		.word	.LC20
 2258              		.cfi_endproc
 2259              	.LFE146:
 2261              		.section	.text.shellClearCommandLine,"ax",%progbits
 2262              		.align	2
 2263              		.global	shellClearCommandLine
 2264              		.thumb
 2265              		.thumb_func
 2267              	shellClearCommandLine:
 2268              	.LFB147:
 765:Dsp/letter_shell/shell.c ****     for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 2269              		.loc 1 765 0
 2270              		.cfi_startproc
 2271              		@ args = 0, pretend = 0, frame = 0
 2272              		@ frame_needed = 0, uses_anonymous_args = 0
 2273              	.LVL255:
 2274 0000 38B5     		push	{r3, r4, r5, lr}
 2275              	.LCFI49:
 2276              		.cfi_def_cfa_offset 16
 2277              		.cfi_offset 3, -16
 2278              		.cfi_offset 4, -12
 2279              		.cfi_offset 5, -8
 2280              		.cfi_offset 14, -4
 2281 0002 0546     		mov	r5, r0
 2282              	.LBB14:
 766:Dsp/letter_shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 77


 2283              		.loc 1 766 0
 2284 0004 8389     		ldrh	r3, [r0, #12]
 2285 0006 C489     		ldrh	r4, [r0, #14]
 2286 0008 1C1B     		subs	r4, r3, r4
 2287 000a 24B2     		sxth	r4, r4
 2288              	.LVL256:
 2289 000c 05E0     		b	.L218
 2290              	.LVL257:
 2291              	.L219:
 768:Dsp/letter_shell/shell.c ****     }
 2292              		.loc 1 768 0 discriminator 3
 2293 000e 2021     		movs	r1, #32
 2294 0010 2846     		mov	r0, r5
 2295 0012 FFF7FEFF 		bl	shellWriteByte
 2296              	.LVL258:
 766:Dsp/letter_shell/shell.c ****     {
 2297              		.loc 1 766 0 discriminator 3
 2298 0016 013C     		subs	r4, r4, #1
 2299              	.LVL259:
 2300 0018 24B2     		sxth	r4, r4
 2301              	.LVL260:
 2302              	.L218:
 766:Dsp/letter_shell/shell.c ****     {
 2303              		.loc 1 766 0 is_stmt 0 discriminator 1
 2304 001a 002C     		cmp	r4, #0
 2305 001c F7DC     		bgt	.L219
 2306              	.LBE14:
 770:Dsp/letter_shell/shell.c **** }
 2307              		.loc 1 770 0 is_stmt 1
 2308 001e 297B     		ldrb	r1, [r5, #12]	@ zero_extendqisi2
 2309 0020 2846     		mov	r0, r5
 2310 0022 FFF7FEFF 		bl	shellDeleteCommandLine
 2311              	.LVL261:
 2312 0026 38BD     		pop	{r3, r4, r5, pc}
 2313              		.cfi_endproc
 2314              	.LFE147:
 2316              		.section	.text.shellHistory,"ax",%progbits
 2317              		.align	2
 2318              		.thumb
 2319              		.thumb_func
 2321              	shellHistory:
 2322              	.LFB162:
1319:Dsp/letter_shell/shell.c ****     if (dir > 0)
 2323              		.loc 1 1319 0
 2324              		.cfi_startproc
 2325              		@ args = 0, pretend = 0, frame = 0
 2326              		@ frame_needed = 0, uses_anonymous_args = 0
 2327              	.LVL262:
 2328 0000 10B5     		push	{r4, lr}
 2329              	.LCFI50:
 2330              		.cfi_def_cfa_offset 8
 2331              		.cfi_offset 4, -8
 2332              		.cfi_offset 14, -4
1320:Dsp/letter_shell/shell.c ****     {
 2333              		.loc 1 1320 0
 2334 0002 0029     		cmp	r1, #0
 2335              	.LVL263:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 78


 2336 0004 19DD     		ble	.L222
1322:Dsp/letter_shell/shell.c ****             -((shell->history.number > shell->history.record) ?
 2337              		.loc 1 1322 0
 2338 0006 B0F95410 		ldrsh	r1, [r0, #84]
 2339 000a 4B1E     		subs	r3, r1, #1
 2340 000c A0F85430 		strh	r3, [r0, #84]	@ movhi
1323:Dsp/letter_shell/shell.c ****                 shell->history.number : shell->history.record))
 2341              		.loc 1 1323 0
 2342 0010 B0F85020 		ldrh	r2, [r0, #80]
 2343 0014 B0F85230 		ldrh	r3, [r0, #82]
 2344 0018 9A42     		cmp	r2, r3
 2345 001a 01D9     		bls	.L223
1323:Dsp/letter_shell/shell.c ****                 shell->history.number : shell->history.record))
 2346              		.loc 1 1323 0 is_stmt 0 discriminator 1
 2347 001c 5442     		negs	r4, r2
 2348 001e 00E0     		b	.L224
 2349              	.L223:
1323:Dsp/letter_shell/shell.c ****                 shell->history.number : shell->history.record))
 2350              		.loc 1 1323 0 discriminator 2
 2351 0020 5C42     		negs	r4, r3
 2352              	.L224:
1322:Dsp/letter_shell/shell.c ****             -((shell->history.number > shell->history.record) ?
 2353              		.loc 1 1322 0 is_stmt 1
 2354 0022 8C42     		cmp	r4, r1
 2355 0024 17DB     		blt	.L225
1326:Dsp/letter_shell/shell.c ****                                     ? shell->history.number : shell->history.record);
 2356              		.loc 1 1326 0
 2357 0026 9A42     		cmp	r2, r3
 2358 0028 02D9     		bls	.L226
1326:Dsp/letter_shell/shell.c ****                                     ? shell->history.number : shell->history.record);
 2359              		.loc 1 1326 0 is_stmt 0 discriminator 1
 2360 002a 5342     		negs	r3, r2
 2361 002c 1BB2     		sxth	r3, r3
 2362 002e 01E0     		b	.L227
 2363              	.L226:
1326:Dsp/letter_shell/shell.c ****                                     ? shell->history.number : shell->history.record);
 2364              		.loc 1 1326 0 discriminator 2
 2365 0030 5B42     		negs	r3, r3
 2366 0032 1BB2     		sxth	r3, r3
 2367              	.L227:
1326:Dsp/letter_shell/shell.c ****                                     ? shell->history.number : shell->history.record);
 2368              		.loc 1 1326 0 discriminator 4
 2369 0034 A0F85430 		strh	r3, [r0, #84]	@ movhi
 2370 0038 0DE0     		b	.L225
 2371              	.L222:
1330:Dsp/letter_shell/shell.c ****     {
 2372              		.loc 1 1330 0 is_stmt 1
 2373 003a 0029     		cmp	r1, #0
 2374 003c 30DA     		bge	.L221
1332:Dsp/letter_shell/shell.c ****         {
 2375              		.loc 1 1332 0
 2376 003e B0F95430 		ldrsh	r3, [r0, #84]
 2377 0042 0133     		adds	r3, r3, #1
 2378 0044 1BB2     		sxth	r3, r3
 2379 0046 A0F85430 		strh	r3, [r0, #84]	@ movhi
 2380 004a 002B     		cmp	r3, #0
 2381 004c 03DD     		ble	.L225
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 79


1334:Dsp/letter_shell/shell.c ****             return;
 2382              		.loc 1 1334 0
 2383 004e 0023     		movs	r3, #0
 2384 0050 A0F85430 		strh	r3, [r0, #84]	@ movhi
1335:Dsp/letter_shell/shell.c ****         }
 2385              		.loc 1 1335 0
 2386 0054 10BD     		pop	{r4, pc}
 2387              	.L225:
 2388 0056 0446     		mov	r4, r0
1342:Dsp/letter_shell/shell.c ****     if (shell->history.offset == 0)
 2389              		.loc 1 1342 0
 2390 0058 FFF7FEFF 		bl	shellClearCommandLine
 2391              	.LVL264:
1343:Dsp/letter_shell/shell.c ****     {
 2392              		.loc 1 1343 0
 2393 005c B4F95420 		ldrsh	r2, [r4, #84]
 2394 0060 1AB9     		cbnz	r2, .L229
1345:Dsp/letter_shell/shell.c ****     }
 2395              		.loc 1 1345 0
 2396 0062 0023     		movs	r3, #0
 2397 0064 A381     		strh	r3, [r4, #12]	@ movhi
 2398 0066 E381     		strh	r3, [r4, #14]	@ movhi
 2399 0068 10BD     		pop	{r4, pc}
 2400              	.LVL265:
 2401              	.L229:
1350:Dsp/letter_shell/shell.c ****                     + shell->history.offset) % SHELL_HISTORY_MAX_NUMBER])) == 0)
 2402              		.loc 1 1350 0
 2403 006a B4F85230 		ldrh	r3, [r4, #82]
 2404 006e 0533     		adds	r3, r3, #5
1351:Dsp/letter_shell/shell.c ****         {
 2405              		.loc 1 1351 0
 2406 0070 1A44     		add	r2, r2, r3
 2407 0072 0C4B     		ldr	r3, .L231
 2408 0074 83FB0231 		smull	r3, r1, r3, r2
 2409 0078 D317     		asrs	r3, r2, #31
 2410 007a C3EB6103 		rsb	r3, r3, r1, asr #1
 2411 007e 03EB8303 		add	r3, r3, r3, lsl #2
 2412 0082 D31A     		subs	r3, r2, r3
1349:Dsp/letter_shell/shell.c ****                 shell->history.item[(shell->history.record + SHELL_HISTORY_MAX_NUMBER
 2413              		.loc 1 1349 0
 2414 0084 0E33     		adds	r3, r3, #14
 2415 0086 04EB8303 		add	r3, r4, r3, lsl #2
 2416 008a 5968     		ldr	r1, [r3, #4]
 2417 008c 2069     		ldr	r0, [r4, #16]
 2418 008e FFF7FEFF 		bl	shellStringCopy
 2419              	.LVL266:
 2420 0092 A081     		strh	r0, [r4, #12]	@ movhi
 2421 0094 20B1     		cbz	r0, .L221
1355:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2422              		.loc 1 1355 0
 2423 0096 E081     		strh	r0, [r4, #14]	@ movhi
1356:Dsp/letter_shell/shell.c ****     }
 2424              		.loc 1 1356 0
 2425 0098 2169     		ldr	r1, [r4, #16]
 2426 009a 2046     		mov	r0, r4
 2427 009c FFF7FEFF 		bl	shellWriteString
 2428              	.LVL267:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 80


 2429              	.L221:
 2430 00a0 10BD     		pop	{r4, pc}
 2431              	.L232:
 2432 00a2 00BF     		.align	2
 2433              	.L231:
 2434 00a4 67666666 		.word	1717986919
 2435              		.cfi_endproc
 2436              	.LFE162:
 2438              		.section	.text.shellUp,"ax",%progbits
 2439              		.align	2
 2440              		.global	shellUp
 2441              		.thumb
 2442              		.thumb_func
 2444              	shellUp:
 2445              	.LFB165:
1427:Dsp/letter_shell/shell.c ****     shellHistory(shell, 1);
 2446              		.loc 1 1427 0
 2447              		.cfi_startproc
 2448              		@ args = 0, pretend = 0, frame = 0
 2449              		@ frame_needed = 0, uses_anonymous_args = 0
 2450              	.LVL268:
 2451 0000 08B5     		push	{r3, lr}
 2452              	.LCFI51:
 2453              		.cfi_def_cfa_offset 8
 2454              		.cfi_offset 3, -8
 2455              		.cfi_offset 14, -4
1428:Dsp/letter_shell/shell.c **** }
 2456              		.loc 1 1428 0
 2457 0002 0121     		movs	r1, #1
 2458 0004 FFF7FEFF 		bl	shellHistory
 2459              	.LVL269:
 2460 0008 08BD     		pop	{r3, pc}
 2461              		.cfi_endproc
 2462              	.LFE165:
 2464 000a 00BF     		.section	.text.shellDown,"ax",%progbits
 2465              		.align	2
 2466              		.global	shellDown
 2467              		.thumb
 2468              		.thumb_func
 2470              	shellDown:
 2471              	.LFB166:
1439:Dsp/letter_shell/shell.c ****     shellHistory(shell, -1);
 2472              		.loc 1 1439 0
 2473              		.cfi_startproc
 2474              		@ args = 0, pretend = 0, frame = 0
 2475              		@ frame_needed = 0, uses_anonymous_args = 0
 2476              	.LVL270:
 2477 0000 08B5     		push	{r3, lr}
 2478              	.LCFI52:
 2479              		.cfi_def_cfa_offset 8
 2480              		.cfi_offset 3, -8
 2481              		.cfi_offset 14, -4
1440:Dsp/letter_shell/shell.c **** }
 2482              		.loc 1 1440 0
 2483 0002 4FF0FF31 		mov	r1, #-1
 2484 0006 FFF7FEFF 		bl	shellHistory
 2485              	.LVL271:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 81


 2486 000a 08BD     		pop	{r3, pc}
 2487              		.cfi_endproc
 2488              	.LFE166:
 2490              		.section	.text.shellTab,"ax",%progbits
 2491              		.align	2
 2492              		.global	shellTab
 2493              		.thumb
 2494              		.thumb_func
 2496              	shellTab:
 2497              	.LFB169:
1484:Dsp/letter_shell/shell.c ****     unsigned short maxMatch = shell->parser.bufferSize;
 2498              		.loc 1 1484 0
 2499              		.cfi_startproc
 2500              		@ args = 0, pretend = 0, frame = 0
 2501              		@ frame_needed = 0, uses_anonymous_args = 0
 2502              	.LVL272:
 2503 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2504              	.LCFI53:
 2505              		.cfi_def_cfa_offset 40
 2506              		.cfi_offset 3, -40
 2507              		.cfi_offset 4, -36
 2508              		.cfi_offset 5, -32
 2509              		.cfi_offset 6, -28
 2510              		.cfi_offset 7, -24
 2511              		.cfi_offset 8, -20
 2512              		.cfi_offset 9, -16
 2513              		.cfi_offset 10, -12
 2514              		.cfi_offset 11, -8
 2515              		.cfi_offset 14, -4
 2516 0004 0546     		mov	r5, r0
1485:Dsp/letter_shell/shell.c ****     unsigned short lastMatchIndex = 0;
 2517              		.loc 1 1485 0
 2518 0006 B0F834A0 		ldrh	r10, [r0, #52]
 2519              	.LVL273:
1490:Dsp/letter_shell/shell.c ****     {
 2520              		.loc 1 1490 0
 2521 000a 8389     		ldrh	r3, [r0, #12]
 2522 000c 3BB9     		cbnz	r3, .L238
1492:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 1);
 2523              		.loc 1 1492 0
 2524 000e FFF7FEFF 		bl	shellListAll
 2525              	.LVL274:
1493:Dsp/letter_shell/shell.c ****     }
 2526              		.loc 1 1493 0
 2527 0012 0121     		movs	r1, #1
 2528 0014 2846     		mov	r0, r5
 2529 0016 FFF7FEFF 		bl	shellWriteCommandLine
 2530              	.LVL275:
 2531 001a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2532              	.LVL276:
 2533              	.L238:
1495:Dsp/letter_shell/shell.c ****     {
 2534              		.loc 1 1495 0
 2535 001e 002B     		cmp	r3, #0
 2536 0020 75D0     		beq	.L237
 2537              	.LBB15:
1497:Dsp/letter_shell/shell.c ****         ShellCommand *base = (ShellCommand *)shell->commandList.base;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 82


 2538              		.loc 1 1497 0
 2539 0022 0269     		ldr	r2, [r0, #16]
 2540 0024 4FF00008 		mov	r8, #0
 2541 0028 02F80380 		strb	r8, [r2, r3]
1498:Dsp/letter_shell/shell.c ****         for (short i = 0; i < shell->commandList.count; i++)
 2542              		.loc 1 1498 0
 2543 002c 876D     		ldr	r7, [r0, #88]
 2544              	.LVL277:
 2545              	.LBB16:
1499:Dsp/letter_shell/shell.c ****         {
 2546              		.loc 1 1499 0
 2547 002e 4446     		mov	r4, r8
 2548              	.LBE16:
 2549              	.LBE15:
1487:Dsp/letter_shell/shell.c ****     unsigned short length;
 2550              		.loc 1 1487 0
 2551 0030 C146     		mov	r9, r8
 2552              	.LBB18:
 2553              	.LBB17:
1499:Dsp/letter_shell/shell.c ****         {
 2554              		.loc 1 1499 0
 2555 0032 3AE0     		b	.L240
 2556              	.LVL278:
 2557              	.L244:
1501:Dsp/letter_shell/shell.c ****                 && shellStringCompare(shell->parser.buffer,
 2558              		.loc 1 1501 0
 2559 0034 07EB0416 		add	r6, r7, r4, lsl #4
 2560 0038 3146     		mov	r1, r6
 2561 003a 2846     		mov	r0, r5
 2562 003c FFF7FEFF 		bl	shellCheckPermission
 2563              	.LVL279:
 2564 0040 88BB     		cbnz	r0, .L241
1502:Dsp/letter_shell/shell.c ****                                    (char *)shellGetCommandName(&base[i]))
 2565              		.loc 1 1502 0
 2566 0042 D5F810B0 		ldr	fp, [r5, #16]
1503:Dsp/letter_shell/shell.c ****                         == shell->parser.length)
 2567              		.loc 1 1503 0
 2568 0046 3046     		mov	r0, r6
 2569 0048 FFF7FEFF 		bl	shellGetCommandName
 2570              	.LVL280:
1502:Dsp/letter_shell/shell.c ****                                    (char *)shellGetCommandName(&base[i]))
 2571              		.loc 1 1502 0
 2572 004c 0146     		mov	r1, r0
 2573 004e 5846     		mov	r0, fp
 2574 0050 FFF7FEFF 		bl	shellStringCompare
 2575              	.LVL281:
1504:Dsp/letter_shell/shell.c ****             {
 2576              		.loc 1 1504 0
 2577 0054 AB89     		ldrh	r3, [r5, #12]
1502:Dsp/letter_shell/shell.c ****                                    (char *)shellGetCommandName(&base[i]))
 2578              		.loc 1 1502 0
 2579 0056 9842     		cmp	r0, r3
 2580 0058 25D1     		bne	.L241
1506:Dsp/letter_shell/shell.c ****                 {
 2581              		.loc 1 1506 0
 2582 005a B9F1000F 		cmp	r9, #0
 2583 005e 1CD0     		beq	.L242
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 83


1508:Dsp/letter_shell/shell.c ****                     {
 2584              		.loc 1 1508 0
 2585 0060 B9F1010F 		cmp	r9, #1
 2586 0064 03D1     		bne	.L243
1510:Dsp/letter_shell/shell.c ****                     }
 2587              		.loc 1 1510 0
 2588 0066 2B49     		ldr	r1, .L249
 2589 0068 2846     		mov	r0, r5
 2590 006a FFF7FEFF 		bl	shellWriteString
 2591              	.LVL282:
 2592              	.L243:
1512:Dsp/letter_shell/shell.c ****                     length = 
 2593              		.loc 1 1512 0
 2594 006e 07EB0818 		add	r8, r7, r8, lsl #4
 2595              	.LVL283:
 2596 0072 4146     		mov	r1, r8
 2597 0074 2846     		mov	r0, r5
 2598 0076 FFF7FEFF 		bl	shellListItem
 2599              	.LVL284:
1514:Dsp/letter_shell/shell.c ****                                            (char *)shellGetCommandName(&base[i]));
 2600              		.loc 1 1514 0
 2601 007a 4046     		mov	r0, r8
 2602 007c FFF7FEFF 		bl	shellGetCommandName
 2603              	.LVL285:
 2604 0080 8046     		mov	r8, r0
1515:Dsp/letter_shell/shell.c ****                     maxMatch = (maxMatch > length) ? length : maxMatch;
 2605              		.loc 1 1515 0
 2606 0082 3046     		mov	r0, r6
 2607 0084 FFF7FEFF 		bl	shellGetCommandName
 2608              	.LVL286:
1513:Dsp/letter_shell/shell.c ****                         shellStringCompare((char *)shellGetCommandName(&base[lastMatchIndex]),
 2609              		.loc 1 1513 0
 2610 0088 0146     		mov	r1, r0
 2611 008a 4046     		mov	r0, r8
 2612 008c FFF7FEFF 		bl	shellStringCompare
 2613              	.LVL287:
1516:Dsp/letter_shell/shell.c ****                 }
 2614              		.loc 1 1516 0
 2615 0090 5045     		cmp	r0, r10
 2616 0092 28BF     		it	cs
 2617 0094 5046     		movcs	r0, r10
 2618              	.LVL288:
 2619 0096 1FFA80FA 		uxth	r10, r0
 2620              	.LVL289:
 2621              	.L242:
1518:Dsp/letter_shell/shell.c ****                 matchNum++;
 2622              		.loc 1 1518 0
 2623 009a 1FFA84F8 		uxth	r8, r4
 2624              	.LVL290:
1519:Dsp/letter_shell/shell.c ****             }
 2625              		.loc 1 1519 0
 2626 009e 09F10109 		add	r9, r9, #1
 2627              	.LVL291:
 2628 00a2 1FFA89F9 		uxth	r9, r9
 2629              	.LVL292:
 2630              	.L241:
1499:Dsp/letter_shell/shell.c ****         {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 84


 2631              		.loc 1 1499 0 discriminator 2
 2632 00a6 0134     		adds	r4, r4, #1
 2633              	.LVL293:
 2634 00a8 24B2     		sxth	r4, r4
 2635              	.LVL294:
 2636              	.L240:
1499:Dsp/letter_shell/shell.c ****         {
 2637              		.loc 1 1499 0 is_stmt 0 discriminator 1
 2638 00aa B5F85C30 		ldrh	r3, [r5, #92]
 2639 00ae 9C42     		cmp	r4, r3
 2640 00b0 C0DB     		blt	.L244
 2641              	.LBE17:
1522:Dsp/letter_shell/shell.c ****         {
 2642              		.loc 1 1522 0 is_stmt 1
 2643 00b2 B9F1000F 		cmp	r9, #0
 2644 00b6 2AD0     		beq	.L237
1526:Dsp/letter_shell/shell.c ****         {
 2645              		.loc 1 1526 0
 2646 00b8 B9F1010F 		cmp	r9, #1
 2647 00bc 02D1     		bne	.L245
1528:Dsp/letter_shell/shell.c ****         }
 2648              		.loc 1 1528 0
 2649 00be 2846     		mov	r0, r5
 2650 00c0 FFF7FEFF 		bl	shellClearCommandLine
 2651              	.LVL295:
 2652              	.L245:
1530:Dsp/letter_shell/shell.c ****         {
 2653              		.loc 1 1530 0
 2654 00c4 B9F1000F 		cmp	r9, #0
 2655 00c8 09D0     		beq	.L246
1533:Dsp/letter_shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
 2656              		.loc 1 1533 0
 2657 00ca 2C69     		ldr	r4, [r5, #16]
 2658              	.LVL296:
1534:Dsp/letter_shell/shell.c ****         }
 2659              		.loc 1 1534 0
 2660 00cc 07EB0810 		add	r0, r7, r8, lsl #4
 2661 00d0 FFF7FEFF 		bl	shellGetCommandName
 2662              	.LVL297:
1533:Dsp/letter_shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
 2663              		.loc 1 1533 0
 2664 00d4 0146     		mov	r1, r0
 2665 00d6 2046     		mov	r0, r4
 2666 00d8 FFF7FEFF 		bl	shellStringCopy
 2667              	.LVL298:
1532:Dsp/letter_shell/shell.c ****                 shellStringCopy(shell->parser.buffer,
 2668              		.loc 1 1532 0
 2669 00dc A881     		strh	r0, [r5, #12]	@ movhi
 2670              	.L246:
1536:Dsp/letter_shell/shell.c ****         {
 2671              		.loc 1 1536 0
 2672 00de B9F1010F 		cmp	r9, #1
 2673 00e2 0AD9     		bls	.L247
1538:Dsp/letter_shell/shell.c ****             shellWriteCommandLine(shell, 1);
 2674              		.loc 1 1538 0
 2675 00e4 07EB0811 		add	r1, r7, r8, lsl #4
 2676 00e8 2846     		mov	r0, r5
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 85


 2677 00ea FFF7FEFF 		bl	shellListItem
 2678              	.LVL299:
1539:Dsp/letter_shell/shell.c ****             shell->parser.length = maxMatch;
 2679              		.loc 1 1539 0
 2680 00ee 0121     		movs	r1, #1
 2681 00f0 2846     		mov	r0, r5
 2682 00f2 FFF7FEFF 		bl	shellWriteCommandLine
 2683              	.LVL300:
1540:Dsp/letter_shell/shell.c ****         }
 2684              		.loc 1 1540 0
 2685 00f6 A5F80CA0 		strh	r10, [r5, #12]	@ movhi
 2686              	.L247:
1542:Dsp/letter_shell/shell.c ****         shell->parser.cursor = shell->parser.length;
 2687              		.loc 1 1542 0
 2688 00fa 2A69     		ldr	r2, [r5, #16]
 2689 00fc AB89     		ldrh	r3, [r5, #12]
 2690 00fe 0021     		movs	r1, #0
 2691 0100 D154     		strb	r1, [r2, r3]
1543:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2692              		.loc 1 1543 0
 2693 0102 AB89     		ldrh	r3, [r5, #12]
 2694 0104 EB81     		strh	r3, [r5, #14]	@ movhi
1544:Dsp/letter_shell/shell.c ****     }
 2695              		.loc 1 1544 0
 2696 0106 2969     		ldr	r1, [r5, #16]
 2697 0108 2846     		mov	r0, r5
 2698 010a FFF7FEFF 		bl	shellWriteString
 2699              	.LVL301:
 2700              	.L237:
 2701 010e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2702              	.LVL302:
 2703              	.L250:
 2704 0112 00BF     		.align	2
 2705              	.L249:
 2706 0114 A0010000 		.word	.LC3
 2707              	.LBE18:
 2708              		.cfi_endproc
 2709              	.LFE169:
 2711              		.section	.text.shellInsertByte,"ax",%progbits
 2712              		.align	2
 2713              		.global	shellInsertByte
 2714              		.thumb
 2715              		.thumb_func
 2717              	shellInsertByte:
 2718              	.LFB148:
 781:Dsp/letter_shell/shell.c ****     /* 判断输入数据是否过长 */
 2719              		.loc 1 781 0
 2720              		.cfi_startproc
 2721              		@ args = 0, pretend = 0, frame = 0
 2722              		@ frame_needed = 0, uses_anonymous_args = 0
 2723              	.LVL303:
 2724 0000 38B5     		push	{r3, r4, r5, lr}
 2725              	.LCFI54:
 2726              		.cfi_def_cfa_offset 16
 2727              		.cfi_offset 3, -16
 2728              		.cfi_offset 4, -12
 2729              		.cfi_offset 5, -8
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 86


 2730              		.cfi_offset 14, -4
 2731 0002 0446     		mov	r4, r0
 783:Dsp/letter_shell/shell.c ****     {
 2732              		.loc 1 783 0
 2733 0004 8389     		ldrh	r3, [r0, #12]
 2734 0006 828E     		ldrh	r2, [r0, #52]
 2735 0008 013A     		subs	r2, r2, #1
 2736 000a 9342     		cmp	r3, r2
 2737 000c 0BDB     		blt	.L252
 785:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 1);
 2738              		.loc 1 785 0
 2739 000e 2A49     		ldr	r1, .L262
 2740              	.LVL304:
 2741 0010 FFF7FEFF 		bl	shellWriteString
 2742              	.LVL305:
 786:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2743              		.loc 1 786 0
 2744 0014 0121     		movs	r1, #1
 2745 0016 2046     		mov	r0, r4
 2746 0018 FFF7FEFF 		bl	shellWriteCommandLine
 2747              	.LVL306:
 787:Dsp/letter_shell/shell.c ****         return;
 2748              		.loc 1 787 0
 2749 001c 2169     		ldr	r1, [r4, #16]
 2750 001e 2046     		mov	r0, r4
 2751 0020 FFF7FEFF 		bl	shellWriteString
 2752              	.LVL307:
 788:Dsp/letter_shell/shell.c ****     }
 2753              		.loc 1 788 0
 2754 0024 38BD     		pop	{r3, r4, r5, pc}
 2755              	.LVL308:
 2756              	.L252:
 792:Dsp/letter_shell/shell.c ****     {
 2757              		.loc 1 792 0
 2758 0026 C289     		ldrh	r2, [r0, #14]
 2759 0028 9342     		cmp	r3, r2
 2760 002a 0ED1     		bne	.L254
 794:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 2761              		.loc 1 794 0
 2762 002c 0269     		ldr	r2, [r0, #16]
 2763 002e 581C     		adds	r0, r3, #1
 2764              	.LVL309:
 2765 0030 A081     		strh	r0, [r4, #12]	@ movhi
 2766 0032 D154     		strb	r1, [r2, r3]
 795:Dsp/letter_shell/shell.c ****         shell->parser.cursor++;
 2767              		.loc 1 795 0
 2768 0034 2269     		ldr	r2, [r4, #16]
 2769 0036 A389     		ldrh	r3, [r4, #12]
 2770 0038 0020     		movs	r0, #0
 2771 003a D054     		strb	r0, [r2, r3]
 796:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, data);
 2772              		.loc 1 796 0
 2773 003c E389     		ldrh	r3, [r4, #14]
 2774 003e 0133     		adds	r3, r3, #1
 2775 0040 E381     		strh	r3, [r4, #14]	@ movhi
 797:Dsp/letter_shell/shell.c ****     }
 2776              		.loc 1 797 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 87


 2777 0042 2046     		mov	r0, r4
 2778 0044 FFF7FEFF 		bl	shellWriteByte
 2779              	.LVL310:
 2780 0048 38BD     		pop	{r3, r4, r5, pc}
 2781              	.LVL311:
 2782              	.L254:
 799:Dsp/letter_shell/shell.c ****     {
 2783              		.loc 1 799 0
 2784 004a 9342     		cmp	r3, r2
 2785 004c 33D9     		bls	.L251
 2786              	.LBB19:
 801:Dsp/letter_shell/shell.c ****         {
 2787              		.loc 1 801 0
 2788 004e 9B1A     		subs	r3, r3, r2
 2789 0050 1BB2     		sxth	r3, r3
 2790              	.LVL312:
 2791 0052 08E0     		b	.L255
 2792              	.LVL313:
 2793              	.L256:
 803:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 2794              		.loc 1 803 0 discriminator 3
 2795 0054 2069     		ldr	r0, [r4, #16]
 2796 0056 E289     		ldrh	r2, [r4, #14]
 2797 0058 1A44     		add	r2, r2, r3
 2798 005a 8518     		adds	r5, r0, r2
 804:Dsp/letter_shell/shell.c ****         }
 2799              		.loc 1 804 0 discriminator 3
 2800 005c 15F8015C 		ldrb	r5, [r5, #-1]	@ zero_extendqisi2
 803:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 2801              		.loc 1 803 0 discriminator 3
 2802 0060 8554     		strb	r5, [r0, r2]
 801:Dsp/letter_shell/shell.c ****         {
 2803              		.loc 1 801 0 discriminator 3
 2804 0062 013B     		subs	r3, r3, #1
 2805              	.LVL314:
 2806 0064 1BB2     		sxth	r3, r3
 2807              	.LVL315:
 2808              	.L255:
 801:Dsp/letter_shell/shell.c ****         {
 2809              		.loc 1 801 0 is_stmt 0 discriminator 1
 2810 0066 002B     		cmp	r3, #0
 2811 0068 F4DC     		bgt	.L256
 2812              	.LBE19:
 806:Dsp/letter_shell/shell.c ****         shell->parser.buffer[++shell->parser.length] = 0;
 2813              		.loc 1 806 0 is_stmt 1
 2814 006a 2269     		ldr	r2, [r4, #16]
 2815 006c E389     		ldrh	r3, [r4, #14]
 2816              	.LVL316:
 2817 006e 581C     		adds	r0, r3, #1
 2818 0070 E081     		strh	r0, [r4, #14]	@ movhi
 2819 0072 D154     		strb	r1, [r2, r3]
 807:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.cursor - 1; i < shell->parser.length; i++)
 2820              		.loc 1 807 0
 2821 0074 2269     		ldr	r2, [r4, #16]
 2822 0076 A389     		ldrh	r3, [r4, #12]
 2823 0078 0133     		adds	r3, r3, #1
 2824 007a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 88


 2825 007c A381     		strh	r3, [r4, #12]	@ movhi
 2826 007e 0021     		movs	r1, #0
 2827              	.LVL317:
 2828 0080 D154     		strb	r1, [r2, r3]
 2829              	.LBB20:
 808:Dsp/letter_shell/shell.c ****         {
 2830              		.loc 1 808 0
 2831 0082 E589     		ldrh	r5, [r4, #14]
 2832 0084 013D     		subs	r5, r5, #1
 2833 0086 2DB2     		sxth	r5, r5
 2834              	.LVL318:
 2835 0088 06E0     		b	.L257
 2836              	.L258:
 810:Dsp/letter_shell/shell.c ****         }
 2837              		.loc 1 810 0 discriminator 3
 2838 008a 2369     		ldr	r3, [r4, #16]
 2839 008c 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 2840 008e 2046     		mov	r0, r4
 2841 0090 FFF7FEFF 		bl	shellWriteByte
 2842              	.LVL319:
 808:Dsp/letter_shell/shell.c ****         {
 2843              		.loc 1 808 0 discriminator 3
 2844 0094 0135     		adds	r5, r5, #1
 2845              	.LVL320:
 2846 0096 2DB2     		sxth	r5, r5
 2847              	.LVL321:
 2848              	.L257:
 808:Dsp/letter_shell/shell.c ****         {
 2849              		.loc 1 808 0 is_stmt 0 discriminator 1
 2850 0098 A389     		ldrh	r3, [r4, #12]
 2851 009a 9D42     		cmp	r5, r3
 2852 009c F5DB     		blt	.L258
 2853              	.LBE20:
 2854              	.LBB21:
 812:Dsp/letter_shell/shell.c ****         {
 2855              		.loc 1 812 0 is_stmt 1
 2856 009e E589     		ldrh	r5, [r4, #14]
 2857              	.LVL322:
 2858 00a0 5D1B     		subs	r5, r3, r5
 2859 00a2 2DB2     		sxth	r5, r5
 2860              	.LVL323:
 2861 00a4 05E0     		b	.L259
 2862              	.L260:
 814:Dsp/letter_shell/shell.c ****         }
 2863              		.loc 1 814 0 discriminator 3
 2864 00a6 0821     		movs	r1, #8
 2865 00a8 2046     		mov	r0, r4
 2866 00aa FFF7FEFF 		bl	shellWriteByte
 2867              	.LVL324:
 812:Dsp/letter_shell/shell.c ****         {
 2868              		.loc 1 812 0 discriminator 3
 2869 00ae 013D     		subs	r5, r5, #1
 2870              	.LVL325:
 2871 00b0 2DB2     		sxth	r5, r5
 2872              	.LVL326:
 2873              	.L259:
 812:Dsp/letter_shell/shell.c ****         {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 89


 2874              		.loc 1 812 0 is_stmt 0 discriminator 1
 2875 00b2 002D     		cmp	r5, #0
 2876 00b4 F7DC     		bgt	.L260
 2877              	.LVL327:
 2878              	.L251:
 2879 00b6 38BD     		pop	{r3, r4, r5, pc}
 2880              	.LVL328:
 2881              	.L263:
 2882              		.align	2
 2883              	.L262:
 2884 00b8 64020000 		.word	.LC21
 2885              	.LBE21:
 2886              		.cfi_endproc
 2887              	.LFE148:
 2889              		.section	.text.shellDeleteByte,"ax",%progbits
 2890              		.align	2
 2891              		.global	shellDeleteByte
 2892              		.thumb
 2893              		.thumb_func
 2895              	shellDeleteByte:
 2896              	.LFB149:
 827:Dsp/letter_shell/shell.c ****     char offset = (direction == -1) ? 1 : 0;
 2897              		.loc 1 827 0 is_stmt 1
 2898              		.cfi_startproc
 2899              		@ args = 0, pretend = 0, frame = 0
 2900              		@ frame_needed = 0, uses_anonymous_args = 0
 2901              	.LVL329:
 2902 0000 38B5     		push	{r3, r4, r5, lr}
 2903              	.LCFI55:
 2904              		.cfi_def_cfa_offset 16
 2905              		.cfi_offset 3, -16
 2906              		.cfi_offset 4, -12
 2907              		.cfi_offset 5, -8
 2908              		.cfi_offset 14, -4
 828:Dsp/letter_shell/shell.c **** 
 2909              		.loc 1 828 0
 2910 0002 B1F1FF3F 		cmp	r1, #-1
 2911 0006 14BF     		ite	ne
 2912 0008 0023     		movne	r3, #0
 2913 000a 0123     		moveq	r3, #1
 2914              	.LVL330:
 830:Dsp/letter_shell/shell.c ****         || (shell->parser.cursor == shell->parser.length && direction == -1))
 2915              		.loc 1 830 0
 2916 000c C289     		ldrh	r2, [r0, #14]
 2917 000e 0AB9     		cbnz	r2, .L265
 830:Dsp/letter_shell/shell.c ****         || (shell->parser.cursor == shell->parser.length && direction == -1))
 2918              		.loc 1 830 0 is_stmt 0 discriminator 1
 2919 0010 0129     		cmp	r1, #1
 2920 0012 52D0     		beq	.L264
 2921              	.L265:
 831:Dsp/letter_shell/shell.c ****     {
 2922              		.loc 1 831 0 is_stmt 1
 2923 0014 8589     		ldrh	r5, [r0, #12]
 2924 0016 AA42     		cmp	r2, r5
 2925 0018 02D1     		bne	.L267
 831:Dsp/letter_shell/shell.c ****     {
 2926              		.loc 1 831 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 90


 2927 001a B1F1FF3F 		cmp	r1, #-1
 2928 001e 4CD0     		beq	.L264
 2929              	.L267:
 2930 0020 0446     		mov	r4, r0
 835:Dsp/letter_shell/shell.c ****     {
 2931              		.loc 1 835 0 is_stmt 1
 2932 0022 AA42     		cmp	r2, r5
 2933 0024 0DD1     		bne	.L268
 835:Dsp/letter_shell/shell.c ****     {
 2934              		.loc 1 835 0 is_stmt 0 discriminator 1
 2935 0026 0129     		cmp	r1, #1
 2936 0028 0BD1     		bne	.L268
 837:Dsp/letter_shell/shell.c ****         shell->parser.length--;
 2937              		.loc 1 837 0 is_stmt 1
 2938 002a 013A     		subs	r2, r2, #1
 2939 002c C281     		strh	r2, [r0, #14]	@ movhi
 838:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 2940              		.loc 1 838 0
 2941 002e 6B1E     		subs	r3, r5, #1
 2942              	.LVL331:
 2943 0030 9BB2     		uxth	r3, r3
 2944 0032 8381     		strh	r3, [r0, #12]	@ movhi
 839:Dsp/letter_shell/shell.c ****         shellDeleteCommandLine(shell, 1);
 2945              		.loc 1 839 0
 2946 0034 0269     		ldr	r2, [r0, #16]
 2947 0036 0021     		movs	r1, #0
 2948              	.LVL332:
 2949 0038 D154     		strb	r1, [r2, r3]
 840:Dsp/letter_shell/shell.c ****     }
 2950              		.loc 1 840 0
 2951 003a 0121     		movs	r1, #1
 2952 003c FFF7FEFF 		bl	shellDeleteCommandLine
 2953              	.LVL333:
 2954 0040 38BD     		pop	{r3, r4, r5, pc}
 2955              	.LVL334:
 2956              	.L268:
 2957              	.LBB22:
 844:Dsp/letter_shell/shell.c ****         {
 2958              		.loc 1 844 0
 2959 0042 1BB2     		sxth	r3, r3
 2960              	.LVL335:
 2961 0044 06E0     		b	.L269
 2962              	.LVL336:
 2963              	.L270:
 846:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 2964              		.loc 1 846 0 discriminator 3
 2965 0046 2069     		ldr	r0, [r4, #16]
 2966 0048 1A44     		add	r2, r2, r3
 2967 004a 551E     		subs	r5, r2, #1
 847:Dsp/letter_shell/shell.c ****         }
 2968              		.loc 1 847 0 discriminator 3
 2969 004c 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 846:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 2970              		.loc 1 846 0 discriminator 3
 2971 004e 4255     		strb	r2, [r0, r5]
 844:Dsp/letter_shell/shell.c ****         {
 2972              		.loc 1 844 0 discriminator 3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 91


 2973 0050 0133     		adds	r3, r3, #1
 2974              	.LVL337:
 2975 0052 1BB2     		sxth	r3, r3
 2976              	.LVL338:
 2977              	.L269:
 844:Dsp/letter_shell/shell.c ****         {
 2978              		.loc 1 844 0 is_stmt 0 discriminator 1
 2979 0054 A089     		ldrh	r0, [r4, #12]
 2980 0056 E289     		ldrh	r2, [r4, #14]
 2981 0058 851A     		subs	r5, r0, r2
 2982 005a AB42     		cmp	r3, r5
 2983 005c F3DB     		blt	.L270
 2984              	.LBE22:
 849:Dsp/letter_shell/shell.c ****         if (!offset)
 2985              		.loc 1 849 0 is_stmt 1
 2986 005e 0138     		subs	r0, r0, #1
 2987 0060 A081     		strh	r0, [r4, #12]	@ movhi
 850:Dsp/letter_shell/shell.c ****         {
 2988              		.loc 1 850 0
 2989 0062 B1F1FF3F 		cmp	r1, #-1
 2990 0066 05D0     		beq	.L271
 852:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, '\b');
 2991              		.loc 1 852 0
 2992 0068 013A     		subs	r2, r2, #1
 2993 006a E281     		strh	r2, [r4, #14]	@ movhi
 853:Dsp/letter_shell/shell.c ****         }
 2994              		.loc 1 853 0
 2995 006c 0821     		movs	r1, #8
 2996              	.LVL339:
 2997 006e 2046     		mov	r0, r4
 2998 0070 FFF7FEFF 		bl	shellWriteByte
 2999              	.LVL340:
 3000              	.L271:
 855:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.cursor; i < shell->parser.length; i++)
 3001              		.loc 1 855 0
 3002 0074 2269     		ldr	r2, [r4, #16]
 3003 0076 A389     		ldrh	r3, [r4, #12]
 3004 0078 0021     		movs	r1, #0
 3005 007a D154     		strb	r1, [r2, r3]
 3006              	.LBB23:
 856:Dsp/letter_shell/shell.c ****         {
 3007              		.loc 1 856 0
 3008 007c B4F90E50 		ldrsh	r5, [r4, #14]
 3009              	.LVL341:
 3010 0080 06E0     		b	.L272
 3011              	.L273:
 858:Dsp/letter_shell/shell.c ****         }
 3012              		.loc 1 858 0 discriminator 3
 3013 0082 2369     		ldr	r3, [r4, #16]
 3014 0084 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 3015 0086 2046     		mov	r0, r4
 3016 0088 FFF7FEFF 		bl	shellWriteByte
 3017              	.LVL342:
 856:Dsp/letter_shell/shell.c ****         {
 3018              		.loc 1 856 0 discriminator 3
 3019 008c 0135     		adds	r5, r5, #1
 3020              	.LVL343:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 92


 3021 008e 2DB2     		sxth	r5, r5
 3022              	.LVL344:
 3023              	.L272:
 856:Dsp/letter_shell/shell.c ****         {
 3024              		.loc 1 856 0 is_stmt 0 discriminator 1
 3025 0090 A389     		ldrh	r3, [r4, #12]
 3026 0092 9D42     		cmp	r5, r3
 3027 0094 F5DB     		blt	.L273
 3028              	.LBE23:
 860:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor + 1; i > 0; i--)
 3029              		.loc 1 860 0 is_stmt 1
 3030 0096 2021     		movs	r1, #32
 3031 0098 2046     		mov	r0, r4
 3032 009a FFF7FEFF 		bl	shellWriteByte
 3033              	.LVL345:
 3034              	.LBB24:
 861:Dsp/letter_shell/shell.c ****         {
 3035              		.loc 1 861 0
 3036 009e A389     		ldrh	r3, [r4, #12]
 3037 00a0 E589     		ldrh	r5, [r4, #14]
 3038              	.LVL346:
 3039 00a2 5D1B     		subs	r5, r3, r5
 3040 00a4 0135     		adds	r5, r5, #1
 3041 00a6 2DB2     		sxth	r5, r5
 3042              	.LVL347:
 3043 00a8 05E0     		b	.L274
 3044              	.L275:
 863:Dsp/letter_shell/shell.c ****         }
 3045              		.loc 1 863 0 discriminator 3
 3046 00aa 0821     		movs	r1, #8
 3047 00ac 2046     		mov	r0, r4
 3048 00ae FFF7FEFF 		bl	shellWriteByte
 3049              	.LVL348:
 861:Dsp/letter_shell/shell.c ****         {
 3050              		.loc 1 861 0 discriminator 3
 3051 00b2 013D     		subs	r5, r5, #1
 3052              	.LVL349:
 3053 00b4 2DB2     		sxth	r5, r5
 3054              	.LVL350:
 3055              	.L274:
 861:Dsp/letter_shell/shell.c ****         {
 3056              		.loc 1 861 0 is_stmt 0 discriminator 1
 3057 00b6 002D     		cmp	r5, #0
 3058 00b8 F7DC     		bgt	.L275
 3059              	.LVL351:
 3060              	.L264:
 3061 00ba 38BD     		pop	{r3, r4, r5, pc}
 3062              	.LBE24:
 3063              		.cfi_endproc
 3064              	.LFE149:
 3066              		.section	.text.shellBackspace,"ax",%progbits
 3067              		.align	2
 3068              		.global	shellBackspace
 3069              		.thumb
 3070              		.thumb_func
 3072              	shellBackspace:
 3073              	.LFB170:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 93


1579:Dsp/letter_shell/shell.c ****     shellDeleteByte(shell, 1);
 3074              		.loc 1 1579 0 is_stmt 1
 3075              		.cfi_startproc
 3076              		@ args = 0, pretend = 0, frame = 0
 3077              		@ frame_needed = 0, uses_anonymous_args = 0
 3078              	.LVL352:
 3079 0000 08B5     		push	{r3, lr}
 3080              	.LCFI56:
 3081              		.cfi_def_cfa_offset 8
 3082              		.cfi_offset 3, -8
 3083              		.cfi_offset 14, -4
1580:Dsp/letter_shell/shell.c **** }
 3084              		.loc 1 1580 0
 3085 0002 0121     		movs	r1, #1
 3086 0004 FFF7FEFF 		bl	shellDeleteByte
 3087              	.LVL353:
 3088 0008 08BD     		pop	{r3, pc}
 3089              		.cfi_endproc
 3090              	.LFE170:
 3092 000a 00BF     		.section	.text.shellDelete,"ax",%progbits
 3093              		.align	2
 3094              		.global	shellDelete
 3095              		.thumb
 3096              		.thumb_func
 3098              	shellDelete:
 3099              	.LFB171:
1594:Dsp/letter_shell/shell.c ****     shellDeleteByte(shell, -1);
 3100              		.loc 1 1594 0
 3101              		.cfi_startproc
 3102              		@ args = 0, pretend = 0, frame = 0
 3103              		@ frame_needed = 0, uses_anonymous_args = 0
 3104              	.LVL354:
 3105 0000 08B5     		push	{r3, lr}
 3106              	.LCFI57:
 3107              		.cfi_def_cfa_offset 8
 3108              		.cfi_offset 3, -8
 3109              		.cfi_offset 14, -4
1595:Dsp/letter_shell/shell.c **** }
 3110              		.loc 1 1595 0
 3111 0002 4FF0FF31 		mov	r1, #-1
 3112 0006 FFF7FEFF 		bl	shellDeleteByte
 3113              	.LVL355:
 3114 000a 08BD     		pop	{r3, pc}
 3115              		.cfi_endproc
 3116              	.LFE171:
 3118              		.section	.text.shellSeekCommand,"ax",%progbits
 3119              		.align	2
 3120              		.global	shellSeekCommand
 3121              		.thumb
 3122              		.thumb_func
 3124              	shellSeekCommand:
 3125              	.LFB152:
 956:Dsp/letter_shell/shell.c ****     const char *name;
 3126              		.loc 1 956 0
 3127              		.cfi_startproc
 3128              		@ args = 0, pretend = 0, frame = 0
 3129              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 94


 3130              	.LVL356:
 3131 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3132              	.LCFI58:
 3133              		.cfi_def_cfa_offset 32
 3134              		.cfi_offset 4, -32
 3135              		.cfi_offset 5, -28
 3136              		.cfi_offset 6, -24
 3137              		.cfi_offset 7, -20
 3138              		.cfi_offset 8, -16
 3139              		.cfi_offset 9, -12
 3140              		.cfi_offset 10, -8
 3141              		.cfi_offset 14, -4
 3142 0004 8046     		mov	r8, r0
 3143 0006 8A46     		mov	r10, r1
 3144 0008 1746     		mov	r7, r2
 3145 000a 9946     		mov	r9, r3
 959:Dsp/letter_shell/shell.c ****         ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 3146              		.loc 1 959 0
 3147 000c B0F85C30 		ldrh	r3, [r0, #92]
 3148              	.LVL357:
 960:Dsp/letter_shell/shell.c ****     for (unsigned short i = 0; i < count; i++)
 3149              		.loc 1 960 0
 3150 0010 866D     		ldr	r6, [r0, #88]
 3151 0012 961B     		subs	r6, r2, r6
 959:Dsp/letter_shell/shell.c ****         ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 3152              		.loc 1 959 0
 3153 0014 A3EB1616 		sub	r6, r3, r6, lsr #4
 3154 0018 B6B2     		uxth	r6, r6
 3155              	.LVL358:
 3156              	.LBB25:
 961:Dsp/letter_shell/shell.c ****     {
 3157              		.loc 1 961 0
 3158 001a 0024     		movs	r4, #0
 3159 001c 1EE0     		b	.L282
 3160              	.LVL359:
 3161              	.L286:
 963:Dsp/letter_shell/shell.c ****             || shellCheckPermission(shell, &base[i]) != 0)
 3162              		.loc 1 963 0
 3163 001e 07EB0415 		add	r5, r7, r4, lsl #4
 3164 0022 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3165 0024 03F00F03 		and	r3, r3, #15
 3166 0028 092B     		cmp	r3, #9
 3167 002a 15D0     		beq	.L283
 964:Dsp/letter_shell/shell.c ****         {
 3168              		.loc 1 964 0
 3169 002c 2946     		mov	r1, r5
 3170 002e 4046     		mov	r0, r8
 3171 0030 FFF7FEFF 		bl	shellCheckPermission
 3172              	.LVL360:
 3173 0034 80B9     		cbnz	r0, .L283
 968:Dsp/letter_shell/shell.c ****         if (!compareLength)
 3174              		.loc 1 968 0
 3175 0036 2846     		mov	r0, r5
 3176 0038 FFF7FEFF 		bl	shellGetCommandName
 3177              	.LVL361:
 3178 003c 0146     		mov	r1, r0
 3179              	.LVL362:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 95


 969:Dsp/letter_shell/shell.c ****         {
 3180              		.loc 1 969 0
 3181 003e B9F1000F 		cmp	r9, #0
 3182 0042 04D1     		bne	.L284
 972:Dsp/letter_shell/shell.c ****             {
 3183              		.loc 1 972 0
 3184 0044 5046     		mov	r0, r10
 3185              	.LVL363:
 3186 0046 FFF7FEFF 		bl	strcmp
 3187              	.LVL364:
 3188 004a 28B9     		cbnz	r0, .L283
 3189 004c 09E0     		b	.L285
 3190              	.LVL365:
 3191              	.L284:
 979:Dsp/letter_shell/shell.c ****             {
 3192              		.loc 1 979 0
 3193 004e 4A46     		mov	r2, r9
 3194 0050 5046     		mov	r0, r10
 3195              	.LVL366:
 3196 0052 FFF7FEFF 		bl	strncmp
 3197              	.LVL367:
 3198 0056 20B1     		cbz	r0, .L285
 3199              	.L283:
 961:Dsp/letter_shell/shell.c ****     {
 3200              		.loc 1 961 0 discriminator 2
 3201 0058 0134     		adds	r4, r4, #1
 3202              	.LVL368:
 3203 005a A4B2     		uxth	r4, r4
 3204              	.LVL369:
 3205              	.L282:
 961:Dsp/letter_shell/shell.c ****     {
 3206              		.loc 1 961 0 is_stmt 0 discriminator 1
 3207 005c B442     		cmp	r4, r6
 3208 005e DED3     		bcc	.L286
 3209              	.LBE25:
 985:Dsp/letter_shell/shell.c **** }
 3210              		.loc 1 985 0 is_stmt 1
 3211 0060 0025     		movs	r5, #0
 3212              	.L285:
 986:Dsp/letter_shell/shell.c **** 
 3213              		.loc 1 986 0
 3214 0062 2846     		mov	r0, r5
 3215 0064 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3216              		.cfi_endproc
 3217              	.LFE152:
 3219              		.section	.text.shellInit,"ax",%progbits
 3220              		.align	2
 3221              		.global	shellInit
 3222              		.thumb
 3223              		.thumb_func
 3225              	shellInit:
 3226              	.LFB124:
 172:Dsp/letter_shell/shell.c ****     shell->parser.length = 0;
 3227              		.loc 1 172 0
 3228              		.cfi_startproc
 3229              		@ args = 0, pretend = 0, frame = 0
 3230              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 96


 3231              	.LVL370:
 3232 0000 38B5     		push	{r3, r4, r5, lr}
 3233              	.LCFI59:
 3234              		.cfi_def_cfa_offset 16
 3235              		.cfi_offset 3, -16
 3236              		.cfi_offset 4, -12
 3237              		.cfi_offset 5, -8
 3238              		.cfi_offset 14, -4
 3239 0002 0446     		mov	r4, r0
 173:Dsp/letter_shell/shell.c ****     shell->parser.cursor = 0;
 3240              		.loc 1 173 0
 3241 0004 0023     		movs	r3, #0
 3242 0006 8381     		strh	r3, [r0, #12]	@ movhi
 174:Dsp/letter_shell/shell.c ****     shell->history.offset = 0;
 3243              		.loc 1 174 0
 3244 0008 C381     		strh	r3, [r0, #14]	@ movhi
 175:Dsp/letter_shell/shell.c ****     shell->history.number = 0;
 3245              		.loc 1 175 0
 3246 000a A0F85430 		strh	r3, [r0, #84]	@ movhi
 176:Dsp/letter_shell/shell.c ****     shell->history.record = 0;
 3247              		.loc 1 176 0
 3248 000e A0F85030 		strh	r3, [r0, #80]	@ movhi
 177:Dsp/letter_shell/shell.c ****     shell->info.user = NULL;
 3249              		.loc 1 177 0
 3250 0012 A0F85230 		strh	r3, [r0, #82]	@ movhi
 178:Dsp/letter_shell/shell.c ****     shell->status.isChecked = 1;
 3251              		.loc 1 178 0
 3252 0016 0360     		str	r3, [r0]
 179:Dsp/letter_shell/shell.c **** 
 3253              		.loc 1 179 0
 3254 0018 90F86000 		ldrb	r0, [r0, #96]	@ zero_extendqisi2
 3255              	.LVL371:
 3256 001c 40F00100 		orr	r0, r0, #1
 3257 0020 84F86000 		strb	r0, [r4, #96]
 181:Dsp/letter_shell/shell.c ****     shell->parser.bufferSize = size / (SHELL_HISTORY_MAX_NUMBER + 1);
 3258              		.loc 1 181 0
 3259 0024 2161     		str	r1, [r4, #16]
 182:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_HISTORY_MAX_NUMBER; i++)
 3260              		.loc 1 182 0
 3261 0026 1548     		ldr	r0, .L292
 3262 0028 A0FB0202 		umull	r0, r2, r0, r2
 3263              	.LVL372:
 3264 002c 9208     		lsrs	r2, r2, #2
 3265 002e A286     		strh	r2, [r4, #52]	@ movhi
 3266              	.LVL373:
 3267              	.LBB26:
 183:Dsp/letter_shell/shell.c ****     {
 3268              		.loc 1 183 0
 3269 0030 09E0     		b	.L289
 3270              	.LVL374:
 3271              	.L290:
 185:Dsp/letter_shell/shell.c ****     }
 3272              		.loc 1 185 0 discriminator 3
 3273 0032 03FB0225 		mla	r5, r3, r2, r2
 3274 0036 0D44     		add	r5, r5, r1
 3275 0038 03F10E00 		add	r0, r3, #14
 3276 003c 04EB8000 		add	r0, r4, r0, lsl #2
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 97


 3277 0040 4560     		str	r5, [r0, #4]
 183:Dsp/letter_shell/shell.c ****     {
 3278              		.loc 1 183 0 discriminator 3
 3279 0042 0133     		adds	r3, r3, #1
 3280              	.LVL375:
 3281 0044 1BB2     		sxth	r3, r3
 3282              	.LVL376:
 3283              	.L289:
 183:Dsp/letter_shell/shell.c ****     {
 3284              		.loc 1 183 0 is_stmt 0 discriminator 1
 3285 0046 042B     		cmp	r3, #4
 3286 0048 F3DD     		ble	.L290
 3287              	.LBE26:
 201:Dsp/letter_shell/shell.c ****         shell->commandList.count = ((unsigned int)(&_shell_command_end)
 3288              		.loc 1 201 0 is_stmt 1
 3289 004a 0D4A     		ldr	r2, .L292+4
 3290 004c A265     		str	r2, [r4, #88]
 202:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(&_shell_command_start))
 3291              		.loc 1 202 0
 3292 004e 0D4B     		ldr	r3, .L292+8
 3293              	.LVL377:
 203:Dsp/letter_shell/shell.c ****                                 / sizeof(ShellCommand);
 3294              		.loc 1 203 0
 3295 0050 9B1A     		subs	r3, r3, r2
 204:Dsp/letter_shell/shell.c ****     #else
 3296              		.loc 1 204 0
 3297 0052 1B09     		lsrs	r3, r3, #4
 202:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(&_shell_command_start))
 3298              		.loc 1 202 0
 3299 0054 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 213:Dsp/letter_shell/shell.c **** 
 3300              		.loc 1 213 0
 3301 0058 2046     		mov	r0, r4
 3302 005a FFF7FEFF 		bl	shellAdd
 3303              	.LVL378:
 215:Dsp/letter_shell/shell.c ****                                          SHELL_DEFAULT_USER,
 3304              		.loc 1 215 0
 3305 005e 0023     		movs	r3, #0
 3306 0060 A26D     		ldr	r2, [r4, #88]
 3307 0062 0949     		ldr	r1, .L292+12
 3308 0064 2046     		mov	r0, r4
 3309 0066 FFF7FEFF 		bl	shellSeekCommand
 3310              	.LVL379:
 3311 006a 0146     		mov	r1, r0
 3312 006c 2046     		mov	r0, r4
 3313 006e FFF7FEFF 		bl	shellSetUser
 3314              	.LVL380:
 219:Dsp/letter_shell/shell.c **** }
 3315              		.loc 1 219 0
 3316 0072 0121     		movs	r1, #1
 3317 0074 2046     		mov	r0, r4
 3318 0076 FFF7FEFF 		bl	shellWriteCommandLine
 3319              	.LVL381:
 3320 007a 38BD     		pop	{r3, r4, r5, pc}
 3321              	.LVL382:
 3322              	.L293:
 3323              		.align	2
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 98


 3324              	.L292:
 3325 007c ABAAAAAA 		.word	-1431655765
 3326 0080 00000000 		.word	_shell_command_start
 3327 0084 00000000 		.word	_shell_command_end
 3328 0088 88020000 		.word	.LC22
 3329              		.cfi_endproc
 3330              	.LFE124:
 3332              		.section	.text.shellHelp,"ax",%progbits
 3333              		.align	2
 3334              		.global	shellHelp
 3335              		.thumb
 3336              		.thumb_func
 3338              	shellHelp:
 3339              	.LFB173:
1632:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 3340              		.loc 1 1632 0
 3341              		.cfi_startproc
 3342              		@ args = 0, pretend = 0, frame = 0
 3343              		@ frame_needed = 0, uses_anonymous_args = 0
 3344              	.LVL383:
 3345 0000 70B5     		push	{r4, r5, r6, lr}
 3346              	.LCFI60:
 3347              		.cfi_def_cfa_offset 16
 3348              		.cfi_offset 4, -16
 3349              		.cfi_offset 5, -12
 3350              		.cfi_offset 6, -8
 3351              		.cfi_offset 14, -4
 3352 0002 0546     		mov	r5, r0
 3353 0004 0E46     		mov	r6, r1
1633:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell, return);
 3354              		.loc 1 1633 0
 3355 0006 FFF7FEFF 		bl	shellGetCurrent
 3356              	.LVL384:
1634:Dsp/letter_shell/shell.c ****     if (argc == 1)
 3357              		.loc 1 1634 0
 3358 000a 70B3     		cbz	r0, .L294
 3359 000c 0446     		mov	r4, r0
1635:Dsp/letter_shell/shell.c ****     {
 3360              		.loc 1 1635 0
 3361 000e 012D     		cmp	r5, #1
 3362 0010 02D1     		bne	.L296
1637:Dsp/letter_shell/shell.c ****     }
 3363              		.loc 1 1637 0
 3364 0012 FFF7FEFF 		bl	shellListAll
 3365              	.LVL385:
 3366 0016 70BD     		pop	{r4, r5, r6, pc}
 3367              	.LVL386:
 3368              	.L296:
1639:Dsp/letter_shell/shell.c ****     {
 3369              		.loc 1 1639 0
 3370 0018 012D     		cmp	r5, #1
 3371 001a 26DD     		ble	.L294
 3372              	.LBB27:
1641:Dsp/letter_shell/shell.c ****                                                  argv[1],
 3373              		.loc 1 1641 0
 3374 001c 0023     		movs	r3, #0
 3375 001e 826D     		ldr	r2, [r0, #88]
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 99


 3376 0020 7168     		ldr	r1, [r6, #4]
 3377 0022 FFF7FEFF 		bl	shellSeekCommand
 3378              	.LVL387:
1645:Dsp/letter_shell/shell.c ****         {
 3379              		.loc 1 1645 0
 3380 0026 0546     		mov	r5, r0
 3381              	.LVL388:
 3382 0028 D8B1     		cbz	r0, .L297
1647:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellGetCommandName(command));
 3383              		.loc 1 1647 0
 3384 002a 1049     		ldr	r1, .L299
 3385 002c 2046     		mov	r0, r4
 3386              	.LVL389:
 3387 002e FFF7FEFF 		bl	shellWriteString
 3388              	.LVL390:
1648:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
 3389              		.loc 1 1648 0
 3390 0032 2846     		mov	r0, r5
 3391 0034 FFF7FEFF 		bl	shellGetCommandName
 3392              	.LVL391:
 3393 0038 0146     		mov	r1, r0
 3394 003a 2046     		mov	r0, r4
 3395 003c FFF7FEFF 		bl	shellWriteString
 3396              	.LVL392:
1649:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellGetCommandDesc(command));
 3397              		.loc 1 1649 0
 3398 0040 0B4E     		ldr	r6, .L299+4
 3399              	.LVL393:
 3400 0042 3146     		mov	r1, r6
 3401 0044 2046     		mov	r0, r4
 3402 0046 FFF7FEFF 		bl	shellWriteString
 3403              	.LVL394:
1650:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
 3404              		.loc 1 1650 0
 3405 004a 2846     		mov	r0, r5
 3406 004c FFF7FEFF 		bl	shellGetCommandDesc
 3407              	.LVL395:
 3408 0050 0146     		mov	r1, r0
 3409 0052 2046     		mov	r0, r4
 3410 0054 FFF7FEFF 		bl	shellWriteString
 3411              	.LVL396:
1651:Dsp/letter_shell/shell.c ****         }
 3412              		.loc 1 1651 0
 3413 0058 3146     		mov	r1, r6
 3414 005a 2046     		mov	r0, r4
 3415 005c FFF7FEFF 		bl	shellWriteString
 3416              	.LVL397:
 3417 0060 70BD     		pop	{r4, r5, r6, pc}
 3418              	.LVL398:
 3419              	.L297:
1655:Dsp/letter_shell/shell.c ****         }
 3420              		.loc 1 1655 0
 3421 0062 0449     		ldr	r1, .L299+8
 3422 0064 2046     		mov	r0, r4
 3423              	.LVL399:
 3424 0066 FFF7FEFF 		bl	shellWriteString
 3425              	.LVL400:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 100


 3426              	.L294:
 3427 006a 70BD     		pop	{r4, r5, r6, pc}
 3428              	.LVL401:
 3429              	.L300:
 3430              		.align	2
 3431              	.L299:
 3432 006c 8C020000 		.word	.LC23
 3433 0070 A0010000 		.word	.LC3
 3434 0074 A0020000 		.word	.LC24
 3435              	.LBE27:
 3436              		.cfi_endproc
 3437              	.LFE173:
 3439              		.section	.text.shellGetVarValue,"ax",%progbits
 3440              		.align	2
 3441              		.global	shellGetVarValue
 3442              		.thumb
 3443              		.thumb_func
 3445              	shellGetVarValue:
 3446              	.LFB153:
 997:Dsp/letter_shell/shell.c ****     int value = 0;
 3447              		.loc 1 997 0
 3448              		.cfi_startproc
 3449              		@ args = 0, pretend = 0, frame = 0
 3450              		@ frame_needed = 0, uses_anonymous_args = 0
 3451              	.LVL402:
 3452 0000 08B5     		push	{r3, lr}
 3453              	.LCFI61:
 3454              		.cfi_def_cfa_offset 8
 3455              		.cfi_offset 3, -8
 3456              		.cfi_offset 14, -4
 3457              	.LVL403:
 999:Dsp/letter_shell/shell.c ****     {
 3458              		.loc 1 999 0
 3459 0002 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3460 0004 03F00F03 		and	r3, r3, #15
 3461 0008 023B     		subs	r3, r3, #2
 3462 000a 052B     		cmp	r3, #5
 3463 000c 16D8     		bhi	.L309
 3464 000e DFE803F0 		tbb	[pc, r3]
 3465              	.L304:
 3466 0012 03       		.byte	(.L303-.L304)/2
 3467 0013 06       		.byte	(.L305-.L304)/2
 3468 0014 0A       		.byte	(.L306-.L304)/2
 3469 0015 0D       		.byte	(.L307-.L304)/2
 3470 0016 0D       		.byte	(.L307-.L304)/2
 3471 0017 0F       		.byte	(.L308-.L304)/2
 3472              		.p2align 1
 3473              	.L303:
1002:Dsp/letter_shell/shell.c ****         break;
 3474              		.loc 1 1002 0
 3475 0018 8B68     		ldr	r3, [r1, #8]
 3476 001a 1868     		ldr	r0, [r3]
 3477              	.LVL404:
1003:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_SHORT:
 3478              		.loc 1 1003 0
 3479 001c 08BD     		pop	{r3, pc}
 3480              	.LVL405:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 101


 3481              	.L305:
1005:Dsp/letter_shell/shell.c ****         break;
 3482              		.loc 1 1005 0
 3483 001e 8B68     		ldr	r3, [r1, #8]
 3484 0020 B3F90000 		ldrsh	r0, [r3]
 3485              	.LVL406:
1006:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_CHAR:
 3486              		.loc 1 1006 0
 3487 0024 08BD     		pop	{r3, pc}
 3488              	.LVL407:
 3489              	.L306:
1008:Dsp/letter_shell/shell.c ****         break;
 3490              		.loc 1 1008 0
 3491 0026 8B68     		ldr	r3, [r1, #8]
 3492 0028 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3493              	.LVL408:
1009:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
 3494              		.loc 1 1009 0
 3495 002a 08BD     		pop	{r3, pc}
 3496              	.LVL409:
 3497              	.L307:
1012:Dsp/letter_shell/shell.c ****         break;
 3498              		.loc 1 1012 0
 3499 002c 8868     		ldr	r0, [r1, #8]
 3500              	.LVL410:
1013:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_NODE:
 3501              		.loc 1 1013 0
 3502 002e 08BD     		pop	{r3, pc}
 3503              	.LVL411:
 3504              	.L308:
1015:Dsp/letter_shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)
 3505              		.loc 1 1015 0
 3506 0030 8A68     		ldr	r2, [r1, #8]
 3507 0032 5368     		ldr	r3, [r2, #4]
1017:Dsp/letter_shell/shell.c ****         break;
 3508              		.loc 1 1017 0
 3509 0034 23B1     		cbz	r3, .L310
1017:Dsp/letter_shell/shell.c ****         break;
 3510              		.loc 1 1017 0 is_stmt 0 discriminator 1
 3511 0036 1068     		ldr	r0, [r2]
 3512              	.LVL412:
 3513 0038 9847     		blx	r3
 3514              	.LVL413:
 3515 003a 08BD     		pop	{r3, pc}
 3516              	.LVL414:
 3517              	.L309:
 998:Dsp/letter_shell/shell.c ****     switch (command->attr.attrs.type)
 3518              		.loc 1 998 0 is_stmt 1
 3519 003c 0020     		movs	r0, #0
 3520              	.LVL415:
 3521 003e 08BD     		pop	{r3, pc}
 3522              	.LVL416:
 3523              	.L310:
1017:Dsp/letter_shell/shell.c ****         break;
 3524              		.loc 1 1017 0
 3525 0040 0020     		movs	r0, #0
 3526              	.LVL417:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 102


1023:Dsp/letter_shell/shell.c **** 
 3527              		.loc 1 1023 0
 3528 0042 08BD     		pop	{r3, pc}
 3529              		.cfi_endproc
 3530              	.LFE153:
 3532              		.section	.text.shellShowVar,"ax",%progbits
 3533              		.align	2
 3534              		.thumb
 3535              		.thumb_func
 3537              	shellShowVar:
 3538              	.LFB155:
1089:Dsp/letter_shell/shell.c ****     char buffer[12] = "00000000000";
 3539              		.loc 1 1089 0
 3540              		.cfi_startproc
 3541              		@ args = 0, pretend = 0, frame = 16
 3542              		@ frame_needed = 0, uses_anonymous_args = 0
 3543              	.LVL418:
 3544 0000 70B5     		push	{r4, r5, r6, lr}
 3545              	.LCFI62:
 3546              		.cfi_def_cfa_offset 16
 3547              		.cfi_offset 4, -16
 3548              		.cfi_offset 5, -12
 3549              		.cfi_offset 6, -8
 3550              		.cfi_offset 14, -4
 3551 0002 84B0     		sub	sp, sp, #16
 3552              	.LCFI63:
 3553              		.cfi_def_cfa_offset 32
 3554 0004 0446     		mov	r4, r0
 3555 0006 0E46     		mov	r6, r1
1090:Dsp/letter_shell/shell.c ****     int value = shellGetVarValue(shell, command);
 3556              		.loc 1 1090 0
 3557 0008 274B     		ldr	r3, .L320
 3558 000a 93E80700 		ldmia	r3, {r0, r1, r2}
 3559              	.LVL419:
 3560 000e 04AB     		add	r3, sp, #16
 3561 0010 03E90700 		stmdb	r3, {r0, r1, r2}
1091:Dsp/letter_shell/shell.c ****     
 3562              		.loc 1 1091 0
 3563 0014 3146     		mov	r1, r6
 3564 0016 2046     		mov	r0, r4
 3565 0018 FFF7FEFF 		bl	shellGetVarValue
 3566              	.LVL420:
 3567 001c 0546     		mov	r5, r0
 3568              	.LVL421:
1093:Dsp/letter_shell/shell.c ****     shellWriteString(shell, " = ");
 3569              		.loc 1 1093 0
 3570 001e 7168     		ldr	r1, [r6, #4]
 3571 0020 2046     		mov	r0, r4
 3572              	.LVL422:
 3573 0022 FFF7FEFF 		bl	shellWriteString
 3574              	.LVL423:
1094:Dsp/letter_shell/shell.c **** 
 3575              		.loc 1 1094 0
 3576 0026 2149     		ldr	r1, .L320+4
 3577 0028 2046     		mov	r0, r4
 3578 002a FFF7FEFF 		bl	shellWriteString
 3579              	.LVL424:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 103


1096:Dsp/letter_shell/shell.c ****     {
 3580              		.loc 1 1096 0
 3581 002e 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 3582 0030 03F00F03 		and	r3, r3, #15
 3583 0034 052B     		cmp	r3, #5
 3584 0036 0DD1     		bne	.L318
1099:Dsp/letter_shell/shell.c ****         shellWriteString(shell, (char *)value);
 3585              		.loc 1 1099 0
 3586 0038 1D4E     		ldr	r6, .L320+8
 3587              	.LVL425:
 3588 003a 3146     		mov	r1, r6
 3589 003c 2046     		mov	r0, r4
 3590 003e FFF7FEFF 		bl	shellWriteString
 3591              	.LVL426:
1100:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\"");
 3592              		.loc 1 1100 0
 3593 0042 2946     		mov	r1, r5
 3594 0044 2046     		mov	r0, r4
 3595 0046 FFF7FEFF 		bl	shellWriteString
 3596              	.LVL427:
1101:Dsp/letter_shell/shell.c ****         break;
 3597              		.loc 1 1101 0
 3598 004a 3146     		mov	r1, r6
 3599 004c 2046     		mov	r0, r4
 3600 004e FFF7FEFF 		bl	shellWriteString
 3601              	.LVL428:
1102:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_INT:
 3602              		.loc 1 1102 0
 3603 0052 21E0     		b	.L315
 3604              	.LVL429:
 3605              	.L318:
1108:Dsp/letter_shell/shell.c ****         shellWriteString(shell, ", 0x");
 3606              		.loc 1 1108 0
 3607 0054 01A9     		add	r1, sp, #4
 3608 0056 2846     		mov	r0, r5
 3609 0058 FFF7FEFF 		bl	shellToDec
 3610              	.LVL430:
 3611 005c C0F10B01 		rsb	r1, r0, #11
 3612 0060 01AB     		add	r3, sp, #4
 3613 0062 1944     		add	r1, r1, r3
 3614 0064 2046     		mov	r0, r4
 3615 0066 FFF7FEFF 		bl	shellWriteString
 3616              	.LVL431:
1109:Dsp/letter_shell/shell.c ****         for (short i = 0; i < 11; i++)
 3617              		.loc 1 1109 0
 3618 006a 1249     		ldr	r1, .L320+12
 3619 006c 2046     		mov	r0, r4
 3620 006e FFF7FEFF 		bl	shellWriteString
 3621              	.LVL432:
 3622              	.LBB28:
1110:Dsp/letter_shell/shell.c ****         {
 3623              		.loc 1 1110 0
 3624 0072 0023     		movs	r3, #0
 3625 0074 06E0     		b	.L316
 3626              	.LVL433:
 3627              	.L317:
1112:Dsp/letter_shell/shell.c ****         }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 104


 3628              		.loc 1 1112 0 discriminator 3
 3629 0076 04AA     		add	r2, sp, #16
 3630 0078 1A44     		add	r2, r2, r3
 3631 007a 3021     		movs	r1, #48
 3632 007c 02F80C1C 		strb	r1, [r2, #-12]
1110:Dsp/letter_shell/shell.c ****         {
 3633              		.loc 1 1110 0 discriminator 3
 3634 0080 0133     		adds	r3, r3, #1
 3635              	.LVL434:
 3636 0082 1BB2     		sxth	r3, r3
 3637              	.LVL435:
 3638              	.L316:
1110:Dsp/letter_shell/shell.c ****         {
 3639              		.loc 1 1110 0 is_stmt 0 discriminator 1
 3640 0084 0A2B     		cmp	r3, #10
 3641 0086 F6DD     		ble	.L317
 3642              	.LBE28:
1114:Dsp/letter_shell/shell.c ****         shellWriteString(shell, buffer);
 3643              		.loc 1 1114 0 is_stmt 1
 3644 0088 01A9     		add	r1, sp, #4
 3645 008a 2846     		mov	r0, r5
 3646 008c FFF7FEFF 		bl	shellToHex
 3647              	.LVL436:
1115:Dsp/letter_shell/shell.c ****         break;
 3648              		.loc 1 1115 0
 3649 0090 01A9     		add	r1, sp, #4
 3650 0092 2046     		mov	r0, r4
 3651 0094 FFF7FEFF 		bl	shellWriteString
 3652              	.LVL437:
 3653              	.L315:
1119:Dsp/letter_shell/shell.c ****     return value;
 3654              		.loc 1 1119 0
 3655 0098 0749     		ldr	r1, .L320+16
 3656 009a 2046     		mov	r0, r4
 3657 009c FFF7FEFF 		bl	shellWriteString
 3658              	.LVL438:
1121:Dsp/letter_shell/shell.c **** 
 3659              		.loc 1 1121 0
 3660 00a0 2846     		mov	r0, r5
 3661 00a2 04B0     		add	sp, sp, #16
 3662              	.LCFI64:
 3663              		.cfi_def_cfa_offset 16
 3664              		@ sp needed
 3665 00a4 70BD     		pop	{r4, r5, r6, pc}
 3666              	.LVL439:
 3667              	.L321:
 3668 00a6 00BF     		.align	2
 3669              	.L320:
 3670 00a8 F0010000 		.word	.LC8
 3671 00ac B4020000 		.word	.LC25
 3672 00b0 B8020000 		.word	.LC26
 3673 00b4 E8010000 		.word	.LC10
 3674 00b8 A0010000 		.word	.LC3
 3675              		.cfi_endproc
 3676              	.LFE155:
 3678              		.section	.text.shellSetVarValue,"ax",%progbits
 3679              		.align	2
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 105


 3680              		.global	shellSetVarValue
 3681              		.thumb
 3682              		.thumb_func
 3684              	shellSetVarValue:
 3685              	.LFB154:
1035:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.readOnly)
 3686              		.loc 1 1035 0
 3687              		.cfi_startproc
 3688              		@ args = 0, pretend = 0, frame = 0
 3689              		@ frame_needed = 0, uses_anonymous_args = 0
 3690              	.LVL440:
 3691 0000 38B5     		push	{r3, r4, r5, lr}
 3692              	.LCFI65:
 3693              		.cfi_def_cfa_offset 16
 3694              		.cfi_offset 3, -16
 3695              		.cfi_offset 4, -12
 3696              		.cfi_offset 5, -8
 3697              		.cfi_offset 14, -4
 3698 0002 0546     		mov	r5, r0
 3699 0004 0C46     		mov	r4, r1
1036:Dsp/letter_shell/shell.c ****     {
 3700              		.loc 1 1036 0
 3701 0006 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3702 0008 13F0400F 		tst	r3, #64
 3703 000c 03D0     		beq	.L323
1038:Dsp/letter_shell/shell.c ****     }
 3704              		.loc 1 1038 0
 3705 000e 1849     		ldr	r1, .L334
 3706              	.LVL441:
 3707 0010 FFF7FEFF 		bl	shellWriteString
 3708              	.LVL442:
 3709 0014 26E0     		b	.L324
 3710              	.LVL443:
 3711              	.L323:
1042:Dsp/letter_shell/shell.c ****         {
 3712              		.loc 1 1042 0
 3713 0016 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3714 0018 03F00F03 		and	r3, r3, #15
 3715 001c 023B     		subs	r3, r3, #2
 3716 001e 052B     		cmp	r3, #5
 3717 0020 20D8     		bhi	.L324
 3718 0022 DFE803F0 		tbb	[pc, r3]
 3719              	.LVL444:
 3720              	.L326:
 3721 0026 03       		.byte	(.L325-.L326)/2
 3722 0027 06       		.byte	(.L327-.L326)/2
 3723 0028 09       		.byte	(.L328-.L326)/2
 3724 0029 0C       		.byte	(.L329-.L326)/2
 3725 002a 11       		.byte	(.L330-.L326)/2
 3726 002b 15       		.byte	(.L331-.L326)/2
 3727              		.p2align 1
 3728              	.L325:
1045:Dsp/letter_shell/shell.c ****             break;
 3729              		.loc 1 1045 0
 3730 002c A368     		ldr	r3, [r4, #8]
 3731 002e 1A60     		str	r2, [r3]
1046:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_SHORT:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 106


 3732              		.loc 1 1046 0
 3733 0030 18E0     		b	.L324
 3734              	.L327:
1048:Dsp/letter_shell/shell.c ****             break;
 3735              		.loc 1 1048 0
 3736 0032 A368     		ldr	r3, [r4, #8]
 3737 0034 1A80     		strh	r2, [r3]	@ movhi
1049:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_CHAR:
 3738              		.loc 1 1049 0
 3739 0036 15E0     		b	.L324
 3740              	.L328:
1051:Dsp/letter_shell/shell.c ****             break;
 3741              		.loc 1 1051 0
 3742 0038 A368     		ldr	r3, [r4, #8]
 3743 003a 1A70     		strb	r2, [r3]
1052:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_STRING:
 3744              		.loc 1 1052 0
 3745 003c 12E0     		b	.L324
 3746              	.L329:
1054:Dsp/letter_shell/shell.c ****             break;
 3747              		.loc 1 1054 0
 3748 003e 1146     		mov	r1, r2
 3749 0040 A068     		ldr	r0, [r4, #8]
 3750              	.LVL445:
 3751 0042 FFF7FEFF 		bl	shellStringCopy
 3752              	.LVL446:
1055:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_POINT:
 3753              		.loc 1 1055 0
 3754 0046 0DE0     		b	.L324
 3755              	.LVL447:
 3756              	.L330:
1057:Dsp/letter_shell/shell.c ****             break;
 3757              		.loc 1 1057 0
 3758 0048 0A49     		ldr	r1, .L334+4
 3759 004a FFF7FEFF 		bl	shellWriteString
 3760              	.LVL448:
1058:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_NODE:
 3761              		.loc 1 1058 0
 3762 004e 09E0     		b	.L324
 3763              	.LVL449:
 3764              	.L331:
1060:Dsp/letter_shell/shell.c ****             {
 3765              		.loc 1 1060 0
 3766 0050 A168     		ldr	r1, [r4, #8]
 3767 0052 8B68     		ldr	r3, [r1, #8]
 3768 0054 33B1     		cbz	r3, .L324
1062:Dsp/letter_shell/shell.c ****                 {
 3769              		.loc 1 1062 0
 3770 0056 0868     		ldr	r0, [r1]
 3771              	.LVL450:
 3772 0058 10B1     		cbz	r0, .L332
1064:Dsp/letter_shell/shell.c ****                         ->set(((ShellNodeVarAttr *)command->data.var.value)->var, value);
 3773              		.loc 1 1064 0
 3774 005a 1146     		mov	r1, r2
 3775 005c 9847     		blx	r3
 3776              	.LVL451:
 3777 005e 01E0     		b	.L324
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 107


 3778              	.LVL452:
 3779              	.L332:
1069:Dsp/letter_shell/shell.c ****                 }
 3780              		.loc 1 1069 0
 3781 0060 1046     		mov	r0, r2
 3782 0062 9847     		blx	r3
 3783              	.LVL453:
 3784              	.L324:
1077:Dsp/letter_shell/shell.c **** }
 3785              		.loc 1 1077 0
 3786 0064 2146     		mov	r1, r4
 3787 0066 2846     		mov	r0, r5
 3788 0068 FFF7FEFF 		bl	shellShowVar
 3789              	.LVL454:
1078:Dsp/letter_shell/shell.c **** 
 3790              		.loc 1 1078 0
 3791 006c 38BD     		pop	{r3, r4, r5, pc}
 3792              	.LVL455:
 3793              	.L335:
 3794 006e 00BF     		.align	2
 3795              	.L334:
 3796 0070 BC020000 		.word	.LC27
 3797 0074 D8020000 		.word	.LC28
 3798              		.cfi_endproc
 3799              	.LFE154:
 3801              		.section	.text.shellSetVar,"ax",%progbits
 3802              		.align	2
 3803              		.global	shellSetVar
 3804              		.thumb
 3805              		.thumb_func
 3807              	shellSetVar:
 3808              	.LFB156:
1132:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 3809              		.loc 1 1132 0
 3810              		.cfi_startproc
 3811              		@ args = 0, pretend = 0, frame = 0
 3812              		@ frame_needed = 0, uses_anonymous_args = 0
 3813              	.LVL456:
 3814 0000 70B5     		push	{r4, r5, r6, lr}
 3815              	.LCFI66:
 3816              		.cfi_def_cfa_offset 16
 3817              		.cfi_offset 4, -16
 3818              		.cfi_offset 5, -12
 3819              		.cfi_offset 6, -8
 3820              		.cfi_offset 14, -4
 3821 0002 0546     		mov	r5, r0
 3822 0004 0E46     		mov	r6, r1
1133:Dsp/letter_shell/shell.c ****     if (shell == NULL)
 3823              		.loc 1 1133 0
 3824 0006 FFF7FEFF 		bl	shellGetCurrent
 3825              	.LVL457:
1134:Dsp/letter_shell/shell.c ****     {
 3826              		.loc 1 1134 0
 3827 000a 20B3     		cbz	r0, .L340
 3828 000c 0446     		mov	r4, r0
1138:Dsp/letter_shell/shell.c ****                                              name,
 3829              		.loc 1 1138 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 108


 3830 000e 0023     		movs	r3, #0
 3831 0010 826D     		ldr	r2, [r0, #88]
 3832 0012 2946     		mov	r1, r5
 3833 0014 FFF7FEFF 		bl	shellSeekCommand
 3834              	.LVL458:
1142:Dsp/letter_shell/shell.c ****     {
 3835              		.loc 1 1142 0
 3836 0018 0146     		mov	r1, r0
 3837 001a 28B9     		cbnz	r0, .L338
1144:Dsp/letter_shell/shell.c ****         return 0;
 3838              		.loc 1 1144 0
 3839 001c 0F49     		ldr	r1, .L342
 3840 001e 2046     		mov	r0, r4
 3841              	.LVL459:
 3842 0020 FFF7FEFF 		bl	shellWriteString
 3843              	.LVL460:
1145:Dsp/letter_shell/shell.c ****     }
 3844              		.loc 1 1145 0
 3845 0024 0020     		movs	r0, #0
 3846 0026 70BD     		pop	{r4, r5, r6, pc}
 3847              	.LVL461:
 3848              	.L338:
1147:Dsp/letter_shell/shell.c ****         || command->attr.attrs.type > SHELL_TYPE_VAR_NODE)
 3849              		.loc 1 1147 0
 3850 0028 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 3851 002a 03F00F03 		and	r3, r3, #15
1148:Dsp/letter_shell/shell.c ****     {
 3852              		.loc 1 1148 0
 3853 002e 0E33     		adds	r3, r3, #14
 3854 0030 03F00F03 		and	r3, r3, #15
1147:Dsp/letter_shell/shell.c ****         || command->attr.attrs.type > SHELL_TYPE_VAR_NODE)
 3855              		.loc 1 1147 0
 3856 0034 052B     		cmp	r3, #5
 3857 0036 09D9     		bls	.L339
1150:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_NOT_VAR]);
 3858              		.loc 1 1150 0
 3859 0038 2946     		mov	r1, r5
 3860 003a 2046     		mov	r0, r4
 3861              	.LVL462:
 3862 003c FFF7FEFF 		bl	shellWriteString
 3863              	.LVL463:
1151:Dsp/letter_shell/shell.c ****         return 0;
 3864              		.loc 1 1151 0
 3865 0040 0749     		ldr	r1, .L342+4
 3866 0042 2046     		mov	r0, r4
 3867 0044 FFF7FEFF 		bl	shellWriteString
 3868              	.LVL464:
1152:Dsp/letter_shell/shell.c ****     }
 3869              		.loc 1 1152 0
 3870 0048 0020     		movs	r0, #0
 3871 004a 70BD     		pop	{r4, r5, r6, pc}
 3872              	.LVL465:
 3873              	.L339:
1154:Dsp/letter_shell/shell.c **** }
 3874              		.loc 1 1154 0
 3875 004c 3246     		mov	r2, r6
 3876 004e 2046     		mov	r0, r4
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 109


 3877              	.LVL466:
 3878 0050 FFF7FEFF 		bl	shellSetVarValue
 3879              	.LVL467:
 3880 0054 70BD     		pop	{r4, r5, r6, pc}
 3881              	.LVL468:
 3882              	.L340:
1136:Dsp/letter_shell/shell.c ****     }
 3883              		.loc 1 1136 0
 3884 0056 0020     		movs	r0, #0
 3885              	.LVL469:
1155:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
 3886              		.loc 1 1155 0
 3887 0058 70BD     		pop	{r4, r5, r6, pc}
 3888              	.LVL470:
 3889              	.L343:
 3890 005a 00BF     		.align	2
 3891              	.L342:
 3892 005c EC020000 		.word	.LC29
 3893 0060 FC020000 		.word	.LC30
 3894              		.cfi_endproc
 3895              	.LFE156:
 3897              		.section	.text.shellRunCommand,"ax",%progbits
 3898              		.align	2
 3899              		.global	shellRunCommand
 3900              		.thumb
 3901              		.thumb_func
 3903              	shellRunCommand:
 3904              	.LFB157:
1170:Dsp/letter_shell/shell.c ****     int returnValue = 0;
 3905              		.loc 1 1170 0
 3906              		.cfi_startproc
 3907              		@ args = 0, pretend = 0, frame = 0
 3908              		@ frame_needed = 0, uses_anonymous_args = 0
 3909              	.LVL471:
 3910 0000 70B5     		push	{r4, r5, r6, lr}
 3911              	.LCFI67:
 3912              		.cfi_def_cfa_offset 16
 3913              		.cfi_offset 4, -16
 3914              		.cfi_offset 5, -12
 3915              		.cfi_offset 6, -8
 3916              		.cfi_offset 14, -4
 3917 0002 0446     		mov	r4, r0
 3918 0004 0D46     		mov	r5, r1
 3919              	.LVL472:
1172:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type == SHELL_TYPE_CMD_MAIN)
 3920              		.loc 1 1172 0
 3921 0006 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 3922 000a 43F00203 		orr	r3, r3, #2
 3923 000e 80F86030 		strb	r3, [r0, #96]
1173:Dsp/letter_shell/shell.c ****     {
 3924              		.loc 1 1173 0
 3925 0012 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3926 0014 13F00F03 		ands	r3, r3, #15
 3927 0018 10D1     		bne	.L345
1175:Dsp/letter_shell/shell.c ****         returnValue = command->data.cmd.function(shell->parser.paramCount,
 3928              		.loc 1 1175 0
 3929 001a FFF7FEFF 		bl	shellRemoveParamQuotes
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 110


 3930              	.LVL473:
1176:Dsp/letter_shell/shell.c ****                                                  shell->parser.param);
 3931              		.loc 1 1176 0
 3932 001e AB68     		ldr	r3, [r5, #8]
 3933 0020 04F11401 		add	r1, r4, #20
 3934 0024 E08E     		ldrh	r0, [r4, #54]
 3935 0026 9847     		blx	r3
 3936              	.LVL474:
 3937 0028 0646     		mov	r6, r0
 3938              	.LVL475:
1178:Dsp/letter_shell/shell.c ****         {
 3939              		.loc 1 1178 0
 3940 002a 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3941 002c 13F0200F 		tst	r3, #32
 3942 0030 28D1     		bne	.L346
1180:Dsp/letter_shell/shell.c ****         }
 3943              		.loc 1 1180 0
 3944 0032 0146     		mov	r1, r0
 3945 0034 2046     		mov	r0, r4
 3946              	.LVL476:
 3947 0036 FFF7FEFF 		bl	shellWriteReturnValue
 3948              	.LVL477:
 3949 003a 23E0     		b	.L346
 3950              	.LVL478:
 3951              	.L345:
1183:Dsp/letter_shell/shell.c ****     {
 3952              		.loc 1 1183 0
 3953 003c 012B     		cmp	r3, #1
 3954 003e 0ED1     		bne	.L347
1185:Dsp/letter_shell/shell.c ****                                   command,
 3955              		.loc 1 1185 0
 3956 0040 00F11403 		add	r3, r0, #20
 3957 0044 C28E     		ldrh	r2, [r0, #54]
 3958 0046 FFF7FEFF 		bl	shellExtRun
 3959              	.LVL479:
 3960 004a 0646     		mov	r6, r0
 3961              	.LVL480:
1189:Dsp/letter_shell/shell.c ****         {
 3962              		.loc 1 1189 0
 3963 004c 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3964 004e 13F0200F 		tst	r3, #32
 3965 0052 17D1     		bne	.L346
1191:Dsp/letter_shell/shell.c ****         }
 3966              		.loc 1 1191 0
 3967 0054 0146     		mov	r1, r0
 3968 0056 2046     		mov	r0, r4
 3969              	.LVL481:
 3970 0058 FFF7FEFF 		bl	shellWriteReturnValue
 3971              	.LVL482:
 3972 005c 12E0     		b	.L346
 3973              	.LVL483:
 3974              	.L347:
1194:Dsp/letter_shell/shell.c ****         && command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 3975              		.loc 1 1194 0
 3976 005e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 3977 0060 02F00F02 		and	r2, r2, #15
1195:Dsp/letter_shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 111


 3978              		.loc 1 1195 0
 3979 0064 0E32     		adds	r2, r2, #14
 3980 0066 02F00F02 		and	r2, r2, #15
1194:Dsp/letter_shell/shell.c ****         && command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 3981              		.loc 1 1194 0
 3982 006a 052A     		cmp	r2, #5
 3983 006c 03D8     		bhi	.L348
1197:Dsp/letter_shell/shell.c ****     }
 3984              		.loc 1 1197 0
 3985 006e FFF7FEFF 		bl	shellShowVar
 3986              	.LVL484:
1171:Dsp/letter_shell/shell.c ****     shell->status.isActive = 1;
 3987              		.loc 1 1171 0
 3988 0072 0026     		movs	r6, #0
 3989 0074 06E0     		b	.L346
 3990              	.LVL485:
 3991              	.L348:
1199:Dsp/letter_shell/shell.c ****     {
 3992              		.loc 1 1199 0
 3993 0076 082B     		cmp	r3, #8
 3994 0078 03D1     		bne	.L349
1201:Dsp/letter_shell/shell.c ****     }
 3995              		.loc 1 1201 0
 3996 007a FFF7FEFF 		bl	shellSetUser
 3997              	.LVL486:
1171:Dsp/letter_shell/shell.c ****     shell->status.isActive = 1;
 3998              		.loc 1 1171 0
 3999 007e 0026     		movs	r6, #0
 4000 0080 00E0     		b	.L346
 4001              	.LVL487:
 4002              	.L349:
 4003 0082 0026     		movs	r6, #0
 4004              	.LVL488:
 4005              	.L346:
1203:Dsp/letter_shell/shell.c **** 
 4006              		.loc 1 1203 0
 4007 0084 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 4008 0088 6FF34103 		bfc	r3, #1, #1
 4009 008c 84F86030 		strb	r3, [r4, #96]
1206:Dsp/letter_shell/shell.c **** 
 4010              		.loc 1 1206 0
 4011 0090 3046     		mov	r0, r6
 4012 0092 70BD     		pop	{r4, r5, r6, pc}
 4013              		.cfi_endproc
 4014              	.LFE157:
 4016              		.section	.text.shellNormalInput,"ax",%progbits
 4017              		.align	2
 4018              		.global	shellNormalInput
 4019              		.thumb
 4020              		.thumb_func
 4022              	shellNormalInput:
 4023              	.LFB163:
1369:Dsp/letter_shell/shell.c ****     shell->status.tabFlag = 0;
 4024              		.loc 1 1369 0
 4025              		.cfi_startproc
 4026              		@ args = 0, pretend = 0, frame = 0
 4027              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 112


 4028              	.LVL489:
 4029 0000 08B5     		push	{r3, lr}
 4030              	.LCFI68:
 4031              		.cfi_def_cfa_offset 8
 4032              		.cfi_offset 3, -8
 4033              		.cfi_offset 14, -4
1370:Dsp/letter_shell/shell.c ****     shellInsertByte(shell, data);
 4034              		.loc 1 1370 0
 4035 0002 90F86020 		ldrb	r2, [r0, #96]	@ zero_extendqisi2
 4036 0006 6FF38202 		bfc	r2, #2, #1
 4037 000a 80F86020 		strb	r2, [r0, #96]
1371:Dsp/letter_shell/shell.c **** }
 4038              		.loc 1 1371 0
 4039 000e FFF7FEFF 		bl	shellInsertByte
 4040              	.LVL490:
 4041 0012 08BD     		pop	{r3, pc}
 4042              		.cfi_endproc
 4043              	.LFE163:
 4045              		.section	.text.shellExec,"ax",%progbits
 4046              		.align	2
 4047              		.global	shellExec
 4048              		.thumb
 4049              		.thumb_func
 4051              	shellExec:
 4052              	.LFB164:
1381:Dsp/letter_shell/shell.c ****     
 4053              		.loc 1 1381 0
 4054              		.cfi_startproc
 4055              		@ args = 0, pretend = 0, frame = 0
 4056              		@ frame_needed = 0, uses_anonymous_args = 0
 4057              	.LVL491:
1383:Dsp/letter_shell/shell.c ****     {
 4058              		.loc 1 1383 0
 4059 0000 8389     		ldrh	r3, [r0, #12]
 4060 0002 5BB3     		cbz	r3, .L358
1381:Dsp/letter_shell/shell.c ****     
 4061              		.loc 1 1381 0
 4062 0004 10B5     		push	{r4, lr}
 4063              	.LCFI69:
 4064              		.cfi_def_cfa_offset 8
 4065              		.cfi_offset 4, -8
 4066              		.cfi_offset 14, -4
 4067 0006 0446     		mov	r4, r0
1388:Dsp/letter_shell/shell.c **** 
 4068              		.loc 1 1388 0
 4069 0008 0269     		ldr	r2, [r0, #16]
 4070 000a 0021     		movs	r1, #0
 4071 000c D154     		strb	r1, [r2, r3]
1390:Dsp/letter_shell/shell.c ****     {
 4072              		.loc 1 1390 0
 4073 000e 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 4074 0012 13F0010F 		tst	r3, #1
 4075 0016 1ED0     		beq	.L355
 4076              	.LBB29:
1392:Dsp/letter_shell/shell.c ****         shellParserParam(shell);
 4077              		.loc 1 1392 0
 4078 0018 FFF7FEFF 		bl	shellHistoryAdd
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 113


 4079              	.LVL492:
1393:Dsp/letter_shell/shell.c ****         shell->parser.length = shell->parser.cursor = 0;
 4080              		.loc 1 1393 0
 4081 001c 2046     		mov	r0, r4
 4082 001e FFF7FEFF 		bl	shellParserParam
 4083              	.LVL493:
1394:Dsp/letter_shell/shell.c ****         if (shell->parser.paramCount == 0)
 4084              		.loc 1 1394 0
 4085 0022 0023     		movs	r3, #0
 4086 0024 E381     		strh	r3, [r4, #14]	@ movhi
 4087 0026 A381     		strh	r3, [r4, #12]	@ movhi
1395:Dsp/letter_shell/shell.c ****         {
 4088              		.loc 1 1395 0
 4089 0028 E38E     		ldrh	r3, [r4, #54]
 4090 002a B3B1     		cbz	r3, .L353
1399:Dsp/letter_shell/shell.c **** 
 4091              		.loc 1 1399 0
 4092 002c 0C49     		ldr	r1, .L359
 4093 002e 2046     		mov	r0, r4
 4094 0030 FFF7FEFF 		bl	shellWriteString
 4095              	.LVL494:
1401:Dsp/letter_shell/shell.c ****                                                  shell->parser.param[0],
 4096              		.loc 1 1401 0
 4097 0034 0023     		movs	r3, #0
 4098 0036 A26D     		ldr	r2, [r4, #88]
 4099 0038 6169     		ldr	r1, [r4, #20]
 4100 003a 2046     		mov	r0, r4
 4101 003c FFF7FEFF 		bl	shellSeekCommand
 4102              	.LVL495:
1405:Dsp/letter_shell/shell.c ****         {
 4103              		.loc 1 1405 0
 4104 0040 0146     		mov	r1, r0
 4105 0042 18B1     		cbz	r0, .L356
1407:Dsp/letter_shell/shell.c ****         }
 4106              		.loc 1 1407 0
 4107 0044 2046     		mov	r0, r4
 4108              	.LVL496:
 4109 0046 FFF7FEFF 		bl	shellRunCommand
 4110              	.LVL497:
 4111 004a 10BD     		pop	{r4, pc}
 4112              	.LVL498:
 4113              	.L356:
1411:Dsp/letter_shell/shell.c ****         }
 4114              		.loc 1 1411 0
 4115 004c 0549     		ldr	r1, .L359+4
 4116 004e 2046     		mov	r0, r4
 4117              	.LVL499:
 4118 0050 FFF7FEFF 		bl	shellWriteString
 4119              	.LVL500:
 4120 0054 10BD     		pop	{r4, pc}
 4121              	.LVL501:
 4122              	.L355:
 4123              	.LBE29:
1416:Dsp/letter_shell/shell.c ****     }
 4124              		.loc 1 1416 0
 4125 0056 FFF7FEFF 		bl	shellCheckPassword
 4126              	.LVL502:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 114


 4127              	.L353:
 4128 005a 10BD     		pop	{r4, pc}
 4129              	.LVL503:
 4130              	.L358:
 4131              	.LCFI70:
 4132              		.cfi_def_cfa_offset 0
 4133              		.cfi_restore 4
 4134              		.cfi_restore 14
 4135 005c 7047     		bx	lr
 4136              	.L360:
 4137 005e 00BF     		.align	2
 4138              	.L359:
 4139 0060 A0010000 		.word	.LC3
 4140 0064 A0020000 		.word	.LC24
 4141              		.cfi_endproc
 4142              	.LFE164:
 4144              		.section	.text.shellEnter,"ax",%progbits
 4145              		.align	2
 4146              		.global	shellEnter
 4147              		.thumb
 4148              		.thumb_func
 4150              	shellEnter:
 4151              	.LFB172:
1607:Dsp/letter_shell/shell.c ****     shellExec(shell);
 4152              		.loc 1 1607 0
 4153              		.cfi_startproc
 4154              		@ args = 0, pretend = 0, frame = 0
 4155              		@ frame_needed = 0, uses_anonymous_args = 0
 4156              	.LVL504:
 4157 0000 10B5     		push	{r4, lr}
 4158              	.LCFI71:
 4159              		.cfi_def_cfa_offset 8
 4160              		.cfi_offset 4, -8
 4161              		.cfi_offset 14, -4
 4162 0002 0446     		mov	r4, r0
1608:Dsp/letter_shell/shell.c ****     shellWriteCommandLine(shell, 1);
 4163              		.loc 1 1608 0
 4164 0004 FFF7FEFF 		bl	shellExec
 4165              	.LVL505:
1609:Dsp/letter_shell/shell.c **** }
 4166              		.loc 1 1609 0
 4167 0008 0121     		movs	r1, #1
 4168 000a 2046     		mov	r0, r4
 4169 000c FFF7FEFF 		bl	shellWriteCommandLine
 4170              	.LVL506:
 4171 0010 10BD     		pop	{r4, pc}
 4172              		.cfi_endproc
 4173              	.LFE172:
 4175 0012 00BF     		.section	.text.shellHandler,"ax",%progbits
 4176              		.align	2
 4177              		.global	shellHandler
 4178              		.thumb
 4179              		.thumb_func
 4181              	shellHandler:
 4182              	.LFB174:
1670:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(data, return);
 4183              		.loc 1 1670 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 115


 4184              		.cfi_startproc
 4185              		@ args = 0, pretend = 0, frame = 0
 4186              		@ frame_needed = 0, uses_anonymous_args = 0
 4187              	.LVL507:
1671:Dsp/letter_shell/shell.c **** 
 4188              		.loc 1 1671 0
 4189 0000 0029     		cmp	r1, #0
 4190 0002 65D0     		beq	.L377
1670:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(data, return);
 4191              		.loc 1 1670 0
 4192 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4193              	.LCFI72:
 4194              		.cfi_def_cfa_offset 32
 4195              		.cfi_offset 4, -32
 4196              		.cfi_offset 5, -28
 4197              		.cfi_offset 6, -24
 4198              		.cfi_offset 7, -20
 4199              		.cfi_offset 8, -16
 4200              		.cfi_offset 9, -12
 4201              		.cfi_offset 10, -8
 4202              		.cfi_offset 14, -4
 4203 0008 0646     		mov	r6, r0
 4204 000a 8A46     		mov	r10, r1
 4205              	.LVL508:
1688:Dsp/letter_shell/shell.c ****     {
 4206              		.loc 1 1688 0
 4207 000c 836B     		ldr	r3, [r0, #56]
 4208 000e 13F47F4F 		tst	r3, #65280
 4209 0012 0AD1     		bne	.L372
1693:Dsp/letter_shell/shell.c ****     {
 4210              		.loc 1 1693 0
 4211 0014 13F47F0F 		tst	r3, #16711680
 4212 0018 0CD1     		bne	.L373
1698:Dsp/letter_shell/shell.c ****     {
 4213              		.loc 1 1698 0
 4214 001a 13F07F4F 		tst	r3, #-16777216
 4215 001e 0ED1     		bne	.L374
1687:Dsp/letter_shell/shell.c ****     if ((shell->parser.keyValue & 0x0000FF00) != 0x00000000)
 4216              		.loc 1 1687 0
 4217 0020 4FF00008 		mov	r8, #0
1686:Dsp/letter_shell/shell.c ****     int keyFilter = 0x00000000;
 4218              		.loc 1 1686 0
 4219 0024 4FF01809 		mov	r9, #24
 4220 0028 0DE0     		b	.L365
 4221              	.L372:
1691:Dsp/letter_shell/shell.c ****     }
 4222              		.loc 1 1691 0
 4223 002a 6FF0FF08 		mvn	r8, #255
1690:Dsp/letter_shell/shell.c ****         keyFilter = 0xFFFFFF00;
 4224              		.loc 1 1690 0
 4225 002e 4FF00009 		mov	r9, #0
 4226 0032 08E0     		b	.L365
 4227              	.L373:
1696:Dsp/letter_shell/shell.c ****     }
 4228              		.loc 1 1696 0
 4229 0034 DFF89C80 		ldr	r8, .L378
1695:Dsp/letter_shell/shell.c ****         keyFilter = 0xFFFF0000;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 116


 4230              		.loc 1 1695 0
 4231 0038 4FF00809 		mov	r9, #8
 4232 003c 03E0     		b	.L365
 4233              	.L374:
1701:Dsp/letter_shell/shell.c ****     }
 4234              		.loc 1 1701 0
 4235 003e 4FF07F48 		mov	r8, #-16777216
1700:Dsp/letter_shell/shell.c ****         keyFilter = 0xFF000000;
 4236              		.loc 1 1700 0
 4237 0042 4FF01009 		mov	r9, #16
 4238              	.L365:
 4239              	.LVL509:
1705:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 4240              		.loc 1 1705 0
 4241 0046 B76D     		ldr	r7, [r6, #88]
 4242              	.LVL510:
 4243              	.LBB30:
1706:Dsp/letter_shell/shell.c ****     {
 4244              		.loc 1 1706 0
 4245 0048 0024     		movs	r4, #0
 4246 004a 32E0     		b	.L366
 4247              	.LVL511:
 4248              	.L371:
1709:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &(base[i])) == 0)
 4249              		.loc 1 1709 0
 4250 004c 07EB0415 		add	r5, r7, r4, lsl #4
 4251 0050 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 4252 0052 03F00F03 		and	r3, r3, #15
 4253 0056 092B     		cmp	r3, #9
 4254 0058 29D1     		bne	.L367
1710:Dsp/letter_shell/shell.c ****         {
 4255              		.loc 1 1710 0
 4256 005a 2946     		mov	r1, r5
 4257 005c 3046     		mov	r0, r6
 4258 005e FFF7FEFF 		bl	shellCheckPermission
 4259              	.LVL512:
 4260 0062 20BB     		cbnz	r0, .L367
1713:Dsp/letter_shell/shell.c ****                 && (base[i].data.key.value & (0xFF << keyByteOffset))
 4261              		.loc 1 1713 0
 4262 0064 6B68     		ldr	r3, [r5, #4]
 4263 0066 08EA0301 		and	r1, r8, r3
 4264 006a B26B     		ldr	r2, [r6, #56]
 4265 006c 9142     		cmp	r1, r2
 4266 006e 1ED1     		bne	.L367
1714:Dsp/letter_shell/shell.c ****                     == (data << keyByteOffset))
 4267              		.loc 1 1714 0
 4268 0070 FF21     		movs	r1, #255
 4269 0072 01FA09F1 		lsl	r1, r1, r9
 4270 0076 0B40     		ands	r3, r3, r1
1715:Dsp/letter_shell/shell.c ****             {
 4271              		.loc 1 1715 0
 4272 0078 0AFA09F1 		lsl	r1, r10, r9
1714:Dsp/letter_shell/shell.c ****                     == (data << keyByteOffset))
 4273              		.loc 1 1714 0
 4274 007c 8B42     		cmp	r3, r1
 4275 007e 16D1     		bne	.L367
1717:Dsp/letter_shell/shell.c ****                 data = 0x00;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 117


 4276              		.loc 1 1717 0
 4277 0080 0A43     		orrs	r2, r2, r1
 4278 0082 B263     		str	r2, [r6, #56]
 4279              	.LVL513:
1719:Dsp/letter_shell/shell.c ****                     || (base[i].data.key.value & (0xFF << (keyByteOffset - 8)))
 4280              		.loc 1 1719 0
 4281 0084 B9F1000F 		cmp	r9, #0
 4282 0088 07D0     		beq	.L368
1720:Dsp/letter_shell/shell.c ****                         == 0x00000000)
 4283              		.loc 1 1720 0
 4284 008a 6B68     		ldr	r3, [r5, #4]
 4285 008c A9F10800 		sub	r0, r9, #8
 4286 0090 FF22     		movs	r2, #255
 4287 0092 02FA00F0 		lsl	r0, r2, r0
 4288 0096 0342     		tst	r3, r0
 4289 0098 07D1     		bne	.L375
 4290              	.L368:
1723:Dsp/letter_shell/shell.c ****                     {
 4291              		.loc 1 1723 0
 4292 009a AB68     		ldr	r3, [r5, #8]
 4293 009c 0BB1     		cbz	r3, .L369
1725:Dsp/letter_shell/shell.c ****                     }
 4294              		.loc 1 1725 0
 4295 009e 3046     		mov	r0, r6
 4296 00a0 9847     		blx	r3
 4297              	.LVL514:
 4298              	.L369:
1727:Dsp/letter_shell/shell.c ****                     break;
 4299              		.loc 1 1727 0
 4300 00a2 0023     		movs	r3, #0
 4301 00a4 B363     		str	r3, [r6, #56]
1718:Dsp/letter_shell/shell.c ****                 if (keyByteOffset == 0 
 4302              		.loc 1 1718 0
 4303 00a6 9A46     		mov	r10, r3
1728:Dsp/letter_shell/shell.c ****                 }
 4304              		.loc 1 1728 0
 4305 00a8 07E0     		b	.L370
 4306              	.L375:
1718:Dsp/letter_shell/shell.c ****                 if (keyByteOffset == 0 
 4307              		.loc 1 1718 0
 4308 00aa 4FF0000A 		mov	r10, #0
 4309              	.LVL515:
 4310              	.L367:
1706:Dsp/letter_shell/shell.c ****     {
 4311              		.loc 1 1706 0 discriminator 2
 4312 00ae 0134     		adds	r4, r4, #1
 4313              	.LVL516:
 4314 00b0 24B2     		sxth	r4, r4
 4315              	.LVL517:
 4316              	.L366:
1706:Dsp/letter_shell/shell.c ****     {
 4317              		.loc 1 1706 0 is_stmt 0 discriminator 1
 4318 00b2 B6F85C30 		ldrh	r3, [r6, #92]
 4319 00b6 9C42     		cmp	r4, r3
 4320 00b8 C8DB     		blt	.L371
 4321              	.LVL518:
 4322              	.L370:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 118


 4323              	.LBE30:
1734:Dsp/letter_shell/shell.c ****     {
 4324              		.loc 1 1734 0 is_stmt 1
 4325 00ba BAF1000F 		cmp	r10, #0
 4326 00be 05D0     		beq	.L363
1736:Dsp/letter_shell/shell.c ****         shellNormalInput(shell, data);
 4327              		.loc 1 1736 0
 4328 00c0 0023     		movs	r3, #0
 4329 00c2 B363     		str	r3, [r6, #56]
1737:Dsp/letter_shell/shell.c ****     }
 4330              		.loc 1 1737 0
 4331 00c4 5146     		mov	r1, r10
 4332 00c6 3046     		mov	r0, r6
 4333 00c8 FFF7FEFF 		bl	shellNormalInput
 4334              	.LVL519:
 4335              	.L363:
 4336 00cc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4337              	.LVL520:
 4338              	.L377:
 4339              	.LCFI73:
 4340              		.cfi_def_cfa_offset 0
 4341              		.cfi_restore 4
 4342              		.cfi_restore 5
 4343              		.cfi_restore 6
 4344              		.cfi_restore 7
 4345              		.cfi_restore 8
 4346              		.cfi_restore 9
 4347              		.cfi_restore 10
 4348              		.cfi_restore 14
 4349 00d0 7047     		bx	lr
 4350              	.L379:
 4351 00d2 00BF     		.align	2
 4352              	.L378:
 4353 00d4 0000FFFF 		.word	-65536
 4354              		.cfi_endproc
 4355              	.LFE174:
 4357              		.section	.text.shellTask,"ax",%progbits
 4358              		.align	2
 4359              		.global	shellTask
 4360              		.thumb
 4361              		.thumb_func
 4363              	shellTask:
 4364              	.LFB175:
1781:Dsp/letter_shell/shell.c ****     Shell *shell = (Shell *)param;
 4365              		.loc 1 1781 0
 4366              		.cfi_startproc
 4367              		@ args = 0, pretend = 0, frame = 8
 4368              		@ frame_needed = 0, uses_anonymous_args = 0
 4369              	.LVL521:
1788:Dsp/letter_shell/shell.c ****         {
 4370              		.loc 1 1788 0
 4371 0000 436E     		ldr	r3, [r0, #100]
 4372 0002 6BB1     		cbz	r3, .L383
1781:Dsp/letter_shell/shell.c ****     Shell *shell = (Shell *)param;
 4373              		.loc 1 1781 0 discriminator 1
 4374 0004 10B5     		push	{r4, lr}
 4375              	.LCFI74:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 119


 4376              		.cfi_def_cfa_offset 8
 4377              		.cfi_offset 4, -8
 4378              		.cfi_offset 14, -4
 4379 0006 82B0     		sub	sp, sp, #8
 4380              	.LCFI75:
 4381              		.cfi_def_cfa_offset 16
 4382 0008 0446     		mov	r4, r0
1788:Dsp/letter_shell/shell.c ****         {
 4383              		.loc 1 1788 0 discriminator 1
 4384 000a 0DF10700 		add	r0, sp, #7
 4385              	.LVL522:
 4386 000e 9847     		blx	r3
 4387              	.LVL523:
 4388 0010 20B9     		cbnz	r0, .L380
1790:Dsp/letter_shell/shell.c ****         }
 4389              		.loc 1 1790 0
 4390 0012 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 4391 0016 2046     		mov	r0, r4
 4392 0018 FFF7FEFF 		bl	shellHandler
 4393              	.LVL524:
 4394              	.L380:
1795:Dsp/letter_shell/shell.c **** 
 4395              		.loc 1 1795 0
 4396 001c 02B0     		add	sp, sp, #8
 4397              	.LCFI76:
 4398              		.cfi_def_cfa_offset 8
 4399              		@ sp needed
 4400 001e 10BD     		pop	{r4, pc}
 4401              	.LVL525:
 4402              	.L383:
 4403              	.LCFI77:
 4404              		.cfi_def_cfa_offset 0
 4405              		.cfi_restore 4
 4406              		.cfi_restore 14
 4407 0020 7047     		bx	lr
 4408              		.cfi_endproc
 4409              	.LFE175:
 4411 0022 00BF     		.section	.text.shellRun,"ax",%progbits
 4412              		.align	2
 4413              		.global	shellRun
 4414              		.thumb
 4415              		.thumb_func
 4417              	shellRun:
 4418              	.LFB181:
1871:Dsp/letter_shell/shell.c ****     }
1872:Dsp/letter_shell/shell.c **** }
1873:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1874:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1875:Dsp/letter_shell/shell.c **** clear, shellClear, clear console);
1876:Dsp/letter_shell/shell.c **** 
1877:Dsp/letter_shell/shell.c **** 
1878:Dsp/letter_shell/shell.c **** /**
1879:Dsp/letter_shell/shell.c ****  * @brief shell执行命令
1880:Dsp/letter_shell/shell.c ****  * 
1881:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1882:Dsp/letter_shell/shell.c ****  * @param cmd 命令字符串
1883:Dsp/letter_shell/shell.c ****  * @return int 返回值
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 120


1884:Dsp/letter_shell/shell.c ****  */
1885:Dsp/letter_shell/shell.c **** int shellRun(Shell *shell, const char *cmd)
1886:Dsp/letter_shell/shell.c **** {
 4419              		.loc 1 1886 0
 4420              		.cfi_startproc
 4421              		@ args = 0, pretend = 0, frame = 0
 4422              		@ frame_needed = 0, uses_anonymous_args = 0
 4423              	.LVL526:
1887:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell && cmd, return -1);
 4424              		.loc 1 1887 0
 4425 0000 28B3     		cbz	r0, .L387
1886:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell && cmd, return -1);
 4426              		.loc 1 1886 0 discriminator 2
 4427 0002 70B5     		push	{r4, r5, r6, lr}
 4428              	.LCFI78:
 4429              		.cfi_def_cfa_offset 16
 4430              		.cfi_offset 4, -16
 4431              		.cfi_offset 5, -12
 4432              		.cfi_offset 6, -8
 4433              		.cfi_offset 14, -4
 4434 0004 0446     		mov	r4, r0
 4435              		.loc 1 1887 0 discriminator 2
 4436 0006 29B3     		cbz	r1, .L388
 4437 0008 0D46     		mov	r5, r1
1888:Dsp/letter_shell/shell.c ****     char active = shell->status.isActive;
 4438              		.loc 1 1888 0
 4439 000a 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 4440 000e C3F34006 		ubfx	r6, r3, #1, #1
 4441              	.LVL527:
1889:Dsp/letter_shell/shell.c ****     if (strlen(cmd) > shell->parser.bufferSize - 1)
 4442              		.loc 1 1889 0
 4443 0012 0846     		mov	r0, r1
 4444              	.LVL528:
 4445 0014 FFF7FEFF 		bl	strlen
 4446              	.LVL529:
 4447 0018 A38E     		ldrh	r3, [r4, #52]
 4448 001a 013B     		subs	r3, r3, #1
 4449 001c 9842     		cmp	r0, r3
 4450 001e 06D9     		bls	.L386
1890:Dsp/letter_shell/shell.c ****     {
1891:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CMD_TOO_LONG]);
 4451              		.loc 1 1891 0
 4452 0020 0E49     		ldr	r1, .L390
 4453 0022 2046     		mov	r0, r4
 4454 0024 FFF7FEFF 		bl	shellWriteString
 4455              	.LVL530:
1892:Dsp/letter_shell/shell.c ****         return -1;
 4456              		.loc 1 1892 0
 4457 0028 4FF0FF30 		mov	r0, #-1
 4458 002c 70BD     		pop	{r4, r5, r6, pc}
 4459              	.LVL531:
 4460              	.L386:
1893:Dsp/letter_shell/shell.c ****     }
1894:Dsp/letter_shell/shell.c ****     else
1895:Dsp/letter_shell/shell.c ****     {
1896:Dsp/letter_shell/shell.c ****         shell->parser.length = shellStringCopy(shell->parser.buffer, (char *)cmd);
 4461              		.loc 1 1896 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 121


 4462 002e 2946     		mov	r1, r5
 4463 0030 2069     		ldr	r0, [r4, #16]
 4464 0032 FFF7FEFF 		bl	shellStringCopy
 4465              	.LVL532:
 4466 0036 A081     		strh	r0, [r4, #12]	@ movhi
1897:Dsp/letter_shell/shell.c ****         shellExec(shell);
 4467              		.loc 1 1897 0
 4468 0038 2046     		mov	r0, r4
 4469 003a FFF7FEFF 		bl	shellExec
 4470              	.LVL533:
1898:Dsp/letter_shell/shell.c ****         shell->status.isActive = active;
 4471              		.loc 1 1898 0
 4472 003e 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 4473 0042 66F34103 		bfi	r3, r6, #1, #1
 4474 0046 84F86030 		strb	r3, [r4, #96]
1899:Dsp/letter_shell/shell.c ****         return 0;
 4475              		.loc 1 1899 0
 4476 004a 0020     		movs	r0, #0
 4477 004c 70BD     		pop	{r4, r5, r6, pc}
 4478              	.LVL534:
 4479              	.L387:
 4480              	.LCFI79:
 4481              		.cfi_def_cfa_offset 0
 4482              		.cfi_restore 4
 4483              		.cfi_restore 5
 4484              		.cfi_restore 6
 4485              		.cfi_restore 14
1887:Dsp/letter_shell/shell.c ****     char active = shell->status.isActive;
 4486              		.loc 1 1887 0
 4487 004e 4FF0FF30 		mov	r0, #-1
 4488              	.LVL535:
1900:Dsp/letter_shell/shell.c ****     }
1901:Dsp/letter_shell/shell.c **** }
 4489              		.loc 1 1901 0
 4490 0052 7047     		bx	lr
 4491              	.LVL536:
 4492              	.L388:
 4493              	.LCFI80:
 4494              		.cfi_def_cfa_offset 16
 4495              		.cfi_offset 4, -16
 4496              		.cfi_offset 5, -12
 4497              		.cfi_offset 6, -8
 4498              		.cfi_offset 14, -4
1887:Dsp/letter_shell/shell.c ****     char active = shell->status.isActive;
 4499              		.loc 1 1887 0
 4500 0054 4FF0FF30 		mov	r0, #-1
 4501              	.LVL537:
 4502              		.loc 1 1901 0
 4503 0058 70BD     		pop	{r4, r5, r6, pc}
 4504              	.LVL538:
 4505              	.L391:
 4506 005a 00BF     		.align	2
 4507              	.L390:
 4508 005c 64020000 		.word	.LC21
 4509              		.cfi_endproc
 4510              	.LFE181:
 4512              		.global	shellCommandclear
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 122


 4513              		.global	shellDescclear
 4514              		.global	shellCmdclear
 4515              		.global	shellCommandkeys
 4516              		.global	shellDesckeys
 4517              		.global	shellCmdkeys
 4518              		.global	shellCommandvars
 4519              		.global	shellDescvars
 4520              		.global	shellCmdvars
 4521              		.global	shellCommandcmds
 4522              		.global	shellDesccmds
 4523              		.global	shellCmdcmds
 4524              		.global	shellCommandusers
 4525              		.global	shellDescusers
 4526              		.global	shellCmdusers
 4527              		.global	shellCommandhelp
 4528              		.global	shellDeschelp
 4529              		.global	shellCmdhelp
 4530              		.global	shellKey0x0D000000
 4531              		.global	shellDesc0x0D000000
 4532              		.global	shellKey0x0A000000
 4533              		.global	shellDesc0x0A000000
 4534              		.global	shellKey0x1B5B337E
 4535              		.global	shellDesc0x1B5B337E
 4536              		.global	shellKey0x7F000000
 4537              		.global	shellDesc0x7F000000
 4538              		.global	shellKey0x08000000
 4539              		.global	shellDesc0x08000000
 4540              		.global	shellKey0x09000000
 4541              		.global	shellDesc0x09000000
 4542              		.global	shellKey0x1B5B4400
 4543              		.global	shellDesc0x1B5B4400
 4544              		.global	shellKey0x1B5B4300
 4545              		.global	shellDesc0x1B5B4300
 4546              		.global	shellKey0x1B5B4200
 4547              		.global	shellDesc0x1B5B4200
 4548              		.global	shellKey0x1B5B4100
 4549              		.global	shellDesc0x1B5B4100
 4550              		.global	shellCommandsetVar
 4551              		.global	shellDescsetVar
 4552              		.global	shellCmdsetVar
 4553              		.global	shellUserDefault
 4554              		.global	shellDesDefaultUser
 4555              		.global	shellPasswordDefaultUser
 4556              		.global	shellCmdDefaultUser
 4557              		.section	.rodata.shellPasswordDefaultUser,"a",%progbits
 4558              		.align	2
 4561              	shellPasswordDefaultUser:
 4562 0000 00       		.space	1
 4563              		.section	.rodata.shellDesc0x1B5B4100,"a",%progbits
 4564              		.align	2
 4567              	shellDesc0x1B5B4100:
 4568 0000 757000   		.ascii	"up\000"
 4569              		.section	.rodata.shellDescvars,"a",%progbits
 4570              		.align	2
 4573              	shellDescvars:
 4574 0000 6C697374 		.ascii	"list all var\000"
 4574      20616C6C 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 123


 4574      20766172 
 4574      00
 4575              		.section	.rodata.shellDesccmds,"a",%progbits
 4576              		.align	2
 4579              	shellDesccmds:
 4580 0000 6C697374 		.ascii	"list all cmd\000"
 4580      20616C6C 
 4580      20636D64 
 4580      00
 4581              		.section	.rodata.shellCmdusers,"a",%progbits
 4582              		.align	2
 4585              	shellCmdusers:
 4586 0000 75736572 		.ascii	"users\000"
 4586      7300
 4587              		.section	.rodata.shellDesc0x7F000000,"a",%progbits
 4588              		.align	2
 4591              	shellDesc0x7F000000:
 4592 0000 6261636B 		.ascii	"backspace\000"
 4592      73706163 
 4592      6500
 4593              		.section	.bss.buffer.9206,"aw",%nobits
 4594              		.align	2
 4595              		.set	.LANCHOR1,. + 0
 4598              	buffer.9206:
 4599 0000 00000000 		.space	9
 4599      00000000 
 4599      00
 4600              		.section	.rodata.shellDesc0x1B5B4300,"a",%progbits
 4601              		.align	2
 4604              	shellDesc0x1B5B4300:
 4605 0000 72696768 		.ascii	"right\000"
 4605      7400
 4606              		.section	.rodata.shellCmdvars,"a",%progbits
 4607              		.align	2
 4610              	shellCmdvars:
 4611 0000 76617273 		.ascii	"vars\000"
 4611      00
 4612              		.section	.rodata.shellCmdclear,"a",%progbits
 4613              		.align	2
 4616              	shellCmdclear:
 4617 0000 636C6561 		.ascii	"clear\000"
 4617      7200
 4618              		.section	.rodata.shellDesckeys,"a",%progbits
 4619              		.align	2
 4622              	shellDesckeys:
 4623 0000 6C697374 		.ascii	"list all key\000"
 4623      20616C6C 
 4623      206B6579 
 4623      00
 4624              		.section	.rodata.shellCmdkeys,"a",%progbits
 4625              		.align	2
 4628              	shellCmdkeys:
 4629 0000 6B657973 		.ascii	"keys\000"
 4629      00
 4630              		.section	.rodata.shellDesc0x08000000,"a",%progbits
 4631              		.align	2
 4634              	shellDesc0x08000000:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 124


 4635 0000 6261636B 		.ascii	"backspace\000"
 4635      73706163 
 4635      6500
 4636              		.section	.rodata.shellDescusers,"a",%progbits
 4637              		.align	2
 4640              	shellDescusers:
 4641 0000 6C697374 		.ascii	"list all user\000"
 4641      20616C6C 
 4641      20757365 
 4641      7200
 4642              		.section	.rodata.shellCmdhelp,"a",%progbits
 4643              		.align	2
 4646              	shellCmdhelp:
 4647 0000 68656C70 		.ascii	"help\000"
 4647      00
 4648              		.section	.rodata.shellDescsetVar,"a",%progbits
 4649              		.align	2
 4652              	shellDescsetVar:
 4653 0000 73657420 		.ascii	"set var\000"
 4653      76617200 
 4654              		.section	.rodata.shellDesc0x0D000000,"a",%progbits
 4655              		.align	2
 4658              	shellDesc0x0D000000:
 4659 0000 656E7465 		.ascii	"enter\000"
 4659      7200
 4660              		.section	shellCommand,"a",%progbits
 4661              		.align	2
 4664              	shellCommandclear:
 4665 0000 00210000 		.word	8448
 4666 0004 00000000 		.word	shellCmdclear
 4667 0008 00000000 		.word	shellClear
 4668 000c 00000000 		.word	shellDescclear
 4671              	shellCommandkeys:
 4672 0010 00210000 		.word	8448
 4673 0014 00000000 		.word	shellCmdkeys
 4674 0018 00000000 		.word	shellKeys
 4675 001c 00000000 		.word	shellDesckeys
 4678              	shellCommandvars:
 4679 0020 00210000 		.word	8448
 4680 0024 00000000 		.word	shellCmdvars
 4681 0028 00000000 		.word	shellVars
 4682 002c 00000000 		.word	shellDescvars
 4685              	shellCommandcmds:
 4686 0030 00210000 		.word	8448
 4687 0034 00000000 		.word	shellCmdcmds
 4688 0038 00000000 		.word	shellCmds
 4689 003c 00000000 		.word	shellDesccmds
 4692              	shellCommandusers:
 4693 0040 00210000 		.word	8448
 4694 0044 00000000 		.word	shellCmdusers
 4695 0048 00000000 		.word	shellUsers
 4696 004c 00000000 		.word	shellDescusers
 4699              	shellCommandhelp:
 4700 0050 00200000 		.word	8192
 4701 0054 00000000 		.word	shellCmdhelp
 4702 0058 00000000 		.word	shellHelp
 4703 005c 00000000 		.word	shellDeschelp
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 125


 4706              	shellKey0x0D000000:
 4707 0060 00190000 		.word	6400
 4708 0064 0000000D 		.word	218103808
 4709 0068 00000000 		.word	shellEnter
 4710 006c 00000000 		.word	shellDesc0x0D000000
 4713              	shellKey0x0A000000:
 4714 0070 00190000 		.word	6400
 4715 0074 0000000A 		.word	167772160
 4716 0078 00000000 		.word	shellEnter
 4717 007c 00000000 		.word	shellDesc0x0A000000
 4720              	shellKey0x1B5B337E:
 4721 0080 00190000 		.word	6400
 4722 0084 7E335B1B 		.word	458961790
 4723 0088 00000000 		.word	shellDelete
 4724 008c 00000000 		.word	shellDesc0x1B5B337E
 4727              	shellKey0x7F000000:
 4728 0090 00190000 		.word	6400
 4729 0094 0000007F 		.word	2130706432
 4730 0098 00000000 		.word	shellBackspace
 4731 009c 00000000 		.word	shellDesc0x7F000000
 4734              	shellKey0x08000000:
 4735 00a0 00190000 		.word	6400
 4736 00a4 00000008 		.word	134217728
 4737 00a8 00000000 		.word	shellBackspace
 4738 00ac 00000000 		.word	shellDesc0x08000000
 4741              	shellKey0x09000000:
 4742 00b0 00090000 		.word	2304
 4743 00b4 00000009 		.word	150994944
 4744 00b8 00000000 		.word	shellTab
 4745 00bc 00000000 		.word	shellDesc0x09000000
 4748              	shellKey0x1B5B4400:
 4749 00c0 00190000 		.word	6400
 4750 00c4 00445B1B 		.word	458966016
 4751 00c8 00000000 		.word	shellLeft
 4752 00cc 00000000 		.word	shellDesc0x1B5B4400
 4755              	shellKey0x1B5B4300:
 4756 00d0 00190000 		.word	6400
 4757 00d4 00435B1B 		.word	458965760
 4758 00d8 00000000 		.word	shellRight
 4759 00dc 00000000 		.word	shellDesc0x1B5B4300
 4762              	shellKey0x1B5B4200:
 4763 00e0 00090000 		.word	2304
 4764 00e4 00425B1B 		.word	458965504
 4765 00e8 00000000 		.word	shellDown
 4766 00ec 00000000 		.word	shellDesc0x1B5B4200
 4769              	shellKey0x1B5B4100:
 4770 00f0 00090000 		.word	2304
 4771 00f4 00415B1B 		.word	458965248
 4772 00f8 00000000 		.word	shellUp
 4773 00fc 00000000 		.word	shellDesc0x1B5B4100
 4776              	shellCommandsetVar:
 4777 0100 00210000 		.word	8448
 4778 0104 00000000 		.word	shellCmdsetVar
 4779 0108 00000000 		.word	shellSetVar
 4780 010c 00000000 		.word	shellDescsetVar
 4783              	shellUserDefault:
 4784 0110 00080000 		.word	2048
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 126


 4785 0114 00000000 		.word	shellCmdDefaultUser
 4786 0118 00000000 		.word	shellPasswordDefaultUser
 4787 011c 00000000 		.word	shellDesDefaultUser
 4788              		.section	.rodata.shellDescclear,"a",%progbits
 4789              		.align	2
 4792              	shellDescclear:
 4793 0000 636C6561 		.ascii	"clear console\000"
 4793      7220636F 
 4793      6E736F6C 
 4793      6500
 4794              		.section	.rodata.shellDesc0x0A000000,"a",%progbits
 4795              		.align	2
 4798              	shellDesc0x0A000000:
 4799 0000 656E7465 		.ascii	"enter\000"
 4799      7200
 4800              		.section	.rodata.shellDeschelp,"a",%progbits
 4801              		.align	2
 4804              	shellDeschelp:
 4805 0000 73686F77 		.ascii	"show command info\015\012help [cmd]\000"
 4805      20636F6D 
 4805      6D616E64 
 4805      20696E66 
 4805      6F0D0A68 
 4806              		.section	.rodata.shellDesc0x1B5B4200,"a",%progbits
 4807              		.align	2
 4810              	shellDesc0x1B5B4200:
 4811 0000 646F776E 		.ascii	"down\000"
 4811      00
 4812              		.section	.rodata.shellDesc0x09000000,"a",%progbits
 4813              		.align	2
 4816              	shellDesc0x09000000:
 4817 0000 74616200 		.ascii	"tab\000"
 4818              		.section	.rodata.shellCmdcmds,"a",%progbits
 4819              		.align	2
 4822              	shellCmdcmds:
 4823 0000 636D6473 		.ascii	"cmds\000"
 4823      00
 4824              		.section	.rodata.shellCmdsetVar,"a",%progbits
 4825              		.align	2
 4828              	shellCmdsetVar:
 4829 0000 73657456 		.ascii	"setVar\000"
 4829      617200
 4830              		.section	.rodata.shellDesc0x1B5B337E,"a",%progbits
 4831              		.align	2
 4834              	shellDesc0x1B5B337E:
 4835 0000 64656C65 		.ascii	"delete\000"
 4835      746500
 4836              		.section	.rodata.shellDesDefaultUser,"a",%progbits
 4837              		.align	2
 4840              	shellDesDefaultUser:
 4841 0000 64656661 		.ascii	"default user\000"
 4841      756C7420 
 4841      75736572 
 4841      00
 4842              		.section	.bss.shellList,"aw",%nobits
 4843              		.align	2
 4844              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 127


 4847              	shellList:
 4848 0000 00000000 		.space	20
 4848      00000000 
 4848      00000000 
 4848      00000000 
 4848      00000000 
 4849              		.section	.rodata.shellDesc0x1B5B4400,"a",%progbits
 4850              		.align	2
 4853              	shellDesc0x1B5B4400:
 4854 0000 6C656674 		.ascii	"left\000"
 4854      00
 4855              		.section	.rodata.shellCmdDefaultUser,"a",%progbits
 4856              		.align	2
 4859              	shellCmdDefaultUser:
 4860 0000 77687900 		.ascii	"why\000"
 4861              		.section	.rodata.str1.4,"aMS",%progbits,1
 4862              		.align	2
 4863              	.LC0:
 4864 0000 1B5B324A 		.ascii	"\033[2J\033[1H\000"
 4864      1B5B3148 
 4864      00
 4865 0009 000000   		.space	3
 4866              	.LC1:
 4867 000c 0D0A2020 		.ascii	"\015\012  ____    _      _       ___      _        "
 4867      5F5F5F5F 
 4867      20202020 
 4867      5F202020 
 4867      2020205F 
 4868 0039 20202020 		.ascii	"           \015\012 |    \\  /_\\    | |     | _ \\"
 4868      20202020 
 4868      2020200D 
 4868      0A207C20 
 4868      2020205C 
 4869 0063 2020207C 		.ascii	"   | |              ___ \015\012 |    |   _   __| |"
 4869      207C2020 
 4869      20202020 
 4869      20202020 
 4869      20202020 
 4870 0090 5F5F2020 		.ascii	"__   ||_|/ __| |__   ___    //    \015\012 |----/  "
 4870      207C7C5F 
 4870      7C2F205F 
 4870      5F7C207C 
 4870      5F5F2020 
 4871 00bd 7C207C20 		.ascii	"| | |__   __|  |  \\ |__   __|  //   \\  \\__    \015"
 4871      7C5F5F20 
 4871      20205F5F 
 4871      7C20207C 
 4871      20205C20 
 4872 00ec 0A207C20 		.ascii	"\012 |    |  | |    | |_    | |\\    | |_   ||   ||"
 4872      2020207C 
 4872      20207C20 
 4872      7C202020 
 4872      207C207C 
 4873 011b 20202020 		.ascii	"      \\  \015\012 \\____/  |_|    |___/   |_| \\  "
 4873      20205C20 
 4873      200D0A20 
 4873      5C5F5F5F 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 128


 4873      5F2F2020 
 4874 0145 207C5F5F 		.ascii	" |___/   \\___//   ___//  \015\012\015\012Build:   "
 4874      5F2F2020 
 4874      205C5F5F 
 4874      5F2F2F20 
 4874      20205F5F 
 4875 016b 20202020 		.ascii	"    Nov 16 2021 18:24:48\015\012Version:     3.0.6\015"
 4875      4E6F7620 
 4875      31362032 
 4875      30323120 
 4875      31383A32 
 4876 0198 0A00     		.ascii	"\012\000"
 4877 019a 0000     		.space	2
 4878              	.LC2:
 4879 019c 2F00     		.ascii	"/\000"
 4880 019e 0000     		.space	2
 4881              	.LC3:
 4882 01a0 0D0A00   		.ascii	"\015\012\000"
 4883 01a3 00       		.space	1
 4884              	.LC4:
 4885 01a4 3A00     		.ascii	":\000"
 4886 01a6 0000     		.space	2
 4887              	.LC5:
 4888 01a8 242000   		.ascii	"$ \000"
 4889 01ab 00       		.space	1
 4890              	.LC6:
 4891 01ac 0D0A506C 		.ascii	"\015\012Please input password:\000"
 4891      65617365 
 4891      20696E70 
 4891      75742070 
 4891      61737377 
 4892 01c5 000000   		.space	3
 4893              	.LC7:
 4894 01c8 0D0A7061 		.ascii	"\015\012password error\015\012\000"
 4894      7373776F 
 4894      72642065 
 4894      72726F72 
 4894      0D0A00
 4895 01db 00       		.space	1
 4896              	.LC9:
 4897 01dc 52657475 		.ascii	"Return: \000"
 4897      726E3A20 
 4897      00
 4898 01e5 000000   		.space	3
 4899              	.LC10:
 4900 01e8 2C203078 		.ascii	", 0x\000"
 4900      00
 4901 01ed 000000   		.space	3
 4902              	.LC8:
 4903 01f0 30303030 		.ascii	"00000000000\000"
 4903      30303030 
 4903      30303000 
 4904              	.LC11:
 4905 01fc 434D4420 		.ascii	"CMD \015\012\000"
 4905      0D0A00
 4906 0203 00       		.space	1
 4907              	.LC12:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 129


 4908 0204 56415200 		.ascii	"VAR\000"
 4909              	.LC13:
 4910 0208 55534552 		.ascii	"USER\000"
 4910      00
 4911 020d 000000   		.space	3
 4912              	.LC14:
 4913 0210 4B455900 		.ascii	"KEY\000"
 4914              	.LC15:
 4915 0214 4E4F4E45 		.ascii	"NONE\000"
 4915      00
 4916 0219 000000   		.space	3
 4917              	.LC16:
 4918 021c 0D0A436F 		.ascii	"\015\012Command List:\015\012\000"
 4918      6D6D616E 
 4918      64204C69 
 4918      73743A0D 
 4918      0A00
 4919 022e 0000     		.space	2
 4920              	.LC17:
 4921 0230 0D0A5661 		.ascii	"\015\012Var List:\015\012\000"
 4921      72204C69 
 4921      73743A0D 
 4921      0A00
 4922 023e 0000     		.space	2
 4923              	.LC18:
 4924 0240 0D0A5573 		.ascii	"\015\012User List:\015\012\000"
 4924      6572204C 
 4924      6973743A 
 4924      0D0A00
 4925 024f 00       		.space	1
 4926              	.LC19:
 4927 0250 0D0A4B65 		.ascii	"\015\012Key List:\015\012\000"
 4927      79204C69 
 4927      73743A0D 
 4927      0A00
 4928 025e 0000     		.space	2
 4929              	.LC20:
 4930 0260 08200800 		.ascii	"\010 \010\000"
 4931              	.LC21:
 4932 0264 0D0A5761 		.ascii	"\015\012Warning: Command is too long\015\012\000"
 4932      726E696E 
 4932      673A2043 
 4932      6F6D6D61 
 4932      6E642069 
 4933 0285 000000   		.space	3
 4934              	.LC22:
 4935 0288 77687900 		.ascii	"why\000"
 4936              	.LC23:
 4937 028c 636F6D6D 		.ascii	"command help of \000"
 4937      616E6420 
 4937      68656C70 
 4937      206F6620 
 4937      00
 4938 029d 000000   		.space	3
 4939              	.LC24:
 4940 02a0 436F6D6D 		.ascii	"Command not Found\015\012\000"
 4940      616E6420 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 130


 4940      6E6F7420 
 4940      466F756E 
 4940      640D0A00 
 4941              	.LC25:
 4942 02b4 203D2000 		.ascii	" = \000"
 4943              	.LC26:
 4944 02b8 2200     		.ascii	"\"\000"
 4945 02ba 0000     		.space	2
 4946              	.LC27:
 4947 02bc 63616E27 		.ascii	"can't set read only var\015\012\000"
 4947      74207365 
 4947      74207265 
 4947      6164206F 
 4947      6E6C7920 
 4948 02d6 0000     		.space	2
 4949              	.LC28:
 4950 02d8 63616E27 		.ascii	"can't set pointer\015\012\000"
 4950      74207365 
 4950      7420706F 
 4950      696E7465 
 4950      720D0A00 
 4951              	.LC29:
 4952 02ec 56617220 		.ascii	"Var not Fount\015\012\000"
 4952      6E6F7420 
 4952      466F756E 
 4952      740D0A00 
 4953              	.LC30:
 4954 02fc 20697320 		.ascii	" is not a var\015\012\000"
 4954      6E6F7420 
 4954      61207661 
 4954      720D0A00 
 4955              		.text
 4956              	.Letext0:
 4957              		.file 2 "Dsp/letter_shell/shell.h"
 4958              		.file 3 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_types.h"
 4959              		.file 4 "d:\\gcc_arm\\5.4 2016q3\\lib\\gcc\\arm-none-eabi\\5.4.1\\include\\stdarg.h"
 4960              		.file 5 "<built-in>"
 4961              		.file 6 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\stdio.h"
 4962              		.file 7 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 4963              		.file 8 "F4_CORE/core_cm4.h"
 4964              		.file 9 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\string.h"
 4965              		.file 10 "SYS/delay/delay.h"
 4966              		.file 11 "Dsp/letter_shell/shell_ext.h"
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 131


DEFINED SYMBOLS
                            *ABS*:00000000 shell.c
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:22     .text.shellAdd:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:26     .text.shellAdd:00000000 shellAdd
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:67     .text.shellAdd:00000020 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:73     .text.shellStringCopy:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:77     .text.shellStringCopy:00000000 shellStringCopy
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:123    .text.shellStringCompare:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:127    .text.shellStringCompare:00000000 shellStringCompare
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:185    .text.shellGetCommandDesc:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:189    .text.shellGetCommandDesc:00000000 shellGetCommandDesc
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:235    .text.shellParserParam:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:239    .text.shellParserParam:00000000 shellParserParam
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:383    .text.shellHistoryAdd:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:387    .text.shellHistoryAdd:00000000 shellHistoryAdd
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:465    .text.shellRemoveParamQuotes:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:469    .text.shellRemoveParamQuotes:00000000 shellRemoveParamQuotes
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:544    .text.shellGetCurrent:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:549    .text.shellGetCurrent:00000000 shellGetCurrent
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:590    .text.shellGetCurrent:00000024 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:595    .text.shellWriteByte:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:600    .text.shellWriteByte:00000000 shellWriteByte
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:627    .text.shellRight:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:632    .text.shellRight:00000000 shellRight
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:662    .text.shellLeft:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:667    .text.shellLeft:00000000 shellLeft
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:704    .text.shellWriteString:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:709    .text.shellWriteString:00000000 shellWriteString
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:772    .text.shellSetUser:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:776    .text.shellSetUser:00000000 shellSetUser
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:851    .text.shellSetUser:00000058 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:857    .text.shellWriteCommandLine:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:861    .text.shellWriteCommandLine:00000000 shellWriteCommandLine
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:924    .text.shellWriteCommandLine:00000048 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:933    .text.shellCheckPassword:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:937    .text.shellCheckPassword:00000000 shellCheckPassword
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:985    .text.shellCheckPassword:00000038 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:991    .text.shellClear:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:996    .text.shellClear:00000000 shellClear
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1021   .text.shellClear:00000010 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1026   .text.shellPrint:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1031   .text.shellPrint:00000000 shellPrint
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1094   .text.shellScan:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1099   .text.shellScan:00000000 shellScan
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1212   .text.shellScan:0000006c $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1217   .text.shellCheckPermission:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1222   .text.shellCheckPermission:00000000 shellCheckPermission
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1277   .text.shellToHex:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1282   .text.shellToHex:00000000 shellToHex
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1348   .text.shellGetCommandName:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1352   .text.shellGetCommandName:00000000 shellGetCommandName
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1430   .text.shellGetCommandName:00000040 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1435   .text.shellToDec:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1440   .text.shellToDec:00000000 shellToDec
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1536   .text.shellToDec:00000058 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1541   .text.shellWriteReturnValue:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1545   .text.shellWriteReturnValue:00000000 shellWriteReturnValue
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 132


C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1636   .text.shellWriteReturnValue:0000006c $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1644   .text.shellListItem:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1649   .text.shellListItem:00000000 shellListItem
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1751   .text.shellListItem:00000078 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1760   .text.shellListCommand:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1765   .text.shellListCommand:00000000 shellListCommand
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1830   .text.shellListCommand:00000040 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1835   .text.shellCmds:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1840   .text.shellCmds:00000000 shellCmds
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1865   .text.shellListVar:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1870   .text.shellListVar:00000000 shellListVar
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1939   .text.shellListVar:00000044 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1944   .text.shellVars:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1949   .text.shellVars:00000000 shellVars
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1974   .text.shellListUser:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:1979   .text.shellListUser:00000000 shellListUser
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2046   .text.shellListUser:00000040 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2051   .text.shellUsers:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2056   .text.shellUsers:00000000 shellUsers
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2081   .text.shellListKey:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2086   .text.shellListKey:00000000 shellListKey
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2153   .text.shellListKey:00000040 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2158   .text.shellKeys:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2163   .text.shellKeys:00000000 shellKeys
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2188   .text.shellListAll:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2193   .text.shellListAll:00000000 shellListAll
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2213   .text.shellDeleteCommandLine:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2218   .text.shellDeleteCommandLine:00000000 shellDeleteCommandLine
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2257   .text.shellDeleteCommandLine:0000001c $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2262   .text.shellClearCommandLine:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2267   .text.shellClearCommandLine:00000000 shellClearCommandLine
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2317   .text.shellHistory:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2321   .text.shellHistory:00000000 shellHistory
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2434   .text.shellHistory:000000a4 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2439   .text.shellUp:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2444   .text.shellUp:00000000 shellUp
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2465   .text.shellDown:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2470   .text.shellDown:00000000 shellDown
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2491   .text.shellTab:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2496   .text.shellTab:00000000 shellTab
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2706   .text.shellTab:00000114 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2712   .text.shellInsertByte:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2717   .text.shellInsertByte:00000000 shellInsertByte
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2884   .text.shellInsertByte:000000b8 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2890   .text.shellDeleteByte:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:2895   .text.shellDeleteByte:00000000 shellDeleteByte
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3067   .text.shellBackspace:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3072   .text.shellBackspace:00000000 shellBackspace
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3093   .text.shellDelete:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3098   .text.shellDelete:00000000 shellDelete
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3119   .text.shellSeekCommand:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3124   .text.shellSeekCommand:00000000 shellSeekCommand
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3220   .text.shellInit:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3225   .text.shellInit:00000000 shellInit
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3325   .text.shellInit:0000007c $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3333   .text.shellHelp:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3338   .text.shellHelp:00000000 shellHelp
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 133


C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3432   .text.shellHelp:0000006c $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3440   .text.shellGetVarValue:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3445   .text.shellGetVarValue:00000000 shellGetVarValue
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3466   .text.shellGetVarValue:00000012 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3472   .text.shellGetVarValue:00000018 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3533   .text.shellShowVar:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3537   .text.shellShowVar:00000000 shellShowVar
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3670   .text.shellShowVar:000000a8 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3679   .text.shellSetVarValue:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3684   .text.shellSetVarValue:00000000 shellSetVarValue
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3721   .text.shellSetVarValue:00000026 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3727   .text.shellSetVarValue:0000002c $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3796   .text.shellSetVarValue:00000070 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3802   .text.shellSetVar:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3807   .text.shellSetVar:00000000 shellSetVar
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3892   .text.shellSetVar:0000005c $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3898   .text.shellRunCommand:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:3903   .text.shellRunCommand:00000000 shellRunCommand
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4017   .text.shellNormalInput:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4022   .text.shellNormalInput:00000000 shellNormalInput
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4046   .text.shellExec:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4051   .text.shellExec:00000000 shellExec
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4139   .text.shellExec:00000060 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4145   .text.shellEnter:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4150   .text.shellEnter:00000000 shellEnter
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4176   .text.shellHandler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4181   .text.shellHandler:00000000 shellHandler
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4353   .text.shellHandler:000000d4 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4358   .text.shellTask:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4363   .text.shellTask:00000000 shellTask
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4412   .text.shellRun:00000000 $t
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4417   .text.shellRun:00000000 shellRun
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4508   .text.shellRun:0000005c $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4664   shellCommand:00000000 shellCommandclear
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4792   .rodata.shellDescclear:00000000 shellDescclear
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4616   .rodata.shellCmdclear:00000000 shellCmdclear
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4671   shellCommand:00000010 shellCommandkeys
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4622   .rodata.shellDesckeys:00000000 shellDesckeys
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4628   .rodata.shellCmdkeys:00000000 shellCmdkeys
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4678   shellCommand:00000020 shellCommandvars
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4573   .rodata.shellDescvars:00000000 shellDescvars
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4610   .rodata.shellCmdvars:00000000 shellCmdvars
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4685   shellCommand:00000030 shellCommandcmds
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4579   .rodata.shellDesccmds:00000000 shellDesccmds
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4822   .rodata.shellCmdcmds:00000000 shellCmdcmds
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4692   shellCommand:00000040 shellCommandusers
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4640   .rodata.shellDescusers:00000000 shellDescusers
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4585   .rodata.shellCmdusers:00000000 shellCmdusers
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4699   shellCommand:00000050 shellCommandhelp
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4804   .rodata.shellDeschelp:00000000 shellDeschelp
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4646   .rodata.shellCmdhelp:00000000 shellCmdhelp
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4706   shellCommand:00000060 shellKey0x0D000000
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4658   .rodata.shellDesc0x0D000000:00000000 shellDesc0x0D000000
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4713   shellCommand:00000070 shellKey0x0A000000
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4798   .rodata.shellDesc0x0A000000:00000000 shellDesc0x0A000000
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4720   shellCommand:00000080 shellKey0x1B5B337E
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4834   .rodata.shellDesc0x1B5B337E:00000000 shellDesc0x1B5B337E
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 134


C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4727   shellCommand:00000090 shellKey0x7F000000
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4591   .rodata.shellDesc0x7F000000:00000000 shellDesc0x7F000000
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4734   shellCommand:000000a0 shellKey0x08000000
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4634   .rodata.shellDesc0x08000000:00000000 shellDesc0x08000000
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4741   shellCommand:000000b0 shellKey0x09000000
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4816   .rodata.shellDesc0x09000000:00000000 shellDesc0x09000000
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4748   shellCommand:000000c0 shellKey0x1B5B4400
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4853   .rodata.shellDesc0x1B5B4400:00000000 shellDesc0x1B5B4400
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4755   shellCommand:000000d0 shellKey0x1B5B4300
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4604   .rodata.shellDesc0x1B5B4300:00000000 shellDesc0x1B5B4300
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4762   shellCommand:000000e0 shellKey0x1B5B4200
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4810   .rodata.shellDesc0x1B5B4200:00000000 shellDesc0x1B5B4200
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4769   shellCommand:000000f0 shellKey0x1B5B4100
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4567   .rodata.shellDesc0x1B5B4100:00000000 shellDesc0x1B5B4100
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4776   shellCommand:00000100 shellCommandsetVar
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4652   .rodata.shellDescsetVar:00000000 shellDescsetVar
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4828   .rodata.shellCmdsetVar:00000000 shellCmdsetVar
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4783   shellCommand:00000110 shellUserDefault
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4840   .rodata.shellDesDefaultUser:00000000 shellDesDefaultUser
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4561   .rodata.shellPasswordDefaultUser:00000000 shellPasswordDefaultUser
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4859   .rodata.shellCmdDefaultUser:00000000 shellCmdDefaultUser
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4558   .rodata.shellPasswordDefaultUser:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4564   .rodata.shellDesc0x1B5B4100:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4570   .rodata.shellDescvars:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4576   .rodata.shellDesccmds:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4582   .rodata.shellCmdusers:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4588   .rodata.shellDesc0x7F000000:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4594   .bss.buffer.9206:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4598   .bss.buffer.9206:00000000 buffer.9206
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4601   .rodata.shellDesc0x1B5B4300:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4607   .rodata.shellCmdvars:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4613   .rodata.shellCmdclear:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4619   .rodata.shellDesckeys:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4625   .rodata.shellCmdkeys:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4631   .rodata.shellDesc0x08000000:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4637   .rodata.shellDescusers:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4643   .rodata.shellCmdhelp:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4649   .rodata.shellDescsetVar:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4655   .rodata.shellDesc0x0D000000:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4661   shellCommand:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4789   .rodata.shellDescclear:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4795   .rodata.shellDesc0x0A000000:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4801   .rodata.shellDeschelp:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4807   .rodata.shellDesc0x1B5B4200:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4813   .rodata.shellDesc0x09000000:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4819   .rodata.shellCmdcmds:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4825   .rodata.shellCmdsetVar:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4831   .rodata.shellDesc0x1B5B337E:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4837   .rodata.shellDesDefaultUser:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4843   .bss.shellList:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4847   .bss.shellList:00000000 shellList
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4850   .rodata.shellDesc0x1B5B4400:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4856   .rodata.shellCmdDefaultUser:00000000 $d
C:\Users\why\AppData\Local\Temp\ccRGm6ad.s:4862   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ARM GAS  C:\Users\why\AppData\Local\Temp\ccRGm6ad.s 			page 135


strcmp
strlen
delay_us
vsnprintf
vsscanf
strncmp
_shell_command_start
_shell_command_end
shellExtRun
