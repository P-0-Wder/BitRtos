ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"shell.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.shellAdd,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	shellAdd:
  27              	.LFB125:
  28              		.file 1 "Dsp/letter_shell/shell.c"
   1:Dsp/letter_shell/shell.c **** /**
   2:Dsp/letter_shell/shell.c ****  * @file shell.c
   3:Dsp/letter_shell/shell.c ****  * @author Letter (NevermindZZT@gmail.com)
   4:Dsp/letter_shell/shell.c ****  * @version 3.0.0
   5:Dsp/letter_shell/shell.c ****  * @date 2019-12-30
   6:Dsp/letter_shell/shell.c ****  * 
   7:Dsp/letter_shell/shell.c ****  * @copyright (c) 2020 Letter
   8:Dsp/letter_shell/shell.c ****  * 
   9:Dsp/letter_shell/shell.c ****  */
  10:Dsp/letter_shell/shell.c **** 
  11:Dsp/letter_shell/shell.c **** #include "shell.h"
  12:Dsp/letter_shell/shell.c **** #include "string.h"
  13:Dsp/letter_shell/shell.c **** #include "stdio.h"
  14:Dsp/letter_shell/shell.c **** #include "stdarg.h"
  15:Dsp/letter_shell/shell.c **** #include "shell_ext.h"
  16:Dsp/letter_shell/shell.c **** #include "delay.h"
  17:Dsp/letter_shell/shell.c **** #include "stm32f4xx_usart.h"
  18:Dsp/letter_shell/shell.c **** 
  19:Dsp/letter_shell/shell.c **** 
  20:Dsp/letter_shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
  21:Dsp/letter_shell/shell.c **** /**
  22:Dsp/letter_shell/shell.c ****  * @brief 默认用户
  23:Dsp/letter_shell/shell.c ****  */
  24:Dsp/letter_shell/shell.c **** const char shellCmdDefaultUser[] = SHELL_DEFAULT_USER;
  25:Dsp/letter_shell/shell.c **** const char shellPasswordDefaultUser[] = SHELL_DEFAULT_USER_PASSWORD;
  26:Dsp/letter_shell/shell.c **** const char shellDesDefaultUser[] = "default user";
  27:Dsp/letter_shell/shell.c **** const ShellCommand shellUserDefault SECTION("shellCommand") =
  28:Dsp/letter_shell/shell.c **** {
  29:Dsp/letter_shell/shell.c ****     .attr.value = SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_USER),
  30:Dsp/letter_shell/shell.c ****     .data.user.name = shellCmdDefaultUser,
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 2


  31:Dsp/letter_shell/shell.c ****     .data.user.password = shellPasswordDefaultUser,
  32:Dsp/letter_shell/shell.c ****     .data.user.desc = shellDesDefaultUser
  33:Dsp/letter_shell/shell.c **** };
  34:Dsp/letter_shell/shell.c **** #endif
  35:Dsp/letter_shell/shell.c **** 
  36:Dsp/letter_shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
  37:Dsp/letter_shell/shell.c ****     #if defined(__CC_ARM) || (defined(__ARMCC_VERSION) && __ARMCC_VERSION >= 6000000)
  38:Dsp/letter_shell/shell.c ****         extern const unsigned int shellCommand$$Base;
  39:Dsp/letter_shell/shell.c ****         extern const unsigned int shellCommand$$Limit;
  40:Dsp/letter_shell/shell.c ****     #elif defined(__ICCARM__) || defined(__ICCRX__)
  41:Dsp/letter_shell/shell.c ****         #pragma section="shellCommand"
  42:Dsp/letter_shell/shell.c ****     #elif defined(__GNUC__)
  43:Dsp/letter_shell/shell.c ****         extern const unsigned int _shell_command_start;
  44:Dsp/letter_shell/shell.c ****         extern const unsigned int _shell_command_end;
  45:Dsp/letter_shell/shell.c ****     #endif
  46:Dsp/letter_shell/shell.c **** #else
  47:Dsp/letter_shell/shell.c ****     extern const ShellCommand shellCommandList[];
  48:Dsp/letter_shell/shell.c ****     extern const unsigned short shellCommandCount;
  49:Dsp/letter_shell/shell.c **** #endif
  50:Dsp/letter_shell/shell.c **** 
  51:Dsp/letter_shell/shell.c **** 
  52:Dsp/letter_shell/shell.c **** /**
  53:Dsp/letter_shell/shell.c ****  * @brief shell 常量文本索引
  54:Dsp/letter_shell/shell.c ****  */
  55:Dsp/letter_shell/shell.c **** enum
  56:Dsp/letter_shell/shell.c **** {
  57:Dsp/letter_shell/shell.c **** #if SHELL_SHOW_INFO == 1
  58:Dsp/letter_shell/shell.c ****     SHELL_TEXT_INFO,                                    /**< shell信息 */
  59:Dsp/letter_shell/shell.c **** #endif
  60:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CMD_TOO_LONG,                            /**< 命令过长 */
  61:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CMD_LIST,                                /**< 可执行命令列表标题 */
  62:Dsp/letter_shell/shell.c ****     SHELL_TEXT_VAR_LIST,                                /**< 变量列表标题 */
  63:Dsp/letter_shell/shell.c ****     SHELL_TEXT_USER_LIST,                               /**< 用户列表标题 */
  64:Dsp/letter_shell/shell.c ****     SHELL_TEXT_KEY_LIST,                                /**< 按键列表标题 */
  65:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CMD_NOT_FOUND,                           /**< 命令未找到 */
  66:Dsp/letter_shell/shell.c ****     SHELL_TEXT_POINT_CANNOT_MODIFY,                     /**< 指针变量不允许修改 */
  67:Dsp/letter_shell/shell.c ****     SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY,             /**< 只读变量不允许修改 */
  68:Dsp/letter_shell/shell.c ****     SHELL_TEXT_NOT_VAR,                                 /**< 命令不是变量 */
  69:Dsp/letter_shell/shell.c ****     SHELL_TEXT_VAR_NOT_FOUND,                           /**< 变量未找到 */
  70:Dsp/letter_shell/shell.c ****     SHELL_TEXT_HELP_HEADER,                             /**< help头 */
  71:Dsp/letter_shell/shell.c ****     SHELL_TEXT_PASSWORD_HINT,                           /**< 密码输入提示 */
  72:Dsp/letter_shell/shell.c ****     SHELL_TEXT_PASSWORD_ERROR,                          /**< 密码错误 */
  73:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CLEAR_CONSOLE,                           /**< 清空控制台 */
  74:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CLEAR_LINE,                              /**< 清空当前行 */
  75:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_CMD,                                /**< 命令类型 */
  76:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_VAR,                                /**< 变量类型 */
  77:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_USER,                               /**< 用户类型 */
  78:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_KEY,                                /**< 按键类型 */
  79:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_NONE,                               /**< 非法类型 */
  80:Dsp/letter_shell/shell.c **** #if SHELL_EXEC_UNDEF_FUNC == 1
  81:Dsp/letter_shell/shell.c ****     SHELL_TEXT_PARAM_ERROR,                             /**< 参数错误 */
  82:Dsp/letter_shell/shell.c **** #endif
  83:Dsp/letter_shell/shell.c **** };
  84:Dsp/letter_shell/shell.c **** 
  85:Dsp/letter_shell/shell.c **** 
  86:Dsp/letter_shell/shell.c **** 
  87:Dsp/letter_shell/shell.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 3


  88:Dsp/letter_shell/shell.c **** static const char *shellText[] =
  89:Dsp/letter_shell/shell.c **** {
  90:Dsp/letter_shell/shell.c **** #if SHELL_SHOW_INFO == 1
  91:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_INFO] =
  92:Dsp/letter_shell/shell.c ****         "\r\n"
  93:Dsp/letter_shell/shell.c **** 		"  ____    _      _       ___      _                   \r\n"
  94:Dsp/letter_shell/shell.c **** 		" |    \\  /_\\    | |     | _ \\   | |              ___ \r\n"
  95:Dsp/letter_shell/shell.c **** 		" |    |   _   __| |__   ||_|/ __| |__   ___    //    \r\n"
  96:Dsp/letter_shell/shell.c **** 		" |----/  | | |__   __|  |  \\ |__   __|  //   \\  \\__    \r\n"
  97:Dsp/letter_shell/shell.c **** 		" |    |  | |    | |_    | |\\    | |_   ||   ||      \\  \r\n"
  98:Dsp/letter_shell/shell.c **** 		" \\____/  |_|    |___/   |_| \\   |___/   \\___//   ___//  \r\n"
  99:Dsp/letter_shell/shell.c ****         "\r\n"
 100:Dsp/letter_shell/shell.c ****         "Build:       "__DATE__" "__TIME__"\r\n"
 101:Dsp/letter_shell/shell.c ****         "Version:     "SHELL_VERSION"\r\n",
 102:Dsp/letter_shell/shell.c **** #endif
 103:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CMD_TOO_LONG] = 
 104:Dsp/letter_shell/shell.c ****         "\r\nWarning: Command is too long\r\n",
 105:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CMD_LIST] = 
 106:Dsp/letter_shell/shell.c ****         "\r\nCommand List:\r\n",
 107:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_VAR_LIST] = 
 108:Dsp/letter_shell/shell.c ****         "\r\nVar List:\r\n",
 109:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_USER_LIST] = 
 110:Dsp/letter_shell/shell.c ****         "\r\nUser List:\r\n",
 111:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_KEY_LIST] =
 112:Dsp/letter_shell/shell.c ****         "\r\nKey List:\r\n",
 113:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CMD_NOT_FOUND] = 
 114:Dsp/letter_shell/shell.c ****         "Command not Found\r\n",
 115:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_POINT_CANNOT_MODIFY] = 
 116:Dsp/letter_shell/shell.c ****         "can't set pointer\r\n",
 117:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY] = 
 118:Dsp/letter_shell/shell.c ****         "can't set read only var\r\n",
 119:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_NOT_VAR] =
 120:Dsp/letter_shell/shell.c ****         " is not a var\r\n",
 121:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_VAR_NOT_FOUND] = 
 122:Dsp/letter_shell/shell.c ****         "Var not Fount\r\n",
 123:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_HELP_HEADER] =
 124:Dsp/letter_shell/shell.c ****         "command help of ",
 125:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_PASSWORD_HINT] = 
 126:Dsp/letter_shell/shell.c ****         "\r\nPlease input password:",
 127:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_PASSWORD_ERROR] = 
 128:Dsp/letter_shell/shell.c ****         "\r\npassword error\r\n",
 129:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CLEAR_CONSOLE] = 
 130:Dsp/letter_shell/shell.c ****         "\033[2J\033[1H",
 131:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CLEAR_LINE] = 
 132:Dsp/letter_shell/shell.c ****         "\033[2K\r",
 133:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_CMD] = 
 134:Dsp/letter_shell/shell.c ****         "CMD \r\n",
 135:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_VAR] = 
 136:Dsp/letter_shell/shell.c ****         "VAR",
 137:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_USER] = 
 138:Dsp/letter_shell/shell.c ****         "USER",
 139:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_KEY] = 
 140:Dsp/letter_shell/shell.c ****         "KEY",
 141:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_NONE] = 
 142:Dsp/letter_shell/shell.c ****         "NONE",
 143:Dsp/letter_shell/shell.c **** #if SHELL_EXEC_UNDEF_FUNC == 1
 144:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_PARAM_ERROR] = 
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 4


 145:Dsp/letter_shell/shell.c ****         "Parameter error\r\n",
 146:Dsp/letter_shell/shell.c **** #endif
 147:Dsp/letter_shell/shell.c **** };
 148:Dsp/letter_shell/shell.c **** 
 149:Dsp/letter_shell/shell.c **** 
 150:Dsp/letter_shell/shell.c **** /**
 151:Dsp/letter_shell/shell.c ****  * @brief shell对象表
 152:Dsp/letter_shell/shell.c ****  */
 153:Dsp/letter_shell/shell.c **** static Shell *shellList[SHELL_MAX_NUMBER] = {NULL};
 154:Dsp/letter_shell/shell.c **** 
 155:Dsp/letter_shell/shell.c **** 
 156:Dsp/letter_shell/shell.c **** static void shellAdd(Shell *shell);
 157:Dsp/letter_shell/shell.c **** static void shellWriteCommandLine(Shell *shell, unsigned char newline);
 158:Dsp/letter_shell/shell.c **** static void shellWriteReturnValue(Shell *shell, int value);
 159:Dsp/letter_shell/shell.c **** static int shellShowVar(Shell *shell, ShellCommand *command);
 160:Dsp/letter_shell/shell.c **** static void shellSetUser(Shell *shell, const ShellCommand *user);
 161:Dsp/letter_shell/shell.c **** ShellCommand* shellSeekCommand(Shell *shell,
 162:Dsp/letter_shell/shell.c ****                                const char *cmd,
 163:Dsp/letter_shell/shell.c ****                                ShellCommand *base,
 164:Dsp/letter_shell/shell.c ****                                unsigned short compareLength);
 165:Dsp/letter_shell/shell.c **** 
 166:Dsp/letter_shell/shell.c **** /**
 167:Dsp/letter_shell/shell.c ****  * @brief shell 初始化
 168:Dsp/letter_shell/shell.c ****  * 
 169:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 170:Dsp/letter_shell/shell.c ****  */
 171:Dsp/letter_shell/shell.c **** void shellInit(Shell *shell, char *buffer, unsigned short size)
 172:Dsp/letter_shell/shell.c **** {
 173:Dsp/letter_shell/shell.c ****     shell->parser.length = 0;
 174:Dsp/letter_shell/shell.c ****     shell->parser.cursor = 0;
 175:Dsp/letter_shell/shell.c ****     shell->history.offset = 0;
 176:Dsp/letter_shell/shell.c ****     shell->history.number = 0;
 177:Dsp/letter_shell/shell.c ****     shell->history.record = 0;
 178:Dsp/letter_shell/shell.c ****     shell->info.user = NULL;
 179:Dsp/letter_shell/shell.c ****     shell->status.isChecked = 1;
 180:Dsp/letter_shell/shell.c **** 
 181:Dsp/letter_shell/shell.c ****     shell->parser.buffer = buffer;
 182:Dsp/letter_shell/shell.c ****     shell->parser.bufferSize = size / (SHELL_HISTORY_MAX_NUMBER + 1);
 183:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_HISTORY_MAX_NUMBER; i++)
 184:Dsp/letter_shell/shell.c ****     {
 185:Dsp/letter_shell/shell.c ****         shell->history.item[i] = buffer + shell->parser.bufferSize * (i + 1);
 186:Dsp/letter_shell/shell.c ****     }
 187:Dsp/letter_shell/shell.c **** 
 188:Dsp/letter_shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
 189:Dsp/letter_shell/shell.c ****     #if defined(__CC_ARM) || (defined(__ARMCC_VERSION) && __ARMCC_VERSION >= 6000000)
 190:Dsp/letter_shell/shell.c ****         shell->commandList.base = (ShellCommand *)(&shellCommand$$Base);
 191:Dsp/letter_shell/shell.c ****         shell->commandList.count = ((unsigned int)(&shellCommand$$Limit)
 192:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(&shellCommand$$Base))
 193:Dsp/letter_shell/shell.c ****                                 / sizeof(ShellCommand);
 194:Dsp/letter_shell/shell.c **** 
 195:Dsp/letter_shell/shell.c ****     #elif defined(__ICCARM__) || defined(__ICCRX__)
 196:Dsp/letter_shell/shell.c ****         shell->commandList.base = (ShellCommand *)(__section_begin("shellCommand"));
 197:Dsp/letter_shell/shell.c ****         shell->commandList.count = ((unsigned int)(__section_end("shellCommand"))
 198:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(__section_begin("shellCommand")))
 199:Dsp/letter_shell/shell.c ****                                 / sizeof(ShellCommand);
 200:Dsp/letter_shell/shell.c ****     #elif defined(__GNUC__)
 201:Dsp/letter_shell/shell.c ****         shell->commandList.base = (ShellCommand *)(&_shell_command_start);
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 5


 202:Dsp/letter_shell/shell.c ****         shell->commandList.count = ((unsigned int)(&_shell_command_end)
 203:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(&_shell_command_start))
 204:Dsp/letter_shell/shell.c ****                                 / sizeof(ShellCommand);
 205:Dsp/letter_shell/shell.c ****     #else
 206:Dsp/letter_shell/shell.c ****         #error not supported compiler, please use command table mode
 207:Dsp/letter_shell/shell.c ****     #endif
 208:Dsp/letter_shell/shell.c **** #else
 209:Dsp/letter_shell/shell.c ****     shell->commandList.base = (ShellCommand *)shellCommandList;
 210:Dsp/letter_shell/shell.c ****     shell->commandList.count = shellCommandCount;
 211:Dsp/letter_shell/shell.c **** #endif
 212:Dsp/letter_shell/shell.c **** 
 213:Dsp/letter_shell/shell.c ****     shellAdd(shell);
 214:Dsp/letter_shell/shell.c **** 
 215:Dsp/letter_shell/shell.c ****     shellSetUser(shell, shellSeekCommand(shell,
 216:Dsp/letter_shell/shell.c ****                                          SHELL_DEFAULT_USER,
 217:Dsp/letter_shell/shell.c ****                                          shell->commandList.base,
 218:Dsp/letter_shell/shell.c ****                                          0));
 219:Dsp/letter_shell/shell.c ****     shellWriteCommandLine(shell, 1);
 220:Dsp/letter_shell/shell.c **** }
 221:Dsp/letter_shell/shell.c **** 
 222:Dsp/letter_shell/shell.c **** 
 223:Dsp/letter_shell/shell.c **** /**
 224:Dsp/letter_shell/shell.c ****  * @brief 添加shell
 225:Dsp/letter_shell/shell.c ****  * 
 226:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 227:Dsp/letter_shell/shell.c ****  */
 228:Dsp/letter_shell/shell.c **** static void shellAdd(Shell *shell)
 229:Dsp/letter_shell/shell.c **** {
  29              		.loc 1 229 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.LBB2:
 230:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
  36              		.loc 1 230 0
  37 0000 0023     		movs	r3, #0
  38 0002 0AE0     		b	.L2
  39              	.LVL1:
  40              	.L5:
 231:Dsp/letter_shell/shell.c ****     {
 232:Dsp/letter_shell/shell.c ****         if (shellList[i] == NULL)
  41              		.loc 1 232 0
  42 0004 1946     		mov	r1, r3
  43 0006 064A     		ldr	r2, .L6
  44 0008 52F82320 		ldr	r2, [r2, r3, lsl #2]
  45 000c 1AB9     		cbnz	r2, .L3
 233:Dsp/letter_shell/shell.c ****         {
 234:Dsp/letter_shell/shell.c ****             shellList[i] = shell;
  46              		.loc 1 234 0
  47 000e 044B     		ldr	r3, .L6
  48              	.LVL2:
  49 0010 43F82100 		str	r0, [r3, r1, lsl #2]
 235:Dsp/letter_shell/shell.c ****             return;
  50              		.loc 1 235 0
  51 0014 7047     		bx	lr
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 6


  52              	.LVL3:
  53              	.L3:
 230:Dsp/letter_shell/shell.c ****     {
  54              		.loc 1 230 0 discriminator 2
  55 0016 0133     		adds	r3, r3, #1
  56              	.LVL4:
  57 0018 1BB2     		sxth	r3, r3
  58              	.LVL5:
  59              	.L2:
 230:Dsp/letter_shell/shell.c ****     {
  60              		.loc 1 230 0 is_stmt 0 discriminator 1
  61 001a 042B     		cmp	r3, #4
  62 001c F2DD     		ble	.L5
  63 001e 7047     		bx	lr
  64              	.L7:
  65              		.align	2
  66              	.L6:
  67 0020 00000000 		.word	.LANCHOR0
  68              	.LBE2:
  69              		.cfi_endproc
  70              	.LFE125:
  72              		.section	.text.shellStringCopy,"ax",%progbits
  73              		.align	2
  74              		.thumb
  75              		.thumb_func
  77              	shellStringCopy:
  78              	.LFB136:
 236:Dsp/letter_shell/shell.c ****         }
 237:Dsp/letter_shell/shell.c ****     }
 238:Dsp/letter_shell/shell.c **** }
 239:Dsp/letter_shell/shell.c **** 
 240:Dsp/letter_shell/shell.c **** 
 241:Dsp/letter_shell/shell.c **** /**
 242:Dsp/letter_shell/shell.c ****  * @brief 获取当前活动shell
 243:Dsp/letter_shell/shell.c ****  * 
 244:Dsp/letter_shell/shell.c ****  * @return Shell* 当前活动shell对象
 245:Dsp/letter_shell/shell.c ****  */
 246:Dsp/letter_shell/shell.c **** Shell* shellGetCurrent(void)
 247:Dsp/letter_shell/shell.c **** {
 248:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
 249:Dsp/letter_shell/shell.c ****     {
 250:Dsp/letter_shell/shell.c ****         if (shellList[i] && shellList[i]->status.isActive)
 251:Dsp/letter_shell/shell.c ****         {
 252:Dsp/letter_shell/shell.c ****             return shellList[i];
 253:Dsp/letter_shell/shell.c ****         }
 254:Dsp/letter_shell/shell.c ****     }
 255:Dsp/letter_shell/shell.c ****     return NULL;
 256:Dsp/letter_shell/shell.c **** }
 257:Dsp/letter_shell/shell.c **** 
 258:Dsp/letter_shell/shell.c **** 
 259:Dsp/letter_shell/shell.c **** /**
 260:Dsp/letter_shell/shell.c ****  * @brief shell写字符
 261:Dsp/letter_shell/shell.c ****  * 
 262:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 263:Dsp/letter_shell/shell.c ****  * @param data 字符数据
 264:Dsp/letter_shell/shell.c ****  */
 265:Dsp/letter_shell/shell.c **** static void shellWriteByte(Shell *shell, const char data)
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 7


 266:Dsp/letter_shell/shell.c **** {
 267:Dsp/letter_shell/shell.c ****     shell->write(data);
 268:Dsp/letter_shell/shell.c ****     delay_us(50);
 269:Dsp/letter_shell/shell.c **** }
 270:Dsp/letter_shell/shell.c **** 
 271:Dsp/letter_shell/shell.c **** 
 272:Dsp/letter_shell/shell.c **** /**
 273:Dsp/letter_shell/shell.c ****  * @brief shell 写字符串
 274:Dsp/letter_shell/shell.c ****  * 
 275:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 276:Dsp/letter_shell/shell.c ****  * @param string 字符串数据
 277:Dsp/letter_shell/shell.c ****  * 
 278:Dsp/letter_shell/shell.c ****  * @return unsigned short 写入字符的数量
 279:Dsp/letter_shell/shell.c ****  */
 280:Dsp/letter_shell/shell.c **** unsigned short shellWriteString(Shell *shell, const char *string)
 281:Dsp/letter_shell/shell.c **** {
 282:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
 283:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell->write, return 0);
 284:Dsp/letter_shell/shell.c ****     while(*string)
 285:Dsp/letter_shell/shell.c ****     {
 286:Dsp/letter_shell/shell.c ****         shell->write(*string ++);
 287:Dsp/letter_shell/shell.c ****         count ++;
 288:Dsp/letter_shell/shell.c ****         delay_us(100);
 289:Dsp/letter_shell/shell.c ****     }
 290:Dsp/letter_shell/shell.c ****     return count;
 291:Dsp/letter_shell/shell.c **** }
 292:Dsp/letter_shell/shell.c **** 
 293:Dsp/letter_shell/shell.c **** 
 294:Dsp/letter_shell/shell.c **** /**
 295:Dsp/letter_shell/shell.c ****  * @brief shell 写命令描述字符串
 296:Dsp/letter_shell/shell.c ****  * 
 297:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 298:Dsp/letter_shell/shell.c ****  * @param string 字符串数据
 299:Dsp/letter_shell/shell.c ****  * 
 300:Dsp/letter_shell/shell.c ****  * @return unsigned short 写入字符的数量
 301:Dsp/letter_shell/shell.c ****  */
 302:Dsp/letter_shell/shell.c **** static unsigned short shellWriteCommandDesc(Shell *shell, const char *string)
 303:Dsp/letter_shell/shell.c **** {
 304:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
 305:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell->write, return 0);
 306:Dsp/letter_shell/shell.c ****     while(*string
 307:Dsp/letter_shell/shell.c ****         && *string != '\r'
 308:Dsp/letter_shell/shell.c ****         && *string != '\n'
 309:Dsp/letter_shell/shell.c ****         && count < 36)
 310:Dsp/letter_shell/shell.c ****     {
 311:Dsp/letter_shell/shell.c ****         shell->write(*string ++);
 312:Dsp/letter_shell/shell.c ****         delay_us(10);
 313:Dsp/letter_shell/shell.c ****         count ++;
 314:Dsp/letter_shell/shell.c ****         if (count >= 36 && *(string + 1))
 315:Dsp/letter_shell/shell.c ****         {
 316:Dsp/letter_shell/shell.c ****             shell->write('.');
 317:Dsp/letter_shell/shell.c ****             shell->write('.');
 318:Dsp/letter_shell/shell.c ****             shell->write('.');
 319:Dsp/letter_shell/shell.c ****         }
 320:Dsp/letter_shell/shell.c ****     }
 321:Dsp/letter_shell/shell.c ****     return count;
 322:Dsp/letter_shell/shell.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 8


 323:Dsp/letter_shell/shell.c **** 
 324:Dsp/letter_shell/shell.c **** 
 325:Dsp/letter_shell/shell.c **** /**
 326:Dsp/letter_shell/shell.c ****  * @brief shell写命令提示符
 327:Dsp/letter_shell/shell.c ****  * 
 328:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 329:Dsp/letter_shell/shell.c ****  * @param newline 新行
 330:Dsp/letter_shell/shell.c ****  * 
 331:Dsp/letter_shell/shell.c ****  */
 332:Dsp/letter_shell/shell.c **** static void shellWriteCommandLine(Shell *shell, unsigned char newline)
 333:Dsp/letter_shell/shell.c **** {
 334:Dsp/letter_shell/shell.c ****     if (shell->status.isChecked)
 335:Dsp/letter_shell/shell.c ****     {
 336:Dsp/letter_shell/shell.c ****         if (newline)
 337:Dsp/letter_shell/shell.c ****         {
 338:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
 339:Dsp/letter_shell/shell.c ****         }
 340:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->info.user->data.user.name);
 341:Dsp/letter_shell/shell.c ****         shellWriteString(shell, ":");
 342:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->info.path ? shell->info.path : "/");
 343:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "$ ");
 344:Dsp/letter_shell/shell.c ****     }
 345:Dsp/letter_shell/shell.c ****     else
 346:Dsp/letter_shell/shell.c ****     {
 347:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_PASSWORD_HINT]);
 348:Dsp/letter_shell/shell.c ****     }
 349:Dsp/letter_shell/shell.c **** }
 350:Dsp/letter_shell/shell.c **** 
 351:Dsp/letter_shell/shell.c **** 
 352:Dsp/letter_shell/shell.c **** #if SHELL_PRINT_BUFFER > 0
 353:Dsp/letter_shell/shell.c **** /**
 354:Dsp/letter_shell/shell.c ****  * @brief shell格式化输出
 355:Dsp/letter_shell/shell.c ****  * 
 356:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 357:Dsp/letter_shell/shell.c ****  * @param fmt 格式化字符串
 358:Dsp/letter_shell/shell.c ****  * @param ... 参数
 359:Dsp/letter_shell/shell.c ****  */
 360:Dsp/letter_shell/shell.c **** void shellPrint(Shell *shell, char *fmt, ...)
 361:Dsp/letter_shell/shell.c **** {
 362:Dsp/letter_shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 363:Dsp/letter_shell/shell.c ****     va_list vargs;
 364:Dsp/letter_shell/shell.c **** 
 365:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell, return);
 366:Dsp/letter_shell/shell.c **** 
 367:Dsp/letter_shell/shell.c ****     va_start(vargs, fmt);
 368:Dsp/letter_shell/shell.c ****     vsnprintf(buffer, SHELL_PRINT_BUFFER - 1, fmt, vargs);
 369:Dsp/letter_shell/shell.c ****     va_end(vargs);
 370:Dsp/letter_shell/shell.c ****     
 371:Dsp/letter_shell/shell.c ****     shellWriteString(shell, buffer);
 372:Dsp/letter_shell/shell.c **** }
 373:Dsp/letter_shell/shell.c **** #endif
 374:Dsp/letter_shell/shell.c **** 
 375:Dsp/letter_shell/shell.c **** 
 376:Dsp/letter_shell/shell.c **** #if SHELL_SCAN_BUFFER > 0
 377:Dsp/letter_shell/shell.c **** /**
 378:Dsp/letter_shell/shell.c ****  * @brief shell格式化输入
 379:Dsp/letter_shell/shell.c ****  * 
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 9


 380:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 381:Dsp/letter_shell/shell.c ****  * @param fmt 格式化字符串
 382:Dsp/letter_shell/shell.c ****  * @param ... 参数
 383:Dsp/letter_shell/shell.c ****  */
 384:Dsp/letter_shell/shell.c **** void shellScan(Shell *shell, char *fmt, ...)
 385:Dsp/letter_shell/shell.c **** {
 386:Dsp/letter_shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 387:Dsp/letter_shell/shell.c ****     va_list vargs;
 388:Dsp/letter_shell/shell.c ****     short index = 0;
 389:Dsp/letter_shell/shell.c **** 
 390:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell, return);
 391:Dsp/letter_shell/shell.c **** 
 392:Dsp/letter_shell/shell.c ****     if (shell->read)
 393:Dsp/letter_shell/shell.c ****     {
 394:Dsp/letter_shell/shell.c ****         do {
 395:Dsp/letter_shell/shell.c ****             if (shell->read(&buffer[index]) == 0)
 396:Dsp/letter_shell/shell.c ****             {
 397:Dsp/letter_shell/shell.c ****                 shell->write(buffer[index]);
 398:Dsp/letter_shell/shell.c ****                 index++;
 399:Dsp/letter_shell/shell.c ****             }
 400:Dsp/letter_shell/shell.c ****         } while (buffer[index -1] != '\r' && buffer[index -1] != '\n' && index < SHELL_SCAN_BUFFER)
 401:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 402:Dsp/letter_shell/shell.c ****         buffer[index] = '\0';
 403:Dsp/letter_shell/shell.c ****     }
 404:Dsp/letter_shell/shell.c **** 
 405:Dsp/letter_shell/shell.c ****     va_start(vargs, fmt);
 406:Dsp/letter_shell/shell.c ****     vsscanf(buffer, fmt, vargs);
 407:Dsp/letter_shell/shell.c ****     va_end(vargs);
 408:Dsp/letter_shell/shell.c **** }
 409:Dsp/letter_shell/shell.c **** #endif
 410:Dsp/letter_shell/shell.c **** 
 411:Dsp/letter_shell/shell.c **** 
 412:Dsp/letter_shell/shell.c **** /**
 413:Dsp/letter_shell/shell.c ****  * @brief shell 检查命令权限
 414:Dsp/letter_shell/shell.c ****  * 
 415:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 416:Dsp/letter_shell/shell.c ****  * @param command ShellCommand
 417:Dsp/letter_shell/shell.c ****  * 
 418:Dsp/letter_shell/shell.c ****  * @return signed char 0 当前用户具有该命令权限
 419:Dsp/letter_shell/shell.c ****  * @return signec char -1 当前用户不具有该命令权限
 420:Dsp/letter_shell/shell.c ****  */
 421:Dsp/letter_shell/shell.c **** signed char shellCheckPermission(Shell *shell, ShellCommand *command)
 422:Dsp/letter_shell/shell.c **** {
 423:Dsp/letter_shell/shell.c ****     return ((!command->attr.attrs.permission
 424:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.type == SHELL_TYPE_USER
 425:Dsp/letter_shell/shell.c ****                 || (command->attr.attrs.permission 
 426:Dsp/letter_shell/shell.c ****                     & shell->info.user->attr.attrs.permission))
 427:Dsp/letter_shell/shell.c ****             && (shell->status.isChecked
 428:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.enableUnchecked))
 429:Dsp/letter_shell/shell.c ****             ? 0 : -1;
 430:Dsp/letter_shell/shell.c **** }
 431:Dsp/letter_shell/shell.c **** 
 432:Dsp/letter_shell/shell.c **** 
 433:Dsp/letter_shell/shell.c **** /**
 434:Dsp/letter_shell/shell.c ****  * @brief int转16进制字符串
 435:Dsp/letter_shell/shell.c ****  * 
 436:Dsp/letter_shell/shell.c ****  * @param value 数值
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 10


 437:Dsp/letter_shell/shell.c ****  * @param buffer 缓冲
 438:Dsp/letter_shell/shell.c ****  * 
 439:Dsp/letter_shell/shell.c ****  * @return signed char 转换后有效数据长度
 440:Dsp/letter_shell/shell.c ****  */
 441:Dsp/letter_shell/shell.c **** signed char shellToHex(unsigned int value, char *buffer)
 442:Dsp/letter_shell/shell.c **** {
 443:Dsp/letter_shell/shell.c ****     char byte;
 444:Dsp/letter_shell/shell.c ****     unsigned char i = 8;
 445:Dsp/letter_shell/shell.c ****     buffer[8] = 0;
 446:Dsp/letter_shell/shell.c ****     while (value)
 447:Dsp/letter_shell/shell.c ****     {
 448:Dsp/letter_shell/shell.c ****         byte = value & 0x0000000F;
 449:Dsp/letter_shell/shell.c ****         buffer[--i] = (byte > 9) ? (byte + 87) : (byte + 48);
 450:Dsp/letter_shell/shell.c ****         value >>= 4;
 451:Dsp/letter_shell/shell.c ****     }
 452:Dsp/letter_shell/shell.c ****     return 8 - i;
 453:Dsp/letter_shell/shell.c **** }
 454:Dsp/letter_shell/shell.c **** 
 455:Dsp/letter_shell/shell.c **** 
 456:Dsp/letter_shell/shell.c **** /**
 457:Dsp/letter_shell/shell.c **** * @brief int转10进制字符串
 458:Dsp/letter_shell/shell.c ****  * 
 459:Dsp/letter_shell/shell.c ****  * @param value 数值
 460:Dsp/letter_shell/shell.c ****  * @param buffer 缓冲
 461:Dsp/letter_shell/shell.c ****  * 
 462:Dsp/letter_shell/shell.c ****  * @return signed char 转换后有效数据长度
 463:Dsp/letter_shell/shell.c ****  */
 464:Dsp/letter_shell/shell.c **** signed char shellToDec(int value, char *buffer)
 465:Dsp/letter_shell/shell.c **** {
 466:Dsp/letter_shell/shell.c ****     unsigned char i = 11;
 467:Dsp/letter_shell/shell.c ****     int v = value;
 468:Dsp/letter_shell/shell.c ****     if (value < 0)
 469:Dsp/letter_shell/shell.c ****     {
 470:Dsp/letter_shell/shell.c ****         v = -value;
 471:Dsp/letter_shell/shell.c ****     }
 472:Dsp/letter_shell/shell.c ****     buffer[11] = 0;
 473:Dsp/letter_shell/shell.c ****     while (v)
 474:Dsp/letter_shell/shell.c ****     {
 475:Dsp/letter_shell/shell.c ****         buffer[--i] = v % 10 + 48;
 476:Dsp/letter_shell/shell.c ****         v /= 10;
 477:Dsp/letter_shell/shell.c ****     }
 478:Dsp/letter_shell/shell.c ****     if (value < 0)
 479:Dsp/letter_shell/shell.c ****     {
 480:Dsp/letter_shell/shell.c ****         buffer[--i] = '-';
 481:Dsp/letter_shell/shell.c ****     }
 482:Dsp/letter_shell/shell.c ****     if (value == 0) {
 483:Dsp/letter_shell/shell.c ****         buffer[--i] = '0';
 484:Dsp/letter_shell/shell.c ****     }
 485:Dsp/letter_shell/shell.c ****     return 11 - i;
 486:Dsp/letter_shell/shell.c **** }
 487:Dsp/letter_shell/shell.c **** 
 488:Dsp/letter_shell/shell.c **** 
 489:Dsp/letter_shell/shell.c **** /**
 490:Dsp/letter_shell/shell.c ****  * @brief shell字符串复制
 491:Dsp/letter_shell/shell.c ****  * 
 492:Dsp/letter_shell/shell.c ****  * @param dest 目标字符串
 493:Dsp/letter_shell/shell.c ****  * @param src 源字符串
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 11


 494:Dsp/letter_shell/shell.c ****  * @return unsigned short 字符串长度
 495:Dsp/letter_shell/shell.c ****  */
 496:Dsp/letter_shell/shell.c **** static unsigned short shellStringCopy(char *dest, char* src)
 497:Dsp/letter_shell/shell.c **** {
  79              		.loc 1 497 0 is_stmt 1
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL6:
  85 0000 10B4     		push	{r4}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 4, -4
  89 0002 0446     		mov	r4, r0
  90              	.LVL7:
 498:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
  91              		.loc 1 498 0
  92 0004 0020     		movs	r0, #0
  93              	.LVL8:
 499:Dsp/letter_shell/shell.c ****     while (*(src + count))
  94              		.loc 1 499 0
  95 0006 02E0     		b	.L9
  96              	.LVL9:
  97              	.L10:
 500:Dsp/letter_shell/shell.c ****     {
 501:Dsp/letter_shell/shell.c ****         *(dest + count) = *(src + count);
  98              		.loc 1 501 0
  99 0008 2354     		strb	r3, [r4, r0]
 502:Dsp/letter_shell/shell.c ****         count++;
 100              		.loc 1 502 0
 101 000a 0130     		adds	r0, r0, #1
 102              	.LVL10:
 103 000c 80B2     		uxth	r0, r0
 104              	.LVL11:
 105              	.L9:
 499:Dsp/letter_shell/shell.c ****     while (*(src + count))
 106              		.loc 1 499 0
 107 000e 0B5C     		ldrb	r3, [r1, r0]	@ zero_extendqisi2
 108 0010 002B     		cmp	r3, #0
 109 0012 F9D1     		bne	.L10
 503:Dsp/letter_shell/shell.c ****     }
 504:Dsp/letter_shell/shell.c ****     *(dest + count) = 0;
 110              		.loc 1 504 0
 111 0014 2354     		strb	r3, [r4, r0]
 505:Dsp/letter_shell/shell.c ****     return count;
 506:Dsp/letter_shell/shell.c **** }
 112              		.loc 1 506 0
 113 0016 5DF8044B 		ldr	r4, [sp], #4
 114              	.LCFI1:
 115              		.cfi_restore 4
 116              		.cfi_def_cfa_offset 0
 117              	.LVL12:
 118 001a 7047     		bx	lr
 119              		.cfi_endproc
 120              	.LFE136:
 122              		.section	.text.shellStringCompare,"ax",%progbits
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 12


 123              		.align	2
 124              		.thumb
 125              		.thumb_func
 127              	shellStringCompare:
 128              	.LFB137:
 507:Dsp/letter_shell/shell.c **** 
 508:Dsp/letter_shell/shell.c **** 
 509:Dsp/letter_shell/shell.c **** /**
 510:Dsp/letter_shell/shell.c ****  * @brief shell字符串比较
 511:Dsp/letter_shell/shell.c ****  * 
 512:Dsp/letter_shell/shell.c ****  * @param dest 目标字符串
 513:Dsp/letter_shell/shell.c ****  * @param src 源字符串
 514:Dsp/letter_shell/shell.c ****  * @return unsigned short 匹配长度
 515:Dsp/letter_shell/shell.c ****  */
 516:Dsp/letter_shell/shell.c **** static unsigned short shellStringCompare(char* dest, char *src)
 517:Dsp/letter_shell/shell.c **** {
 129              		.loc 1 517 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              	.LVL13:
 135 0000 30B4     		push	{r4, r5}
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 4, -8
 139              		.cfi_offset 5, -4
 140 0002 0546     		mov	r5, r0
 141              	.LVL14:
 518:Dsp/letter_shell/shell.c ****     unsigned short match = 0;
 519:Dsp/letter_shell/shell.c ****     unsigned short i = 0;
 142              		.loc 1 519 0
 143 0004 0023     		movs	r3, #0
 518:Dsp/letter_shell/shell.c ****     unsigned short match = 0;
 144              		.loc 1 518 0
 145 0006 1846     		mov	r0, r3
 146              	.LVL15:
 520:Dsp/letter_shell/shell.c **** 
 521:Dsp/letter_shell/shell.c ****     while (*(dest +i) && *(src + i))
 147              		.loc 1 521 0
 148 0008 05E0     		b	.L13
 149              	.LVL16:
 150              	.L15:
 522:Dsp/letter_shell/shell.c ****     {
 523:Dsp/letter_shell/shell.c ****         if (*(dest + i) != *(src +i))
 151              		.loc 1 523 0
 152 000a A242     		cmp	r2, r4
 153 000c 08D1     		bne	.L14
 524:Dsp/letter_shell/shell.c ****         {
 525:Dsp/letter_shell/shell.c ****             break;
 526:Dsp/letter_shell/shell.c ****         }
 527:Dsp/letter_shell/shell.c ****         match ++;
 154              		.loc 1 527 0
 155 000e 0130     		adds	r0, r0, #1
 156              	.LVL17:
 157 0010 80B2     		uxth	r0, r0
 158              	.LVL18:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 13


 528:Dsp/letter_shell/shell.c ****         i++;
 159              		.loc 1 528 0
 160 0012 0133     		adds	r3, r3, #1
 161              	.LVL19:
 162 0014 9BB2     		uxth	r3, r3
 163              	.LVL20:
 164              	.L13:
 521:Dsp/letter_shell/shell.c ****     {
 165              		.loc 1 521 0
 166 0016 EA5C     		ldrb	r2, [r5, r3]	@ zero_extendqisi2
 167 0018 12B1     		cbz	r2, .L14
 521:Dsp/letter_shell/shell.c ****     {
 168              		.loc 1 521 0 is_stmt 0 discriminator 1
 169 001a CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 170 001c 002C     		cmp	r4, #0
 171 001e F4D1     		bne	.L15
 172              	.L14:
 529:Dsp/letter_shell/shell.c ****     }
 530:Dsp/letter_shell/shell.c ****     return match;
 531:Dsp/letter_shell/shell.c **** }
 173              		.loc 1 531 0 is_stmt 1
 174 0020 30BC     		pop	{r4, r5}
 175              	.LCFI3:
 176              		.cfi_restore 5
 177              		.cfi_restore 4
 178              		.cfi_def_cfa_offset 0
 179              	.LVL21:
 180 0022 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE137:
 184              		.section	.text.shellGetCommandDesc,"ax",%progbits
 185              		.align	2
 186              		.thumb
 187              		.thumb_func
 189              	shellGetCommandDesc:
 190              	.LFB139:
 532:Dsp/letter_shell/shell.c **** 
 533:Dsp/letter_shell/shell.c **** 
 534:Dsp/letter_shell/shell.c **** /**
 535:Dsp/letter_shell/shell.c ****  * @brief shell获取命令名
 536:Dsp/letter_shell/shell.c ****  * 
 537:Dsp/letter_shell/shell.c ****  * @param command 命令
 538:Dsp/letter_shell/shell.c ****  * @return const char* 命令名
 539:Dsp/letter_shell/shell.c ****  */
 540:Dsp/letter_shell/shell.c **** static const char* shellGetCommandName(ShellCommand *command)
 541:Dsp/letter_shell/shell.c **** {
 542:Dsp/letter_shell/shell.c ****     static char buffer[9];
 543:Dsp/letter_shell/shell.c ****     for (unsigned char i = 0; i < 9; i++)
 544:Dsp/letter_shell/shell.c ****     {
 545:Dsp/letter_shell/shell.c ****         buffer[i] = '0';
 546:Dsp/letter_shell/shell.c ****     }
 547:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 548:Dsp/letter_shell/shell.c ****     {
 549:Dsp/letter_shell/shell.c ****         return command->data.cmd.name;
 550:Dsp/letter_shell/shell.c ****     }
 551:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 552:Dsp/letter_shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 14


 553:Dsp/letter_shell/shell.c ****         return command->data.var.name;
 554:Dsp/letter_shell/shell.c ****     }
 555:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_USER)
 556:Dsp/letter_shell/shell.c ****     {
 557:Dsp/letter_shell/shell.c ****         return command->data.user.name;
 558:Dsp/letter_shell/shell.c ****     }
 559:Dsp/letter_shell/shell.c ****     else
 560:Dsp/letter_shell/shell.c ****     {
 561:Dsp/letter_shell/shell.c ****         shellToHex(command->data.key.value, buffer);
 562:Dsp/letter_shell/shell.c ****         return buffer;
 563:Dsp/letter_shell/shell.c ****     }
 564:Dsp/letter_shell/shell.c **** }
 565:Dsp/letter_shell/shell.c **** 
 566:Dsp/letter_shell/shell.c **** 
 567:Dsp/letter_shell/shell.c **** /**
 568:Dsp/letter_shell/shell.c ****  * @brief shell获取命令描述
 569:Dsp/letter_shell/shell.c ****  * 
 570:Dsp/letter_shell/shell.c ****  * @param command 命令
 571:Dsp/letter_shell/shell.c ****  * @return const char* 命令描述
 572:Dsp/letter_shell/shell.c ****  */
 573:Dsp/letter_shell/shell.c **** static const char* shellGetCommandDesc(ShellCommand *command)
 574:Dsp/letter_shell/shell.c **** {
 191              		.loc 1 574 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL22:
 575:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 197              		.loc 1 575 0
 198 0000 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 199 0002 03F00F03 		and	r3, r3, #15
 200 0006 012B     		cmp	r3, #1
 201 0008 01DC     		bgt	.L18
 576:Dsp/letter_shell/shell.c ****     {
 577:Dsp/letter_shell/shell.c ****         return command->data.cmd.desc;
 202              		.loc 1 577 0
 203 000a C068     		ldr	r0, [r0, #12]
 204              	.LVL23:
 205 000c 7047     		bx	lr
 206              	.LVL24:
 207              	.L18:
 578:Dsp/letter_shell/shell.c ****     }
 579:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 208              		.loc 1 579 0
 209 000e 072B     		cmp	r3, #7
 210 0010 01DC     		bgt	.L20
 580:Dsp/letter_shell/shell.c ****     {
 581:Dsp/letter_shell/shell.c ****         return command->data.var.desc;
 211              		.loc 1 581 0
 212 0012 C068     		ldr	r0, [r0, #12]
 213              	.LVL25:
 214 0014 7047     		bx	lr
 215              	.LVL26:
 216              	.L20:
 582:Dsp/letter_shell/shell.c ****     }
 583:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_USER)
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 15


 217              		.loc 1 583 0
 218 0016 082B     		cmp	r3, #8
 219 0018 01DC     		bgt	.L21
 584:Dsp/letter_shell/shell.c ****     {
 585:Dsp/letter_shell/shell.c ****         return command->data.user.desc;
 220              		.loc 1 585 0
 221 001a C068     		ldr	r0, [r0, #12]
 222              	.LVL27:
 223 001c 7047     		bx	lr
 224              	.LVL28:
 225              	.L21:
 586:Dsp/letter_shell/shell.c ****     }
 587:Dsp/letter_shell/shell.c ****     else
 588:Dsp/letter_shell/shell.c ****     {
 589:Dsp/letter_shell/shell.c ****         return command->data.key.desc;
 226              		.loc 1 589 0
 227 001e C068     		ldr	r0, [r0, #12]
 228              	.LVL29:
 590:Dsp/letter_shell/shell.c ****     }
 591:Dsp/letter_shell/shell.c **** }
 229              		.loc 1 591 0
 230 0020 7047     		bx	lr
 231              		.cfi_endproc
 232              	.LFE139:
 234 0022 00BF     		.section	.text.shellParserParam,"ax",%progbits
 235              		.align	2
 236              		.thumb
 237              		.thumb_func
 239              	shellParserParam:
 240              	.LFB150:
 592:Dsp/letter_shell/shell.c **** 
 593:Dsp/letter_shell/shell.c **** /**
 594:Dsp/letter_shell/shell.c ****  * @brief shell 列出命令条目
 595:Dsp/letter_shell/shell.c ****  * 
 596:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 597:Dsp/letter_shell/shell.c ****  * @param item 命令条目
 598:Dsp/letter_shell/shell.c ****  */
 599:Dsp/letter_shell/shell.c **** void shellListItem(Shell *shell, ShellCommand *item)
 600:Dsp/letter_shell/shell.c **** {
 601:Dsp/letter_shell/shell.c ****     short spaceLength;
 602:Dsp/letter_shell/shell.c **** 
 603:Dsp/letter_shell/shell.c ****     spaceLength = 22 - shellWriteString(shell, shellGetCommandName(item));
 604:Dsp/letter_shell/shell.c ****     spaceLength = (spaceLength > 0) ? spaceLength : 4;
 605:Dsp/letter_shell/shell.c ****     do {
 606:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, '-');
 607:Dsp/letter_shell/shell.c ****     } while (--spaceLength);
 608:Dsp/letter_shell/shell.c ****     if (item->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 609:Dsp/letter_shell/shell.c ****     {
 610:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_CMD]);
 611:Dsp/letter_shell/shell.c ****     }
 612:Dsp/letter_shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 613:Dsp/letter_shell/shell.c ****     {
 614:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_VAR]);
 615:Dsp/letter_shell/shell.c ****     }
 616:Dsp/letter_shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_USER)
 617:Dsp/letter_shell/shell.c ****     {
 618:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_USER]);
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 16


 619:Dsp/letter_shell/shell.c ****     }
 620:Dsp/letter_shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_KEY)
 621:Dsp/letter_shell/shell.c ****     {
 622:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_KEY]);
 623:Dsp/letter_shell/shell.c ****     }
 624:Dsp/letter_shell/shell.c ****     else
 625:Dsp/letter_shell/shell.c ****     {
 626:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_NONE]);
 627:Dsp/letter_shell/shell.c ****     }
 628:Dsp/letter_shell/shell.c **** #if SHELL_HELP_SHOW_PERMISSION == 1
 629:Dsp/letter_shell/shell.c ****     shellWriteString(shell, " ");
 630:Dsp/letter_shell/shell.c ****     for (signed char i = 7; i >= 0; i--)
 631:Dsp/letter_shell/shell.c ****     {
 632:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, item->attr.attrs.permission & (1 << i) ? 'x' : '-');
 633:Dsp/letter_shell/shell.c ****     }
 634:Dsp/letter_shell/shell.c **** #endif
 635:Dsp/letter_shell/shell.c ****     // shellWriteString(shell, " ");
 636:Dsp/letter_shell/shell.c ****     // shellWriteCommandDesc(shell, shellGetCommandDesc(item));
 637:Dsp/letter_shell/shell.c ****     // shellWriteString(shell, "\r\n");
 638:Dsp/letter_shell/shell.c **** }
 639:Dsp/letter_shell/shell.c **** 
 640:Dsp/letter_shell/shell.c **** 
 641:Dsp/letter_shell/shell.c **** /**
 642:Dsp/letter_shell/shell.c ****  * @brief shell列出可执行命令
 643:Dsp/letter_shell/shell.c ****  * 
 644:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 645:Dsp/letter_shell/shell.c ****  */
 646:Dsp/letter_shell/shell.c **** void shellListCommand(Shell *shell)
 647:Dsp/letter_shell/shell.c **** {
 648:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 649:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CMD_LIST]);
 650:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 651:Dsp/letter_shell/shell.c ****     {
 652:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type <= SHELL_TYPE_CMD_FUNC
 653:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 654:Dsp/letter_shell/shell.c ****         {
 655:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[i]);
 656:Dsp/letter_shell/shell.c ****         }
 657:Dsp/letter_shell/shell.c ****     }
 658:Dsp/letter_shell/shell.c **** }
 659:Dsp/letter_shell/shell.c **** 
 660:Dsp/letter_shell/shell.c **** 
 661:Dsp/letter_shell/shell.c **** /**
 662:Dsp/letter_shell/shell.c ****  * @brief shell列出变量
 663:Dsp/letter_shell/shell.c ****  * 
 664:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 665:Dsp/letter_shell/shell.c ****  */
 666:Dsp/letter_shell/shell.c **** void shellListVar(Shell *shell)
 667:Dsp/letter_shell/shell.c **** {
 668:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 669:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_VAR_LIST]);
 670:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 671:Dsp/letter_shell/shell.c ****     {
 672:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_CMD_FUNC
 673:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_VAR_NODE
 674:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 675:Dsp/letter_shell/shell.c ****         {
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 17


 676:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[i]);
 677:Dsp/letter_shell/shell.c ****         }
 678:Dsp/letter_shell/shell.c ****     }
 679:Dsp/letter_shell/shell.c **** }
 680:Dsp/letter_shell/shell.c **** 
 681:Dsp/letter_shell/shell.c **** 
 682:Dsp/letter_shell/shell.c **** /**
 683:Dsp/letter_shell/shell.c ****  * @brief shell列出用户
 684:Dsp/letter_shell/shell.c ****  * 
 685:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 686:Dsp/letter_shell/shell.c ****  */
 687:Dsp/letter_shell/shell.c **** void shellListUser(Shell *shell)
 688:Dsp/letter_shell/shell.c **** {
 689:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 690:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_USER_LIST]);
 691:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 692:Dsp/letter_shell/shell.c ****     {
 693:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_VAR_NODE
 694:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_USER
 695:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 696:Dsp/letter_shell/shell.c ****         {
 697:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[i]);
 698:Dsp/letter_shell/shell.c ****         }
 699:Dsp/letter_shell/shell.c ****     }
 700:Dsp/letter_shell/shell.c **** }
 701:Dsp/letter_shell/shell.c **** 
 702:Dsp/letter_shell/shell.c **** 
 703:Dsp/letter_shell/shell.c **** /**
 704:Dsp/letter_shell/shell.c ****  * @brief shell列出按键
 705:Dsp/letter_shell/shell.c ****  * 
 706:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 707:Dsp/letter_shell/shell.c ****  */
 708:Dsp/letter_shell/shell.c **** void shellListKey(Shell *shell)
 709:Dsp/letter_shell/shell.c **** {
 710:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 711:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_KEY_LIST]);
 712:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 713:Dsp/letter_shell/shell.c ****     {
 714:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_USER
 715:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_KEY
 716:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 717:Dsp/letter_shell/shell.c ****         {
 718:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[i]);
 719:Dsp/letter_shell/shell.c ****         }
 720:Dsp/letter_shell/shell.c ****     }
 721:Dsp/letter_shell/shell.c **** }
 722:Dsp/letter_shell/shell.c **** 
 723:Dsp/letter_shell/shell.c **** 
 724:Dsp/letter_shell/shell.c **** /**
 725:Dsp/letter_shell/shell.c ****  * @brief shell列出所有命令
 726:Dsp/letter_shell/shell.c ****  * 
 727:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 728:Dsp/letter_shell/shell.c ****  */
 729:Dsp/letter_shell/shell.c **** void shellListAll(Shell *shell)
 730:Dsp/letter_shell/shell.c **** {
 731:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_USER == 1
 732:Dsp/letter_shell/shell.c ****     shellListUser(shell);
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 18


 733:Dsp/letter_shell/shell.c **** #endif
 734:Dsp/letter_shell/shell.c ****     shellListCommand(shell);
 735:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_VAR == 1
 736:Dsp/letter_shell/shell.c ****     shellListVar(shell);
 737:Dsp/letter_shell/shell.c **** #endif
 738:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_KEY == 1
 739:Dsp/letter_shell/shell.c ****     shellListKey(shell);
 740:Dsp/letter_shell/shell.c **** #endif
 741:Dsp/letter_shell/shell.c **** }
 742:Dsp/letter_shell/shell.c **** 
 743:Dsp/letter_shell/shell.c **** 
 744:Dsp/letter_shell/shell.c **** /**
 745:Dsp/letter_shell/shell.c ****  * @brief shell删除命令行数据
 746:Dsp/letter_shell/shell.c ****  * 
 747:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 748:Dsp/letter_shell/shell.c ****  * @param length 删除长度
 749:Dsp/letter_shell/shell.c ****  */
 750:Dsp/letter_shell/shell.c **** void shellDeleteCommandLine(Shell *shell, unsigned char length)
 751:Dsp/letter_shell/shell.c **** {
 752:Dsp/letter_shell/shell.c ****     while (length--)
 753:Dsp/letter_shell/shell.c ****     {
 754:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\b \b");
 755:Dsp/letter_shell/shell.c ****     }
 756:Dsp/letter_shell/shell.c **** }
 757:Dsp/letter_shell/shell.c **** 
 758:Dsp/letter_shell/shell.c **** 
 759:Dsp/letter_shell/shell.c **** /**
 760:Dsp/letter_shell/shell.c ****  * @brief shell 清空命令行输入
 761:Dsp/letter_shell/shell.c ****  * 
 762:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 763:Dsp/letter_shell/shell.c ****  */
 764:Dsp/letter_shell/shell.c **** void shellClearCommandLine(Shell *shell)
 765:Dsp/letter_shell/shell.c **** {
 766:Dsp/letter_shell/shell.c ****     for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 767:Dsp/letter_shell/shell.c ****     {
 768:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, ' ');
 769:Dsp/letter_shell/shell.c ****     }
 770:Dsp/letter_shell/shell.c ****     shellDeleteCommandLine(shell, shell->parser.length);
 771:Dsp/letter_shell/shell.c **** }
 772:Dsp/letter_shell/shell.c **** 
 773:Dsp/letter_shell/shell.c **** 
 774:Dsp/letter_shell/shell.c **** /**
 775:Dsp/letter_shell/shell.c ****  * @brief shell插入一个字符到光标位置
 776:Dsp/letter_shell/shell.c ****  * 
 777:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 778:Dsp/letter_shell/shell.c ****  * @param data 字符数据
 779:Dsp/letter_shell/shell.c ****  */
 780:Dsp/letter_shell/shell.c **** void shellInsertByte(Shell *shell, char data)
 781:Dsp/letter_shell/shell.c **** {
 782:Dsp/letter_shell/shell.c ****     /* 判断输入数据是否过长 */
 783:Dsp/letter_shell/shell.c ****     if (shell->parser.length >= shell->parser.bufferSize - 1)
 784:Dsp/letter_shell/shell.c ****     {
 785:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CMD_TOO_LONG]);
 786:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 1);
 787:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 788:Dsp/letter_shell/shell.c ****         return;
 789:Dsp/letter_shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 19


 790:Dsp/letter_shell/shell.c **** 
 791:Dsp/letter_shell/shell.c ****     /* 插入数据 */
 792:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor == shell->parser.length)
 793:Dsp/letter_shell/shell.c ****     {
 794:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length++] = data;
 795:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 796:Dsp/letter_shell/shell.c ****         shell->parser.cursor++;
 797:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, data);
 798:Dsp/letter_shell/shell.c ****     }
 799:Dsp/letter_shell/shell.c ****     else if (shell->parser.cursor < shell->parser.length)
 800:Dsp/letter_shell/shell.c ****     {
 801:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 802:Dsp/letter_shell/shell.c ****         {
 803:Dsp/letter_shell/shell.c ****             shell->parser.buffer[shell->parser.cursor + i] = 
 804:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 805:Dsp/letter_shell/shell.c ****         }
 806:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.cursor++] = data;
 807:Dsp/letter_shell/shell.c ****         shell->parser.buffer[++shell->parser.length] = 0;
 808:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.cursor - 1; i < shell->parser.length; i++)
 809:Dsp/letter_shell/shell.c ****         {
 810:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, shell->parser.buffer[i]);
 811:Dsp/letter_shell/shell.c ****         }
 812:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 813:Dsp/letter_shell/shell.c ****         {
 814:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, '\b');
 815:Dsp/letter_shell/shell.c ****         }
 816:Dsp/letter_shell/shell.c ****     }
 817:Dsp/letter_shell/shell.c **** }
 818:Dsp/letter_shell/shell.c **** 
 819:Dsp/letter_shell/shell.c **** 
 820:Dsp/letter_shell/shell.c **** /**
 821:Dsp/letter_shell/shell.c ****  * @brief shell 删除字节
 822:Dsp/letter_shell/shell.c ****  * 
 823:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 824:Dsp/letter_shell/shell.c ****  * @param direction 删除方向 {@code 1}删除光标前字符 {@code -1}删除光标处字符
 825:Dsp/letter_shell/shell.c ****  */
 826:Dsp/letter_shell/shell.c **** void shellDeleteByte(Shell *shell, signed char direction)
 827:Dsp/letter_shell/shell.c **** {
 828:Dsp/letter_shell/shell.c ****     char offset = (direction == -1) ? 1 : 0;
 829:Dsp/letter_shell/shell.c **** 
 830:Dsp/letter_shell/shell.c ****     if ((shell->parser.cursor == 0 && direction == 1)
 831:Dsp/letter_shell/shell.c ****         || (shell->parser.cursor == shell->parser.length && direction == -1))
 832:Dsp/letter_shell/shell.c ****     {
 833:Dsp/letter_shell/shell.c ****         return;
 834:Dsp/letter_shell/shell.c ****     }
 835:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor == shell->parser.length && direction == 1)
 836:Dsp/letter_shell/shell.c ****     {
 837:Dsp/letter_shell/shell.c ****         shell->parser.cursor--;
 838:Dsp/letter_shell/shell.c ****         shell->parser.length--;
 839:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 840:Dsp/letter_shell/shell.c ****         shellDeleteCommandLine(shell, 1);
 841:Dsp/letter_shell/shell.c ****     }
 842:Dsp/letter_shell/shell.c ****     else
 843:Dsp/letter_shell/shell.c ****     {
 844:Dsp/letter_shell/shell.c ****         for (short i = offset; i < shell->parser.length - shell->parser.cursor; i++)
 845:Dsp/letter_shell/shell.c ****         {
 846:Dsp/letter_shell/shell.c ****             shell->parser.buffer[shell->parser.cursor + i - 1] = 
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 20


 847:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 848:Dsp/letter_shell/shell.c ****         }
 849:Dsp/letter_shell/shell.c ****         shell->parser.length--;
 850:Dsp/letter_shell/shell.c ****         if (!offset)
 851:Dsp/letter_shell/shell.c ****         {
 852:Dsp/letter_shell/shell.c ****             shell->parser.cursor--;
 853:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, '\b');
 854:Dsp/letter_shell/shell.c ****         }
 855:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 856:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.cursor; i < shell->parser.length; i++)
 857:Dsp/letter_shell/shell.c ****         {
 858:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, shell->parser.buffer[i]);
 859:Dsp/letter_shell/shell.c ****         }
 860:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, ' ');
 861:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor + 1; i > 0; i--)
 862:Dsp/letter_shell/shell.c ****         {
 863:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, '\b');
 864:Dsp/letter_shell/shell.c ****         }
 865:Dsp/letter_shell/shell.c ****     }
 866:Dsp/letter_shell/shell.c **** }
 867:Dsp/letter_shell/shell.c **** 
 868:Dsp/letter_shell/shell.c **** 
 869:Dsp/letter_shell/shell.c **** /**
 870:Dsp/letter_shell/shell.c ****  * @brief shell 解析参数
 871:Dsp/letter_shell/shell.c ****  * 
 872:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 873:Dsp/letter_shell/shell.c ****  */
 874:Dsp/letter_shell/shell.c **** static void shellParserParam(Shell *shell)
 875:Dsp/letter_shell/shell.c **** {
 241              		.loc 1 875 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246              	.LVL30:
 247              	.LBB3:
 876:Dsp/letter_shell/shell.c ****     unsigned char quotes = 0;
 877:Dsp/letter_shell/shell.c ****     unsigned char record = 1;
 878:Dsp/letter_shell/shell.c **** 
 879:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_PARAMETER_MAX_NUMBER; i++)
 248              		.loc 1 879 0
 249 0000 0023     		movs	r3, #0
 250 0002 06E0     		b	.L23
 251              	.LVL31:
 252              	.L24:
 880:Dsp/letter_shell/shell.c ****     {
 881:Dsp/letter_shell/shell.c ****         shell->parser.param[i] = NULL;
 253              		.loc 1 881 0 discriminator 3
 254 0004 1A1D     		adds	r2, r3, #4
 255 0006 00EB8202 		add	r2, r0, r2, lsl #2
 256 000a 0021     		movs	r1, #0
 257 000c 5160     		str	r1, [r2, #4]
 879:Dsp/letter_shell/shell.c ****     {
 258              		.loc 1 879 0 discriminator 3
 259 000e 0133     		adds	r3, r3, #1
 260              	.LVL32:
 261 0010 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 21


 262              	.LVL33:
 263              	.L23:
 879:Dsp/letter_shell/shell.c ****     {
 264              		.loc 1 879 0 is_stmt 0 discriminator 1
 265 0012 072B     		cmp	r3, #7
 266 0014 F6DD     		ble	.L24
 267              	.LBE3:
 875:Dsp/letter_shell/shell.c ****     unsigned char quotes = 0;
 268              		.loc 1 875 0 is_stmt 1
 269 0016 F0B4     		push	{r4, r5, r6, r7}
 270              	.LCFI4:
 271              		.cfi_def_cfa_offset 16
 272              		.cfi_offset 4, -16
 273              		.cfi_offset 5, -12
 274              		.cfi_offset 6, -8
 275              		.cfi_offset 7, -4
 882:Dsp/letter_shell/shell.c ****     }
 883:Dsp/letter_shell/shell.c **** 
 884:Dsp/letter_shell/shell.c ****     shell->parser.paramCount = 0;
 276              		.loc 1 884 0
 277 0018 0021     		movs	r1, #0
 278 001a C186     		strh	r1, [r0, #54]	@ movhi
 279              	.LVL34:
 280              	.LBB4:
 885:Dsp/letter_shell/shell.c ****     for (unsigned short i = 0; i < shell->parser.length; i++)
 281              		.loc 1 885 0
 282 001c 0B46     		mov	r3, r1
 283              	.LVL35:
 284              	.LBE4:
 877:Dsp/letter_shell/shell.c **** 
 285              		.loc 1 877 0
 286 001e 0126     		movs	r6, #1
 287              	.LBB5:
 288              		.loc 1 885 0
 289 0020 29E0     		b	.L25
 290              	.LVL36:
 291              	.L31:
 886:Dsp/letter_shell/shell.c ****     {
 887:Dsp/letter_shell/shell.c ****         if (quotes != 0
 292              		.loc 1 887 0
 293 0022 29B9     		cbnz	r1, .L26
 888:Dsp/letter_shell/shell.c ****             || (shell->parser.buffer[i] != ' '
 294              		.loc 1 888 0
 295 0024 0269     		ldr	r2, [r0, #16]
 296 0026 D418     		adds	r4, r2, r3
 297 0028 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 298 002a 202A     		cmp	r2, #32
 299 002c 1ED0     		beq	.L27
 889:Dsp/letter_shell/shell.c ****                 && shell->parser.buffer[i] != 0))
 300              		.loc 1 889 0
 301 002e EAB1     		cbz	r2, .L27
 302              	.L26:
 890:Dsp/letter_shell/shell.c ****         {
 891:Dsp/letter_shell/shell.c ****             if (shell->parser.buffer[i] == '\"')
 303              		.loc 1 891 0
 304 0030 0269     		ldr	r2, [r0, #16]
 305 0032 1F46     		mov	r7, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 22


 306 0034 D418     		adds	r4, r2, r3
 307 0036 D55C     		ldrb	r5, [r2, r3]	@ zero_extendqisi2
 308 0038 222D     		cmp	r5, #34
 309 003a 01D1     		bne	.L28
 892:Dsp/letter_shell/shell.c ****             {
 893:Dsp/letter_shell/shell.c ****                 quotes = quotes ? 0 : 1;
 310              		.loc 1 893 0
 311 003c 81F00101 		eor	r1, r1, #1
 312              	.LVL37:
 313              	.L28:
 894:Dsp/letter_shell/shell.c ****             }
 895:Dsp/letter_shell/shell.c ****             if (record == 1)
 314              		.loc 1 895 0
 315 0040 5EB1     		cbz	r6, .L29
 896:Dsp/letter_shell/shell.c ****             {
 897:Dsp/letter_shell/shell.c ****                 if (shell->parser.paramCount < SHELL_PARAMETER_MAX_NUMBER)
 316              		.loc 1 897 0
 317 0042 C58E     		ldrh	r5, [r0, #54]
 318 0044 072D     		cmp	r5, #7
 319 0046 07D8     		bhi	.L32
 898:Dsp/letter_shell/shell.c ****                 {
 899:Dsp/letter_shell/shell.c ****                     shell->parser.param[shell->parser.paramCount++] =
 320              		.loc 1 899 0
 321 0048 6E1C     		adds	r6, r5, #1
 322              	.LVL38:
 323 004a C686     		strh	r6, [r0, #54]	@ movhi
 324 004c 0435     		adds	r5, r5, #4
 325 004e 00EB8505 		add	r5, r0, r5, lsl #2
 326 0052 6C60     		str	r4, [r5, #4]
 900:Dsp/letter_shell/shell.c ****                         &(shell->parser.buffer[i]);
 901:Dsp/letter_shell/shell.c ****                 }
 902:Dsp/letter_shell/shell.c ****                 record = 0;
 327              		.loc 1 902 0
 328 0054 0026     		movs	r6, #0
 329 0056 00E0     		b	.L29
 330              	.LVL39:
 331              	.L32:
 332 0058 0026     		movs	r6, #0
 333              	.LVL40:
 334              	.L29:
 903:Dsp/letter_shell/shell.c ****             }
 904:Dsp/letter_shell/shell.c ****             if (shell->parser.buffer[i] == '\\'
 335              		.loc 1 904 0
 336 005a 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 337 005c 5C2C     		cmp	r4, #92
 338 005e 08D1     		bne	.L30
 905:Dsp/letter_shell/shell.c ****                 && shell->parser.buffer[i + 1] != 0)
 339              		.loc 1 905 0
 340 0060 0137     		adds	r7, r7, #1
 341 0062 D25D     		ldrb	r2, [r2, r7]	@ zero_extendqisi2
 342 0064 2AB1     		cbz	r2, .L30
 906:Dsp/letter_shell/shell.c ****             {
 907:Dsp/letter_shell/shell.c ****                 i++;
 343              		.loc 1 907 0
 344 0066 0133     		adds	r3, r3, #1
 345              	.LVL41:
 346 0068 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 23


 347              	.LVL42:
 348 006a 02E0     		b	.L30
 349              	.L27:
 908:Dsp/letter_shell/shell.c ****             }
 909:Dsp/letter_shell/shell.c ****         }
 910:Dsp/letter_shell/shell.c ****         else
 911:Dsp/letter_shell/shell.c ****         {
 912:Dsp/letter_shell/shell.c ****             shell->parser.buffer[i] = 0;
 350              		.loc 1 912 0
 351 006c 0022     		movs	r2, #0
 352 006e 2270     		strb	r2, [r4]
 353              	.LVL43:
 913:Dsp/letter_shell/shell.c ****             record = 1;
 354              		.loc 1 913 0
 355 0070 0126     		movs	r6, #1
 356              	.LVL44:
 357              	.L30:
 885:Dsp/letter_shell/shell.c ****     {
 358              		.loc 1 885 0 discriminator 2
 359 0072 0133     		adds	r3, r3, #1
 360              	.LVL45:
 361 0074 9BB2     		uxth	r3, r3
 362              	.LVL46:
 363              	.L25:
 885:Dsp/letter_shell/shell.c ****     {
 364              		.loc 1 885 0 is_stmt 0 discriminator 1
 365 0076 8289     		ldrh	r2, [r0, #12]
 366 0078 9342     		cmp	r3, r2
 367 007a D2D3     		bcc	.L31
 368              	.LBE5:
 914:Dsp/letter_shell/shell.c ****         }
 915:Dsp/letter_shell/shell.c ****     }
 916:Dsp/letter_shell/shell.c **** }
 369              		.loc 1 916 0 is_stmt 1
 370 007c F0BC     		pop	{r4, r5, r6, r7}
 371              	.LCFI5:
 372              		.cfi_restore 7
 373              		.cfi_restore 6
 374              		.cfi_restore 5
 375              		.cfi_restore 4
 376              		.cfi_def_cfa_offset 0
 377              	.LVL47:
 378 007e 7047     		bx	lr
 379              		.cfi_endproc
 380              	.LFE150:
 382              		.section	.text.shellHistoryAdd,"ax",%progbits
 383              		.align	2
 384              		.thumb
 385              		.thumb_func
 387              	shellHistoryAdd:
 388              	.LFB161:
 917:Dsp/letter_shell/shell.c **** 
 918:Dsp/letter_shell/shell.c **** 
 919:Dsp/letter_shell/shell.c **** /**
 920:Dsp/letter_shell/shell.c ****  * @brief shell去除字符串参数头尾的双引号
 921:Dsp/letter_shell/shell.c ****  * 
 922:Dsp/letter_shell/shell.c ****  * @param shell shell对象
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 24


 923:Dsp/letter_shell/shell.c ****  */
 924:Dsp/letter_shell/shell.c **** static void shellRemoveParamQuotes(Shell *shell)
 925:Dsp/letter_shell/shell.c **** {
 926:Dsp/letter_shell/shell.c ****     unsigned short paramLength;
 927:Dsp/letter_shell/shell.c ****     for (unsigned short i = 0; i < shell->parser.paramCount; i++)
 928:Dsp/letter_shell/shell.c ****     {
 929:Dsp/letter_shell/shell.c ****         if (shell->parser.param[i][0] == '\"')
 930:Dsp/letter_shell/shell.c ****         {
 931:Dsp/letter_shell/shell.c ****             shell->parser.param[i][0] = 0;
 932:Dsp/letter_shell/shell.c ****             shell->parser.param[i] = &shell->parser.param[i][1];
 933:Dsp/letter_shell/shell.c ****         }
 934:Dsp/letter_shell/shell.c ****         paramLength = strlen(shell->parser.param[i]);
 935:Dsp/letter_shell/shell.c ****         if (shell->parser.param[i][paramLength - 1] == '\"')
 936:Dsp/letter_shell/shell.c ****         {
 937:Dsp/letter_shell/shell.c ****             shell->parser.param[i][paramLength - 1] = 0;
 938:Dsp/letter_shell/shell.c ****         }
 939:Dsp/letter_shell/shell.c ****     }
 940:Dsp/letter_shell/shell.c **** }
 941:Dsp/letter_shell/shell.c **** 
 942:Dsp/letter_shell/shell.c **** 
 943:Dsp/letter_shell/shell.c **** /**
 944:Dsp/letter_shell/shell.c ****  * @brief shell匹配命令
 945:Dsp/letter_shell/shell.c ****  * 
 946:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 947:Dsp/letter_shell/shell.c ****  * @param cmd 命令
 948:Dsp/letter_shell/shell.c ****  * @param base 匹配命令表基址
 949:Dsp/letter_shell/shell.c ****  * @param compareLength 匹配字符串长度
 950:Dsp/letter_shell/shell.c ****  * @return ShellCommand* 匹配到的命令
 951:Dsp/letter_shell/shell.c ****  */
 952:Dsp/letter_shell/shell.c **** ShellCommand* shellSeekCommand(Shell *shell,
 953:Dsp/letter_shell/shell.c ****                                const char *cmd,
 954:Dsp/letter_shell/shell.c ****                                ShellCommand *base,
 955:Dsp/letter_shell/shell.c ****                                unsigned short compareLength)
 956:Dsp/letter_shell/shell.c **** {
 957:Dsp/letter_shell/shell.c ****     const char *name;
 958:Dsp/letter_shell/shell.c ****     int ret;
 959:Dsp/letter_shell/shell.c ****     unsigned short count = shell->commandList.count -
 960:Dsp/letter_shell/shell.c ****         ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 961:Dsp/letter_shell/shell.c ****     for (unsigned short i = 0; i < count; i++)
 962:Dsp/letter_shell/shell.c ****     {
 963:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type == SHELL_TYPE_KEY
 964:Dsp/letter_shell/shell.c ****             || shellCheckPermission(shell, &base[i]) != 0)
 965:Dsp/letter_shell/shell.c ****         {
 966:Dsp/letter_shell/shell.c ****             continue;
 967:Dsp/letter_shell/shell.c ****         }
 968:Dsp/letter_shell/shell.c ****         name = shellGetCommandName(&base[i]);
 969:Dsp/letter_shell/shell.c ****         if (!compareLength)
 970:Dsp/letter_shell/shell.c ****         {
 971:Dsp/letter_shell/shell.c ****             ret = strcmp(cmd, name);
 972:Dsp/letter_shell/shell.c ****             if (strcmp(cmd, name) == 0)
 973:Dsp/letter_shell/shell.c ****             {
 974:Dsp/letter_shell/shell.c ****                 return &base[i];
 975:Dsp/letter_shell/shell.c ****             }
 976:Dsp/letter_shell/shell.c ****         }
 977:Dsp/letter_shell/shell.c ****         else
 978:Dsp/letter_shell/shell.c ****         {
 979:Dsp/letter_shell/shell.c ****             if (strncmp(cmd, name, compareLength) == 0)
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 25


 980:Dsp/letter_shell/shell.c ****             {
 981:Dsp/letter_shell/shell.c ****                 return &base[i];
 982:Dsp/letter_shell/shell.c ****             }
 983:Dsp/letter_shell/shell.c ****         }
 984:Dsp/letter_shell/shell.c ****     }
 985:Dsp/letter_shell/shell.c ****     return NULL;
 986:Dsp/letter_shell/shell.c **** }
 987:Dsp/letter_shell/shell.c **** 
 988:Dsp/letter_shell/shell.c **** 
 989:Dsp/letter_shell/shell.c **** /**
 990:Dsp/letter_shell/shell.c ****  * @brief shell 获取变量值
 991:Dsp/letter_shell/shell.c ****  * 
 992:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 993:Dsp/letter_shell/shell.c ****  * @param command 命令
 994:Dsp/letter_shell/shell.c ****  * @return int 变量值
 995:Dsp/letter_shell/shell.c ****  */
 996:Dsp/letter_shell/shell.c **** int shellGetVarValue(Shell *shell, ShellCommand *command)
 997:Dsp/letter_shell/shell.c **** {
 998:Dsp/letter_shell/shell.c ****     int value = 0;
 999:Dsp/letter_shell/shell.c ****     switch (command->attr.attrs.type)
1000:Dsp/letter_shell/shell.c ****     {
1001:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_INT:
1002:Dsp/letter_shell/shell.c ****         value = *((int *)(command->data.var.value));
1003:Dsp/letter_shell/shell.c ****         break;
1004:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_SHORT:
1005:Dsp/letter_shell/shell.c ****         value = *((short *)(command->data.var.value));
1006:Dsp/letter_shell/shell.c ****         break;
1007:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_CHAR:
1008:Dsp/letter_shell/shell.c ****         value = *((char *)(command->data.var.value));
1009:Dsp/letter_shell/shell.c ****         break;
1010:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
1011:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_POINT:
1012:Dsp/letter_shell/shell.c ****         value = (int)(command->data.var.value);
1013:Dsp/letter_shell/shell.c ****         break;
1014:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_NODE:
1015:Dsp/letter_shell/shell.c ****         value = ((ShellNodeVarAttr *)command->data.var.value)->get ?
1016:Dsp/letter_shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)
1017:Dsp/letter_shell/shell.c ****                         ->get(((ShellNodeVarAttr *)command->data.var.value)->var) : 0;
1018:Dsp/letter_shell/shell.c ****         break;
1019:Dsp/letter_shell/shell.c ****     default:
1020:Dsp/letter_shell/shell.c ****         break;
1021:Dsp/letter_shell/shell.c ****     }
1022:Dsp/letter_shell/shell.c ****     return value;
1023:Dsp/letter_shell/shell.c **** }
1024:Dsp/letter_shell/shell.c **** 
1025:Dsp/letter_shell/shell.c **** 
1026:Dsp/letter_shell/shell.c **** /**
1027:Dsp/letter_shell/shell.c ****  * @brief shell设置变量值
1028:Dsp/letter_shell/shell.c ****  * 
1029:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1030:Dsp/letter_shell/shell.c ****  * @param command 命令
1031:Dsp/letter_shell/shell.c ****  * @param value 值
1032:Dsp/letter_shell/shell.c ****  * @return int 返回变量值
1033:Dsp/letter_shell/shell.c ****  */
1034:Dsp/letter_shell/shell.c **** int shellSetVarValue(Shell *shell, ShellCommand *command, int value)
1035:Dsp/letter_shell/shell.c **** {
1036:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.readOnly)
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 26


1037:Dsp/letter_shell/shell.c ****     {
1038:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY]);
1039:Dsp/letter_shell/shell.c ****     }
1040:Dsp/letter_shell/shell.c ****     else
1041:Dsp/letter_shell/shell.c ****     {
1042:Dsp/letter_shell/shell.c ****         switch (command->attr.attrs.type)
1043:Dsp/letter_shell/shell.c ****         {
1044:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_INT:
1045:Dsp/letter_shell/shell.c ****             *((int *)(command->data.var.value)) = value;
1046:Dsp/letter_shell/shell.c ****             break;
1047:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_SHORT:
1048:Dsp/letter_shell/shell.c ****             *((short *)(command->data.var.value)) = value;
1049:Dsp/letter_shell/shell.c ****             break;
1050:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_CHAR:
1051:Dsp/letter_shell/shell.c ****             *((char *)(command->data.var.value)) = value;
1052:Dsp/letter_shell/shell.c ****             break;
1053:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_STRING:
1054:Dsp/letter_shell/shell.c ****             shellStringCopy(((char *)(command->data.var.value)), (char *)value);
1055:Dsp/letter_shell/shell.c ****             break;
1056:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_POINT:
1057:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_POINT_CANNOT_MODIFY]);
1058:Dsp/letter_shell/shell.c ****             break;
1059:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_NODE:
1060:Dsp/letter_shell/shell.c ****             if (((ShellNodeVarAttr *)command->data.var.value)->set)
1061:Dsp/letter_shell/shell.c ****             {
1062:Dsp/letter_shell/shell.c ****                 if (((ShellNodeVarAttr *)command->data.var.value)->var)
1063:Dsp/letter_shell/shell.c ****                 {
1064:Dsp/letter_shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)
1065:Dsp/letter_shell/shell.c ****                         ->set(((ShellNodeVarAttr *)command->data.var.value)->var, value);
1066:Dsp/letter_shell/shell.c ****                 }
1067:Dsp/letter_shell/shell.c ****                 else
1068:Dsp/letter_shell/shell.c ****                 {
1069:Dsp/letter_shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)->set(value);
1070:Dsp/letter_shell/shell.c ****                 }
1071:Dsp/letter_shell/shell.c ****             }
1072:Dsp/letter_shell/shell.c ****             break;
1073:Dsp/letter_shell/shell.c ****         default:
1074:Dsp/letter_shell/shell.c ****             break;
1075:Dsp/letter_shell/shell.c ****         }
1076:Dsp/letter_shell/shell.c ****     }
1077:Dsp/letter_shell/shell.c ****     return shellShowVar(shell, command);
1078:Dsp/letter_shell/shell.c **** }
1079:Dsp/letter_shell/shell.c **** 
1080:Dsp/letter_shell/shell.c **** 
1081:Dsp/letter_shell/shell.c **** /**
1082:Dsp/letter_shell/shell.c ****  * @brief shell变量输出
1083:Dsp/letter_shell/shell.c ****  * 
1084:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1085:Dsp/letter_shell/shell.c ****  * @param command 命令
1086:Dsp/letter_shell/shell.c ****  * @return int 返回变量值
1087:Dsp/letter_shell/shell.c ****  */
1088:Dsp/letter_shell/shell.c **** static int shellShowVar(Shell *shell, ShellCommand *command)
1089:Dsp/letter_shell/shell.c **** {
1090:Dsp/letter_shell/shell.c ****     char buffer[12] = "00000000000";
1091:Dsp/letter_shell/shell.c ****     int value = shellGetVarValue(shell, command);
1092:Dsp/letter_shell/shell.c ****     
1093:Dsp/letter_shell/shell.c ****     shellWriteString(shell, command->data.var.name);
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 27


1094:Dsp/letter_shell/shell.c ****     shellWriteString(shell, " = ");
1095:Dsp/letter_shell/shell.c **** 
1096:Dsp/letter_shell/shell.c ****     switch (command->attr.attrs.type)
1097:Dsp/letter_shell/shell.c ****     {
1098:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
1099:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\"");
1100:Dsp/letter_shell/shell.c ****         shellWriteString(shell, (char *)value);
1101:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\"");
1102:Dsp/letter_shell/shell.c ****         break;
1103:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_INT:
1104:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_SHORT:
1105:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_CHAR:
1106:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_POINT:
1107:Dsp/letter_shell/shell.c ****     default:
1108:Dsp/letter_shell/shell.c ****         shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
1109:Dsp/letter_shell/shell.c ****         shellWriteString(shell, ", 0x");
1110:Dsp/letter_shell/shell.c ****         for (short i = 0; i < 11; i++)
1111:Dsp/letter_shell/shell.c ****         {
1112:Dsp/letter_shell/shell.c ****             buffer[i] = '0';
1113:Dsp/letter_shell/shell.c ****         }
1114:Dsp/letter_shell/shell.c ****         shellToHex(value, buffer);
1115:Dsp/letter_shell/shell.c ****         shellWriteString(shell, buffer);
1116:Dsp/letter_shell/shell.c ****         break;
1117:Dsp/letter_shell/shell.c ****     }
1118:Dsp/letter_shell/shell.c **** 
1119:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "\r\n");
1120:Dsp/letter_shell/shell.c ****     return value;
1121:Dsp/letter_shell/shell.c **** }
1122:Dsp/letter_shell/shell.c **** 
1123:Dsp/letter_shell/shell.c **** 
1124:Dsp/letter_shell/shell.c **** /**
1125:Dsp/letter_shell/shell.c ****  * @brief shell设置变量
1126:Dsp/letter_shell/shell.c ****  * 
1127:Dsp/letter_shell/shell.c ****  * @param name 变量名
1128:Dsp/letter_shell/shell.c ****  * @param value 变量值
1129:Dsp/letter_shell/shell.c ****  * @return int 返回变量值
1130:Dsp/letter_shell/shell.c ****  */
1131:Dsp/letter_shell/shell.c **** int shellSetVar(char *name, int value)
1132:Dsp/letter_shell/shell.c **** {
1133:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1134:Dsp/letter_shell/shell.c ****     if (shell == NULL)
1135:Dsp/letter_shell/shell.c ****     {
1136:Dsp/letter_shell/shell.c ****         return 0;
1137:Dsp/letter_shell/shell.c ****     }
1138:Dsp/letter_shell/shell.c ****     ShellCommand *command = shellSeekCommand(shell,
1139:Dsp/letter_shell/shell.c ****                                              name,
1140:Dsp/letter_shell/shell.c ****                                              shell->commandList.base,
1141:Dsp/letter_shell/shell.c ****                                              0);
1142:Dsp/letter_shell/shell.c ****     if (!command)
1143:Dsp/letter_shell/shell.c ****     {
1144:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_VAR_NOT_FOUND]);
1145:Dsp/letter_shell/shell.c ****         return 0;
1146:Dsp/letter_shell/shell.c ****     }
1147:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type < SHELL_TYPE_VAR_INT
1148:Dsp/letter_shell/shell.c ****         || command->attr.attrs.type > SHELL_TYPE_VAR_NODE)
1149:Dsp/letter_shell/shell.c ****     {
1150:Dsp/letter_shell/shell.c ****         shellWriteString(shell, name);
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 28


1151:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_NOT_VAR]);
1152:Dsp/letter_shell/shell.c ****         return 0;
1153:Dsp/letter_shell/shell.c ****     }
1154:Dsp/letter_shell/shell.c ****     return shellSetVarValue(shell, command, value);
1155:Dsp/letter_shell/shell.c **** }
1156:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1157:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1158:Dsp/letter_shell/shell.c **** setVar, shellSetVar, set var);
1159:Dsp/letter_shell/shell.c **** 
1160:Dsp/letter_shell/shell.c **** 
1161:Dsp/letter_shell/shell.c **** /**
1162:Dsp/letter_shell/shell.c ****  * @brief shell运行命令
1163:Dsp/letter_shell/shell.c ****  * 
1164:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1165:Dsp/letter_shell/shell.c ****  * @param command 命令
1166:Dsp/letter_shell/shell.c ****  * 
1167:Dsp/letter_shell/shell.c ****  * @return unsigned int 命令返回值
1168:Dsp/letter_shell/shell.c ****  */
1169:Dsp/letter_shell/shell.c **** unsigned int shellRunCommand(Shell *shell, ShellCommand *command)
1170:Dsp/letter_shell/shell.c **** {
1171:Dsp/letter_shell/shell.c ****     int returnValue = 0;
1172:Dsp/letter_shell/shell.c ****     shell->status.isActive = 1;
1173:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type == SHELL_TYPE_CMD_MAIN)
1174:Dsp/letter_shell/shell.c ****     {
1175:Dsp/letter_shell/shell.c ****         shellRemoveParamQuotes(shell);
1176:Dsp/letter_shell/shell.c ****         returnValue = command->data.cmd.function(shell->parser.paramCount,
1177:Dsp/letter_shell/shell.c ****                                                  shell->parser.param);
1178:Dsp/letter_shell/shell.c ****         if (!command->attr.attrs.disableReturn)
1179:Dsp/letter_shell/shell.c ****         {
1180:Dsp/letter_shell/shell.c ****             shellWriteReturnValue(shell, returnValue);
1181:Dsp/letter_shell/shell.c ****         }
1182:Dsp/letter_shell/shell.c ****     }
1183:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type == SHELL_TYPE_CMD_FUNC)
1184:Dsp/letter_shell/shell.c ****     {
1185:Dsp/letter_shell/shell.c ****         returnValue = shellExtRun(shell,
1186:Dsp/letter_shell/shell.c ****                                   command,
1187:Dsp/letter_shell/shell.c ****                                   shell->parser.paramCount,
1188:Dsp/letter_shell/shell.c ****                                   shell->parser.param);
1189:Dsp/letter_shell/shell.c ****         if (!command->attr.attrs.disableReturn)
1190:Dsp/letter_shell/shell.c ****         {
1191:Dsp/letter_shell/shell.c ****             shellWriteReturnValue(shell, returnValue);
1192:Dsp/letter_shell/shell.c ****         }
1193:Dsp/letter_shell/shell.c ****     }
1194:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type >= SHELL_TYPE_VAR_INT
1195:Dsp/letter_shell/shell.c ****         && command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
1196:Dsp/letter_shell/shell.c ****     {
1197:Dsp/letter_shell/shell.c ****         shellShowVar(shell, command);
1198:Dsp/letter_shell/shell.c ****     }
1199:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type == SHELL_TYPE_USER)
1200:Dsp/letter_shell/shell.c ****     {
1201:Dsp/letter_shell/shell.c ****         shellSetUser(shell, command);
1202:Dsp/letter_shell/shell.c ****     }
1203:Dsp/letter_shell/shell.c ****     shell->status.isActive = 0;
1204:Dsp/letter_shell/shell.c **** 
1205:Dsp/letter_shell/shell.c ****     return returnValue;
1206:Dsp/letter_shell/shell.c **** }
1207:Dsp/letter_shell/shell.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 29


1208:Dsp/letter_shell/shell.c **** 
1209:Dsp/letter_shell/shell.c **** /**
1210:Dsp/letter_shell/shell.c ****  * @brief shell校验密码
1211:Dsp/letter_shell/shell.c ****  * 
1212:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1213:Dsp/letter_shell/shell.c ****  */
1214:Dsp/letter_shell/shell.c **** static void shellCheckPassword(Shell *shell)
1215:Dsp/letter_shell/shell.c **** {
1216:Dsp/letter_shell/shell.c ****     if (strcmp(shell->parser.buffer, shell->info.user->data.user.password) == 0)
1217:Dsp/letter_shell/shell.c ****     {
1218:Dsp/letter_shell/shell.c ****         shell->status.isChecked = 1;
1219:Dsp/letter_shell/shell.c ****     #if SHELL_SHOW_INFO == 1
1220:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_INFO]);
1221:Dsp/letter_shell/shell.c ****     #endif
1222:Dsp/letter_shell/shell.c ****     }
1223:Dsp/letter_shell/shell.c ****     else
1224:Dsp/letter_shell/shell.c ****     {
1225:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_PASSWORD_ERROR]);
1226:Dsp/letter_shell/shell.c ****     }
1227:Dsp/letter_shell/shell.c ****     shell->parser.length = 0;
1228:Dsp/letter_shell/shell.c ****     shell->parser.cursor = 0;
1229:Dsp/letter_shell/shell.c **** }
1230:Dsp/letter_shell/shell.c **** 
1231:Dsp/letter_shell/shell.c **** 
1232:Dsp/letter_shell/shell.c **** /**
1233:Dsp/letter_shell/shell.c ****  * @brief shell设置用户
1234:Dsp/letter_shell/shell.c ****  * 
1235:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1236:Dsp/letter_shell/shell.c ****  * @param user 用户
1237:Dsp/letter_shell/shell.c ****  */
1238:Dsp/letter_shell/shell.c **** static void shellSetUser(Shell *shell, const ShellCommand *user)
1239:Dsp/letter_shell/shell.c **** {
1240:Dsp/letter_shell/shell.c ****     shell->info.user = user;
1241:Dsp/letter_shell/shell.c ****     shell->status.isChecked = 
1242:Dsp/letter_shell/shell.c ****         ((user->data.user.password && strlen(user->data.user.password) != 0)
1243:Dsp/letter_shell/shell.c ****             && (shell->parser.paramCount < 2
1244:Dsp/letter_shell/shell.c ****                 || strcmp(user->data.user.password, shell->parser.param[1]) != 0))
1245:Dsp/letter_shell/shell.c ****          ? 0 : 1;
1246:Dsp/letter_shell/shell.c ****         
1247:Dsp/letter_shell/shell.c **** #if SHELL_CLS_WHEN_LOGIN == 1
1248:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_CONSOLE]);
1249:Dsp/letter_shell/shell.c **** #endif
1250:Dsp/letter_shell/shell.c **** #if SHELL_SHOW_INFO == 1
1251:Dsp/letter_shell/shell.c ****     if (shell->status.isChecked)
1252:Dsp/letter_shell/shell.c ****     {
1253:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_INFO]);
1254:Dsp/letter_shell/shell.c ****     }
1255:Dsp/letter_shell/shell.c **** #endif
1256:Dsp/letter_shell/shell.c **** }
1257:Dsp/letter_shell/shell.c **** 
1258:Dsp/letter_shell/shell.c **** 
1259:Dsp/letter_shell/shell.c **** /**
1260:Dsp/letter_shell/shell.c ****  * @brief shell写返回值
1261:Dsp/letter_shell/shell.c ****  * 
1262:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1263:Dsp/letter_shell/shell.c ****  * @param value 返回值
1264:Dsp/letter_shell/shell.c ****  */
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 30


1265:Dsp/letter_shell/shell.c **** static void shellWriteReturnValue(Shell *shell, int value)
1266:Dsp/letter_shell/shell.c **** {
1267:Dsp/letter_shell/shell.c ****     char buffer[12] = "00000000000";
1268:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "Return: ");
1269:Dsp/letter_shell/shell.c ****     shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
1270:Dsp/letter_shell/shell.c ****     shellWriteString(shell, ", 0x");
1271:Dsp/letter_shell/shell.c ****     for (short i = 0; i < 11; i++)
1272:Dsp/letter_shell/shell.c ****     {
1273:Dsp/letter_shell/shell.c ****         buffer[i] = '0';
1274:Dsp/letter_shell/shell.c ****     }
1275:Dsp/letter_shell/shell.c ****     shellToHex(value, buffer);
1276:Dsp/letter_shell/shell.c ****     shellWriteString(shell, buffer);
1277:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "\r\n");
1278:Dsp/letter_shell/shell.c **** }
1279:Dsp/letter_shell/shell.c **** 
1280:Dsp/letter_shell/shell.c **** 
1281:Dsp/letter_shell/shell.c **** /**
1282:Dsp/letter_shell/shell.c ****  * @brief shell历史记录添加
1283:Dsp/letter_shell/shell.c ****  * 
1284:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1285:Dsp/letter_shell/shell.c ****  */
1286:Dsp/letter_shell/shell.c **** static void shellHistoryAdd(Shell *shell)
1287:Dsp/letter_shell/shell.c **** {
 389              		.loc 1 1287 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              	.LVL48:
 394 0000 10B5     		push	{r4, lr}
 395              	.LCFI6:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 4, -8
 398              		.cfi_offset 14, -4
 399 0002 0446     		mov	r4, r0
1288:Dsp/letter_shell/shell.c ****     shell->history.offset = 0;
 400              		.loc 1 1288 0
 401 0004 0023     		movs	r3, #0
 402 0006 A0F85430 		strh	r3, [r0, #84]	@ movhi
1289:Dsp/letter_shell/shell.c ****     if (shell->history.number > 0
 403              		.loc 1 1289 0
 404 000a B0F85030 		ldrh	r3, [r0, #80]
 405 000e 6BB1     		cbz	r3, .L35
1290:Dsp/letter_shell/shell.c ****         && strcmp(shell->history.item[(shell->history.record == 0 ? 
 406              		.loc 1 1290 0
 407 0010 B0F85230 		ldrh	r3, [r0, #82]
1291:Dsp/letter_shell/shell.c ****                 SHELL_HISTORY_MAX_NUMBER : shell->history.record) - 1],
 408              		.loc 1 1291 0
 409 0014 0BB1     		cbz	r3, .L40
 410              		.loc 1 1291 0 is_stmt 0 discriminator 1
 411 0016 013B     		subs	r3, r3, #1
 412 0018 00E0     		b	.L36
 413              	.L40:
 414              		.loc 1 1291 0
 415 001a 0423     		movs	r3, #4
 416              	.L36:
1290:Dsp/letter_shell/shell.c ****         && strcmp(shell->history.item[(shell->history.record == 0 ? 
 417              		.loc 1 1290 0 is_stmt 1
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 31


 418 001c 0E33     		adds	r3, r3, #14
 419 001e 04EB8303 		add	r3, r4, r3, lsl #2
 420 0022 2169     		ldr	r1, [r4, #16]
 421 0024 5868     		ldr	r0, [r3, #4]
 422              	.LVL49:
 423 0026 FFF7FEFF 		bl	strcmp
 424              	.LVL50:
 425 002a 00B3     		cbz	r0, .L34
 426              	.L35:
1292:Dsp/letter_shell/shell.c ****                 shell->parser.buffer) == 0)
1293:Dsp/letter_shell/shell.c ****     {
1294:Dsp/letter_shell/shell.c ****         return;
1295:Dsp/letter_shell/shell.c ****     }
1296:Dsp/letter_shell/shell.c ****     if (shellStringCopy(shell->history.item[shell->history.record],
 427              		.loc 1 1296 0
 428 002c B4F85230 		ldrh	r3, [r4, #82]
 429 0030 0E33     		adds	r3, r3, #14
 430 0032 04EB8303 		add	r3, r4, r3, lsl #2
 431 0036 2169     		ldr	r1, [r4, #16]
 432 0038 5868     		ldr	r0, [r3, #4]
 433 003a FFF7FEFF 		bl	shellStringCopy
 434              	.LVL51:
 435 003e 20B1     		cbz	r0, .L38
1297:Dsp/letter_shell/shell.c ****                         shell->parser.buffer) != 0)
1298:Dsp/letter_shell/shell.c ****     {
1299:Dsp/letter_shell/shell.c ****         shell->history.record++;
 436              		.loc 1 1299 0
 437 0040 B4F85230 		ldrh	r3, [r4, #82]
 438 0044 0133     		adds	r3, r3, #1
 439 0046 A4F85230 		strh	r3, [r4, #82]	@ movhi
 440              	.L38:
1300:Dsp/letter_shell/shell.c ****     }
1301:Dsp/letter_shell/shell.c ****     if (++shell->history.number > SHELL_HISTORY_MAX_NUMBER)
 441              		.loc 1 1301 0
 442 004a B4F85030 		ldrh	r3, [r4, #80]
 443 004e 0133     		adds	r3, r3, #1
 444 0050 9BB2     		uxth	r3, r3
 445 0052 A4F85030 		strh	r3, [r4, #80]	@ movhi
 446 0056 052B     		cmp	r3, #5
 447 0058 02D9     		bls	.L39
1302:Dsp/letter_shell/shell.c ****     {
1303:Dsp/letter_shell/shell.c ****         shell->history.number = SHELL_HISTORY_MAX_NUMBER;
 448              		.loc 1 1303 0
 449 005a 0523     		movs	r3, #5
 450 005c A4F85030 		strh	r3, [r4, #80]	@ movhi
 451              	.L39:
1304:Dsp/letter_shell/shell.c ****     }
1305:Dsp/letter_shell/shell.c ****     if (shell->history.record >= SHELL_HISTORY_MAX_NUMBER)
 452              		.loc 1 1305 0
 453 0060 B4F85230 		ldrh	r3, [r4, #82]
 454 0064 042B     		cmp	r3, #4
 455 0066 02D9     		bls	.L34
1306:Dsp/letter_shell/shell.c ****     {
1307:Dsp/letter_shell/shell.c ****         shell->history.record = 0;
 456              		.loc 1 1307 0
 457 0068 0023     		movs	r3, #0
 458 006a A4F85230 		strh	r3, [r4, #82]	@ movhi
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 32


 459              	.L34:
 460 006e 10BD     		pop	{r4, pc}
 461              		.cfi_endproc
 462              	.LFE161:
 464              		.section	.text.shellWriteByte,"ax",%progbits
 465              		.align	2
 466              		.thumb
 467              		.thumb_func
 469              	shellWriteByte:
 470              	.LFB127:
 266:Dsp/letter_shell/shell.c ****     shell->write(data);
 471              		.loc 1 266 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              	.LVL52:
 476 0000 08B5     		push	{r3, lr}
 477              	.LCFI7:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 3, -8
 480              		.cfi_offset 14, -4
 267:Dsp/letter_shell/shell.c ****     delay_us(50);
 481              		.loc 1 267 0
 482 0002 836E     		ldr	r3, [r0, #104]
 483 0004 0846     		mov	r0, r1
 484              	.LVL53:
 485 0006 9847     		blx	r3
 486              	.LVL54:
 268:Dsp/letter_shell/shell.c **** }
 487              		.loc 1 268 0
 488 0008 3220     		movs	r0, #50
 489 000a FFF7FEFF 		bl	delay_us
 490              	.LVL55:
 491 000e 08BD     		pop	{r3, pc}
 492              		.cfi_endproc
 493              	.LFE127:
 495              		.section	.text.shellRemoveParamQuotes,"ax",%progbits
 496              		.align	2
 497              		.thumb
 498              		.thumb_func
 500              	shellRemoveParamQuotes:
 501              	.LFB151:
 925:Dsp/letter_shell/shell.c ****     unsigned short paramLength;
 502              		.loc 1 925 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              	.LVL56:
 507 0000 70B5     		push	{r4, r5, r6, lr}
 508              	.LCFI8:
 509              		.cfi_def_cfa_offset 16
 510              		.cfi_offset 4, -16
 511              		.cfi_offset 5, -12
 512              		.cfi_offset 6, -8
 513              		.cfi_offset 14, -4
 514 0002 0546     		mov	r5, r0
 515              	.LVL57:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 33


 516              	.LBB6:
 927:Dsp/letter_shell/shell.c ****     {
 517              		.loc 1 927 0
 518 0004 0024     		movs	r4, #0
 519 0006 1FE0     		b	.L45
 520              	.LVL58:
 521              	.L48:
 929:Dsp/letter_shell/shell.c ****         {
 522              		.loc 1 929 0
 523 0008 2346     		mov	r3, r4
 524 000a 221D     		adds	r2, r4, #4
 525 000c 05EB8202 		add	r2, r5, r2, lsl #2
 526 0010 5268     		ldr	r2, [r2, #4]
 527 0012 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 528 0014 2229     		cmp	r1, #34
 529 0016 07D1     		bne	.L46
 931:Dsp/letter_shell/shell.c ****             shell->parser.param[i] = &shell->parser.param[i][1];
 530              		.loc 1 931 0
 531 0018 0021     		movs	r1, #0
 532 001a 1170     		strb	r1, [r2]
 932:Dsp/letter_shell/shell.c ****         }
 533              		.loc 1 932 0
 534 001c 221D     		adds	r2, r4, #4
 535 001e 05EB8202 		add	r2, r5, r2, lsl #2
 536 0022 5168     		ldr	r1, [r2, #4]
 537 0024 0131     		adds	r1, r1, #1
 538 0026 5160     		str	r1, [r2, #4]
 539              	.L46:
 934:Dsp/letter_shell/shell.c ****         if (shell->parser.param[i][paramLength - 1] == '\"')
 540              		.loc 1 934 0
 541 0028 0433     		adds	r3, r3, #4
 542 002a 05EB8303 		add	r3, r5, r3, lsl #2
 543 002e 5E68     		ldr	r6, [r3, #4]
 544 0030 3046     		mov	r0, r6
 545 0032 FFF7FEFF 		bl	strlen
 546              	.LVL59:
 935:Dsp/letter_shell/shell.c ****         {
 547              		.loc 1 935 0
 548 0036 80B2     		uxth	r0, r0
 549 0038 0138     		subs	r0, r0, #1
 550              	.LVL60:
 551 003a 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
 552 003c 222B     		cmp	r3, #34
 553 003e 01D1     		bne	.L47
 937:Dsp/letter_shell/shell.c ****         }
 554              		.loc 1 937 0
 555 0040 0023     		movs	r3, #0
 556 0042 3354     		strb	r3, [r6, r0]
 557              	.L47:
 927:Dsp/letter_shell/shell.c ****     {
 558              		.loc 1 927 0 discriminator 2
 559 0044 0134     		adds	r4, r4, #1
 560              	.LVL61:
 561 0046 A4B2     		uxth	r4, r4
 562              	.LVL62:
 563              	.L45:
 927:Dsp/letter_shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 34


 564              		.loc 1 927 0 is_stmt 0 discriminator 1
 565 0048 EB8E     		ldrh	r3, [r5, #54]
 566 004a 9C42     		cmp	r4, r3
 567 004c DCD3     		bcc	.L48
 568              	.LBE6:
 940:Dsp/letter_shell/shell.c **** 
 569              		.loc 1 940 0 is_stmt 1
 570 004e 70BD     		pop	{r4, r5, r6, pc}
 571              		.cfi_endproc
 572              	.LFE151:
 574              		.section	.text.shellGetCurrent,"ax",%progbits
 575              		.align	2
 576              		.global	shellGetCurrent
 577              		.thumb
 578              		.thumb_func
 580              	shellGetCurrent:
 581              	.LFB126:
 247:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
 582              		.loc 1 247 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587              	.LVL63:
 588              	.LBB7:
 248:Dsp/letter_shell/shell.c ****     {
 589              		.loc 1 248 0
 590 0000 0023     		movs	r3, #0
 591 0002 0AE0     		b	.L51
 592              	.LVL64:
 593              	.L54:
 250:Dsp/letter_shell/shell.c ****         {
 594              		.loc 1 250 0
 595 0004 074A     		ldr	r2, .L55
 596 0006 52F82300 		ldr	r0, [r2, r3, lsl #2]
 597 000a 20B1     		cbz	r0, .L52
 250:Dsp/letter_shell/shell.c ****         {
 598              		.loc 1 250 0 is_stmt 0 discriminator 1
 599 000c 90F86020 		ldrb	r2, [r0, #96]	@ zero_extendqisi2
 600 0010 12F0020F 		tst	r2, #2
 601 0014 04D1     		bne	.L53
 602              	.L52:
 248:Dsp/letter_shell/shell.c ****     {
 603              		.loc 1 248 0 is_stmt 1 discriminator 2
 604 0016 0133     		adds	r3, r3, #1
 605              	.LVL65:
 606 0018 1BB2     		sxth	r3, r3
 607              	.LVL66:
 608              	.L51:
 248:Dsp/letter_shell/shell.c ****     {
 609              		.loc 1 248 0 is_stmt 0 discriminator 1
 610 001a 042B     		cmp	r3, #4
 611 001c F2DD     		ble	.L54
 612              	.LBE7:
 255:Dsp/letter_shell/shell.c **** }
 613              		.loc 1 255 0 is_stmt 1
 614 001e 0020     		movs	r0, #0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 35


 615              	.L53:
 256:Dsp/letter_shell/shell.c **** 
 616              		.loc 1 256 0
 617 0020 7047     		bx	lr
 618              	.L56:
 619 0022 00BF     		.align	2
 620              	.L55:
 621 0024 00000000 		.word	.LANCHOR0
 622              		.cfi_endproc
 623              	.LFE126:
 625              		.section	.text.shellWriteString,"ax",%progbits
 626              		.align	2
 627              		.global	shellWriteString
 628              		.thumb
 629              		.thumb_func
 631              	shellWriteString:
 632              	.LFB128:
 281:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
 633              		.loc 1 281 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              	.LVL67:
 283:Dsp/letter_shell/shell.c ****     while(*string)
 638              		.loc 1 283 0
 639 0000 836E     		ldr	r3, [r0, #104]
 640 0002 8BB1     		cbz	r3, .L61
 281:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
 641              		.loc 1 281 0
 642 0004 70B5     		push	{r4, r5, r6, lr}
 643              	.LCFI9:
 644              		.cfi_def_cfa_offset 16
 645              		.cfi_offset 4, -16
 646              		.cfi_offset 5, -12
 647              		.cfi_offset 6, -8
 648              		.cfi_offset 14, -4
 649 0006 0646     		mov	r6, r0
 650 0008 0D46     		mov	r5, r1
 651 000a 0024     		movs	r4, #0
 652 000c 07E0     		b	.L59
 653              	.LVL68:
 654              	.L60:
 286:Dsp/letter_shell/shell.c ****         count ++;
 655              		.loc 1 286 0
 656 000e B36E     		ldr	r3, [r6, #104]
 657 0010 0135     		adds	r5, r5, #1
 658              	.LVL69:
 659 0012 9847     		blx	r3
 660              	.LVL70:
 287:Dsp/letter_shell/shell.c ****         delay_us(100);
 661              		.loc 1 287 0
 662 0014 0134     		adds	r4, r4, #1
 663              	.LVL71:
 664 0016 A4B2     		uxth	r4, r4
 665              	.LVL72:
 288:Dsp/letter_shell/shell.c ****     }
 666              		.loc 1 288 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 36


 667 0018 6420     		movs	r0, #100
 668 001a FFF7FEFF 		bl	delay_us
 669              	.LVL73:
 670              	.L59:
 284:Dsp/letter_shell/shell.c ****     {
 671              		.loc 1 284 0
 672 001e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 673 0020 0028     		cmp	r0, #0
 674 0022 F4D1     		bne	.L60
 290:Dsp/letter_shell/shell.c **** }
 675              		.loc 1 290 0
 676 0024 2046     		mov	r0, r4
 677 0026 70BD     		pop	{r4, r5, r6, pc}
 678              	.LVL74:
 679              	.L61:
 680              	.LCFI10:
 681              		.cfi_def_cfa_offset 0
 682              		.cfi_restore 4
 683              		.cfi_restore 5
 684              		.cfi_restore 6
 685              		.cfi_restore 14
 283:Dsp/letter_shell/shell.c ****     while(*string)
 686              		.loc 1 283 0
 687 0028 0020     		movs	r0, #0
 688              	.LVL75:
 689 002a 7047     		bx	lr
 690              		.cfi_endproc
 691              	.LFE128:
 693              		.section	.text.shellSetUser,"ax",%progbits
 694              		.align	2
 695              		.thumb
 696              		.thumb_func
 698              	shellSetUser:
 699              	.LFB159:
1239:Dsp/letter_shell/shell.c ****     shell->info.user = user;
 700              		.loc 1 1239 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              	.LVL76:
 705 0000 10B5     		push	{r4, lr}
 706              	.LCFI11:
 707              		.cfi_def_cfa_offset 8
 708              		.cfi_offset 4, -8
 709              		.cfi_offset 14, -4
 710 0002 0446     		mov	r4, r0
1240:Dsp/letter_shell/shell.c ****     shell->status.isChecked = 
 711              		.loc 1 1240 0
 712 0004 0160     		str	r1, [r0]
1242:Dsp/letter_shell/shell.c ****             && (shell->parser.paramCount < 2
 713              		.loc 1 1242 0
 714 0006 8868     		ldr	r0, [r1, #8]
 715              	.LVL77:
1245:Dsp/letter_shell/shell.c ****         
 716              		.loc 1 1245 0
 717 0008 50B1     		cbz	r0, .L67
1242:Dsp/letter_shell/shell.c ****             && (shell->parser.paramCount < 2
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 37


 718              		.loc 1 1242 0
 719 000a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 720 000c 53B1     		cbz	r3, .L68
1243:Dsp/letter_shell/shell.c ****                 || strcmp(user->data.user.password, shell->parser.param[1]) != 0))
 721              		.loc 1 1243 0
 722 000e E38E     		ldrh	r3, [r4, #54]
1245:Dsp/letter_shell/shell.c ****         
 723              		.loc 1 1245 0
 724 0010 012B     		cmp	r3, #1
 725 0012 09D9     		bls	.L69
1244:Dsp/letter_shell/shell.c ****          ? 0 : 1;
 726              		.loc 1 1244 0
 727 0014 A169     		ldr	r1, [r4, #24]
 728              	.LVL78:
 729 0016 FFF7FEFF 		bl	strcmp
 730              	.LVL79:
 731 001a 38B1     		cbz	r0, .L70
1245:Dsp/letter_shell/shell.c ****         
 732              		.loc 1 1245 0
 733 001c 0022     		movs	r2, #0
 734 001e 06E0     		b	.L65
 735              	.LVL80:
 736              	.L67:
 737 0020 0122     		movs	r2, #1
 738 0022 04E0     		b	.L65
 739              	.L68:
 740 0024 0122     		movs	r2, #1
 741 0026 02E0     		b	.L65
 742              	.L69:
 743 0028 0022     		movs	r2, #0
 744 002a 00E0     		b	.L65
 745              	.LVL81:
 746              	.L70:
 747 002c 0122     		movs	r2, #1
 748              	.L65:
1241:Dsp/letter_shell/shell.c ****         ((user->data.user.password && strlen(user->data.user.password) != 0)
 749              		.loc 1 1241 0
 750 002e 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 751 0032 62F30003 		bfi	r3, r2, #0, #1
 752 0036 84F86030 		strb	r3, [r4, #96]
1248:Dsp/letter_shell/shell.c **** #endif
 753              		.loc 1 1248 0
 754 003a 0749     		ldr	r1, .L72
 755 003c 2046     		mov	r0, r4
 756 003e FFF7FEFF 		bl	shellWriteString
 757              	.LVL82:
1251:Dsp/letter_shell/shell.c ****     {
 758              		.loc 1 1251 0
 759 0042 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 760 0046 13F0010F 		tst	r3, #1
 761 004a 03D0     		beq	.L64
1253:Dsp/letter_shell/shell.c ****     }
 762              		.loc 1 1253 0
 763 004c 0349     		ldr	r1, .L72+4
 764 004e 2046     		mov	r0, r4
 765 0050 FFF7FEFF 		bl	shellWriteString
 766              	.LVL83:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 38


 767              	.L64:
 768 0054 10BD     		pop	{r4, pc}
 769              	.LVL84:
 770              	.L73:
 771 0056 00BF     		.align	2
 772              	.L72:
 773 0058 00000000 		.word	.LC0
 774 005c 0C000000 		.word	.LC1
 775              		.cfi_endproc
 776              	.LFE159:
 778              		.section	.text.shellWriteCommandLine,"ax",%progbits
 779              		.align	2
 780              		.thumb
 781              		.thumb_func
 783              	shellWriteCommandLine:
 784              	.LFB130:
 333:Dsp/letter_shell/shell.c ****     if (shell->status.isChecked)
 785              		.loc 1 333 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              	.LVL85:
 790 0000 10B5     		push	{r4, lr}
 791              	.LCFI12:
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 4, -8
 794              		.cfi_offset 14, -4
 795 0002 0446     		mov	r4, r0
 334:Dsp/letter_shell/shell.c ****     {
 796              		.loc 1 334 0
 797 0004 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 798 0008 13F0010F 		tst	r3, #1
 799 000c 17D0     		beq	.L75
 336:Dsp/letter_shell/shell.c ****         {
 800              		.loc 1 336 0
 801 000e 11B1     		cbz	r1, .L76
 338:Dsp/letter_shell/shell.c ****         }
 802              		.loc 1 338 0
 803 0010 0D49     		ldr	r1, .L81
 804              	.LVL86:
 805 0012 FFF7FEFF 		bl	shellWriteString
 806              	.LVL87:
 807              	.L76:
 340:Dsp/letter_shell/shell.c ****         shellWriteString(shell, ":");
 808              		.loc 1 340 0
 809 0016 2368     		ldr	r3, [r4]
 810 0018 5968     		ldr	r1, [r3, #4]
 811 001a 2046     		mov	r0, r4
 812 001c FFF7FEFF 		bl	shellWriteString
 813              	.LVL88:
 341:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->info.path ? shell->info.path : "/");
 814              		.loc 1 341 0
 815 0020 0A49     		ldr	r1, .L81+4
 816 0022 2046     		mov	r0, r4
 817 0024 FFF7FEFF 		bl	shellWriteString
 818              	.LVL89:
 342:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "$ ");
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 39


 819              		.loc 1 342 0
 820 0028 A168     		ldr	r1, [r4, #8]
 821 002a 01B9     		cbnz	r1, .L77
 822 002c 0849     		ldr	r1, .L81+8
 823              	.L77:
 342:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "$ ");
 824              		.loc 1 342 0 is_stmt 0 discriminator 4
 825 002e 2046     		mov	r0, r4
 826 0030 FFF7FEFF 		bl	shellWriteString
 827              	.LVL90:
 343:Dsp/letter_shell/shell.c ****     }
 828              		.loc 1 343 0 is_stmt 1 discriminator 4
 829 0034 0749     		ldr	r1, .L81+12
 830 0036 2046     		mov	r0, r4
 831 0038 FFF7FEFF 		bl	shellWriteString
 832              	.LVL91:
 833 003c 10BD     		pop	{r4, pc}
 834              	.LVL92:
 835              	.L75:
 347:Dsp/letter_shell/shell.c ****     }
 836              		.loc 1 347 0
 837 003e 0649     		ldr	r1, .L81+16
 838              	.LVL93:
 839 0040 FFF7FEFF 		bl	shellWriteString
 840              	.LVL94:
 841 0044 10BD     		pop	{r4, pc}
 842              	.LVL95:
 843              	.L82:
 844 0046 00BF     		.align	2
 845              	.L81:
 846 0048 A0010000 		.word	.LC3
 847 004c A4010000 		.word	.LC4
 848 0050 9C010000 		.word	.LC2
 849 0054 A8010000 		.word	.LC5
 850 0058 AC010000 		.word	.LC6
 851              		.cfi_endproc
 852              	.LFE130:
 854              		.section	.text.shellCheckPassword,"ax",%progbits
 855              		.align	2
 856              		.thumb
 857              		.thumb_func
 859              	shellCheckPassword:
 860              	.LFB158:
1215:Dsp/letter_shell/shell.c ****     if (strcmp(shell->parser.buffer, shell->info.user->data.user.password) == 0)
 861              		.loc 1 1215 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 0
 864              		@ frame_needed = 0, uses_anonymous_args = 0
 865              	.LVL96:
 866 0000 10B5     		push	{r4, lr}
 867              	.LCFI13:
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 4, -8
 870              		.cfi_offset 14, -4
 871 0002 0446     		mov	r4, r0
1216:Dsp/letter_shell/shell.c ****     {
 872              		.loc 1 1216 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 40


 873 0004 0368     		ldr	r3, [r0]
 874 0006 9968     		ldr	r1, [r3, #8]
 875 0008 0069     		ldr	r0, [r0, #16]
 876              	.LVL97:
 877 000a FFF7FEFF 		bl	strcmp
 878              	.LVL98:
 879 000e 50B9     		cbnz	r0, .L84
1218:Dsp/letter_shell/shell.c ****     #if SHELL_SHOW_INFO == 1
 880              		.loc 1 1218 0
 881 0010 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 882 0014 43F00103 		orr	r3, r3, #1
 883 0018 84F86030 		strb	r3, [r4, #96]
1220:Dsp/letter_shell/shell.c ****     #endif
 884              		.loc 1 1220 0
 885 001c 0649     		ldr	r1, .L87
 886 001e 2046     		mov	r0, r4
 887 0020 FFF7FEFF 		bl	shellWriteString
 888              	.LVL99:
 889 0024 03E0     		b	.L85
 890              	.L84:
1225:Dsp/letter_shell/shell.c ****     }
 891              		.loc 1 1225 0
 892 0026 0549     		ldr	r1, .L87+4
 893 0028 2046     		mov	r0, r4
 894 002a FFF7FEFF 		bl	shellWriteString
 895              	.LVL100:
 896              	.L85:
1227:Dsp/letter_shell/shell.c ****     shell->parser.cursor = 0;
 897              		.loc 1 1227 0
 898 002e 0023     		movs	r3, #0
 899 0030 A381     		strh	r3, [r4, #12]	@ movhi
1228:Dsp/letter_shell/shell.c **** }
 900              		.loc 1 1228 0
 901 0032 E381     		strh	r3, [r4, #14]	@ movhi
 902 0034 10BD     		pop	{r4, pc}
 903              	.LVL101:
 904              	.L88:
 905 0036 00BF     		.align	2
 906              	.L87:
 907 0038 0C000000 		.word	.LC1
 908 003c C8010000 		.word	.LC7
 909              		.cfi_endproc
 910              	.LFE158:
 912              		.section	.text.shellPrint,"ax",%progbits
 913              		.align	2
 914              		.global	shellPrint
 915              		.thumb
 916              		.thumb_func
 918              	shellPrint:
 919              	.LFB131:
 361:Dsp/letter_shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 920              		.loc 1 361 0
 921              		.cfi_startproc
 922              		@ args = 4, pretend = 12, frame = 136
 923              		@ frame_needed = 0, uses_anonymous_args = 1
 924              	.LVL102:
 365:Dsp/letter_shell/shell.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 41


 925              		.loc 1 365 0
 926 0000 90B1     		cbz	r0, .L94
 361:Dsp/letter_shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 927              		.loc 1 361 0
 928 0002 0EB4     		push	{r1, r2, r3}
 929              	.LCFI14:
 930              		.cfi_def_cfa_offset 12
 931              		.cfi_offset 1, -12
 932              		.cfi_offset 2, -8
 933              		.cfi_offset 3, -4
 934 0004 10B5     		push	{r4, lr}
 935              	.LCFI15:
 936              		.cfi_def_cfa_offset 20
 937              		.cfi_offset 4, -20
 938              		.cfi_offset 14, -16
 939 0006 A3B0     		sub	sp, sp, #140
 940              	.LCFI16:
 941              		.cfi_def_cfa_offset 160
 942 0008 0446     		mov	r4, r0
 367:Dsp/letter_shell/shell.c ****     vsnprintf(buffer, SHELL_PRINT_BUFFER - 1, fmt, vargs);
 943              		.loc 1 367 0
 944 000a 26AB     		add	r3, sp, #152
 945 000c 0193     		str	r3, [sp, #4]
 368:Dsp/letter_shell/shell.c ****     va_end(vargs);
 946              		.loc 1 368 0
 947 000e 259A     		ldr	r2, [sp, #148]
 948 0010 7F21     		movs	r1, #127
 949 0012 02A8     		add	r0, sp, #8
 950              	.LVL103:
 951 0014 FFF7FEFF 		bl	vsnprintf
 952              	.LVL104:
 371:Dsp/letter_shell/shell.c **** }
 953              		.loc 1 371 0
 954 0018 02A9     		add	r1, sp, #8
 955 001a 2046     		mov	r0, r4
 956 001c FFF7FEFF 		bl	shellWriteString
 957              	.LVL105:
 372:Dsp/letter_shell/shell.c **** #endif
 958              		.loc 1 372 0
 959 0020 23B0     		add	sp, sp, #140
 960              	.LCFI17:
 961              		.cfi_def_cfa_offset 20
 962              		@ sp needed
 963 0022 BDE81040 		pop	{r4, lr}
 964              	.LCFI18:
 965              		.cfi_restore 14
 966              		.cfi_restore 4
 967              		.cfi_def_cfa_offset 12
 968              	.LVL106:
 969 0026 03B0     		add	sp, sp, #12
 970              	.LCFI19:
 971              		.cfi_restore 3
 972              		.cfi_restore 2
 973              		.cfi_restore 1
 974              		.cfi_def_cfa_offset 0
 975              	.L94:
 976 0028 7047     		bx	lr
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 42


 977              		.cfi_endproc
 978              	.LFE131:
 980 002a 00BF     		.section	.text.shellScan,"ax",%progbits
 981              		.align	2
 982              		.global	shellScan
 983              		.thumb
 984              		.thumb_func
 986              	shellScan:
 987              	.LFB132:
 385:Dsp/letter_shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 988              		.loc 1 385 0
 989              		.cfi_startproc
 990              		@ args = 4, pretend = 12, frame = 8
 991              		@ frame_needed = 0, uses_anonymous_args = 1
 992              	.LVL107:
 390:Dsp/letter_shell/shell.c **** 
 993              		.loc 1 390 0
 994 0000 0028     		cmp	r0, #0
 995 0002 32D0     		beq	.L104
 385:Dsp/letter_shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 996              		.loc 1 385 0
 997 0004 0EB4     		push	{r1, r2, r3}
 998              	.LCFI20:
 999              		.cfi_def_cfa_offset 12
 1000              		.cfi_offset 1, -12
 1001              		.cfi_offset 2, -8
 1002              		.cfi_offset 3, -4
 1003 0006 70B5     		push	{r4, r5, r6, lr}
 1004              	.LCFI21:
 1005              		.cfi_def_cfa_offset 28
 1006              		.cfi_offset 4, -28
 1007              		.cfi_offset 5, -24
 1008              		.cfi_offset 6, -20
 1009              		.cfi_offset 14, -16
 1010 0008 83B0     		sub	sp, sp, #12
 1011              	.LCFI22:
 1012              		.cfi_def_cfa_offset 40
 1013 000a 0646     		mov	r6, r0
 392:Dsp/letter_shell/shell.c ****     {
 1014              		.loc 1 392 0
 1015 000c 436E     		ldr	r3, [r0, #100]
 1016 000e 13B3     		cbz	r3, .L97
 1017 0010 0024     		movs	r4, #0
 1018              	.LVL108:
 1019              	.L100:
 395:Dsp/letter_shell/shell.c ****             {
 1020              		.loc 1 395 0
 1021 0012 736E     		ldr	r3, [r6, #100]
 1022 0014 01AA     		add	r2, sp, #4
 1023 0016 1019     		adds	r0, r2, r4
 1024 0018 9847     		blx	r3
 1025              	.LVL109:
 1026 001a 38B9     		cbnz	r0, .L98
 397:Dsp/letter_shell/shell.c ****                 index++;
 1027              		.loc 1 397 0
 1028 001c B36E     		ldr	r3, [r6, #104]
 1029 001e 02AA     		add	r2, sp, #8
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 43


 1030 0020 2244     		add	r2, r2, r4
 1031 0022 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 1032 0026 9847     		blx	r3
 1033              	.LVL110:
 398:Dsp/letter_shell/shell.c ****             }
 1034              		.loc 1 398 0
 1035 0028 0134     		adds	r4, r4, #1
 1036              	.LVL111:
 1037 002a 24B2     		sxth	r4, r4
 1038              	.LVL112:
 1039              	.L98:
 400:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 1040              		.loc 1 400 0
 1041 002c 2546     		mov	r5, r4
 1042 002e 631E     		subs	r3, r4, #1
 1043 0030 02AA     		add	r2, sp, #8
 1044 0032 1344     		add	r3, r3, r2
 1045 0034 13F8043C 		ldrb	r3, [r3, #-4]	@ zero_extendqisi2
 1046 0038 0D2B     		cmp	r3, #13
 1047 003a 03D0     		beq	.L99
 400:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 1048              		.loc 1 400 0 is_stmt 0 discriminator 1
 1049 003c 0A2B     		cmp	r3, #10
 1050 003e 01D0     		beq	.L99
 400:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 1051              		.loc 1 400 0 discriminator 2
 1052 0040 002C     		cmp	r4, #0
 1053 0042 E6DD     		ble	.L100
 1054              	.L99:
 401:Dsp/letter_shell/shell.c ****         buffer[index] = '\0';
 1055              		.loc 1 401 0 is_stmt 1
 1056 0044 0949     		ldr	r1, .L105
 1057 0046 3046     		mov	r0, r6
 1058 0048 FFF7FEFF 		bl	shellWriteString
 1059              	.LVL113:
 402:Dsp/letter_shell/shell.c ****     }
 1060              		.loc 1 402 0
 1061 004c 02AB     		add	r3, sp, #8
 1062 004e 1D44     		add	r5, r5, r3
 1063 0050 0023     		movs	r3, #0
 1064 0052 05F8043C 		strb	r3, [r5, #-4]
 1065              	.LVL114:
 1066              	.L97:
 405:Dsp/letter_shell/shell.c ****     vsscanf(buffer, fmt, vargs);
 1067              		.loc 1 405 0
 1068 0056 08AA     		add	r2, sp, #32
 1069 0058 0092     		str	r2, [sp]
 406:Dsp/letter_shell/shell.c ****     va_end(vargs);
 1070              		.loc 1 406 0
 1071 005a 0799     		ldr	r1, [sp, #28]
 1072 005c 01A8     		add	r0, sp, #4
 1073 005e FFF7FEFF 		bl	vsscanf
 1074              	.LVL115:
 408:Dsp/letter_shell/shell.c **** #endif
 1075              		.loc 1 408 0
 1076 0062 03B0     		add	sp, sp, #12
 1077              	.LCFI23:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 44


 1078              		.cfi_def_cfa_offset 28
 1079              		@ sp needed
 1080 0064 BDE87040 		pop	{r4, r5, r6, lr}
 1081              	.LCFI24:
 1082              		.cfi_restore 14
 1083              		.cfi_restore 6
 1084              		.cfi_restore 5
 1085              		.cfi_restore 4
 1086              		.cfi_def_cfa_offset 12
 1087              	.LVL116:
 1088 0068 03B0     		add	sp, sp, #12
 1089              	.LCFI25:
 1090              		.cfi_restore 3
 1091              		.cfi_restore 2
 1092              		.cfi_restore 1
 1093              		.cfi_def_cfa_offset 0
 1094              	.L104:
 1095 006a 7047     		bx	lr
 1096              	.L106:
 1097              		.align	2
 1098              	.L105:
 1099 006c A0010000 		.word	.LC3
 1100              		.cfi_endproc
 1101              	.LFE132:
 1103              		.section	.text.shellCheckPermission,"ax",%progbits
 1104              		.align	2
 1105              		.global	shellCheckPermission
 1106              		.thumb
 1107              		.thumb_func
 1109              	shellCheckPermission:
 1110              	.LFB133:
 422:Dsp/letter_shell/shell.c ****     return ((!command->attr.attrs.permission
 1111              		.loc 1 422 0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
 1116              	.LVL117:
 423:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.type == SHELL_TYPE_USER
 1117              		.loc 1 423 0
 1118 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1119 0002 43B1     		cbz	r3, .L108
 424:Dsp/letter_shell/shell.c ****                 || (command->attr.attrs.permission 
 1120              		.loc 1 424 0
 1121 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1122 0006 02F00F02 		and	r2, r2, #15
 1123 000a 082A     		cmp	r2, #8
 1124 000c 03D0     		beq	.L108
 426:Dsp/letter_shell/shell.c ****             && (shell->status.isChecked
 1125              		.loc 1 426 0
 1126 000e 0268     		ldr	r2, [r0]
 1127 0010 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 425:Dsp/letter_shell/shell.c ****                     & shell->info.user->attr.attrs.permission))
 1128              		.loc 1 425 0
 1129 0012 1342     		tst	r3, r2
 1130 0014 0BD0     		beq	.L110
 1131              	.L108:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 45


 427:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.enableUnchecked))
 1132              		.loc 1 427 0
 1133 0016 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 1134 001a 13F0010F 		tst	r3, #1
 1135 001e 09D1     		bne	.L111
 428:Dsp/letter_shell/shell.c ****             ? 0 : -1;
 1136              		.loc 1 428 0
 1137 0020 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1138 0022 13F0100F 		tst	r3, #16
 1139 0026 07D1     		bne	.L112
 423:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.type == SHELL_TYPE_USER
 1140              		.loc 1 423 0
 1141 0028 4FF0FF30 		mov	r0, #-1
 1142              	.LVL118:
 1143 002c 7047     		bx	lr
 1144              	.LVL119:
 1145              	.L110:
 1146 002e 4FF0FF30 		mov	r0, #-1
 1147              	.LVL120:
 1148 0032 7047     		bx	lr
 1149              	.LVL121:
 1150              	.L111:
 1151 0034 0020     		movs	r0, #0
 1152              	.LVL122:
 1153 0036 7047     		bx	lr
 1154              	.LVL123:
 1155              	.L112:
 1156 0038 0020     		movs	r0, #0
 1157              	.LVL124:
 430:Dsp/letter_shell/shell.c **** 
 1158              		.loc 1 430 0
 1159 003a 7047     		bx	lr
 1160              		.cfi_endproc
 1161              	.LFE133:
 1163              		.section	.text.shellToHex,"ax",%progbits
 1164              		.align	2
 1165              		.global	shellToHex
 1166              		.thumb
 1167              		.thumb_func
 1169              	shellToHex:
 1170              	.LFB134:
 442:Dsp/letter_shell/shell.c ****     char byte;
 1171              		.loc 1 442 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              		@ link register save eliminated.
 1176              	.LVL125:
 1177 0000 10B4     		push	{r4}
 1178              	.LCFI26:
 1179              		.cfi_def_cfa_offset 4
 1180              		.cfi_offset 4, -4
 1181              	.LVL126:
 445:Dsp/letter_shell/shell.c ****     while (value)
 1182              		.loc 1 445 0
 1183 0002 0023     		movs	r3, #0
 1184 0004 0B72     		strb	r3, [r1, #8]
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 46


 444:Dsp/letter_shell/shell.c ****     buffer[8] = 0;
 1185              		.loc 1 444 0
 1186 0006 0823     		movs	r3, #8
 446:Dsp/letter_shell/shell.c ****     {
 1187              		.loc 1 446 0
 1188 0008 0BE0     		b	.L114
 1189              	.LVL127:
 1190              	.L117:
 448:Dsp/letter_shell/shell.c ****         buffer[--i] = (byte > 9) ? (byte + 87) : (byte + 48);
 1191              		.loc 1 448 0
 1192 000a 00F00F02 		and	r2, r0, #15
 1193              	.LVL128:
 449:Dsp/letter_shell/shell.c ****         value >>= 4;
 1194              		.loc 1 449 0
 1195 000e 013B     		subs	r3, r3, #1
 1196              	.LVL129:
 1197 0010 DBB2     		uxtb	r3, r3
 1198              	.LVL130:
 1199 0012 CC18     		adds	r4, r1, r3
 1200 0014 092A     		cmp	r2, #9
 1201 0016 01D9     		bls	.L115
 449:Dsp/letter_shell/shell.c ****         value >>= 4;
 1202              		.loc 1 449 0 is_stmt 0 discriminator 1
 1203 0018 5732     		adds	r2, r2, #87
 1204              	.LVL131:
 1205 001a 00E0     		b	.L116
 1206              	.LVL132:
 1207              	.L115:
 449:Dsp/letter_shell/shell.c ****         value >>= 4;
 1208              		.loc 1 449 0 discriminator 2
 1209 001c 3032     		adds	r2, r2, #48
 1210              	.LVL133:
 1211              	.L116:
 449:Dsp/letter_shell/shell.c ****         value >>= 4;
 1212              		.loc 1 449 0 discriminator 4
 1213 001e 2270     		strb	r2, [r4]
 450:Dsp/letter_shell/shell.c ****     }
 1214              		.loc 1 450 0 is_stmt 1 discriminator 4
 1215 0020 0009     		lsrs	r0, r0, #4
 1216              	.LVL134:
 1217              	.L114:
 446:Dsp/letter_shell/shell.c ****     {
 1218              		.loc 1 446 0
 1219 0022 0028     		cmp	r0, #0
 1220 0024 F1D1     		bne	.L117
 452:Dsp/letter_shell/shell.c **** }
 1221              		.loc 1 452 0
 1222 0026 C3F10800 		rsb	r0, r3, #8
 1223              	.LVL135:
 453:Dsp/letter_shell/shell.c **** 
 1224              		.loc 1 453 0
 1225 002a 40B2     		sxtb	r0, r0
 1226 002c 5DF8044B 		ldr	r4, [sp], #4
 1227              	.LCFI27:
 1228              		.cfi_restore 4
 1229              		.cfi_def_cfa_offset 0
 1230 0030 7047     		bx	lr
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 47


 1231              		.cfi_endproc
 1232              	.LFE134:
 1234 0032 00BF     		.section	.text.shellGetCommandName,"ax",%progbits
 1235              		.align	2
 1236              		.thumb
 1237              		.thumb_func
 1239              	shellGetCommandName:
 1240              	.LFB138:
 541:Dsp/letter_shell/shell.c ****     static char buffer[9];
 1241              		.loc 1 541 0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 1245              	.LVL136:
 1246              	.LBB8:
 543:Dsp/letter_shell/shell.c ****     {
 1247              		.loc 1 543 0
 1248 0000 0023     		movs	r3, #0
 1249 0002 04E0     		b	.L120
 1250              	.LVL137:
 1251              	.L121:
 545:Dsp/letter_shell/shell.c ****     }
 1252              		.loc 1 545 0 discriminator 3
 1253 0004 3021     		movs	r1, #48
 1254 0006 0E4A     		ldr	r2, .L128
 1255 0008 D154     		strb	r1, [r2, r3]
 543:Dsp/letter_shell/shell.c ****     {
 1256              		.loc 1 543 0 discriminator 3
 1257 000a 0133     		adds	r3, r3, #1
 1258              	.LVL138:
 1259 000c DBB2     		uxtb	r3, r3
 1260              	.LVL139:
 1261              	.L120:
 543:Dsp/letter_shell/shell.c ****     {
 1262              		.loc 1 543 0 is_stmt 0 discriminator 1
 1263 000e 082B     		cmp	r3, #8
 1264 0010 F8D9     		bls	.L121
 1265              	.LBE8:
 547:Dsp/letter_shell/shell.c ****     {
 1266              		.loc 1 547 0 is_stmt 1
 1267 0012 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1268              	.LVL140:
 1269 0014 03F00F03 		and	r3, r3, #15
 1270 0018 012B     		cmp	r3, #1
 1271 001a 01DC     		bgt	.L122
 549:Dsp/letter_shell/shell.c ****     }
 1272              		.loc 1 549 0
 1273 001c 4068     		ldr	r0, [r0, #4]
 1274              	.LVL141:
 564:Dsp/letter_shell/shell.c **** 
 1275              		.loc 1 564 0
 1276 001e 7047     		bx	lr
 1277              	.LVL142:
 1278              	.L122:
 551:Dsp/letter_shell/shell.c ****     {
 1279              		.loc 1 551 0
 1280 0020 072B     		cmp	r3, #7
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 48


 1281 0022 01DC     		bgt	.L124
 553:Dsp/letter_shell/shell.c ****     }
 1282              		.loc 1 553 0
 1283 0024 4068     		ldr	r0, [r0, #4]
 1284              	.LVL143:
 1285 0026 7047     		bx	lr
 1286              	.LVL144:
 1287              	.L124:
 555:Dsp/letter_shell/shell.c ****     {
 1288              		.loc 1 555 0
 1289 0028 082B     		cmp	r3, #8
 1290 002a 01DC     		bgt	.L125
 557:Dsp/letter_shell/shell.c ****     }
 1291              		.loc 1 557 0
 1292 002c 4068     		ldr	r0, [r0, #4]
 1293              	.LVL145:
 1294 002e 7047     		bx	lr
 1295              	.LVL146:
 1296              	.L125:
 541:Dsp/letter_shell/shell.c ****     static char buffer[9];
 1297              		.loc 1 541 0
 1298 0030 10B5     		push	{r4, lr}
 1299              	.LCFI28:
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 4, -8
 1302              		.cfi_offset 14, -4
 561:Dsp/letter_shell/shell.c ****         return buffer;
 1303              		.loc 1 561 0
 1304 0032 034C     		ldr	r4, .L128
 1305 0034 2146     		mov	r1, r4
 1306 0036 4068     		ldr	r0, [r0, #4]
 1307              	.LVL147:
 1308 0038 FFF7FEFF 		bl	shellToHex
 1309              	.LVL148:
 562:Dsp/letter_shell/shell.c ****     }
 1310              		.loc 1 562 0
 1311 003c 2046     		mov	r0, r4
 564:Dsp/letter_shell/shell.c **** 
 1312              		.loc 1 564 0
 1313 003e 10BD     		pop	{r4, pc}
 1314              	.L129:
 1315              		.align	2
 1316              	.L128:
 1317 0040 00000000 		.word	.LANCHOR1
 1318              		.cfi_endproc
 1319              	.LFE138:
 1321              		.section	.text.shellToDec,"ax",%progbits
 1322              		.align	2
 1323              		.global	shellToDec
 1324              		.thumb
 1325              		.thumb_func
 1327              	shellToDec:
 1328              	.LFB135:
 465:Dsp/letter_shell/shell.c ****     unsigned char i = 11;
 1329              		.loc 1 465 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 49


 1332              		@ frame_needed = 0, uses_anonymous_args = 0
 1333              		@ link register save eliminated.
 1334              	.LVL149:
 1335 0000 70B4     		push	{r4, r5, r6}
 1336              	.LCFI29:
 1337              		.cfi_def_cfa_offset 12
 1338              		.cfi_offset 4, -12
 1339              		.cfi_offset 5, -8
 1340              		.cfi_offset 6, -4
 1341              	.LVL150:
 468:Dsp/letter_shell/shell.c ****     {
 1342              		.loc 1 468 0
 1343 0002 0028     		cmp	r0, #0
 1344 0004 01DA     		bge	.L136
 470:Dsp/letter_shell/shell.c ****     }
 1345              		.loc 1 470 0
 1346 0006 4442     		negs	r4, r0
 1347              	.LVL151:
 1348 0008 00E0     		b	.L131
 1349              	.LVL152:
 1350              	.L136:
 467:Dsp/letter_shell/shell.c ****     if (value < 0)
 1351              		.loc 1 467 0
 1352 000a 0446     		mov	r4, r0
 1353              	.LVL153:
 1354              	.L131:
 472:Dsp/letter_shell/shell.c ****     while (v)
 1355              		.loc 1 472 0
 1356 000c 0023     		movs	r3, #0
 1357 000e CB72     		strb	r3, [r1, #11]
 466:Dsp/letter_shell/shell.c ****     int v = value;
 1358              		.loc 1 466 0
 1359 0010 0B22     		movs	r2, #11
 473:Dsp/letter_shell/shell.c ****     {
 1360              		.loc 1 473 0
 1361 0012 0FE0     		b	.L132
 1362              	.LVL154:
 1363              	.L133:
 475:Dsp/letter_shell/shell.c ****         v /= 10;
 1364              		.loc 1 475 0
 1365 0014 013A     		subs	r2, r2, #1
 1366              	.LVL155:
 1367 0016 D2B2     		uxtb	r2, r2
 1368              	.LVL156:
 1369 0018 0F4B     		ldr	r3, .L138
 1370 001a 83FB0435 		smull	r3, r5, r3, r4
 1371 001e E317     		asrs	r3, r4, #31
 1372 0020 C3EBA503 		rsb	r3, r3, r5, asr #2
 1373 0024 1E46     		mov	r6, r3
 1374 0026 03EB8303 		add	r3, r3, r3, lsl #2
 1375 002a 5D00     		lsls	r5, r3, #1
 1376 002c 631B     		subs	r3, r4, r5
 1377 002e 3033     		adds	r3, r3, #48
 1378 0030 8B54     		strb	r3, [r1, r2]
 476:Dsp/letter_shell/shell.c ****     }
 1379              		.loc 1 476 0
 1380 0032 3446     		mov	r4, r6
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 50


 1381              	.LVL157:
 1382              	.L132:
 473:Dsp/letter_shell/shell.c ****     {
 1383              		.loc 1 473 0
 1384 0034 002C     		cmp	r4, #0
 1385 0036 EDD1     		bne	.L133
 478:Dsp/letter_shell/shell.c ****     {
 1386              		.loc 1 478 0
 1387 0038 0028     		cmp	r0, #0
 1388 003a 03DA     		bge	.L134
 480:Dsp/letter_shell/shell.c ****     }
 1389              		.loc 1 480 0
 1390 003c 013A     		subs	r2, r2, #1
 1391              	.LVL158:
 1392 003e D2B2     		uxtb	r2, r2
 1393              	.LVL159:
 1394 0040 2D23     		movs	r3, #45
 1395 0042 8B54     		strb	r3, [r1, r2]
 1396              	.L134:
 482:Dsp/letter_shell/shell.c ****         buffer[--i] = '0';
 1397              		.loc 1 482 0
 1398 0044 18B9     		cbnz	r0, .L135
 483:Dsp/letter_shell/shell.c ****     }
 1399              		.loc 1 483 0
 1400 0046 013A     		subs	r2, r2, #1
 1401              	.LVL160:
 1402 0048 D2B2     		uxtb	r2, r2
 1403              	.LVL161:
 1404 004a 3023     		movs	r3, #48
 1405 004c 8B54     		strb	r3, [r1, r2]
 1406              	.L135:
 485:Dsp/letter_shell/shell.c **** }
 1407              		.loc 1 485 0
 1408 004e C2F10B00 		rsb	r0, r2, #11
 1409              	.LVL162:
 486:Dsp/letter_shell/shell.c **** 
 1410              		.loc 1 486 0
 1411 0052 40B2     		sxtb	r0, r0
 1412 0054 70BC     		pop	{r4, r5, r6}
 1413              	.LCFI30:
 1414              		.cfi_restore 6
 1415              		.cfi_restore 5
 1416              		.cfi_restore 4
 1417              		.cfi_def_cfa_offset 0
 1418              	.LVL163:
 1419 0056 7047     		bx	lr
 1420              	.L139:
 1421              		.align	2
 1422              	.L138:
 1423 0058 67666666 		.word	1717986919
 1424              		.cfi_endproc
 1425              	.LFE135:
 1427              		.section	.text.shellWriteReturnValue,"ax",%progbits
 1428              		.align	2
 1429              		.thumb
 1430              		.thumb_func
 1432              	shellWriteReturnValue:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 51


 1433              	.LFB160:
1266:Dsp/letter_shell/shell.c ****     char buffer[12] = "00000000000";
 1434              		.loc 1 1266 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 16
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438              	.LVL164:
 1439 0000 70B5     		push	{r4, r5, r6, lr}
 1440              	.LCFI31:
 1441              		.cfi_def_cfa_offset 16
 1442              		.cfi_offset 4, -16
 1443              		.cfi_offset 5, -12
 1444              		.cfi_offset 6, -8
 1445              		.cfi_offset 14, -4
 1446 0002 84B0     		sub	sp, sp, #16
 1447              	.LCFI32:
 1448              		.cfi_def_cfa_offset 32
 1449 0004 0446     		mov	r4, r0
 1450 0006 0E46     		mov	r6, r1
1267:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "Return: ");
 1451              		.loc 1 1267 0
 1452 0008 184B     		ldr	r3, .L144
 1453 000a 01AD     		add	r5, sp, #4
 1454 000c 93E80700 		ldmia	r3, {r0, r1, r2}
 1455              	.LVL165:
 1456 0010 85E80700 		stmia	r5, {r0, r1, r2}
1268:Dsp/letter_shell/shell.c ****     shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
 1457              		.loc 1 1268 0
 1458 0014 1649     		ldr	r1, .L144+4
 1459 0016 2046     		mov	r0, r4
 1460 0018 FFF7FEFF 		bl	shellWriteString
 1461              	.LVL166:
1269:Dsp/letter_shell/shell.c ****     shellWriteString(shell, ", 0x");
 1462              		.loc 1 1269 0
 1463 001c 2946     		mov	r1, r5
 1464 001e 3046     		mov	r0, r6
 1465 0020 FFF7FEFF 		bl	shellToDec
 1466              	.LVL167:
 1467 0024 C0F10B01 		rsb	r1, r0, #11
 1468 0028 2944     		add	r1, r1, r5
 1469 002a 2046     		mov	r0, r4
 1470 002c FFF7FEFF 		bl	shellWriteString
 1471              	.LVL168:
1270:Dsp/letter_shell/shell.c ****     for (short i = 0; i < 11; i++)
 1472              		.loc 1 1270 0
 1473 0030 1049     		ldr	r1, .L144+8
 1474 0032 2046     		mov	r0, r4
 1475 0034 FFF7FEFF 		bl	shellWriteString
 1476              	.LVL169:
 1477              	.LBB9:
1271:Dsp/letter_shell/shell.c ****     {
 1478              		.loc 1 1271 0
 1479 0038 0023     		movs	r3, #0
 1480 003a 06E0     		b	.L141
 1481              	.LVL170:
 1482              	.L142:
1273:Dsp/letter_shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 52


 1483              		.loc 1 1273 0 discriminator 3
 1484 003c 04AA     		add	r2, sp, #16
 1485 003e 1A44     		add	r2, r2, r3
 1486 0040 3021     		movs	r1, #48
 1487 0042 02F80C1C 		strb	r1, [r2, #-12]
1271:Dsp/letter_shell/shell.c ****     {
 1488              		.loc 1 1271 0 discriminator 3
 1489 0046 0133     		adds	r3, r3, #1
 1490              	.LVL171:
 1491 0048 1BB2     		sxth	r3, r3
 1492              	.LVL172:
 1493              	.L141:
1271:Dsp/letter_shell/shell.c ****     {
 1494              		.loc 1 1271 0 is_stmt 0 discriminator 1
 1495 004a 0A2B     		cmp	r3, #10
 1496 004c F6DD     		ble	.L142
 1497              	.LBE9:
1275:Dsp/letter_shell/shell.c ****     shellWriteString(shell, buffer);
 1498              		.loc 1 1275 0 is_stmt 1
 1499 004e 01A9     		add	r1, sp, #4
 1500 0050 3046     		mov	r0, r6
 1501 0052 FFF7FEFF 		bl	shellToHex
 1502              	.LVL173:
1276:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "\r\n");
 1503              		.loc 1 1276 0
 1504 0056 01A9     		add	r1, sp, #4
 1505 0058 2046     		mov	r0, r4
 1506 005a FFF7FEFF 		bl	shellWriteString
 1507              	.LVL174:
1277:Dsp/letter_shell/shell.c **** }
 1508              		.loc 1 1277 0
 1509 005e 0649     		ldr	r1, .L144+12
 1510 0060 2046     		mov	r0, r4
 1511 0062 FFF7FEFF 		bl	shellWriteString
 1512              	.LVL175:
1278:Dsp/letter_shell/shell.c **** 
 1513              		.loc 1 1278 0
 1514 0066 04B0     		add	sp, sp, #16
 1515              	.LCFI33:
 1516              		.cfi_def_cfa_offset 16
 1517              		@ sp needed
 1518 0068 70BD     		pop	{r4, r5, r6, pc}
 1519              	.LVL176:
 1520              	.L145:
 1521 006a 00BF     		.align	2
 1522              	.L144:
 1523 006c F0010000 		.word	.LC8
 1524 0070 DC010000 		.word	.LC9
 1525 0074 E8010000 		.word	.LC10
 1526 0078 A0010000 		.word	.LC3
 1527              		.cfi_endproc
 1528              	.LFE160:
 1530              		.section	.text.shellListItem,"ax",%progbits
 1531              		.align	2
 1532              		.global	shellListItem
 1533              		.thumb
 1534              		.thumb_func
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 53


 1536              	shellListItem:
 1537              	.LFB140:
 600:Dsp/letter_shell/shell.c ****     short spaceLength;
 1538              		.loc 1 600 0
 1539              		.cfi_startproc
 1540              		@ args = 0, pretend = 0, frame = 0
 1541              		@ frame_needed = 0, uses_anonymous_args = 0
 1542              	.LVL177:
 1543 0000 70B5     		push	{r4, r5, r6, lr}
 1544              	.LCFI34:
 1545              		.cfi_def_cfa_offset 16
 1546              		.cfi_offset 4, -16
 1547              		.cfi_offset 5, -12
 1548              		.cfi_offset 6, -8
 1549              		.cfi_offset 14, -4
 1550 0002 0546     		mov	r5, r0
 1551 0004 0E46     		mov	r6, r1
 603:Dsp/letter_shell/shell.c ****     spaceLength = (spaceLength > 0) ? spaceLength : 4;
 1552              		.loc 1 603 0
 1553 0006 0846     		mov	r0, r1
 1554              	.LVL178:
 1555 0008 FFF7FEFF 		bl	shellGetCommandName
 1556              	.LVL179:
 1557 000c 0146     		mov	r1, r0
 1558 000e 2846     		mov	r0, r5
 1559 0010 FFF7FEFF 		bl	shellWriteString
 1560              	.LVL180:
 1561 0014 C0F11600 		rsb	r0, r0, #22
 1562 0018 04B2     		sxth	r4, r0
 1563              	.LVL181:
 604:Dsp/letter_shell/shell.c ****     do {
 1564              		.loc 1 604 0
 1565 001a 002C     		cmp	r4, #0
 1566 001c 00DC     		bgt	.L148
 1567 001e 0424     		movs	r4, #4
 1568              	.LVL182:
 1569              	.L148:
 606:Dsp/letter_shell/shell.c ****     } while (--spaceLength);
 1570              		.loc 1 606 0 discriminator 1
 1571 0020 2D21     		movs	r1, #45
 1572 0022 2846     		mov	r0, r5
 1573 0024 FFF7FEFF 		bl	shellWriteByte
 1574              	.LVL183:
 607:Dsp/letter_shell/shell.c ****     if (item->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 1575              		.loc 1 607 0 discriminator 1
 1576 0028 013C     		subs	r4, r4, #1
 1577              	.LVL184:
 1578 002a 24B2     		sxth	r4, r4
 1579              	.LVL185:
 1580 002c 002C     		cmp	r4, #0
 1581 002e F7D1     		bne	.L148
 608:Dsp/letter_shell/shell.c ****     {
 1582              		.loc 1 608 0
 1583 0030 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 1584 0032 03F00F03 		and	r3, r3, #15
 1585 0036 012B     		cmp	r3, #1
 1586 0038 04DC     		bgt	.L149
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 54


 610:Dsp/letter_shell/shell.c ****     }
 1587              		.loc 1 610 0
 1588 003a 0F49     		ldr	r1, .L155
 1589 003c 2846     		mov	r0, r5
 1590 003e FFF7FEFF 		bl	shellWriteString
 1591              	.LVL186:
 1592 0042 70BD     		pop	{r4, r5, r6, pc}
 1593              	.LVL187:
 1594              	.L149:
 612:Dsp/letter_shell/shell.c ****     {
 1595              		.loc 1 612 0
 1596 0044 072B     		cmp	r3, #7
 1597 0046 04DC     		bgt	.L151
 614:Dsp/letter_shell/shell.c ****     }
 1598              		.loc 1 614 0
 1599 0048 0C49     		ldr	r1, .L155+4
 1600 004a 2846     		mov	r0, r5
 1601 004c FFF7FEFF 		bl	shellWriteString
 1602              	.LVL188:
 1603 0050 70BD     		pop	{r4, r5, r6, pc}
 1604              	.LVL189:
 1605              	.L151:
 616:Dsp/letter_shell/shell.c ****     {
 1606              		.loc 1 616 0
 1607 0052 082B     		cmp	r3, #8
 1608 0054 04DC     		bgt	.L152
 618:Dsp/letter_shell/shell.c ****     }
 1609              		.loc 1 618 0
 1610 0056 0A49     		ldr	r1, .L155+8
 1611 0058 2846     		mov	r0, r5
 1612 005a FFF7FEFF 		bl	shellWriteString
 1613              	.LVL190:
 1614 005e 70BD     		pop	{r4, r5, r6, pc}
 1615              	.LVL191:
 1616              	.L152:
 620:Dsp/letter_shell/shell.c ****     {
 1617              		.loc 1 620 0
 1618 0060 092B     		cmp	r3, #9
 1619 0062 04DC     		bgt	.L153
 622:Dsp/letter_shell/shell.c ****     }
 1620              		.loc 1 622 0
 1621 0064 0749     		ldr	r1, .L155+12
 1622 0066 2846     		mov	r0, r5
 1623 0068 FFF7FEFF 		bl	shellWriteString
 1624              	.LVL192:
 1625 006c 70BD     		pop	{r4, r5, r6, pc}
 1626              	.LVL193:
 1627              	.L153:
 626:Dsp/letter_shell/shell.c ****     }
 1628              		.loc 1 626 0
 1629 006e 0649     		ldr	r1, .L155+16
 1630 0070 2846     		mov	r0, r5
 1631 0072 FFF7FEFF 		bl	shellWriteString
 1632              	.LVL194:
 1633 0076 70BD     		pop	{r4, r5, r6, pc}
 1634              	.LVL195:
 1635              	.L156:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 55


 1636              		.align	2
 1637              	.L155:
 1638 0078 FC010000 		.word	.LC11
 1639 007c 04020000 		.word	.LC12
 1640 0080 08020000 		.word	.LC13
 1641 0084 10020000 		.word	.LC14
 1642 0088 14020000 		.word	.LC15
 1643              		.cfi_endproc
 1644              	.LFE140:
 1646              		.section	.text.shellListCommand,"ax",%progbits
 1647              		.align	2
 1648              		.global	shellListCommand
 1649              		.thumb
 1650              		.thumb_func
 1652              	shellListCommand:
 1653              	.LFB141:
 647:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1654              		.loc 1 647 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 0
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
 1658              	.LVL196:
 1659 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1660              	.LCFI35:
 1661              		.cfi_def_cfa_offset 24
 1662              		.cfi_offset 3, -24
 1663              		.cfi_offset 4, -20
 1664              		.cfi_offset 5, -16
 1665              		.cfi_offset 6, -12
 1666              		.cfi_offset 7, -8
 1667              		.cfi_offset 14, -4
 1668 0002 0646     		mov	r6, r0
 648:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CMD_LIST]);
 1669              		.loc 1 648 0
 1670 0004 876D     		ldr	r7, [r0, #88]
 1671              	.LVL197:
 649:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1672              		.loc 1 649 0
 1673 0006 0E49     		ldr	r1, .L162
 1674 0008 FFF7FEFF 		bl	shellWriteString
 1675              	.LVL198:
 1676              	.LBB10:
 650:Dsp/letter_shell/shell.c ****     {
 1677              		.loc 1 650 0
 1678 000c 0024     		movs	r4, #0
 1679 000e 11E0     		b	.L158
 1680              	.LVL199:
 1681              	.L160:
 652:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 1682              		.loc 1 652 0
 1683 0010 07EB0415 		add	r5, r7, r4, lsl #4
 1684 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1685 0016 03F00F03 		and	r3, r3, #15
 1686 001a 012B     		cmp	r3, #1
 1687 001c 08DC     		bgt	.L159
 653:Dsp/letter_shell/shell.c ****         {
 1688              		.loc 1 653 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 56


 1689 001e 2946     		mov	r1, r5
 1690 0020 3046     		mov	r0, r6
 1691 0022 FFF7FEFF 		bl	shellCheckPermission
 1692              	.LVL200:
 1693 0026 18B9     		cbnz	r0, .L159
 655:Dsp/letter_shell/shell.c ****         }
 1694              		.loc 1 655 0
 1695 0028 2946     		mov	r1, r5
 1696 002a 3046     		mov	r0, r6
 1697 002c FFF7FEFF 		bl	shellListItem
 1698              	.LVL201:
 1699              	.L159:
 650:Dsp/letter_shell/shell.c ****     {
 1700              		.loc 1 650 0 discriminator 2
 1701 0030 0134     		adds	r4, r4, #1
 1702              	.LVL202:
 1703 0032 24B2     		sxth	r4, r4
 1704              	.LVL203:
 1705              	.L158:
 650:Dsp/letter_shell/shell.c ****     {
 1706              		.loc 1 650 0 is_stmt 0 discriminator 1
 1707 0034 B6F85C30 		ldrh	r3, [r6, #92]
 1708 0038 9C42     		cmp	r4, r3
 1709 003a E9DB     		blt	.L160
 1710              	.LBE10:
 658:Dsp/letter_shell/shell.c **** 
 1711              		.loc 1 658 0 is_stmt 1
 1712 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1713              	.LVL204:
 1714              	.L163:
 1715 003e 00BF     		.align	2
 1716              	.L162:
 1717 0040 1C020000 		.word	.LC16
 1718              		.cfi_endproc
 1719              	.LFE141:
 1721              		.section	.text.shellListVar,"ax",%progbits
 1722              		.align	2
 1723              		.global	shellListVar
 1724              		.thumb
 1725              		.thumb_func
 1727              	shellListVar:
 1728              	.LFB142:
 667:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1729              		.loc 1 667 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 0
 1732              		@ frame_needed = 0, uses_anonymous_args = 0
 1733              	.LVL205:
 1734 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1735              	.LCFI36:
 1736              		.cfi_def_cfa_offset 24
 1737              		.cfi_offset 3, -24
 1738              		.cfi_offset 4, -20
 1739              		.cfi_offset 5, -16
 1740              		.cfi_offset 6, -12
 1741              		.cfi_offset 7, -8
 1742              		.cfi_offset 14, -4
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 57


 1743 0002 0646     		mov	r6, r0
 668:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_VAR_LIST]);
 1744              		.loc 1 668 0
 1745 0004 876D     		ldr	r7, [r0, #88]
 1746              	.LVL206:
 669:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1747              		.loc 1 669 0
 1748 0006 0F49     		ldr	r1, .L169
 1749 0008 FFF7FEFF 		bl	shellWriteString
 1750              	.LVL207:
 1751              	.LBB11:
 670:Dsp/letter_shell/shell.c ****     {
 1752              		.loc 1 670 0
 1753 000c 0024     		movs	r4, #0
 1754 000e 14E0     		b	.L165
 1755              	.LVL208:
 1756              	.L167:
 672:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_VAR_NODE
 1757              		.loc 1 672 0
 1758 0010 07EB0415 		add	r5, r7, r4, lsl #4
 1759 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1760 0016 03F00F03 		and	r3, r3, #15
 673:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 1761              		.loc 1 673 0
 1762 001a 0E33     		adds	r3, r3, #14
 1763 001c 03F00F03 		and	r3, r3, #15
 672:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_VAR_NODE
 1764              		.loc 1 672 0
 1765 0020 052B     		cmp	r3, #5
 1766 0022 08D8     		bhi	.L166
 674:Dsp/letter_shell/shell.c ****         {
 1767              		.loc 1 674 0
 1768 0024 2946     		mov	r1, r5
 1769 0026 3046     		mov	r0, r6
 1770 0028 FFF7FEFF 		bl	shellCheckPermission
 1771              	.LVL209:
 1772 002c 18B9     		cbnz	r0, .L166
 676:Dsp/letter_shell/shell.c ****         }
 1773              		.loc 1 676 0
 1774 002e 2946     		mov	r1, r5
 1775 0030 3046     		mov	r0, r6
 1776 0032 FFF7FEFF 		bl	shellListItem
 1777              	.LVL210:
 1778              	.L166:
 670:Dsp/letter_shell/shell.c ****     {
 1779              		.loc 1 670 0 discriminator 2
 1780 0036 0134     		adds	r4, r4, #1
 1781              	.LVL211:
 1782 0038 24B2     		sxth	r4, r4
 1783              	.LVL212:
 1784              	.L165:
 670:Dsp/letter_shell/shell.c ****     {
 1785              		.loc 1 670 0 is_stmt 0 discriminator 1
 1786 003a B6F85C30 		ldrh	r3, [r6, #92]
 1787 003e 9C42     		cmp	r4, r3
 1788 0040 E6DB     		blt	.L167
 1789              	.LBE11:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 58


 679:Dsp/letter_shell/shell.c **** 
 1790              		.loc 1 679 0 is_stmt 1
 1791 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1792              	.LVL213:
 1793              	.L170:
 1794              		.align	2
 1795              	.L169:
 1796 0044 30020000 		.word	.LC17
 1797              		.cfi_endproc
 1798              	.LFE142:
 1800              		.section	.text.shellListUser,"ax",%progbits
 1801              		.align	2
 1802              		.global	shellListUser
 1803              		.thumb
 1804              		.thumb_func
 1806              	shellListUser:
 1807              	.LFB143:
 688:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1808              		.loc 1 688 0
 1809              		.cfi_startproc
 1810              		@ args = 0, pretend = 0, frame = 0
 1811              		@ frame_needed = 0, uses_anonymous_args = 0
 1812              	.LVL214:
 1813 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1814              	.LCFI37:
 1815              		.cfi_def_cfa_offset 24
 1816              		.cfi_offset 3, -24
 1817              		.cfi_offset 4, -20
 1818              		.cfi_offset 5, -16
 1819              		.cfi_offset 6, -12
 1820              		.cfi_offset 7, -8
 1821              		.cfi_offset 14, -4
 1822 0002 0646     		mov	r6, r0
 689:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_USER_LIST]);
 1823              		.loc 1 689 0
 1824 0004 876D     		ldr	r7, [r0, #88]
 1825              	.LVL215:
 690:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1826              		.loc 1 690 0
 1827 0006 0E49     		ldr	r1, .L176
 1828 0008 FFF7FEFF 		bl	shellWriteString
 1829              	.LVL216:
 1830              	.LBB12:
 691:Dsp/letter_shell/shell.c ****     {
 1831              		.loc 1 691 0
 1832 000c 0024     		movs	r4, #0
 1833 000e 11E0     		b	.L172
 1834              	.LVL217:
 1835              	.L174:
 693:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_USER
 1836              		.loc 1 693 0
 1837 0010 07EB0415 		add	r5, r7, r4, lsl #4
 694:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 1838              		.loc 1 694 0
 1839 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1840 0016 03F00F03 		and	r3, r3, #15
 693:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_USER
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 59


 1841              		.loc 1 693 0
 1842 001a 082B     		cmp	r3, #8
 1843 001c 08D1     		bne	.L173
 695:Dsp/letter_shell/shell.c ****         {
 1844              		.loc 1 695 0
 1845 001e 2946     		mov	r1, r5
 1846 0020 3046     		mov	r0, r6
 1847 0022 FFF7FEFF 		bl	shellCheckPermission
 1848              	.LVL218:
 1849 0026 18B9     		cbnz	r0, .L173
 697:Dsp/letter_shell/shell.c ****         }
 1850              		.loc 1 697 0
 1851 0028 2946     		mov	r1, r5
 1852 002a 3046     		mov	r0, r6
 1853 002c FFF7FEFF 		bl	shellListItem
 1854              	.LVL219:
 1855              	.L173:
 691:Dsp/letter_shell/shell.c ****     {
 1856              		.loc 1 691 0 discriminator 2
 1857 0030 0134     		adds	r4, r4, #1
 1858              	.LVL220:
 1859 0032 24B2     		sxth	r4, r4
 1860              	.LVL221:
 1861              	.L172:
 691:Dsp/letter_shell/shell.c ****     {
 1862              		.loc 1 691 0 is_stmt 0 discriminator 1
 1863 0034 B6F85C30 		ldrh	r3, [r6, #92]
 1864 0038 9C42     		cmp	r4, r3
 1865 003a E9DB     		blt	.L174
 1866              	.LBE12:
 700:Dsp/letter_shell/shell.c **** 
 1867              		.loc 1 700 0 is_stmt 1
 1868 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1869              	.LVL222:
 1870              	.L177:
 1871 003e 00BF     		.align	2
 1872              	.L176:
 1873 0040 40020000 		.word	.LC18
 1874              		.cfi_endproc
 1875              	.LFE143:
 1877              		.section	.text.shellListKey,"ax",%progbits
 1878              		.align	2
 1879              		.global	shellListKey
 1880              		.thumb
 1881              		.thumb_func
 1883              	shellListKey:
 1884              	.LFB144:
 709:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1885              		.loc 1 709 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              	.LVL223:
 1890 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1891              	.LCFI38:
 1892              		.cfi_def_cfa_offset 24
 1893              		.cfi_offset 3, -24
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 60


 1894              		.cfi_offset 4, -20
 1895              		.cfi_offset 5, -16
 1896              		.cfi_offset 6, -12
 1897              		.cfi_offset 7, -8
 1898              		.cfi_offset 14, -4
 1899 0002 0646     		mov	r6, r0
 710:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_KEY_LIST]);
 1900              		.loc 1 710 0
 1901 0004 876D     		ldr	r7, [r0, #88]
 1902              	.LVL224:
 711:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1903              		.loc 1 711 0
 1904 0006 0E49     		ldr	r1, .L183
 1905 0008 FFF7FEFF 		bl	shellWriteString
 1906              	.LVL225:
 1907              	.LBB13:
 712:Dsp/letter_shell/shell.c ****     {
 1908              		.loc 1 712 0
 1909 000c 0024     		movs	r4, #0
 1910 000e 11E0     		b	.L179
 1911              	.LVL226:
 1912              	.L181:
 714:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_KEY
 1913              		.loc 1 714 0
 1914 0010 07EB0415 		add	r5, r7, r4, lsl #4
 715:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 1915              		.loc 1 715 0
 1916 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1917 0016 03F00F03 		and	r3, r3, #15
 714:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_KEY
 1918              		.loc 1 714 0
 1919 001a 092B     		cmp	r3, #9
 1920 001c 08D1     		bne	.L180
 716:Dsp/letter_shell/shell.c ****         {
 1921              		.loc 1 716 0
 1922 001e 2946     		mov	r1, r5
 1923 0020 3046     		mov	r0, r6
 1924 0022 FFF7FEFF 		bl	shellCheckPermission
 1925              	.LVL227:
 1926 0026 18B9     		cbnz	r0, .L180
 718:Dsp/letter_shell/shell.c ****         }
 1927              		.loc 1 718 0
 1928 0028 2946     		mov	r1, r5
 1929 002a 3046     		mov	r0, r6
 1930 002c FFF7FEFF 		bl	shellListItem
 1931              	.LVL228:
 1932              	.L180:
 712:Dsp/letter_shell/shell.c ****     {
 1933              		.loc 1 712 0 discriminator 2
 1934 0030 0134     		adds	r4, r4, #1
 1935              	.LVL229:
 1936 0032 24B2     		sxth	r4, r4
 1937              	.LVL230:
 1938              	.L179:
 712:Dsp/letter_shell/shell.c ****     {
 1939              		.loc 1 712 0 is_stmt 0 discriminator 1
 1940 0034 B6F85C30 		ldrh	r3, [r6, #92]
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 61


 1941 0038 9C42     		cmp	r4, r3
 1942 003a E9DB     		blt	.L181
 1943              	.LBE13:
 721:Dsp/letter_shell/shell.c **** 
 1944              		.loc 1 721 0 is_stmt 1
 1945 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1946              	.LVL231:
 1947              	.L184:
 1948 003e 00BF     		.align	2
 1949              	.L183:
 1950 0040 50020000 		.word	.LC19
 1951              		.cfi_endproc
 1952              	.LFE144:
 1954              		.section	.text.shellListAll,"ax",%progbits
 1955              		.align	2
 1956              		.global	shellListAll
 1957              		.thumb
 1958              		.thumb_func
 1960              	shellListAll:
 1961              	.LFB145:
 730:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_USER == 1
 1962              		.loc 1 730 0
 1963              		.cfi_startproc
 1964              		@ args = 0, pretend = 0, frame = 0
 1965              		@ frame_needed = 0, uses_anonymous_args = 0
 1966              	.LVL232:
 1967 0000 08B5     		push	{r3, lr}
 1968              	.LCFI39:
 1969              		.cfi_def_cfa_offset 8
 1970              		.cfi_offset 3, -8
 1971              		.cfi_offset 14, -4
 734:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_VAR == 1
 1972              		.loc 1 734 0
 1973 0002 FFF7FEFF 		bl	shellListCommand
 1974              	.LVL233:
 1975 0006 08BD     		pop	{r3, pc}
 1976              		.cfi_endproc
 1977              	.LFE145:
 1979              		.section	.text.shellDeleteCommandLine,"ax",%progbits
 1980              		.align	2
 1981              		.global	shellDeleteCommandLine
 1982              		.thumb
 1983              		.thumb_func
 1985              	shellDeleteCommandLine:
 1986              	.LFB146:
 751:Dsp/letter_shell/shell.c ****     while (length--)
 1987              		.loc 1 751 0
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 0
 1990              		@ frame_needed = 0, uses_anonymous_args = 0
 1991              	.LVL234:
 1992 0000 38B5     		push	{r3, r4, r5, lr}
 1993              	.LCFI40:
 1994              		.cfi_def_cfa_offset 16
 1995              		.cfi_offset 3, -16
 1996              		.cfi_offset 4, -12
 1997              		.cfi_offset 5, -8
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 62


 1998              		.cfi_offset 14, -4
 1999 0002 0546     		mov	r5, r0
 752:Dsp/letter_shell/shell.c ****     {
 2000              		.loc 1 752 0
 2001 0004 04E0     		b	.L188
 2002              	.LVL235:
 2003              	.L189:
 754:Dsp/letter_shell/shell.c ****     }
 2004              		.loc 1 754 0
 2005 0006 0549     		ldr	r1, .L191
 2006 0008 2846     		mov	r0, r5
 2007 000a FFF7FEFF 		bl	shellWriteString
 2008              	.LVL236:
 752:Dsp/letter_shell/shell.c ****     {
 2009              		.loc 1 752 0
 2010 000e 2146     		mov	r1, r4
 2011              	.LVL237:
 2012              	.L188:
 2013 0010 4B1E     		subs	r3, r1, #1
 2014 0012 DCB2     		uxtb	r4, r3
 2015              	.LVL238:
 2016 0014 0029     		cmp	r1, #0
 2017 0016 F6D1     		bne	.L189
 756:Dsp/letter_shell/shell.c **** 
 2018              		.loc 1 756 0
 2019 0018 38BD     		pop	{r3, r4, r5, pc}
 2020              	.LVL239:
 2021              	.L192:
 2022 001a 00BF     		.align	2
 2023              	.L191:
 2024 001c 60020000 		.word	.LC20
 2025              		.cfi_endproc
 2026              	.LFE146:
 2028              		.section	.text.shellClearCommandLine,"ax",%progbits
 2029              		.align	2
 2030              		.global	shellClearCommandLine
 2031              		.thumb
 2032              		.thumb_func
 2034              	shellClearCommandLine:
 2035              	.LFB147:
 765:Dsp/letter_shell/shell.c ****     for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 2036              		.loc 1 765 0
 2037              		.cfi_startproc
 2038              		@ args = 0, pretend = 0, frame = 0
 2039              		@ frame_needed = 0, uses_anonymous_args = 0
 2040              	.LVL240:
 2041 0000 38B5     		push	{r3, r4, r5, lr}
 2042              	.LCFI41:
 2043              		.cfi_def_cfa_offset 16
 2044              		.cfi_offset 3, -16
 2045              		.cfi_offset 4, -12
 2046              		.cfi_offset 5, -8
 2047              		.cfi_offset 14, -4
 2048 0002 0546     		mov	r5, r0
 2049              	.LBB14:
 766:Dsp/letter_shell/shell.c ****     {
 2050              		.loc 1 766 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 63


 2051 0004 8389     		ldrh	r3, [r0, #12]
 2052 0006 C489     		ldrh	r4, [r0, #14]
 2053 0008 1C1B     		subs	r4, r3, r4
 2054 000a 24B2     		sxth	r4, r4
 2055              	.LVL241:
 2056 000c 05E0     		b	.L194
 2057              	.LVL242:
 2058              	.L195:
 768:Dsp/letter_shell/shell.c ****     }
 2059              		.loc 1 768 0 discriminator 3
 2060 000e 2021     		movs	r1, #32
 2061 0010 2846     		mov	r0, r5
 2062 0012 FFF7FEFF 		bl	shellWriteByte
 2063              	.LVL243:
 766:Dsp/letter_shell/shell.c ****     {
 2064              		.loc 1 766 0 discriminator 3
 2065 0016 013C     		subs	r4, r4, #1
 2066              	.LVL244:
 2067 0018 24B2     		sxth	r4, r4
 2068              	.LVL245:
 2069              	.L194:
 766:Dsp/letter_shell/shell.c ****     {
 2070              		.loc 1 766 0 is_stmt 0 discriminator 1
 2071 001a 002C     		cmp	r4, #0
 2072 001c F7DC     		bgt	.L195
 2073              	.LBE14:
 770:Dsp/letter_shell/shell.c **** }
 2074              		.loc 1 770 0 is_stmt 1
 2075 001e 297B     		ldrb	r1, [r5, #12]	@ zero_extendqisi2
 2076 0020 2846     		mov	r0, r5
 2077 0022 FFF7FEFF 		bl	shellDeleteCommandLine
 2078              	.LVL246:
 2079 0026 38BD     		pop	{r3, r4, r5, pc}
 2080              		.cfi_endproc
 2081              	.LFE147:
 2083              		.section	.text.shellHistory,"ax",%progbits
 2084              		.align	2
 2085              		.thumb
 2086              		.thumb_func
 2088              	shellHistory:
 2089              	.LFB162:
1308:Dsp/letter_shell/shell.c ****     }
1309:Dsp/letter_shell/shell.c **** }
1310:Dsp/letter_shell/shell.c **** 
1311:Dsp/letter_shell/shell.c **** 
1312:Dsp/letter_shell/shell.c **** /**
1313:Dsp/letter_shell/shell.c ****  * @brief shell历史记录查找
1314:Dsp/letter_shell/shell.c ****  * 
1315:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1316:Dsp/letter_shell/shell.c ****  * @param dir 方向 {@code <0}往上查找 {@code >0}往下查找
1317:Dsp/letter_shell/shell.c ****  */
1318:Dsp/letter_shell/shell.c **** static void shellHistory(Shell *shell, signed char dir)
1319:Dsp/letter_shell/shell.c **** {
 2090              		.loc 1 1319 0
 2091              		.cfi_startproc
 2092              		@ args = 0, pretend = 0, frame = 0
 2093              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 64


 2094              	.LVL247:
 2095 0000 10B5     		push	{r4, lr}
 2096              	.LCFI42:
 2097              		.cfi_def_cfa_offset 8
 2098              		.cfi_offset 4, -8
 2099              		.cfi_offset 14, -4
1320:Dsp/letter_shell/shell.c ****     if (dir > 0)
 2100              		.loc 1 1320 0
 2101 0002 0029     		cmp	r1, #0
 2102              	.LVL248:
 2103 0004 19DD     		ble	.L198
1321:Dsp/letter_shell/shell.c ****     {
1322:Dsp/letter_shell/shell.c ****         if (shell->history.offset-- <= 
 2104              		.loc 1 1322 0
 2105 0006 B0F95410 		ldrsh	r1, [r0, #84]
 2106 000a 4B1E     		subs	r3, r1, #1
 2107 000c A0F85430 		strh	r3, [r0, #84]	@ movhi
1323:Dsp/letter_shell/shell.c ****             -((shell->history.number > shell->history.record) ?
 2108              		.loc 1 1323 0
 2109 0010 B0F85020 		ldrh	r2, [r0, #80]
 2110 0014 B0F85230 		ldrh	r3, [r0, #82]
 2111 0018 9A42     		cmp	r2, r3
 2112 001a 01D9     		bls	.L199
 2113              		.loc 1 1323 0 is_stmt 0 discriminator 1
 2114 001c 5442     		negs	r4, r2
 2115 001e 00E0     		b	.L200
 2116              	.L199:
 2117              		.loc 1 1323 0 discriminator 2
 2118 0020 5C42     		negs	r4, r3
 2119              	.L200:
1322:Dsp/letter_shell/shell.c ****             -((shell->history.number > shell->history.record) ?
 2120              		.loc 1 1322 0 is_stmt 1
 2121 0022 8C42     		cmp	r4, r1
 2122 0024 17DB     		blt	.L201
1324:Dsp/letter_shell/shell.c ****                 shell->history.number : shell->history.record))
1325:Dsp/letter_shell/shell.c ****         {
1326:Dsp/letter_shell/shell.c ****             shell->history.offset = -((shell->history.number > shell->history.record)
 2123              		.loc 1 1326 0
 2124 0026 9A42     		cmp	r2, r3
 2125 0028 02D9     		bls	.L202
 2126              		.loc 1 1326 0 is_stmt 0 discriminator 1
 2127 002a 5342     		negs	r3, r2
 2128 002c 1BB2     		sxth	r3, r3
 2129 002e 01E0     		b	.L203
 2130              	.L202:
 2131              		.loc 1 1326 0 discriminator 2
 2132 0030 5B42     		negs	r3, r3
 2133 0032 1BB2     		sxth	r3, r3
 2134              	.L203:
 2135              		.loc 1 1326 0 discriminator 4
 2136 0034 A0F85430 		strh	r3, [r0, #84]	@ movhi
 2137 0038 0DE0     		b	.L201
 2138              	.L198:
1327:Dsp/letter_shell/shell.c ****                                     ? shell->history.number : shell->history.record);
1328:Dsp/letter_shell/shell.c ****         }
1329:Dsp/letter_shell/shell.c ****     }
1330:Dsp/letter_shell/shell.c ****     else if (dir < 0)
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 65


 2139              		.loc 1 1330 0 is_stmt 1
 2140 003a 0029     		cmp	r1, #0
 2141 003c 30DA     		bge	.L197
1331:Dsp/letter_shell/shell.c ****     {
1332:Dsp/letter_shell/shell.c ****         if (++shell->history.offset > 0)
 2142              		.loc 1 1332 0
 2143 003e B0F95430 		ldrsh	r3, [r0, #84]
 2144 0042 0133     		adds	r3, r3, #1
 2145 0044 1BB2     		sxth	r3, r3
 2146 0046 A0F85430 		strh	r3, [r0, #84]	@ movhi
 2147 004a 002B     		cmp	r3, #0
 2148 004c 03DD     		ble	.L201
1333:Dsp/letter_shell/shell.c ****         {
1334:Dsp/letter_shell/shell.c ****             shell->history.offset = 0;
 2149              		.loc 1 1334 0
 2150 004e 0023     		movs	r3, #0
 2151 0050 A0F85430 		strh	r3, [r0, #84]	@ movhi
1335:Dsp/letter_shell/shell.c ****             return;
 2152              		.loc 1 1335 0
 2153 0054 10BD     		pop	{r4, pc}
 2154              	.L201:
 2155 0056 0446     		mov	r4, r0
1336:Dsp/letter_shell/shell.c ****         }
1337:Dsp/letter_shell/shell.c ****     }
1338:Dsp/letter_shell/shell.c ****     else
1339:Dsp/letter_shell/shell.c ****     {
1340:Dsp/letter_shell/shell.c ****         return;
1341:Dsp/letter_shell/shell.c ****     }
1342:Dsp/letter_shell/shell.c ****     shellClearCommandLine(shell);
 2156              		.loc 1 1342 0
 2157 0058 FFF7FEFF 		bl	shellClearCommandLine
 2158              	.LVL249:
1343:Dsp/letter_shell/shell.c ****     if (shell->history.offset == 0)
 2159              		.loc 1 1343 0
 2160 005c B4F95420 		ldrsh	r2, [r4, #84]
 2161 0060 1AB9     		cbnz	r2, .L205
1344:Dsp/letter_shell/shell.c ****     {
1345:Dsp/letter_shell/shell.c ****         shell->parser.cursor = shell->parser.length = 0;
 2162              		.loc 1 1345 0
 2163 0062 0023     		movs	r3, #0
 2164 0064 A381     		strh	r3, [r4, #12]	@ movhi
 2165 0066 E381     		strh	r3, [r4, #14]	@ movhi
 2166 0068 10BD     		pop	{r4, pc}
 2167              	.LVL250:
 2168              	.L205:
1346:Dsp/letter_shell/shell.c ****     }
1347:Dsp/letter_shell/shell.c ****     else
1348:Dsp/letter_shell/shell.c ****     {
1349:Dsp/letter_shell/shell.c ****         if ((shell->parser.length = shellStringCopy(shell->parser.buffer,
1350:Dsp/letter_shell/shell.c ****                 shell->history.item[(shell->history.record + SHELL_HISTORY_MAX_NUMBER
 2169              		.loc 1 1350 0
 2170 006a B4F85230 		ldrh	r3, [r4, #82]
 2171 006e 0533     		adds	r3, r3, #5
1351:Dsp/letter_shell/shell.c ****                     + shell->history.offset) % SHELL_HISTORY_MAX_NUMBER])) == 0)
 2172              		.loc 1 1351 0
 2173 0070 1A44     		add	r2, r2, r3
 2174 0072 0C4B     		ldr	r3, .L207
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 66


 2175 0074 83FB0231 		smull	r3, r1, r3, r2
 2176 0078 D317     		asrs	r3, r2, #31
 2177 007a C3EB6103 		rsb	r3, r3, r1, asr #1
 2178 007e 03EB8303 		add	r3, r3, r3, lsl #2
 2179 0082 D31A     		subs	r3, r2, r3
1349:Dsp/letter_shell/shell.c ****                 shell->history.item[(shell->history.record + SHELL_HISTORY_MAX_NUMBER
 2180              		.loc 1 1349 0
 2181 0084 0E33     		adds	r3, r3, #14
 2182 0086 04EB8303 		add	r3, r4, r3, lsl #2
 2183 008a 5968     		ldr	r1, [r3, #4]
 2184 008c 2069     		ldr	r0, [r4, #16]
 2185 008e FFF7FEFF 		bl	shellStringCopy
 2186              	.LVL251:
 2187 0092 A081     		strh	r0, [r4, #12]	@ movhi
 2188 0094 20B1     		cbz	r0, .L197
1352:Dsp/letter_shell/shell.c ****         {
1353:Dsp/letter_shell/shell.c ****             return;
1354:Dsp/letter_shell/shell.c ****         }
1355:Dsp/letter_shell/shell.c ****         shell->parser.cursor = shell->parser.length;
 2189              		.loc 1 1355 0
 2190 0096 E081     		strh	r0, [r4, #14]	@ movhi
1356:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2191              		.loc 1 1356 0
 2192 0098 2169     		ldr	r1, [r4, #16]
 2193 009a 2046     		mov	r0, r4
 2194 009c FFF7FEFF 		bl	shellWriteString
 2195              	.LVL252:
 2196              	.L197:
 2197 00a0 10BD     		pop	{r4, pc}
 2198              	.L208:
 2199 00a2 00BF     		.align	2
 2200              	.L207:
 2201 00a4 67666666 		.word	1717986919
 2202              		.cfi_endproc
 2203              	.LFE162:
 2205              		.section	.text.shellInsertByte,"ax",%progbits
 2206              		.align	2
 2207              		.global	shellInsertByte
 2208              		.thumb
 2209              		.thumb_func
 2211              	shellInsertByte:
 2212              	.LFB148:
 781:Dsp/letter_shell/shell.c ****     /* 判断输入数据是否过长 */
 2213              		.loc 1 781 0
 2214              		.cfi_startproc
 2215              		@ args = 0, pretend = 0, frame = 0
 2216              		@ frame_needed = 0, uses_anonymous_args = 0
 2217              	.LVL253:
 2218 0000 38B5     		push	{r3, r4, r5, lr}
 2219              	.LCFI43:
 2220              		.cfi_def_cfa_offset 16
 2221              		.cfi_offset 3, -16
 2222              		.cfi_offset 4, -12
 2223              		.cfi_offset 5, -8
 2224              		.cfi_offset 14, -4
 2225 0002 0446     		mov	r4, r0
 783:Dsp/letter_shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 67


 2226              		.loc 1 783 0
 2227 0004 8389     		ldrh	r3, [r0, #12]
 2228 0006 828E     		ldrh	r2, [r0, #52]
 2229 0008 013A     		subs	r2, r2, #1
 2230 000a 9342     		cmp	r3, r2
 2231 000c 0BDB     		blt	.L210
 785:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 1);
 2232              		.loc 1 785 0
 2233 000e 2A49     		ldr	r1, .L220
 2234              	.LVL254:
 2235 0010 FFF7FEFF 		bl	shellWriteString
 2236              	.LVL255:
 786:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2237              		.loc 1 786 0
 2238 0014 0121     		movs	r1, #1
 2239 0016 2046     		mov	r0, r4
 2240 0018 FFF7FEFF 		bl	shellWriteCommandLine
 2241              	.LVL256:
 787:Dsp/letter_shell/shell.c ****         return;
 2242              		.loc 1 787 0
 2243 001c 2169     		ldr	r1, [r4, #16]
 2244 001e 2046     		mov	r0, r4
 2245 0020 FFF7FEFF 		bl	shellWriteString
 2246              	.LVL257:
 788:Dsp/letter_shell/shell.c ****     }
 2247              		.loc 1 788 0
 2248 0024 38BD     		pop	{r3, r4, r5, pc}
 2249              	.LVL258:
 2250              	.L210:
 792:Dsp/letter_shell/shell.c ****     {
 2251              		.loc 1 792 0
 2252 0026 C289     		ldrh	r2, [r0, #14]
 2253 0028 9342     		cmp	r3, r2
 2254 002a 0ED1     		bne	.L212
 794:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 2255              		.loc 1 794 0
 2256 002c 0269     		ldr	r2, [r0, #16]
 2257 002e 581C     		adds	r0, r3, #1
 2258              	.LVL259:
 2259 0030 A081     		strh	r0, [r4, #12]	@ movhi
 2260 0032 D154     		strb	r1, [r2, r3]
 795:Dsp/letter_shell/shell.c ****         shell->parser.cursor++;
 2261              		.loc 1 795 0
 2262 0034 2269     		ldr	r2, [r4, #16]
 2263 0036 A389     		ldrh	r3, [r4, #12]
 2264 0038 0020     		movs	r0, #0
 2265 003a D054     		strb	r0, [r2, r3]
 796:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, data);
 2266              		.loc 1 796 0
 2267 003c E389     		ldrh	r3, [r4, #14]
 2268 003e 0133     		adds	r3, r3, #1
 2269 0040 E381     		strh	r3, [r4, #14]	@ movhi
 797:Dsp/letter_shell/shell.c ****     }
 2270              		.loc 1 797 0
 2271 0042 2046     		mov	r0, r4
 2272 0044 FFF7FEFF 		bl	shellWriteByte
 2273              	.LVL260:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 68


 2274 0048 38BD     		pop	{r3, r4, r5, pc}
 2275              	.LVL261:
 2276              	.L212:
 799:Dsp/letter_shell/shell.c ****     {
 2277              		.loc 1 799 0
 2278 004a 9342     		cmp	r3, r2
 2279 004c 33D9     		bls	.L209
 2280              	.LBB15:
 801:Dsp/letter_shell/shell.c ****         {
 2281              		.loc 1 801 0
 2282 004e 9B1A     		subs	r3, r3, r2
 2283 0050 1BB2     		sxth	r3, r3
 2284              	.LVL262:
 2285 0052 08E0     		b	.L213
 2286              	.LVL263:
 2287              	.L214:
 803:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 2288              		.loc 1 803 0 discriminator 3
 2289 0054 2069     		ldr	r0, [r4, #16]
 2290 0056 E289     		ldrh	r2, [r4, #14]
 2291 0058 1A44     		add	r2, r2, r3
 2292 005a 8518     		adds	r5, r0, r2
 804:Dsp/letter_shell/shell.c ****         }
 2293              		.loc 1 804 0 discriminator 3
 2294 005c 15F8015C 		ldrb	r5, [r5, #-1]	@ zero_extendqisi2
 803:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 2295              		.loc 1 803 0 discriminator 3
 2296 0060 8554     		strb	r5, [r0, r2]
 801:Dsp/letter_shell/shell.c ****         {
 2297              		.loc 1 801 0 discriminator 3
 2298 0062 013B     		subs	r3, r3, #1
 2299              	.LVL264:
 2300 0064 1BB2     		sxth	r3, r3
 2301              	.LVL265:
 2302              	.L213:
 801:Dsp/letter_shell/shell.c ****         {
 2303              		.loc 1 801 0 is_stmt 0 discriminator 1
 2304 0066 002B     		cmp	r3, #0
 2305 0068 F4DC     		bgt	.L214
 2306              	.LBE15:
 806:Dsp/letter_shell/shell.c ****         shell->parser.buffer[++shell->parser.length] = 0;
 2307              		.loc 1 806 0 is_stmt 1
 2308 006a 2269     		ldr	r2, [r4, #16]
 2309 006c E389     		ldrh	r3, [r4, #14]
 2310              	.LVL266:
 2311 006e 581C     		adds	r0, r3, #1
 2312 0070 E081     		strh	r0, [r4, #14]	@ movhi
 2313 0072 D154     		strb	r1, [r2, r3]
 807:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.cursor - 1; i < shell->parser.length; i++)
 2314              		.loc 1 807 0
 2315 0074 2269     		ldr	r2, [r4, #16]
 2316 0076 A389     		ldrh	r3, [r4, #12]
 2317 0078 0133     		adds	r3, r3, #1
 2318 007a 9BB2     		uxth	r3, r3
 2319 007c A381     		strh	r3, [r4, #12]	@ movhi
 2320 007e 0021     		movs	r1, #0
 2321              	.LVL267:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 69


 2322 0080 D154     		strb	r1, [r2, r3]
 2323              	.LBB16:
 808:Dsp/letter_shell/shell.c ****         {
 2324              		.loc 1 808 0
 2325 0082 E589     		ldrh	r5, [r4, #14]
 2326 0084 013D     		subs	r5, r5, #1
 2327 0086 2DB2     		sxth	r5, r5
 2328              	.LVL268:
 2329 0088 06E0     		b	.L215
 2330              	.L216:
 810:Dsp/letter_shell/shell.c ****         }
 2331              		.loc 1 810 0 discriminator 3
 2332 008a 2369     		ldr	r3, [r4, #16]
 2333 008c 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 2334 008e 2046     		mov	r0, r4
 2335 0090 FFF7FEFF 		bl	shellWriteByte
 2336              	.LVL269:
 808:Dsp/letter_shell/shell.c ****         {
 2337              		.loc 1 808 0 discriminator 3
 2338 0094 0135     		adds	r5, r5, #1
 2339              	.LVL270:
 2340 0096 2DB2     		sxth	r5, r5
 2341              	.LVL271:
 2342              	.L215:
 808:Dsp/letter_shell/shell.c ****         {
 2343              		.loc 1 808 0 is_stmt 0 discriminator 1
 2344 0098 A389     		ldrh	r3, [r4, #12]
 2345 009a 9D42     		cmp	r5, r3
 2346 009c F5DB     		blt	.L216
 2347              	.LBE16:
 2348              	.LBB17:
 812:Dsp/letter_shell/shell.c ****         {
 2349              		.loc 1 812 0 is_stmt 1
 2350 009e E589     		ldrh	r5, [r4, #14]
 2351              	.LVL272:
 2352 00a0 5D1B     		subs	r5, r3, r5
 2353 00a2 2DB2     		sxth	r5, r5
 2354              	.LVL273:
 2355 00a4 05E0     		b	.L217
 2356              	.L218:
 814:Dsp/letter_shell/shell.c ****         }
 2357              		.loc 1 814 0 discriminator 3
 2358 00a6 0821     		movs	r1, #8
 2359 00a8 2046     		mov	r0, r4
 2360 00aa FFF7FEFF 		bl	shellWriteByte
 2361              	.LVL274:
 812:Dsp/letter_shell/shell.c ****         {
 2362              		.loc 1 812 0 discriminator 3
 2363 00ae 013D     		subs	r5, r5, #1
 2364              	.LVL275:
 2365 00b0 2DB2     		sxth	r5, r5
 2366              	.LVL276:
 2367              	.L217:
 812:Dsp/letter_shell/shell.c ****         {
 2368              		.loc 1 812 0 is_stmt 0 discriminator 1
 2369 00b2 002D     		cmp	r5, #0
 2370 00b4 F7DC     		bgt	.L218
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 70


 2371              	.LVL277:
 2372              	.L209:
 2373 00b6 38BD     		pop	{r3, r4, r5, pc}
 2374              	.LVL278:
 2375              	.L221:
 2376              		.align	2
 2377              	.L220:
 2378 00b8 64020000 		.word	.LC21
 2379              	.LBE17:
 2380              		.cfi_endproc
 2381              	.LFE148:
 2383              		.section	.text.shellDeleteByte,"ax",%progbits
 2384              		.align	2
 2385              		.global	shellDeleteByte
 2386              		.thumb
 2387              		.thumb_func
 2389              	shellDeleteByte:
 2390              	.LFB149:
 827:Dsp/letter_shell/shell.c ****     char offset = (direction == -1) ? 1 : 0;
 2391              		.loc 1 827 0 is_stmt 1
 2392              		.cfi_startproc
 2393              		@ args = 0, pretend = 0, frame = 0
 2394              		@ frame_needed = 0, uses_anonymous_args = 0
 2395              	.LVL279:
 2396 0000 38B5     		push	{r3, r4, r5, lr}
 2397              	.LCFI44:
 2398              		.cfi_def_cfa_offset 16
 2399              		.cfi_offset 3, -16
 2400              		.cfi_offset 4, -12
 2401              		.cfi_offset 5, -8
 2402              		.cfi_offset 14, -4
 828:Dsp/letter_shell/shell.c **** 
 2403              		.loc 1 828 0
 2404 0002 B1F1FF3F 		cmp	r1, #-1
 2405 0006 14BF     		ite	ne
 2406 0008 0023     		movne	r3, #0
 2407 000a 0123     		moveq	r3, #1
 2408              	.LVL280:
 830:Dsp/letter_shell/shell.c ****         || (shell->parser.cursor == shell->parser.length && direction == -1))
 2409              		.loc 1 830 0
 2410 000c C289     		ldrh	r2, [r0, #14]
 2411 000e 0AB9     		cbnz	r2, .L223
 830:Dsp/letter_shell/shell.c ****         || (shell->parser.cursor == shell->parser.length && direction == -1))
 2412              		.loc 1 830 0 is_stmt 0 discriminator 1
 2413 0010 0129     		cmp	r1, #1
 2414 0012 52D0     		beq	.L222
 2415              	.L223:
 831:Dsp/letter_shell/shell.c ****     {
 2416              		.loc 1 831 0 is_stmt 1
 2417 0014 8589     		ldrh	r5, [r0, #12]
 2418 0016 AA42     		cmp	r2, r5
 2419 0018 02D1     		bne	.L225
 831:Dsp/letter_shell/shell.c ****     {
 2420              		.loc 1 831 0 is_stmt 0 discriminator 1
 2421 001a B1F1FF3F 		cmp	r1, #-1
 2422 001e 4CD0     		beq	.L222
 2423              	.L225:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 71


 2424 0020 0446     		mov	r4, r0
 835:Dsp/letter_shell/shell.c ****     {
 2425              		.loc 1 835 0 is_stmt 1
 2426 0022 AA42     		cmp	r2, r5
 2427 0024 0DD1     		bne	.L226
 835:Dsp/letter_shell/shell.c ****     {
 2428              		.loc 1 835 0 is_stmt 0 discriminator 1
 2429 0026 0129     		cmp	r1, #1
 2430 0028 0BD1     		bne	.L226
 837:Dsp/letter_shell/shell.c ****         shell->parser.length--;
 2431              		.loc 1 837 0 is_stmt 1
 2432 002a 013A     		subs	r2, r2, #1
 2433 002c C281     		strh	r2, [r0, #14]	@ movhi
 838:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 2434              		.loc 1 838 0
 2435 002e 6B1E     		subs	r3, r5, #1
 2436              	.LVL281:
 2437 0030 9BB2     		uxth	r3, r3
 2438 0032 8381     		strh	r3, [r0, #12]	@ movhi
 839:Dsp/letter_shell/shell.c ****         shellDeleteCommandLine(shell, 1);
 2439              		.loc 1 839 0
 2440 0034 0269     		ldr	r2, [r0, #16]
 2441 0036 0021     		movs	r1, #0
 2442              	.LVL282:
 2443 0038 D154     		strb	r1, [r2, r3]
 840:Dsp/letter_shell/shell.c ****     }
 2444              		.loc 1 840 0
 2445 003a 0121     		movs	r1, #1
 2446 003c FFF7FEFF 		bl	shellDeleteCommandLine
 2447              	.LVL283:
 2448 0040 38BD     		pop	{r3, r4, r5, pc}
 2449              	.LVL284:
 2450              	.L226:
 2451              	.LBB18:
 844:Dsp/letter_shell/shell.c ****         {
 2452              		.loc 1 844 0
 2453 0042 1BB2     		sxth	r3, r3
 2454              	.LVL285:
 2455 0044 06E0     		b	.L227
 2456              	.LVL286:
 2457              	.L228:
 846:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 2458              		.loc 1 846 0 discriminator 3
 2459 0046 2069     		ldr	r0, [r4, #16]
 2460 0048 1A44     		add	r2, r2, r3
 2461 004a 551E     		subs	r5, r2, #1
 847:Dsp/letter_shell/shell.c ****         }
 2462              		.loc 1 847 0 discriminator 3
 2463 004c 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 846:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 2464              		.loc 1 846 0 discriminator 3
 2465 004e 4255     		strb	r2, [r0, r5]
 844:Dsp/letter_shell/shell.c ****         {
 2466              		.loc 1 844 0 discriminator 3
 2467 0050 0133     		adds	r3, r3, #1
 2468              	.LVL287:
 2469 0052 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 72


 2470              	.LVL288:
 2471              	.L227:
 844:Dsp/letter_shell/shell.c ****         {
 2472              		.loc 1 844 0 is_stmt 0 discriminator 1
 2473 0054 A089     		ldrh	r0, [r4, #12]
 2474 0056 E289     		ldrh	r2, [r4, #14]
 2475 0058 851A     		subs	r5, r0, r2
 2476 005a AB42     		cmp	r3, r5
 2477 005c F3DB     		blt	.L228
 2478              	.LBE18:
 849:Dsp/letter_shell/shell.c ****         if (!offset)
 2479              		.loc 1 849 0 is_stmt 1
 2480 005e 0138     		subs	r0, r0, #1
 2481 0060 A081     		strh	r0, [r4, #12]	@ movhi
 850:Dsp/letter_shell/shell.c ****         {
 2482              		.loc 1 850 0
 2483 0062 B1F1FF3F 		cmp	r1, #-1
 2484 0066 05D0     		beq	.L229
 852:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, '\b');
 2485              		.loc 1 852 0
 2486 0068 013A     		subs	r2, r2, #1
 2487 006a E281     		strh	r2, [r4, #14]	@ movhi
 853:Dsp/letter_shell/shell.c ****         }
 2488              		.loc 1 853 0
 2489 006c 0821     		movs	r1, #8
 2490              	.LVL289:
 2491 006e 2046     		mov	r0, r4
 2492 0070 FFF7FEFF 		bl	shellWriteByte
 2493              	.LVL290:
 2494              	.L229:
 855:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.cursor; i < shell->parser.length; i++)
 2495              		.loc 1 855 0
 2496 0074 2269     		ldr	r2, [r4, #16]
 2497 0076 A389     		ldrh	r3, [r4, #12]
 2498 0078 0021     		movs	r1, #0
 2499 007a D154     		strb	r1, [r2, r3]
 2500              	.LBB19:
 856:Dsp/letter_shell/shell.c ****         {
 2501              		.loc 1 856 0
 2502 007c B4F90E50 		ldrsh	r5, [r4, #14]
 2503              	.LVL291:
 2504 0080 06E0     		b	.L230
 2505              	.L231:
 858:Dsp/letter_shell/shell.c ****         }
 2506              		.loc 1 858 0 discriminator 3
 2507 0082 2369     		ldr	r3, [r4, #16]
 2508 0084 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 2509 0086 2046     		mov	r0, r4
 2510 0088 FFF7FEFF 		bl	shellWriteByte
 2511              	.LVL292:
 856:Dsp/letter_shell/shell.c ****         {
 2512              		.loc 1 856 0 discriminator 3
 2513 008c 0135     		adds	r5, r5, #1
 2514              	.LVL293:
 2515 008e 2DB2     		sxth	r5, r5
 2516              	.LVL294:
 2517              	.L230:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 73


 856:Dsp/letter_shell/shell.c ****         {
 2518              		.loc 1 856 0 is_stmt 0 discriminator 1
 2519 0090 A389     		ldrh	r3, [r4, #12]
 2520 0092 9D42     		cmp	r5, r3
 2521 0094 F5DB     		blt	.L231
 2522              	.LBE19:
 860:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor + 1; i > 0; i--)
 2523              		.loc 1 860 0 is_stmt 1
 2524 0096 2021     		movs	r1, #32
 2525 0098 2046     		mov	r0, r4
 2526 009a FFF7FEFF 		bl	shellWriteByte
 2527              	.LVL295:
 2528              	.LBB20:
 861:Dsp/letter_shell/shell.c ****         {
 2529              		.loc 1 861 0
 2530 009e A389     		ldrh	r3, [r4, #12]
 2531 00a0 E589     		ldrh	r5, [r4, #14]
 2532              	.LVL296:
 2533 00a2 5D1B     		subs	r5, r3, r5
 2534 00a4 0135     		adds	r5, r5, #1
 2535 00a6 2DB2     		sxth	r5, r5
 2536              	.LVL297:
 2537 00a8 05E0     		b	.L232
 2538              	.L233:
 863:Dsp/letter_shell/shell.c ****         }
 2539              		.loc 1 863 0 discriminator 3
 2540 00aa 0821     		movs	r1, #8
 2541 00ac 2046     		mov	r0, r4
 2542 00ae FFF7FEFF 		bl	shellWriteByte
 2543              	.LVL298:
 861:Dsp/letter_shell/shell.c ****         {
 2544              		.loc 1 861 0 discriminator 3
 2545 00b2 013D     		subs	r5, r5, #1
 2546              	.LVL299:
 2547 00b4 2DB2     		sxth	r5, r5
 2548              	.LVL300:
 2549              	.L232:
 861:Dsp/letter_shell/shell.c ****         {
 2550              		.loc 1 861 0 is_stmt 0 discriminator 1
 2551 00b6 002D     		cmp	r5, #0
 2552 00b8 F7DC     		bgt	.L233
 2553              	.LVL301:
 2554              	.L222:
 2555 00ba 38BD     		pop	{r3, r4, r5, pc}
 2556              	.LBE20:
 2557              		.cfi_endproc
 2558              	.LFE149:
 2560              		.section	.text.shellSeekCommand,"ax",%progbits
 2561              		.align	2
 2562              		.global	shellSeekCommand
 2563              		.thumb
 2564              		.thumb_func
 2566              	shellSeekCommand:
 2567              	.LFB152:
 956:Dsp/letter_shell/shell.c ****     const char *name;
 2568              		.loc 1 956 0 is_stmt 1
 2569              		.cfi_startproc
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 74


 2570              		@ args = 0, pretend = 0, frame = 0
 2571              		@ frame_needed = 0, uses_anonymous_args = 0
 2572              	.LVL302:
 2573 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2574              	.LCFI45:
 2575              		.cfi_def_cfa_offset 32
 2576              		.cfi_offset 4, -32
 2577              		.cfi_offset 5, -28
 2578              		.cfi_offset 6, -24
 2579              		.cfi_offset 7, -20
 2580              		.cfi_offset 8, -16
 2581              		.cfi_offset 9, -12
 2582              		.cfi_offset 10, -8
 2583              		.cfi_offset 14, -4
 2584 0004 8046     		mov	r8, r0
 2585 0006 8A46     		mov	r10, r1
 2586 0008 1746     		mov	r7, r2
 2587 000a 9946     		mov	r9, r3
 959:Dsp/letter_shell/shell.c ****         ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 2588              		.loc 1 959 0
 2589 000c B0F85C30 		ldrh	r3, [r0, #92]
 2590              	.LVL303:
 960:Dsp/letter_shell/shell.c ****     for (unsigned short i = 0; i < count; i++)
 2591              		.loc 1 960 0
 2592 0010 866D     		ldr	r6, [r0, #88]
 2593 0012 961B     		subs	r6, r2, r6
 959:Dsp/letter_shell/shell.c ****         ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 2594              		.loc 1 959 0
 2595 0014 A3EB1616 		sub	r6, r3, r6, lsr #4
 2596 0018 B6B2     		uxth	r6, r6
 2597              	.LVL304:
 2598              	.LBB21:
 961:Dsp/letter_shell/shell.c ****     {
 2599              		.loc 1 961 0
 2600 001a 0024     		movs	r4, #0
 2601 001c 1EE0     		b	.L236
 2602              	.LVL305:
 2603              	.L240:
 963:Dsp/letter_shell/shell.c ****             || shellCheckPermission(shell, &base[i]) != 0)
 2604              		.loc 1 963 0
 2605 001e 07EB0415 		add	r5, r7, r4, lsl #4
 2606 0022 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 2607 0024 03F00F03 		and	r3, r3, #15
 2608 0028 092B     		cmp	r3, #9
 2609 002a 15D0     		beq	.L237
 964:Dsp/letter_shell/shell.c ****         {
 2610              		.loc 1 964 0
 2611 002c 2946     		mov	r1, r5
 2612 002e 4046     		mov	r0, r8
 2613 0030 FFF7FEFF 		bl	shellCheckPermission
 2614              	.LVL306:
 2615 0034 80B9     		cbnz	r0, .L237
 968:Dsp/letter_shell/shell.c ****         if (!compareLength)
 2616              		.loc 1 968 0
 2617 0036 2846     		mov	r0, r5
 2618 0038 FFF7FEFF 		bl	shellGetCommandName
 2619              	.LVL307:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 75


 2620 003c 0146     		mov	r1, r0
 2621              	.LVL308:
 969:Dsp/letter_shell/shell.c ****         {
 2622              		.loc 1 969 0
 2623 003e B9F1000F 		cmp	r9, #0
 2624 0042 04D1     		bne	.L238
 972:Dsp/letter_shell/shell.c ****             {
 2625              		.loc 1 972 0
 2626 0044 5046     		mov	r0, r10
 2627              	.LVL309:
 2628 0046 FFF7FEFF 		bl	strcmp
 2629              	.LVL310:
 2630 004a 28B9     		cbnz	r0, .L237
 2631 004c 09E0     		b	.L239
 2632              	.LVL311:
 2633              	.L238:
 979:Dsp/letter_shell/shell.c ****             {
 2634              		.loc 1 979 0
 2635 004e 4A46     		mov	r2, r9
 2636 0050 5046     		mov	r0, r10
 2637              	.LVL312:
 2638 0052 FFF7FEFF 		bl	strncmp
 2639              	.LVL313:
 2640 0056 20B1     		cbz	r0, .L239
 2641              	.L237:
 961:Dsp/letter_shell/shell.c ****     {
 2642              		.loc 1 961 0 discriminator 2
 2643 0058 0134     		adds	r4, r4, #1
 2644              	.LVL314:
 2645 005a A4B2     		uxth	r4, r4
 2646              	.LVL315:
 2647              	.L236:
 961:Dsp/letter_shell/shell.c ****     {
 2648              		.loc 1 961 0 is_stmt 0 discriminator 1
 2649 005c B442     		cmp	r4, r6
 2650 005e DED3     		bcc	.L240
 2651              	.LBE21:
 985:Dsp/letter_shell/shell.c **** }
 2652              		.loc 1 985 0 is_stmt 1
 2653 0060 0025     		movs	r5, #0
 2654              	.L239:
 986:Dsp/letter_shell/shell.c **** 
 2655              		.loc 1 986 0
 2656 0062 2846     		mov	r0, r5
 2657 0064 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2658              		.cfi_endproc
 2659              	.LFE152:
 2661              		.section	.text.shellInit,"ax",%progbits
 2662              		.align	2
 2663              		.global	shellInit
 2664              		.thumb
 2665              		.thumb_func
 2667              	shellInit:
 2668              	.LFB124:
 172:Dsp/letter_shell/shell.c ****     shell->parser.length = 0;
 2669              		.loc 1 172 0
 2670              		.cfi_startproc
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 76


 2671              		@ args = 0, pretend = 0, frame = 0
 2672              		@ frame_needed = 0, uses_anonymous_args = 0
 2673              	.LVL316:
 2674 0000 38B5     		push	{r3, r4, r5, lr}
 2675              	.LCFI46:
 2676              		.cfi_def_cfa_offset 16
 2677              		.cfi_offset 3, -16
 2678              		.cfi_offset 4, -12
 2679              		.cfi_offset 5, -8
 2680              		.cfi_offset 14, -4
 2681 0002 0446     		mov	r4, r0
 173:Dsp/letter_shell/shell.c ****     shell->parser.cursor = 0;
 2682              		.loc 1 173 0
 2683 0004 0023     		movs	r3, #0
 2684 0006 8381     		strh	r3, [r0, #12]	@ movhi
 174:Dsp/letter_shell/shell.c ****     shell->history.offset = 0;
 2685              		.loc 1 174 0
 2686 0008 C381     		strh	r3, [r0, #14]	@ movhi
 175:Dsp/letter_shell/shell.c ****     shell->history.number = 0;
 2687              		.loc 1 175 0
 2688 000a A0F85430 		strh	r3, [r0, #84]	@ movhi
 176:Dsp/letter_shell/shell.c ****     shell->history.record = 0;
 2689              		.loc 1 176 0
 2690 000e A0F85030 		strh	r3, [r0, #80]	@ movhi
 177:Dsp/letter_shell/shell.c ****     shell->info.user = NULL;
 2691              		.loc 1 177 0
 2692 0012 A0F85230 		strh	r3, [r0, #82]	@ movhi
 178:Dsp/letter_shell/shell.c ****     shell->status.isChecked = 1;
 2693              		.loc 1 178 0
 2694 0016 0360     		str	r3, [r0]
 179:Dsp/letter_shell/shell.c **** 
 2695              		.loc 1 179 0
 2696 0018 90F86000 		ldrb	r0, [r0, #96]	@ zero_extendqisi2
 2697              	.LVL317:
 2698 001c 40F00100 		orr	r0, r0, #1
 2699 0020 84F86000 		strb	r0, [r4, #96]
 181:Dsp/letter_shell/shell.c ****     shell->parser.bufferSize = size / (SHELL_HISTORY_MAX_NUMBER + 1);
 2700              		.loc 1 181 0
 2701 0024 2161     		str	r1, [r4, #16]
 182:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_HISTORY_MAX_NUMBER; i++)
 2702              		.loc 1 182 0
 2703 0026 1548     		ldr	r0, .L246
 2704 0028 A0FB0202 		umull	r0, r2, r0, r2
 2705              	.LVL318:
 2706 002c 9208     		lsrs	r2, r2, #2
 2707 002e A286     		strh	r2, [r4, #52]	@ movhi
 2708              	.LVL319:
 2709              	.LBB22:
 183:Dsp/letter_shell/shell.c ****     {
 2710              		.loc 1 183 0
 2711 0030 09E0     		b	.L243
 2712              	.LVL320:
 2713              	.L244:
 185:Dsp/letter_shell/shell.c ****     }
 2714              		.loc 1 185 0 discriminator 3
 2715 0032 03FB0225 		mla	r5, r3, r2, r2
 2716 0036 0D44     		add	r5, r5, r1
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 77


 2717 0038 03F10E00 		add	r0, r3, #14
 2718 003c 04EB8000 		add	r0, r4, r0, lsl #2
 2719 0040 4560     		str	r5, [r0, #4]
 183:Dsp/letter_shell/shell.c ****     {
 2720              		.loc 1 183 0 discriminator 3
 2721 0042 0133     		adds	r3, r3, #1
 2722              	.LVL321:
 2723 0044 1BB2     		sxth	r3, r3
 2724              	.LVL322:
 2725              	.L243:
 183:Dsp/letter_shell/shell.c ****     {
 2726              		.loc 1 183 0 is_stmt 0 discriminator 1
 2727 0046 042B     		cmp	r3, #4
 2728 0048 F3DD     		ble	.L244
 2729              	.LBE22:
 209:Dsp/letter_shell/shell.c ****     shell->commandList.count = shellCommandCount;
 2730              		.loc 1 209 0 is_stmt 1
 2731 004a 0D4B     		ldr	r3, .L246+4
 2732              	.LVL323:
 2733 004c A365     		str	r3, [r4, #88]
 210:Dsp/letter_shell/shell.c **** #endif
 2734              		.loc 1 210 0
 2735 004e 0D4B     		ldr	r3, .L246+8
 2736 0050 1B88     		ldrh	r3, [r3]
 2737 0052 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 213:Dsp/letter_shell/shell.c **** 
 2738              		.loc 1 213 0
 2739 0056 2046     		mov	r0, r4
 2740 0058 FFF7FEFF 		bl	shellAdd
 2741              	.LVL324:
 215:Dsp/letter_shell/shell.c ****                                          SHELL_DEFAULT_USER,
 2742              		.loc 1 215 0
 2743 005c 0023     		movs	r3, #0
 2744 005e A26D     		ldr	r2, [r4, #88]
 2745 0060 0949     		ldr	r1, .L246+12
 2746 0062 2046     		mov	r0, r4
 2747 0064 FFF7FEFF 		bl	shellSeekCommand
 2748              	.LVL325:
 2749 0068 0146     		mov	r1, r0
 2750 006a 2046     		mov	r0, r4
 2751 006c FFF7FEFF 		bl	shellSetUser
 2752              	.LVL326:
 219:Dsp/letter_shell/shell.c **** }
 2753              		.loc 1 219 0
 2754 0070 0121     		movs	r1, #1
 2755 0072 2046     		mov	r0, r4
 2756 0074 FFF7FEFF 		bl	shellWriteCommandLine
 2757              	.LVL327:
 2758 0078 38BD     		pop	{r3, r4, r5, pc}
 2759              	.LVL328:
 2760              	.L247:
 2761 007a 00BF     		.align	2
 2762              	.L246:
 2763 007c ABAAAAAA 		.word	-1431655765
 2764 0080 00000000 		.word	shellCommandList
 2765 0084 00000000 		.word	shellCommandCount
 2766 0088 88020000 		.word	.LC22
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 78


 2767              		.cfi_endproc
 2768              	.LFE124:
 2770              		.section	.text.shellGetVarValue,"ax",%progbits
 2771              		.align	2
 2772              		.global	shellGetVarValue
 2773              		.thumb
 2774              		.thumb_func
 2776              	shellGetVarValue:
 2777              	.LFB153:
 997:Dsp/letter_shell/shell.c ****     int value = 0;
 2778              		.loc 1 997 0
 2779              		.cfi_startproc
 2780              		@ args = 0, pretend = 0, frame = 0
 2781              		@ frame_needed = 0, uses_anonymous_args = 0
 2782              	.LVL329:
 2783 0000 08B5     		push	{r3, lr}
 2784              	.LCFI47:
 2785              		.cfi_def_cfa_offset 8
 2786              		.cfi_offset 3, -8
 2787              		.cfi_offset 14, -4
 2788              	.LVL330:
 999:Dsp/letter_shell/shell.c ****     {
 2789              		.loc 1 999 0
 2790 0002 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 2791 0004 03F00F03 		and	r3, r3, #15
 2792 0008 023B     		subs	r3, r3, #2
 2793 000a 052B     		cmp	r3, #5
 2794 000c 16D8     		bhi	.L256
 2795 000e DFE803F0 		tbb	[pc, r3]
 2796              	.L251:
 2797 0012 03       		.byte	(.L250-.L251)/2
 2798 0013 06       		.byte	(.L252-.L251)/2
 2799 0014 0A       		.byte	(.L253-.L251)/2
 2800 0015 0D       		.byte	(.L254-.L251)/2
 2801 0016 0D       		.byte	(.L254-.L251)/2
 2802 0017 0F       		.byte	(.L255-.L251)/2
 2803              		.p2align 1
 2804              	.L250:
1002:Dsp/letter_shell/shell.c ****         break;
 2805              		.loc 1 1002 0
 2806 0018 8B68     		ldr	r3, [r1, #8]
 2807 001a 1868     		ldr	r0, [r3]
 2808              	.LVL331:
1003:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_SHORT:
 2809              		.loc 1 1003 0
 2810 001c 08BD     		pop	{r3, pc}
 2811              	.LVL332:
 2812              	.L252:
1005:Dsp/letter_shell/shell.c ****         break;
 2813              		.loc 1 1005 0
 2814 001e 8B68     		ldr	r3, [r1, #8]
 2815 0020 B3F90000 		ldrsh	r0, [r3]
 2816              	.LVL333:
1006:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_CHAR:
 2817              		.loc 1 1006 0
 2818 0024 08BD     		pop	{r3, pc}
 2819              	.LVL334:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 79


 2820              	.L253:
1008:Dsp/letter_shell/shell.c ****         break;
 2821              		.loc 1 1008 0
 2822 0026 8B68     		ldr	r3, [r1, #8]
 2823 0028 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2824              	.LVL335:
1009:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
 2825              		.loc 1 1009 0
 2826 002a 08BD     		pop	{r3, pc}
 2827              	.LVL336:
 2828              	.L254:
1012:Dsp/letter_shell/shell.c ****         break;
 2829              		.loc 1 1012 0
 2830 002c 8868     		ldr	r0, [r1, #8]
 2831              	.LVL337:
1013:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_NODE:
 2832              		.loc 1 1013 0
 2833 002e 08BD     		pop	{r3, pc}
 2834              	.LVL338:
 2835              	.L255:
1015:Dsp/letter_shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)
 2836              		.loc 1 1015 0
 2837 0030 8A68     		ldr	r2, [r1, #8]
 2838 0032 5368     		ldr	r3, [r2, #4]
1017:Dsp/letter_shell/shell.c ****         break;
 2839              		.loc 1 1017 0
 2840 0034 23B1     		cbz	r3, .L257
1017:Dsp/letter_shell/shell.c ****         break;
 2841              		.loc 1 1017 0 is_stmt 0 discriminator 1
 2842 0036 1068     		ldr	r0, [r2]
 2843              	.LVL339:
 2844 0038 9847     		blx	r3
 2845              	.LVL340:
 2846 003a 08BD     		pop	{r3, pc}
 2847              	.LVL341:
 2848              	.L256:
 998:Dsp/letter_shell/shell.c ****     switch (command->attr.attrs.type)
 2849              		.loc 1 998 0 is_stmt 1
 2850 003c 0020     		movs	r0, #0
 2851              	.LVL342:
 2852 003e 08BD     		pop	{r3, pc}
 2853              	.LVL343:
 2854              	.L257:
1017:Dsp/letter_shell/shell.c ****         break;
 2855              		.loc 1 1017 0
 2856 0040 0020     		movs	r0, #0
 2857              	.LVL344:
1023:Dsp/letter_shell/shell.c **** 
 2858              		.loc 1 1023 0
 2859 0042 08BD     		pop	{r3, pc}
 2860              		.cfi_endproc
 2861              	.LFE153:
 2863              		.section	.text.shellShowVar,"ax",%progbits
 2864              		.align	2
 2865              		.thumb
 2866              		.thumb_func
 2868              	shellShowVar:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 80


 2869              	.LFB155:
1089:Dsp/letter_shell/shell.c ****     char buffer[12] = "00000000000";
 2870              		.loc 1 1089 0
 2871              		.cfi_startproc
 2872              		@ args = 0, pretend = 0, frame = 16
 2873              		@ frame_needed = 0, uses_anonymous_args = 0
 2874              	.LVL345:
 2875 0000 70B5     		push	{r4, r5, r6, lr}
 2876              	.LCFI48:
 2877              		.cfi_def_cfa_offset 16
 2878              		.cfi_offset 4, -16
 2879              		.cfi_offset 5, -12
 2880              		.cfi_offset 6, -8
 2881              		.cfi_offset 14, -4
 2882 0002 84B0     		sub	sp, sp, #16
 2883              	.LCFI49:
 2884              		.cfi_def_cfa_offset 32
 2885 0004 0446     		mov	r4, r0
 2886 0006 0E46     		mov	r6, r1
1090:Dsp/letter_shell/shell.c ****     int value = shellGetVarValue(shell, command);
 2887              		.loc 1 1090 0
 2888 0008 274B     		ldr	r3, .L267
 2889 000a 93E80700 		ldmia	r3, {r0, r1, r2}
 2890              	.LVL346:
 2891 000e 04AB     		add	r3, sp, #16
 2892 0010 03E90700 		stmdb	r3, {r0, r1, r2}
1091:Dsp/letter_shell/shell.c ****     
 2893              		.loc 1 1091 0
 2894 0014 3146     		mov	r1, r6
 2895 0016 2046     		mov	r0, r4
 2896 0018 FFF7FEFF 		bl	shellGetVarValue
 2897              	.LVL347:
 2898 001c 0546     		mov	r5, r0
 2899              	.LVL348:
1093:Dsp/letter_shell/shell.c ****     shellWriteString(shell, " = ");
 2900              		.loc 1 1093 0
 2901 001e 7168     		ldr	r1, [r6, #4]
 2902 0020 2046     		mov	r0, r4
 2903              	.LVL349:
 2904 0022 FFF7FEFF 		bl	shellWriteString
 2905              	.LVL350:
1094:Dsp/letter_shell/shell.c **** 
 2906              		.loc 1 1094 0
 2907 0026 2149     		ldr	r1, .L267+4
 2908 0028 2046     		mov	r0, r4
 2909 002a FFF7FEFF 		bl	shellWriteString
 2910              	.LVL351:
1096:Dsp/letter_shell/shell.c ****     {
 2911              		.loc 1 1096 0
 2912 002e 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 2913 0030 03F00F03 		and	r3, r3, #15
 2914 0034 052B     		cmp	r3, #5
 2915 0036 0DD1     		bne	.L265
1099:Dsp/letter_shell/shell.c ****         shellWriteString(shell, (char *)value);
 2916              		.loc 1 1099 0
 2917 0038 1D4E     		ldr	r6, .L267+8
 2918              	.LVL352:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 81


 2919 003a 3146     		mov	r1, r6
 2920 003c 2046     		mov	r0, r4
 2921 003e FFF7FEFF 		bl	shellWriteString
 2922              	.LVL353:
1100:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\"");
 2923              		.loc 1 1100 0
 2924 0042 2946     		mov	r1, r5
 2925 0044 2046     		mov	r0, r4
 2926 0046 FFF7FEFF 		bl	shellWriteString
 2927              	.LVL354:
1101:Dsp/letter_shell/shell.c ****         break;
 2928              		.loc 1 1101 0
 2929 004a 3146     		mov	r1, r6
 2930 004c 2046     		mov	r0, r4
 2931 004e FFF7FEFF 		bl	shellWriteString
 2932              	.LVL355:
1102:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_INT:
 2933              		.loc 1 1102 0
 2934 0052 21E0     		b	.L262
 2935              	.LVL356:
 2936              	.L265:
1108:Dsp/letter_shell/shell.c ****         shellWriteString(shell, ", 0x");
 2937              		.loc 1 1108 0
 2938 0054 01A9     		add	r1, sp, #4
 2939 0056 2846     		mov	r0, r5
 2940 0058 FFF7FEFF 		bl	shellToDec
 2941              	.LVL357:
 2942 005c C0F10B01 		rsb	r1, r0, #11
 2943 0060 01AB     		add	r3, sp, #4
 2944 0062 1944     		add	r1, r1, r3
 2945 0064 2046     		mov	r0, r4
 2946 0066 FFF7FEFF 		bl	shellWriteString
 2947              	.LVL358:
1109:Dsp/letter_shell/shell.c ****         for (short i = 0; i < 11; i++)
 2948              		.loc 1 1109 0
 2949 006a 1249     		ldr	r1, .L267+12
 2950 006c 2046     		mov	r0, r4
 2951 006e FFF7FEFF 		bl	shellWriteString
 2952              	.LVL359:
 2953              	.LBB23:
1110:Dsp/letter_shell/shell.c ****         {
 2954              		.loc 1 1110 0
 2955 0072 0023     		movs	r3, #0
 2956 0074 06E0     		b	.L263
 2957              	.LVL360:
 2958              	.L264:
1112:Dsp/letter_shell/shell.c ****         }
 2959              		.loc 1 1112 0 discriminator 3
 2960 0076 04AA     		add	r2, sp, #16
 2961 0078 1A44     		add	r2, r2, r3
 2962 007a 3021     		movs	r1, #48
 2963 007c 02F80C1C 		strb	r1, [r2, #-12]
1110:Dsp/letter_shell/shell.c ****         {
 2964              		.loc 1 1110 0 discriminator 3
 2965 0080 0133     		adds	r3, r3, #1
 2966              	.LVL361:
 2967 0082 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 82


 2968              	.LVL362:
 2969              	.L263:
1110:Dsp/letter_shell/shell.c ****         {
 2970              		.loc 1 1110 0 is_stmt 0 discriminator 1
 2971 0084 0A2B     		cmp	r3, #10
 2972 0086 F6DD     		ble	.L264
 2973              	.LBE23:
1114:Dsp/letter_shell/shell.c ****         shellWriteString(shell, buffer);
 2974              		.loc 1 1114 0 is_stmt 1
 2975 0088 01A9     		add	r1, sp, #4
 2976 008a 2846     		mov	r0, r5
 2977 008c FFF7FEFF 		bl	shellToHex
 2978              	.LVL363:
1115:Dsp/letter_shell/shell.c ****         break;
 2979              		.loc 1 1115 0
 2980 0090 01A9     		add	r1, sp, #4
 2981 0092 2046     		mov	r0, r4
 2982 0094 FFF7FEFF 		bl	shellWriteString
 2983              	.LVL364:
 2984              	.L262:
1119:Dsp/letter_shell/shell.c ****     return value;
 2985              		.loc 1 1119 0
 2986 0098 0749     		ldr	r1, .L267+16
 2987 009a 2046     		mov	r0, r4
 2988 009c FFF7FEFF 		bl	shellWriteString
 2989              	.LVL365:
1121:Dsp/letter_shell/shell.c **** 
 2990              		.loc 1 1121 0
 2991 00a0 2846     		mov	r0, r5
 2992 00a2 04B0     		add	sp, sp, #16
 2993              	.LCFI50:
 2994              		.cfi_def_cfa_offset 16
 2995              		@ sp needed
 2996 00a4 70BD     		pop	{r4, r5, r6, pc}
 2997              	.LVL366:
 2998              	.L268:
 2999 00a6 00BF     		.align	2
 3000              	.L267:
 3001 00a8 F0010000 		.word	.LC8
 3002 00ac 8C020000 		.word	.LC23
 3003 00b0 90020000 		.word	.LC24
 3004 00b4 E8010000 		.word	.LC10
 3005 00b8 A0010000 		.word	.LC3
 3006              		.cfi_endproc
 3007              	.LFE155:
 3009              		.section	.text.shellSetVarValue,"ax",%progbits
 3010              		.align	2
 3011              		.global	shellSetVarValue
 3012              		.thumb
 3013              		.thumb_func
 3015              	shellSetVarValue:
 3016              	.LFB154:
1035:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.readOnly)
 3017              		.loc 1 1035 0
 3018              		.cfi_startproc
 3019              		@ args = 0, pretend = 0, frame = 0
 3020              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 83


 3021              	.LVL367:
 3022 0000 38B5     		push	{r3, r4, r5, lr}
 3023              	.LCFI51:
 3024              		.cfi_def_cfa_offset 16
 3025              		.cfi_offset 3, -16
 3026              		.cfi_offset 4, -12
 3027              		.cfi_offset 5, -8
 3028              		.cfi_offset 14, -4
 3029 0002 0546     		mov	r5, r0
 3030 0004 0C46     		mov	r4, r1
1036:Dsp/letter_shell/shell.c ****     {
 3031              		.loc 1 1036 0
 3032 0006 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3033 0008 13F0400F 		tst	r3, #64
 3034 000c 03D0     		beq	.L270
1038:Dsp/letter_shell/shell.c ****     }
 3035              		.loc 1 1038 0
 3036 000e 1849     		ldr	r1, .L281
 3037              	.LVL368:
 3038 0010 FFF7FEFF 		bl	shellWriteString
 3039              	.LVL369:
 3040 0014 26E0     		b	.L271
 3041              	.LVL370:
 3042              	.L270:
1042:Dsp/letter_shell/shell.c ****         {
 3043              		.loc 1 1042 0
 3044 0016 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3045 0018 03F00F03 		and	r3, r3, #15
 3046 001c 023B     		subs	r3, r3, #2
 3047 001e 052B     		cmp	r3, #5
 3048 0020 20D8     		bhi	.L271
 3049 0022 DFE803F0 		tbb	[pc, r3]
 3050              	.LVL371:
 3051              	.L273:
 3052 0026 03       		.byte	(.L272-.L273)/2
 3053 0027 06       		.byte	(.L274-.L273)/2
 3054 0028 09       		.byte	(.L275-.L273)/2
 3055 0029 0C       		.byte	(.L276-.L273)/2
 3056 002a 11       		.byte	(.L277-.L273)/2
 3057 002b 15       		.byte	(.L278-.L273)/2
 3058              		.p2align 1
 3059              	.L272:
1045:Dsp/letter_shell/shell.c ****             break;
 3060              		.loc 1 1045 0
 3061 002c A368     		ldr	r3, [r4, #8]
 3062 002e 1A60     		str	r2, [r3]
1046:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_SHORT:
 3063              		.loc 1 1046 0
 3064 0030 18E0     		b	.L271
 3065              	.L274:
1048:Dsp/letter_shell/shell.c ****             break;
 3066              		.loc 1 1048 0
 3067 0032 A368     		ldr	r3, [r4, #8]
 3068 0034 1A80     		strh	r2, [r3]	@ movhi
1049:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_CHAR:
 3069              		.loc 1 1049 0
 3070 0036 15E0     		b	.L271
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 84


 3071              	.L275:
1051:Dsp/letter_shell/shell.c ****             break;
 3072              		.loc 1 1051 0
 3073 0038 A368     		ldr	r3, [r4, #8]
 3074 003a 1A70     		strb	r2, [r3]
1052:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_STRING:
 3075              		.loc 1 1052 0
 3076 003c 12E0     		b	.L271
 3077              	.L276:
1054:Dsp/letter_shell/shell.c ****             break;
 3078              		.loc 1 1054 0
 3079 003e 1146     		mov	r1, r2
 3080 0040 A068     		ldr	r0, [r4, #8]
 3081              	.LVL372:
 3082 0042 FFF7FEFF 		bl	shellStringCopy
 3083              	.LVL373:
1055:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_POINT:
 3084              		.loc 1 1055 0
 3085 0046 0DE0     		b	.L271
 3086              	.LVL374:
 3087              	.L277:
1057:Dsp/letter_shell/shell.c ****             break;
 3088              		.loc 1 1057 0
 3089 0048 0A49     		ldr	r1, .L281+4
 3090 004a FFF7FEFF 		bl	shellWriteString
 3091              	.LVL375:
1058:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_NODE:
 3092              		.loc 1 1058 0
 3093 004e 09E0     		b	.L271
 3094              	.LVL376:
 3095              	.L278:
1060:Dsp/letter_shell/shell.c ****             {
 3096              		.loc 1 1060 0
 3097 0050 A168     		ldr	r1, [r4, #8]
 3098 0052 8B68     		ldr	r3, [r1, #8]
 3099 0054 33B1     		cbz	r3, .L271
1062:Dsp/letter_shell/shell.c ****                 {
 3100              		.loc 1 1062 0
 3101 0056 0868     		ldr	r0, [r1]
 3102              	.LVL377:
 3103 0058 10B1     		cbz	r0, .L279
1064:Dsp/letter_shell/shell.c ****                         ->set(((ShellNodeVarAttr *)command->data.var.value)->var, value);
 3104              		.loc 1 1064 0
 3105 005a 1146     		mov	r1, r2
 3106 005c 9847     		blx	r3
 3107              	.LVL378:
 3108 005e 01E0     		b	.L271
 3109              	.LVL379:
 3110              	.L279:
1069:Dsp/letter_shell/shell.c ****                 }
 3111              		.loc 1 1069 0
 3112 0060 1046     		mov	r0, r2
 3113 0062 9847     		blx	r3
 3114              	.LVL380:
 3115              	.L271:
1077:Dsp/letter_shell/shell.c **** }
 3116              		.loc 1 1077 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 85


 3117 0064 2146     		mov	r1, r4
 3118 0066 2846     		mov	r0, r5
 3119 0068 FFF7FEFF 		bl	shellShowVar
 3120              	.LVL381:
1078:Dsp/letter_shell/shell.c **** 
 3121              		.loc 1 1078 0
 3122 006c 38BD     		pop	{r3, r4, r5, pc}
 3123              	.LVL382:
 3124              	.L282:
 3125 006e 00BF     		.align	2
 3126              	.L281:
 3127 0070 94020000 		.word	.LC25
 3128 0074 B0020000 		.word	.LC26
 3129              		.cfi_endproc
 3130              	.LFE154:
 3132              		.section	.text.shellSetVar,"ax",%progbits
 3133              		.align	2
 3134              		.global	shellSetVar
 3135              		.thumb
 3136              		.thumb_func
 3138              	shellSetVar:
 3139              	.LFB156:
1132:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 3140              		.loc 1 1132 0
 3141              		.cfi_startproc
 3142              		@ args = 0, pretend = 0, frame = 0
 3143              		@ frame_needed = 0, uses_anonymous_args = 0
 3144              	.LVL383:
 3145 0000 70B5     		push	{r4, r5, r6, lr}
 3146              	.LCFI52:
 3147              		.cfi_def_cfa_offset 16
 3148              		.cfi_offset 4, -16
 3149              		.cfi_offset 5, -12
 3150              		.cfi_offset 6, -8
 3151              		.cfi_offset 14, -4
 3152 0002 0546     		mov	r5, r0
 3153 0004 0E46     		mov	r6, r1
1133:Dsp/letter_shell/shell.c ****     if (shell == NULL)
 3154              		.loc 1 1133 0
 3155 0006 FFF7FEFF 		bl	shellGetCurrent
 3156              	.LVL384:
1134:Dsp/letter_shell/shell.c ****     {
 3157              		.loc 1 1134 0
 3158 000a 20B3     		cbz	r0, .L287
 3159 000c 0446     		mov	r4, r0
1138:Dsp/letter_shell/shell.c ****                                              name,
 3160              		.loc 1 1138 0
 3161 000e 0023     		movs	r3, #0
 3162 0010 826D     		ldr	r2, [r0, #88]
 3163 0012 2946     		mov	r1, r5
 3164 0014 FFF7FEFF 		bl	shellSeekCommand
 3165              	.LVL385:
1142:Dsp/letter_shell/shell.c ****     {
 3166              		.loc 1 1142 0
 3167 0018 0146     		mov	r1, r0
 3168 001a 28B9     		cbnz	r0, .L285
1144:Dsp/letter_shell/shell.c ****         return 0;
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 86


 3169              		.loc 1 1144 0
 3170 001c 0F49     		ldr	r1, .L289
 3171 001e 2046     		mov	r0, r4
 3172              	.LVL386:
 3173 0020 FFF7FEFF 		bl	shellWriteString
 3174              	.LVL387:
1145:Dsp/letter_shell/shell.c ****     }
 3175              		.loc 1 1145 0
 3176 0024 0020     		movs	r0, #0
 3177 0026 70BD     		pop	{r4, r5, r6, pc}
 3178              	.LVL388:
 3179              	.L285:
1147:Dsp/letter_shell/shell.c ****         || command->attr.attrs.type > SHELL_TYPE_VAR_NODE)
 3180              		.loc 1 1147 0
 3181 0028 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 3182 002a 03F00F03 		and	r3, r3, #15
1148:Dsp/letter_shell/shell.c ****     {
 3183              		.loc 1 1148 0
 3184 002e 0E33     		adds	r3, r3, #14
 3185 0030 03F00F03 		and	r3, r3, #15
1147:Dsp/letter_shell/shell.c ****         || command->attr.attrs.type > SHELL_TYPE_VAR_NODE)
 3186              		.loc 1 1147 0
 3187 0034 052B     		cmp	r3, #5
 3188 0036 09D9     		bls	.L286
1150:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_NOT_VAR]);
 3189              		.loc 1 1150 0
 3190 0038 2946     		mov	r1, r5
 3191 003a 2046     		mov	r0, r4
 3192              	.LVL389:
 3193 003c FFF7FEFF 		bl	shellWriteString
 3194              	.LVL390:
1151:Dsp/letter_shell/shell.c ****         return 0;
 3195              		.loc 1 1151 0
 3196 0040 0749     		ldr	r1, .L289+4
 3197 0042 2046     		mov	r0, r4
 3198 0044 FFF7FEFF 		bl	shellWriteString
 3199              	.LVL391:
1152:Dsp/letter_shell/shell.c ****     }
 3200              		.loc 1 1152 0
 3201 0048 0020     		movs	r0, #0
 3202 004a 70BD     		pop	{r4, r5, r6, pc}
 3203              	.LVL392:
 3204              	.L286:
1154:Dsp/letter_shell/shell.c **** }
 3205              		.loc 1 1154 0
 3206 004c 3246     		mov	r2, r6
 3207 004e 2046     		mov	r0, r4
 3208              	.LVL393:
 3209 0050 FFF7FEFF 		bl	shellSetVarValue
 3210              	.LVL394:
 3211 0054 70BD     		pop	{r4, r5, r6, pc}
 3212              	.LVL395:
 3213              	.L287:
1136:Dsp/letter_shell/shell.c ****     }
 3214              		.loc 1 1136 0
 3215 0056 0020     		movs	r0, #0
 3216              	.LVL396:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 87


1155:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
 3217              		.loc 1 1155 0
 3218 0058 70BD     		pop	{r4, r5, r6, pc}
 3219              	.LVL397:
 3220              	.L290:
 3221 005a 00BF     		.align	2
 3222              	.L289:
 3223 005c C4020000 		.word	.LC27
 3224 0060 D4020000 		.word	.LC28
 3225              		.cfi_endproc
 3226              	.LFE156:
 3228              		.section	.text.shellRunCommand,"ax",%progbits
 3229              		.align	2
 3230              		.global	shellRunCommand
 3231              		.thumb
 3232              		.thumb_func
 3234              	shellRunCommand:
 3235              	.LFB157:
1170:Dsp/letter_shell/shell.c ****     int returnValue = 0;
 3236              		.loc 1 1170 0
 3237              		.cfi_startproc
 3238              		@ args = 0, pretend = 0, frame = 0
 3239              		@ frame_needed = 0, uses_anonymous_args = 0
 3240              	.LVL398:
 3241 0000 70B5     		push	{r4, r5, r6, lr}
 3242              	.LCFI53:
 3243              		.cfi_def_cfa_offset 16
 3244              		.cfi_offset 4, -16
 3245              		.cfi_offset 5, -12
 3246              		.cfi_offset 6, -8
 3247              		.cfi_offset 14, -4
 3248 0002 0446     		mov	r4, r0
 3249 0004 0D46     		mov	r5, r1
 3250              	.LVL399:
1172:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type == SHELL_TYPE_CMD_MAIN)
 3251              		.loc 1 1172 0
 3252 0006 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 3253 000a 43F00203 		orr	r3, r3, #2
 3254 000e 80F86030 		strb	r3, [r0, #96]
1173:Dsp/letter_shell/shell.c ****     {
 3255              		.loc 1 1173 0
 3256 0012 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3257 0014 13F00F03 		ands	r3, r3, #15
 3258 0018 10D1     		bne	.L292
1175:Dsp/letter_shell/shell.c ****         returnValue = command->data.cmd.function(shell->parser.paramCount,
 3259              		.loc 1 1175 0
 3260 001a FFF7FEFF 		bl	shellRemoveParamQuotes
 3261              	.LVL400:
1176:Dsp/letter_shell/shell.c ****                                                  shell->parser.param);
 3262              		.loc 1 1176 0
 3263 001e AB68     		ldr	r3, [r5, #8]
 3264 0020 04F11401 		add	r1, r4, #20
 3265 0024 E08E     		ldrh	r0, [r4, #54]
 3266 0026 9847     		blx	r3
 3267              	.LVL401:
 3268 0028 0646     		mov	r6, r0
 3269              	.LVL402:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 88


1178:Dsp/letter_shell/shell.c ****         {
 3270              		.loc 1 1178 0
 3271 002a 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3272 002c 13F0200F 		tst	r3, #32
 3273 0030 28D1     		bne	.L293
1180:Dsp/letter_shell/shell.c ****         }
 3274              		.loc 1 1180 0
 3275 0032 0146     		mov	r1, r0
 3276 0034 2046     		mov	r0, r4
 3277              	.LVL403:
 3278 0036 FFF7FEFF 		bl	shellWriteReturnValue
 3279              	.LVL404:
 3280 003a 23E0     		b	.L293
 3281              	.LVL405:
 3282              	.L292:
1183:Dsp/letter_shell/shell.c ****     {
 3283              		.loc 1 1183 0
 3284 003c 012B     		cmp	r3, #1
 3285 003e 0ED1     		bne	.L294
1185:Dsp/letter_shell/shell.c ****                                   command,
 3286              		.loc 1 1185 0
 3287 0040 00F11403 		add	r3, r0, #20
 3288 0044 C28E     		ldrh	r2, [r0, #54]
 3289 0046 FFF7FEFF 		bl	shellExtRun
 3290              	.LVL406:
 3291 004a 0646     		mov	r6, r0
 3292              	.LVL407:
1189:Dsp/letter_shell/shell.c ****         {
 3293              		.loc 1 1189 0
 3294 004c 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3295 004e 13F0200F 		tst	r3, #32
 3296 0052 17D1     		bne	.L293
1191:Dsp/letter_shell/shell.c ****         }
 3297              		.loc 1 1191 0
 3298 0054 0146     		mov	r1, r0
 3299 0056 2046     		mov	r0, r4
 3300              	.LVL408:
 3301 0058 FFF7FEFF 		bl	shellWriteReturnValue
 3302              	.LVL409:
 3303 005c 12E0     		b	.L293
 3304              	.LVL410:
 3305              	.L294:
1194:Dsp/letter_shell/shell.c ****         && command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 3306              		.loc 1 1194 0
 3307 005e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 3308 0060 02F00F02 		and	r2, r2, #15
1195:Dsp/letter_shell/shell.c ****     {
 3309              		.loc 1 1195 0
 3310 0064 0E32     		adds	r2, r2, #14
 3311 0066 02F00F02 		and	r2, r2, #15
1194:Dsp/letter_shell/shell.c ****         && command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 3312              		.loc 1 1194 0
 3313 006a 052A     		cmp	r2, #5
 3314 006c 03D8     		bhi	.L295
1197:Dsp/letter_shell/shell.c ****     }
 3315              		.loc 1 1197 0
 3316 006e FFF7FEFF 		bl	shellShowVar
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 89


 3317              	.LVL411:
1171:Dsp/letter_shell/shell.c ****     shell->status.isActive = 1;
 3318              		.loc 1 1171 0
 3319 0072 0026     		movs	r6, #0
 3320 0074 06E0     		b	.L293
 3321              	.LVL412:
 3322              	.L295:
1199:Dsp/letter_shell/shell.c ****     {
 3323              		.loc 1 1199 0
 3324 0076 082B     		cmp	r3, #8
 3325 0078 03D1     		bne	.L296
1201:Dsp/letter_shell/shell.c ****     }
 3326              		.loc 1 1201 0
 3327 007a FFF7FEFF 		bl	shellSetUser
 3328              	.LVL413:
1171:Dsp/letter_shell/shell.c ****     shell->status.isActive = 1;
 3329              		.loc 1 1171 0
 3330 007e 0026     		movs	r6, #0
 3331 0080 00E0     		b	.L293
 3332              	.LVL414:
 3333              	.L296:
 3334 0082 0026     		movs	r6, #0
 3335              	.LVL415:
 3336              	.L293:
1203:Dsp/letter_shell/shell.c **** 
 3337              		.loc 1 1203 0
 3338 0084 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 3339 0088 6FF34103 		bfc	r3, #1, #1
 3340 008c 84F86030 		strb	r3, [r4, #96]
1206:Dsp/letter_shell/shell.c **** 
 3341              		.loc 1 1206 0
 3342 0090 3046     		mov	r0, r6
 3343 0092 70BD     		pop	{r4, r5, r6, pc}
 3344              		.cfi_endproc
 3345              	.LFE157:
 3347              		.section	.text.shellNormalInput,"ax",%progbits
 3348              		.align	2
 3349              		.global	shellNormalInput
 3350              		.thumb
 3351              		.thumb_func
 3353              	shellNormalInput:
 3354              	.LFB163:
1357:Dsp/letter_shell/shell.c ****     }
1358:Dsp/letter_shell/shell.c ****     
1359:Dsp/letter_shell/shell.c **** }
1360:Dsp/letter_shell/shell.c **** 
1361:Dsp/letter_shell/shell.c **** 
1362:Dsp/letter_shell/shell.c **** /**
1363:Dsp/letter_shell/shell.c ****  * @brief shell 常规输入
1364:Dsp/letter_shell/shell.c ****  * 
1365:Dsp/letter_shell/shell.c ****  * @param shell shell 对象
1366:Dsp/letter_shell/shell.c ****  * @param data 输入字符
1367:Dsp/letter_shell/shell.c ****  */
1368:Dsp/letter_shell/shell.c **** void shellNormalInput(Shell *shell, char data)
1369:Dsp/letter_shell/shell.c **** {
 3355              		.loc 1 1369 0
 3356              		.cfi_startproc
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 90


 3357              		@ args = 0, pretend = 0, frame = 0
 3358              		@ frame_needed = 0, uses_anonymous_args = 0
 3359              	.LVL416:
 3360 0000 08B5     		push	{r3, lr}
 3361              	.LCFI54:
 3362              		.cfi_def_cfa_offset 8
 3363              		.cfi_offset 3, -8
 3364              		.cfi_offset 14, -4
1370:Dsp/letter_shell/shell.c ****     shell->status.tabFlag = 0;
 3365              		.loc 1 1370 0
 3366 0002 90F86020 		ldrb	r2, [r0, #96]	@ zero_extendqisi2
 3367 0006 6FF38202 		bfc	r2, #2, #1
 3368 000a 80F86020 		strb	r2, [r0, #96]
1371:Dsp/letter_shell/shell.c ****     shellInsertByte(shell, data);
 3369              		.loc 1 1371 0
 3370 000e FFF7FEFF 		bl	shellInsertByte
 3371              	.LVL417:
 3372 0012 08BD     		pop	{r3, pc}
 3373              		.cfi_endproc
 3374              	.LFE163:
 3376              		.section	.text.shellExec,"ax",%progbits
 3377              		.align	2
 3378              		.global	shellExec
 3379              		.thumb
 3380              		.thumb_func
 3382              	shellExec:
 3383              	.LFB164:
1372:Dsp/letter_shell/shell.c **** }
1373:Dsp/letter_shell/shell.c **** 
1374:Dsp/letter_shell/shell.c **** 
1375:Dsp/letter_shell/shell.c **** /**
1376:Dsp/letter_shell/shell.c ****  * @brief shell运行命令
1377:Dsp/letter_shell/shell.c ****  * 
1378:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1379:Dsp/letter_shell/shell.c ****  */
1380:Dsp/letter_shell/shell.c **** void shellExec(Shell *shell)
1381:Dsp/letter_shell/shell.c **** {
 3384              		.loc 1 1381 0
 3385              		.cfi_startproc
 3386              		@ args = 0, pretend = 0, frame = 0
 3387              		@ frame_needed = 0, uses_anonymous_args = 0
 3388              	.LVL418:
1382:Dsp/letter_shell/shell.c ****     
1383:Dsp/letter_shell/shell.c ****     if (shell->parser.length == 0)
 3389              		.loc 1 1383 0
 3390 0000 8389     		ldrh	r3, [r0, #12]
 3391 0002 5BB3     		cbz	r3, .L305
1381:Dsp/letter_shell/shell.c ****     
 3392              		.loc 1 1381 0
 3393 0004 10B5     		push	{r4, lr}
 3394              	.LCFI55:
 3395              		.cfi_def_cfa_offset 8
 3396              		.cfi_offset 4, -8
 3397              		.cfi_offset 14, -4
 3398 0006 0446     		mov	r4, r0
1384:Dsp/letter_shell/shell.c ****     {
1385:Dsp/letter_shell/shell.c ****         return;
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 91


1386:Dsp/letter_shell/shell.c ****     }
1387:Dsp/letter_shell/shell.c **** 
1388:Dsp/letter_shell/shell.c ****     shell->parser.buffer[shell->parser.length] = 0;
 3399              		.loc 1 1388 0
 3400 0008 0269     		ldr	r2, [r0, #16]
 3401 000a 0021     		movs	r1, #0
 3402 000c D154     		strb	r1, [r2, r3]
1389:Dsp/letter_shell/shell.c **** 
1390:Dsp/letter_shell/shell.c ****     if (shell->status.isChecked)
 3403              		.loc 1 1390 0
 3404 000e 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 3405 0012 13F0010F 		tst	r3, #1
 3406 0016 1ED0     		beq	.L302
 3407              	.LBB24:
1391:Dsp/letter_shell/shell.c ****     {
1392:Dsp/letter_shell/shell.c ****         shellHistoryAdd(shell);
 3408              		.loc 1 1392 0
 3409 0018 FFF7FEFF 		bl	shellHistoryAdd
 3410              	.LVL419:
1393:Dsp/letter_shell/shell.c ****         shellParserParam(shell);
 3411              		.loc 1 1393 0
 3412 001c 2046     		mov	r0, r4
 3413 001e FFF7FEFF 		bl	shellParserParam
 3414              	.LVL420:
1394:Dsp/letter_shell/shell.c ****         shell->parser.length = shell->parser.cursor = 0;
 3415              		.loc 1 1394 0
 3416 0022 0023     		movs	r3, #0
 3417 0024 E381     		strh	r3, [r4, #14]	@ movhi
 3418 0026 A381     		strh	r3, [r4, #12]	@ movhi
1395:Dsp/letter_shell/shell.c ****         if (shell->parser.paramCount == 0)
 3419              		.loc 1 1395 0
 3420 0028 E38E     		ldrh	r3, [r4, #54]
 3421 002a B3B1     		cbz	r3, .L300
1396:Dsp/letter_shell/shell.c ****         {
1397:Dsp/letter_shell/shell.c ****             return;
1398:Dsp/letter_shell/shell.c ****         }
1399:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 3422              		.loc 1 1399 0
 3423 002c 0C49     		ldr	r1, .L306
 3424 002e 2046     		mov	r0, r4
 3425 0030 FFF7FEFF 		bl	shellWriteString
 3426              	.LVL421:
1400:Dsp/letter_shell/shell.c **** 
1401:Dsp/letter_shell/shell.c ****         ShellCommand *command = shellSeekCommand(shell,
 3427              		.loc 1 1401 0
 3428 0034 0023     		movs	r3, #0
 3429 0036 A26D     		ldr	r2, [r4, #88]
 3430 0038 6169     		ldr	r1, [r4, #20]
 3431 003a 2046     		mov	r0, r4
 3432 003c FFF7FEFF 		bl	shellSeekCommand
 3433              	.LVL422:
1402:Dsp/letter_shell/shell.c ****                                                  shell->parser.param[0],
1403:Dsp/letter_shell/shell.c ****                                                  shell->commandList.base,
1404:Dsp/letter_shell/shell.c ****                                                  0);
1405:Dsp/letter_shell/shell.c ****         if (command != NULL)
 3434              		.loc 1 1405 0
 3435 0040 0146     		mov	r1, r0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 92


 3436 0042 18B1     		cbz	r0, .L303
1406:Dsp/letter_shell/shell.c ****         {
1407:Dsp/letter_shell/shell.c ****             shellRunCommand(shell, command);
 3437              		.loc 1 1407 0
 3438 0044 2046     		mov	r0, r4
 3439              	.LVL423:
 3440 0046 FFF7FEFF 		bl	shellRunCommand
 3441              	.LVL424:
 3442 004a 10BD     		pop	{r4, pc}
 3443              	.LVL425:
 3444              	.L303:
1408:Dsp/letter_shell/shell.c ****         }
1409:Dsp/letter_shell/shell.c ****         else
1410:Dsp/letter_shell/shell.c ****         {
1411:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_CMD_NOT_FOUND]);
 3445              		.loc 1 1411 0
 3446 004c 0549     		ldr	r1, .L306+4
 3447 004e 2046     		mov	r0, r4
 3448              	.LVL426:
 3449 0050 FFF7FEFF 		bl	shellWriteString
 3450              	.LVL427:
 3451 0054 10BD     		pop	{r4, pc}
 3452              	.LVL428:
 3453              	.L302:
 3454              	.LBE24:
1412:Dsp/letter_shell/shell.c ****         }
1413:Dsp/letter_shell/shell.c ****     }
1414:Dsp/letter_shell/shell.c ****     else
1415:Dsp/letter_shell/shell.c ****     {
1416:Dsp/letter_shell/shell.c ****         shellCheckPassword(shell);
 3455              		.loc 1 1416 0
 3456 0056 FFF7FEFF 		bl	shellCheckPassword
 3457              	.LVL429:
 3458              	.L300:
 3459 005a 10BD     		pop	{r4, pc}
 3460              	.LVL430:
 3461              	.L305:
 3462              	.LCFI56:
 3463              		.cfi_def_cfa_offset 0
 3464              		.cfi_restore 4
 3465              		.cfi_restore 14
 3466 005c 7047     		bx	lr
 3467              	.L307:
 3468 005e 00BF     		.align	2
 3469              	.L306:
 3470 0060 A0010000 		.word	.LC3
 3471 0064 E4020000 		.word	.LC29
 3472              		.cfi_endproc
 3473              	.LFE164:
 3475              		.section	.text.shellUp,"ax",%progbits
 3476              		.align	2
 3477              		.global	shellUp
 3478              		.thumb
 3479              		.thumb_func
 3481              	shellUp:
 3482              	.LFB165:
1417:Dsp/letter_shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 93


1418:Dsp/letter_shell/shell.c **** }
1419:Dsp/letter_shell/shell.c **** 
1420:Dsp/letter_shell/shell.c **** 
1421:Dsp/letter_shell/shell.c **** /**
1422:Dsp/letter_shell/shell.c ****  * @brief shell上方向键输入
1423:Dsp/letter_shell/shell.c ****  * 
1424:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1425:Dsp/letter_shell/shell.c ****  */
1426:Dsp/letter_shell/shell.c **** void shellUp(Shell *shell)
1427:Dsp/letter_shell/shell.c **** {
 3483              		.loc 1 1427 0
 3484              		.cfi_startproc
 3485              		@ args = 0, pretend = 0, frame = 0
 3486              		@ frame_needed = 0, uses_anonymous_args = 0
 3487              	.LVL431:
 3488 0000 08B5     		push	{r3, lr}
 3489              	.LCFI57:
 3490              		.cfi_def_cfa_offset 8
 3491              		.cfi_offset 3, -8
 3492              		.cfi_offset 14, -4
1428:Dsp/letter_shell/shell.c ****     shellHistory(shell, 1);
 3493              		.loc 1 1428 0
 3494 0002 0121     		movs	r1, #1
 3495 0004 FFF7FEFF 		bl	shellHistory
 3496              	.LVL432:
 3497 0008 08BD     		pop	{r3, pc}
 3498              		.cfi_endproc
 3499              	.LFE165:
 3501 000a 00BF     		.section	.text.shellDown,"ax",%progbits
 3502              		.align	2
 3503              		.global	shellDown
 3504              		.thumb
 3505              		.thumb_func
 3507              	shellDown:
 3508              	.LFB166:
1429:Dsp/letter_shell/shell.c **** }
1430:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x1B5B4100, shellUp, up);
1431:Dsp/letter_shell/shell.c **** 
1432:Dsp/letter_shell/shell.c **** 
1433:Dsp/letter_shell/shell.c **** /**
1434:Dsp/letter_shell/shell.c ****  * @brief shell下方向键输入
1435:Dsp/letter_shell/shell.c ****  * 
1436:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1437:Dsp/letter_shell/shell.c ****  */
1438:Dsp/letter_shell/shell.c **** void shellDown(Shell *shell)
1439:Dsp/letter_shell/shell.c **** {
 3509              		.loc 1 1439 0
 3510              		.cfi_startproc
 3511              		@ args = 0, pretend = 0, frame = 0
 3512              		@ frame_needed = 0, uses_anonymous_args = 0
 3513              	.LVL433:
 3514 0000 08B5     		push	{r3, lr}
 3515              	.LCFI58:
 3516              		.cfi_def_cfa_offset 8
 3517              		.cfi_offset 3, -8
 3518              		.cfi_offset 14, -4
1440:Dsp/letter_shell/shell.c ****     shellHistory(shell, -1);
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 94


 3519              		.loc 1 1440 0
 3520 0002 4FF0FF31 		mov	r1, #-1
 3521 0006 FFF7FEFF 		bl	shellHistory
 3522              	.LVL434:
 3523 000a 08BD     		pop	{r3, pc}
 3524              		.cfi_endproc
 3525              	.LFE166:
 3527              		.section	.text.shellRight,"ax",%progbits
 3528              		.align	2
 3529              		.global	shellRight
 3530              		.thumb
 3531              		.thumb_func
 3533              	shellRight:
 3534              	.LFB167:
1441:Dsp/letter_shell/shell.c **** }
1442:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x1B5B4200, shellDown, down);
1443:Dsp/letter_shell/shell.c **** 
1444:Dsp/letter_shell/shell.c **** 
1445:Dsp/letter_shell/shell.c **** /**
1446:Dsp/letter_shell/shell.c ****  * @brief shell右方向键输入
1447:Dsp/letter_shell/shell.c ****  * 
1448:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1449:Dsp/letter_shell/shell.c ****  */
1450:Dsp/letter_shell/shell.c **** void shellRight(Shell *shell)
1451:Dsp/letter_shell/shell.c **** {
 3535              		.loc 1 1451 0
 3536              		.cfi_startproc
 3537              		@ args = 0, pretend = 0, frame = 0
 3538              		@ frame_needed = 0, uses_anonymous_args = 0
 3539              	.LVL435:
 3540 0000 08B5     		push	{r3, lr}
 3541              	.LCFI59:
 3542              		.cfi_def_cfa_offset 8
 3543              		.cfi_offset 3, -8
 3544              		.cfi_offset 14, -4
1452:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor < shell->parser.length)
 3545              		.loc 1 1452 0
 3546 0002 C389     		ldrh	r3, [r0, #14]
 3547 0004 8289     		ldrh	r2, [r0, #12]
 3548 0006 9342     		cmp	r3, r2
 3549 0008 05D2     		bcs	.L312
1453:Dsp/letter_shell/shell.c ****     {
1454:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, shell->parser.buffer[shell->parser.cursor++]);
 3550              		.loc 1 1454 0
 3551 000a 0269     		ldr	r2, [r0, #16]
 3552 000c 591C     		adds	r1, r3, #1
 3553 000e C181     		strh	r1, [r0, #14]	@ movhi
 3554 0010 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 3555 0012 FFF7FEFF 		bl	shellWriteByte
 3556              	.LVL436:
 3557              	.L312:
 3558 0016 08BD     		pop	{r3, pc}
 3559              		.cfi_endproc
 3560              	.LFE167:
 3562              		.section	.text.shellLeft,"ax",%progbits
 3563              		.align	2
 3564              		.global	shellLeft
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 95


 3565              		.thumb
 3566              		.thumb_func
 3568              	shellLeft:
 3569              	.LFB168:
1455:Dsp/letter_shell/shell.c ****     }
1456:Dsp/letter_shell/shell.c **** }
1457:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1458:Dsp/letter_shell/shell.c **** 0x1B5B4300, shellRight, right);
1459:Dsp/letter_shell/shell.c **** 
1460:Dsp/letter_shell/shell.c **** 
1461:Dsp/letter_shell/shell.c **** /**
1462:Dsp/letter_shell/shell.c ****  * @brief shell左方向键输入
1463:Dsp/letter_shell/shell.c ****  * 
1464:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1465:Dsp/letter_shell/shell.c ****  */
1466:Dsp/letter_shell/shell.c **** void shellLeft(Shell *shell)
1467:Dsp/letter_shell/shell.c **** {
 3570              		.loc 1 1467 0
 3571              		.cfi_startproc
 3572              		@ args = 0, pretend = 0, frame = 0
 3573              		@ frame_needed = 0, uses_anonymous_args = 0
 3574              	.LVL437:
1468:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor > 0)
 3575              		.loc 1 1468 0
 3576 0000 C389     		ldrh	r3, [r0, #14]
 3577 0002 43B1     		cbz	r3, .L318
1467:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor > 0)
 3578              		.loc 1 1467 0
 3579 0004 10B5     		push	{r4, lr}
 3580              	.LCFI60:
 3581              		.cfi_def_cfa_offset 8
 3582              		.cfi_offset 4, -8
 3583              		.cfi_offset 14, -4
 3584 0006 0446     		mov	r4, r0
1469:Dsp/letter_shell/shell.c ****     {
1470:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, '\b');
 3585              		.loc 1 1470 0
 3586 0008 0821     		movs	r1, #8
 3587 000a FFF7FEFF 		bl	shellWriteByte
 3588              	.LVL438:
1471:Dsp/letter_shell/shell.c ****         shell->parser.cursor--;
 3589              		.loc 1 1471 0
 3590 000e E389     		ldrh	r3, [r4, #14]
 3591 0010 013B     		subs	r3, r3, #1
 3592 0012 E381     		strh	r3, [r4, #14]	@ movhi
 3593 0014 10BD     		pop	{r4, pc}
 3594              	.LVL439:
 3595              	.L318:
 3596              	.LCFI61:
 3597              		.cfi_def_cfa_offset 0
 3598              		.cfi_restore 4
 3599              		.cfi_restore 14
 3600 0016 7047     		bx	lr
 3601              		.cfi_endproc
 3602              	.LFE168:
 3604              		.section	.text.shellTab,"ax",%progbits
 3605              		.align	2
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 96


 3606              		.global	shellTab
 3607              		.thumb
 3608              		.thumb_func
 3610              	shellTab:
 3611              	.LFB169:
1472:Dsp/letter_shell/shell.c ****     }
1473:Dsp/letter_shell/shell.c **** }
1474:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1475:Dsp/letter_shell/shell.c **** 0x1B5B4400, shellLeft, left);
1476:Dsp/letter_shell/shell.c **** 
1477:Dsp/letter_shell/shell.c **** 
1478:Dsp/letter_shell/shell.c **** /**
1479:Dsp/letter_shell/shell.c ****  * @brief shell Tab按键处理
1480:Dsp/letter_shell/shell.c ****  * 
1481:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1482:Dsp/letter_shell/shell.c ****  */
1483:Dsp/letter_shell/shell.c **** void shellTab(Shell *shell)
1484:Dsp/letter_shell/shell.c **** {
 3612              		.loc 1 1484 0
 3613              		.cfi_startproc
 3614              		@ args = 0, pretend = 0, frame = 0
 3615              		@ frame_needed = 0, uses_anonymous_args = 0
 3616              	.LVL440:
 3617 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3618              	.LCFI62:
 3619              		.cfi_def_cfa_offset 40
 3620              		.cfi_offset 3, -40
 3621              		.cfi_offset 4, -36
 3622              		.cfi_offset 5, -32
 3623              		.cfi_offset 6, -28
 3624              		.cfi_offset 7, -24
 3625              		.cfi_offset 8, -20
 3626              		.cfi_offset 9, -16
 3627              		.cfi_offset 10, -12
 3628              		.cfi_offset 11, -8
 3629              		.cfi_offset 14, -4
 3630 0004 0546     		mov	r5, r0
1485:Dsp/letter_shell/shell.c ****     unsigned short maxMatch = shell->parser.bufferSize;
 3631              		.loc 1 1485 0
 3632 0006 B0F834A0 		ldrh	r10, [r0, #52]
 3633              	.LVL441:
1486:Dsp/letter_shell/shell.c ****     unsigned short lastMatchIndex = 0;
1487:Dsp/letter_shell/shell.c ****     unsigned short matchNum = 0;
1488:Dsp/letter_shell/shell.c ****     unsigned short length;
1489:Dsp/letter_shell/shell.c **** 
1490:Dsp/letter_shell/shell.c ****     if (shell->parser.length == 0)
 3634              		.loc 1 1490 0
 3635 000a 8389     		ldrh	r3, [r0, #12]
 3636 000c 3BB9     		cbnz	r3, .L320
1491:Dsp/letter_shell/shell.c ****     {
1492:Dsp/letter_shell/shell.c ****         shellListAll(shell);
 3637              		.loc 1 1492 0
 3638 000e FFF7FEFF 		bl	shellListAll
 3639              	.LVL442:
1493:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 1);
 3640              		.loc 1 1493 0
 3641 0012 0121     		movs	r1, #1
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 97


 3642 0014 2846     		mov	r0, r5
 3643 0016 FFF7FEFF 		bl	shellWriteCommandLine
 3644              	.LVL443:
 3645 001a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3646              	.LVL444:
 3647              	.L320:
1494:Dsp/letter_shell/shell.c ****     }
1495:Dsp/letter_shell/shell.c ****     else if (shell->parser.length > 0)
 3648              		.loc 1 1495 0
 3649 001e 002B     		cmp	r3, #0
 3650 0020 75D0     		beq	.L319
 3651              	.LBB25:
1496:Dsp/letter_shell/shell.c ****     {
1497:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 3652              		.loc 1 1497 0
 3653 0022 0269     		ldr	r2, [r0, #16]
 3654 0024 4FF00008 		mov	r8, #0
 3655 0028 02F80380 		strb	r8, [r2, r3]
1498:Dsp/letter_shell/shell.c ****         ShellCommand *base = (ShellCommand *)shell->commandList.base;
 3656              		.loc 1 1498 0
 3657 002c 876D     		ldr	r7, [r0, #88]
 3658              	.LVL445:
 3659              	.LBB26:
1499:Dsp/letter_shell/shell.c ****         for (short i = 0; i < shell->commandList.count; i++)
 3660              		.loc 1 1499 0
 3661 002e 4446     		mov	r4, r8
 3662              	.LBE26:
 3663              	.LBE25:
1487:Dsp/letter_shell/shell.c ****     unsigned short length;
 3664              		.loc 1 1487 0
 3665 0030 C146     		mov	r9, r8
 3666              	.LBB28:
 3667              	.LBB27:
 3668              		.loc 1 1499 0
 3669 0032 3AE0     		b	.L322
 3670              	.LVL446:
 3671              	.L326:
1500:Dsp/letter_shell/shell.c ****         {
1501:Dsp/letter_shell/shell.c ****             if (shellCheckPermission(shell, &base[i]) == 0
 3672              		.loc 1 1501 0
 3673 0034 07EB0416 		add	r6, r7, r4, lsl #4
 3674 0038 3146     		mov	r1, r6
 3675 003a 2846     		mov	r0, r5
 3676 003c FFF7FEFF 		bl	shellCheckPermission
 3677              	.LVL447:
 3678 0040 88BB     		cbnz	r0, .L323
1502:Dsp/letter_shell/shell.c ****                 && shellStringCompare(shell->parser.buffer,
 3679              		.loc 1 1502 0
 3680 0042 D5F810B0 		ldr	fp, [r5, #16]
1503:Dsp/letter_shell/shell.c ****                                    (char *)shellGetCommandName(&base[i]))
 3681              		.loc 1 1503 0
 3682 0046 3046     		mov	r0, r6
 3683 0048 FFF7FEFF 		bl	shellGetCommandName
 3684              	.LVL448:
1502:Dsp/letter_shell/shell.c ****                 && shellStringCompare(shell->parser.buffer,
 3685              		.loc 1 1502 0
 3686 004c 0146     		mov	r1, r0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 98


 3687 004e 5846     		mov	r0, fp
 3688 0050 FFF7FEFF 		bl	shellStringCompare
 3689              	.LVL449:
1504:Dsp/letter_shell/shell.c ****                         == shell->parser.length)
 3690              		.loc 1 1504 0
 3691 0054 AB89     		ldrh	r3, [r5, #12]
1502:Dsp/letter_shell/shell.c ****                 && shellStringCompare(shell->parser.buffer,
 3692              		.loc 1 1502 0
 3693 0056 9842     		cmp	r0, r3
 3694 0058 25D1     		bne	.L323
1505:Dsp/letter_shell/shell.c ****             {
1506:Dsp/letter_shell/shell.c ****                 if (matchNum != 0)
 3695              		.loc 1 1506 0
 3696 005a B9F1000F 		cmp	r9, #0
 3697 005e 1CD0     		beq	.L324
1507:Dsp/letter_shell/shell.c ****                 {
1508:Dsp/letter_shell/shell.c ****                     if (matchNum == 1)
 3698              		.loc 1 1508 0
 3699 0060 B9F1010F 		cmp	r9, #1
 3700 0064 03D1     		bne	.L325
1509:Dsp/letter_shell/shell.c ****                     {
1510:Dsp/letter_shell/shell.c ****                         shellWriteString(shell, "\r\n");
 3701              		.loc 1 1510 0
 3702 0066 2B49     		ldr	r1, .L331
 3703 0068 2846     		mov	r0, r5
 3704 006a FFF7FEFF 		bl	shellWriteString
 3705              	.LVL450:
 3706              	.L325:
1511:Dsp/letter_shell/shell.c ****                     }
1512:Dsp/letter_shell/shell.c ****                     shellListItem(shell, &base[lastMatchIndex]);
 3707              		.loc 1 1512 0
 3708 006e 07EB0818 		add	r8, r7, r8, lsl #4
 3709              	.LVL451:
 3710 0072 4146     		mov	r1, r8
 3711 0074 2846     		mov	r0, r5
 3712 0076 FFF7FEFF 		bl	shellListItem
 3713              	.LVL452:
1513:Dsp/letter_shell/shell.c ****                     length = 
1514:Dsp/letter_shell/shell.c ****                         shellStringCompare((char *)shellGetCommandName(&base[lastMatchIndex]),
 3714              		.loc 1 1514 0
 3715 007a 4046     		mov	r0, r8
 3716 007c FFF7FEFF 		bl	shellGetCommandName
 3717              	.LVL453:
 3718 0080 8046     		mov	r8, r0
1515:Dsp/letter_shell/shell.c ****                                            (char *)shellGetCommandName(&base[i]));
 3719              		.loc 1 1515 0
 3720 0082 3046     		mov	r0, r6
 3721 0084 FFF7FEFF 		bl	shellGetCommandName
 3722              	.LVL454:
1513:Dsp/letter_shell/shell.c ****                     length = 
 3723              		.loc 1 1513 0
 3724 0088 0146     		mov	r1, r0
 3725 008a 4046     		mov	r0, r8
 3726 008c FFF7FEFF 		bl	shellStringCompare
 3727              	.LVL455:
1516:Dsp/letter_shell/shell.c ****                     maxMatch = (maxMatch > length) ? length : maxMatch;
 3728              		.loc 1 1516 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 99


 3729 0090 5045     		cmp	r0, r10
 3730 0092 28BF     		it	cs
 3731 0094 5046     		movcs	r0, r10
 3732              	.LVL456:
 3733 0096 1FFA80FA 		uxth	r10, r0
 3734              	.LVL457:
 3735              	.L324:
1517:Dsp/letter_shell/shell.c ****                 }
1518:Dsp/letter_shell/shell.c ****                 lastMatchIndex = i;
 3736              		.loc 1 1518 0
 3737 009a 1FFA84F8 		uxth	r8, r4
 3738              	.LVL458:
1519:Dsp/letter_shell/shell.c ****                 matchNum++;
 3739              		.loc 1 1519 0
 3740 009e 09F10109 		add	r9, r9, #1
 3741              	.LVL459:
 3742 00a2 1FFA89F9 		uxth	r9, r9
 3743              	.LVL460:
 3744              	.L323:
1499:Dsp/letter_shell/shell.c ****         {
 3745              		.loc 1 1499 0 discriminator 2
 3746 00a6 0134     		adds	r4, r4, #1
 3747              	.LVL461:
 3748 00a8 24B2     		sxth	r4, r4
 3749              	.LVL462:
 3750              	.L322:
1499:Dsp/letter_shell/shell.c ****         {
 3751              		.loc 1 1499 0 is_stmt 0 discriminator 1
 3752 00aa B5F85C30 		ldrh	r3, [r5, #92]
 3753 00ae 9C42     		cmp	r4, r3
 3754 00b0 C0DB     		blt	.L326
 3755              	.LBE27:
1520:Dsp/letter_shell/shell.c ****             }
1521:Dsp/letter_shell/shell.c ****         }
1522:Dsp/letter_shell/shell.c ****         if (matchNum == 0)
 3756              		.loc 1 1522 0 is_stmt 1
 3757 00b2 B9F1000F 		cmp	r9, #0
 3758 00b6 2AD0     		beq	.L319
1523:Dsp/letter_shell/shell.c ****         {
1524:Dsp/letter_shell/shell.c ****             return;
1525:Dsp/letter_shell/shell.c ****         }
1526:Dsp/letter_shell/shell.c ****         if (matchNum == 1)
 3759              		.loc 1 1526 0
 3760 00b8 B9F1010F 		cmp	r9, #1
 3761 00bc 02D1     		bne	.L327
1527:Dsp/letter_shell/shell.c ****         {
1528:Dsp/letter_shell/shell.c ****             shellClearCommandLine(shell);
 3762              		.loc 1 1528 0
 3763 00be 2846     		mov	r0, r5
 3764 00c0 FFF7FEFF 		bl	shellClearCommandLine
 3765              	.LVL463:
 3766              	.L327:
1529:Dsp/letter_shell/shell.c ****         }
1530:Dsp/letter_shell/shell.c ****         if (matchNum != 0)
 3767              		.loc 1 1530 0
 3768 00c4 B9F1000F 		cmp	r9, #0
 3769 00c8 09D0     		beq	.L328
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 100


1531:Dsp/letter_shell/shell.c ****         {
1532:Dsp/letter_shell/shell.c ****             shell->parser.length = 
1533:Dsp/letter_shell/shell.c ****                 shellStringCopy(shell->parser.buffer,
 3770              		.loc 1 1533 0
 3771 00ca 2C69     		ldr	r4, [r5, #16]
 3772              	.LVL464:
1534:Dsp/letter_shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
 3773              		.loc 1 1534 0
 3774 00cc 07EB0810 		add	r0, r7, r8, lsl #4
 3775 00d0 FFF7FEFF 		bl	shellGetCommandName
 3776              	.LVL465:
1533:Dsp/letter_shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
 3777              		.loc 1 1533 0
 3778 00d4 0146     		mov	r1, r0
 3779 00d6 2046     		mov	r0, r4
 3780 00d8 FFF7FEFF 		bl	shellStringCopy
 3781              	.LVL466:
1532:Dsp/letter_shell/shell.c ****                 shellStringCopy(shell->parser.buffer,
 3782              		.loc 1 1532 0
 3783 00dc A881     		strh	r0, [r5, #12]	@ movhi
 3784              	.L328:
1535:Dsp/letter_shell/shell.c ****         }
1536:Dsp/letter_shell/shell.c ****         if (matchNum > 1)
 3785              		.loc 1 1536 0
 3786 00de B9F1010F 		cmp	r9, #1
 3787 00e2 0AD9     		bls	.L329
1537:Dsp/letter_shell/shell.c ****         {
1538:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[lastMatchIndex]);
 3788              		.loc 1 1538 0
 3789 00e4 07EB0811 		add	r1, r7, r8, lsl #4
 3790 00e8 2846     		mov	r0, r5
 3791 00ea FFF7FEFF 		bl	shellListItem
 3792              	.LVL467:
1539:Dsp/letter_shell/shell.c ****             shellWriteCommandLine(shell, 1);
 3793              		.loc 1 1539 0
 3794 00ee 0121     		movs	r1, #1
 3795 00f0 2846     		mov	r0, r5
 3796 00f2 FFF7FEFF 		bl	shellWriteCommandLine
 3797              	.LVL468:
1540:Dsp/letter_shell/shell.c ****             shell->parser.length = maxMatch;
 3798              		.loc 1 1540 0
 3799 00f6 A5F80CA0 		strh	r10, [r5, #12]	@ movhi
 3800              	.L329:
1541:Dsp/letter_shell/shell.c ****         }
1542:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 3801              		.loc 1 1542 0
 3802 00fa 2A69     		ldr	r2, [r5, #16]
 3803 00fc AB89     		ldrh	r3, [r5, #12]
 3804 00fe 0021     		movs	r1, #0
 3805 0100 D154     		strb	r1, [r2, r3]
1543:Dsp/letter_shell/shell.c ****         shell->parser.cursor = shell->parser.length;
 3806              		.loc 1 1543 0
 3807 0102 AB89     		ldrh	r3, [r5, #12]
 3808 0104 EB81     		strh	r3, [r5, #14]	@ movhi
1544:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 3809              		.loc 1 1544 0
 3810 0106 2969     		ldr	r1, [r5, #16]
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 101


 3811 0108 2846     		mov	r0, r5
 3812 010a FFF7FEFF 		bl	shellWriteString
 3813              	.LVL469:
 3814              	.L319:
 3815 010e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3816              	.LVL470:
 3817              	.L332:
 3818 0112 00BF     		.align	2
 3819              	.L331:
 3820 0114 A0010000 		.word	.LC3
 3821              	.LBE28:
 3822              		.cfi_endproc
 3823              	.LFE169:
 3825              		.section	.text.shellBackspace,"ax",%progbits
 3826              		.align	2
 3827              		.global	shellBackspace
 3828              		.thumb
 3829              		.thumb_func
 3831              	shellBackspace:
 3832              	.LFB170:
1545:Dsp/letter_shell/shell.c ****     }
1546:Dsp/letter_shell/shell.c **** 
1547:Dsp/letter_shell/shell.c ****     if (SHELL_GET_TICK())
1548:Dsp/letter_shell/shell.c ****     {
1549:Dsp/letter_shell/shell.c ****         if (matchNum == 1
1550:Dsp/letter_shell/shell.c ****             && shell->status.tabFlag
1551:Dsp/letter_shell/shell.c ****             && SHELL_GET_TICK() - shell->info.activeTime < SHELL_DOUBLE_CLICK_TIME)
1552:Dsp/letter_shell/shell.c ****         {
1553:Dsp/letter_shell/shell.c ****             shellClearCommandLine(shell);
1554:Dsp/letter_shell/shell.c ****             for (short i = shell->parser.length; i >= 0; i--)
1555:Dsp/letter_shell/shell.c ****             {
1556:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[i + 5] = shell->parser.buffer[i];
1557:Dsp/letter_shell/shell.c ****             }
1558:Dsp/letter_shell/shell.c ****             shellStringCopy(shell->parser.buffer, "help");
1559:Dsp/letter_shell/shell.c ****             shell->parser.buffer[4] = ' ';
1560:Dsp/letter_shell/shell.c ****             shell->parser.length += 5;
1561:Dsp/letter_shell/shell.c ****             shell->parser.cursor = shell->parser.length;
1562:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shell->parser.buffer);
1563:Dsp/letter_shell/shell.c ****         }
1564:Dsp/letter_shell/shell.c ****         else
1565:Dsp/letter_shell/shell.c ****         {
1566:Dsp/letter_shell/shell.c ****             shell->status.tabFlag = 1;
1567:Dsp/letter_shell/shell.c ****         }
1568:Dsp/letter_shell/shell.c ****     }
1569:Dsp/letter_shell/shell.c **** }
1570:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x09000000, shellTab, tab);
1571:Dsp/letter_shell/shell.c **** 
1572:Dsp/letter_shell/shell.c **** 
1573:Dsp/letter_shell/shell.c **** /**
1574:Dsp/letter_shell/shell.c ****  * @brief shell 退格
1575:Dsp/letter_shell/shell.c ****  * 
1576:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1577:Dsp/letter_shell/shell.c ****  */
1578:Dsp/letter_shell/shell.c **** void shellBackspace(Shell *shell)
1579:Dsp/letter_shell/shell.c **** {
 3833              		.loc 1 1579 0
 3834              		.cfi_startproc
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 102


 3835              		@ args = 0, pretend = 0, frame = 0
 3836              		@ frame_needed = 0, uses_anonymous_args = 0
 3837              	.LVL471:
 3838 0000 08B5     		push	{r3, lr}
 3839              	.LCFI63:
 3840              		.cfi_def_cfa_offset 8
 3841              		.cfi_offset 3, -8
 3842              		.cfi_offset 14, -4
1580:Dsp/letter_shell/shell.c ****     shellDeleteByte(shell, 1);
 3843              		.loc 1 1580 0
 3844 0002 0121     		movs	r1, #1
 3845 0004 FFF7FEFF 		bl	shellDeleteByte
 3846              	.LVL472:
 3847 0008 08BD     		pop	{r3, pc}
 3848              		.cfi_endproc
 3849              	.LFE170:
 3851 000a 00BF     		.section	.text.shellDelete,"ax",%progbits
 3852              		.align	2
 3853              		.global	shellDelete
 3854              		.thumb
 3855              		.thumb_func
 3857              	shellDelete:
 3858              	.LFB171:
1581:Dsp/letter_shell/shell.c **** }
1582:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1583:Dsp/letter_shell/shell.c **** 0x08000000, shellBackspace, backspace);
1584:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1585:Dsp/letter_shell/shell.c **** 0x7F000000, shellBackspace, backspace);
1586:Dsp/letter_shell/shell.c **** 
1587:Dsp/letter_shell/shell.c **** 
1588:Dsp/letter_shell/shell.c **** /**
1589:Dsp/letter_shell/shell.c ****  * @brief shell 删除
1590:Dsp/letter_shell/shell.c ****  * 
1591:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1592:Dsp/letter_shell/shell.c ****  */
1593:Dsp/letter_shell/shell.c **** void shellDelete(Shell *shell)
1594:Dsp/letter_shell/shell.c **** {
 3859              		.loc 1 1594 0
 3860              		.cfi_startproc
 3861              		@ args = 0, pretend = 0, frame = 0
 3862              		@ frame_needed = 0, uses_anonymous_args = 0
 3863              	.LVL473:
 3864 0000 08B5     		push	{r3, lr}
 3865              	.LCFI64:
 3866              		.cfi_def_cfa_offset 8
 3867              		.cfi_offset 3, -8
 3868              		.cfi_offset 14, -4
1595:Dsp/letter_shell/shell.c ****     shellDeleteByte(shell, -1);
 3869              		.loc 1 1595 0
 3870 0002 4FF0FF31 		mov	r1, #-1
 3871 0006 FFF7FEFF 		bl	shellDeleteByte
 3872              	.LVL474:
 3873 000a 08BD     		pop	{r3, pc}
 3874              		.cfi_endproc
 3875              	.LFE171:
 3877              		.section	.text.shellEnter,"ax",%progbits
 3878              		.align	2
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 103


 3879              		.global	shellEnter
 3880              		.thumb
 3881              		.thumb_func
 3883              	shellEnter:
 3884              	.LFB172:
1596:Dsp/letter_shell/shell.c **** }
1597:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1598:Dsp/letter_shell/shell.c **** 0x1B5B337E, shellDelete, delete);
1599:Dsp/letter_shell/shell.c **** 
1600:Dsp/letter_shell/shell.c **** 
1601:Dsp/letter_shell/shell.c **** /**
1602:Dsp/letter_shell/shell.c ****  * @brief shell 回车处理
1603:Dsp/letter_shell/shell.c ****  * 
1604:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1605:Dsp/letter_shell/shell.c ****  */
1606:Dsp/letter_shell/shell.c **** void shellEnter(Shell *shell)
1607:Dsp/letter_shell/shell.c **** {
 3885              		.loc 1 1607 0
 3886              		.cfi_startproc
 3887              		@ args = 0, pretend = 0, frame = 0
 3888              		@ frame_needed = 0, uses_anonymous_args = 0
 3889              	.LVL475:
 3890 0000 10B5     		push	{r4, lr}
 3891              	.LCFI65:
 3892              		.cfi_def_cfa_offset 8
 3893              		.cfi_offset 4, -8
 3894              		.cfi_offset 14, -4
 3895 0002 0446     		mov	r4, r0
1608:Dsp/letter_shell/shell.c ****     shellExec(shell);
 3896              		.loc 1 1608 0
 3897 0004 FFF7FEFF 		bl	shellExec
 3898              	.LVL476:
1609:Dsp/letter_shell/shell.c ****     shellWriteCommandLine(shell, 1);
 3899              		.loc 1 1609 0
 3900 0008 0121     		movs	r1, #1
 3901 000a 2046     		mov	r0, r4
 3902 000c FFF7FEFF 		bl	shellWriteCommandLine
 3903              	.LVL477:
 3904 0010 10BD     		pop	{r4, pc}
 3905              		.cfi_endproc
 3906              	.LFE172:
 3908 0012 00BF     		.section	.text.shellHelp,"ax",%progbits
 3909              		.align	2
 3910              		.global	shellHelp
 3911              		.thumb
 3912              		.thumb_func
 3914              	shellHelp:
 3915              	.LFB173:
1610:Dsp/letter_shell/shell.c **** }
1611:Dsp/letter_shell/shell.c **** #if SHELL_ENTER_LF == 1
1612:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1613:Dsp/letter_shell/shell.c **** 0x0A000000, shellEnter, enter);
1614:Dsp/letter_shell/shell.c **** #endif
1615:Dsp/letter_shell/shell.c **** #if SHELL_ENTER_CR == 1
1616:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1617:Dsp/letter_shell/shell.c **** 0x0D000000, shellEnter, enter);
1618:Dsp/letter_shell/shell.c **** #endif
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 104


1619:Dsp/letter_shell/shell.c **** #if SHELL_ENTER_CRLF == 1
1620:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1621:Dsp/letter_shell/shell.c **** 0x0D0A0000, shellEnter, enter);
1622:Dsp/letter_shell/shell.c **** #endif
1623:Dsp/letter_shell/shell.c **** 
1624:Dsp/letter_shell/shell.c **** 
1625:Dsp/letter_shell/shell.c **** /**
1626:Dsp/letter_shell/shell.c ****  * @brief shell help
1627:Dsp/letter_shell/shell.c ****  * 
1628:Dsp/letter_shell/shell.c ****  * @param argc 参数个数
1629:Dsp/letter_shell/shell.c ****  * @param argv 参数
1630:Dsp/letter_shell/shell.c ****  */
1631:Dsp/letter_shell/shell.c **** void shellHelp(int argc, char *argv[])
1632:Dsp/letter_shell/shell.c **** {
 3916              		.loc 1 1632 0
 3917              		.cfi_startproc
 3918              		@ args = 0, pretend = 0, frame = 0
 3919              		@ frame_needed = 0, uses_anonymous_args = 0
 3920              	.LVL478:
 3921 0000 70B5     		push	{r4, r5, r6, lr}
 3922              	.LCFI66:
 3923              		.cfi_def_cfa_offset 16
 3924              		.cfi_offset 4, -16
 3925              		.cfi_offset 5, -12
 3926              		.cfi_offset 6, -8
 3927              		.cfi_offset 14, -4
 3928 0002 0546     		mov	r5, r0
 3929 0004 0E46     		mov	r6, r1
1633:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 3930              		.loc 1 1633 0
 3931 0006 FFF7FEFF 		bl	shellGetCurrent
 3932              	.LVL479:
1634:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell, return);
 3933              		.loc 1 1634 0
 3934 000a 70B3     		cbz	r0, .L339
 3935 000c 0446     		mov	r4, r0
1635:Dsp/letter_shell/shell.c ****     if (argc == 1)
 3936              		.loc 1 1635 0
 3937 000e 012D     		cmp	r5, #1
 3938 0010 02D1     		bne	.L341
1636:Dsp/letter_shell/shell.c ****     {
1637:Dsp/letter_shell/shell.c ****         shellListAll(shell);
 3939              		.loc 1 1637 0
 3940 0012 FFF7FEFF 		bl	shellListAll
 3941              	.LVL480:
 3942 0016 70BD     		pop	{r4, r5, r6, pc}
 3943              	.LVL481:
 3944              	.L341:
1638:Dsp/letter_shell/shell.c ****     }
1639:Dsp/letter_shell/shell.c ****     else if (argc > 1)
 3945              		.loc 1 1639 0
 3946 0018 012D     		cmp	r5, #1
 3947 001a 26DD     		ble	.L339
 3948              	.LBB29:
1640:Dsp/letter_shell/shell.c ****     {
1641:Dsp/letter_shell/shell.c ****         ShellCommand *command = shellSeekCommand(shell,
 3949              		.loc 1 1641 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 105


 3950 001c 0023     		movs	r3, #0
 3951 001e 826D     		ldr	r2, [r0, #88]
 3952 0020 7168     		ldr	r1, [r6, #4]
 3953 0022 FFF7FEFF 		bl	shellSeekCommand
 3954              	.LVL482:
1642:Dsp/letter_shell/shell.c ****                                                  argv[1],
1643:Dsp/letter_shell/shell.c ****                                                  shell->commandList.base,
1644:Dsp/letter_shell/shell.c ****                                                  0);
1645:Dsp/letter_shell/shell.c ****         if (command)
 3955              		.loc 1 1645 0
 3956 0026 0546     		mov	r5, r0
 3957              	.LVL483:
 3958 0028 D8B1     		cbz	r0, .L342
1646:Dsp/letter_shell/shell.c ****         {
1647:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_HELP_HEADER]);
 3959              		.loc 1 1647 0
 3960 002a 1049     		ldr	r1, .L344
 3961 002c 2046     		mov	r0, r4
 3962              	.LVL484:
 3963 002e FFF7FEFF 		bl	shellWriteString
 3964              	.LVL485:
1648:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellGetCommandName(command));
 3965              		.loc 1 1648 0
 3966 0032 2846     		mov	r0, r5
 3967 0034 FFF7FEFF 		bl	shellGetCommandName
 3968              	.LVL486:
 3969 0038 0146     		mov	r1, r0
 3970 003a 2046     		mov	r0, r4
 3971 003c FFF7FEFF 		bl	shellWriteString
 3972              	.LVL487:
1649:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
 3973              		.loc 1 1649 0
 3974 0040 0B4E     		ldr	r6, .L344+4
 3975              	.LVL488:
 3976 0042 3146     		mov	r1, r6
 3977 0044 2046     		mov	r0, r4
 3978 0046 FFF7FEFF 		bl	shellWriteString
 3979              	.LVL489:
1650:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellGetCommandDesc(command));
 3980              		.loc 1 1650 0
 3981 004a 2846     		mov	r0, r5
 3982 004c FFF7FEFF 		bl	shellGetCommandDesc
 3983              	.LVL490:
 3984 0050 0146     		mov	r1, r0
 3985 0052 2046     		mov	r0, r4
 3986 0054 FFF7FEFF 		bl	shellWriteString
 3987              	.LVL491:
1651:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
 3988              		.loc 1 1651 0
 3989 0058 3146     		mov	r1, r6
 3990 005a 2046     		mov	r0, r4
 3991 005c FFF7FEFF 		bl	shellWriteString
 3992              	.LVL492:
 3993 0060 70BD     		pop	{r4, r5, r6, pc}
 3994              	.LVL493:
 3995              	.L342:
1652:Dsp/letter_shell/shell.c ****         }
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 106


1653:Dsp/letter_shell/shell.c ****         else
1654:Dsp/letter_shell/shell.c ****         {
1655:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_CMD_NOT_FOUND]);
 3996              		.loc 1 1655 0
 3997 0062 0449     		ldr	r1, .L344+8
 3998 0064 2046     		mov	r0, r4
 3999              	.LVL494:
 4000 0066 FFF7FEFF 		bl	shellWriteString
 4001              	.LVL495:
 4002              	.L339:
 4003 006a 70BD     		pop	{r4, r5, r6, pc}
 4004              	.LVL496:
 4005              	.L345:
 4006              		.align	2
 4007              	.L344:
 4008 006c F8020000 		.word	.LC30
 4009 0070 A0010000 		.word	.LC3
 4010 0074 E4020000 		.word	.LC29
 4011              	.LBE29:
 4012              		.cfi_endproc
 4013              	.LFE173:
 4015              		.section	.text.shellHandler,"ax",%progbits
 4016              		.align	2
 4017              		.global	shellHandler
 4018              		.thumb
 4019              		.thumb_func
 4021              	shellHandler:
 4022              	.LFB174:
1656:Dsp/letter_shell/shell.c ****         }
1657:Dsp/letter_shell/shell.c ****     }
1658:Dsp/letter_shell/shell.c **** }
1659:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1660:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_MAIN)|SHELL_CMD_DISABLE_RETURN,
1661:Dsp/letter_shell/shell.c **** help, shellHelp, show command info\r\nhelp [cmd]);
1662:Dsp/letter_shell/shell.c **** 
1663:Dsp/letter_shell/shell.c **** /**
1664:Dsp/letter_shell/shell.c ****  * @brief shell 输入处理
1665:Dsp/letter_shell/shell.c ****  * 
1666:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1667:Dsp/letter_shell/shell.c ****  * @param data 输入数据
1668:Dsp/letter_shell/shell.c ****  */
1669:Dsp/letter_shell/shell.c **** void shellHandler(Shell *shell, char data)
1670:Dsp/letter_shell/shell.c **** {
 4023              		.loc 1 1670 0
 4024              		.cfi_startproc
 4025              		@ args = 0, pretend = 0, frame = 0
 4026              		@ frame_needed = 0, uses_anonymous_args = 0
 4027              	.LVL497:
1671:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(data, return);
 4028              		.loc 1 1671 0
 4029 0000 0029     		cmp	r1, #0
 4030 0002 65D0     		beq	.L360
1670:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(data, return);
 4031              		.loc 1 1670 0
 4032 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4033              	.LCFI67:
 4034              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 107


 4035              		.cfi_offset 4, -32
 4036              		.cfi_offset 5, -28
 4037              		.cfi_offset 6, -24
 4038              		.cfi_offset 7, -20
 4039              		.cfi_offset 8, -16
 4040              		.cfi_offset 9, -12
 4041              		.cfi_offset 10, -8
 4042              		.cfi_offset 14, -4
 4043 0008 0646     		mov	r6, r0
 4044 000a 8A46     		mov	r10, r1
 4045              	.LVL498:
1672:Dsp/letter_shell/shell.c **** 
1673:Dsp/letter_shell/shell.c **** #if SHELL_LOCK_TIMEOUT > 0
1674:Dsp/letter_shell/shell.c ****     if (shell->info.user->data.user.password
1675:Dsp/letter_shell/shell.c ****         && strlen(shell->info.user->data.user.password) != 0
1676:Dsp/letter_shell/shell.c ****         && SHELL_GET_TICK())
1677:Dsp/letter_shell/shell.c ****     {
1678:Dsp/letter_shell/shell.c ****         if (SHELL_GET_TICK() - shell->info.activeTime > SHELL_LOCK_TIMEOUT)
1679:Dsp/letter_shell/shell.c ****         {
1680:Dsp/letter_shell/shell.c ****             shell->status.isChecked = 0;
1681:Dsp/letter_shell/shell.c ****         }
1682:Dsp/letter_shell/shell.c ****     }
1683:Dsp/letter_shell/shell.c **** #endif
1684:Dsp/letter_shell/shell.c **** 
1685:Dsp/letter_shell/shell.c ****     /* 根据记录的按键键值计算当前字节在按键键值中的偏移 */
1686:Dsp/letter_shell/shell.c ****     char keyByteOffset = 24;
1687:Dsp/letter_shell/shell.c ****     int keyFilter = 0x00000000;
1688:Dsp/letter_shell/shell.c ****     if ((shell->parser.keyValue & 0x0000FF00) != 0x00000000)
 4046              		.loc 1 1688 0
 4047 000c 836B     		ldr	r3, [r0, #56]
 4048 000e 13F47F4F 		tst	r3, #65280
 4049 0012 0AD1     		bne	.L355
1689:Dsp/letter_shell/shell.c ****     {
1690:Dsp/letter_shell/shell.c ****         keyByteOffset = 0;
1691:Dsp/letter_shell/shell.c ****         keyFilter = 0xFFFFFF00;
1692:Dsp/letter_shell/shell.c ****     }
1693:Dsp/letter_shell/shell.c ****     else if ((shell->parser.keyValue & 0x00FF0000) != 0x00000000)
 4050              		.loc 1 1693 0
 4051 0014 13F47F0F 		tst	r3, #16711680
 4052 0018 0CD1     		bne	.L356
1694:Dsp/letter_shell/shell.c ****     {
1695:Dsp/letter_shell/shell.c ****         keyByteOffset = 8;
1696:Dsp/letter_shell/shell.c ****         keyFilter = 0xFFFF0000;
1697:Dsp/letter_shell/shell.c ****     }
1698:Dsp/letter_shell/shell.c ****     else if ((shell->parser.keyValue & 0xFF000000) != 0x00000000)
 4053              		.loc 1 1698 0
 4054 001a 13F07F4F 		tst	r3, #-16777216
 4055 001e 0ED1     		bne	.L357
1687:Dsp/letter_shell/shell.c ****     if ((shell->parser.keyValue & 0x0000FF00) != 0x00000000)
 4056              		.loc 1 1687 0
 4057 0020 4FF00008 		mov	r8, #0
1686:Dsp/letter_shell/shell.c ****     int keyFilter = 0x00000000;
 4058              		.loc 1 1686 0
 4059 0024 4FF01809 		mov	r9, #24
 4060 0028 0DE0     		b	.L348
 4061              	.L355:
1691:Dsp/letter_shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 108


 4062              		.loc 1 1691 0
 4063 002a 6FF0FF08 		mvn	r8, #255
1690:Dsp/letter_shell/shell.c ****         keyFilter = 0xFFFFFF00;
 4064              		.loc 1 1690 0
 4065 002e 4FF00009 		mov	r9, #0
 4066 0032 08E0     		b	.L348
 4067              	.L356:
1696:Dsp/letter_shell/shell.c ****     }
 4068              		.loc 1 1696 0
 4069 0034 DFF89C80 		ldr	r8, .L361
1695:Dsp/letter_shell/shell.c ****         keyFilter = 0xFFFF0000;
 4070              		.loc 1 1695 0
 4071 0038 4FF00809 		mov	r9, #8
 4072 003c 03E0     		b	.L348
 4073              	.L357:
1699:Dsp/letter_shell/shell.c ****     {
1700:Dsp/letter_shell/shell.c ****         keyByteOffset = 16;
1701:Dsp/letter_shell/shell.c ****         keyFilter = 0xFF000000;
 4074              		.loc 1 1701 0
 4075 003e 4FF07F48 		mov	r8, #-16777216
1700:Dsp/letter_shell/shell.c ****         keyFilter = 0xFF000000;
 4076              		.loc 1 1700 0
 4077 0042 4FF01009 		mov	r9, #16
 4078              	.L348:
 4079              	.LVL499:
1702:Dsp/letter_shell/shell.c ****     }
1703:Dsp/letter_shell/shell.c **** 
1704:Dsp/letter_shell/shell.c ****     /* 遍历ShellCommand列表，尝试进行按键键值匹配 */
1705:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 4080              		.loc 1 1705 0
 4081 0046 B76D     		ldr	r7, [r6, #88]
 4082              	.LVL500:
 4083              	.LBB30:
1706:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 4084              		.loc 1 1706 0
 4085 0048 0024     		movs	r4, #0
 4086 004a 32E0     		b	.L349
 4087              	.LVL501:
 4088              	.L354:
1707:Dsp/letter_shell/shell.c ****     {
1708:Dsp/letter_shell/shell.c ****         /* 判断是否是按键定义并验证权限 */
1709:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type == SHELL_TYPE_KEY
 4089              		.loc 1 1709 0
 4090 004c 07EB0415 		add	r5, r7, r4, lsl #4
 4091 0050 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 4092 0052 03F00F03 		and	r3, r3, #15
 4093 0056 092B     		cmp	r3, #9
 4094 0058 29D1     		bne	.L350
1710:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &(base[i])) == 0)
 4095              		.loc 1 1710 0
 4096 005a 2946     		mov	r1, r5
 4097 005c 3046     		mov	r0, r6
 4098 005e FFF7FEFF 		bl	shellCheckPermission
 4099              	.LVL502:
 4100 0062 20BB     		cbnz	r0, .L350
1711:Dsp/letter_shell/shell.c ****         {
1712:Dsp/letter_shell/shell.c ****             /* 对输入的字节同按键键值进行匹配 */
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 109


1713:Dsp/letter_shell/shell.c ****             if ((base[i].data.key.value & keyFilter) == shell->parser.keyValue
 4101              		.loc 1 1713 0
 4102 0064 6B68     		ldr	r3, [r5, #4]
 4103 0066 08EA0301 		and	r1, r8, r3
 4104 006a B26B     		ldr	r2, [r6, #56]
 4105 006c 9142     		cmp	r1, r2
 4106 006e 1ED1     		bne	.L350
1714:Dsp/letter_shell/shell.c ****                 && (base[i].data.key.value & (0xFF << keyByteOffset))
 4107              		.loc 1 1714 0
 4108 0070 FF21     		movs	r1, #255
 4109 0072 01FA09F1 		lsl	r1, r1, r9
 4110 0076 0B40     		ands	r3, r3, r1
1715:Dsp/letter_shell/shell.c ****                     == (data << keyByteOffset))
 4111              		.loc 1 1715 0
 4112 0078 0AFA09F1 		lsl	r1, r10, r9
1714:Dsp/letter_shell/shell.c ****                 && (base[i].data.key.value & (0xFF << keyByteOffset))
 4113              		.loc 1 1714 0
 4114 007c 8B42     		cmp	r3, r1
 4115 007e 16D1     		bne	.L350
1716:Dsp/letter_shell/shell.c ****             {
1717:Dsp/letter_shell/shell.c ****                 shell->parser.keyValue |= data << keyByteOffset;
 4116              		.loc 1 1717 0
 4117 0080 0A43     		orrs	r2, r2, r1
 4118 0082 B263     		str	r2, [r6, #56]
 4119              	.LVL503:
1718:Dsp/letter_shell/shell.c ****                 data = 0x00;
1719:Dsp/letter_shell/shell.c ****                 if (keyByteOffset == 0 
 4120              		.loc 1 1719 0
 4121 0084 B9F1000F 		cmp	r9, #0
 4122 0088 07D0     		beq	.L351
1720:Dsp/letter_shell/shell.c ****                     || (base[i].data.key.value & (0xFF << (keyByteOffset - 8)))
 4123              		.loc 1 1720 0
 4124 008a 6B68     		ldr	r3, [r5, #4]
 4125 008c A9F10800 		sub	r0, r9, #8
 4126 0090 FF22     		movs	r2, #255
 4127 0092 02FA00F0 		lsl	r0, r2, r0
 4128 0096 0342     		tst	r3, r0
 4129 0098 07D1     		bne	.L358
 4130              	.L351:
1721:Dsp/letter_shell/shell.c ****                         == 0x00000000)
1722:Dsp/letter_shell/shell.c ****                 {
1723:Dsp/letter_shell/shell.c ****                     if (base[i].data.key.function)
 4131              		.loc 1 1723 0
 4132 009a AB68     		ldr	r3, [r5, #8]
 4133 009c 0BB1     		cbz	r3, .L352
1724:Dsp/letter_shell/shell.c ****                     {
1725:Dsp/letter_shell/shell.c ****                         base[i].data.key.function(shell);
 4134              		.loc 1 1725 0
 4135 009e 3046     		mov	r0, r6
 4136 00a0 9847     		blx	r3
 4137              	.LVL504:
 4138              	.L352:
1726:Dsp/letter_shell/shell.c ****                     }
1727:Dsp/letter_shell/shell.c ****                     shell->parser.keyValue = 0x00000000;
 4139              		.loc 1 1727 0
 4140 00a2 0023     		movs	r3, #0
 4141 00a4 B363     		str	r3, [r6, #56]
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 110


1718:Dsp/letter_shell/shell.c ****                 if (keyByteOffset == 0 
 4142              		.loc 1 1718 0
 4143 00a6 9A46     		mov	r10, r3
1728:Dsp/letter_shell/shell.c ****                     break;
 4144              		.loc 1 1728 0
 4145 00a8 07E0     		b	.L353
 4146              	.L358:
1718:Dsp/letter_shell/shell.c ****                 if (keyByteOffset == 0 
 4147              		.loc 1 1718 0
 4148 00aa 4FF0000A 		mov	r10, #0
 4149              	.LVL505:
 4150              	.L350:
1706:Dsp/letter_shell/shell.c ****     {
 4151              		.loc 1 1706 0 discriminator 2
 4152 00ae 0134     		adds	r4, r4, #1
 4153              	.LVL506:
 4154 00b0 24B2     		sxth	r4, r4
 4155              	.LVL507:
 4156              	.L349:
1706:Dsp/letter_shell/shell.c ****     {
 4157              		.loc 1 1706 0 is_stmt 0 discriminator 1
 4158 00b2 B6F85C30 		ldrh	r3, [r6, #92]
 4159 00b6 9C42     		cmp	r4, r3
 4160 00b8 C8DB     		blt	.L354
 4161              	.LVL508:
 4162              	.L353:
 4163              	.LBE30:
1729:Dsp/letter_shell/shell.c ****                 }
1730:Dsp/letter_shell/shell.c ****             }
1731:Dsp/letter_shell/shell.c ****         }
1732:Dsp/letter_shell/shell.c ****     }
1733:Dsp/letter_shell/shell.c **** 
1734:Dsp/letter_shell/shell.c ****     if (data != 0x00)
 4164              		.loc 1 1734 0 is_stmt 1
 4165 00ba BAF1000F 		cmp	r10, #0
 4166 00be 05D0     		beq	.L346
1735:Dsp/letter_shell/shell.c ****     {
1736:Dsp/letter_shell/shell.c ****         shell->parser.keyValue = 0x00000000;
 4167              		.loc 1 1736 0
 4168 00c0 0023     		movs	r3, #0
 4169 00c2 B363     		str	r3, [r6, #56]
1737:Dsp/letter_shell/shell.c ****         shellNormalInput(shell, data);
 4170              		.loc 1 1737 0
 4171 00c4 5146     		mov	r1, r10
 4172 00c6 3046     		mov	r0, r6
 4173 00c8 FFF7FEFF 		bl	shellNormalInput
 4174              	.LVL509:
 4175              	.L346:
 4176 00cc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4177              	.LVL510:
 4178              	.L360:
 4179              	.LCFI68:
 4180              		.cfi_def_cfa_offset 0
 4181              		.cfi_restore 4
 4182              		.cfi_restore 5
 4183              		.cfi_restore 6
 4184              		.cfi_restore 7
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 111


 4185              		.cfi_restore 8
 4186              		.cfi_restore 9
 4187              		.cfi_restore 10
 4188              		.cfi_restore 14
 4189 00d0 7047     		bx	lr
 4190              	.L362:
 4191 00d2 00BF     		.align	2
 4192              	.L361:
 4193 00d4 0000FFFF 		.word	-65536
 4194              		.cfi_endproc
 4195              	.LFE174:
 4197              		.section	.text.shellTask,"ax",%progbits
 4198              		.align	2
 4199              		.global	shellTask
 4200              		.thumb
 4201              		.thumb_func
 4203              	shellTask:
 4204              	.LFB175:
1738:Dsp/letter_shell/shell.c ****     }
1739:Dsp/letter_shell/shell.c **** 
1740:Dsp/letter_shell/shell.c ****     if (SHELL_GET_TICK())
1741:Dsp/letter_shell/shell.c ****     {
1742:Dsp/letter_shell/shell.c ****         shell->info.activeTime = SHELL_GET_TICK();
1743:Dsp/letter_shell/shell.c ****     }
1744:Dsp/letter_shell/shell.c **** }
1745:Dsp/letter_shell/shell.c **** 
1746:Dsp/letter_shell/shell.c **** 
1747:Dsp/letter_shell/shell.c **** #if SHELL_SUPPORT_END_LINE == 1
1748:Dsp/letter_shell/shell.c **** void shellWriteEndLine(Shell *shell, char *buffer, int len)
1749:Dsp/letter_shell/shell.c **** {
1750:Dsp/letter_shell/shell.c ****     if (!shell->status.isActive)
1751:Dsp/letter_shell/shell.c ****     {
1752:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_LINE]);
1753:Dsp/letter_shell/shell.c ****     }
1754:Dsp/letter_shell/shell.c ****     while (len --)
1755:Dsp/letter_shell/shell.c ****     {
1756:Dsp/letter_shell/shell.c ****         shell->write(*buffer++);
1757:Dsp/letter_shell/shell.c ****     }
1758:Dsp/letter_shell/shell.c ****     if (!shell->status.isActive)
1759:Dsp/letter_shell/shell.c ****     {
1760:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 0);
1761:Dsp/letter_shell/shell.c ****         if (shell->parser.length > 0)
1762:Dsp/letter_shell/shell.c ****         {
1763:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shell->parser.buffer);
1764:Dsp/letter_shell/shell.c ****             for (short i = 0; i < shell->parser.length - shell->parser.cursor; i++)
1765:Dsp/letter_shell/shell.c ****             {
1766:Dsp/letter_shell/shell.c ****                 shell->write('\b');
1767:Dsp/letter_shell/shell.c ****             }
1768:Dsp/letter_shell/shell.c ****         }
1769:Dsp/letter_shell/shell.c ****     }
1770:Dsp/letter_shell/shell.c **** }
1771:Dsp/letter_shell/shell.c **** #endif /** SHELL_SUPPORT_END_LINE == 1 */
1772:Dsp/letter_shell/shell.c **** 
1773:Dsp/letter_shell/shell.c **** 
1774:Dsp/letter_shell/shell.c **** /**
1775:Dsp/letter_shell/shell.c ****  * @brief shell 任务
1776:Dsp/letter_shell/shell.c ****  * 
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 112


1777:Dsp/letter_shell/shell.c ****  * @param param 参数(shell对象)
1778:Dsp/letter_shell/shell.c ****  * 
1779:Dsp/letter_shell/shell.c ****  */
1780:Dsp/letter_shell/shell.c **** void shellTask(void *param)
1781:Dsp/letter_shell/shell.c **** {
 4205              		.loc 1 1781 0
 4206              		.cfi_startproc
 4207              		@ args = 0, pretend = 0, frame = 8
 4208              		@ frame_needed = 0, uses_anonymous_args = 0
 4209              	.LVL511:
 4210 0000 10B5     		push	{r4, lr}
 4211              	.LCFI69:
 4212              		.cfi_def_cfa_offset 8
 4213              		.cfi_offset 4, -8
 4214              		.cfi_offset 14, -4
 4215 0002 82B0     		sub	sp, sp, #8
 4216              	.LCFI70:
 4217              		.cfi_def_cfa_offset 16
 4218 0004 0446     		mov	r4, r0
 4219              	.LVL512:
 4220              	.L364:
1782:Dsp/letter_shell/shell.c ****     Shell *shell = (Shell *)param;
1783:Dsp/letter_shell/shell.c ****     char data;
1784:Dsp/letter_shell/shell.c **** #if SHELL_TASK_WHILE == 1
1785:Dsp/letter_shell/shell.c ****     while(1)
1786:Dsp/letter_shell/shell.c ****     {
1787:Dsp/letter_shell/shell.c **** #endif
1788:Dsp/letter_shell/shell.c ****         if (shell->read && shell->read(&data) == 0)
 4221              		.loc 1 1788 0
 4222 0006 636E     		ldr	r3, [r4, #100]
 4223 0008 002B     		cmp	r3, #0
 4224 000a FCD0     		beq	.L364
 4225              		.loc 1 1788 0 is_stmt 0 discriminator 1
 4226 000c 0DF10700 		add	r0, sp, #7
 4227 0010 9847     		blx	r3
 4228              	.LVL513:
 4229 0012 0028     		cmp	r0, #0
 4230 0014 F7D1     		bne	.L364
1789:Dsp/letter_shell/shell.c ****         {
1790:Dsp/letter_shell/shell.c ****             shellHandler(shell, data);
 4231              		.loc 1 1790 0 is_stmt 1
 4232 0016 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 4233 001a 2046     		mov	r0, r4
 4234 001c FFF7FEFF 		bl	shellHandler
 4235              	.LVL514:
 4236 0020 F1E7     		b	.L364
 4237              		.cfi_endproc
 4238              	.LFE175:
 4240 0022 00BF     		.section	.text.shellUsers,"ax",%progbits
 4241              		.align	2
 4242              		.global	shellUsers
 4243              		.thumb
 4244              		.thumb_func
 4246              	shellUsers:
 4247              	.LFB176:
1791:Dsp/letter_shell/shell.c ****         }
1792:Dsp/letter_shell/shell.c **** #if SHELL_TASK_WHILE == 1
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 113


1793:Dsp/letter_shell/shell.c ****     }
1794:Dsp/letter_shell/shell.c **** #endif
1795:Dsp/letter_shell/shell.c **** }
1796:Dsp/letter_shell/shell.c **** 
1797:Dsp/letter_shell/shell.c **** 
1798:Dsp/letter_shell/shell.c **** /**
1799:Dsp/letter_shell/shell.c ****  * @brief shell 输出用户列表(shell调用)
1800:Dsp/letter_shell/shell.c ****  */
1801:Dsp/letter_shell/shell.c **** void shellUsers(void)
1802:Dsp/letter_shell/shell.c **** {
 4248              		.loc 1 1802 0
 4249              		.cfi_startproc
 4250              		@ args = 0, pretend = 0, frame = 0
 4251              		@ frame_needed = 0, uses_anonymous_args = 0
 4252 0000 08B5     		push	{r3, lr}
 4253              	.LCFI71:
 4254              		.cfi_def_cfa_offset 8
 4255              		.cfi_offset 3, -8
 4256              		.cfi_offset 14, -4
1803:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 4257              		.loc 1 1803 0
 4258 0002 FFF7FEFF 		bl	shellGetCurrent
 4259              	.LVL515:
1804:Dsp/letter_shell/shell.c ****     if (shell)
 4260              		.loc 1 1804 0
 4261 0006 08B1     		cbz	r0, .L368
1805:Dsp/letter_shell/shell.c ****     {
1806:Dsp/letter_shell/shell.c ****         shellListUser(shell);
 4262              		.loc 1 1806 0
 4263 0008 FFF7FEFF 		bl	shellListUser
 4264              	.LVL516:
 4265              	.L368:
 4266 000c 08BD     		pop	{r3, pc}
 4267              		.cfi_endproc
 4268              	.LFE176:
 4270 000e 00BF     		.section	.text.shellCmds,"ax",%progbits
 4271              		.align	2
 4272              		.global	shellCmds
 4273              		.thumb
 4274              		.thumb_func
 4276              	shellCmds:
 4277              	.LFB177:
1807:Dsp/letter_shell/shell.c ****     }
1808:Dsp/letter_shell/shell.c **** }
1809:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1810:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1811:Dsp/letter_shell/shell.c **** users, shellUsers, list all user);
1812:Dsp/letter_shell/shell.c **** 
1813:Dsp/letter_shell/shell.c **** 
1814:Dsp/letter_shell/shell.c **** /**
1815:Dsp/letter_shell/shell.c ****  * @brief shell 输出命令列表(shell调用)
1816:Dsp/letter_shell/shell.c ****  */
1817:Dsp/letter_shell/shell.c **** void shellCmds(void)
1818:Dsp/letter_shell/shell.c **** {
 4278              		.loc 1 1818 0
 4279              		.cfi_startproc
 4280              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 114


 4281              		@ frame_needed = 0, uses_anonymous_args = 0
 4282 0000 08B5     		push	{r3, lr}
 4283              	.LCFI72:
 4284              		.cfi_def_cfa_offset 8
 4285              		.cfi_offset 3, -8
 4286              		.cfi_offset 14, -4
1819:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 4287              		.loc 1 1819 0
 4288 0002 FFF7FEFF 		bl	shellGetCurrent
 4289              	.LVL517:
1820:Dsp/letter_shell/shell.c ****     if (shell)
 4290              		.loc 1 1820 0
 4291 0006 08B1     		cbz	r0, .L371
1821:Dsp/letter_shell/shell.c ****     {
1822:Dsp/letter_shell/shell.c ****         shellListCommand(shell);
 4292              		.loc 1 1822 0
 4293 0008 FFF7FEFF 		bl	shellListCommand
 4294              	.LVL518:
 4295              	.L371:
 4296 000c 08BD     		pop	{r3, pc}
 4297              		.cfi_endproc
 4298              	.LFE177:
 4300 000e 00BF     		.section	.text.shellVars,"ax",%progbits
 4301              		.align	2
 4302              		.global	shellVars
 4303              		.thumb
 4304              		.thumb_func
 4306              	shellVars:
 4307              	.LFB178:
1823:Dsp/letter_shell/shell.c ****     }
1824:Dsp/letter_shell/shell.c **** }
1825:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1826:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1827:Dsp/letter_shell/shell.c **** cmds, shellCmds, list all cmd);
1828:Dsp/letter_shell/shell.c **** 
1829:Dsp/letter_shell/shell.c **** 
1830:Dsp/letter_shell/shell.c **** /**
1831:Dsp/letter_shell/shell.c ****  * @brief shell 输出变量列表(shell调用)
1832:Dsp/letter_shell/shell.c ****  */
1833:Dsp/letter_shell/shell.c **** void shellVars(void)
1834:Dsp/letter_shell/shell.c **** {
 4308              		.loc 1 1834 0
 4309              		.cfi_startproc
 4310              		@ args = 0, pretend = 0, frame = 0
 4311              		@ frame_needed = 0, uses_anonymous_args = 0
 4312 0000 08B5     		push	{r3, lr}
 4313              	.LCFI73:
 4314              		.cfi_def_cfa_offset 8
 4315              		.cfi_offset 3, -8
 4316              		.cfi_offset 14, -4
1835:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 4317              		.loc 1 1835 0
 4318 0002 FFF7FEFF 		bl	shellGetCurrent
 4319              	.LVL519:
1836:Dsp/letter_shell/shell.c ****     if (shell)
 4320              		.loc 1 1836 0
 4321 0006 08B1     		cbz	r0, .L374
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 115


1837:Dsp/letter_shell/shell.c ****     {
1838:Dsp/letter_shell/shell.c ****         shellListVar(shell);
 4322              		.loc 1 1838 0
 4323 0008 FFF7FEFF 		bl	shellListVar
 4324              	.LVL520:
 4325              	.L374:
 4326 000c 08BD     		pop	{r3, pc}
 4327              		.cfi_endproc
 4328              	.LFE178:
 4330 000e 00BF     		.section	.text.shellKeys,"ax",%progbits
 4331              		.align	2
 4332              		.global	shellKeys
 4333              		.thumb
 4334              		.thumb_func
 4336              	shellKeys:
 4337              	.LFB179:
1839:Dsp/letter_shell/shell.c ****     }
1840:Dsp/letter_shell/shell.c **** }
1841:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1842:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1843:Dsp/letter_shell/shell.c **** vars, shellVars, list all var);
1844:Dsp/letter_shell/shell.c **** 
1845:Dsp/letter_shell/shell.c **** 
1846:Dsp/letter_shell/shell.c **** /**
1847:Dsp/letter_shell/shell.c ****  * @brief shell 输出按键列表(shell调用)
1848:Dsp/letter_shell/shell.c ****  */
1849:Dsp/letter_shell/shell.c **** void shellKeys(void)
1850:Dsp/letter_shell/shell.c **** {
 4338              		.loc 1 1850 0
 4339              		.cfi_startproc
 4340              		@ args = 0, pretend = 0, frame = 0
 4341              		@ frame_needed = 0, uses_anonymous_args = 0
 4342 0000 08B5     		push	{r3, lr}
 4343              	.LCFI74:
 4344              		.cfi_def_cfa_offset 8
 4345              		.cfi_offset 3, -8
 4346              		.cfi_offset 14, -4
1851:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 4347              		.loc 1 1851 0
 4348 0002 FFF7FEFF 		bl	shellGetCurrent
 4349              	.LVL521:
1852:Dsp/letter_shell/shell.c ****     if (shell)
 4350              		.loc 1 1852 0
 4351 0006 08B1     		cbz	r0, .L377
1853:Dsp/letter_shell/shell.c ****     {
1854:Dsp/letter_shell/shell.c ****         shellListKey(shell);
 4352              		.loc 1 1854 0
 4353 0008 FFF7FEFF 		bl	shellListKey
 4354              	.LVL522:
 4355              	.L377:
 4356 000c 08BD     		pop	{r3, pc}
 4357              		.cfi_endproc
 4358              	.LFE179:
 4360 000e 00BF     		.section	.text.shellClear,"ax",%progbits
 4361              		.align	2
 4362              		.global	shellClear
 4363              		.thumb
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 116


 4364              		.thumb_func
 4366              	shellClear:
 4367              	.LFB180:
1855:Dsp/letter_shell/shell.c ****     }
1856:Dsp/letter_shell/shell.c **** }
1857:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1858:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1859:Dsp/letter_shell/shell.c **** keys, shellKeys, list all key);
1860:Dsp/letter_shell/shell.c **** 
1861:Dsp/letter_shell/shell.c **** 
1862:Dsp/letter_shell/shell.c **** /**
1863:Dsp/letter_shell/shell.c ****  * @brief shell 清空控制台(shell调用)
1864:Dsp/letter_shell/shell.c ****  */
1865:Dsp/letter_shell/shell.c **** void shellClear(void)
1866:Dsp/letter_shell/shell.c **** {
 4368              		.loc 1 1866 0
 4369              		.cfi_startproc
 4370              		@ args = 0, pretend = 0, frame = 0
 4371              		@ frame_needed = 0, uses_anonymous_args = 0
 4372 0000 08B5     		push	{r3, lr}
 4373              	.LCFI75:
 4374              		.cfi_def_cfa_offset 8
 4375              		.cfi_offset 3, -8
 4376              		.cfi_offset 14, -4
1867:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 4377              		.loc 1 1867 0
 4378 0002 FFF7FEFF 		bl	shellGetCurrent
 4379              	.LVL523:
1868:Dsp/letter_shell/shell.c ****     if (shell)
 4380              		.loc 1 1868 0
 4381 0006 10B1     		cbz	r0, .L380
1869:Dsp/letter_shell/shell.c ****     {
1870:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_CONSOLE]);
 4382              		.loc 1 1870 0
 4383 0008 0149     		ldr	r1, .L383
 4384 000a FFF7FEFF 		bl	shellWriteString
 4385              	.LVL524:
 4386              	.L380:
 4387 000e 08BD     		pop	{r3, pc}
 4388              	.L384:
 4389              		.align	2
 4390              	.L383:
 4391 0010 00000000 		.word	.LC0
 4392              		.cfi_endproc
 4393              	.LFE180:
 4395              		.section	.text.shellRun,"ax",%progbits
 4396              		.align	2
 4397              		.global	shellRun
 4398              		.thumb
 4399              		.thumb_func
 4401              	shellRun:
 4402              	.LFB181:
1871:Dsp/letter_shell/shell.c ****     }
1872:Dsp/letter_shell/shell.c **** }
1873:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1874:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1875:Dsp/letter_shell/shell.c **** clear, shellClear, clear console);
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 117


1876:Dsp/letter_shell/shell.c **** 
1877:Dsp/letter_shell/shell.c **** 
1878:Dsp/letter_shell/shell.c **** /**
1879:Dsp/letter_shell/shell.c ****  * @brief shell执行命令
1880:Dsp/letter_shell/shell.c ****  * 
1881:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1882:Dsp/letter_shell/shell.c ****  * @param cmd 命令字符串
1883:Dsp/letter_shell/shell.c ****  * @return int 返回值
1884:Dsp/letter_shell/shell.c ****  */
1885:Dsp/letter_shell/shell.c **** int shellRun(Shell *shell, const char *cmd)
1886:Dsp/letter_shell/shell.c **** {
 4403              		.loc 1 1886 0
 4404              		.cfi_startproc
 4405              		@ args = 0, pretend = 0, frame = 0
 4406              		@ frame_needed = 0, uses_anonymous_args = 0
 4407              	.LVL525:
1887:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell && cmd, return -1);
 4408              		.loc 1 1887 0
 4409 0000 28B3     		cbz	r0, .L388
1886:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell && cmd, return -1);
 4410              		.loc 1 1886 0 discriminator 2
 4411 0002 70B5     		push	{r4, r5, r6, lr}
 4412              	.LCFI76:
 4413              		.cfi_def_cfa_offset 16
 4414              		.cfi_offset 4, -16
 4415              		.cfi_offset 5, -12
 4416              		.cfi_offset 6, -8
 4417              		.cfi_offset 14, -4
 4418 0004 0446     		mov	r4, r0
 4419              		.loc 1 1887 0 discriminator 2
 4420 0006 29B3     		cbz	r1, .L389
 4421 0008 0D46     		mov	r5, r1
1888:Dsp/letter_shell/shell.c ****     char active = shell->status.isActive;
 4422              		.loc 1 1888 0
 4423 000a 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 4424 000e C3F34006 		ubfx	r6, r3, #1, #1
 4425              	.LVL526:
1889:Dsp/letter_shell/shell.c ****     if (strlen(cmd) > shell->parser.bufferSize - 1)
 4426              		.loc 1 1889 0
 4427 0012 0846     		mov	r0, r1
 4428              	.LVL527:
 4429 0014 FFF7FEFF 		bl	strlen
 4430              	.LVL528:
 4431 0018 A38E     		ldrh	r3, [r4, #52]
 4432 001a 013B     		subs	r3, r3, #1
 4433 001c 9842     		cmp	r0, r3
 4434 001e 06D9     		bls	.L387
1890:Dsp/letter_shell/shell.c ****     {
1891:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CMD_TOO_LONG]);
 4435              		.loc 1 1891 0
 4436 0020 0E49     		ldr	r1, .L391
 4437 0022 2046     		mov	r0, r4
 4438 0024 FFF7FEFF 		bl	shellWriteString
 4439              	.LVL529:
1892:Dsp/letter_shell/shell.c ****         return -1;
 4440              		.loc 1 1892 0
 4441 0028 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 118


 4442 002c 70BD     		pop	{r4, r5, r6, pc}
 4443              	.LVL530:
 4444              	.L387:
1893:Dsp/letter_shell/shell.c ****     }
1894:Dsp/letter_shell/shell.c ****     else
1895:Dsp/letter_shell/shell.c ****     {
1896:Dsp/letter_shell/shell.c ****         shell->parser.length = shellStringCopy(shell->parser.buffer, (char *)cmd);
 4445              		.loc 1 1896 0
 4446 002e 2946     		mov	r1, r5
 4447 0030 2069     		ldr	r0, [r4, #16]
 4448 0032 FFF7FEFF 		bl	shellStringCopy
 4449              	.LVL531:
 4450 0036 A081     		strh	r0, [r4, #12]	@ movhi
1897:Dsp/letter_shell/shell.c ****         shellExec(shell);
 4451              		.loc 1 1897 0
 4452 0038 2046     		mov	r0, r4
 4453 003a FFF7FEFF 		bl	shellExec
 4454              	.LVL532:
1898:Dsp/letter_shell/shell.c ****         shell->status.isActive = active;
 4455              		.loc 1 1898 0
 4456 003e 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 4457 0042 66F34103 		bfi	r3, r6, #1, #1
 4458 0046 84F86030 		strb	r3, [r4, #96]
1899:Dsp/letter_shell/shell.c ****         return 0;
 4459              		.loc 1 1899 0
 4460 004a 0020     		movs	r0, #0
 4461 004c 70BD     		pop	{r4, r5, r6, pc}
 4462              	.LVL533:
 4463              	.L388:
 4464              	.LCFI77:
 4465              		.cfi_def_cfa_offset 0
 4466              		.cfi_restore 4
 4467              		.cfi_restore 5
 4468              		.cfi_restore 6
 4469              		.cfi_restore 14
1887:Dsp/letter_shell/shell.c ****     char active = shell->status.isActive;
 4470              		.loc 1 1887 0
 4471 004e 4FF0FF30 		mov	r0, #-1
 4472              	.LVL534:
1900:Dsp/letter_shell/shell.c ****     }
1901:Dsp/letter_shell/shell.c **** }
 4473              		.loc 1 1901 0
 4474 0052 7047     		bx	lr
 4475              	.LVL535:
 4476              	.L389:
 4477              	.LCFI78:
 4478              		.cfi_def_cfa_offset 16
 4479              		.cfi_offset 4, -16
 4480              		.cfi_offset 5, -12
 4481              		.cfi_offset 6, -8
 4482              		.cfi_offset 14, -4
1887:Dsp/letter_shell/shell.c ****     char active = shell->status.isActive;
 4483              		.loc 1 1887 0
 4484 0054 4FF0FF30 		mov	r0, #-1
 4485              	.LVL536:
 4486              		.loc 1 1901 0
 4487 0058 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 119


 4488              	.LVL537:
 4489              	.L392:
 4490 005a 00BF     		.align	2
 4491              	.L391:
 4492 005c 64020000 		.word	.LC21
 4493              		.cfi_endproc
 4494              	.LFE181:
 4496              		.section	.bss.buffer.9198,"aw",%nobits
 4497              		.align	2
 4498              		.set	.LANCHOR1,. + 0
 4501              	buffer.9198:
 4502 0000 00000000 		.space	9
 4502      00000000 
 4502      00
 4503              		.section	.bss.shellList,"aw",%nobits
 4504              		.align	2
 4505              		.set	.LANCHOR0,. + 0
 4508              	shellList:
 4509 0000 00000000 		.space	20
 4509      00000000 
 4509      00000000 
 4509      00000000 
 4509      00000000 
 4510              		.section	.rodata.str1.4,"aMS",%progbits,1
 4511              		.align	2
 4512              	.LC0:
 4513 0000 1B5B324A 		.ascii	"\033[2J\033[1H\000"
 4513      1B5B3148 
 4513      00
 4514 0009 000000   		.space	3
 4515              	.LC1:
 4516 000c 0D0A2020 		.ascii	"\015\012  ____    _      _       ___      _        "
 4516      5F5F5F5F 
 4516      20202020 
 4516      5F202020 
 4516      2020205F 
 4517 0039 20202020 		.ascii	"           \015\012 |    \\  /_\\    | |     | _ \\"
 4517      20202020 
 4517      2020200D 
 4517      0A207C20 
 4517      2020205C 
 4518 0063 2020207C 		.ascii	"   | |              ___ \015\012 |    |   _   __| |"
 4518      207C2020 
 4518      20202020 
 4518      20202020 
 4518      20202020 
 4519 0090 5F5F2020 		.ascii	"__   ||_|/ __| |__   ___    //    \015\012 |----/  "
 4519      207C7C5F 
 4519      7C2F205F 
 4519      5F7C207C 
 4519      5F5F2020 
 4520 00bd 7C207C20 		.ascii	"| | |__   __|  |  \\ |__   __|  //   \\  \\__    \015"
 4520      7C5F5F20 
 4520      20205F5F 
 4520      7C20207C 
 4520      20205C20 
 4521 00ec 0A207C20 		.ascii	"\012 |    |  | |    | |_    | |\\    | |_   ||   ||"
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 120


 4521      2020207C 
 4521      20207C20 
 4521      7C202020 
 4521      207C207C 
 4522 011b 20202020 		.ascii	"      \\  \015\012 \\____/  |_|    |___/   |_| \\  "
 4522      20205C20 
 4522      200D0A20 
 4522      5C5F5F5F 
 4522      5F2F2020 
 4523 0145 207C5F5F 		.ascii	" |___/   \\___//   ___//  \015\012\015\012Build:   "
 4523      5F2F2020 
 4523      205C5F5F 
 4523      5F2F2F20 
 4523      20205F5F 
 4524 016b 20202020 		.ascii	"    Sep 18 2021 10:17:06\015\012Version:     3.0.6\015"
 4524      53657020 
 4524      31382032 
 4524      30323120 
 4524      31303A31 
 4525 0198 0A00     		.ascii	"\012\000"
 4526 019a 0000     		.space	2
 4527              	.LC2:
 4528 019c 2F00     		.ascii	"/\000"
 4529 019e 0000     		.space	2
 4530              	.LC3:
 4531 01a0 0D0A00   		.ascii	"\015\012\000"
 4532 01a3 00       		.space	1
 4533              	.LC4:
 4534 01a4 3A00     		.ascii	":\000"
 4535 01a6 0000     		.space	2
 4536              	.LC5:
 4537 01a8 242000   		.ascii	"$ \000"
 4538 01ab 00       		.space	1
 4539              	.LC6:
 4540 01ac 0D0A506C 		.ascii	"\015\012Please input password:\000"
 4540      65617365 
 4540      20696E70 
 4540      75742070 
 4540      61737377 
 4541 01c5 000000   		.space	3
 4542              	.LC7:
 4543 01c8 0D0A7061 		.ascii	"\015\012password error\015\012\000"
 4543      7373776F 
 4543      72642065 
 4543      72726F72 
 4543      0D0A00
 4544 01db 00       		.space	1
 4545              	.LC9:
 4546 01dc 52657475 		.ascii	"Return: \000"
 4546      726E3A20 
 4546      00
 4547 01e5 000000   		.space	3
 4548              	.LC10:
 4549 01e8 2C203078 		.ascii	", 0x\000"
 4549      00
 4550 01ed 000000   		.space	3
 4551              	.LC8:
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 121


 4552 01f0 30303030 		.ascii	"00000000000\000"
 4552      30303030 
 4552      30303000 
 4553              	.LC11:
 4554 01fc 434D4420 		.ascii	"CMD \015\012\000"
 4554      0D0A00
 4555 0203 00       		.space	1
 4556              	.LC12:
 4557 0204 56415200 		.ascii	"VAR\000"
 4558              	.LC13:
 4559 0208 55534552 		.ascii	"USER\000"
 4559      00
 4560 020d 000000   		.space	3
 4561              	.LC14:
 4562 0210 4B455900 		.ascii	"KEY\000"
 4563              	.LC15:
 4564 0214 4E4F4E45 		.ascii	"NONE\000"
 4564      00
 4565 0219 000000   		.space	3
 4566              	.LC16:
 4567 021c 0D0A436F 		.ascii	"\015\012Command List:\015\012\000"
 4567      6D6D616E 
 4567      64204C69 
 4567      73743A0D 
 4567      0A00
 4568 022e 0000     		.space	2
 4569              	.LC17:
 4570 0230 0D0A5661 		.ascii	"\015\012Var List:\015\012\000"
 4570      72204C69 
 4570      73743A0D 
 4570      0A00
 4571 023e 0000     		.space	2
 4572              	.LC18:
 4573 0240 0D0A5573 		.ascii	"\015\012User List:\015\012\000"
 4573      6572204C 
 4573      6973743A 
 4573      0D0A00
 4574 024f 00       		.space	1
 4575              	.LC19:
 4576 0250 0D0A4B65 		.ascii	"\015\012Key List:\015\012\000"
 4576      79204C69 
 4576      73743A0D 
 4576      0A00
 4577 025e 0000     		.space	2
 4578              	.LC20:
 4579 0260 08200800 		.ascii	"\010 \010\000"
 4580              	.LC21:
 4581 0264 0D0A5761 		.ascii	"\015\012Warning: Command is too long\015\012\000"
 4581      726E696E 
 4581      673A2043 
 4581      6F6D6D61 
 4581      6E642069 
 4582 0285 000000   		.space	3
 4583              	.LC22:
 4584 0288 77687900 		.ascii	"why\000"
 4585              	.LC23:
 4586 028c 203D2000 		.ascii	" = \000"
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 122


 4587              	.LC24:
 4588 0290 2200     		.ascii	"\"\000"
 4589 0292 0000     		.space	2
 4590              	.LC25:
 4591 0294 63616E27 		.ascii	"can't set read only var\015\012\000"
 4591      74207365 
 4591      74207265 
 4591      6164206F 
 4591      6E6C7920 
 4592 02ae 0000     		.space	2
 4593              	.LC26:
 4594 02b0 63616E27 		.ascii	"can't set pointer\015\012\000"
 4594      74207365 
 4594      7420706F 
 4594      696E7465 
 4594      720D0A00 
 4595              	.LC27:
 4596 02c4 56617220 		.ascii	"Var not Fount\015\012\000"
 4596      6E6F7420 
 4596      466F756E 
 4596      740D0A00 
 4597              	.LC28:
 4598 02d4 20697320 		.ascii	" is not a var\015\012\000"
 4598      6E6F7420 
 4598      61207661 
 4598      720D0A00 
 4599              	.LC29:
 4600 02e4 436F6D6D 		.ascii	"Command not Found\015\012\000"
 4600      616E6420 
 4600      6E6F7420 
 4600      466F756E 
 4600      640D0A00 
 4601              	.LC30:
 4602 02f8 636F6D6D 		.ascii	"command help of \000"
 4602      616E6420 
 4602      68656C70 
 4602      206F6620 
 4602      00
 4603              		.text
 4604              	.Letext0:
 4605              		.file 2 "Dsp/letter_shell/shell.h"
 4606              		.file 3 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_types.h"
 4607              		.file 4 "d:\\gcc_arm\\5.4 2016q3\\lib\\gcc\\arm-none-eabi\\5.4.1\\include\\stdarg.h"
 4608              		.file 5 "<built-in>"
 4609              		.file 6 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\stdio.h"
 4610              		.file 7 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 4611              		.file 8 "F4_CORE/core_cm4.h"
 4612              		.file 9 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\string.h"
 4613              		.file 10 "SYS/delay/delay.h"
 4614              		.file 11 "Dsp/letter_shell/shell_ext.h"
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 123


DEFINED SYMBOLS
                            *ABS*:00000000 shell.c
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:22     .text.shellAdd:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:26     .text.shellAdd:00000000 shellAdd
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:67     .text.shellAdd:00000020 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:73     .text.shellStringCopy:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:77     .text.shellStringCopy:00000000 shellStringCopy
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:123    .text.shellStringCompare:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:127    .text.shellStringCompare:00000000 shellStringCompare
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:185    .text.shellGetCommandDesc:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:189    .text.shellGetCommandDesc:00000000 shellGetCommandDesc
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:235    .text.shellParserParam:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:239    .text.shellParserParam:00000000 shellParserParam
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:383    .text.shellHistoryAdd:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:387    .text.shellHistoryAdd:00000000 shellHistoryAdd
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:465    .text.shellWriteByte:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:469    .text.shellWriteByte:00000000 shellWriteByte
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:496    .text.shellRemoveParamQuotes:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:500    .text.shellRemoveParamQuotes:00000000 shellRemoveParamQuotes
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:575    .text.shellGetCurrent:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:580    .text.shellGetCurrent:00000000 shellGetCurrent
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:621    .text.shellGetCurrent:00000024 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:626    .text.shellWriteString:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:631    .text.shellWriteString:00000000 shellWriteString
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:694    .text.shellSetUser:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:698    .text.shellSetUser:00000000 shellSetUser
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:773    .text.shellSetUser:00000058 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:779    .text.shellWriteCommandLine:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:783    .text.shellWriteCommandLine:00000000 shellWriteCommandLine
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:846    .text.shellWriteCommandLine:00000048 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:855    .text.shellCheckPassword:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:859    .text.shellCheckPassword:00000000 shellCheckPassword
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:907    .text.shellCheckPassword:00000038 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:913    .text.shellPrint:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:918    .text.shellPrint:00000000 shellPrint
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:981    .text.shellScan:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:986    .text.shellScan:00000000 shellScan
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1099   .text.shellScan:0000006c $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1104   .text.shellCheckPermission:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1109   .text.shellCheckPermission:00000000 shellCheckPermission
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1164   .text.shellToHex:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1169   .text.shellToHex:00000000 shellToHex
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1235   .text.shellGetCommandName:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1239   .text.shellGetCommandName:00000000 shellGetCommandName
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1317   .text.shellGetCommandName:00000040 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1322   .text.shellToDec:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1327   .text.shellToDec:00000000 shellToDec
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1423   .text.shellToDec:00000058 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1428   .text.shellWriteReturnValue:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1432   .text.shellWriteReturnValue:00000000 shellWriteReturnValue
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1523   .text.shellWriteReturnValue:0000006c $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1531   .text.shellListItem:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1536   .text.shellListItem:00000000 shellListItem
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1638   .text.shellListItem:00000078 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1647   .text.shellListCommand:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1652   .text.shellListCommand:00000000 shellListCommand
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1717   .text.shellListCommand:00000040 $d
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 124


C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1722   .text.shellListVar:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1727   .text.shellListVar:00000000 shellListVar
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1796   .text.shellListVar:00000044 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1801   .text.shellListUser:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1806   .text.shellListUser:00000000 shellListUser
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1873   .text.shellListUser:00000040 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1878   .text.shellListKey:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1883   .text.shellListKey:00000000 shellListKey
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1950   .text.shellListKey:00000040 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1955   .text.shellListAll:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1960   .text.shellListAll:00000000 shellListAll
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1980   .text.shellDeleteCommandLine:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:1985   .text.shellDeleteCommandLine:00000000 shellDeleteCommandLine
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2024   .text.shellDeleteCommandLine:0000001c $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2029   .text.shellClearCommandLine:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2034   .text.shellClearCommandLine:00000000 shellClearCommandLine
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2084   .text.shellHistory:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2088   .text.shellHistory:00000000 shellHistory
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2201   .text.shellHistory:000000a4 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2206   .text.shellInsertByte:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2211   .text.shellInsertByte:00000000 shellInsertByte
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2378   .text.shellInsertByte:000000b8 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2384   .text.shellDeleteByte:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2389   .text.shellDeleteByte:00000000 shellDeleteByte
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2561   .text.shellSeekCommand:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2566   .text.shellSeekCommand:00000000 shellSeekCommand
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2662   .text.shellInit:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2667   .text.shellInit:00000000 shellInit
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2763   .text.shellInit:0000007c $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2771   .text.shellGetVarValue:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2776   .text.shellGetVarValue:00000000 shellGetVarValue
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2797   .text.shellGetVarValue:00000012 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2803   .text.shellGetVarValue:00000018 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2864   .text.shellShowVar:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:2868   .text.shellShowVar:00000000 shellShowVar
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3001   .text.shellShowVar:000000a8 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3010   .text.shellSetVarValue:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3015   .text.shellSetVarValue:00000000 shellSetVarValue
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3052   .text.shellSetVarValue:00000026 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3058   .text.shellSetVarValue:0000002c $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3127   .text.shellSetVarValue:00000070 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3133   .text.shellSetVar:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3138   .text.shellSetVar:00000000 shellSetVar
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3223   .text.shellSetVar:0000005c $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3229   .text.shellRunCommand:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3234   .text.shellRunCommand:00000000 shellRunCommand
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3348   .text.shellNormalInput:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3353   .text.shellNormalInput:00000000 shellNormalInput
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3377   .text.shellExec:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3382   .text.shellExec:00000000 shellExec
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3470   .text.shellExec:00000060 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3476   .text.shellUp:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3481   .text.shellUp:00000000 shellUp
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3502   .text.shellDown:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3507   .text.shellDown:00000000 shellDown
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3528   .text.shellRight:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3533   .text.shellRight:00000000 shellRight
ARM GAS  C:\Users\why\AppData\Local\Temp\cchzeGE9.s 			page 125


C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3563   .text.shellLeft:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3568   .text.shellLeft:00000000 shellLeft
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3605   .text.shellTab:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3610   .text.shellTab:00000000 shellTab
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3820   .text.shellTab:00000114 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3826   .text.shellBackspace:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3831   .text.shellBackspace:00000000 shellBackspace
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3852   .text.shellDelete:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3857   .text.shellDelete:00000000 shellDelete
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3878   .text.shellEnter:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3883   .text.shellEnter:00000000 shellEnter
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3909   .text.shellHelp:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:3914   .text.shellHelp:00000000 shellHelp
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4008   .text.shellHelp:0000006c $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4016   .text.shellHandler:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4021   .text.shellHandler:00000000 shellHandler
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4193   .text.shellHandler:000000d4 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4198   .text.shellTask:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4203   .text.shellTask:00000000 shellTask
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4241   .text.shellUsers:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4246   .text.shellUsers:00000000 shellUsers
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4271   .text.shellCmds:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4276   .text.shellCmds:00000000 shellCmds
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4301   .text.shellVars:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4306   .text.shellVars:00000000 shellVars
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4331   .text.shellKeys:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4336   .text.shellKeys:00000000 shellKeys
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4361   .text.shellClear:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4366   .text.shellClear:00000000 shellClear
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4391   .text.shellClear:00000010 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4396   .text.shellRun:00000000 $t
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4401   .text.shellRun:00000000 shellRun
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4492   .text.shellRun:0000005c $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4497   .bss.buffer.9198:00000000 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4501   .bss.buffer.9198:00000000 buffer.9198
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4504   .bss.shellList:00000000 $d
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4508   .bss.shellList:00000000 shellList
C:\Users\why\AppData\Local\Temp\cchzeGE9.s:4511   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
strcmp
delay_us
strlen
vsnprintf
vsscanf
strncmp
shellCommandList
shellCommandCount
shellExtRun
