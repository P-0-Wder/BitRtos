ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"shell.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.shellAdd,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	shellAdd:
  27              	.LFB125:
  28              		.file 1 "Dsp/letter_shell/shell.c"
   1:Dsp/letter_shell/shell.c **** /**
   2:Dsp/letter_shell/shell.c ****  * @file shell.c
   3:Dsp/letter_shell/shell.c ****  * @author Letter (NevermindZZT@gmail.com)
   4:Dsp/letter_shell/shell.c ****  * @version 3.0.0
   5:Dsp/letter_shell/shell.c ****  * @date 2019-12-30
   6:Dsp/letter_shell/shell.c ****  * 
   7:Dsp/letter_shell/shell.c ****  * @copyright (c) 2020 Letter
   8:Dsp/letter_shell/shell.c ****  * 
   9:Dsp/letter_shell/shell.c ****  */
  10:Dsp/letter_shell/shell.c **** 
  11:Dsp/letter_shell/shell.c **** #include "shell.h"
  12:Dsp/letter_shell/shell.c **** #include "string.h"
  13:Dsp/letter_shell/shell.c **** #include "stdio.h"
  14:Dsp/letter_shell/shell.c **** #include "stdarg.h"
  15:Dsp/letter_shell/shell.c **** #include "shell_ext.h"
  16:Dsp/letter_shell/shell.c **** #include "delay.h"
  17:Dsp/letter_shell/shell.c **** #include "stm32f4xx_usart.h"
  18:Dsp/letter_shell/shell.c **** 
  19:Dsp/letter_shell/shell.c **** 
  20:Dsp/letter_shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
  21:Dsp/letter_shell/shell.c **** /**
  22:Dsp/letter_shell/shell.c ****  * @brief 默认用户
  23:Dsp/letter_shell/shell.c ****  */
  24:Dsp/letter_shell/shell.c **** const char shellCmdDefaultUser[] = SHELL_DEFAULT_USER;
  25:Dsp/letter_shell/shell.c **** const char shellPasswordDefaultUser[] = SHELL_DEFAULT_USER_PASSWORD;
  26:Dsp/letter_shell/shell.c **** const char shellDesDefaultUser[] = "default user";
  27:Dsp/letter_shell/shell.c **** const ShellCommand shellUserDefault SECTION("shellCommand") =
  28:Dsp/letter_shell/shell.c **** {
  29:Dsp/letter_shell/shell.c ****     .attr.value = SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_USER),
  30:Dsp/letter_shell/shell.c ****     .data.user.name = shellCmdDefaultUser,
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 2


  31:Dsp/letter_shell/shell.c ****     .data.user.password = shellPasswordDefaultUser,
  32:Dsp/letter_shell/shell.c ****     .data.user.desc = shellDesDefaultUser
  33:Dsp/letter_shell/shell.c **** };
  34:Dsp/letter_shell/shell.c **** #endif
  35:Dsp/letter_shell/shell.c **** 
  36:Dsp/letter_shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
  37:Dsp/letter_shell/shell.c ****     #if defined(__CC_ARM) || (defined(__ARMCC_VERSION) && __ARMCC_VERSION >= 6000000)
  38:Dsp/letter_shell/shell.c ****         extern const unsigned int shellCommand$$Base;
  39:Dsp/letter_shell/shell.c ****         extern const unsigned int shellCommand$$Limit;
  40:Dsp/letter_shell/shell.c ****     #elif defined(__ICCARM__) || defined(__ICCRX__)
  41:Dsp/letter_shell/shell.c ****         #pragma section="shellCommand"
  42:Dsp/letter_shell/shell.c ****     #elif defined(__GNUC__)
  43:Dsp/letter_shell/shell.c ****         extern const unsigned int _shell_command_start;
  44:Dsp/letter_shell/shell.c ****         extern const unsigned int _shell_command_end;
  45:Dsp/letter_shell/shell.c ****     #endif
  46:Dsp/letter_shell/shell.c **** #else
  47:Dsp/letter_shell/shell.c ****     extern const ShellCommand shellCommandList[];
  48:Dsp/letter_shell/shell.c ****     extern const unsigned short shellCommandCount;
  49:Dsp/letter_shell/shell.c **** #endif
  50:Dsp/letter_shell/shell.c **** 
  51:Dsp/letter_shell/shell.c **** 
  52:Dsp/letter_shell/shell.c **** /**
  53:Dsp/letter_shell/shell.c ****  * @brief shell 常量文本索引
  54:Dsp/letter_shell/shell.c ****  */
  55:Dsp/letter_shell/shell.c **** enum
  56:Dsp/letter_shell/shell.c **** {
  57:Dsp/letter_shell/shell.c **** #if SHELL_SHOW_INFO == 1
  58:Dsp/letter_shell/shell.c ****     SHELL_TEXT_INFO,                                    /**< shell信息 */
  59:Dsp/letter_shell/shell.c **** #endif
  60:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CMD_TOO_LONG,                            /**< 命令过长 */
  61:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CMD_LIST,                                /**< 可执行命令列表标题 */
  62:Dsp/letter_shell/shell.c ****     SHELL_TEXT_VAR_LIST,                                /**< 变量列表标题 */
  63:Dsp/letter_shell/shell.c ****     SHELL_TEXT_USER_LIST,                               /**< 用户列表标题 */
  64:Dsp/letter_shell/shell.c ****     SHELL_TEXT_KEY_LIST,                                /**< 按键列表标题 */
  65:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CMD_NOT_FOUND,                           /**< 命令未找到 */
  66:Dsp/letter_shell/shell.c ****     SHELL_TEXT_POINT_CANNOT_MODIFY,                     /**< 指针变量不允许修改 */
  67:Dsp/letter_shell/shell.c ****     SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY,             /**< 只读变量不允许修改 */
  68:Dsp/letter_shell/shell.c ****     SHELL_TEXT_NOT_VAR,                                 /**< 命令不是变量 */
  69:Dsp/letter_shell/shell.c ****     SHELL_TEXT_VAR_NOT_FOUND,                           /**< 变量未找到 */
  70:Dsp/letter_shell/shell.c ****     SHELL_TEXT_HELP_HEADER,                             /**< help头 */
  71:Dsp/letter_shell/shell.c ****     SHELL_TEXT_PASSWORD_HINT,                           /**< 密码输入提示 */
  72:Dsp/letter_shell/shell.c ****     SHELL_TEXT_PASSWORD_ERROR,                          /**< 密码错误 */
  73:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CLEAR_CONSOLE,                           /**< 清空控制台 */
  74:Dsp/letter_shell/shell.c ****     SHELL_TEXT_CLEAR_LINE,                              /**< 清空当前行 */
  75:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_CMD,                                /**< 命令类型 */
  76:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_VAR,                                /**< 变量类型 */
  77:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_USER,                               /**< 用户类型 */
  78:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_KEY,                                /**< 按键类型 */
  79:Dsp/letter_shell/shell.c ****     SHELL_TEXT_TYPE_NONE,                               /**< 非法类型 */
  80:Dsp/letter_shell/shell.c **** #if SHELL_EXEC_UNDEF_FUNC == 1
  81:Dsp/letter_shell/shell.c ****     SHELL_TEXT_PARAM_ERROR,                             /**< 参数错误 */
  82:Dsp/letter_shell/shell.c **** #endif
  83:Dsp/letter_shell/shell.c **** };
  84:Dsp/letter_shell/shell.c **** 
  85:Dsp/letter_shell/shell.c **** 
  86:Dsp/letter_shell/shell.c **** 
  87:Dsp/letter_shell/shell.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 3


  88:Dsp/letter_shell/shell.c **** static const char *shellText[] =
  89:Dsp/letter_shell/shell.c **** {
  90:Dsp/letter_shell/shell.c **** #if SHELL_SHOW_INFO == 1
  91:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_INFO] =
  92:Dsp/letter_shell/shell.c ****         "\r\n"
  93:Dsp/letter_shell/shell.c **** 		"  ____    _      _       ___      _                   \r\n"
  94:Dsp/letter_shell/shell.c **** 		" |    \\  /_\\    | |     | _ \\   | |              ___ \r\n"
  95:Dsp/letter_shell/shell.c **** 		" |    |   _   __| |__   ||_|/ __| |__   ___    //    \r\n"
  96:Dsp/letter_shell/shell.c **** 		" |----/  | | |__   __|  |  \\ |__   __|  //   \\  \\__    \r\n"
  97:Dsp/letter_shell/shell.c **** 		" |    |  | |    | |_    | |\\    | |_   ||   ||      \\  \r\n"
  98:Dsp/letter_shell/shell.c **** 		" \\____/  |_|    |___/   |_| \\   |___/   \\___//   ___//  \r\n"
  99:Dsp/letter_shell/shell.c ****         "\r\n"
 100:Dsp/letter_shell/shell.c ****         "Build:       "__DATE__" "__TIME__"\r\n"
 101:Dsp/letter_shell/shell.c ****         "Version:     "SHELL_VERSION"\r\n",
 102:Dsp/letter_shell/shell.c **** #endif
 103:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CMD_TOO_LONG] = 
 104:Dsp/letter_shell/shell.c ****         "\r\nWarning: Command is too long\r\n",
 105:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CMD_LIST] = 
 106:Dsp/letter_shell/shell.c ****         "\r\nCommand List:\r\n",
 107:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_VAR_LIST] = 
 108:Dsp/letter_shell/shell.c ****         "\r\nVar List:\r\n",
 109:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_USER_LIST] = 
 110:Dsp/letter_shell/shell.c ****         "\r\nUser List:\r\n",
 111:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_KEY_LIST] =
 112:Dsp/letter_shell/shell.c ****         "\r\nKey List:\r\n",
 113:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CMD_NOT_FOUND] = 
 114:Dsp/letter_shell/shell.c ****         "Command not Found\r\n",
 115:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_POINT_CANNOT_MODIFY] = 
 116:Dsp/letter_shell/shell.c ****         "can't set pointer\r\n",
 117:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY] = 
 118:Dsp/letter_shell/shell.c ****         "can't set read only var\r\n",
 119:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_NOT_VAR] =
 120:Dsp/letter_shell/shell.c ****         " is not a var\r\n",
 121:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_VAR_NOT_FOUND] = 
 122:Dsp/letter_shell/shell.c ****         "Var not Fount\r\n",
 123:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_HELP_HEADER] =
 124:Dsp/letter_shell/shell.c ****         "command help of ",
 125:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_PASSWORD_HINT] = 
 126:Dsp/letter_shell/shell.c ****         "\r\nPlease input password:",
 127:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_PASSWORD_ERROR] = 
 128:Dsp/letter_shell/shell.c ****         "\r\npassword error\r\n",
 129:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CLEAR_CONSOLE] = 
 130:Dsp/letter_shell/shell.c ****         "\033[2J\033[1H",
 131:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_CLEAR_LINE] = 
 132:Dsp/letter_shell/shell.c ****         "\033[2K\r",
 133:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_CMD] = 
 134:Dsp/letter_shell/shell.c ****         "CMD \r\n",
 135:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_VAR] = 
 136:Dsp/letter_shell/shell.c ****         "VAR",
 137:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_USER] = 
 138:Dsp/letter_shell/shell.c ****         "USER",
 139:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_KEY] = 
 140:Dsp/letter_shell/shell.c ****         "KEY",
 141:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_TYPE_NONE] = 
 142:Dsp/letter_shell/shell.c ****         "NONE",
 143:Dsp/letter_shell/shell.c **** #if SHELL_EXEC_UNDEF_FUNC == 1
 144:Dsp/letter_shell/shell.c ****     [SHELL_TEXT_PARAM_ERROR] = 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 4


 145:Dsp/letter_shell/shell.c ****         "Parameter error\r\n",
 146:Dsp/letter_shell/shell.c **** #endif
 147:Dsp/letter_shell/shell.c **** };
 148:Dsp/letter_shell/shell.c **** 
 149:Dsp/letter_shell/shell.c **** 
 150:Dsp/letter_shell/shell.c **** /**
 151:Dsp/letter_shell/shell.c ****  * @brief shell对象表
 152:Dsp/letter_shell/shell.c ****  */
 153:Dsp/letter_shell/shell.c **** static Shell *shellList[SHELL_MAX_NUMBER] = {NULL};
 154:Dsp/letter_shell/shell.c **** 
 155:Dsp/letter_shell/shell.c **** 
 156:Dsp/letter_shell/shell.c **** static void shellAdd(Shell *shell);
 157:Dsp/letter_shell/shell.c **** static void shellWriteCommandLine(Shell *shell, unsigned char newline);
 158:Dsp/letter_shell/shell.c **** static void shellWriteReturnValue(Shell *shell, int value);
 159:Dsp/letter_shell/shell.c **** static int shellShowVar(Shell *shell, ShellCommand *command);
 160:Dsp/letter_shell/shell.c **** static void shellSetUser(Shell *shell, const ShellCommand *user);
 161:Dsp/letter_shell/shell.c **** ShellCommand* shellSeekCommand(Shell *shell,
 162:Dsp/letter_shell/shell.c ****                                const char *cmd,
 163:Dsp/letter_shell/shell.c ****                                ShellCommand *base,
 164:Dsp/letter_shell/shell.c ****                                unsigned short compareLength);
 165:Dsp/letter_shell/shell.c **** 
 166:Dsp/letter_shell/shell.c **** /**
 167:Dsp/letter_shell/shell.c ****  * @brief shell 初始化
 168:Dsp/letter_shell/shell.c ****  * 
 169:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 170:Dsp/letter_shell/shell.c ****  */
 171:Dsp/letter_shell/shell.c **** void shellInit(Shell *shell, char *buffer, unsigned short size)
 172:Dsp/letter_shell/shell.c **** {
 173:Dsp/letter_shell/shell.c ****     shell->parser.length = 0;
 174:Dsp/letter_shell/shell.c ****     shell->parser.cursor = 0;
 175:Dsp/letter_shell/shell.c ****     shell->history.offset = 0;
 176:Dsp/letter_shell/shell.c ****     shell->history.number = 0;
 177:Dsp/letter_shell/shell.c ****     shell->history.record = 0;
 178:Dsp/letter_shell/shell.c ****     shell->info.user = NULL;
 179:Dsp/letter_shell/shell.c ****     shell->status.isChecked = 1;
 180:Dsp/letter_shell/shell.c **** 
 181:Dsp/letter_shell/shell.c ****     shell->parser.buffer = buffer;
 182:Dsp/letter_shell/shell.c ****     shell->parser.bufferSize = size / (SHELL_HISTORY_MAX_NUMBER + 1);
 183:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_HISTORY_MAX_NUMBER; i++)
 184:Dsp/letter_shell/shell.c ****     {
 185:Dsp/letter_shell/shell.c ****         shell->history.item[i] = buffer + shell->parser.bufferSize * (i + 1);
 186:Dsp/letter_shell/shell.c ****     }
 187:Dsp/letter_shell/shell.c **** 
 188:Dsp/letter_shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
 189:Dsp/letter_shell/shell.c ****     #if defined(__CC_ARM) || (defined(__ARMCC_VERSION) && __ARMCC_VERSION >= 6000000)
 190:Dsp/letter_shell/shell.c ****         shell->commandList.base = (ShellCommand *)(&shellCommand$$Base);
 191:Dsp/letter_shell/shell.c ****         shell->commandList.count = ((unsigned int)(&shellCommand$$Limit)
 192:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(&shellCommand$$Base))
 193:Dsp/letter_shell/shell.c ****                                 / sizeof(ShellCommand);
 194:Dsp/letter_shell/shell.c **** 
 195:Dsp/letter_shell/shell.c ****     #elif defined(__ICCARM__) || defined(__ICCRX__)
 196:Dsp/letter_shell/shell.c ****         shell->commandList.base = (ShellCommand *)(__section_begin("shellCommand"));
 197:Dsp/letter_shell/shell.c ****         shell->commandList.count = ((unsigned int)(__section_end("shellCommand"))
 198:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(__section_begin("shellCommand")))
 199:Dsp/letter_shell/shell.c ****                                 / sizeof(ShellCommand);
 200:Dsp/letter_shell/shell.c ****     #elif defined(__GNUC__)
 201:Dsp/letter_shell/shell.c ****         shell->commandList.base = (ShellCommand *)(&_shell_command_start);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 5


 202:Dsp/letter_shell/shell.c ****         shell->commandList.count = ((unsigned int)(&_shell_command_end)
 203:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(&_shell_command_start))
 204:Dsp/letter_shell/shell.c ****                                 / sizeof(ShellCommand);
 205:Dsp/letter_shell/shell.c ****     #else
 206:Dsp/letter_shell/shell.c ****         #error not supported compiler, please use command table mode
 207:Dsp/letter_shell/shell.c ****     #endif
 208:Dsp/letter_shell/shell.c **** #else
 209:Dsp/letter_shell/shell.c ****     shell->commandList.base = (ShellCommand *)shellCommandList;
 210:Dsp/letter_shell/shell.c ****     shell->commandList.count = shellCommandCount;
 211:Dsp/letter_shell/shell.c **** #endif
 212:Dsp/letter_shell/shell.c **** 
 213:Dsp/letter_shell/shell.c ****     shellAdd(shell);
 214:Dsp/letter_shell/shell.c **** 
 215:Dsp/letter_shell/shell.c ****     shellSetUser(shell, shellSeekCommand(shell,
 216:Dsp/letter_shell/shell.c ****                                          SHELL_DEFAULT_USER,
 217:Dsp/letter_shell/shell.c ****                                          shell->commandList.base,
 218:Dsp/letter_shell/shell.c ****                                          0));
 219:Dsp/letter_shell/shell.c ****     shellWriteCommandLine(shell, 1);
 220:Dsp/letter_shell/shell.c **** }
 221:Dsp/letter_shell/shell.c **** 
 222:Dsp/letter_shell/shell.c **** 
 223:Dsp/letter_shell/shell.c **** /**
 224:Dsp/letter_shell/shell.c ****  * @brief 添加shell
 225:Dsp/letter_shell/shell.c ****  * 
 226:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 227:Dsp/letter_shell/shell.c ****  */
 228:Dsp/letter_shell/shell.c **** static void shellAdd(Shell *shell)
 229:Dsp/letter_shell/shell.c **** {
  29              		.loc 1 229 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.LBB2:
 230:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
  36              		.loc 1 230 0
  37 0000 0023     		movs	r3, #0
  38 0002 0AE0     		b	.L2
  39              	.LVL1:
  40              	.L5:
 231:Dsp/letter_shell/shell.c ****     {
 232:Dsp/letter_shell/shell.c ****         if (shellList[i] == NULL)
  41              		.loc 1 232 0
  42 0004 1946     		mov	r1, r3
  43 0006 064A     		ldr	r2, .L6
  44 0008 52F82320 		ldr	r2, [r2, r3, lsl #2]
  45 000c 1AB9     		cbnz	r2, .L3
 233:Dsp/letter_shell/shell.c ****         {
 234:Dsp/letter_shell/shell.c ****             shellList[i] = shell;
  46              		.loc 1 234 0
  47 000e 044B     		ldr	r3, .L6
  48              	.LVL2:
  49 0010 43F82100 		str	r0, [r3, r1, lsl #2]
 235:Dsp/letter_shell/shell.c ****             return;
  50              		.loc 1 235 0
  51 0014 7047     		bx	lr
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 6


  52              	.LVL3:
  53              	.L3:
 230:Dsp/letter_shell/shell.c ****     {
  54              		.loc 1 230 0 discriminator 2
  55 0016 0133     		adds	r3, r3, #1
  56              	.LVL4:
  57 0018 1BB2     		sxth	r3, r3
  58              	.LVL5:
  59              	.L2:
 230:Dsp/letter_shell/shell.c ****     {
  60              		.loc 1 230 0 is_stmt 0 discriminator 1
  61 001a 042B     		cmp	r3, #4
  62 001c F2DD     		ble	.L5
  63 001e 7047     		bx	lr
  64              	.L7:
  65              		.align	2
  66              	.L6:
  67 0020 00000000 		.word	.LANCHOR0
  68              	.LBE2:
  69              		.cfi_endproc
  70              	.LFE125:
  72              		.section	.text.shellStringCopy,"ax",%progbits
  73              		.align	2
  74              		.thumb
  75              		.thumb_func
  77              	shellStringCopy:
  78              	.LFB136:
 236:Dsp/letter_shell/shell.c ****         }
 237:Dsp/letter_shell/shell.c ****     }
 238:Dsp/letter_shell/shell.c **** }
 239:Dsp/letter_shell/shell.c **** 
 240:Dsp/letter_shell/shell.c **** 
 241:Dsp/letter_shell/shell.c **** /**
 242:Dsp/letter_shell/shell.c ****  * @brief 获取当前活动shell
 243:Dsp/letter_shell/shell.c ****  * 
 244:Dsp/letter_shell/shell.c ****  * @return Shell* 当前活动shell对象
 245:Dsp/letter_shell/shell.c ****  */
 246:Dsp/letter_shell/shell.c **** Shell* shellGetCurrent(void)
 247:Dsp/letter_shell/shell.c **** {
 248:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
 249:Dsp/letter_shell/shell.c ****     {
 250:Dsp/letter_shell/shell.c ****         if (shellList[i] && shellList[i]->status.isActive)
 251:Dsp/letter_shell/shell.c ****         {
 252:Dsp/letter_shell/shell.c ****             return shellList[i];
 253:Dsp/letter_shell/shell.c ****         }
 254:Dsp/letter_shell/shell.c ****     }
 255:Dsp/letter_shell/shell.c ****     return NULL;
 256:Dsp/letter_shell/shell.c **** }
 257:Dsp/letter_shell/shell.c **** 
 258:Dsp/letter_shell/shell.c **** 
 259:Dsp/letter_shell/shell.c **** /**
 260:Dsp/letter_shell/shell.c ****  * @brief shell写字符
 261:Dsp/letter_shell/shell.c ****  * 
 262:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 263:Dsp/letter_shell/shell.c ****  * @param data 字符数据
 264:Dsp/letter_shell/shell.c ****  */
 265:Dsp/letter_shell/shell.c **** static void shellWriteByte(Shell *shell, const char data)
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 7


 266:Dsp/letter_shell/shell.c **** {
 267:Dsp/letter_shell/shell.c ****     shell->write(data);
 268:Dsp/letter_shell/shell.c ****     delay_us(50);
 269:Dsp/letter_shell/shell.c **** }
 270:Dsp/letter_shell/shell.c **** 
 271:Dsp/letter_shell/shell.c **** 
 272:Dsp/letter_shell/shell.c **** /**
 273:Dsp/letter_shell/shell.c ****  * @brief shell 写字符串
 274:Dsp/letter_shell/shell.c ****  * 
 275:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 276:Dsp/letter_shell/shell.c ****  * @param string 字符串数据
 277:Dsp/letter_shell/shell.c ****  * 
 278:Dsp/letter_shell/shell.c ****  * @return unsigned short 写入字符的数量
 279:Dsp/letter_shell/shell.c ****  */
 280:Dsp/letter_shell/shell.c **** unsigned short shellWriteString(Shell *shell, const char *string)
 281:Dsp/letter_shell/shell.c **** {
 282:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
 283:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell->write, return 0);
 284:Dsp/letter_shell/shell.c ****     while(*string)
 285:Dsp/letter_shell/shell.c ****     {
 286:Dsp/letter_shell/shell.c ****         shell->write(*string ++);
 287:Dsp/letter_shell/shell.c ****         count ++;
 288:Dsp/letter_shell/shell.c ****         delay_us(100);
 289:Dsp/letter_shell/shell.c ****     }
 290:Dsp/letter_shell/shell.c ****     return count;
 291:Dsp/letter_shell/shell.c **** }
 292:Dsp/letter_shell/shell.c **** 
 293:Dsp/letter_shell/shell.c **** 
 294:Dsp/letter_shell/shell.c **** /**
 295:Dsp/letter_shell/shell.c ****  * @brief shell 写命令描述字符串
 296:Dsp/letter_shell/shell.c ****  * 
 297:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 298:Dsp/letter_shell/shell.c ****  * @param string 字符串数据
 299:Dsp/letter_shell/shell.c ****  * 
 300:Dsp/letter_shell/shell.c ****  * @return unsigned short 写入字符的数量
 301:Dsp/letter_shell/shell.c ****  */
 302:Dsp/letter_shell/shell.c **** static unsigned short shellWriteCommandDesc(Shell *shell, const char *string)
 303:Dsp/letter_shell/shell.c **** {
 304:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
 305:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell->write, return 0);
 306:Dsp/letter_shell/shell.c ****     while(*string
 307:Dsp/letter_shell/shell.c ****         && *string != '\r'
 308:Dsp/letter_shell/shell.c ****         && *string != '\n'
 309:Dsp/letter_shell/shell.c ****         && count < 36)
 310:Dsp/letter_shell/shell.c ****     {
 311:Dsp/letter_shell/shell.c ****         shell->write(*string ++);
 312:Dsp/letter_shell/shell.c ****         delay_us(10);
 313:Dsp/letter_shell/shell.c ****         count ++;
 314:Dsp/letter_shell/shell.c ****         if (count >= 36 && *(string + 1))
 315:Dsp/letter_shell/shell.c ****         {
 316:Dsp/letter_shell/shell.c ****             shell->write('.');
 317:Dsp/letter_shell/shell.c ****             shell->write('.');
 318:Dsp/letter_shell/shell.c ****             shell->write('.');
 319:Dsp/letter_shell/shell.c ****         }
 320:Dsp/letter_shell/shell.c ****     }
 321:Dsp/letter_shell/shell.c ****     return count;
 322:Dsp/letter_shell/shell.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 8


 323:Dsp/letter_shell/shell.c **** 
 324:Dsp/letter_shell/shell.c **** 
 325:Dsp/letter_shell/shell.c **** /**
 326:Dsp/letter_shell/shell.c ****  * @brief shell写命令提示符
 327:Dsp/letter_shell/shell.c ****  * 
 328:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 329:Dsp/letter_shell/shell.c ****  * @param newline 新行
 330:Dsp/letter_shell/shell.c ****  * 
 331:Dsp/letter_shell/shell.c ****  */
 332:Dsp/letter_shell/shell.c **** static void shellWriteCommandLine(Shell *shell, unsigned char newline)
 333:Dsp/letter_shell/shell.c **** {
 334:Dsp/letter_shell/shell.c ****     if (shell->status.isChecked)
 335:Dsp/letter_shell/shell.c ****     {
 336:Dsp/letter_shell/shell.c ****         if (newline)
 337:Dsp/letter_shell/shell.c ****         {
 338:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
 339:Dsp/letter_shell/shell.c ****         }
 340:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->info.user->data.user.name);
 341:Dsp/letter_shell/shell.c ****         shellWriteString(shell, ":");
 342:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->info.path ? shell->info.path : "/");
 343:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "$ ");
 344:Dsp/letter_shell/shell.c ****     }
 345:Dsp/letter_shell/shell.c ****     else
 346:Dsp/letter_shell/shell.c ****     {
 347:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_PASSWORD_HINT]);
 348:Dsp/letter_shell/shell.c ****     }
 349:Dsp/letter_shell/shell.c **** }
 350:Dsp/letter_shell/shell.c **** 
 351:Dsp/letter_shell/shell.c **** 
 352:Dsp/letter_shell/shell.c **** #if SHELL_PRINT_BUFFER > 0
 353:Dsp/letter_shell/shell.c **** /**
 354:Dsp/letter_shell/shell.c ****  * @brief shell格式化输出
 355:Dsp/letter_shell/shell.c ****  * 
 356:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 357:Dsp/letter_shell/shell.c ****  * @param fmt 格式化字符串
 358:Dsp/letter_shell/shell.c ****  * @param ... 参数
 359:Dsp/letter_shell/shell.c ****  */
 360:Dsp/letter_shell/shell.c **** void shellPrint(Shell *shell, char *fmt, ...)
 361:Dsp/letter_shell/shell.c **** {
 362:Dsp/letter_shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 363:Dsp/letter_shell/shell.c ****     va_list vargs;
 364:Dsp/letter_shell/shell.c **** 
 365:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell, return);
 366:Dsp/letter_shell/shell.c **** 
 367:Dsp/letter_shell/shell.c ****     va_start(vargs, fmt);
 368:Dsp/letter_shell/shell.c ****     vsnprintf(buffer, SHELL_PRINT_BUFFER - 1, fmt, vargs);
 369:Dsp/letter_shell/shell.c ****     va_end(vargs);
 370:Dsp/letter_shell/shell.c ****     
 371:Dsp/letter_shell/shell.c ****     shellWriteString(shell, buffer);
 372:Dsp/letter_shell/shell.c **** }
 373:Dsp/letter_shell/shell.c **** #endif
 374:Dsp/letter_shell/shell.c **** 
 375:Dsp/letter_shell/shell.c **** 
 376:Dsp/letter_shell/shell.c **** #if SHELL_SCAN_BUFFER > 0
 377:Dsp/letter_shell/shell.c **** /**
 378:Dsp/letter_shell/shell.c ****  * @brief shell格式化输入
 379:Dsp/letter_shell/shell.c ****  * 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 9


 380:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 381:Dsp/letter_shell/shell.c ****  * @param fmt 格式化字符串
 382:Dsp/letter_shell/shell.c ****  * @param ... 参数
 383:Dsp/letter_shell/shell.c ****  */
 384:Dsp/letter_shell/shell.c **** void shellScan(Shell *shell, char *fmt, ...)
 385:Dsp/letter_shell/shell.c **** {
 386:Dsp/letter_shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 387:Dsp/letter_shell/shell.c ****     va_list vargs;
 388:Dsp/letter_shell/shell.c ****     short index = 0;
 389:Dsp/letter_shell/shell.c **** 
 390:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell, return);
 391:Dsp/letter_shell/shell.c **** 
 392:Dsp/letter_shell/shell.c ****     if (shell->read)
 393:Dsp/letter_shell/shell.c ****     {
 394:Dsp/letter_shell/shell.c ****         do {
 395:Dsp/letter_shell/shell.c ****             if (shell->read(&buffer[index]) == 0)
 396:Dsp/letter_shell/shell.c ****             {
 397:Dsp/letter_shell/shell.c ****                 shell->write(buffer[index]);
 398:Dsp/letter_shell/shell.c ****                 index++;
 399:Dsp/letter_shell/shell.c ****             }
 400:Dsp/letter_shell/shell.c ****         } while (buffer[index -1] != '\r' && buffer[index -1] != '\n' && index < SHELL_SCAN_BUFFER)
 401:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 402:Dsp/letter_shell/shell.c ****         buffer[index] = '\0';
 403:Dsp/letter_shell/shell.c ****     }
 404:Dsp/letter_shell/shell.c **** 
 405:Dsp/letter_shell/shell.c ****     va_start(vargs, fmt);
 406:Dsp/letter_shell/shell.c ****     vsscanf(buffer, fmt, vargs);
 407:Dsp/letter_shell/shell.c ****     va_end(vargs);
 408:Dsp/letter_shell/shell.c **** }
 409:Dsp/letter_shell/shell.c **** #endif
 410:Dsp/letter_shell/shell.c **** 
 411:Dsp/letter_shell/shell.c **** 
 412:Dsp/letter_shell/shell.c **** /**
 413:Dsp/letter_shell/shell.c ****  * @brief shell 检查命令权限
 414:Dsp/letter_shell/shell.c ****  * 
 415:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 416:Dsp/letter_shell/shell.c ****  * @param command ShellCommand
 417:Dsp/letter_shell/shell.c ****  * 
 418:Dsp/letter_shell/shell.c ****  * @return signed char 0 当前用户具有该命令权限
 419:Dsp/letter_shell/shell.c ****  * @return signec char -1 当前用户不具有该命令权限
 420:Dsp/letter_shell/shell.c ****  */
 421:Dsp/letter_shell/shell.c **** signed char shellCheckPermission(Shell *shell, ShellCommand *command)
 422:Dsp/letter_shell/shell.c **** {
 423:Dsp/letter_shell/shell.c ****     return ((!command->attr.attrs.permission
 424:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.type == SHELL_TYPE_USER
 425:Dsp/letter_shell/shell.c ****                 || (command->attr.attrs.permission 
 426:Dsp/letter_shell/shell.c ****                     & shell->info.user->attr.attrs.permission))
 427:Dsp/letter_shell/shell.c ****             && (shell->status.isChecked
 428:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.enableUnchecked))
 429:Dsp/letter_shell/shell.c ****             ? 0 : -1;
 430:Dsp/letter_shell/shell.c **** }
 431:Dsp/letter_shell/shell.c **** 
 432:Dsp/letter_shell/shell.c **** 
 433:Dsp/letter_shell/shell.c **** /**
 434:Dsp/letter_shell/shell.c ****  * @brief int转16进制字符串
 435:Dsp/letter_shell/shell.c ****  * 
 436:Dsp/letter_shell/shell.c ****  * @param value 数值
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 10


 437:Dsp/letter_shell/shell.c ****  * @param buffer 缓冲
 438:Dsp/letter_shell/shell.c ****  * 
 439:Dsp/letter_shell/shell.c ****  * @return signed char 转换后有效数据长度
 440:Dsp/letter_shell/shell.c ****  */
 441:Dsp/letter_shell/shell.c **** signed char shellToHex(unsigned int value, char *buffer)
 442:Dsp/letter_shell/shell.c **** {
 443:Dsp/letter_shell/shell.c ****     char byte;
 444:Dsp/letter_shell/shell.c ****     unsigned char i = 8;
 445:Dsp/letter_shell/shell.c ****     buffer[8] = 0;
 446:Dsp/letter_shell/shell.c ****     while (value)
 447:Dsp/letter_shell/shell.c ****     {
 448:Dsp/letter_shell/shell.c ****         byte = value & 0x0000000F;
 449:Dsp/letter_shell/shell.c ****         buffer[--i] = (byte > 9) ? (byte + 87) : (byte + 48);
 450:Dsp/letter_shell/shell.c ****         value >>= 4;
 451:Dsp/letter_shell/shell.c ****     }
 452:Dsp/letter_shell/shell.c ****     return 8 - i;
 453:Dsp/letter_shell/shell.c **** }
 454:Dsp/letter_shell/shell.c **** 
 455:Dsp/letter_shell/shell.c **** 
 456:Dsp/letter_shell/shell.c **** /**
 457:Dsp/letter_shell/shell.c **** * @brief int转10进制字符串
 458:Dsp/letter_shell/shell.c ****  * 
 459:Dsp/letter_shell/shell.c ****  * @param value 数值
 460:Dsp/letter_shell/shell.c ****  * @param buffer 缓冲
 461:Dsp/letter_shell/shell.c ****  * 
 462:Dsp/letter_shell/shell.c ****  * @return signed char 转换后有效数据长度
 463:Dsp/letter_shell/shell.c ****  */
 464:Dsp/letter_shell/shell.c **** signed char shellToDec(int value, char *buffer)
 465:Dsp/letter_shell/shell.c **** {
 466:Dsp/letter_shell/shell.c ****     unsigned char i = 11;
 467:Dsp/letter_shell/shell.c ****     int v = value;
 468:Dsp/letter_shell/shell.c ****     if (value < 0)
 469:Dsp/letter_shell/shell.c ****     {
 470:Dsp/letter_shell/shell.c ****         v = -value;
 471:Dsp/letter_shell/shell.c ****     }
 472:Dsp/letter_shell/shell.c ****     buffer[11] = 0;
 473:Dsp/letter_shell/shell.c ****     while (v)
 474:Dsp/letter_shell/shell.c ****     {
 475:Dsp/letter_shell/shell.c ****         buffer[--i] = v % 10 + 48;
 476:Dsp/letter_shell/shell.c ****         v /= 10;
 477:Dsp/letter_shell/shell.c ****     }
 478:Dsp/letter_shell/shell.c ****     if (value < 0)
 479:Dsp/letter_shell/shell.c ****     {
 480:Dsp/letter_shell/shell.c ****         buffer[--i] = '-';
 481:Dsp/letter_shell/shell.c ****     }
 482:Dsp/letter_shell/shell.c ****     if (value == 0) {
 483:Dsp/letter_shell/shell.c ****         buffer[--i] = '0';
 484:Dsp/letter_shell/shell.c ****     }
 485:Dsp/letter_shell/shell.c ****     return 11 - i;
 486:Dsp/letter_shell/shell.c **** }
 487:Dsp/letter_shell/shell.c **** 
 488:Dsp/letter_shell/shell.c **** 
 489:Dsp/letter_shell/shell.c **** /**
 490:Dsp/letter_shell/shell.c ****  * @brief shell字符串复制
 491:Dsp/letter_shell/shell.c ****  * 
 492:Dsp/letter_shell/shell.c ****  * @param dest 目标字符串
 493:Dsp/letter_shell/shell.c ****  * @param src 源字符串
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 11


 494:Dsp/letter_shell/shell.c ****  * @return unsigned short 字符串长度
 495:Dsp/letter_shell/shell.c ****  */
 496:Dsp/letter_shell/shell.c **** static unsigned short shellStringCopy(char *dest, char* src)
 497:Dsp/letter_shell/shell.c **** {
  79              		.loc 1 497 0 is_stmt 1
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL6:
  85 0000 10B4     		push	{r4}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 4, -4
  89 0002 0446     		mov	r4, r0
  90              	.LVL7:
 498:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
  91              		.loc 1 498 0
  92 0004 0020     		movs	r0, #0
  93              	.LVL8:
 499:Dsp/letter_shell/shell.c ****     while (*(src + count))
  94              		.loc 1 499 0
  95 0006 02E0     		b	.L9
  96              	.LVL9:
  97              	.L10:
 500:Dsp/letter_shell/shell.c ****     {
 501:Dsp/letter_shell/shell.c ****         *(dest + count) = *(src + count);
  98              		.loc 1 501 0
  99 0008 2354     		strb	r3, [r4, r0]
 502:Dsp/letter_shell/shell.c ****         count++;
 100              		.loc 1 502 0
 101 000a 0130     		adds	r0, r0, #1
 102              	.LVL10:
 103 000c 80B2     		uxth	r0, r0
 104              	.LVL11:
 105              	.L9:
 499:Dsp/letter_shell/shell.c ****     while (*(src + count))
 106              		.loc 1 499 0
 107 000e 0B5C     		ldrb	r3, [r1, r0]	@ zero_extendqisi2
 108 0010 002B     		cmp	r3, #0
 109 0012 F9D1     		bne	.L10
 503:Dsp/letter_shell/shell.c ****     }
 504:Dsp/letter_shell/shell.c ****     *(dest + count) = 0;
 110              		.loc 1 504 0
 111 0014 2354     		strb	r3, [r4, r0]
 505:Dsp/letter_shell/shell.c ****     return count;
 506:Dsp/letter_shell/shell.c **** }
 112              		.loc 1 506 0
 113 0016 5DF8044B 		ldr	r4, [sp], #4
 114              	.LCFI1:
 115              		.cfi_restore 4
 116              		.cfi_def_cfa_offset 0
 117              	.LVL12:
 118 001a 7047     		bx	lr
 119              		.cfi_endproc
 120              	.LFE136:
 122              		.section	.text.shellStringCompare,"ax",%progbits
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 12


 123              		.align	2
 124              		.thumb
 125              		.thumb_func
 127              	shellStringCompare:
 128              	.LFB137:
 507:Dsp/letter_shell/shell.c **** 
 508:Dsp/letter_shell/shell.c **** 
 509:Dsp/letter_shell/shell.c **** /**
 510:Dsp/letter_shell/shell.c ****  * @brief shell字符串比较
 511:Dsp/letter_shell/shell.c ****  * 
 512:Dsp/letter_shell/shell.c ****  * @param dest 目标字符串
 513:Dsp/letter_shell/shell.c ****  * @param src 源字符串
 514:Dsp/letter_shell/shell.c ****  * @return unsigned short 匹配长度
 515:Dsp/letter_shell/shell.c ****  */
 516:Dsp/letter_shell/shell.c **** static unsigned short shellStringCompare(char* dest, char *src)
 517:Dsp/letter_shell/shell.c **** {
 129              		.loc 1 517 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              	.LVL13:
 135 0000 30B4     		push	{r4, r5}
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 4, -8
 139              		.cfi_offset 5, -4
 140 0002 0546     		mov	r5, r0
 141              	.LVL14:
 518:Dsp/letter_shell/shell.c ****     unsigned short match = 0;
 519:Dsp/letter_shell/shell.c ****     unsigned short i = 0;
 142              		.loc 1 519 0
 143 0004 0023     		movs	r3, #0
 518:Dsp/letter_shell/shell.c ****     unsigned short match = 0;
 144              		.loc 1 518 0
 145 0006 1846     		mov	r0, r3
 146              	.LVL15:
 520:Dsp/letter_shell/shell.c **** 
 521:Dsp/letter_shell/shell.c ****     while (*(dest +i) && *(src + i))
 147              		.loc 1 521 0
 148 0008 05E0     		b	.L13
 149              	.LVL16:
 150              	.L15:
 522:Dsp/letter_shell/shell.c ****     {
 523:Dsp/letter_shell/shell.c ****         if (*(dest + i) != *(src +i))
 151              		.loc 1 523 0
 152 000a A242     		cmp	r2, r4
 153 000c 08D1     		bne	.L14
 524:Dsp/letter_shell/shell.c ****         {
 525:Dsp/letter_shell/shell.c ****             break;
 526:Dsp/letter_shell/shell.c ****         }
 527:Dsp/letter_shell/shell.c ****         match ++;
 154              		.loc 1 527 0
 155 000e 0130     		adds	r0, r0, #1
 156              	.LVL17:
 157 0010 80B2     		uxth	r0, r0
 158              	.LVL18:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 13


 528:Dsp/letter_shell/shell.c ****         i++;
 159              		.loc 1 528 0
 160 0012 0133     		adds	r3, r3, #1
 161              	.LVL19:
 162 0014 9BB2     		uxth	r3, r3
 163              	.LVL20:
 164              	.L13:
 521:Dsp/letter_shell/shell.c ****     {
 165              		.loc 1 521 0
 166 0016 EA5C     		ldrb	r2, [r5, r3]	@ zero_extendqisi2
 167 0018 12B1     		cbz	r2, .L14
 521:Dsp/letter_shell/shell.c ****     {
 168              		.loc 1 521 0 is_stmt 0 discriminator 1
 169 001a CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 170 001c 002C     		cmp	r4, #0
 171 001e F4D1     		bne	.L15
 172              	.L14:
 529:Dsp/letter_shell/shell.c ****     }
 530:Dsp/letter_shell/shell.c ****     return match;
 531:Dsp/letter_shell/shell.c **** }
 173              		.loc 1 531 0 is_stmt 1
 174 0020 30BC     		pop	{r4, r5}
 175              	.LCFI3:
 176              		.cfi_restore 5
 177              		.cfi_restore 4
 178              		.cfi_def_cfa_offset 0
 179              	.LVL21:
 180 0022 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE137:
 184              		.section	.text.shellGetCommandDesc,"ax",%progbits
 185              		.align	2
 186              		.thumb
 187              		.thumb_func
 189              	shellGetCommandDesc:
 190              	.LFB139:
 532:Dsp/letter_shell/shell.c **** 
 533:Dsp/letter_shell/shell.c **** 
 534:Dsp/letter_shell/shell.c **** /**
 535:Dsp/letter_shell/shell.c ****  * @brief shell获取命令名
 536:Dsp/letter_shell/shell.c ****  * 
 537:Dsp/letter_shell/shell.c ****  * @param command 命令
 538:Dsp/letter_shell/shell.c ****  * @return const char* 命令名
 539:Dsp/letter_shell/shell.c ****  */
 540:Dsp/letter_shell/shell.c **** static const char* shellGetCommandName(ShellCommand *command)
 541:Dsp/letter_shell/shell.c **** {
 542:Dsp/letter_shell/shell.c ****     static char buffer[9];
 543:Dsp/letter_shell/shell.c ****     for (unsigned char i = 0; i < 9; i++)
 544:Dsp/letter_shell/shell.c ****     {
 545:Dsp/letter_shell/shell.c ****         buffer[i] = '0';
 546:Dsp/letter_shell/shell.c ****     }
 547:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 548:Dsp/letter_shell/shell.c ****     {
 549:Dsp/letter_shell/shell.c ****         return command->data.cmd.name;
 550:Dsp/letter_shell/shell.c ****     }
 551:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 552:Dsp/letter_shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 14


 553:Dsp/letter_shell/shell.c ****         return command->data.var.name;
 554:Dsp/letter_shell/shell.c ****     }
 555:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_USER)
 556:Dsp/letter_shell/shell.c ****     {
 557:Dsp/letter_shell/shell.c ****         return command->data.user.name;
 558:Dsp/letter_shell/shell.c ****     }
 559:Dsp/letter_shell/shell.c ****     else
 560:Dsp/letter_shell/shell.c ****     {
 561:Dsp/letter_shell/shell.c ****         shellToHex(command->data.key.value, buffer);
 562:Dsp/letter_shell/shell.c ****         return buffer;
 563:Dsp/letter_shell/shell.c ****     }
 564:Dsp/letter_shell/shell.c **** }
 565:Dsp/letter_shell/shell.c **** 
 566:Dsp/letter_shell/shell.c **** 
 567:Dsp/letter_shell/shell.c **** /**
 568:Dsp/letter_shell/shell.c ****  * @brief shell获取命令描述
 569:Dsp/letter_shell/shell.c ****  * 
 570:Dsp/letter_shell/shell.c ****  * @param command 命令
 571:Dsp/letter_shell/shell.c ****  * @return const char* 命令描述
 572:Dsp/letter_shell/shell.c ****  */
 573:Dsp/letter_shell/shell.c **** static const char* shellGetCommandDesc(ShellCommand *command)
 574:Dsp/letter_shell/shell.c **** {
 191              		.loc 1 574 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL22:
 575:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 197              		.loc 1 575 0
 198 0000 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 199 0002 03F00F03 		and	r3, r3, #15
 200 0006 012B     		cmp	r3, #1
 201 0008 01DC     		bgt	.L18
 576:Dsp/letter_shell/shell.c ****     {
 577:Dsp/letter_shell/shell.c ****         return command->data.cmd.desc;
 202              		.loc 1 577 0
 203 000a C068     		ldr	r0, [r0, #12]
 204              	.LVL23:
 205 000c 7047     		bx	lr
 206              	.LVL24:
 207              	.L18:
 578:Dsp/letter_shell/shell.c ****     }
 579:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 208              		.loc 1 579 0
 209 000e 072B     		cmp	r3, #7
 210 0010 01DC     		bgt	.L20
 580:Dsp/letter_shell/shell.c ****     {
 581:Dsp/letter_shell/shell.c ****         return command->data.var.desc;
 211              		.loc 1 581 0
 212 0012 C068     		ldr	r0, [r0, #12]
 213              	.LVL25:
 214 0014 7047     		bx	lr
 215              	.LVL26:
 216              	.L20:
 582:Dsp/letter_shell/shell.c ****     }
 583:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_USER)
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 15


 217              		.loc 1 583 0
 218 0016 082B     		cmp	r3, #8
 219 0018 01DC     		bgt	.L21
 584:Dsp/letter_shell/shell.c ****     {
 585:Dsp/letter_shell/shell.c ****         return command->data.user.desc;
 220              		.loc 1 585 0
 221 001a C068     		ldr	r0, [r0, #12]
 222              	.LVL27:
 223 001c 7047     		bx	lr
 224              	.LVL28:
 225              	.L21:
 586:Dsp/letter_shell/shell.c ****     }
 587:Dsp/letter_shell/shell.c ****     else
 588:Dsp/letter_shell/shell.c ****     {
 589:Dsp/letter_shell/shell.c ****         return command->data.key.desc;
 226              		.loc 1 589 0
 227 001e C068     		ldr	r0, [r0, #12]
 228              	.LVL29:
 590:Dsp/letter_shell/shell.c ****     }
 591:Dsp/letter_shell/shell.c **** }
 229              		.loc 1 591 0
 230 0020 7047     		bx	lr
 231              		.cfi_endproc
 232              	.LFE139:
 234 0022 00BF     		.section	.text.shellParserParam,"ax",%progbits
 235              		.align	2
 236              		.thumb
 237              		.thumb_func
 239              	shellParserParam:
 240              	.LFB150:
 592:Dsp/letter_shell/shell.c **** 
 593:Dsp/letter_shell/shell.c **** /**
 594:Dsp/letter_shell/shell.c ****  * @brief shell 列出命令条目
 595:Dsp/letter_shell/shell.c ****  * 
 596:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 597:Dsp/letter_shell/shell.c ****  * @param item 命令条目
 598:Dsp/letter_shell/shell.c ****  */
 599:Dsp/letter_shell/shell.c **** void shellListItem(Shell *shell, ShellCommand *item)
 600:Dsp/letter_shell/shell.c **** {
 601:Dsp/letter_shell/shell.c ****     short spaceLength;
 602:Dsp/letter_shell/shell.c **** 
 603:Dsp/letter_shell/shell.c ****     spaceLength = 22 - shellWriteString(shell, shellGetCommandName(item));
 604:Dsp/letter_shell/shell.c ****     spaceLength = (spaceLength > 0) ? spaceLength : 4;
 605:Dsp/letter_shell/shell.c ****     do {
 606:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, '-');
 607:Dsp/letter_shell/shell.c ****     } while (--spaceLength);
 608:Dsp/letter_shell/shell.c ****     if (item->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 609:Dsp/letter_shell/shell.c ****     {
 610:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_CMD]);
 611:Dsp/letter_shell/shell.c ****     }
 612:Dsp/letter_shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 613:Dsp/letter_shell/shell.c ****     {
 614:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_VAR]);
 615:Dsp/letter_shell/shell.c ****     }
 616:Dsp/letter_shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_USER)
 617:Dsp/letter_shell/shell.c ****     {
 618:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_USER]);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 16


 619:Dsp/letter_shell/shell.c ****     }
 620:Dsp/letter_shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_KEY)
 621:Dsp/letter_shell/shell.c ****     {
 622:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_KEY]);
 623:Dsp/letter_shell/shell.c ****     }
 624:Dsp/letter_shell/shell.c ****     else
 625:Dsp/letter_shell/shell.c ****     {
 626:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_NONE]);
 627:Dsp/letter_shell/shell.c ****     }
 628:Dsp/letter_shell/shell.c **** #if SHELL_HELP_SHOW_PERMISSION == 1
 629:Dsp/letter_shell/shell.c ****     shellWriteString(shell, " ");
 630:Dsp/letter_shell/shell.c ****     for (signed char i = 7; i >= 0; i--)
 631:Dsp/letter_shell/shell.c ****     {
 632:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, item->attr.attrs.permission & (1 << i) ? 'x' : '-');
 633:Dsp/letter_shell/shell.c ****     }
 634:Dsp/letter_shell/shell.c **** #endif
 635:Dsp/letter_shell/shell.c ****     // shellWriteString(shell, " ");
 636:Dsp/letter_shell/shell.c ****     // shellWriteCommandDesc(shell, shellGetCommandDesc(item));
 637:Dsp/letter_shell/shell.c ****     // shellWriteString(shell, "\r\n");
 638:Dsp/letter_shell/shell.c **** }
 639:Dsp/letter_shell/shell.c **** 
 640:Dsp/letter_shell/shell.c **** 
 641:Dsp/letter_shell/shell.c **** /**
 642:Dsp/letter_shell/shell.c ****  * @brief shell列出可执行命令
 643:Dsp/letter_shell/shell.c ****  * 
 644:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 645:Dsp/letter_shell/shell.c ****  */
 646:Dsp/letter_shell/shell.c **** void shellListCommand(Shell *shell)
 647:Dsp/letter_shell/shell.c **** {
 648:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 649:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CMD_LIST]);
 650:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 651:Dsp/letter_shell/shell.c ****     {
 652:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type <= SHELL_TYPE_CMD_FUNC
 653:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 654:Dsp/letter_shell/shell.c ****         {
 655:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[i]);
 656:Dsp/letter_shell/shell.c ****         }
 657:Dsp/letter_shell/shell.c ****     }
 658:Dsp/letter_shell/shell.c **** }
 659:Dsp/letter_shell/shell.c **** 
 660:Dsp/letter_shell/shell.c **** 
 661:Dsp/letter_shell/shell.c **** /**
 662:Dsp/letter_shell/shell.c ****  * @brief shell列出变量
 663:Dsp/letter_shell/shell.c ****  * 
 664:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 665:Dsp/letter_shell/shell.c ****  */
 666:Dsp/letter_shell/shell.c **** void shellListVar(Shell *shell)
 667:Dsp/letter_shell/shell.c **** {
 668:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 669:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_VAR_LIST]);
 670:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 671:Dsp/letter_shell/shell.c ****     {
 672:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_CMD_FUNC
 673:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_VAR_NODE
 674:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 675:Dsp/letter_shell/shell.c ****         {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 17


 676:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[i]);
 677:Dsp/letter_shell/shell.c ****         }
 678:Dsp/letter_shell/shell.c ****     }
 679:Dsp/letter_shell/shell.c **** }
 680:Dsp/letter_shell/shell.c **** 
 681:Dsp/letter_shell/shell.c **** 
 682:Dsp/letter_shell/shell.c **** /**
 683:Dsp/letter_shell/shell.c ****  * @brief shell列出用户
 684:Dsp/letter_shell/shell.c ****  * 
 685:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 686:Dsp/letter_shell/shell.c ****  */
 687:Dsp/letter_shell/shell.c **** void shellListUser(Shell *shell)
 688:Dsp/letter_shell/shell.c **** {
 689:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 690:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_USER_LIST]);
 691:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 692:Dsp/letter_shell/shell.c ****     {
 693:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_VAR_NODE
 694:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_USER
 695:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 696:Dsp/letter_shell/shell.c ****         {
 697:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[i]);
 698:Dsp/letter_shell/shell.c ****         }
 699:Dsp/letter_shell/shell.c ****     }
 700:Dsp/letter_shell/shell.c **** }
 701:Dsp/letter_shell/shell.c **** 
 702:Dsp/letter_shell/shell.c **** 
 703:Dsp/letter_shell/shell.c **** /**
 704:Dsp/letter_shell/shell.c ****  * @brief shell列出按键
 705:Dsp/letter_shell/shell.c ****  * 
 706:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 707:Dsp/letter_shell/shell.c ****  */
 708:Dsp/letter_shell/shell.c **** void shellListKey(Shell *shell)
 709:Dsp/letter_shell/shell.c **** {
 710:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 711:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_KEY_LIST]);
 712:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 713:Dsp/letter_shell/shell.c ****     {
 714:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_USER
 715:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_KEY
 716:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 717:Dsp/letter_shell/shell.c ****         {
 718:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[i]);
 719:Dsp/letter_shell/shell.c ****         }
 720:Dsp/letter_shell/shell.c ****     }
 721:Dsp/letter_shell/shell.c **** }
 722:Dsp/letter_shell/shell.c **** 
 723:Dsp/letter_shell/shell.c **** 
 724:Dsp/letter_shell/shell.c **** /**
 725:Dsp/letter_shell/shell.c ****  * @brief shell列出所有命令
 726:Dsp/letter_shell/shell.c ****  * 
 727:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 728:Dsp/letter_shell/shell.c ****  */
 729:Dsp/letter_shell/shell.c **** void shellListAll(Shell *shell)
 730:Dsp/letter_shell/shell.c **** {
 731:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_USER == 1
 732:Dsp/letter_shell/shell.c ****     shellListUser(shell);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 18


 733:Dsp/letter_shell/shell.c **** #endif
 734:Dsp/letter_shell/shell.c ****     shellListCommand(shell);
 735:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_VAR == 1
 736:Dsp/letter_shell/shell.c ****     shellListVar(shell);
 737:Dsp/letter_shell/shell.c **** #endif
 738:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_KEY == 1
 739:Dsp/letter_shell/shell.c ****     shellListKey(shell);
 740:Dsp/letter_shell/shell.c **** #endif
 741:Dsp/letter_shell/shell.c **** }
 742:Dsp/letter_shell/shell.c **** 
 743:Dsp/letter_shell/shell.c **** 
 744:Dsp/letter_shell/shell.c **** /**
 745:Dsp/letter_shell/shell.c ****  * @brief shell删除命令行数据
 746:Dsp/letter_shell/shell.c ****  * 
 747:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 748:Dsp/letter_shell/shell.c ****  * @param length 删除长度
 749:Dsp/letter_shell/shell.c ****  */
 750:Dsp/letter_shell/shell.c **** void shellDeleteCommandLine(Shell *shell, unsigned char length)
 751:Dsp/letter_shell/shell.c **** {
 752:Dsp/letter_shell/shell.c ****     while (length--)
 753:Dsp/letter_shell/shell.c ****     {
 754:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\b \b");
 755:Dsp/letter_shell/shell.c ****     }
 756:Dsp/letter_shell/shell.c **** }
 757:Dsp/letter_shell/shell.c **** 
 758:Dsp/letter_shell/shell.c **** 
 759:Dsp/letter_shell/shell.c **** /**
 760:Dsp/letter_shell/shell.c ****  * @brief shell 清空命令行输入
 761:Dsp/letter_shell/shell.c ****  * 
 762:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 763:Dsp/letter_shell/shell.c ****  */
 764:Dsp/letter_shell/shell.c **** void shellClearCommandLine(Shell *shell)
 765:Dsp/letter_shell/shell.c **** {
 766:Dsp/letter_shell/shell.c ****     for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 767:Dsp/letter_shell/shell.c ****     {
 768:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, ' ');
 769:Dsp/letter_shell/shell.c ****     }
 770:Dsp/letter_shell/shell.c ****     shellDeleteCommandLine(shell, shell->parser.length);
 771:Dsp/letter_shell/shell.c **** }
 772:Dsp/letter_shell/shell.c **** 
 773:Dsp/letter_shell/shell.c **** 
 774:Dsp/letter_shell/shell.c **** /**
 775:Dsp/letter_shell/shell.c ****  * @brief shell插入一个字符到光标位置
 776:Dsp/letter_shell/shell.c ****  * 
 777:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 778:Dsp/letter_shell/shell.c ****  * @param data 字符数据
 779:Dsp/letter_shell/shell.c ****  */
 780:Dsp/letter_shell/shell.c **** void shellInsertByte(Shell *shell, char data)
 781:Dsp/letter_shell/shell.c **** {
 782:Dsp/letter_shell/shell.c ****     /* 判断输入数据是否过长 */
 783:Dsp/letter_shell/shell.c ****     if (shell->parser.length >= shell->parser.bufferSize - 1)
 784:Dsp/letter_shell/shell.c ****     {
 785:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CMD_TOO_LONG]);
 786:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 1);
 787:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 788:Dsp/letter_shell/shell.c ****         return;
 789:Dsp/letter_shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 19


 790:Dsp/letter_shell/shell.c **** 
 791:Dsp/letter_shell/shell.c ****     /* 插入数据 */
 792:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor == shell->parser.length)
 793:Dsp/letter_shell/shell.c ****     {
 794:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length++] = data;
 795:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 796:Dsp/letter_shell/shell.c ****         shell->parser.cursor++;
 797:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, data);
 798:Dsp/letter_shell/shell.c ****     }
 799:Dsp/letter_shell/shell.c ****     else if (shell->parser.cursor < shell->parser.length)
 800:Dsp/letter_shell/shell.c ****     {
 801:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 802:Dsp/letter_shell/shell.c ****         {
 803:Dsp/letter_shell/shell.c ****             shell->parser.buffer[shell->parser.cursor + i] = 
 804:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 805:Dsp/letter_shell/shell.c ****         }
 806:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.cursor++] = data;
 807:Dsp/letter_shell/shell.c ****         shell->parser.buffer[++shell->parser.length] = 0;
 808:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.cursor - 1; i < shell->parser.length; i++)
 809:Dsp/letter_shell/shell.c ****         {
 810:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, shell->parser.buffer[i]);
 811:Dsp/letter_shell/shell.c ****         }
 812:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 813:Dsp/letter_shell/shell.c ****         {
 814:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, '\b');
 815:Dsp/letter_shell/shell.c ****         }
 816:Dsp/letter_shell/shell.c ****     }
 817:Dsp/letter_shell/shell.c **** }
 818:Dsp/letter_shell/shell.c **** 
 819:Dsp/letter_shell/shell.c **** 
 820:Dsp/letter_shell/shell.c **** /**
 821:Dsp/letter_shell/shell.c ****  * @brief shell 删除字节
 822:Dsp/letter_shell/shell.c ****  * 
 823:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 824:Dsp/letter_shell/shell.c ****  * @param direction 删除方向 {@code 1}删除光标前字符 {@code -1}删除光标处字符
 825:Dsp/letter_shell/shell.c ****  */
 826:Dsp/letter_shell/shell.c **** void shellDeleteByte(Shell *shell, signed char direction)
 827:Dsp/letter_shell/shell.c **** {
 828:Dsp/letter_shell/shell.c ****     char offset = (direction == -1) ? 1 : 0;
 829:Dsp/letter_shell/shell.c **** 
 830:Dsp/letter_shell/shell.c ****     if ((shell->parser.cursor == 0 && direction == 1)
 831:Dsp/letter_shell/shell.c ****         || (shell->parser.cursor == shell->parser.length && direction == -1))
 832:Dsp/letter_shell/shell.c ****     {
 833:Dsp/letter_shell/shell.c ****         return;
 834:Dsp/letter_shell/shell.c ****     }
 835:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor == shell->parser.length && direction == 1)
 836:Dsp/letter_shell/shell.c ****     {
 837:Dsp/letter_shell/shell.c ****         shell->parser.cursor--;
 838:Dsp/letter_shell/shell.c ****         shell->parser.length--;
 839:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 840:Dsp/letter_shell/shell.c ****         shellDeleteCommandLine(shell, 1);
 841:Dsp/letter_shell/shell.c ****     }
 842:Dsp/letter_shell/shell.c ****     else
 843:Dsp/letter_shell/shell.c ****     {
 844:Dsp/letter_shell/shell.c ****         for (short i = offset; i < shell->parser.length - shell->parser.cursor; i++)
 845:Dsp/letter_shell/shell.c ****         {
 846:Dsp/letter_shell/shell.c ****             shell->parser.buffer[shell->parser.cursor + i - 1] = 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 20


 847:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 848:Dsp/letter_shell/shell.c ****         }
 849:Dsp/letter_shell/shell.c ****         shell->parser.length--;
 850:Dsp/letter_shell/shell.c ****         if (!offset)
 851:Dsp/letter_shell/shell.c ****         {
 852:Dsp/letter_shell/shell.c ****             shell->parser.cursor--;
 853:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, '\b');
 854:Dsp/letter_shell/shell.c ****         }
 855:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 856:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.cursor; i < shell->parser.length; i++)
 857:Dsp/letter_shell/shell.c ****         {
 858:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, shell->parser.buffer[i]);
 859:Dsp/letter_shell/shell.c ****         }
 860:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, ' ');
 861:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor + 1; i > 0; i--)
 862:Dsp/letter_shell/shell.c ****         {
 863:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, '\b');
 864:Dsp/letter_shell/shell.c ****         }
 865:Dsp/letter_shell/shell.c ****     }
 866:Dsp/letter_shell/shell.c **** }
 867:Dsp/letter_shell/shell.c **** 
 868:Dsp/letter_shell/shell.c **** 
 869:Dsp/letter_shell/shell.c **** /**
 870:Dsp/letter_shell/shell.c ****  * @brief shell 解析参数
 871:Dsp/letter_shell/shell.c ****  * 
 872:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 873:Dsp/letter_shell/shell.c ****  */
 874:Dsp/letter_shell/shell.c **** static void shellParserParam(Shell *shell)
 875:Dsp/letter_shell/shell.c **** {
 241              		.loc 1 875 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246              	.LVL30:
 247              	.LBB3:
 876:Dsp/letter_shell/shell.c ****     unsigned char quotes = 0;
 877:Dsp/letter_shell/shell.c ****     unsigned char record = 1;
 878:Dsp/letter_shell/shell.c **** 
 879:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_PARAMETER_MAX_NUMBER; i++)
 248              		.loc 1 879 0
 249 0000 0023     		movs	r3, #0
 250 0002 06E0     		b	.L23
 251              	.LVL31:
 252              	.L24:
 880:Dsp/letter_shell/shell.c ****     {
 881:Dsp/letter_shell/shell.c ****         shell->parser.param[i] = NULL;
 253              		.loc 1 881 0 discriminator 3
 254 0004 1A1D     		adds	r2, r3, #4
 255 0006 00EB8202 		add	r2, r0, r2, lsl #2
 256 000a 0021     		movs	r1, #0
 257 000c 5160     		str	r1, [r2, #4]
 879:Dsp/letter_shell/shell.c ****     {
 258              		.loc 1 879 0 discriminator 3
 259 000e 0133     		adds	r3, r3, #1
 260              	.LVL32:
 261 0010 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 21


 262              	.LVL33:
 263              	.L23:
 879:Dsp/letter_shell/shell.c ****     {
 264              		.loc 1 879 0 is_stmt 0 discriminator 1
 265 0012 072B     		cmp	r3, #7
 266 0014 F6DD     		ble	.L24
 267              	.LBE3:
 875:Dsp/letter_shell/shell.c ****     unsigned char quotes = 0;
 268              		.loc 1 875 0 is_stmt 1
 269 0016 F0B4     		push	{r4, r5, r6, r7}
 270              	.LCFI4:
 271              		.cfi_def_cfa_offset 16
 272              		.cfi_offset 4, -16
 273              		.cfi_offset 5, -12
 274              		.cfi_offset 6, -8
 275              		.cfi_offset 7, -4
 882:Dsp/letter_shell/shell.c ****     }
 883:Dsp/letter_shell/shell.c **** 
 884:Dsp/letter_shell/shell.c ****     shell->parser.paramCount = 0;
 276              		.loc 1 884 0
 277 0018 0021     		movs	r1, #0
 278 001a C186     		strh	r1, [r0, #54]	@ movhi
 279              	.LVL34:
 280              	.LBB4:
 885:Dsp/letter_shell/shell.c ****     for (unsigned short i = 0; i < shell->parser.length; i++)
 281              		.loc 1 885 0
 282 001c 0B46     		mov	r3, r1
 283              	.LVL35:
 284              	.LBE4:
 877:Dsp/letter_shell/shell.c **** 
 285              		.loc 1 877 0
 286 001e 0126     		movs	r6, #1
 287              	.LBB5:
 288              		.loc 1 885 0
 289 0020 29E0     		b	.L25
 290              	.LVL36:
 291              	.L31:
 886:Dsp/letter_shell/shell.c ****     {
 887:Dsp/letter_shell/shell.c ****         if (quotes != 0
 292              		.loc 1 887 0
 293 0022 29B9     		cbnz	r1, .L26
 888:Dsp/letter_shell/shell.c ****             || (shell->parser.buffer[i] != ' '
 294              		.loc 1 888 0
 295 0024 0269     		ldr	r2, [r0, #16]
 296 0026 D418     		adds	r4, r2, r3
 297 0028 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 298 002a 202A     		cmp	r2, #32
 299 002c 1ED0     		beq	.L27
 889:Dsp/letter_shell/shell.c ****                 && shell->parser.buffer[i] != 0))
 300              		.loc 1 889 0
 301 002e EAB1     		cbz	r2, .L27
 302              	.L26:
 890:Dsp/letter_shell/shell.c ****         {
 891:Dsp/letter_shell/shell.c ****             if (shell->parser.buffer[i] == '\"')
 303              		.loc 1 891 0
 304 0030 0269     		ldr	r2, [r0, #16]
 305 0032 1F46     		mov	r7, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 22


 306 0034 D418     		adds	r4, r2, r3
 307 0036 D55C     		ldrb	r5, [r2, r3]	@ zero_extendqisi2
 308 0038 222D     		cmp	r5, #34
 309 003a 01D1     		bne	.L28
 892:Dsp/letter_shell/shell.c ****             {
 893:Dsp/letter_shell/shell.c ****                 quotes = quotes ? 0 : 1;
 310              		.loc 1 893 0
 311 003c 81F00101 		eor	r1, r1, #1
 312              	.LVL37:
 313              	.L28:
 894:Dsp/letter_shell/shell.c ****             }
 895:Dsp/letter_shell/shell.c ****             if (record == 1)
 314              		.loc 1 895 0
 315 0040 5EB1     		cbz	r6, .L29
 896:Dsp/letter_shell/shell.c ****             {
 897:Dsp/letter_shell/shell.c ****                 if (shell->parser.paramCount < SHELL_PARAMETER_MAX_NUMBER)
 316              		.loc 1 897 0
 317 0042 C58E     		ldrh	r5, [r0, #54]
 318 0044 072D     		cmp	r5, #7
 319 0046 07D8     		bhi	.L32
 898:Dsp/letter_shell/shell.c ****                 {
 899:Dsp/letter_shell/shell.c ****                     shell->parser.param[shell->parser.paramCount++] =
 320              		.loc 1 899 0
 321 0048 6E1C     		adds	r6, r5, #1
 322              	.LVL38:
 323 004a C686     		strh	r6, [r0, #54]	@ movhi
 324 004c 0435     		adds	r5, r5, #4
 325 004e 00EB8505 		add	r5, r0, r5, lsl #2
 326 0052 6C60     		str	r4, [r5, #4]
 900:Dsp/letter_shell/shell.c ****                         &(shell->parser.buffer[i]);
 901:Dsp/letter_shell/shell.c ****                 }
 902:Dsp/letter_shell/shell.c ****                 record = 0;
 327              		.loc 1 902 0
 328 0054 0026     		movs	r6, #0
 329 0056 00E0     		b	.L29
 330              	.LVL39:
 331              	.L32:
 332 0058 0026     		movs	r6, #0
 333              	.LVL40:
 334              	.L29:
 903:Dsp/letter_shell/shell.c ****             }
 904:Dsp/letter_shell/shell.c ****             if (shell->parser.buffer[i] == '\\'
 335              		.loc 1 904 0
 336 005a 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 337 005c 5C2C     		cmp	r4, #92
 338 005e 08D1     		bne	.L30
 905:Dsp/letter_shell/shell.c ****                 && shell->parser.buffer[i + 1] != 0)
 339              		.loc 1 905 0
 340 0060 0137     		adds	r7, r7, #1
 341 0062 D25D     		ldrb	r2, [r2, r7]	@ zero_extendqisi2
 342 0064 2AB1     		cbz	r2, .L30
 906:Dsp/letter_shell/shell.c ****             {
 907:Dsp/letter_shell/shell.c ****                 i++;
 343              		.loc 1 907 0
 344 0066 0133     		adds	r3, r3, #1
 345              	.LVL41:
 346 0068 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 23


 347              	.LVL42:
 348 006a 02E0     		b	.L30
 349              	.L27:
 908:Dsp/letter_shell/shell.c ****             }
 909:Dsp/letter_shell/shell.c ****         }
 910:Dsp/letter_shell/shell.c ****         else
 911:Dsp/letter_shell/shell.c ****         {
 912:Dsp/letter_shell/shell.c ****             shell->parser.buffer[i] = 0;
 350              		.loc 1 912 0
 351 006c 0022     		movs	r2, #0
 352 006e 2270     		strb	r2, [r4]
 353              	.LVL43:
 913:Dsp/letter_shell/shell.c ****             record = 1;
 354              		.loc 1 913 0
 355 0070 0126     		movs	r6, #1
 356              	.LVL44:
 357              	.L30:
 885:Dsp/letter_shell/shell.c ****     {
 358              		.loc 1 885 0 discriminator 2
 359 0072 0133     		adds	r3, r3, #1
 360              	.LVL45:
 361 0074 9BB2     		uxth	r3, r3
 362              	.LVL46:
 363              	.L25:
 885:Dsp/letter_shell/shell.c ****     {
 364              		.loc 1 885 0 is_stmt 0 discriminator 1
 365 0076 8289     		ldrh	r2, [r0, #12]
 366 0078 9342     		cmp	r3, r2
 367 007a D2D3     		bcc	.L31
 368              	.LBE5:
 914:Dsp/letter_shell/shell.c ****         }
 915:Dsp/letter_shell/shell.c ****     }
 916:Dsp/letter_shell/shell.c **** }
 369              		.loc 1 916 0 is_stmt 1
 370 007c F0BC     		pop	{r4, r5, r6, r7}
 371              	.LCFI5:
 372              		.cfi_restore 7
 373              		.cfi_restore 6
 374              		.cfi_restore 5
 375              		.cfi_restore 4
 376              		.cfi_def_cfa_offset 0
 377              	.LVL47:
 378 007e 7047     		bx	lr
 379              		.cfi_endproc
 380              	.LFE150:
 382              		.section	.text.shellHistoryAdd,"ax",%progbits
 383              		.align	2
 384              		.thumb
 385              		.thumb_func
 387              	shellHistoryAdd:
 388              	.LFB161:
 917:Dsp/letter_shell/shell.c **** 
 918:Dsp/letter_shell/shell.c **** 
 919:Dsp/letter_shell/shell.c **** /**
 920:Dsp/letter_shell/shell.c ****  * @brief shell去除字符串参数头尾的双引号
 921:Dsp/letter_shell/shell.c ****  * 
 922:Dsp/letter_shell/shell.c ****  * @param shell shell对象
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 24


 923:Dsp/letter_shell/shell.c ****  */
 924:Dsp/letter_shell/shell.c **** static void shellRemoveParamQuotes(Shell *shell)
 925:Dsp/letter_shell/shell.c **** {
 926:Dsp/letter_shell/shell.c ****     unsigned short paramLength;
 927:Dsp/letter_shell/shell.c ****     for (unsigned short i = 0; i < shell->parser.paramCount; i++)
 928:Dsp/letter_shell/shell.c ****     {
 929:Dsp/letter_shell/shell.c ****         if (shell->parser.param[i][0] == '\"')
 930:Dsp/letter_shell/shell.c ****         {
 931:Dsp/letter_shell/shell.c ****             shell->parser.param[i][0] = 0;
 932:Dsp/letter_shell/shell.c ****             shell->parser.param[i] = &shell->parser.param[i][1];
 933:Dsp/letter_shell/shell.c ****         }
 934:Dsp/letter_shell/shell.c ****         paramLength = strlen(shell->parser.param[i]);
 935:Dsp/letter_shell/shell.c ****         if (shell->parser.param[i][paramLength - 1] == '\"')
 936:Dsp/letter_shell/shell.c ****         {
 937:Dsp/letter_shell/shell.c ****             shell->parser.param[i][paramLength - 1] = 0;
 938:Dsp/letter_shell/shell.c ****         }
 939:Dsp/letter_shell/shell.c ****     }
 940:Dsp/letter_shell/shell.c **** }
 941:Dsp/letter_shell/shell.c **** 
 942:Dsp/letter_shell/shell.c **** 
 943:Dsp/letter_shell/shell.c **** /**
 944:Dsp/letter_shell/shell.c ****  * @brief shell匹配命令
 945:Dsp/letter_shell/shell.c ****  * 
 946:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 947:Dsp/letter_shell/shell.c ****  * @param cmd 命令
 948:Dsp/letter_shell/shell.c ****  * @param base 匹配命令表基址
 949:Dsp/letter_shell/shell.c ****  * @param compareLength 匹配字符串长度
 950:Dsp/letter_shell/shell.c ****  * @return ShellCommand* 匹配到的命令
 951:Dsp/letter_shell/shell.c ****  */
 952:Dsp/letter_shell/shell.c **** ShellCommand* shellSeekCommand(Shell *shell,
 953:Dsp/letter_shell/shell.c ****                                const char *cmd,
 954:Dsp/letter_shell/shell.c ****                                ShellCommand *base,
 955:Dsp/letter_shell/shell.c ****                                unsigned short compareLength)
 956:Dsp/letter_shell/shell.c **** {
 957:Dsp/letter_shell/shell.c ****     const char *name;
 958:Dsp/letter_shell/shell.c ****     int ret;
 959:Dsp/letter_shell/shell.c ****     unsigned short count = shell->commandList.count -
 960:Dsp/letter_shell/shell.c ****         ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 961:Dsp/letter_shell/shell.c ****     for (unsigned short i = 0; i < count; i++)
 962:Dsp/letter_shell/shell.c ****     {
 963:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type == SHELL_TYPE_KEY
 964:Dsp/letter_shell/shell.c ****             || shellCheckPermission(shell, &base[i]) != 0)
 965:Dsp/letter_shell/shell.c ****         {
 966:Dsp/letter_shell/shell.c ****             continue;
 967:Dsp/letter_shell/shell.c ****         }
 968:Dsp/letter_shell/shell.c ****         name = shellGetCommandName(&base[i]);
 969:Dsp/letter_shell/shell.c ****         if (!compareLength)
 970:Dsp/letter_shell/shell.c ****         {
 971:Dsp/letter_shell/shell.c ****             ret = strcmp(cmd, name);
 972:Dsp/letter_shell/shell.c ****             if (strcmp(cmd, name) == 0)
 973:Dsp/letter_shell/shell.c ****             {
 974:Dsp/letter_shell/shell.c ****                 return &base[i];
 975:Dsp/letter_shell/shell.c ****             }
 976:Dsp/letter_shell/shell.c ****         }
 977:Dsp/letter_shell/shell.c ****         else
 978:Dsp/letter_shell/shell.c ****         {
 979:Dsp/letter_shell/shell.c ****             if (strncmp(cmd, name, compareLength) == 0)
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 25


 980:Dsp/letter_shell/shell.c ****             {
 981:Dsp/letter_shell/shell.c ****                 return &base[i];
 982:Dsp/letter_shell/shell.c ****             }
 983:Dsp/letter_shell/shell.c ****         }
 984:Dsp/letter_shell/shell.c ****     }
 985:Dsp/letter_shell/shell.c ****     return NULL;
 986:Dsp/letter_shell/shell.c **** }
 987:Dsp/letter_shell/shell.c **** 
 988:Dsp/letter_shell/shell.c **** 
 989:Dsp/letter_shell/shell.c **** /**
 990:Dsp/letter_shell/shell.c ****  * @brief shell 获取变量值
 991:Dsp/letter_shell/shell.c ****  * 
 992:Dsp/letter_shell/shell.c ****  * @param shell shell对象
 993:Dsp/letter_shell/shell.c ****  * @param command 命令
 994:Dsp/letter_shell/shell.c ****  * @return int 变量值
 995:Dsp/letter_shell/shell.c ****  */
 996:Dsp/letter_shell/shell.c **** int shellGetVarValue(Shell *shell, ShellCommand *command)
 997:Dsp/letter_shell/shell.c **** {
 998:Dsp/letter_shell/shell.c ****     int value = 0;
 999:Dsp/letter_shell/shell.c ****     switch (command->attr.attrs.type)
1000:Dsp/letter_shell/shell.c ****     {
1001:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_INT:
1002:Dsp/letter_shell/shell.c ****         value = *((int *)(command->data.var.value));
1003:Dsp/letter_shell/shell.c ****         break;
1004:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_SHORT:
1005:Dsp/letter_shell/shell.c ****         value = *((short *)(command->data.var.value));
1006:Dsp/letter_shell/shell.c ****         break;
1007:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_CHAR:
1008:Dsp/letter_shell/shell.c ****         value = *((char *)(command->data.var.value));
1009:Dsp/letter_shell/shell.c ****         break;
1010:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
1011:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_POINT:
1012:Dsp/letter_shell/shell.c ****         value = (int)(command->data.var.value);
1013:Dsp/letter_shell/shell.c ****         break;
1014:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_NODE:
1015:Dsp/letter_shell/shell.c ****         value = ((ShellNodeVarAttr *)command->data.var.value)->get ?
1016:Dsp/letter_shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)
1017:Dsp/letter_shell/shell.c ****                         ->get(((ShellNodeVarAttr *)command->data.var.value)->var) : 0;
1018:Dsp/letter_shell/shell.c ****         break;
1019:Dsp/letter_shell/shell.c ****     default:
1020:Dsp/letter_shell/shell.c ****         break;
1021:Dsp/letter_shell/shell.c ****     }
1022:Dsp/letter_shell/shell.c ****     return value;
1023:Dsp/letter_shell/shell.c **** }
1024:Dsp/letter_shell/shell.c **** 
1025:Dsp/letter_shell/shell.c **** 
1026:Dsp/letter_shell/shell.c **** /**
1027:Dsp/letter_shell/shell.c ****  * @brief shell设置变量值
1028:Dsp/letter_shell/shell.c ****  * 
1029:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1030:Dsp/letter_shell/shell.c ****  * @param command 命令
1031:Dsp/letter_shell/shell.c ****  * @param value 值
1032:Dsp/letter_shell/shell.c ****  * @return int 返回变量值
1033:Dsp/letter_shell/shell.c ****  */
1034:Dsp/letter_shell/shell.c **** int shellSetVarValue(Shell *shell, ShellCommand *command, int value)
1035:Dsp/letter_shell/shell.c **** {
1036:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.readOnly)
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 26


1037:Dsp/letter_shell/shell.c ****     {
1038:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY]);
1039:Dsp/letter_shell/shell.c ****     }
1040:Dsp/letter_shell/shell.c ****     else
1041:Dsp/letter_shell/shell.c ****     {
1042:Dsp/letter_shell/shell.c ****         switch (command->attr.attrs.type)
1043:Dsp/letter_shell/shell.c ****         {
1044:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_INT:
1045:Dsp/letter_shell/shell.c ****             *((int *)(command->data.var.value)) = value;
1046:Dsp/letter_shell/shell.c ****             break;
1047:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_SHORT:
1048:Dsp/letter_shell/shell.c ****             *((short *)(command->data.var.value)) = value;
1049:Dsp/letter_shell/shell.c ****             break;
1050:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_CHAR:
1051:Dsp/letter_shell/shell.c ****             *((char *)(command->data.var.value)) = value;
1052:Dsp/letter_shell/shell.c ****             break;
1053:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_STRING:
1054:Dsp/letter_shell/shell.c ****             shellStringCopy(((char *)(command->data.var.value)), (char *)value);
1055:Dsp/letter_shell/shell.c ****             break;
1056:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_POINT:
1057:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_POINT_CANNOT_MODIFY]);
1058:Dsp/letter_shell/shell.c ****             break;
1059:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_NODE:
1060:Dsp/letter_shell/shell.c ****             if (((ShellNodeVarAttr *)command->data.var.value)->set)
1061:Dsp/letter_shell/shell.c ****             {
1062:Dsp/letter_shell/shell.c ****                 if (((ShellNodeVarAttr *)command->data.var.value)->var)
1063:Dsp/letter_shell/shell.c ****                 {
1064:Dsp/letter_shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)
1065:Dsp/letter_shell/shell.c ****                         ->set(((ShellNodeVarAttr *)command->data.var.value)->var, value);
1066:Dsp/letter_shell/shell.c ****                 }
1067:Dsp/letter_shell/shell.c ****                 else
1068:Dsp/letter_shell/shell.c ****                 {
1069:Dsp/letter_shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)->set(value);
1070:Dsp/letter_shell/shell.c ****                 }
1071:Dsp/letter_shell/shell.c ****             }
1072:Dsp/letter_shell/shell.c ****             break;
1073:Dsp/letter_shell/shell.c ****         default:
1074:Dsp/letter_shell/shell.c ****             break;
1075:Dsp/letter_shell/shell.c ****         }
1076:Dsp/letter_shell/shell.c ****     }
1077:Dsp/letter_shell/shell.c ****     return shellShowVar(shell, command);
1078:Dsp/letter_shell/shell.c **** }
1079:Dsp/letter_shell/shell.c **** 
1080:Dsp/letter_shell/shell.c **** 
1081:Dsp/letter_shell/shell.c **** /**
1082:Dsp/letter_shell/shell.c ****  * @brief shell变量输出
1083:Dsp/letter_shell/shell.c ****  * 
1084:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1085:Dsp/letter_shell/shell.c ****  * @param command 命令
1086:Dsp/letter_shell/shell.c ****  * @return int 返回变量值
1087:Dsp/letter_shell/shell.c ****  */
1088:Dsp/letter_shell/shell.c **** static int shellShowVar(Shell *shell, ShellCommand *command)
1089:Dsp/letter_shell/shell.c **** {
1090:Dsp/letter_shell/shell.c ****     char buffer[12] = "00000000000";
1091:Dsp/letter_shell/shell.c ****     int value = shellGetVarValue(shell, command);
1092:Dsp/letter_shell/shell.c ****     
1093:Dsp/letter_shell/shell.c ****     shellWriteString(shell, command->data.var.name);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 27


1094:Dsp/letter_shell/shell.c ****     shellWriteString(shell, " = ");
1095:Dsp/letter_shell/shell.c **** 
1096:Dsp/letter_shell/shell.c ****     switch (command->attr.attrs.type)
1097:Dsp/letter_shell/shell.c ****     {
1098:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
1099:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\"");
1100:Dsp/letter_shell/shell.c ****         shellWriteString(shell, (char *)value);
1101:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\"");
1102:Dsp/letter_shell/shell.c ****         break;
1103:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_INT:
1104:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_SHORT:
1105:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_CHAR:
1106:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_POINT:
1107:Dsp/letter_shell/shell.c ****     default:
1108:Dsp/letter_shell/shell.c ****         shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
1109:Dsp/letter_shell/shell.c ****         shellWriteString(shell, ", 0x");
1110:Dsp/letter_shell/shell.c ****         for (short i = 0; i < 11; i++)
1111:Dsp/letter_shell/shell.c ****         {
1112:Dsp/letter_shell/shell.c ****             buffer[i] = '0';
1113:Dsp/letter_shell/shell.c ****         }
1114:Dsp/letter_shell/shell.c ****         shellToHex(value, buffer);
1115:Dsp/letter_shell/shell.c ****         shellWriteString(shell, buffer);
1116:Dsp/letter_shell/shell.c ****         break;
1117:Dsp/letter_shell/shell.c ****     }
1118:Dsp/letter_shell/shell.c **** 
1119:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "\r\n");
1120:Dsp/letter_shell/shell.c ****     return value;
1121:Dsp/letter_shell/shell.c **** }
1122:Dsp/letter_shell/shell.c **** 
1123:Dsp/letter_shell/shell.c **** 
1124:Dsp/letter_shell/shell.c **** /**
1125:Dsp/letter_shell/shell.c ****  * @brief shell设置变量
1126:Dsp/letter_shell/shell.c ****  * 
1127:Dsp/letter_shell/shell.c ****  * @param name 变量名
1128:Dsp/letter_shell/shell.c ****  * @param value 变量值
1129:Dsp/letter_shell/shell.c ****  * @return int 返回变量值
1130:Dsp/letter_shell/shell.c ****  */
1131:Dsp/letter_shell/shell.c **** int shellSetVar(char *name, int value)
1132:Dsp/letter_shell/shell.c **** {
1133:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1134:Dsp/letter_shell/shell.c ****     if (shell == NULL)
1135:Dsp/letter_shell/shell.c ****     {
1136:Dsp/letter_shell/shell.c ****         return 0;
1137:Dsp/letter_shell/shell.c ****     }
1138:Dsp/letter_shell/shell.c ****     ShellCommand *command = shellSeekCommand(shell,
1139:Dsp/letter_shell/shell.c ****                                              name,
1140:Dsp/letter_shell/shell.c ****                                              shell->commandList.base,
1141:Dsp/letter_shell/shell.c ****                                              0);
1142:Dsp/letter_shell/shell.c ****     if (!command)
1143:Dsp/letter_shell/shell.c ****     {
1144:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_VAR_NOT_FOUND]);
1145:Dsp/letter_shell/shell.c ****         return 0;
1146:Dsp/letter_shell/shell.c ****     }
1147:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type < SHELL_TYPE_VAR_INT
1148:Dsp/letter_shell/shell.c ****         || command->attr.attrs.type > SHELL_TYPE_VAR_NODE)
1149:Dsp/letter_shell/shell.c ****     {
1150:Dsp/letter_shell/shell.c ****         shellWriteString(shell, name);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 28


1151:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_NOT_VAR]);
1152:Dsp/letter_shell/shell.c ****         return 0;
1153:Dsp/letter_shell/shell.c ****     }
1154:Dsp/letter_shell/shell.c ****     return shellSetVarValue(shell, command, value);
1155:Dsp/letter_shell/shell.c **** }
1156:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1157:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1158:Dsp/letter_shell/shell.c **** setVar, shellSetVar, set var);
1159:Dsp/letter_shell/shell.c **** 
1160:Dsp/letter_shell/shell.c **** 
1161:Dsp/letter_shell/shell.c **** /**
1162:Dsp/letter_shell/shell.c ****  * @brief shell运行命令
1163:Dsp/letter_shell/shell.c ****  * 
1164:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1165:Dsp/letter_shell/shell.c ****  * @param command 命令
1166:Dsp/letter_shell/shell.c ****  * 
1167:Dsp/letter_shell/shell.c ****  * @return unsigned int 命令返回值
1168:Dsp/letter_shell/shell.c ****  */
1169:Dsp/letter_shell/shell.c **** unsigned int shellRunCommand(Shell *shell, ShellCommand *command)
1170:Dsp/letter_shell/shell.c **** {
1171:Dsp/letter_shell/shell.c ****     int returnValue = 0;
1172:Dsp/letter_shell/shell.c ****     shell->status.isActive = 1;
1173:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type == SHELL_TYPE_CMD_MAIN)
1174:Dsp/letter_shell/shell.c ****     {
1175:Dsp/letter_shell/shell.c ****         shellRemoveParamQuotes(shell);
1176:Dsp/letter_shell/shell.c ****         returnValue = command->data.cmd.function(shell->parser.paramCount,
1177:Dsp/letter_shell/shell.c ****                                                  shell->parser.param);
1178:Dsp/letter_shell/shell.c ****         if (!command->attr.attrs.disableReturn)
1179:Dsp/letter_shell/shell.c ****         {
1180:Dsp/letter_shell/shell.c ****             shellWriteReturnValue(shell, returnValue);
1181:Dsp/letter_shell/shell.c ****         }
1182:Dsp/letter_shell/shell.c ****     }
1183:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type == SHELL_TYPE_CMD_FUNC)
1184:Dsp/letter_shell/shell.c ****     {
1185:Dsp/letter_shell/shell.c ****         returnValue = shellExtRun(shell,
1186:Dsp/letter_shell/shell.c ****                                   command,
1187:Dsp/letter_shell/shell.c ****                                   shell->parser.paramCount,
1188:Dsp/letter_shell/shell.c ****                                   shell->parser.param);
1189:Dsp/letter_shell/shell.c ****         if (!command->attr.attrs.disableReturn)
1190:Dsp/letter_shell/shell.c ****         {
1191:Dsp/letter_shell/shell.c ****             shellWriteReturnValue(shell, returnValue);
1192:Dsp/letter_shell/shell.c ****         }
1193:Dsp/letter_shell/shell.c ****     }
1194:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type >= SHELL_TYPE_VAR_INT
1195:Dsp/letter_shell/shell.c ****         && command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
1196:Dsp/letter_shell/shell.c ****     {
1197:Dsp/letter_shell/shell.c ****         shellShowVar(shell, command);
1198:Dsp/letter_shell/shell.c ****     }
1199:Dsp/letter_shell/shell.c ****     else if (command->attr.attrs.type == SHELL_TYPE_USER)
1200:Dsp/letter_shell/shell.c ****     {
1201:Dsp/letter_shell/shell.c ****         shellSetUser(shell, command);
1202:Dsp/letter_shell/shell.c ****     }
1203:Dsp/letter_shell/shell.c ****     shell->status.isActive = 0;
1204:Dsp/letter_shell/shell.c **** 
1205:Dsp/letter_shell/shell.c ****     return returnValue;
1206:Dsp/letter_shell/shell.c **** }
1207:Dsp/letter_shell/shell.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 29


1208:Dsp/letter_shell/shell.c **** 
1209:Dsp/letter_shell/shell.c **** /**
1210:Dsp/letter_shell/shell.c ****  * @brief shell校验密码
1211:Dsp/letter_shell/shell.c ****  * 
1212:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1213:Dsp/letter_shell/shell.c ****  */
1214:Dsp/letter_shell/shell.c **** static void shellCheckPassword(Shell *shell)
1215:Dsp/letter_shell/shell.c **** {
1216:Dsp/letter_shell/shell.c ****     if (strcmp(shell->parser.buffer, shell->info.user->data.user.password) == 0)
1217:Dsp/letter_shell/shell.c ****     {
1218:Dsp/letter_shell/shell.c ****         shell->status.isChecked = 1;
1219:Dsp/letter_shell/shell.c ****     #if SHELL_SHOW_INFO == 1
1220:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_INFO]);
1221:Dsp/letter_shell/shell.c ****     #endif
1222:Dsp/letter_shell/shell.c ****     }
1223:Dsp/letter_shell/shell.c ****     else
1224:Dsp/letter_shell/shell.c ****     {
1225:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_PASSWORD_ERROR]);
1226:Dsp/letter_shell/shell.c ****     }
1227:Dsp/letter_shell/shell.c ****     shell->parser.length = 0;
1228:Dsp/letter_shell/shell.c ****     shell->parser.cursor = 0;
1229:Dsp/letter_shell/shell.c **** }
1230:Dsp/letter_shell/shell.c **** 
1231:Dsp/letter_shell/shell.c **** 
1232:Dsp/letter_shell/shell.c **** /**
1233:Dsp/letter_shell/shell.c ****  * @brief shell设置用户
1234:Dsp/letter_shell/shell.c ****  * 
1235:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1236:Dsp/letter_shell/shell.c ****  * @param user 用户
1237:Dsp/letter_shell/shell.c ****  */
1238:Dsp/letter_shell/shell.c **** static void shellSetUser(Shell *shell, const ShellCommand *user)
1239:Dsp/letter_shell/shell.c **** {
1240:Dsp/letter_shell/shell.c ****     shell->info.user = user;
1241:Dsp/letter_shell/shell.c ****     shell->status.isChecked = 
1242:Dsp/letter_shell/shell.c ****         ((user->data.user.password && strlen(user->data.user.password) != 0)
1243:Dsp/letter_shell/shell.c ****             && (shell->parser.paramCount < 2
1244:Dsp/letter_shell/shell.c ****                 || strcmp(user->data.user.password, shell->parser.param[1]) != 0))
1245:Dsp/letter_shell/shell.c ****          ? 0 : 1;
1246:Dsp/letter_shell/shell.c ****         
1247:Dsp/letter_shell/shell.c **** #if SHELL_CLS_WHEN_LOGIN == 1
1248:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_CONSOLE]);
1249:Dsp/letter_shell/shell.c **** #endif
1250:Dsp/letter_shell/shell.c **** #if SHELL_SHOW_INFO == 1
1251:Dsp/letter_shell/shell.c ****     if (shell->status.isChecked)
1252:Dsp/letter_shell/shell.c ****     {
1253:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_INFO]);
1254:Dsp/letter_shell/shell.c ****     }
1255:Dsp/letter_shell/shell.c **** #endif
1256:Dsp/letter_shell/shell.c **** }
1257:Dsp/letter_shell/shell.c **** 
1258:Dsp/letter_shell/shell.c **** 
1259:Dsp/letter_shell/shell.c **** /**
1260:Dsp/letter_shell/shell.c ****  * @brief shell写返回值
1261:Dsp/letter_shell/shell.c ****  * 
1262:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1263:Dsp/letter_shell/shell.c ****  * @param value 返回值
1264:Dsp/letter_shell/shell.c ****  */
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 30


1265:Dsp/letter_shell/shell.c **** static void shellWriteReturnValue(Shell *shell, int value)
1266:Dsp/letter_shell/shell.c **** {
1267:Dsp/letter_shell/shell.c ****     char buffer[12] = "00000000000";
1268:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "Return: ");
1269:Dsp/letter_shell/shell.c ****     shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
1270:Dsp/letter_shell/shell.c ****     shellWriteString(shell, ", 0x");
1271:Dsp/letter_shell/shell.c ****     for (short i = 0; i < 11; i++)
1272:Dsp/letter_shell/shell.c ****     {
1273:Dsp/letter_shell/shell.c ****         buffer[i] = '0';
1274:Dsp/letter_shell/shell.c ****     }
1275:Dsp/letter_shell/shell.c ****     shellToHex(value, buffer);
1276:Dsp/letter_shell/shell.c ****     shellWriteString(shell, buffer);
1277:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "\r\n");
1278:Dsp/letter_shell/shell.c **** }
1279:Dsp/letter_shell/shell.c **** 
1280:Dsp/letter_shell/shell.c **** 
1281:Dsp/letter_shell/shell.c **** /**
1282:Dsp/letter_shell/shell.c ****  * @brief shell历史记录添加
1283:Dsp/letter_shell/shell.c ****  * 
1284:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1285:Dsp/letter_shell/shell.c ****  */
1286:Dsp/letter_shell/shell.c **** static void shellHistoryAdd(Shell *shell)
1287:Dsp/letter_shell/shell.c **** {
 389              		.loc 1 1287 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              	.LVL48:
 394 0000 10B5     		push	{r4, lr}
 395              	.LCFI6:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 4, -8
 398              		.cfi_offset 14, -4
 399 0002 0446     		mov	r4, r0
1288:Dsp/letter_shell/shell.c ****     shell->history.offset = 0;
 400              		.loc 1 1288 0
 401 0004 0023     		movs	r3, #0
 402 0006 A0F85430 		strh	r3, [r0, #84]	@ movhi
1289:Dsp/letter_shell/shell.c ****     if (shell->history.number > 0
 403              		.loc 1 1289 0
 404 000a B0F85030 		ldrh	r3, [r0, #80]
 405 000e 6BB1     		cbz	r3, .L35
1290:Dsp/letter_shell/shell.c ****         && strcmp(shell->history.item[(shell->history.record == 0 ? 
 406              		.loc 1 1290 0
 407 0010 B0F85230 		ldrh	r3, [r0, #82]
1291:Dsp/letter_shell/shell.c ****                 SHELL_HISTORY_MAX_NUMBER : shell->history.record) - 1],
 408              		.loc 1 1291 0
 409 0014 0BB1     		cbz	r3, .L40
 410              		.loc 1 1291 0 is_stmt 0 discriminator 1
 411 0016 013B     		subs	r3, r3, #1
 412 0018 00E0     		b	.L36
 413              	.L40:
 414              		.loc 1 1291 0
 415 001a 0423     		movs	r3, #4
 416              	.L36:
1290:Dsp/letter_shell/shell.c ****         && strcmp(shell->history.item[(shell->history.record == 0 ? 
 417              		.loc 1 1290 0 is_stmt 1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 31


 418 001c 0E33     		adds	r3, r3, #14
 419 001e 04EB8303 		add	r3, r4, r3, lsl #2
 420 0022 2169     		ldr	r1, [r4, #16]
 421 0024 5868     		ldr	r0, [r3, #4]
 422              	.LVL49:
 423 0026 FFF7FEFF 		bl	strcmp
 424              	.LVL50:
 425 002a 00B3     		cbz	r0, .L34
 426              	.L35:
1292:Dsp/letter_shell/shell.c ****                 shell->parser.buffer) == 0)
1293:Dsp/letter_shell/shell.c ****     {
1294:Dsp/letter_shell/shell.c ****         return;
1295:Dsp/letter_shell/shell.c ****     }
1296:Dsp/letter_shell/shell.c ****     if (shellStringCopy(shell->history.item[shell->history.record],
 427              		.loc 1 1296 0
 428 002c B4F85230 		ldrh	r3, [r4, #82]
 429 0030 0E33     		adds	r3, r3, #14
 430 0032 04EB8303 		add	r3, r4, r3, lsl #2
 431 0036 2169     		ldr	r1, [r4, #16]
 432 0038 5868     		ldr	r0, [r3, #4]
 433 003a FFF7FEFF 		bl	shellStringCopy
 434              	.LVL51:
 435 003e 20B1     		cbz	r0, .L38
1297:Dsp/letter_shell/shell.c ****                         shell->parser.buffer) != 0)
1298:Dsp/letter_shell/shell.c ****     {
1299:Dsp/letter_shell/shell.c ****         shell->history.record++;
 436              		.loc 1 1299 0
 437 0040 B4F85230 		ldrh	r3, [r4, #82]
 438 0044 0133     		adds	r3, r3, #1
 439 0046 A4F85230 		strh	r3, [r4, #82]	@ movhi
 440              	.L38:
1300:Dsp/letter_shell/shell.c ****     }
1301:Dsp/letter_shell/shell.c ****     if (++shell->history.number > SHELL_HISTORY_MAX_NUMBER)
 441              		.loc 1 1301 0
 442 004a B4F85030 		ldrh	r3, [r4, #80]
 443 004e 0133     		adds	r3, r3, #1
 444 0050 9BB2     		uxth	r3, r3
 445 0052 A4F85030 		strh	r3, [r4, #80]	@ movhi
 446 0056 052B     		cmp	r3, #5
 447 0058 02D9     		bls	.L39
1302:Dsp/letter_shell/shell.c ****     {
1303:Dsp/letter_shell/shell.c ****         shell->history.number = SHELL_HISTORY_MAX_NUMBER;
 448              		.loc 1 1303 0
 449 005a 0523     		movs	r3, #5
 450 005c A4F85030 		strh	r3, [r4, #80]	@ movhi
 451              	.L39:
1304:Dsp/letter_shell/shell.c ****     }
1305:Dsp/letter_shell/shell.c ****     if (shell->history.record >= SHELL_HISTORY_MAX_NUMBER)
 452              		.loc 1 1305 0
 453 0060 B4F85230 		ldrh	r3, [r4, #82]
 454 0064 042B     		cmp	r3, #4
 455 0066 02D9     		bls	.L34
1306:Dsp/letter_shell/shell.c ****     {
1307:Dsp/letter_shell/shell.c ****         shell->history.record = 0;
 456              		.loc 1 1307 0
 457 0068 0023     		movs	r3, #0
 458 006a A4F85230 		strh	r3, [r4, #82]	@ movhi
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 32


 459              	.L34:
 460 006e 10BD     		pop	{r4, pc}
 461              		.cfi_endproc
 462              	.LFE161:
 464              		.section	.text.shellWriteByte,"ax",%progbits
 465              		.align	2
 466              		.thumb
 467              		.thumb_func
 469              	shellWriteByte:
 470              	.LFB127:
 266:Dsp/letter_shell/shell.c ****     shell->write(data);
 471              		.loc 1 266 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              	.LVL52:
 476 0000 08B5     		push	{r3, lr}
 477              	.LCFI7:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 3, -8
 480              		.cfi_offset 14, -4
 267:Dsp/letter_shell/shell.c ****     delay_us(50);
 481              		.loc 1 267 0
 482 0002 836E     		ldr	r3, [r0, #104]
 483 0004 0846     		mov	r0, r1
 484              	.LVL53:
 485 0006 9847     		blx	r3
 486              	.LVL54:
 268:Dsp/letter_shell/shell.c **** }
 487              		.loc 1 268 0
 488 0008 3220     		movs	r0, #50
 489 000a FFF7FEFF 		bl	delay_us
 490              	.LVL55:
 491 000e 08BD     		pop	{r3, pc}
 492              		.cfi_endproc
 493              	.LFE127:
 495              		.section	.text.shellRight,"ax",%progbits
 496              		.align	2
 497              		.global	shellRight
 498              		.thumb
 499              		.thumb_func
 501              	shellRight:
 502              	.LFB167:
1308:Dsp/letter_shell/shell.c ****     }
1309:Dsp/letter_shell/shell.c **** }
1310:Dsp/letter_shell/shell.c **** 
1311:Dsp/letter_shell/shell.c **** 
1312:Dsp/letter_shell/shell.c **** /**
1313:Dsp/letter_shell/shell.c ****  * @brief shell历史记录查找
1314:Dsp/letter_shell/shell.c ****  * 
1315:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1316:Dsp/letter_shell/shell.c ****  * @param dir 方向 {@code <0}往上查找 {@code >0}往下查找
1317:Dsp/letter_shell/shell.c ****  */
1318:Dsp/letter_shell/shell.c **** static void shellHistory(Shell *shell, signed char dir)
1319:Dsp/letter_shell/shell.c **** {
1320:Dsp/letter_shell/shell.c ****     if (dir > 0)
1321:Dsp/letter_shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 33


1322:Dsp/letter_shell/shell.c ****         if (shell->history.offset-- <= 
1323:Dsp/letter_shell/shell.c ****             -((shell->history.number > shell->history.record) ?
1324:Dsp/letter_shell/shell.c ****                 shell->history.number : shell->history.record))
1325:Dsp/letter_shell/shell.c ****         {
1326:Dsp/letter_shell/shell.c ****             shell->history.offset = -((shell->history.number > shell->history.record)
1327:Dsp/letter_shell/shell.c ****                                     ? shell->history.number : shell->history.record);
1328:Dsp/letter_shell/shell.c ****         }
1329:Dsp/letter_shell/shell.c ****     }
1330:Dsp/letter_shell/shell.c ****     else if (dir < 0)
1331:Dsp/letter_shell/shell.c ****     {
1332:Dsp/letter_shell/shell.c ****         if (++shell->history.offset > 0)
1333:Dsp/letter_shell/shell.c ****         {
1334:Dsp/letter_shell/shell.c ****             shell->history.offset = 0;
1335:Dsp/letter_shell/shell.c ****             return;
1336:Dsp/letter_shell/shell.c ****         }
1337:Dsp/letter_shell/shell.c ****     }
1338:Dsp/letter_shell/shell.c ****     else
1339:Dsp/letter_shell/shell.c ****     {
1340:Dsp/letter_shell/shell.c ****         return;
1341:Dsp/letter_shell/shell.c ****     }
1342:Dsp/letter_shell/shell.c ****     shellClearCommandLine(shell);
1343:Dsp/letter_shell/shell.c ****     if (shell->history.offset == 0)
1344:Dsp/letter_shell/shell.c ****     {
1345:Dsp/letter_shell/shell.c ****         shell->parser.cursor = shell->parser.length = 0;
1346:Dsp/letter_shell/shell.c ****     }
1347:Dsp/letter_shell/shell.c ****     else
1348:Dsp/letter_shell/shell.c ****     {
1349:Dsp/letter_shell/shell.c ****         if ((shell->parser.length = shellStringCopy(shell->parser.buffer,
1350:Dsp/letter_shell/shell.c ****                 shell->history.item[(shell->history.record + SHELL_HISTORY_MAX_NUMBER
1351:Dsp/letter_shell/shell.c ****                     + shell->history.offset) % SHELL_HISTORY_MAX_NUMBER])) == 0)
1352:Dsp/letter_shell/shell.c ****         {
1353:Dsp/letter_shell/shell.c ****             return;
1354:Dsp/letter_shell/shell.c ****         }
1355:Dsp/letter_shell/shell.c ****         shell->parser.cursor = shell->parser.length;
1356:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
1357:Dsp/letter_shell/shell.c ****     }
1358:Dsp/letter_shell/shell.c ****     
1359:Dsp/letter_shell/shell.c **** }
1360:Dsp/letter_shell/shell.c **** 
1361:Dsp/letter_shell/shell.c **** 
1362:Dsp/letter_shell/shell.c **** /**
1363:Dsp/letter_shell/shell.c ****  * @brief shell 常规输入
1364:Dsp/letter_shell/shell.c ****  * 
1365:Dsp/letter_shell/shell.c ****  * @param shell shell 对象
1366:Dsp/letter_shell/shell.c ****  * @param data 输入字符
1367:Dsp/letter_shell/shell.c ****  */
1368:Dsp/letter_shell/shell.c **** void shellNormalInput(Shell *shell, char data)
1369:Dsp/letter_shell/shell.c **** {
1370:Dsp/letter_shell/shell.c ****     shell->status.tabFlag = 0;
1371:Dsp/letter_shell/shell.c ****     shellInsertByte(shell, data);
1372:Dsp/letter_shell/shell.c **** }
1373:Dsp/letter_shell/shell.c **** 
1374:Dsp/letter_shell/shell.c **** 
1375:Dsp/letter_shell/shell.c **** /**
1376:Dsp/letter_shell/shell.c ****  * @brief shell运行命令
1377:Dsp/letter_shell/shell.c ****  * 
1378:Dsp/letter_shell/shell.c ****  * @param shell shell对象
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 34


1379:Dsp/letter_shell/shell.c ****  */
1380:Dsp/letter_shell/shell.c **** void shellExec(Shell *shell)
1381:Dsp/letter_shell/shell.c **** {
1382:Dsp/letter_shell/shell.c ****     
1383:Dsp/letter_shell/shell.c ****     if (shell->parser.length == 0)
1384:Dsp/letter_shell/shell.c ****     {
1385:Dsp/letter_shell/shell.c ****         return;
1386:Dsp/letter_shell/shell.c ****     }
1387:Dsp/letter_shell/shell.c **** 
1388:Dsp/letter_shell/shell.c ****     shell->parser.buffer[shell->parser.length] = 0;
1389:Dsp/letter_shell/shell.c **** 
1390:Dsp/letter_shell/shell.c ****     if (shell->status.isChecked)
1391:Dsp/letter_shell/shell.c ****     {
1392:Dsp/letter_shell/shell.c ****         shellHistoryAdd(shell);
1393:Dsp/letter_shell/shell.c ****         shellParserParam(shell);
1394:Dsp/letter_shell/shell.c ****         shell->parser.length = shell->parser.cursor = 0;
1395:Dsp/letter_shell/shell.c ****         if (shell->parser.paramCount == 0)
1396:Dsp/letter_shell/shell.c ****         {
1397:Dsp/letter_shell/shell.c ****             return;
1398:Dsp/letter_shell/shell.c ****         }
1399:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
1400:Dsp/letter_shell/shell.c **** 
1401:Dsp/letter_shell/shell.c ****         ShellCommand *command = shellSeekCommand(shell,
1402:Dsp/letter_shell/shell.c ****                                                  shell->parser.param[0],
1403:Dsp/letter_shell/shell.c ****                                                  shell->commandList.base,
1404:Dsp/letter_shell/shell.c ****                                                  0);
1405:Dsp/letter_shell/shell.c ****         if (command != NULL)
1406:Dsp/letter_shell/shell.c ****         {
1407:Dsp/letter_shell/shell.c ****             shellRunCommand(shell, command);
1408:Dsp/letter_shell/shell.c ****         }
1409:Dsp/letter_shell/shell.c ****         else
1410:Dsp/letter_shell/shell.c ****         {
1411:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_CMD_NOT_FOUND]);
1412:Dsp/letter_shell/shell.c ****         }
1413:Dsp/letter_shell/shell.c ****     }
1414:Dsp/letter_shell/shell.c ****     else
1415:Dsp/letter_shell/shell.c ****     {
1416:Dsp/letter_shell/shell.c ****         shellCheckPassword(shell);
1417:Dsp/letter_shell/shell.c ****     }
1418:Dsp/letter_shell/shell.c **** }
1419:Dsp/letter_shell/shell.c **** 
1420:Dsp/letter_shell/shell.c **** 
1421:Dsp/letter_shell/shell.c **** /**
1422:Dsp/letter_shell/shell.c ****  * @brief shell上方向键输入
1423:Dsp/letter_shell/shell.c ****  * 
1424:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1425:Dsp/letter_shell/shell.c ****  */
1426:Dsp/letter_shell/shell.c **** void shellUp(Shell *shell)
1427:Dsp/letter_shell/shell.c **** {
1428:Dsp/letter_shell/shell.c ****     shellHistory(shell, 1);
1429:Dsp/letter_shell/shell.c **** }
1430:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x1B5B4100, shellUp, up);
1431:Dsp/letter_shell/shell.c **** 
1432:Dsp/letter_shell/shell.c **** 
1433:Dsp/letter_shell/shell.c **** /**
1434:Dsp/letter_shell/shell.c ****  * @brief shell下方向键输入
1435:Dsp/letter_shell/shell.c ****  * 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 35


1436:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1437:Dsp/letter_shell/shell.c ****  */
1438:Dsp/letter_shell/shell.c **** void shellDown(Shell *shell)
1439:Dsp/letter_shell/shell.c **** {
1440:Dsp/letter_shell/shell.c ****     shellHistory(shell, -1);
1441:Dsp/letter_shell/shell.c **** }
1442:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x1B5B4200, shellDown, down);
1443:Dsp/letter_shell/shell.c **** 
1444:Dsp/letter_shell/shell.c **** 
1445:Dsp/letter_shell/shell.c **** /**
1446:Dsp/letter_shell/shell.c ****  * @brief shell右方向键输入
1447:Dsp/letter_shell/shell.c ****  * 
1448:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1449:Dsp/letter_shell/shell.c ****  */
1450:Dsp/letter_shell/shell.c **** void shellRight(Shell *shell)
1451:Dsp/letter_shell/shell.c **** {
 503              		.loc 1 1451 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              	.LVL56:
 508 0000 08B5     		push	{r3, lr}
 509              	.LCFI8:
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 3, -8
 512              		.cfi_offset 14, -4
1452:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor < shell->parser.length)
 513              		.loc 1 1452 0
 514 0002 C389     		ldrh	r3, [r0, #14]
 515 0004 8289     		ldrh	r2, [r0, #12]
 516 0006 9342     		cmp	r3, r2
 517 0008 05D2     		bcs	.L44
1453:Dsp/letter_shell/shell.c ****     {
1454:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, shell->parser.buffer[shell->parser.cursor++]);
 518              		.loc 1 1454 0
 519 000a 0269     		ldr	r2, [r0, #16]
 520 000c 591C     		adds	r1, r3, #1
 521 000e C181     		strh	r1, [r0, #14]	@ movhi
 522 0010 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 523 0012 FFF7FEFF 		bl	shellWriteByte
 524              	.LVL57:
 525              	.L44:
 526 0016 08BD     		pop	{r3, pc}
 527              		.cfi_endproc
 528              	.LFE167:
 530              		.section	.text.shellLeft,"ax",%progbits
 531              		.align	2
 532              		.global	shellLeft
 533              		.thumb
 534              		.thumb_func
 536              	shellLeft:
 537              	.LFB168:
1455:Dsp/letter_shell/shell.c ****     }
1456:Dsp/letter_shell/shell.c **** }
1457:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1458:Dsp/letter_shell/shell.c **** 0x1B5B4300, shellRight, right);
1459:Dsp/letter_shell/shell.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 36


1460:Dsp/letter_shell/shell.c **** 
1461:Dsp/letter_shell/shell.c **** /**
1462:Dsp/letter_shell/shell.c ****  * @brief shell左方向键输入
1463:Dsp/letter_shell/shell.c ****  * 
1464:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1465:Dsp/letter_shell/shell.c ****  */
1466:Dsp/letter_shell/shell.c **** void shellLeft(Shell *shell)
1467:Dsp/letter_shell/shell.c **** {
 538              		.loc 1 1467 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              	.LVL58:
1468:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor > 0)
 543              		.loc 1 1468 0
 544 0000 C389     		ldrh	r3, [r0, #14]
 545 0002 43B1     		cbz	r3, .L50
1467:Dsp/letter_shell/shell.c ****     if (shell->parser.cursor > 0)
 546              		.loc 1 1467 0
 547 0004 10B5     		push	{r4, lr}
 548              	.LCFI9:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 4, -8
 551              		.cfi_offset 14, -4
 552 0006 0446     		mov	r4, r0
1469:Dsp/letter_shell/shell.c ****     {
1470:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, '\b');
 553              		.loc 1 1470 0
 554 0008 0821     		movs	r1, #8
 555 000a FFF7FEFF 		bl	shellWriteByte
 556              	.LVL59:
1471:Dsp/letter_shell/shell.c ****         shell->parser.cursor--;
 557              		.loc 1 1471 0
 558 000e E389     		ldrh	r3, [r4, #14]
 559 0010 013B     		subs	r3, r3, #1
 560 0012 E381     		strh	r3, [r4, #14]	@ movhi
 561 0014 10BD     		pop	{r4, pc}
 562              	.LVL60:
 563              	.L50:
 564              	.LCFI10:
 565              		.cfi_def_cfa_offset 0
 566              		.cfi_restore 4
 567              		.cfi_restore 14
 568 0016 7047     		bx	lr
 569              		.cfi_endproc
 570              	.LFE168:
 572              		.section	.text.shellRemoveParamQuotes,"ax",%progbits
 573              		.align	2
 574              		.thumb
 575              		.thumb_func
 577              	shellRemoveParamQuotes:
 578              	.LFB151:
 925:Dsp/letter_shell/shell.c ****     unsigned short paramLength;
 579              		.loc 1 925 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 37


 583              	.LVL61:
 584 0000 70B5     		push	{r4, r5, r6, lr}
 585              	.LCFI11:
 586              		.cfi_def_cfa_offset 16
 587              		.cfi_offset 4, -16
 588              		.cfi_offset 5, -12
 589              		.cfi_offset 6, -8
 590              		.cfi_offset 14, -4
 591 0002 0546     		mov	r5, r0
 592              	.LVL62:
 593              	.LBB6:
 927:Dsp/letter_shell/shell.c ****     {
 594              		.loc 1 927 0
 595 0004 0024     		movs	r4, #0
 596 0006 1FE0     		b	.L52
 597              	.LVL63:
 598              	.L55:
 929:Dsp/letter_shell/shell.c ****         {
 599              		.loc 1 929 0
 600 0008 2346     		mov	r3, r4
 601 000a 221D     		adds	r2, r4, #4
 602 000c 05EB8202 		add	r2, r5, r2, lsl #2
 603 0010 5268     		ldr	r2, [r2, #4]
 604 0012 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 605 0014 2229     		cmp	r1, #34
 606 0016 07D1     		bne	.L53
 931:Dsp/letter_shell/shell.c ****             shell->parser.param[i] = &shell->parser.param[i][1];
 607              		.loc 1 931 0
 608 0018 0021     		movs	r1, #0
 609 001a 1170     		strb	r1, [r2]
 932:Dsp/letter_shell/shell.c ****         }
 610              		.loc 1 932 0
 611 001c 221D     		adds	r2, r4, #4
 612 001e 05EB8202 		add	r2, r5, r2, lsl #2
 613 0022 5168     		ldr	r1, [r2, #4]
 614 0024 0131     		adds	r1, r1, #1
 615 0026 5160     		str	r1, [r2, #4]
 616              	.L53:
 934:Dsp/letter_shell/shell.c ****         if (shell->parser.param[i][paramLength - 1] == '\"')
 617              		.loc 1 934 0
 618 0028 0433     		adds	r3, r3, #4
 619 002a 05EB8303 		add	r3, r5, r3, lsl #2
 620 002e 5E68     		ldr	r6, [r3, #4]
 621 0030 3046     		mov	r0, r6
 622 0032 FFF7FEFF 		bl	strlen
 623              	.LVL64:
 935:Dsp/letter_shell/shell.c ****         {
 624              		.loc 1 935 0
 625 0036 80B2     		uxth	r0, r0
 626 0038 0138     		subs	r0, r0, #1
 627              	.LVL65:
 628 003a 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
 629 003c 222B     		cmp	r3, #34
 630 003e 01D1     		bne	.L54
 937:Dsp/letter_shell/shell.c ****         }
 631              		.loc 1 937 0
 632 0040 0023     		movs	r3, #0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 38


 633 0042 3354     		strb	r3, [r6, r0]
 634              	.L54:
 927:Dsp/letter_shell/shell.c ****     {
 635              		.loc 1 927 0 discriminator 2
 636 0044 0134     		adds	r4, r4, #1
 637              	.LVL66:
 638 0046 A4B2     		uxth	r4, r4
 639              	.LVL67:
 640              	.L52:
 927:Dsp/letter_shell/shell.c ****     {
 641              		.loc 1 927 0 is_stmt 0 discriminator 1
 642 0048 EB8E     		ldrh	r3, [r5, #54]
 643 004a 9C42     		cmp	r4, r3
 644 004c DCD3     		bcc	.L55
 645              	.LBE6:
 940:Dsp/letter_shell/shell.c **** 
 646              		.loc 1 940 0 is_stmt 1
 647 004e 70BD     		pop	{r4, r5, r6, pc}
 648              		.cfi_endproc
 649              	.LFE151:
 651              		.section	.text.shellGetCurrent,"ax",%progbits
 652              		.align	2
 653              		.global	shellGetCurrent
 654              		.thumb
 655              		.thumb_func
 657              	shellGetCurrent:
 658              	.LFB126:
 247:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
 659              		.loc 1 247 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664              	.LVL68:
 665              	.LBB7:
 248:Dsp/letter_shell/shell.c ****     {
 666              		.loc 1 248 0
 667 0000 0023     		movs	r3, #0
 668 0002 0AE0     		b	.L58
 669              	.LVL69:
 670              	.L61:
 250:Dsp/letter_shell/shell.c ****         {
 671              		.loc 1 250 0
 672 0004 074A     		ldr	r2, .L62
 673 0006 52F82300 		ldr	r0, [r2, r3, lsl #2]
 674 000a 20B1     		cbz	r0, .L59
 250:Dsp/letter_shell/shell.c ****         {
 675              		.loc 1 250 0 is_stmt 0 discriminator 1
 676 000c 90F86020 		ldrb	r2, [r0, #96]	@ zero_extendqisi2
 677 0010 12F0020F 		tst	r2, #2
 678 0014 04D1     		bne	.L60
 679              	.L59:
 248:Dsp/letter_shell/shell.c ****     {
 680              		.loc 1 248 0 is_stmt 1 discriminator 2
 681 0016 0133     		adds	r3, r3, #1
 682              	.LVL70:
 683 0018 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 39


 684              	.LVL71:
 685              	.L58:
 248:Dsp/letter_shell/shell.c ****     {
 686              		.loc 1 248 0 is_stmt 0 discriminator 1
 687 001a 042B     		cmp	r3, #4
 688 001c F2DD     		ble	.L61
 689              	.LBE7:
 255:Dsp/letter_shell/shell.c **** }
 690              		.loc 1 255 0 is_stmt 1
 691 001e 0020     		movs	r0, #0
 692              	.L60:
 256:Dsp/letter_shell/shell.c **** 
 693              		.loc 1 256 0
 694 0020 7047     		bx	lr
 695              	.L63:
 696 0022 00BF     		.align	2
 697              	.L62:
 698 0024 00000000 		.word	.LANCHOR0
 699              		.cfi_endproc
 700              	.LFE126:
 702              		.section	.text.shellWriteString,"ax",%progbits
 703              		.align	2
 704              		.global	shellWriteString
 705              		.thumb
 706              		.thumb_func
 708              	shellWriteString:
 709              	.LFB128:
 281:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
 710              		.loc 1 281 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              	.LVL72:
 283:Dsp/letter_shell/shell.c ****     while(*string)
 715              		.loc 1 283 0
 716 0000 836E     		ldr	r3, [r0, #104]
 717 0002 8BB1     		cbz	r3, .L68
 281:Dsp/letter_shell/shell.c ****     unsigned short count = 0;
 718              		.loc 1 281 0
 719 0004 70B5     		push	{r4, r5, r6, lr}
 720              	.LCFI12:
 721              		.cfi_def_cfa_offset 16
 722              		.cfi_offset 4, -16
 723              		.cfi_offset 5, -12
 724              		.cfi_offset 6, -8
 725              		.cfi_offset 14, -4
 726 0006 0646     		mov	r6, r0
 727 0008 0D46     		mov	r5, r1
 728 000a 0024     		movs	r4, #0
 729 000c 07E0     		b	.L66
 730              	.LVL73:
 731              	.L67:
 286:Dsp/letter_shell/shell.c ****         count ++;
 732              		.loc 1 286 0
 733 000e B36E     		ldr	r3, [r6, #104]
 734 0010 0135     		adds	r5, r5, #1
 735              	.LVL74:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 40


 736 0012 9847     		blx	r3
 737              	.LVL75:
 287:Dsp/letter_shell/shell.c ****         delay_us(100);
 738              		.loc 1 287 0
 739 0014 0134     		adds	r4, r4, #1
 740              	.LVL76:
 741 0016 A4B2     		uxth	r4, r4
 742              	.LVL77:
 288:Dsp/letter_shell/shell.c ****     }
 743              		.loc 1 288 0
 744 0018 6420     		movs	r0, #100
 745 001a FFF7FEFF 		bl	delay_us
 746              	.LVL78:
 747              	.L66:
 284:Dsp/letter_shell/shell.c ****     {
 748              		.loc 1 284 0
 749 001e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 750 0020 0028     		cmp	r0, #0
 751 0022 F4D1     		bne	.L67
 290:Dsp/letter_shell/shell.c **** }
 752              		.loc 1 290 0
 753 0024 2046     		mov	r0, r4
 754 0026 70BD     		pop	{r4, r5, r6, pc}
 755              	.LVL79:
 756              	.L68:
 757              	.LCFI13:
 758              		.cfi_def_cfa_offset 0
 759              		.cfi_restore 4
 760              		.cfi_restore 5
 761              		.cfi_restore 6
 762              		.cfi_restore 14
 283:Dsp/letter_shell/shell.c ****     while(*string)
 763              		.loc 1 283 0
 764 0028 0020     		movs	r0, #0
 765              	.LVL80:
 766 002a 7047     		bx	lr
 767              		.cfi_endproc
 768              	.LFE128:
 770              		.section	.text.shellSetUser,"ax",%progbits
 771              		.align	2
 772              		.thumb
 773              		.thumb_func
 775              	shellSetUser:
 776              	.LFB159:
1239:Dsp/letter_shell/shell.c ****     shell->info.user = user;
 777              		.loc 1 1239 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              	.LVL81:
 782 0000 10B5     		push	{r4, lr}
 783              	.LCFI14:
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 4, -8
 786              		.cfi_offset 14, -4
 787 0002 0446     		mov	r4, r0
1240:Dsp/letter_shell/shell.c ****     shell->status.isChecked = 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 41


 788              		.loc 1 1240 0
 789 0004 0160     		str	r1, [r0]
1242:Dsp/letter_shell/shell.c ****             && (shell->parser.paramCount < 2
 790              		.loc 1 1242 0
 791 0006 8868     		ldr	r0, [r1, #8]
 792              	.LVL82:
1245:Dsp/letter_shell/shell.c ****         
 793              		.loc 1 1245 0
 794 0008 50B1     		cbz	r0, .L74
1242:Dsp/letter_shell/shell.c ****             && (shell->parser.paramCount < 2
 795              		.loc 1 1242 0
 796 000a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 797 000c 53B1     		cbz	r3, .L75
1243:Dsp/letter_shell/shell.c ****                 || strcmp(user->data.user.password, shell->parser.param[1]) != 0))
 798              		.loc 1 1243 0
 799 000e E38E     		ldrh	r3, [r4, #54]
1245:Dsp/letter_shell/shell.c ****         
 800              		.loc 1 1245 0
 801 0010 012B     		cmp	r3, #1
 802 0012 09D9     		bls	.L76
1244:Dsp/letter_shell/shell.c ****          ? 0 : 1;
 803              		.loc 1 1244 0
 804 0014 A169     		ldr	r1, [r4, #24]
 805              	.LVL83:
 806 0016 FFF7FEFF 		bl	strcmp
 807              	.LVL84:
 808 001a 38B1     		cbz	r0, .L77
1245:Dsp/letter_shell/shell.c ****         
 809              		.loc 1 1245 0
 810 001c 0022     		movs	r2, #0
 811 001e 06E0     		b	.L72
 812              	.LVL85:
 813              	.L74:
 814 0020 0122     		movs	r2, #1
 815 0022 04E0     		b	.L72
 816              	.L75:
 817 0024 0122     		movs	r2, #1
 818 0026 02E0     		b	.L72
 819              	.L76:
 820 0028 0022     		movs	r2, #0
 821 002a 00E0     		b	.L72
 822              	.LVL86:
 823              	.L77:
 824 002c 0122     		movs	r2, #1
 825              	.L72:
1241:Dsp/letter_shell/shell.c ****         ((user->data.user.password && strlen(user->data.user.password) != 0)
 826              		.loc 1 1241 0
 827 002e 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 828 0032 62F30003 		bfi	r3, r2, #0, #1
 829 0036 84F86030 		strb	r3, [r4, #96]
1248:Dsp/letter_shell/shell.c **** #endif
 830              		.loc 1 1248 0
 831 003a 0749     		ldr	r1, .L79
 832 003c 2046     		mov	r0, r4
 833 003e FFF7FEFF 		bl	shellWriteString
 834              	.LVL87:
1251:Dsp/letter_shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 42


 835              		.loc 1 1251 0
 836 0042 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 837 0046 13F0010F 		tst	r3, #1
 838 004a 03D0     		beq	.L71
1253:Dsp/letter_shell/shell.c ****     }
 839              		.loc 1 1253 0
 840 004c 0349     		ldr	r1, .L79+4
 841 004e 2046     		mov	r0, r4
 842 0050 FFF7FEFF 		bl	shellWriteString
 843              	.LVL88:
 844              	.L71:
 845 0054 10BD     		pop	{r4, pc}
 846              	.LVL89:
 847              	.L80:
 848 0056 00BF     		.align	2
 849              	.L79:
 850 0058 00000000 		.word	.LC0
 851 005c 0C000000 		.word	.LC1
 852              		.cfi_endproc
 853              	.LFE159:
 855              		.section	.text.shellWriteCommandLine,"ax",%progbits
 856              		.align	2
 857              		.thumb
 858              		.thumb_func
 860              	shellWriteCommandLine:
 861              	.LFB130:
 333:Dsp/letter_shell/shell.c ****     if (shell->status.isChecked)
 862              		.loc 1 333 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              	.LVL90:
 867 0000 10B5     		push	{r4, lr}
 868              	.LCFI15:
 869              		.cfi_def_cfa_offset 8
 870              		.cfi_offset 4, -8
 871              		.cfi_offset 14, -4
 872 0002 0446     		mov	r4, r0
 334:Dsp/letter_shell/shell.c ****     {
 873              		.loc 1 334 0
 874 0004 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 875 0008 13F0010F 		tst	r3, #1
 876 000c 17D0     		beq	.L82
 336:Dsp/letter_shell/shell.c ****         {
 877              		.loc 1 336 0
 878 000e 11B1     		cbz	r1, .L83
 338:Dsp/letter_shell/shell.c ****         }
 879              		.loc 1 338 0
 880 0010 0D49     		ldr	r1, .L88
 881              	.LVL91:
 882 0012 FFF7FEFF 		bl	shellWriteString
 883              	.LVL92:
 884              	.L83:
 340:Dsp/letter_shell/shell.c ****         shellWriteString(shell, ":");
 885              		.loc 1 340 0
 886 0016 2368     		ldr	r3, [r4]
 887 0018 5968     		ldr	r1, [r3, #4]
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 43


 888 001a 2046     		mov	r0, r4
 889 001c FFF7FEFF 		bl	shellWriteString
 890              	.LVL93:
 341:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->info.path ? shell->info.path : "/");
 891              		.loc 1 341 0
 892 0020 0A49     		ldr	r1, .L88+4
 893 0022 2046     		mov	r0, r4
 894 0024 FFF7FEFF 		bl	shellWriteString
 895              	.LVL94:
 342:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "$ ");
 896              		.loc 1 342 0
 897 0028 A168     		ldr	r1, [r4, #8]
 898 002a 01B9     		cbnz	r1, .L84
 899 002c 0849     		ldr	r1, .L88+8
 900              	.L84:
 342:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "$ ");
 901              		.loc 1 342 0 is_stmt 0 discriminator 4
 902 002e 2046     		mov	r0, r4
 903 0030 FFF7FEFF 		bl	shellWriteString
 904              	.LVL95:
 343:Dsp/letter_shell/shell.c ****     }
 905              		.loc 1 343 0 is_stmt 1 discriminator 4
 906 0034 0749     		ldr	r1, .L88+12
 907 0036 2046     		mov	r0, r4
 908 0038 FFF7FEFF 		bl	shellWriteString
 909              	.LVL96:
 910 003c 10BD     		pop	{r4, pc}
 911              	.LVL97:
 912              	.L82:
 347:Dsp/letter_shell/shell.c ****     }
 913              		.loc 1 347 0
 914 003e 0649     		ldr	r1, .L88+16
 915              	.LVL98:
 916 0040 FFF7FEFF 		bl	shellWriteString
 917              	.LVL99:
 918 0044 10BD     		pop	{r4, pc}
 919              	.LVL100:
 920              	.L89:
 921 0046 00BF     		.align	2
 922              	.L88:
 923 0048 A0010000 		.word	.LC3
 924 004c A4010000 		.word	.LC4
 925 0050 9C010000 		.word	.LC2
 926 0054 A8010000 		.word	.LC5
 927 0058 AC010000 		.word	.LC6
 928              		.cfi_endproc
 929              	.LFE130:
 931              		.section	.text.shellCheckPassword,"ax",%progbits
 932              		.align	2
 933              		.thumb
 934              		.thumb_func
 936              	shellCheckPassword:
 937              	.LFB158:
1215:Dsp/letter_shell/shell.c ****     if (strcmp(shell->parser.buffer, shell->info.user->data.user.password) == 0)
 938              		.loc 1 1215 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 44


 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              	.LVL101:
 943 0000 10B5     		push	{r4, lr}
 944              	.LCFI16:
 945              		.cfi_def_cfa_offset 8
 946              		.cfi_offset 4, -8
 947              		.cfi_offset 14, -4
 948 0002 0446     		mov	r4, r0
1216:Dsp/letter_shell/shell.c ****     {
 949              		.loc 1 1216 0
 950 0004 0368     		ldr	r3, [r0]
 951 0006 9968     		ldr	r1, [r3, #8]
 952 0008 0069     		ldr	r0, [r0, #16]
 953              	.LVL102:
 954 000a FFF7FEFF 		bl	strcmp
 955              	.LVL103:
 956 000e 50B9     		cbnz	r0, .L91
1218:Dsp/letter_shell/shell.c ****     #if SHELL_SHOW_INFO == 1
 957              		.loc 1 1218 0
 958 0010 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 959 0014 43F00103 		orr	r3, r3, #1
 960 0018 84F86030 		strb	r3, [r4, #96]
1220:Dsp/letter_shell/shell.c ****     #endif
 961              		.loc 1 1220 0
 962 001c 0649     		ldr	r1, .L94
 963 001e 2046     		mov	r0, r4
 964 0020 FFF7FEFF 		bl	shellWriteString
 965              	.LVL104:
 966 0024 03E0     		b	.L92
 967              	.L91:
1225:Dsp/letter_shell/shell.c ****     }
 968              		.loc 1 1225 0
 969 0026 0549     		ldr	r1, .L94+4
 970 0028 2046     		mov	r0, r4
 971 002a FFF7FEFF 		bl	shellWriteString
 972              	.LVL105:
 973              	.L92:
1227:Dsp/letter_shell/shell.c ****     shell->parser.cursor = 0;
 974              		.loc 1 1227 0
 975 002e 0023     		movs	r3, #0
 976 0030 A381     		strh	r3, [r4, #12]	@ movhi
1228:Dsp/letter_shell/shell.c **** }
 977              		.loc 1 1228 0
 978 0032 E381     		strh	r3, [r4, #14]	@ movhi
 979 0034 10BD     		pop	{r4, pc}
 980              	.LVL106:
 981              	.L95:
 982 0036 00BF     		.align	2
 983              	.L94:
 984 0038 0C000000 		.word	.LC1
 985 003c C8010000 		.word	.LC7
 986              		.cfi_endproc
 987              	.LFE158:
 989              		.section	.text.shellClear,"ax",%progbits
 990              		.align	2
 991              		.global	shellClear
 992              		.thumb
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 45


 993              		.thumb_func
 995              	shellClear:
 996              	.LFB180:
1472:Dsp/letter_shell/shell.c ****     }
1473:Dsp/letter_shell/shell.c **** }
1474:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1475:Dsp/letter_shell/shell.c **** 0x1B5B4400, shellLeft, left);
1476:Dsp/letter_shell/shell.c **** 
1477:Dsp/letter_shell/shell.c **** 
1478:Dsp/letter_shell/shell.c **** /**
1479:Dsp/letter_shell/shell.c ****  * @brief shell Tab按键处理
1480:Dsp/letter_shell/shell.c ****  * 
1481:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1482:Dsp/letter_shell/shell.c ****  */
1483:Dsp/letter_shell/shell.c **** void shellTab(Shell *shell)
1484:Dsp/letter_shell/shell.c **** {
1485:Dsp/letter_shell/shell.c ****     unsigned short maxMatch = shell->parser.bufferSize;
1486:Dsp/letter_shell/shell.c ****     unsigned short lastMatchIndex = 0;
1487:Dsp/letter_shell/shell.c ****     unsigned short matchNum = 0;
1488:Dsp/letter_shell/shell.c ****     unsigned short length;
1489:Dsp/letter_shell/shell.c **** 
1490:Dsp/letter_shell/shell.c ****     if (shell->parser.length == 0)
1491:Dsp/letter_shell/shell.c ****     {
1492:Dsp/letter_shell/shell.c ****         shellListAll(shell);
1493:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 1);
1494:Dsp/letter_shell/shell.c ****     }
1495:Dsp/letter_shell/shell.c ****     else if (shell->parser.length > 0)
1496:Dsp/letter_shell/shell.c ****     {
1497:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
1498:Dsp/letter_shell/shell.c ****         ShellCommand *base = (ShellCommand *)shell->commandList.base;
1499:Dsp/letter_shell/shell.c ****         for (short i = 0; i < shell->commandList.count; i++)
1500:Dsp/letter_shell/shell.c ****         {
1501:Dsp/letter_shell/shell.c ****             if (shellCheckPermission(shell, &base[i]) == 0
1502:Dsp/letter_shell/shell.c ****                 && shellStringCompare(shell->parser.buffer,
1503:Dsp/letter_shell/shell.c ****                                    (char *)shellGetCommandName(&base[i]))
1504:Dsp/letter_shell/shell.c ****                         == shell->parser.length)
1505:Dsp/letter_shell/shell.c ****             {
1506:Dsp/letter_shell/shell.c ****                 if (matchNum != 0)
1507:Dsp/letter_shell/shell.c ****                 {
1508:Dsp/letter_shell/shell.c ****                     if (matchNum == 1)
1509:Dsp/letter_shell/shell.c ****                     {
1510:Dsp/letter_shell/shell.c ****                         shellWriteString(shell, "\r\n");
1511:Dsp/letter_shell/shell.c ****                     }
1512:Dsp/letter_shell/shell.c ****                     shellListItem(shell, &base[lastMatchIndex]);
1513:Dsp/letter_shell/shell.c ****                     length = 
1514:Dsp/letter_shell/shell.c ****                         shellStringCompare((char *)shellGetCommandName(&base[lastMatchIndex]),
1515:Dsp/letter_shell/shell.c ****                                            (char *)shellGetCommandName(&base[i]));
1516:Dsp/letter_shell/shell.c ****                     maxMatch = (maxMatch > length) ? length : maxMatch;
1517:Dsp/letter_shell/shell.c ****                 }
1518:Dsp/letter_shell/shell.c ****                 lastMatchIndex = i;
1519:Dsp/letter_shell/shell.c ****                 matchNum++;
1520:Dsp/letter_shell/shell.c ****             }
1521:Dsp/letter_shell/shell.c ****         }
1522:Dsp/letter_shell/shell.c ****         if (matchNum == 0)
1523:Dsp/letter_shell/shell.c ****         {
1524:Dsp/letter_shell/shell.c ****             return;
1525:Dsp/letter_shell/shell.c ****         }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 46


1526:Dsp/letter_shell/shell.c ****         if (matchNum == 1)
1527:Dsp/letter_shell/shell.c ****         {
1528:Dsp/letter_shell/shell.c ****             shellClearCommandLine(shell);
1529:Dsp/letter_shell/shell.c ****         }
1530:Dsp/letter_shell/shell.c ****         if (matchNum != 0)
1531:Dsp/letter_shell/shell.c ****         {
1532:Dsp/letter_shell/shell.c ****             shell->parser.length = 
1533:Dsp/letter_shell/shell.c ****                 shellStringCopy(shell->parser.buffer,
1534:Dsp/letter_shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
1535:Dsp/letter_shell/shell.c ****         }
1536:Dsp/letter_shell/shell.c ****         if (matchNum > 1)
1537:Dsp/letter_shell/shell.c ****         {
1538:Dsp/letter_shell/shell.c ****             shellListItem(shell, &base[lastMatchIndex]);
1539:Dsp/letter_shell/shell.c ****             shellWriteCommandLine(shell, 1);
1540:Dsp/letter_shell/shell.c ****             shell->parser.length = maxMatch;
1541:Dsp/letter_shell/shell.c ****         }
1542:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
1543:Dsp/letter_shell/shell.c ****         shell->parser.cursor = shell->parser.length;
1544:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
1545:Dsp/letter_shell/shell.c ****     }
1546:Dsp/letter_shell/shell.c **** 
1547:Dsp/letter_shell/shell.c ****     if (SHELL_GET_TICK())
1548:Dsp/letter_shell/shell.c ****     {
1549:Dsp/letter_shell/shell.c ****         if (matchNum == 1
1550:Dsp/letter_shell/shell.c ****             && shell->status.tabFlag
1551:Dsp/letter_shell/shell.c ****             && SHELL_GET_TICK() - shell->info.activeTime < SHELL_DOUBLE_CLICK_TIME)
1552:Dsp/letter_shell/shell.c ****         {
1553:Dsp/letter_shell/shell.c ****             shellClearCommandLine(shell);
1554:Dsp/letter_shell/shell.c ****             for (short i = shell->parser.length; i >= 0; i--)
1555:Dsp/letter_shell/shell.c ****             {
1556:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[i + 5] = shell->parser.buffer[i];
1557:Dsp/letter_shell/shell.c ****             }
1558:Dsp/letter_shell/shell.c ****             shellStringCopy(shell->parser.buffer, "help");
1559:Dsp/letter_shell/shell.c ****             shell->parser.buffer[4] = ' ';
1560:Dsp/letter_shell/shell.c ****             shell->parser.length += 5;
1561:Dsp/letter_shell/shell.c ****             shell->parser.cursor = shell->parser.length;
1562:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shell->parser.buffer);
1563:Dsp/letter_shell/shell.c ****         }
1564:Dsp/letter_shell/shell.c ****         else
1565:Dsp/letter_shell/shell.c ****         {
1566:Dsp/letter_shell/shell.c ****             shell->status.tabFlag = 1;
1567:Dsp/letter_shell/shell.c ****         }
1568:Dsp/letter_shell/shell.c ****     }
1569:Dsp/letter_shell/shell.c **** }
1570:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x09000000, shellTab, tab);
1571:Dsp/letter_shell/shell.c **** 
1572:Dsp/letter_shell/shell.c **** 
1573:Dsp/letter_shell/shell.c **** /**
1574:Dsp/letter_shell/shell.c ****  * @brief shell 退格
1575:Dsp/letter_shell/shell.c ****  * 
1576:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1577:Dsp/letter_shell/shell.c ****  */
1578:Dsp/letter_shell/shell.c **** void shellBackspace(Shell *shell)
1579:Dsp/letter_shell/shell.c **** {
1580:Dsp/letter_shell/shell.c ****     shellDeleteByte(shell, 1);
1581:Dsp/letter_shell/shell.c **** }
1582:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 47


1583:Dsp/letter_shell/shell.c **** 0x08000000, shellBackspace, backspace);
1584:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1585:Dsp/letter_shell/shell.c **** 0x7F000000, shellBackspace, backspace);
1586:Dsp/letter_shell/shell.c **** 
1587:Dsp/letter_shell/shell.c **** 
1588:Dsp/letter_shell/shell.c **** /**
1589:Dsp/letter_shell/shell.c ****  * @brief shell 删除
1590:Dsp/letter_shell/shell.c ****  * 
1591:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1592:Dsp/letter_shell/shell.c ****  */
1593:Dsp/letter_shell/shell.c **** void shellDelete(Shell *shell)
1594:Dsp/letter_shell/shell.c **** {
1595:Dsp/letter_shell/shell.c ****     shellDeleteByte(shell, -1);
1596:Dsp/letter_shell/shell.c **** }
1597:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1598:Dsp/letter_shell/shell.c **** 0x1B5B337E, shellDelete, delete);
1599:Dsp/letter_shell/shell.c **** 
1600:Dsp/letter_shell/shell.c **** 
1601:Dsp/letter_shell/shell.c **** /**
1602:Dsp/letter_shell/shell.c ****  * @brief shell 回车处理
1603:Dsp/letter_shell/shell.c ****  * 
1604:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1605:Dsp/letter_shell/shell.c ****  */
1606:Dsp/letter_shell/shell.c **** void shellEnter(Shell *shell)
1607:Dsp/letter_shell/shell.c **** {
1608:Dsp/letter_shell/shell.c ****     shellExec(shell);
1609:Dsp/letter_shell/shell.c ****     shellWriteCommandLine(shell, 1);
1610:Dsp/letter_shell/shell.c **** }
1611:Dsp/letter_shell/shell.c **** #if SHELL_ENTER_LF == 1
1612:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1613:Dsp/letter_shell/shell.c **** 0x0A000000, shellEnter, enter);
1614:Dsp/letter_shell/shell.c **** #endif
1615:Dsp/letter_shell/shell.c **** #if SHELL_ENTER_CR == 1
1616:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1617:Dsp/letter_shell/shell.c **** 0x0D000000, shellEnter, enter);
1618:Dsp/letter_shell/shell.c **** #endif
1619:Dsp/letter_shell/shell.c **** #if SHELL_ENTER_CRLF == 1
1620:Dsp/letter_shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0)|SHELL_CMD_ENABLE_UNCHECKED,
1621:Dsp/letter_shell/shell.c **** 0x0D0A0000, shellEnter, enter);
1622:Dsp/letter_shell/shell.c **** #endif
1623:Dsp/letter_shell/shell.c **** 
1624:Dsp/letter_shell/shell.c **** 
1625:Dsp/letter_shell/shell.c **** /**
1626:Dsp/letter_shell/shell.c ****  * @brief shell help
1627:Dsp/letter_shell/shell.c ****  * 
1628:Dsp/letter_shell/shell.c ****  * @param argc 参数个数
1629:Dsp/letter_shell/shell.c ****  * @param argv 参数
1630:Dsp/letter_shell/shell.c ****  */
1631:Dsp/letter_shell/shell.c **** void shellHelp(int argc, char *argv[])
1632:Dsp/letter_shell/shell.c **** {
1633:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1634:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell, return);
1635:Dsp/letter_shell/shell.c ****     if (argc == 1)
1636:Dsp/letter_shell/shell.c ****     {
1637:Dsp/letter_shell/shell.c ****         shellListAll(shell);
1638:Dsp/letter_shell/shell.c ****     }
1639:Dsp/letter_shell/shell.c ****     else if (argc > 1)
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 48


1640:Dsp/letter_shell/shell.c ****     {
1641:Dsp/letter_shell/shell.c ****         ShellCommand *command = shellSeekCommand(shell,
1642:Dsp/letter_shell/shell.c ****                                                  argv[1],
1643:Dsp/letter_shell/shell.c ****                                                  shell->commandList.base,
1644:Dsp/letter_shell/shell.c ****                                                  0);
1645:Dsp/letter_shell/shell.c ****         if (command)
1646:Dsp/letter_shell/shell.c ****         {
1647:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_HELP_HEADER]);
1648:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellGetCommandName(command));
1649:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
1650:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellGetCommandDesc(command));
1651:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
1652:Dsp/letter_shell/shell.c ****         }
1653:Dsp/letter_shell/shell.c ****         else
1654:Dsp/letter_shell/shell.c ****         {
1655:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_CMD_NOT_FOUND]);
1656:Dsp/letter_shell/shell.c ****         }
1657:Dsp/letter_shell/shell.c ****     }
1658:Dsp/letter_shell/shell.c **** }
1659:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1660:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_MAIN)|SHELL_CMD_DISABLE_RETURN,
1661:Dsp/letter_shell/shell.c **** help, shellHelp, show command info\r\nhelp [cmd]);
1662:Dsp/letter_shell/shell.c **** 
1663:Dsp/letter_shell/shell.c **** /**
1664:Dsp/letter_shell/shell.c ****  * @brief shell 输入处理
1665:Dsp/letter_shell/shell.c ****  * 
1666:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1667:Dsp/letter_shell/shell.c ****  * @param data 输入数据
1668:Dsp/letter_shell/shell.c ****  */
1669:Dsp/letter_shell/shell.c **** void shellHandler(Shell *shell, char data)
1670:Dsp/letter_shell/shell.c **** {
1671:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(data, return);
1672:Dsp/letter_shell/shell.c **** 
1673:Dsp/letter_shell/shell.c **** #if SHELL_LOCK_TIMEOUT > 0
1674:Dsp/letter_shell/shell.c ****     if (shell->info.user->data.user.password
1675:Dsp/letter_shell/shell.c ****         && strlen(shell->info.user->data.user.password) != 0
1676:Dsp/letter_shell/shell.c ****         && SHELL_GET_TICK())
1677:Dsp/letter_shell/shell.c ****     {
1678:Dsp/letter_shell/shell.c ****         if (SHELL_GET_TICK() - shell->info.activeTime > SHELL_LOCK_TIMEOUT)
1679:Dsp/letter_shell/shell.c ****         {
1680:Dsp/letter_shell/shell.c ****             shell->status.isChecked = 0;
1681:Dsp/letter_shell/shell.c ****         }
1682:Dsp/letter_shell/shell.c ****     }
1683:Dsp/letter_shell/shell.c **** #endif
1684:Dsp/letter_shell/shell.c **** 
1685:Dsp/letter_shell/shell.c ****     /* 根据记录的按键键值计算当前字节在按键键值中的偏移 */
1686:Dsp/letter_shell/shell.c ****     char keyByteOffset = 24;
1687:Dsp/letter_shell/shell.c ****     int keyFilter = 0x00000000;
1688:Dsp/letter_shell/shell.c ****     if ((shell->parser.keyValue & 0x0000FF00) != 0x00000000)
1689:Dsp/letter_shell/shell.c ****     {
1690:Dsp/letter_shell/shell.c ****         keyByteOffset = 0;
1691:Dsp/letter_shell/shell.c ****         keyFilter = 0xFFFFFF00;
1692:Dsp/letter_shell/shell.c ****     }
1693:Dsp/letter_shell/shell.c ****     else if ((shell->parser.keyValue & 0x00FF0000) != 0x00000000)
1694:Dsp/letter_shell/shell.c ****     {
1695:Dsp/letter_shell/shell.c ****         keyByteOffset = 8;
1696:Dsp/letter_shell/shell.c ****         keyFilter = 0xFFFF0000;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 49


1697:Dsp/letter_shell/shell.c ****     }
1698:Dsp/letter_shell/shell.c ****     else if ((shell->parser.keyValue & 0xFF000000) != 0x00000000)
1699:Dsp/letter_shell/shell.c ****     {
1700:Dsp/letter_shell/shell.c ****         keyByteOffset = 16;
1701:Dsp/letter_shell/shell.c ****         keyFilter = 0xFF000000;
1702:Dsp/letter_shell/shell.c ****     }
1703:Dsp/letter_shell/shell.c **** 
1704:Dsp/letter_shell/shell.c ****     /* 遍历ShellCommand列表，尝试进行按键键值匹配 */
1705:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
1706:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
1707:Dsp/letter_shell/shell.c ****     {
1708:Dsp/letter_shell/shell.c ****         /* 判断是否是按键定义并验证权限 */
1709:Dsp/letter_shell/shell.c ****         if (base[i].attr.attrs.type == SHELL_TYPE_KEY
1710:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &(base[i])) == 0)
1711:Dsp/letter_shell/shell.c ****         {
1712:Dsp/letter_shell/shell.c ****             /* 对输入的字节同按键键值进行匹配 */
1713:Dsp/letter_shell/shell.c ****             if ((base[i].data.key.value & keyFilter) == shell->parser.keyValue
1714:Dsp/letter_shell/shell.c ****                 && (base[i].data.key.value & (0xFF << keyByteOffset))
1715:Dsp/letter_shell/shell.c ****                     == (data << keyByteOffset))
1716:Dsp/letter_shell/shell.c ****             {
1717:Dsp/letter_shell/shell.c ****                 shell->parser.keyValue |= data << keyByteOffset;
1718:Dsp/letter_shell/shell.c ****                 data = 0x00;
1719:Dsp/letter_shell/shell.c ****                 if (keyByteOffset == 0 
1720:Dsp/letter_shell/shell.c ****                     || (base[i].data.key.value & (0xFF << (keyByteOffset - 8)))
1721:Dsp/letter_shell/shell.c ****                         == 0x00000000)
1722:Dsp/letter_shell/shell.c ****                 {
1723:Dsp/letter_shell/shell.c ****                     if (base[i].data.key.function)
1724:Dsp/letter_shell/shell.c ****                     {
1725:Dsp/letter_shell/shell.c ****                         base[i].data.key.function(shell);
1726:Dsp/letter_shell/shell.c ****                     }
1727:Dsp/letter_shell/shell.c ****                     shell->parser.keyValue = 0x00000000;
1728:Dsp/letter_shell/shell.c ****                     break;
1729:Dsp/letter_shell/shell.c ****                 }
1730:Dsp/letter_shell/shell.c ****             }
1731:Dsp/letter_shell/shell.c ****         }
1732:Dsp/letter_shell/shell.c ****     }
1733:Dsp/letter_shell/shell.c **** 
1734:Dsp/letter_shell/shell.c ****     if (data != 0x00)
1735:Dsp/letter_shell/shell.c ****     {
1736:Dsp/letter_shell/shell.c ****         shell->parser.keyValue = 0x00000000;
1737:Dsp/letter_shell/shell.c ****         shellNormalInput(shell, data);
1738:Dsp/letter_shell/shell.c ****     }
1739:Dsp/letter_shell/shell.c **** 
1740:Dsp/letter_shell/shell.c ****     if (SHELL_GET_TICK())
1741:Dsp/letter_shell/shell.c ****     {
1742:Dsp/letter_shell/shell.c ****         shell->info.activeTime = SHELL_GET_TICK();
1743:Dsp/letter_shell/shell.c ****     }
1744:Dsp/letter_shell/shell.c **** }
1745:Dsp/letter_shell/shell.c **** 
1746:Dsp/letter_shell/shell.c **** 
1747:Dsp/letter_shell/shell.c **** #if SHELL_SUPPORT_END_LINE == 1
1748:Dsp/letter_shell/shell.c **** void shellWriteEndLine(Shell *shell, char *buffer, int len)
1749:Dsp/letter_shell/shell.c **** {
1750:Dsp/letter_shell/shell.c ****     if (!shell->status.isActive)
1751:Dsp/letter_shell/shell.c ****     {
1752:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_LINE]);
1753:Dsp/letter_shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 50


1754:Dsp/letter_shell/shell.c ****     while (len --)
1755:Dsp/letter_shell/shell.c ****     {
1756:Dsp/letter_shell/shell.c ****         shell->write(*buffer++);
1757:Dsp/letter_shell/shell.c ****     }
1758:Dsp/letter_shell/shell.c ****     if (!shell->status.isActive)
1759:Dsp/letter_shell/shell.c ****     {
1760:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 0);
1761:Dsp/letter_shell/shell.c ****         if (shell->parser.length > 0)
1762:Dsp/letter_shell/shell.c ****         {
1763:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shell->parser.buffer);
1764:Dsp/letter_shell/shell.c ****             for (short i = 0; i < shell->parser.length - shell->parser.cursor; i++)
1765:Dsp/letter_shell/shell.c ****             {
1766:Dsp/letter_shell/shell.c ****                 shell->write('\b');
1767:Dsp/letter_shell/shell.c ****             }
1768:Dsp/letter_shell/shell.c ****         }
1769:Dsp/letter_shell/shell.c ****     }
1770:Dsp/letter_shell/shell.c **** }
1771:Dsp/letter_shell/shell.c **** #endif /** SHELL_SUPPORT_END_LINE == 1 */
1772:Dsp/letter_shell/shell.c **** 
1773:Dsp/letter_shell/shell.c **** 
1774:Dsp/letter_shell/shell.c **** /**
1775:Dsp/letter_shell/shell.c ****  * @brief shell 任务
1776:Dsp/letter_shell/shell.c ****  * 
1777:Dsp/letter_shell/shell.c ****  * @param param 参数(shell对象)
1778:Dsp/letter_shell/shell.c ****  * 
1779:Dsp/letter_shell/shell.c ****  */
1780:Dsp/letter_shell/shell.c **** void shellTask(void *param)
1781:Dsp/letter_shell/shell.c **** {
1782:Dsp/letter_shell/shell.c ****     Shell *shell = (Shell *)param;
1783:Dsp/letter_shell/shell.c ****     char data;
1784:Dsp/letter_shell/shell.c **** #if SHELL_TASK_WHILE == 1
1785:Dsp/letter_shell/shell.c ****     while(1)
1786:Dsp/letter_shell/shell.c ****     {
1787:Dsp/letter_shell/shell.c **** #endif
1788:Dsp/letter_shell/shell.c ****         if (shell->read && shell->read(&data) == 0)
1789:Dsp/letter_shell/shell.c ****         {
1790:Dsp/letter_shell/shell.c ****             shellHandler(shell, data);
1791:Dsp/letter_shell/shell.c ****         }
1792:Dsp/letter_shell/shell.c **** #if SHELL_TASK_WHILE == 1
1793:Dsp/letter_shell/shell.c ****     }
1794:Dsp/letter_shell/shell.c **** #endif
1795:Dsp/letter_shell/shell.c **** }
1796:Dsp/letter_shell/shell.c **** 
1797:Dsp/letter_shell/shell.c **** 
1798:Dsp/letter_shell/shell.c **** /**
1799:Dsp/letter_shell/shell.c ****  * @brief shell 输出用户列表(shell调用)
1800:Dsp/letter_shell/shell.c ****  */
1801:Dsp/letter_shell/shell.c **** void shellUsers(void)
1802:Dsp/letter_shell/shell.c **** {
1803:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1804:Dsp/letter_shell/shell.c ****     if (shell)
1805:Dsp/letter_shell/shell.c ****     {
1806:Dsp/letter_shell/shell.c ****         shellListUser(shell);
1807:Dsp/letter_shell/shell.c ****     }
1808:Dsp/letter_shell/shell.c **** }
1809:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1810:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 51


1811:Dsp/letter_shell/shell.c **** users, shellUsers, list all user);
1812:Dsp/letter_shell/shell.c **** 
1813:Dsp/letter_shell/shell.c **** 
1814:Dsp/letter_shell/shell.c **** /**
1815:Dsp/letter_shell/shell.c ****  * @brief shell 输出命令列表(shell调用)
1816:Dsp/letter_shell/shell.c ****  */
1817:Dsp/letter_shell/shell.c **** void shellCmds(void)
1818:Dsp/letter_shell/shell.c **** {
1819:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1820:Dsp/letter_shell/shell.c ****     if (shell)
1821:Dsp/letter_shell/shell.c ****     {
1822:Dsp/letter_shell/shell.c ****         shellListCommand(shell);
1823:Dsp/letter_shell/shell.c ****     }
1824:Dsp/letter_shell/shell.c **** }
1825:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1826:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1827:Dsp/letter_shell/shell.c **** cmds, shellCmds, list all cmd);
1828:Dsp/letter_shell/shell.c **** 
1829:Dsp/letter_shell/shell.c **** 
1830:Dsp/letter_shell/shell.c **** /**
1831:Dsp/letter_shell/shell.c ****  * @brief shell 输出变量列表(shell调用)
1832:Dsp/letter_shell/shell.c ****  */
1833:Dsp/letter_shell/shell.c **** void shellVars(void)
1834:Dsp/letter_shell/shell.c **** {
1835:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1836:Dsp/letter_shell/shell.c ****     if (shell)
1837:Dsp/letter_shell/shell.c ****     {
1838:Dsp/letter_shell/shell.c ****         shellListVar(shell);
1839:Dsp/letter_shell/shell.c ****     }
1840:Dsp/letter_shell/shell.c **** }
1841:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1842:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1843:Dsp/letter_shell/shell.c **** vars, shellVars, list all var);
1844:Dsp/letter_shell/shell.c **** 
1845:Dsp/letter_shell/shell.c **** 
1846:Dsp/letter_shell/shell.c **** /**
1847:Dsp/letter_shell/shell.c ****  * @brief shell 输出按键列表(shell调用)
1848:Dsp/letter_shell/shell.c ****  */
1849:Dsp/letter_shell/shell.c **** void shellKeys(void)
1850:Dsp/letter_shell/shell.c **** {
1851:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
1852:Dsp/letter_shell/shell.c ****     if (shell)
1853:Dsp/letter_shell/shell.c ****     {
1854:Dsp/letter_shell/shell.c ****         shellListKey(shell);
1855:Dsp/letter_shell/shell.c ****     }
1856:Dsp/letter_shell/shell.c **** }
1857:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1858:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1859:Dsp/letter_shell/shell.c **** keys, shellKeys, list all key);
1860:Dsp/letter_shell/shell.c **** 
1861:Dsp/letter_shell/shell.c **** 
1862:Dsp/letter_shell/shell.c **** /**
1863:Dsp/letter_shell/shell.c ****  * @brief shell 清空控制台(shell调用)
1864:Dsp/letter_shell/shell.c ****  */
1865:Dsp/letter_shell/shell.c **** void shellClear(void)
1866:Dsp/letter_shell/shell.c **** {
 997              		.loc 1 1866 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 52


 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001 0000 08B5     		push	{r3, lr}
 1002              	.LCFI17:
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 3, -8
 1005              		.cfi_offset 14, -4
1867:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 1006              		.loc 1 1867 0
 1007 0002 FFF7FEFF 		bl	shellGetCurrent
 1008              	.LVL107:
1868:Dsp/letter_shell/shell.c ****     if (shell)
 1009              		.loc 1 1868 0
 1010 0006 10B1     		cbz	r0, .L96
1869:Dsp/letter_shell/shell.c ****     {
1870:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_CONSOLE]);
 1011              		.loc 1 1870 0
 1012 0008 0149     		ldr	r1, .L99
 1013 000a FFF7FEFF 		bl	shellWriteString
 1014              	.LVL108:
 1015              	.L96:
 1016 000e 08BD     		pop	{r3, pc}
 1017              	.L100:
 1018              		.align	2
 1019              	.L99:
 1020 0010 00000000 		.word	.LC0
 1021              		.cfi_endproc
 1022              	.LFE180:
 1024              		.section	.text.shellPrint,"ax",%progbits
 1025              		.align	2
 1026              		.global	shellPrint
 1027              		.thumb
 1028              		.thumb_func
 1030              	shellPrint:
 1031              	.LFB131:
 361:Dsp/letter_shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 1032              		.loc 1 361 0
 1033              		.cfi_startproc
 1034              		@ args = 4, pretend = 12, frame = 136
 1035              		@ frame_needed = 0, uses_anonymous_args = 1
 1036              	.LVL109:
 365:Dsp/letter_shell/shell.c **** 
 1037              		.loc 1 365 0
 1038 0000 90B1     		cbz	r0, .L106
 361:Dsp/letter_shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 1039              		.loc 1 361 0
 1040 0002 0EB4     		push	{r1, r2, r3}
 1041              	.LCFI18:
 1042              		.cfi_def_cfa_offset 12
 1043              		.cfi_offset 1, -12
 1044              		.cfi_offset 2, -8
 1045              		.cfi_offset 3, -4
 1046 0004 10B5     		push	{r4, lr}
 1047              	.LCFI19:
 1048              		.cfi_def_cfa_offset 20
 1049              		.cfi_offset 4, -20
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 53


 1050              		.cfi_offset 14, -16
 1051 0006 A3B0     		sub	sp, sp, #140
 1052              	.LCFI20:
 1053              		.cfi_def_cfa_offset 160
 1054 0008 0446     		mov	r4, r0
 367:Dsp/letter_shell/shell.c ****     vsnprintf(buffer, SHELL_PRINT_BUFFER - 1, fmt, vargs);
 1055              		.loc 1 367 0
 1056 000a 26AB     		add	r3, sp, #152
 1057 000c 0193     		str	r3, [sp, #4]
 368:Dsp/letter_shell/shell.c ****     va_end(vargs);
 1058              		.loc 1 368 0
 1059 000e 259A     		ldr	r2, [sp, #148]
 1060 0010 7F21     		movs	r1, #127
 1061 0012 02A8     		add	r0, sp, #8
 1062              	.LVL110:
 1063 0014 FFF7FEFF 		bl	vsnprintf
 1064              	.LVL111:
 371:Dsp/letter_shell/shell.c **** }
 1065              		.loc 1 371 0
 1066 0018 02A9     		add	r1, sp, #8
 1067 001a 2046     		mov	r0, r4
 1068 001c FFF7FEFF 		bl	shellWriteString
 1069              	.LVL112:
 372:Dsp/letter_shell/shell.c **** #endif
 1070              		.loc 1 372 0
 1071 0020 23B0     		add	sp, sp, #140
 1072              	.LCFI21:
 1073              		.cfi_def_cfa_offset 20
 1074              		@ sp needed
 1075 0022 BDE81040 		pop	{r4, lr}
 1076              	.LCFI22:
 1077              		.cfi_restore 14
 1078              		.cfi_restore 4
 1079              		.cfi_def_cfa_offset 12
 1080              	.LVL113:
 1081 0026 03B0     		add	sp, sp, #12
 1082              	.LCFI23:
 1083              		.cfi_restore 3
 1084              		.cfi_restore 2
 1085              		.cfi_restore 1
 1086              		.cfi_def_cfa_offset 0
 1087              	.L106:
 1088 0028 7047     		bx	lr
 1089              		.cfi_endproc
 1090              	.LFE131:
 1092 002a 00BF     		.section	.text.shellScan,"ax",%progbits
 1093              		.align	2
 1094              		.global	shellScan
 1095              		.thumb
 1096              		.thumb_func
 1098              	shellScan:
 1099              	.LFB132:
 385:Dsp/letter_shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 1100              		.loc 1 385 0
 1101              		.cfi_startproc
 1102              		@ args = 4, pretend = 12, frame = 8
 1103              		@ frame_needed = 0, uses_anonymous_args = 1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 54


 1104              	.LVL114:
 390:Dsp/letter_shell/shell.c **** 
 1105              		.loc 1 390 0
 1106 0000 0028     		cmp	r0, #0
 1107 0002 32D0     		beq	.L116
 385:Dsp/letter_shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 1108              		.loc 1 385 0
 1109 0004 0EB4     		push	{r1, r2, r3}
 1110              	.LCFI24:
 1111              		.cfi_def_cfa_offset 12
 1112              		.cfi_offset 1, -12
 1113              		.cfi_offset 2, -8
 1114              		.cfi_offset 3, -4
 1115 0006 70B5     		push	{r4, r5, r6, lr}
 1116              	.LCFI25:
 1117              		.cfi_def_cfa_offset 28
 1118              		.cfi_offset 4, -28
 1119              		.cfi_offset 5, -24
 1120              		.cfi_offset 6, -20
 1121              		.cfi_offset 14, -16
 1122 0008 83B0     		sub	sp, sp, #12
 1123              	.LCFI26:
 1124              		.cfi_def_cfa_offset 40
 1125 000a 0646     		mov	r6, r0
 392:Dsp/letter_shell/shell.c ****     {
 1126              		.loc 1 392 0
 1127 000c 436E     		ldr	r3, [r0, #100]
 1128 000e 13B3     		cbz	r3, .L109
 1129 0010 0024     		movs	r4, #0
 1130              	.LVL115:
 1131              	.L112:
 395:Dsp/letter_shell/shell.c ****             {
 1132              		.loc 1 395 0
 1133 0012 736E     		ldr	r3, [r6, #100]
 1134 0014 01AA     		add	r2, sp, #4
 1135 0016 1019     		adds	r0, r2, r4
 1136 0018 9847     		blx	r3
 1137              	.LVL116:
 1138 001a 38B9     		cbnz	r0, .L110
 397:Dsp/letter_shell/shell.c ****                 index++;
 1139              		.loc 1 397 0
 1140 001c B36E     		ldr	r3, [r6, #104]
 1141 001e 02AA     		add	r2, sp, #8
 1142 0020 2244     		add	r2, r2, r4
 1143 0022 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 1144 0026 9847     		blx	r3
 1145              	.LVL117:
 398:Dsp/letter_shell/shell.c ****             }
 1146              		.loc 1 398 0
 1147 0028 0134     		adds	r4, r4, #1
 1148              	.LVL118:
 1149 002a 24B2     		sxth	r4, r4
 1150              	.LVL119:
 1151              	.L110:
 400:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 1152              		.loc 1 400 0
 1153 002c 2546     		mov	r5, r4
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 55


 1154 002e 631E     		subs	r3, r4, #1
 1155 0030 02AA     		add	r2, sp, #8
 1156 0032 1344     		add	r3, r3, r2
 1157 0034 13F8043C 		ldrb	r3, [r3, #-4]	@ zero_extendqisi2
 1158 0038 0D2B     		cmp	r3, #13
 1159 003a 03D0     		beq	.L111
 400:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 1160              		.loc 1 400 0 is_stmt 0 discriminator 1
 1161 003c 0A2B     		cmp	r3, #10
 1162 003e 01D0     		beq	.L111
 400:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\r\n");
 1163              		.loc 1 400 0 discriminator 2
 1164 0040 002C     		cmp	r4, #0
 1165 0042 E6DD     		ble	.L112
 1166              	.L111:
 401:Dsp/letter_shell/shell.c ****         buffer[index] = '\0';
 1167              		.loc 1 401 0 is_stmt 1
 1168 0044 0949     		ldr	r1, .L117
 1169 0046 3046     		mov	r0, r6
 1170 0048 FFF7FEFF 		bl	shellWriteString
 1171              	.LVL120:
 402:Dsp/letter_shell/shell.c ****     }
 1172              		.loc 1 402 0
 1173 004c 02AB     		add	r3, sp, #8
 1174 004e 1D44     		add	r5, r5, r3
 1175 0050 0023     		movs	r3, #0
 1176 0052 05F8043C 		strb	r3, [r5, #-4]
 1177              	.LVL121:
 1178              	.L109:
 405:Dsp/letter_shell/shell.c ****     vsscanf(buffer, fmt, vargs);
 1179              		.loc 1 405 0
 1180 0056 08AA     		add	r2, sp, #32
 1181 0058 0092     		str	r2, [sp]
 406:Dsp/letter_shell/shell.c ****     va_end(vargs);
 1182              		.loc 1 406 0
 1183 005a 0799     		ldr	r1, [sp, #28]
 1184 005c 01A8     		add	r0, sp, #4
 1185 005e FFF7FEFF 		bl	vsscanf
 1186              	.LVL122:
 408:Dsp/letter_shell/shell.c **** #endif
 1187              		.loc 1 408 0
 1188 0062 03B0     		add	sp, sp, #12
 1189              	.LCFI27:
 1190              		.cfi_def_cfa_offset 28
 1191              		@ sp needed
 1192 0064 BDE87040 		pop	{r4, r5, r6, lr}
 1193              	.LCFI28:
 1194              		.cfi_restore 14
 1195              		.cfi_restore 6
 1196              		.cfi_restore 5
 1197              		.cfi_restore 4
 1198              		.cfi_def_cfa_offset 12
 1199              	.LVL123:
 1200 0068 03B0     		add	sp, sp, #12
 1201              	.LCFI29:
 1202              		.cfi_restore 3
 1203              		.cfi_restore 2
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 56


 1204              		.cfi_restore 1
 1205              		.cfi_def_cfa_offset 0
 1206              	.L116:
 1207 006a 7047     		bx	lr
 1208              	.L118:
 1209              		.align	2
 1210              	.L117:
 1211 006c A0010000 		.word	.LC3
 1212              		.cfi_endproc
 1213              	.LFE132:
 1215              		.section	.text.shellCheckPermission,"ax",%progbits
 1216              		.align	2
 1217              		.global	shellCheckPermission
 1218              		.thumb
 1219              		.thumb_func
 1221              	shellCheckPermission:
 1222              	.LFB133:
 422:Dsp/letter_shell/shell.c ****     return ((!command->attr.attrs.permission
 1223              		.loc 1 422 0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 0
 1226              		@ frame_needed = 0, uses_anonymous_args = 0
 1227              		@ link register save eliminated.
 1228              	.LVL124:
 423:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.type == SHELL_TYPE_USER
 1229              		.loc 1 423 0
 1230 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1231 0002 43B1     		cbz	r3, .L120
 424:Dsp/letter_shell/shell.c ****                 || (command->attr.attrs.permission 
 1232              		.loc 1 424 0
 1233 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1234 0006 02F00F02 		and	r2, r2, #15
 1235 000a 082A     		cmp	r2, #8
 1236 000c 03D0     		beq	.L120
 426:Dsp/letter_shell/shell.c ****             && (shell->status.isChecked
 1237              		.loc 1 426 0
 1238 000e 0268     		ldr	r2, [r0]
 1239 0010 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 425:Dsp/letter_shell/shell.c ****                     & shell->info.user->attr.attrs.permission))
 1240              		.loc 1 425 0
 1241 0012 1342     		tst	r3, r2
 1242 0014 0BD0     		beq	.L122
 1243              	.L120:
 427:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.enableUnchecked))
 1244              		.loc 1 427 0
 1245 0016 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 1246 001a 13F0010F 		tst	r3, #1
 1247 001e 09D1     		bne	.L123
 428:Dsp/letter_shell/shell.c ****             ? 0 : -1;
 1248              		.loc 1 428 0
 1249 0020 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1250 0022 13F0100F 		tst	r3, #16
 1251 0026 07D1     		bne	.L124
 423:Dsp/letter_shell/shell.c ****                 || command->attr.attrs.type == SHELL_TYPE_USER
 1252              		.loc 1 423 0
 1253 0028 4FF0FF30 		mov	r0, #-1
 1254              	.LVL125:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 57


 1255 002c 7047     		bx	lr
 1256              	.LVL126:
 1257              	.L122:
 1258 002e 4FF0FF30 		mov	r0, #-1
 1259              	.LVL127:
 1260 0032 7047     		bx	lr
 1261              	.LVL128:
 1262              	.L123:
 1263 0034 0020     		movs	r0, #0
 1264              	.LVL129:
 1265 0036 7047     		bx	lr
 1266              	.LVL130:
 1267              	.L124:
 1268 0038 0020     		movs	r0, #0
 1269              	.LVL131:
 430:Dsp/letter_shell/shell.c **** 
 1270              		.loc 1 430 0
 1271 003a 7047     		bx	lr
 1272              		.cfi_endproc
 1273              	.LFE133:
 1275              		.section	.text.shellToHex,"ax",%progbits
 1276              		.align	2
 1277              		.global	shellToHex
 1278              		.thumb
 1279              		.thumb_func
 1281              	shellToHex:
 1282              	.LFB134:
 442:Dsp/letter_shell/shell.c ****     char byte;
 1283              		.loc 1 442 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 0
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287              		@ link register save eliminated.
 1288              	.LVL132:
 1289 0000 10B4     		push	{r4}
 1290              	.LCFI30:
 1291              		.cfi_def_cfa_offset 4
 1292              		.cfi_offset 4, -4
 1293              	.LVL133:
 445:Dsp/letter_shell/shell.c ****     while (value)
 1294              		.loc 1 445 0
 1295 0002 0023     		movs	r3, #0
 1296 0004 0B72     		strb	r3, [r1, #8]
 444:Dsp/letter_shell/shell.c ****     buffer[8] = 0;
 1297              		.loc 1 444 0
 1298 0006 0823     		movs	r3, #8
 446:Dsp/letter_shell/shell.c ****     {
 1299              		.loc 1 446 0
 1300 0008 0BE0     		b	.L126
 1301              	.LVL134:
 1302              	.L129:
 448:Dsp/letter_shell/shell.c ****         buffer[--i] = (byte > 9) ? (byte + 87) : (byte + 48);
 1303              		.loc 1 448 0
 1304 000a 00F00F02 		and	r2, r0, #15
 1305              	.LVL135:
 449:Dsp/letter_shell/shell.c ****         value >>= 4;
 1306              		.loc 1 449 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 58


 1307 000e 013B     		subs	r3, r3, #1
 1308              	.LVL136:
 1309 0010 DBB2     		uxtb	r3, r3
 1310              	.LVL137:
 1311 0012 CC18     		adds	r4, r1, r3
 1312 0014 092A     		cmp	r2, #9
 1313 0016 01D9     		bls	.L127
 449:Dsp/letter_shell/shell.c ****         value >>= 4;
 1314              		.loc 1 449 0 is_stmt 0 discriminator 1
 1315 0018 5732     		adds	r2, r2, #87
 1316              	.LVL138:
 1317 001a 00E0     		b	.L128
 1318              	.LVL139:
 1319              	.L127:
 449:Dsp/letter_shell/shell.c ****         value >>= 4;
 1320              		.loc 1 449 0 discriminator 2
 1321 001c 3032     		adds	r2, r2, #48
 1322              	.LVL140:
 1323              	.L128:
 449:Dsp/letter_shell/shell.c ****         value >>= 4;
 1324              		.loc 1 449 0 discriminator 4
 1325 001e 2270     		strb	r2, [r4]
 450:Dsp/letter_shell/shell.c ****     }
 1326              		.loc 1 450 0 is_stmt 1 discriminator 4
 1327 0020 0009     		lsrs	r0, r0, #4
 1328              	.LVL141:
 1329              	.L126:
 446:Dsp/letter_shell/shell.c ****     {
 1330              		.loc 1 446 0
 1331 0022 0028     		cmp	r0, #0
 1332 0024 F1D1     		bne	.L129
 452:Dsp/letter_shell/shell.c **** }
 1333              		.loc 1 452 0
 1334 0026 C3F10800 		rsb	r0, r3, #8
 1335              	.LVL142:
 453:Dsp/letter_shell/shell.c **** 
 1336              		.loc 1 453 0
 1337 002a 40B2     		sxtb	r0, r0
 1338 002c 5DF8044B 		ldr	r4, [sp], #4
 1339              	.LCFI31:
 1340              		.cfi_restore 4
 1341              		.cfi_def_cfa_offset 0
 1342 0030 7047     		bx	lr
 1343              		.cfi_endproc
 1344              	.LFE134:
 1346 0032 00BF     		.section	.text.shellGetCommandName,"ax",%progbits
 1347              		.align	2
 1348              		.thumb
 1349              		.thumb_func
 1351              	shellGetCommandName:
 1352              	.LFB138:
 541:Dsp/letter_shell/shell.c ****     static char buffer[9];
 1353              		.loc 1 541 0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 0, uses_anonymous_args = 0
 1357              	.LVL143:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 59


 1358              	.LBB8:
 543:Dsp/letter_shell/shell.c ****     {
 1359              		.loc 1 543 0
 1360 0000 0023     		movs	r3, #0
 1361 0002 04E0     		b	.L132
 1362              	.LVL144:
 1363              	.L133:
 545:Dsp/letter_shell/shell.c ****     }
 1364              		.loc 1 545 0 discriminator 3
 1365 0004 3021     		movs	r1, #48
 1366 0006 0E4A     		ldr	r2, .L140
 1367 0008 D154     		strb	r1, [r2, r3]
 543:Dsp/letter_shell/shell.c ****     {
 1368              		.loc 1 543 0 discriminator 3
 1369 000a 0133     		adds	r3, r3, #1
 1370              	.LVL145:
 1371 000c DBB2     		uxtb	r3, r3
 1372              	.LVL146:
 1373              	.L132:
 543:Dsp/letter_shell/shell.c ****     {
 1374              		.loc 1 543 0 is_stmt 0 discriminator 1
 1375 000e 082B     		cmp	r3, #8
 1376 0010 F8D9     		bls	.L133
 1377              	.LBE8:
 547:Dsp/letter_shell/shell.c ****     {
 1378              		.loc 1 547 0 is_stmt 1
 1379 0012 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1380              	.LVL147:
 1381 0014 03F00F03 		and	r3, r3, #15
 1382 0018 012B     		cmp	r3, #1
 1383 001a 01DC     		bgt	.L134
 549:Dsp/letter_shell/shell.c ****     }
 1384              		.loc 1 549 0
 1385 001c 4068     		ldr	r0, [r0, #4]
 1386              	.LVL148:
 564:Dsp/letter_shell/shell.c **** 
 1387              		.loc 1 564 0
 1388 001e 7047     		bx	lr
 1389              	.LVL149:
 1390              	.L134:
 551:Dsp/letter_shell/shell.c ****     {
 1391              		.loc 1 551 0
 1392 0020 072B     		cmp	r3, #7
 1393 0022 01DC     		bgt	.L136
 553:Dsp/letter_shell/shell.c ****     }
 1394              		.loc 1 553 0
 1395 0024 4068     		ldr	r0, [r0, #4]
 1396              	.LVL150:
 1397 0026 7047     		bx	lr
 1398              	.LVL151:
 1399              	.L136:
 555:Dsp/letter_shell/shell.c ****     {
 1400              		.loc 1 555 0
 1401 0028 082B     		cmp	r3, #8
 1402 002a 01DC     		bgt	.L137
 557:Dsp/letter_shell/shell.c ****     }
 1403              		.loc 1 557 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 60


 1404 002c 4068     		ldr	r0, [r0, #4]
 1405              	.LVL152:
 1406 002e 7047     		bx	lr
 1407              	.LVL153:
 1408              	.L137:
 541:Dsp/letter_shell/shell.c ****     static char buffer[9];
 1409              		.loc 1 541 0
 1410 0030 10B5     		push	{r4, lr}
 1411              	.LCFI32:
 1412              		.cfi_def_cfa_offset 8
 1413              		.cfi_offset 4, -8
 1414              		.cfi_offset 14, -4
 561:Dsp/letter_shell/shell.c ****         return buffer;
 1415              		.loc 1 561 0
 1416 0032 034C     		ldr	r4, .L140
 1417 0034 2146     		mov	r1, r4
 1418 0036 4068     		ldr	r0, [r0, #4]
 1419              	.LVL154:
 1420 0038 FFF7FEFF 		bl	shellToHex
 1421              	.LVL155:
 562:Dsp/letter_shell/shell.c ****     }
 1422              		.loc 1 562 0
 1423 003c 2046     		mov	r0, r4
 564:Dsp/letter_shell/shell.c **** 
 1424              		.loc 1 564 0
 1425 003e 10BD     		pop	{r4, pc}
 1426              	.L141:
 1427              		.align	2
 1428              	.L140:
 1429 0040 00000000 		.word	.LANCHOR1
 1430              		.cfi_endproc
 1431              	.LFE138:
 1433              		.section	.text.shellToDec,"ax",%progbits
 1434              		.align	2
 1435              		.global	shellToDec
 1436              		.thumb
 1437              		.thumb_func
 1439              	shellToDec:
 1440              	.LFB135:
 465:Dsp/letter_shell/shell.c ****     unsigned char i = 11;
 1441              		.loc 1 465 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 0, uses_anonymous_args = 0
 1445              		@ link register save eliminated.
 1446              	.LVL156:
 1447 0000 70B4     		push	{r4, r5, r6}
 1448              	.LCFI33:
 1449              		.cfi_def_cfa_offset 12
 1450              		.cfi_offset 4, -12
 1451              		.cfi_offset 5, -8
 1452              		.cfi_offset 6, -4
 1453              	.LVL157:
 468:Dsp/letter_shell/shell.c ****     {
 1454              		.loc 1 468 0
 1455 0002 0028     		cmp	r0, #0
 1456 0004 01DA     		bge	.L148
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 61


 470:Dsp/letter_shell/shell.c ****     }
 1457              		.loc 1 470 0
 1458 0006 4442     		negs	r4, r0
 1459              	.LVL158:
 1460 0008 00E0     		b	.L143
 1461              	.LVL159:
 1462              	.L148:
 467:Dsp/letter_shell/shell.c ****     if (value < 0)
 1463              		.loc 1 467 0
 1464 000a 0446     		mov	r4, r0
 1465              	.LVL160:
 1466              	.L143:
 472:Dsp/letter_shell/shell.c ****     while (v)
 1467              		.loc 1 472 0
 1468 000c 0023     		movs	r3, #0
 1469 000e CB72     		strb	r3, [r1, #11]
 466:Dsp/letter_shell/shell.c ****     int v = value;
 1470              		.loc 1 466 0
 1471 0010 0B22     		movs	r2, #11
 473:Dsp/letter_shell/shell.c ****     {
 1472              		.loc 1 473 0
 1473 0012 0FE0     		b	.L144
 1474              	.LVL161:
 1475              	.L145:
 475:Dsp/letter_shell/shell.c ****         v /= 10;
 1476              		.loc 1 475 0
 1477 0014 013A     		subs	r2, r2, #1
 1478              	.LVL162:
 1479 0016 D2B2     		uxtb	r2, r2
 1480              	.LVL163:
 1481 0018 0F4B     		ldr	r3, .L150
 1482 001a 83FB0435 		smull	r3, r5, r3, r4
 1483 001e E317     		asrs	r3, r4, #31
 1484 0020 C3EBA503 		rsb	r3, r3, r5, asr #2
 1485 0024 1E46     		mov	r6, r3
 1486 0026 03EB8303 		add	r3, r3, r3, lsl #2
 1487 002a 5D00     		lsls	r5, r3, #1
 1488 002c 631B     		subs	r3, r4, r5
 1489 002e 3033     		adds	r3, r3, #48
 1490 0030 8B54     		strb	r3, [r1, r2]
 476:Dsp/letter_shell/shell.c ****     }
 1491              		.loc 1 476 0
 1492 0032 3446     		mov	r4, r6
 1493              	.LVL164:
 1494              	.L144:
 473:Dsp/letter_shell/shell.c ****     {
 1495              		.loc 1 473 0
 1496 0034 002C     		cmp	r4, #0
 1497 0036 EDD1     		bne	.L145
 478:Dsp/letter_shell/shell.c ****     {
 1498              		.loc 1 478 0
 1499 0038 0028     		cmp	r0, #0
 1500 003a 03DA     		bge	.L146
 480:Dsp/letter_shell/shell.c ****     }
 1501              		.loc 1 480 0
 1502 003c 013A     		subs	r2, r2, #1
 1503              	.LVL165:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 62


 1504 003e D2B2     		uxtb	r2, r2
 1505              	.LVL166:
 1506 0040 2D23     		movs	r3, #45
 1507 0042 8B54     		strb	r3, [r1, r2]
 1508              	.L146:
 482:Dsp/letter_shell/shell.c ****         buffer[--i] = '0';
 1509              		.loc 1 482 0
 1510 0044 18B9     		cbnz	r0, .L147
 483:Dsp/letter_shell/shell.c ****     }
 1511              		.loc 1 483 0
 1512 0046 013A     		subs	r2, r2, #1
 1513              	.LVL167:
 1514 0048 D2B2     		uxtb	r2, r2
 1515              	.LVL168:
 1516 004a 3023     		movs	r3, #48
 1517 004c 8B54     		strb	r3, [r1, r2]
 1518              	.L147:
 485:Dsp/letter_shell/shell.c **** }
 1519              		.loc 1 485 0
 1520 004e C2F10B00 		rsb	r0, r2, #11
 1521              	.LVL169:
 486:Dsp/letter_shell/shell.c **** 
 1522              		.loc 1 486 0
 1523 0052 40B2     		sxtb	r0, r0
 1524 0054 70BC     		pop	{r4, r5, r6}
 1525              	.LCFI34:
 1526              		.cfi_restore 6
 1527              		.cfi_restore 5
 1528              		.cfi_restore 4
 1529              		.cfi_def_cfa_offset 0
 1530              	.LVL170:
 1531 0056 7047     		bx	lr
 1532              	.L151:
 1533              		.align	2
 1534              	.L150:
 1535 0058 67666666 		.word	1717986919
 1536              		.cfi_endproc
 1537              	.LFE135:
 1539              		.section	.text.shellWriteReturnValue,"ax",%progbits
 1540              		.align	2
 1541              		.thumb
 1542              		.thumb_func
 1544              	shellWriteReturnValue:
 1545              	.LFB160:
1266:Dsp/letter_shell/shell.c ****     char buffer[12] = "00000000000";
 1546              		.loc 1 1266 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 16
 1549              		@ frame_needed = 0, uses_anonymous_args = 0
 1550              	.LVL171:
 1551 0000 70B5     		push	{r4, r5, r6, lr}
 1552              	.LCFI35:
 1553              		.cfi_def_cfa_offset 16
 1554              		.cfi_offset 4, -16
 1555              		.cfi_offset 5, -12
 1556              		.cfi_offset 6, -8
 1557              		.cfi_offset 14, -4
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 63


 1558 0002 84B0     		sub	sp, sp, #16
 1559              	.LCFI36:
 1560              		.cfi_def_cfa_offset 32
 1561 0004 0446     		mov	r4, r0
 1562 0006 0E46     		mov	r6, r1
1267:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "Return: ");
 1563              		.loc 1 1267 0
 1564 0008 184B     		ldr	r3, .L156
 1565 000a 01AD     		add	r5, sp, #4
 1566 000c 93E80700 		ldmia	r3, {r0, r1, r2}
 1567              	.LVL172:
 1568 0010 85E80700 		stmia	r5, {r0, r1, r2}
1268:Dsp/letter_shell/shell.c ****     shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
 1569              		.loc 1 1268 0
 1570 0014 1649     		ldr	r1, .L156+4
 1571 0016 2046     		mov	r0, r4
 1572 0018 FFF7FEFF 		bl	shellWriteString
 1573              	.LVL173:
1269:Dsp/letter_shell/shell.c ****     shellWriteString(shell, ", 0x");
 1574              		.loc 1 1269 0
 1575 001c 2946     		mov	r1, r5
 1576 001e 3046     		mov	r0, r6
 1577 0020 FFF7FEFF 		bl	shellToDec
 1578              	.LVL174:
 1579 0024 C0F10B01 		rsb	r1, r0, #11
 1580 0028 2944     		add	r1, r1, r5
 1581 002a 2046     		mov	r0, r4
 1582 002c FFF7FEFF 		bl	shellWriteString
 1583              	.LVL175:
1270:Dsp/letter_shell/shell.c ****     for (short i = 0; i < 11; i++)
 1584              		.loc 1 1270 0
 1585 0030 1049     		ldr	r1, .L156+8
 1586 0032 2046     		mov	r0, r4
 1587 0034 FFF7FEFF 		bl	shellWriteString
 1588              	.LVL176:
 1589              	.LBB9:
1271:Dsp/letter_shell/shell.c ****     {
 1590              		.loc 1 1271 0
 1591 0038 0023     		movs	r3, #0
 1592 003a 06E0     		b	.L153
 1593              	.LVL177:
 1594              	.L154:
1273:Dsp/letter_shell/shell.c ****     }
 1595              		.loc 1 1273 0 discriminator 3
 1596 003c 04AA     		add	r2, sp, #16
 1597 003e 1A44     		add	r2, r2, r3
 1598 0040 3021     		movs	r1, #48
 1599 0042 02F80C1C 		strb	r1, [r2, #-12]
1271:Dsp/letter_shell/shell.c ****     {
 1600              		.loc 1 1271 0 discriminator 3
 1601 0046 0133     		adds	r3, r3, #1
 1602              	.LVL178:
 1603 0048 1BB2     		sxth	r3, r3
 1604              	.LVL179:
 1605              	.L153:
1271:Dsp/letter_shell/shell.c ****     {
 1606              		.loc 1 1271 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 64


 1607 004a 0A2B     		cmp	r3, #10
 1608 004c F6DD     		ble	.L154
 1609              	.LBE9:
1275:Dsp/letter_shell/shell.c ****     shellWriteString(shell, buffer);
 1610              		.loc 1 1275 0 is_stmt 1
 1611 004e 01A9     		add	r1, sp, #4
 1612 0050 3046     		mov	r0, r6
 1613 0052 FFF7FEFF 		bl	shellToHex
 1614              	.LVL180:
1276:Dsp/letter_shell/shell.c ****     shellWriteString(shell, "\r\n");
 1615              		.loc 1 1276 0
 1616 0056 01A9     		add	r1, sp, #4
 1617 0058 2046     		mov	r0, r4
 1618 005a FFF7FEFF 		bl	shellWriteString
 1619              	.LVL181:
1277:Dsp/letter_shell/shell.c **** }
 1620              		.loc 1 1277 0
 1621 005e 0649     		ldr	r1, .L156+12
 1622 0060 2046     		mov	r0, r4
 1623 0062 FFF7FEFF 		bl	shellWriteString
 1624              	.LVL182:
1278:Dsp/letter_shell/shell.c **** 
 1625              		.loc 1 1278 0
 1626 0066 04B0     		add	sp, sp, #16
 1627              	.LCFI37:
 1628              		.cfi_def_cfa_offset 16
 1629              		@ sp needed
 1630 0068 70BD     		pop	{r4, r5, r6, pc}
 1631              	.LVL183:
 1632              	.L157:
 1633 006a 00BF     		.align	2
 1634              	.L156:
 1635 006c F0010000 		.word	.LC8
 1636 0070 DC010000 		.word	.LC9
 1637 0074 E8010000 		.word	.LC10
 1638 0078 A0010000 		.word	.LC3
 1639              		.cfi_endproc
 1640              	.LFE160:
 1642              		.section	.text.shellListItem,"ax",%progbits
 1643              		.align	2
 1644              		.global	shellListItem
 1645              		.thumb
 1646              		.thumb_func
 1648              	shellListItem:
 1649              	.LFB140:
 600:Dsp/letter_shell/shell.c ****     short spaceLength;
 1650              		.loc 1 600 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 0
 1653              		@ frame_needed = 0, uses_anonymous_args = 0
 1654              	.LVL184:
 1655 0000 70B5     		push	{r4, r5, r6, lr}
 1656              	.LCFI38:
 1657              		.cfi_def_cfa_offset 16
 1658              		.cfi_offset 4, -16
 1659              		.cfi_offset 5, -12
 1660              		.cfi_offset 6, -8
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 65


 1661              		.cfi_offset 14, -4
 1662 0002 0546     		mov	r5, r0
 1663 0004 0E46     		mov	r6, r1
 603:Dsp/letter_shell/shell.c ****     spaceLength = (spaceLength > 0) ? spaceLength : 4;
 1664              		.loc 1 603 0
 1665 0006 0846     		mov	r0, r1
 1666              	.LVL185:
 1667 0008 FFF7FEFF 		bl	shellGetCommandName
 1668              	.LVL186:
 1669 000c 0146     		mov	r1, r0
 1670 000e 2846     		mov	r0, r5
 1671 0010 FFF7FEFF 		bl	shellWriteString
 1672              	.LVL187:
 1673 0014 C0F11600 		rsb	r0, r0, #22
 1674 0018 04B2     		sxth	r4, r0
 1675              	.LVL188:
 604:Dsp/letter_shell/shell.c ****     do {
 1676              		.loc 1 604 0
 1677 001a 002C     		cmp	r4, #0
 1678 001c 00DC     		bgt	.L160
 1679 001e 0424     		movs	r4, #4
 1680              	.LVL189:
 1681              	.L160:
 606:Dsp/letter_shell/shell.c ****     } while (--spaceLength);
 1682              		.loc 1 606 0 discriminator 1
 1683 0020 2D21     		movs	r1, #45
 1684 0022 2846     		mov	r0, r5
 1685 0024 FFF7FEFF 		bl	shellWriteByte
 1686              	.LVL190:
 607:Dsp/letter_shell/shell.c ****     if (item->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 1687              		.loc 1 607 0 discriminator 1
 1688 0028 013C     		subs	r4, r4, #1
 1689              	.LVL191:
 1690 002a 24B2     		sxth	r4, r4
 1691              	.LVL192:
 1692 002c 002C     		cmp	r4, #0
 1693 002e F7D1     		bne	.L160
 608:Dsp/letter_shell/shell.c ****     {
 1694              		.loc 1 608 0
 1695 0030 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 1696 0032 03F00F03 		and	r3, r3, #15
 1697 0036 012B     		cmp	r3, #1
 1698 0038 04DC     		bgt	.L161
 610:Dsp/letter_shell/shell.c ****     }
 1699              		.loc 1 610 0
 1700 003a 0F49     		ldr	r1, .L167
 1701 003c 2846     		mov	r0, r5
 1702 003e FFF7FEFF 		bl	shellWriteString
 1703              	.LVL193:
 1704 0042 70BD     		pop	{r4, r5, r6, pc}
 1705              	.LVL194:
 1706              	.L161:
 612:Dsp/letter_shell/shell.c ****     {
 1707              		.loc 1 612 0
 1708 0044 072B     		cmp	r3, #7
 1709 0046 04DC     		bgt	.L163
 614:Dsp/letter_shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 66


 1710              		.loc 1 614 0
 1711 0048 0C49     		ldr	r1, .L167+4
 1712 004a 2846     		mov	r0, r5
 1713 004c FFF7FEFF 		bl	shellWriteString
 1714              	.LVL195:
 1715 0050 70BD     		pop	{r4, r5, r6, pc}
 1716              	.LVL196:
 1717              	.L163:
 616:Dsp/letter_shell/shell.c ****     {
 1718              		.loc 1 616 0
 1719 0052 082B     		cmp	r3, #8
 1720 0054 04DC     		bgt	.L164
 618:Dsp/letter_shell/shell.c ****     }
 1721              		.loc 1 618 0
 1722 0056 0A49     		ldr	r1, .L167+8
 1723 0058 2846     		mov	r0, r5
 1724 005a FFF7FEFF 		bl	shellWriteString
 1725              	.LVL197:
 1726 005e 70BD     		pop	{r4, r5, r6, pc}
 1727              	.LVL198:
 1728              	.L164:
 620:Dsp/letter_shell/shell.c ****     {
 1729              		.loc 1 620 0
 1730 0060 092B     		cmp	r3, #9
 1731 0062 04DC     		bgt	.L165
 622:Dsp/letter_shell/shell.c ****     }
 1732              		.loc 1 622 0
 1733 0064 0749     		ldr	r1, .L167+12
 1734 0066 2846     		mov	r0, r5
 1735 0068 FFF7FEFF 		bl	shellWriteString
 1736              	.LVL199:
 1737 006c 70BD     		pop	{r4, r5, r6, pc}
 1738              	.LVL200:
 1739              	.L165:
 626:Dsp/letter_shell/shell.c ****     }
 1740              		.loc 1 626 0
 1741 006e 0649     		ldr	r1, .L167+16
 1742 0070 2846     		mov	r0, r5
 1743 0072 FFF7FEFF 		bl	shellWriteString
 1744              	.LVL201:
 1745 0076 70BD     		pop	{r4, r5, r6, pc}
 1746              	.LVL202:
 1747              	.L168:
 1748              		.align	2
 1749              	.L167:
 1750 0078 FC010000 		.word	.LC11
 1751 007c 04020000 		.word	.LC12
 1752 0080 08020000 		.word	.LC13
 1753 0084 10020000 		.word	.LC14
 1754 0088 14020000 		.word	.LC15
 1755              		.cfi_endproc
 1756              	.LFE140:
 1758              		.section	.text.shellListCommand,"ax",%progbits
 1759              		.align	2
 1760              		.global	shellListCommand
 1761              		.thumb
 1762              		.thumb_func
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 67


 1764              	shellListCommand:
 1765              	.LFB141:
 647:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1766              		.loc 1 647 0
 1767              		.cfi_startproc
 1768              		@ args = 0, pretend = 0, frame = 0
 1769              		@ frame_needed = 0, uses_anonymous_args = 0
 1770              	.LVL203:
 1771 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1772              	.LCFI39:
 1773              		.cfi_def_cfa_offset 24
 1774              		.cfi_offset 3, -24
 1775              		.cfi_offset 4, -20
 1776              		.cfi_offset 5, -16
 1777              		.cfi_offset 6, -12
 1778              		.cfi_offset 7, -8
 1779              		.cfi_offset 14, -4
 1780 0002 0646     		mov	r6, r0
 648:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CMD_LIST]);
 1781              		.loc 1 648 0
 1782 0004 876D     		ldr	r7, [r0, #88]
 1783              	.LVL204:
 649:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1784              		.loc 1 649 0
 1785 0006 0E49     		ldr	r1, .L174
 1786 0008 FFF7FEFF 		bl	shellWriteString
 1787              	.LVL205:
 1788              	.LBB10:
 650:Dsp/letter_shell/shell.c ****     {
 1789              		.loc 1 650 0
 1790 000c 0024     		movs	r4, #0
 1791 000e 11E0     		b	.L170
 1792              	.LVL206:
 1793              	.L172:
 652:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 1794              		.loc 1 652 0
 1795 0010 07EB0415 		add	r5, r7, r4, lsl #4
 1796 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1797 0016 03F00F03 		and	r3, r3, #15
 1798 001a 012B     		cmp	r3, #1
 1799 001c 08DC     		bgt	.L171
 653:Dsp/letter_shell/shell.c ****         {
 1800              		.loc 1 653 0
 1801 001e 2946     		mov	r1, r5
 1802 0020 3046     		mov	r0, r6
 1803 0022 FFF7FEFF 		bl	shellCheckPermission
 1804              	.LVL207:
 1805 0026 18B9     		cbnz	r0, .L171
 655:Dsp/letter_shell/shell.c ****         }
 1806              		.loc 1 655 0
 1807 0028 2946     		mov	r1, r5
 1808 002a 3046     		mov	r0, r6
 1809 002c FFF7FEFF 		bl	shellListItem
 1810              	.LVL208:
 1811              	.L171:
 650:Dsp/letter_shell/shell.c ****     {
 1812              		.loc 1 650 0 discriminator 2
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 68


 1813 0030 0134     		adds	r4, r4, #1
 1814              	.LVL209:
 1815 0032 24B2     		sxth	r4, r4
 1816              	.LVL210:
 1817              	.L170:
 650:Dsp/letter_shell/shell.c ****     {
 1818              		.loc 1 650 0 is_stmt 0 discriminator 1
 1819 0034 B6F85C30 		ldrh	r3, [r6, #92]
 1820 0038 9C42     		cmp	r4, r3
 1821 003a E9DB     		blt	.L172
 1822              	.LBE10:
 658:Dsp/letter_shell/shell.c **** 
 1823              		.loc 1 658 0 is_stmt 1
 1824 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1825              	.LVL211:
 1826              	.L175:
 1827 003e 00BF     		.align	2
 1828              	.L174:
 1829 0040 1C020000 		.word	.LC16
 1830              		.cfi_endproc
 1831              	.LFE141:
 1833              		.section	.text.shellCmds,"ax",%progbits
 1834              		.align	2
 1835              		.global	shellCmds
 1836              		.thumb
 1837              		.thumb_func
 1839              	shellCmds:
 1840              	.LFB177:
1818:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 1841              		.loc 1 1818 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 0
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845 0000 08B5     		push	{r3, lr}
 1846              	.LCFI40:
 1847              		.cfi_def_cfa_offset 8
 1848              		.cfi_offset 3, -8
 1849              		.cfi_offset 14, -4
1819:Dsp/letter_shell/shell.c ****     if (shell)
 1850              		.loc 1 1819 0
 1851 0002 FFF7FEFF 		bl	shellGetCurrent
 1852              	.LVL212:
1820:Dsp/letter_shell/shell.c ****     {
 1853              		.loc 1 1820 0
 1854 0006 08B1     		cbz	r0, .L176
1822:Dsp/letter_shell/shell.c ****     }
 1855              		.loc 1 1822 0
 1856 0008 FFF7FEFF 		bl	shellListCommand
 1857              	.LVL213:
 1858              	.L176:
 1859 000c 08BD     		pop	{r3, pc}
 1860              		.cfi_endproc
 1861              	.LFE177:
 1863 000e 00BF     		.section	.text.shellListVar,"ax",%progbits
 1864              		.align	2
 1865              		.global	shellListVar
 1866              		.thumb
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 69


 1867              		.thumb_func
 1869              	shellListVar:
 1870              	.LFB142:
 667:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1871              		.loc 1 667 0
 1872              		.cfi_startproc
 1873              		@ args = 0, pretend = 0, frame = 0
 1874              		@ frame_needed = 0, uses_anonymous_args = 0
 1875              	.LVL214:
 1876 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1877              	.LCFI41:
 1878              		.cfi_def_cfa_offset 24
 1879              		.cfi_offset 3, -24
 1880              		.cfi_offset 4, -20
 1881              		.cfi_offset 5, -16
 1882              		.cfi_offset 6, -12
 1883              		.cfi_offset 7, -8
 1884              		.cfi_offset 14, -4
 1885 0002 0646     		mov	r6, r0
 668:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_VAR_LIST]);
 1886              		.loc 1 668 0
 1887 0004 876D     		ldr	r7, [r0, #88]
 1888              	.LVL215:
 669:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1889              		.loc 1 669 0
 1890 0006 0F49     		ldr	r1, .L184
 1891 0008 FFF7FEFF 		bl	shellWriteString
 1892              	.LVL216:
 1893              	.LBB11:
 670:Dsp/letter_shell/shell.c ****     {
 1894              		.loc 1 670 0
 1895 000c 0024     		movs	r4, #0
 1896 000e 14E0     		b	.L180
 1897              	.LVL217:
 1898              	.L182:
 672:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_VAR_NODE
 1899              		.loc 1 672 0
 1900 0010 07EB0415 		add	r5, r7, r4, lsl #4
 1901 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1902 0016 03F00F03 		and	r3, r3, #15
 673:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 1903              		.loc 1 673 0
 1904 001a 0E33     		adds	r3, r3, #14
 1905 001c 03F00F03 		and	r3, r3, #15
 672:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_VAR_NODE
 1906              		.loc 1 672 0
 1907 0020 052B     		cmp	r3, #5
 1908 0022 08D8     		bhi	.L181
 674:Dsp/letter_shell/shell.c ****         {
 1909              		.loc 1 674 0
 1910 0024 2946     		mov	r1, r5
 1911 0026 3046     		mov	r0, r6
 1912 0028 FFF7FEFF 		bl	shellCheckPermission
 1913              	.LVL218:
 1914 002c 18B9     		cbnz	r0, .L181
 676:Dsp/letter_shell/shell.c ****         }
 1915              		.loc 1 676 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 70


 1916 002e 2946     		mov	r1, r5
 1917 0030 3046     		mov	r0, r6
 1918 0032 FFF7FEFF 		bl	shellListItem
 1919              	.LVL219:
 1920              	.L181:
 670:Dsp/letter_shell/shell.c ****     {
 1921              		.loc 1 670 0 discriminator 2
 1922 0036 0134     		adds	r4, r4, #1
 1923              	.LVL220:
 1924 0038 24B2     		sxth	r4, r4
 1925              	.LVL221:
 1926              	.L180:
 670:Dsp/letter_shell/shell.c ****     {
 1927              		.loc 1 670 0 is_stmt 0 discriminator 1
 1928 003a B6F85C30 		ldrh	r3, [r6, #92]
 1929 003e 9C42     		cmp	r4, r3
 1930 0040 E6DB     		blt	.L182
 1931              	.LBE11:
 679:Dsp/letter_shell/shell.c **** 
 1932              		.loc 1 679 0 is_stmt 1
 1933 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1934              	.LVL222:
 1935              	.L185:
 1936              		.align	2
 1937              	.L184:
 1938 0044 30020000 		.word	.LC17
 1939              		.cfi_endproc
 1940              	.LFE142:
 1942              		.section	.text.shellVars,"ax",%progbits
 1943              		.align	2
 1944              		.global	shellVars
 1945              		.thumb
 1946              		.thumb_func
 1948              	shellVars:
 1949              	.LFB178:
1834:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 1950              		.loc 1 1834 0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954 0000 08B5     		push	{r3, lr}
 1955              	.LCFI42:
 1956              		.cfi_def_cfa_offset 8
 1957              		.cfi_offset 3, -8
 1958              		.cfi_offset 14, -4
1835:Dsp/letter_shell/shell.c ****     if (shell)
 1959              		.loc 1 1835 0
 1960 0002 FFF7FEFF 		bl	shellGetCurrent
 1961              	.LVL223:
1836:Dsp/letter_shell/shell.c ****     {
 1962              		.loc 1 1836 0
 1963 0006 08B1     		cbz	r0, .L186
1838:Dsp/letter_shell/shell.c ****     }
 1964              		.loc 1 1838 0
 1965 0008 FFF7FEFF 		bl	shellListVar
 1966              	.LVL224:
 1967              	.L186:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 71


 1968 000c 08BD     		pop	{r3, pc}
 1969              		.cfi_endproc
 1970              	.LFE178:
 1972 000e 00BF     		.section	.text.shellListUser,"ax",%progbits
 1973              		.align	2
 1974              		.global	shellListUser
 1975              		.thumb
 1976              		.thumb_func
 1978              	shellListUser:
 1979              	.LFB143:
 688:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1980              		.loc 1 688 0
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 0
 1983              		@ frame_needed = 0, uses_anonymous_args = 0
 1984              	.LVL225:
 1985 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1986              	.LCFI43:
 1987              		.cfi_def_cfa_offset 24
 1988              		.cfi_offset 3, -24
 1989              		.cfi_offset 4, -20
 1990              		.cfi_offset 5, -16
 1991              		.cfi_offset 6, -12
 1992              		.cfi_offset 7, -8
 1993              		.cfi_offset 14, -4
 1994 0002 0646     		mov	r6, r0
 689:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_USER_LIST]);
 1995              		.loc 1 689 0
 1996 0004 876D     		ldr	r7, [r0, #88]
 1997              	.LVL226:
 690:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1998              		.loc 1 690 0
 1999 0006 0E49     		ldr	r1, .L194
 2000 0008 FFF7FEFF 		bl	shellWriteString
 2001              	.LVL227:
 2002              	.LBB12:
 691:Dsp/letter_shell/shell.c ****     {
 2003              		.loc 1 691 0
 2004 000c 0024     		movs	r4, #0
 2005 000e 11E0     		b	.L190
 2006              	.LVL228:
 2007              	.L192:
 693:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_USER
 2008              		.loc 1 693 0
 2009 0010 07EB0415 		add	r5, r7, r4, lsl #4
 694:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 2010              		.loc 1 694 0
 2011 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 2012 0016 03F00F03 		and	r3, r3, #15
 693:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_USER
 2013              		.loc 1 693 0
 2014 001a 082B     		cmp	r3, #8
 2015 001c 08D1     		bne	.L191
 695:Dsp/letter_shell/shell.c ****         {
 2016              		.loc 1 695 0
 2017 001e 2946     		mov	r1, r5
 2018 0020 3046     		mov	r0, r6
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 72


 2019 0022 FFF7FEFF 		bl	shellCheckPermission
 2020              	.LVL229:
 2021 0026 18B9     		cbnz	r0, .L191
 697:Dsp/letter_shell/shell.c ****         }
 2022              		.loc 1 697 0
 2023 0028 2946     		mov	r1, r5
 2024 002a 3046     		mov	r0, r6
 2025 002c FFF7FEFF 		bl	shellListItem
 2026              	.LVL230:
 2027              	.L191:
 691:Dsp/letter_shell/shell.c ****     {
 2028              		.loc 1 691 0 discriminator 2
 2029 0030 0134     		adds	r4, r4, #1
 2030              	.LVL231:
 2031 0032 24B2     		sxth	r4, r4
 2032              	.LVL232:
 2033              	.L190:
 691:Dsp/letter_shell/shell.c ****     {
 2034              		.loc 1 691 0 is_stmt 0 discriminator 1
 2035 0034 B6F85C30 		ldrh	r3, [r6, #92]
 2036 0038 9C42     		cmp	r4, r3
 2037 003a E9DB     		blt	.L192
 2038              	.LBE12:
 700:Dsp/letter_shell/shell.c **** 
 2039              		.loc 1 700 0 is_stmt 1
 2040 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2041              	.LVL233:
 2042              	.L195:
 2043 003e 00BF     		.align	2
 2044              	.L194:
 2045 0040 40020000 		.word	.LC18
 2046              		.cfi_endproc
 2047              	.LFE143:
 2049              		.section	.text.shellUsers,"ax",%progbits
 2050              		.align	2
 2051              		.global	shellUsers
 2052              		.thumb
 2053              		.thumb_func
 2055              	shellUsers:
 2056              	.LFB176:
1802:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 2057              		.loc 1 1802 0
 2058              		.cfi_startproc
 2059              		@ args = 0, pretend = 0, frame = 0
 2060              		@ frame_needed = 0, uses_anonymous_args = 0
 2061 0000 08B5     		push	{r3, lr}
 2062              	.LCFI44:
 2063              		.cfi_def_cfa_offset 8
 2064              		.cfi_offset 3, -8
 2065              		.cfi_offset 14, -4
1803:Dsp/letter_shell/shell.c ****     if (shell)
 2066              		.loc 1 1803 0
 2067 0002 FFF7FEFF 		bl	shellGetCurrent
 2068              	.LVL234:
1804:Dsp/letter_shell/shell.c ****     {
 2069              		.loc 1 1804 0
 2070 0006 08B1     		cbz	r0, .L196
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 73


1806:Dsp/letter_shell/shell.c ****     }
 2071              		.loc 1 1806 0
 2072 0008 FFF7FEFF 		bl	shellListUser
 2073              	.LVL235:
 2074              	.L196:
 2075 000c 08BD     		pop	{r3, pc}
 2076              		.cfi_endproc
 2077              	.LFE176:
 2079 000e 00BF     		.section	.text.shellListKey,"ax",%progbits
 2080              		.align	2
 2081              		.global	shellListKey
 2082              		.thumb
 2083              		.thumb_func
 2085              	shellListKey:
 2086              	.LFB144:
 709:Dsp/letter_shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 2087              		.loc 1 709 0
 2088              		.cfi_startproc
 2089              		@ args = 0, pretend = 0, frame = 0
 2090              		@ frame_needed = 0, uses_anonymous_args = 0
 2091              	.LVL236:
 2092 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2093              	.LCFI45:
 2094              		.cfi_def_cfa_offset 24
 2095              		.cfi_offset 3, -24
 2096              		.cfi_offset 4, -20
 2097              		.cfi_offset 5, -16
 2098              		.cfi_offset 6, -12
 2099              		.cfi_offset 7, -8
 2100              		.cfi_offset 14, -4
 2101 0002 0646     		mov	r6, r0
 710:Dsp/letter_shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_KEY_LIST]);
 2102              		.loc 1 710 0
 2103 0004 876D     		ldr	r7, [r0, #88]
 2104              	.LVL237:
 711:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 2105              		.loc 1 711 0
 2106 0006 0E49     		ldr	r1, .L204
 2107 0008 FFF7FEFF 		bl	shellWriteString
 2108              	.LVL238:
 2109              	.LBB13:
 712:Dsp/letter_shell/shell.c ****     {
 2110              		.loc 1 712 0
 2111 000c 0024     		movs	r4, #0
 2112 000e 11E0     		b	.L200
 2113              	.LVL239:
 2114              	.L202:
 714:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_KEY
 2115              		.loc 1 714 0
 2116 0010 07EB0415 		add	r5, r7, r4, lsl #4
 715:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &base[i]) == 0)
 2117              		.loc 1 715 0
 2118 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 2119 0016 03F00F03 		and	r3, r3, #15
 714:Dsp/letter_shell/shell.c ****             && base[i].attr.attrs.type <= SHELL_TYPE_KEY
 2120              		.loc 1 714 0
 2121 001a 092B     		cmp	r3, #9
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 74


 2122 001c 08D1     		bne	.L201
 716:Dsp/letter_shell/shell.c ****         {
 2123              		.loc 1 716 0
 2124 001e 2946     		mov	r1, r5
 2125 0020 3046     		mov	r0, r6
 2126 0022 FFF7FEFF 		bl	shellCheckPermission
 2127              	.LVL240:
 2128 0026 18B9     		cbnz	r0, .L201
 718:Dsp/letter_shell/shell.c ****         }
 2129              		.loc 1 718 0
 2130 0028 2946     		mov	r1, r5
 2131 002a 3046     		mov	r0, r6
 2132 002c FFF7FEFF 		bl	shellListItem
 2133              	.LVL241:
 2134              	.L201:
 712:Dsp/letter_shell/shell.c ****     {
 2135              		.loc 1 712 0 discriminator 2
 2136 0030 0134     		adds	r4, r4, #1
 2137              	.LVL242:
 2138 0032 24B2     		sxth	r4, r4
 2139              	.LVL243:
 2140              	.L200:
 712:Dsp/letter_shell/shell.c ****     {
 2141              		.loc 1 712 0 is_stmt 0 discriminator 1
 2142 0034 B6F85C30 		ldrh	r3, [r6, #92]
 2143 0038 9C42     		cmp	r4, r3
 2144 003a E9DB     		blt	.L202
 2145              	.LBE13:
 721:Dsp/letter_shell/shell.c **** 
 2146              		.loc 1 721 0 is_stmt 1
 2147 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2148              	.LVL244:
 2149              	.L205:
 2150 003e 00BF     		.align	2
 2151              	.L204:
 2152 0040 50020000 		.word	.LC19
 2153              		.cfi_endproc
 2154              	.LFE144:
 2156              		.section	.text.shellKeys,"ax",%progbits
 2157              		.align	2
 2158              		.global	shellKeys
 2159              		.thumb
 2160              		.thumb_func
 2162              	shellKeys:
 2163              	.LFB179:
1850:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 2164              		.loc 1 1850 0
 2165              		.cfi_startproc
 2166              		@ args = 0, pretend = 0, frame = 0
 2167              		@ frame_needed = 0, uses_anonymous_args = 0
 2168 0000 08B5     		push	{r3, lr}
 2169              	.LCFI46:
 2170              		.cfi_def_cfa_offset 8
 2171              		.cfi_offset 3, -8
 2172              		.cfi_offset 14, -4
1851:Dsp/letter_shell/shell.c ****     if (shell)
 2173              		.loc 1 1851 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 75


 2174 0002 FFF7FEFF 		bl	shellGetCurrent
 2175              	.LVL245:
1852:Dsp/letter_shell/shell.c ****     {
 2176              		.loc 1 1852 0
 2177 0006 08B1     		cbz	r0, .L206
1854:Dsp/letter_shell/shell.c ****     }
 2178              		.loc 1 1854 0
 2179 0008 FFF7FEFF 		bl	shellListKey
 2180              	.LVL246:
 2181              	.L206:
 2182 000c 08BD     		pop	{r3, pc}
 2183              		.cfi_endproc
 2184              	.LFE179:
 2186 000e 00BF     		.section	.text.shellListAll,"ax",%progbits
 2187              		.align	2
 2188              		.global	shellListAll
 2189              		.thumb
 2190              		.thumb_func
 2192              	shellListAll:
 2193              	.LFB145:
 730:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_USER == 1
 2194              		.loc 1 730 0
 2195              		.cfi_startproc
 2196              		@ args = 0, pretend = 0, frame = 0
 2197              		@ frame_needed = 0, uses_anonymous_args = 0
 2198              	.LVL247:
 2199 0000 08B5     		push	{r3, lr}
 2200              	.LCFI47:
 2201              		.cfi_def_cfa_offset 8
 2202              		.cfi_offset 3, -8
 2203              		.cfi_offset 14, -4
 734:Dsp/letter_shell/shell.c **** #if SHELL_HELP_LIST_VAR == 1
 2204              		.loc 1 734 0
 2205 0002 FFF7FEFF 		bl	shellListCommand
 2206              	.LVL248:
 2207 0006 08BD     		pop	{r3, pc}
 2208              		.cfi_endproc
 2209              	.LFE145:
 2211              		.section	.text.shellDeleteCommandLine,"ax",%progbits
 2212              		.align	2
 2213              		.global	shellDeleteCommandLine
 2214              		.thumb
 2215              		.thumb_func
 2217              	shellDeleteCommandLine:
 2218              	.LFB146:
 751:Dsp/letter_shell/shell.c ****     while (length--)
 2219              		.loc 1 751 0
 2220              		.cfi_startproc
 2221              		@ args = 0, pretend = 0, frame = 0
 2222              		@ frame_needed = 0, uses_anonymous_args = 0
 2223              	.LVL249:
 2224 0000 38B5     		push	{r3, r4, r5, lr}
 2225              	.LCFI48:
 2226              		.cfi_def_cfa_offset 16
 2227              		.cfi_offset 3, -16
 2228              		.cfi_offset 4, -12
 2229              		.cfi_offset 5, -8
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 76


 2230              		.cfi_offset 14, -4
 2231 0002 0546     		mov	r5, r0
 752:Dsp/letter_shell/shell.c ****     {
 2232              		.loc 1 752 0
 2233 0004 04E0     		b	.L212
 2234              	.LVL250:
 2235              	.L213:
 754:Dsp/letter_shell/shell.c ****     }
 2236              		.loc 1 754 0
 2237 0006 0549     		ldr	r1, .L215
 2238 0008 2846     		mov	r0, r5
 2239 000a FFF7FEFF 		bl	shellWriteString
 2240              	.LVL251:
 752:Dsp/letter_shell/shell.c ****     {
 2241              		.loc 1 752 0
 2242 000e 2146     		mov	r1, r4
 2243              	.LVL252:
 2244              	.L212:
 2245 0010 4B1E     		subs	r3, r1, #1
 2246 0012 DCB2     		uxtb	r4, r3
 2247              	.LVL253:
 2248 0014 0029     		cmp	r1, #0
 2249 0016 F6D1     		bne	.L213
 756:Dsp/letter_shell/shell.c **** 
 2250              		.loc 1 756 0
 2251 0018 38BD     		pop	{r3, r4, r5, pc}
 2252              	.LVL254:
 2253              	.L216:
 2254 001a 00BF     		.align	2
 2255              	.L215:
 2256 001c 60020000 		.word	.LC20
 2257              		.cfi_endproc
 2258              	.LFE146:
 2260              		.section	.text.shellClearCommandLine,"ax",%progbits
 2261              		.align	2
 2262              		.global	shellClearCommandLine
 2263              		.thumb
 2264              		.thumb_func
 2266              	shellClearCommandLine:
 2267              	.LFB147:
 765:Dsp/letter_shell/shell.c ****     for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 2268              		.loc 1 765 0
 2269              		.cfi_startproc
 2270              		@ args = 0, pretend = 0, frame = 0
 2271              		@ frame_needed = 0, uses_anonymous_args = 0
 2272              	.LVL255:
 2273 0000 38B5     		push	{r3, r4, r5, lr}
 2274              	.LCFI49:
 2275              		.cfi_def_cfa_offset 16
 2276              		.cfi_offset 3, -16
 2277              		.cfi_offset 4, -12
 2278              		.cfi_offset 5, -8
 2279              		.cfi_offset 14, -4
 2280 0002 0546     		mov	r5, r0
 2281              	.LBB14:
 766:Dsp/letter_shell/shell.c ****     {
 2282              		.loc 1 766 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 77


 2283 0004 8389     		ldrh	r3, [r0, #12]
 2284 0006 C489     		ldrh	r4, [r0, #14]
 2285 0008 1C1B     		subs	r4, r3, r4
 2286 000a 24B2     		sxth	r4, r4
 2287              	.LVL256:
 2288 000c 05E0     		b	.L218
 2289              	.LVL257:
 2290              	.L219:
 768:Dsp/letter_shell/shell.c ****     }
 2291              		.loc 1 768 0 discriminator 3
 2292 000e 2021     		movs	r1, #32
 2293 0010 2846     		mov	r0, r5
 2294 0012 FFF7FEFF 		bl	shellWriteByte
 2295              	.LVL258:
 766:Dsp/letter_shell/shell.c ****     {
 2296              		.loc 1 766 0 discriminator 3
 2297 0016 013C     		subs	r4, r4, #1
 2298              	.LVL259:
 2299 0018 24B2     		sxth	r4, r4
 2300              	.LVL260:
 2301              	.L218:
 766:Dsp/letter_shell/shell.c ****     {
 2302              		.loc 1 766 0 is_stmt 0 discriminator 1
 2303 001a 002C     		cmp	r4, #0
 2304 001c F7DC     		bgt	.L219
 2305              	.LBE14:
 770:Dsp/letter_shell/shell.c **** }
 2306              		.loc 1 770 0 is_stmt 1
 2307 001e 297B     		ldrb	r1, [r5, #12]	@ zero_extendqisi2
 2308 0020 2846     		mov	r0, r5
 2309 0022 FFF7FEFF 		bl	shellDeleteCommandLine
 2310              	.LVL261:
 2311 0026 38BD     		pop	{r3, r4, r5, pc}
 2312              		.cfi_endproc
 2313              	.LFE147:
 2315              		.section	.text.shellHistory,"ax",%progbits
 2316              		.align	2
 2317              		.thumb
 2318              		.thumb_func
 2320              	shellHistory:
 2321              	.LFB162:
1319:Dsp/letter_shell/shell.c ****     if (dir > 0)
 2322              		.loc 1 1319 0
 2323              		.cfi_startproc
 2324              		@ args = 0, pretend = 0, frame = 0
 2325              		@ frame_needed = 0, uses_anonymous_args = 0
 2326              	.LVL262:
 2327 0000 10B5     		push	{r4, lr}
 2328              	.LCFI50:
 2329              		.cfi_def_cfa_offset 8
 2330              		.cfi_offset 4, -8
 2331              		.cfi_offset 14, -4
1320:Dsp/letter_shell/shell.c ****     {
 2332              		.loc 1 1320 0
 2333 0002 0029     		cmp	r1, #0
 2334              	.LVL263:
 2335 0004 19DD     		ble	.L222
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 78


1322:Dsp/letter_shell/shell.c ****             -((shell->history.number > shell->history.record) ?
 2336              		.loc 1 1322 0
 2337 0006 B0F95410 		ldrsh	r1, [r0, #84]
 2338 000a 4B1E     		subs	r3, r1, #1
 2339 000c A0F85430 		strh	r3, [r0, #84]	@ movhi
1323:Dsp/letter_shell/shell.c ****                 shell->history.number : shell->history.record))
 2340              		.loc 1 1323 0
 2341 0010 B0F85020 		ldrh	r2, [r0, #80]
 2342 0014 B0F85230 		ldrh	r3, [r0, #82]
 2343 0018 9A42     		cmp	r2, r3
 2344 001a 01D9     		bls	.L223
1323:Dsp/letter_shell/shell.c ****                 shell->history.number : shell->history.record))
 2345              		.loc 1 1323 0 is_stmt 0 discriminator 1
 2346 001c 5442     		negs	r4, r2
 2347 001e 00E0     		b	.L224
 2348              	.L223:
1323:Dsp/letter_shell/shell.c ****                 shell->history.number : shell->history.record))
 2349              		.loc 1 1323 0 discriminator 2
 2350 0020 5C42     		negs	r4, r3
 2351              	.L224:
1322:Dsp/letter_shell/shell.c ****             -((shell->history.number > shell->history.record) ?
 2352              		.loc 1 1322 0 is_stmt 1
 2353 0022 8C42     		cmp	r4, r1
 2354 0024 17DB     		blt	.L225
1326:Dsp/letter_shell/shell.c ****                                     ? shell->history.number : shell->history.record);
 2355              		.loc 1 1326 0
 2356 0026 9A42     		cmp	r2, r3
 2357 0028 02D9     		bls	.L226
1326:Dsp/letter_shell/shell.c ****                                     ? shell->history.number : shell->history.record);
 2358              		.loc 1 1326 0 is_stmt 0 discriminator 1
 2359 002a 5342     		negs	r3, r2
 2360 002c 1BB2     		sxth	r3, r3
 2361 002e 01E0     		b	.L227
 2362              	.L226:
1326:Dsp/letter_shell/shell.c ****                                     ? shell->history.number : shell->history.record);
 2363              		.loc 1 1326 0 discriminator 2
 2364 0030 5B42     		negs	r3, r3
 2365 0032 1BB2     		sxth	r3, r3
 2366              	.L227:
1326:Dsp/letter_shell/shell.c ****                                     ? shell->history.number : shell->history.record);
 2367              		.loc 1 1326 0 discriminator 4
 2368 0034 A0F85430 		strh	r3, [r0, #84]	@ movhi
 2369 0038 0DE0     		b	.L225
 2370              	.L222:
1330:Dsp/letter_shell/shell.c ****     {
 2371              		.loc 1 1330 0 is_stmt 1
 2372 003a 0029     		cmp	r1, #0
 2373 003c 30DA     		bge	.L221
1332:Dsp/letter_shell/shell.c ****         {
 2374              		.loc 1 1332 0
 2375 003e B0F95430 		ldrsh	r3, [r0, #84]
 2376 0042 0133     		adds	r3, r3, #1
 2377 0044 1BB2     		sxth	r3, r3
 2378 0046 A0F85430 		strh	r3, [r0, #84]	@ movhi
 2379 004a 002B     		cmp	r3, #0
 2380 004c 03DD     		ble	.L225
1334:Dsp/letter_shell/shell.c ****             return;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 79


 2381              		.loc 1 1334 0
 2382 004e 0023     		movs	r3, #0
 2383 0050 A0F85430 		strh	r3, [r0, #84]	@ movhi
1335:Dsp/letter_shell/shell.c ****         }
 2384              		.loc 1 1335 0
 2385 0054 10BD     		pop	{r4, pc}
 2386              	.L225:
 2387 0056 0446     		mov	r4, r0
1342:Dsp/letter_shell/shell.c ****     if (shell->history.offset == 0)
 2388              		.loc 1 1342 0
 2389 0058 FFF7FEFF 		bl	shellClearCommandLine
 2390              	.LVL264:
1343:Dsp/letter_shell/shell.c ****     {
 2391              		.loc 1 1343 0
 2392 005c B4F95420 		ldrsh	r2, [r4, #84]
 2393 0060 1AB9     		cbnz	r2, .L229
1345:Dsp/letter_shell/shell.c ****     }
 2394              		.loc 1 1345 0
 2395 0062 0023     		movs	r3, #0
 2396 0064 A381     		strh	r3, [r4, #12]	@ movhi
 2397 0066 E381     		strh	r3, [r4, #14]	@ movhi
 2398 0068 10BD     		pop	{r4, pc}
 2399              	.LVL265:
 2400              	.L229:
1350:Dsp/letter_shell/shell.c ****                     + shell->history.offset) % SHELL_HISTORY_MAX_NUMBER])) == 0)
 2401              		.loc 1 1350 0
 2402 006a B4F85230 		ldrh	r3, [r4, #82]
 2403 006e 0533     		adds	r3, r3, #5
1351:Dsp/letter_shell/shell.c ****         {
 2404              		.loc 1 1351 0
 2405 0070 1A44     		add	r2, r2, r3
 2406 0072 0C4B     		ldr	r3, .L231
 2407 0074 83FB0231 		smull	r3, r1, r3, r2
 2408 0078 D317     		asrs	r3, r2, #31
 2409 007a C3EB6103 		rsb	r3, r3, r1, asr #1
 2410 007e 03EB8303 		add	r3, r3, r3, lsl #2
 2411 0082 D31A     		subs	r3, r2, r3
1349:Dsp/letter_shell/shell.c ****                 shell->history.item[(shell->history.record + SHELL_HISTORY_MAX_NUMBER
 2412              		.loc 1 1349 0
 2413 0084 0E33     		adds	r3, r3, #14
 2414 0086 04EB8303 		add	r3, r4, r3, lsl #2
 2415 008a 5968     		ldr	r1, [r3, #4]
 2416 008c 2069     		ldr	r0, [r4, #16]
 2417 008e FFF7FEFF 		bl	shellStringCopy
 2418              	.LVL266:
 2419 0092 A081     		strh	r0, [r4, #12]	@ movhi
 2420 0094 20B1     		cbz	r0, .L221
1355:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2421              		.loc 1 1355 0
 2422 0096 E081     		strh	r0, [r4, #14]	@ movhi
1356:Dsp/letter_shell/shell.c ****     }
 2423              		.loc 1 1356 0
 2424 0098 2169     		ldr	r1, [r4, #16]
 2425 009a 2046     		mov	r0, r4
 2426 009c FFF7FEFF 		bl	shellWriteString
 2427              	.LVL267:
 2428              	.L221:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 80


 2429 00a0 10BD     		pop	{r4, pc}
 2430              	.L232:
 2431 00a2 00BF     		.align	2
 2432              	.L231:
 2433 00a4 67666666 		.word	1717986919
 2434              		.cfi_endproc
 2435              	.LFE162:
 2437              		.section	.text.shellUp,"ax",%progbits
 2438              		.align	2
 2439              		.global	shellUp
 2440              		.thumb
 2441              		.thumb_func
 2443              	shellUp:
 2444              	.LFB165:
1427:Dsp/letter_shell/shell.c ****     shellHistory(shell, 1);
 2445              		.loc 1 1427 0
 2446              		.cfi_startproc
 2447              		@ args = 0, pretend = 0, frame = 0
 2448              		@ frame_needed = 0, uses_anonymous_args = 0
 2449              	.LVL268:
 2450 0000 08B5     		push	{r3, lr}
 2451              	.LCFI51:
 2452              		.cfi_def_cfa_offset 8
 2453              		.cfi_offset 3, -8
 2454              		.cfi_offset 14, -4
1428:Dsp/letter_shell/shell.c **** }
 2455              		.loc 1 1428 0
 2456 0002 0121     		movs	r1, #1
 2457 0004 FFF7FEFF 		bl	shellHistory
 2458              	.LVL269:
 2459 0008 08BD     		pop	{r3, pc}
 2460              		.cfi_endproc
 2461              	.LFE165:
 2463 000a 00BF     		.section	.text.shellDown,"ax",%progbits
 2464              		.align	2
 2465              		.global	shellDown
 2466              		.thumb
 2467              		.thumb_func
 2469              	shellDown:
 2470              	.LFB166:
1439:Dsp/letter_shell/shell.c ****     shellHistory(shell, -1);
 2471              		.loc 1 1439 0
 2472              		.cfi_startproc
 2473              		@ args = 0, pretend = 0, frame = 0
 2474              		@ frame_needed = 0, uses_anonymous_args = 0
 2475              	.LVL270:
 2476 0000 08B5     		push	{r3, lr}
 2477              	.LCFI52:
 2478              		.cfi_def_cfa_offset 8
 2479              		.cfi_offset 3, -8
 2480              		.cfi_offset 14, -4
1440:Dsp/letter_shell/shell.c **** }
 2481              		.loc 1 1440 0
 2482 0002 4FF0FF31 		mov	r1, #-1
 2483 0006 FFF7FEFF 		bl	shellHistory
 2484              	.LVL271:
 2485 000a 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 81


 2486              		.cfi_endproc
 2487              	.LFE166:
 2489              		.section	.text.shellTab,"ax",%progbits
 2490              		.align	2
 2491              		.global	shellTab
 2492              		.thumb
 2493              		.thumb_func
 2495              	shellTab:
 2496              	.LFB169:
1484:Dsp/letter_shell/shell.c ****     unsigned short maxMatch = shell->parser.bufferSize;
 2497              		.loc 1 1484 0
 2498              		.cfi_startproc
 2499              		@ args = 0, pretend = 0, frame = 0
 2500              		@ frame_needed = 0, uses_anonymous_args = 0
 2501              	.LVL272:
 2502 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2503              	.LCFI53:
 2504              		.cfi_def_cfa_offset 40
 2505              		.cfi_offset 3, -40
 2506              		.cfi_offset 4, -36
 2507              		.cfi_offset 5, -32
 2508              		.cfi_offset 6, -28
 2509              		.cfi_offset 7, -24
 2510              		.cfi_offset 8, -20
 2511              		.cfi_offset 9, -16
 2512              		.cfi_offset 10, -12
 2513              		.cfi_offset 11, -8
 2514              		.cfi_offset 14, -4
 2515 0004 0546     		mov	r5, r0
1485:Dsp/letter_shell/shell.c ****     unsigned short lastMatchIndex = 0;
 2516              		.loc 1 1485 0
 2517 0006 B0F834A0 		ldrh	r10, [r0, #52]
 2518              	.LVL273:
1490:Dsp/letter_shell/shell.c ****     {
 2519              		.loc 1 1490 0
 2520 000a 8389     		ldrh	r3, [r0, #12]
 2521 000c 3BB9     		cbnz	r3, .L238
1492:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 1);
 2522              		.loc 1 1492 0
 2523 000e FFF7FEFF 		bl	shellListAll
 2524              	.LVL274:
1493:Dsp/letter_shell/shell.c ****     }
 2525              		.loc 1 1493 0
 2526 0012 0121     		movs	r1, #1
 2527 0014 2846     		mov	r0, r5
 2528 0016 FFF7FEFF 		bl	shellWriteCommandLine
 2529              	.LVL275:
 2530 001a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2531              	.LVL276:
 2532              	.L238:
1495:Dsp/letter_shell/shell.c ****     {
 2533              		.loc 1 1495 0
 2534 001e 002B     		cmp	r3, #0
 2535 0020 75D0     		beq	.L237
 2536              	.LBB15:
1497:Dsp/letter_shell/shell.c ****         ShellCommand *base = (ShellCommand *)shell->commandList.base;
 2537              		.loc 1 1497 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 82


 2538 0022 0269     		ldr	r2, [r0, #16]
 2539 0024 4FF00008 		mov	r8, #0
 2540 0028 02F80380 		strb	r8, [r2, r3]
1498:Dsp/letter_shell/shell.c ****         for (short i = 0; i < shell->commandList.count; i++)
 2541              		.loc 1 1498 0
 2542 002c 876D     		ldr	r7, [r0, #88]
 2543              	.LVL277:
 2544              	.LBB16:
1499:Dsp/letter_shell/shell.c ****         {
 2545              		.loc 1 1499 0
 2546 002e 4446     		mov	r4, r8
 2547              	.LBE16:
 2548              	.LBE15:
1487:Dsp/letter_shell/shell.c ****     unsigned short length;
 2549              		.loc 1 1487 0
 2550 0030 C146     		mov	r9, r8
 2551              	.LBB18:
 2552              	.LBB17:
1499:Dsp/letter_shell/shell.c ****         {
 2553              		.loc 1 1499 0
 2554 0032 3AE0     		b	.L240
 2555              	.LVL278:
 2556              	.L244:
1501:Dsp/letter_shell/shell.c ****                 && shellStringCompare(shell->parser.buffer,
 2557              		.loc 1 1501 0
 2558 0034 07EB0416 		add	r6, r7, r4, lsl #4
 2559 0038 3146     		mov	r1, r6
 2560 003a 2846     		mov	r0, r5
 2561 003c FFF7FEFF 		bl	shellCheckPermission
 2562              	.LVL279:
 2563 0040 88BB     		cbnz	r0, .L241
1502:Dsp/letter_shell/shell.c ****                                    (char *)shellGetCommandName(&base[i]))
 2564              		.loc 1 1502 0
 2565 0042 D5F810B0 		ldr	fp, [r5, #16]
1503:Dsp/letter_shell/shell.c ****                         == shell->parser.length)
 2566              		.loc 1 1503 0
 2567 0046 3046     		mov	r0, r6
 2568 0048 FFF7FEFF 		bl	shellGetCommandName
 2569              	.LVL280:
1502:Dsp/letter_shell/shell.c ****                                    (char *)shellGetCommandName(&base[i]))
 2570              		.loc 1 1502 0
 2571 004c 0146     		mov	r1, r0
 2572 004e 5846     		mov	r0, fp
 2573 0050 FFF7FEFF 		bl	shellStringCompare
 2574              	.LVL281:
1504:Dsp/letter_shell/shell.c ****             {
 2575              		.loc 1 1504 0
 2576 0054 AB89     		ldrh	r3, [r5, #12]
1502:Dsp/letter_shell/shell.c ****                                    (char *)shellGetCommandName(&base[i]))
 2577              		.loc 1 1502 0
 2578 0056 9842     		cmp	r0, r3
 2579 0058 25D1     		bne	.L241
1506:Dsp/letter_shell/shell.c ****                 {
 2580              		.loc 1 1506 0
 2581 005a B9F1000F 		cmp	r9, #0
 2582 005e 1CD0     		beq	.L242
1508:Dsp/letter_shell/shell.c ****                     {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 83


 2583              		.loc 1 1508 0
 2584 0060 B9F1010F 		cmp	r9, #1
 2585 0064 03D1     		bne	.L243
1510:Dsp/letter_shell/shell.c ****                     }
 2586              		.loc 1 1510 0
 2587 0066 2B49     		ldr	r1, .L249
 2588 0068 2846     		mov	r0, r5
 2589 006a FFF7FEFF 		bl	shellWriteString
 2590              	.LVL282:
 2591              	.L243:
1512:Dsp/letter_shell/shell.c ****                     length = 
 2592              		.loc 1 1512 0
 2593 006e 07EB0818 		add	r8, r7, r8, lsl #4
 2594              	.LVL283:
 2595 0072 4146     		mov	r1, r8
 2596 0074 2846     		mov	r0, r5
 2597 0076 FFF7FEFF 		bl	shellListItem
 2598              	.LVL284:
1514:Dsp/letter_shell/shell.c ****                                            (char *)shellGetCommandName(&base[i]));
 2599              		.loc 1 1514 0
 2600 007a 4046     		mov	r0, r8
 2601 007c FFF7FEFF 		bl	shellGetCommandName
 2602              	.LVL285:
 2603 0080 8046     		mov	r8, r0
1515:Dsp/letter_shell/shell.c ****                     maxMatch = (maxMatch > length) ? length : maxMatch;
 2604              		.loc 1 1515 0
 2605 0082 3046     		mov	r0, r6
 2606 0084 FFF7FEFF 		bl	shellGetCommandName
 2607              	.LVL286:
1513:Dsp/letter_shell/shell.c ****                         shellStringCompare((char *)shellGetCommandName(&base[lastMatchIndex]),
 2608              		.loc 1 1513 0
 2609 0088 0146     		mov	r1, r0
 2610 008a 4046     		mov	r0, r8
 2611 008c FFF7FEFF 		bl	shellStringCompare
 2612              	.LVL287:
1516:Dsp/letter_shell/shell.c ****                 }
 2613              		.loc 1 1516 0
 2614 0090 5045     		cmp	r0, r10
 2615 0092 28BF     		it	cs
 2616 0094 5046     		movcs	r0, r10
 2617              	.LVL288:
 2618 0096 1FFA80FA 		uxth	r10, r0
 2619              	.LVL289:
 2620              	.L242:
1518:Dsp/letter_shell/shell.c ****                 matchNum++;
 2621              		.loc 1 1518 0
 2622 009a 1FFA84F8 		uxth	r8, r4
 2623              	.LVL290:
1519:Dsp/letter_shell/shell.c ****             }
 2624              		.loc 1 1519 0
 2625 009e 09F10109 		add	r9, r9, #1
 2626              	.LVL291:
 2627 00a2 1FFA89F9 		uxth	r9, r9
 2628              	.LVL292:
 2629              	.L241:
1499:Dsp/letter_shell/shell.c ****         {
 2630              		.loc 1 1499 0 discriminator 2
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 84


 2631 00a6 0134     		adds	r4, r4, #1
 2632              	.LVL293:
 2633 00a8 24B2     		sxth	r4, r4
 2634              	.LVL294:
 2635              	.L240:
1499:Dsp/letter_shell/shell.c ****         {
 2636              		.loc 1 1499 0 is_stmt 0 discriminator 1
 2637 00aa B5F85C30 		ldrh	r3, [r5, #92]
 2638 00ae 9C42     		cmp	r4, r3
 2639 00b0 C0DB     		blt	.L244
 2640              	.LBE17:
1522:Dsp/letter_shell/shell.c ****         {
 2641              		.loc 1 1522 0 is_stmt 1
 2642 00b2 B9F1000F 		cmp	r9, #0
 2643 00b6 2AD0     		beq	.L237
1526:Dsp/letter_shell/shell.c ****         {
 2644              		.loc 1 1526 0
 2645 00b8 B9F1010F 		cmp	r9, #1
 2646 00bc 02D1     		bne	.L245
1528:Dsp/letter_shell/shell.c ****         }
 2647              		.loc 1 1528 0
 2648 00be 2846     		mov	r0, r5
 2649 00c0 FFF7FEFF 		bl	shellClearCommandLine
 2650              	.LVL295:
 2651              	.L245:
1530:Dsp/letter_shell/shell.c ****         {
 2652              		.loc 1 1530 0
 2653 00c4 B9F1000F 		cmp	r9, #0
 2654 00c8 09D0     		beq	.L246
1533:Dsp/letter_shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
 2655              		.loc 1 1533 0
 2656 00ca 2C69     		ldr	r4, [r5, #16]
 2657              	.LVL296:
1534:Dsp/letter_shell/shell.c ****         }
 2658              		.loc 1 1534 0
 2659 00cc 07EB0810 		add	r0, r7, r8, lsl #4
 2660 00d0 FFF7FEFF 		bl	shellGetCommandName
 2661              	.LVL297:
1533:Dsp/letter_shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
 2662              		.loc 1 1533 0
 2663 00d4 0146     		mov	r1, r0
 2664 00d6 2046     		mov	r0, r4
 2665 00d8 FFF7FEFF 		bl	shellStringCopy
 2666              	.LVL298:
1532:Dsp/letter_shell/shell.c ****                 shellStringCopy(shell->parser.buffer,
 2667              		.loc 1 1532 0
 2668 00dc A881     		strh	r0, [r5, #12]	@ movhi
 2669              	.L246:
1536:Dsp/letter_shell/shell.c ****         {
 2670              		.loc 1 1536 0
 2671 00de B9F1010F 		cmp	r9, #1
 2672 00e2 0AD9     		bls	.L247
1538:Dsp/letter_shell/shell.c ****             shellWriteCommandLine(shell, 1);
 2673              		.loc 1 1538 0
 2674 00e4 07EB0811 		add	r1, r7, r8, lsl #4
 2675 00e8 2846     		mov	r0, r5
 2676 00ea FFF7FEFF 		bl	shellListItem
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 85


 2677              	.LVL299:
1539:Dsp/letter_shell/shell.c ****             shell->parser.length = maxMatch;
 2678              		.loc 1 1539 0
 2679 00ee 0121     		movs	r1, #1
 2680 00f0 2846     		mov	r0, r5
 2681 00f2 FFF7FEFF 		bl	shellWriteCommandLine
 2682              	.LVL300:
1540:Dsp/letter_shell/shell.c ****         }
 2683              		.loc 1 1540 0
 2684 00f6 A5F80CA0 		strh	r10, [r5, #12]	@ movhi
 2685              	.L247:
1542:Dsp/letter_shell/shell.c ****         shell->parser.cursor = shell->parser.length;
 2686              		.loc 1 1542 0
 2687 00fa 2A69     		ldr	r2, [r5, #16]
 2688 00fc AB89     		ldrh	r3, [r5, #12]
 2689 00fe 0021     		movs	r1, #0
 2690 0100 D154     		strb	r1, [r2, r3]
1543:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2691              		.loc 1 1543 0
 2692 0102 AB89     		ldrh	r3, [r5, #12]
 2693 0104 EB81     		strh	r3, [r5, #14]	@ movhi
1544:Dsp/letter_shell/shell.c ****     }
 2694              		.loc 1 1544 0
 2695 0106 2969     		ldr	r1, [r5, #16]
 2696 0108 2846     		mov	r0, r5
 2697 010a FFF7FEFF 		bl	shellWriteString
 2698              	.LVL301:
 2699              	.L237:
 2700 010e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2701              	.LVL302:
 2702              	.L250:
 2703 0112 00BF     		.align	2
 2704              	.L249:
 2705 0114 A0010000 		.word	.LC3
 2706              	.LBE18:
 2707              		.cfi_endproc
 2708              	.LFE169:
 2710              		.section	.text.shellInsertByte,"ax",%progbits
 2711              		.align	2
 2712              		.global	shellInsertByte
 2713              		.thumb
 2714              		.thumb_func
 2716              	shellInsertByte:
 2717              	.LFB148:
 781:Dsp/letter_shell/shell.c ****     /* 判断输入数据是否过长 */
 2718              		.loc 1 781 0
 2719              		.cfi_startproc
 2720              		@ args = 0, pretend = 0, frame = 0
 2721              		@ frame_needed = 0, uses_anonymous_args = 0
 2722              	.LVL303:
 2723 0000 38B5     		push	{r3, r4, r5, lr}
 2724              	.LCFI54:
 2725              		.cfi_def_cfa_offset 16
 2726              		.cfi_offset 3, -16
 2727              		.cfi_offset 4, -12
 2728              		.cfi_offset 5, -8
 2729              		.cfi_offset 14, -4
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 86


 2730 0002 0446     		mov	r4, r0
 783:Dsp/letter_shell/shell.c ****     {
 2731              		.loc 1 783 0
 2732 0004 8389     		ldrh	r3, [r0, #12]
 2733 0006 828E     		ldrh	r2, [r0, #52]
 2734 0008 013A     		subs	r2, r2, #1
 2735 000a 9342     		cmp	r3, r2
 2736 000c 0BDB     		blt	.L252
 785:Dsp/letter_shell/shell.c ****         shellWriteCommandLine(shell, 1);
 2737              		.loc 1 785 0
 2738 000e 2A49     		ldr	r1, .L262
 2739              	.LVL304:
 2740 0010 FFF7FEFF 		bl	shellWriteString
 2741              	.LVL305:
 786:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2742              		.loc 1 786 0
 2743 0014 0121     		movs	r1, #1
 2744 0016 2046     		mov	r0, r4
 2745 0018 FFF7FEFF 		bl	shellWriteCommandLine
 2746              	.LVL306:
 787:Dsp/letter_shell/shell.c ****         return;
 2747              		.loc 1 787 0
 2748 001c 2169     		ldr	r1, [r4, #16]
 2749 001e 2046     		mov	r0, r4
 2750 0020 FFF7FEFF 		bl	shellWriteString
 2751              	.LVL307:
 788:Dsp/letter_shell/shell.c ****     }
 2752              		.loc 1 788 0
 2753 0024 38BD     		pop	{r3, r4, r5, pc}
 2754              	.LVL308:
 2755              	.L252:
 792:Dsp/letter_shell/shell.c ****     {
 2756              		.loc 1 792 0
 2757 0026 C289     		ldrh	r2, [r0, #14]
 2758 0028 9342     		cmp	r3, r2
 2759 002a 0ED1     		bne	.L254
 794:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 2760              		.loc 1 794 0
 2761 002c 0269     		ldr	r2, [r0, #16]
 2762 002e 581C     		adds	r0, r3, #1
 2763              	.LVL309:
 2764 0030 A081     		strh	r0, [r4, #12]	@ movhi
 2765 0032 D154     		strb	r1, [r2, r3]
 795:Dsp/letter_shell/shell.c ****         shell->parser.cursor++;
 2766              		.loc 1 795 0
 2767 0034 2269     		ldr	r2, [r4, #16]
 2768 0036 A389     		ldrh	r3, [r4, #12]
 2769 0038 0020     		movs	r0, #0
 2770 003a D054     		strb	r0, [r2, r3]
 796:Dsp/letter_shell/shell.c ****         shellWriteByte(shell, data);
 2771              		.loc 1 796 0
 2772 003c E389     		ldrh	r3, [r4, #14]
 2773 003e 0133     		adds	r3, r3, #1
 2774 0040 E381     		strh	r3, [r4, #14]	@ movhi
 797:Dsp/letter_shell/shell.c ****     }
 2775              		.loc 1 797 0
 2776 0042 2046     		mov	r0, r4
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 87


 2777 0044 FFF7FEFF 		bl	shellWriteByte
 2778              	.LVL310:
 2779 0048 38BD     		pop	{r3, r4, r5, pc}
 2780              	.LVL311:
 2781              	.L254:
 799:Dsp/letter_shell/shell.c ****     {
 2782              		.loc 1 799 0
 2783 004a 9342     		cmp	r3, r2
 2784 004c 33D9     		bls	.L251
 2785              	.LBB19:
 801:Dsp/letter_shell/shell.c ****         {
 2786              		.loc 1 801 0
 2787 004e 9B1A     		subs	r3, r3, r2
 2788 0050 1BB2     		sxth	r3, r3
 2789              	.LVL312:
 2790 0052 08E0     		b	.L255
 2791              	.LVL313:
 2792              	.L256:
 803:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 2793              		.loc 1 803 0 discriminator 3
 2794 0054 2069     		ldr	r0, [r4, #16]
 2795 0056 E289     		ldrh	r2, [r4, #14]
 2796 0058 1A44     		add	r2, r2, r3
 2797 005a 8518     		adds	r5, r0, r2
 804:Dsp/letter_shell/shell.c ****         }
 2798              		.loc 1 804 0 discriminator 3
 2799 005c 15F8015C 		ldrb	r5, [r5, #-1]	@ zero_extendqisi2
 803:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 2800              		.loc 1 803 0 discriminator 3
 2801 0060 8554     		strb	r5, [r0, r2]
 801:Dsp/letter_shell/shell.c ****         {
 2802              		.loc 1 801 0 discriminator 3
 2803 0062 013B     		subs	r3, r3, #1
 2804              	.LVL314:
 2805 0064 1BB2     		sxth	r3, r3
 2806              	.LVL315:
 2807              	.L255:
 801:Dsp/letter_shell/shell.c ****         {
 2808              		.loc 1 801 0 is_stmt 0 discriminator 1
 2809 0066 002B     		cmp	r3, #0
 2810 0068 F4DC     		bgt	.L256
 2811              	.LBE19:
 806:Dsp/letter_shell/shell.c ****         shell->parser.buffer[++shell->parser.length] = 0;
 2812              		.loc 1 806 0 is_stmt 1
 2813 006a 2269     		ldr	r2, [r4, #16]
 2814 006c E389     		ldrh	r3, [r4, #14]
 2815              	.LVL316:
 2816 006e 581C     		adds	r0, r3, #1
 2817 0070 E081     		strh	r0, [r4, #14]	@ movhi
 2818 0072 D154     		strb	r1, [r2, r3]
 807:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.cursor - 1; i < shell->parser.length; i++)
 2819              		.loc 1 807 0
 2820 0074 2269     		ldr	r2, [r4, #16]
 2821 0076 A389     		ldrh	r3, [r4, #12]
 2822 0078 0133     		adds	r3, r3, #1
 2823 007a 9BB2     		uxth	r3, r3
 2824 007c A381     		strh	r3, [r4, #12]	@ movhi
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 88


 2825 007e 0021     		movs	r1, #0
 2826              	.LVL317:
 2827 0080 D154     		strb	r1, [r2, r3]
 2828              	.LBB20:
 808:Dsp/letter_shell/shell.c ****         {
 2829              		.loc 1 808 0
 2830 0082 E589     		ldrh	r5, [r4, #14]
 2831 0084 013D     		subs	r5, r5, #1
 2832 0086 2DB2     		sxth	r5, r5
 2833              	.LVL318:
 2834 0088 06E0     		b	.L257
 2835              	.L258:
 810:Dsp/letter_shell/shell.c ****         }
 2836              		.loc 1 810 0 discriminator 3
 2837 008a 2369     		ldr	r3, [r4, #16]
 2838 008c 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 2839 008e 2046     		mov	r0, r4
 2840 0090 FFF7FEFF 		bl	shellWriteByte
 2841              	.LVL319:
 808:Dsp/letter_shell/shell.c ****         {
 2842              		.loc 1 808 0 discriminator 3
 2843 0094 0135     		adds	r5, r5, #1
 2844              	.LVL320:
 2845 0096 2DB2     		sxth	r5, r5
 2846              	.LVL321:
 2847              	.L257:
 808:Dsp/letter_shell/shell.c ****         {
 2848              		.loc 1 808 0 is_stmt 0 discriminator 1
 2849 0098 A389     		ldrh	r3, [r4, #12]
 2850 009a 9D42     		cmp	r5, r3
 2851 009c F5DB     		blt	.L258
 2852              	.LBE20:
 2853              	.LBB21:
 812:Dsp/letter_shell/shell.c ****         {
 2854              		.loc 1 812 0 is_stmt 1
 2855 009e E589     		ldrh	r5, [r4, #14]
 2856              	.LVL322:
 2857 00a0 5D1B     		subs	r5, r3, r5
 2858 00a2 2DB2     		sxth	r5, r5
 2859              	.LVL323:
 2860 00a4 05E0     		b	.L259
 2861              	.L260:
 814:Dsp/letter_shell/shell.c ****         }
 2862              		.loc 1 814 0 discriminator 3
 2863 00a6 0821     		movs	r1, #8
 2864 00a8 2046     		mov	r0, r4
 2865 00aa FFF7FEFF 		bl	shellWriteByte
 2866              	.LVL324:
 812:Dsp/letter_shell/shell.c ****         {
 2867              		.loc 1 812 0 discriminator 3
 2868 00ae 013D     		subs	r5, r5, #1
 2869              	.LVL325:
 2870 00b0 2DB2     		sxth	r5, r5
 2871              	.LVL326:
 2872              	.L259:
 812:Dsp/letter_shell/shell.c ****         {
 2873              		.loc 1 812 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 89


 2874 00b2 002D     		cmp	r5, #0
 2875 00b4 F7DC     		bgt	.L260
 2876              	.LVL327:
 2877              	.L251:
 2878 00b6 38BD     		pop	{r3, r4, r5, pc}
 2879              	.LVL328:
 2880              	.L263:
 2881              		.align	2
 2882              	.L262:
 2883 00b8 64020000 		.word	.LC21
 2884              	.LBE21:
 2885              		.cfi_endproc
 2886              	.LFE148:
 2888              		.section	.text.shellDeleteByte,"ax",%progbits
 2889              		.align	2
 2890              		.global	shellDeleteByte
 2891              		.thumb
 2892              		.thumb_func
 2894              	shellDeleteByte:
 2895              	.LFB149:
 827:Dsp/letter_shell/shell.c ****     char offset = (direction == -1) ? 1 : 0;
 2896              		.loc 1 827 0 is_stmt 1
 2897              		.cfi_startproc
 2898              		@ args = 0, pretend = 0, frame = 0
 2899              		@ frame_needed = 0, uses_anonymous_args = 0
 2900              	.LVL329:
 2901 0000 38B5     		push	{r3, r4, r5, lr}
 2902              	.LCFI55:
 2903              		.cfi_def_cfa_offset 16
 2904              		.cfi_offset 3, -16
 2905              		.cfi_offset 4, -12
 2906              		.cfi_offset 5, -8
 2907              		.cfi_offset 14, -4
 828:Dsp/letter_shell/shell.c **** 
 2908              		.loc 1 828 0
 2909 0002 B1F1FF3F 		cmp	r1, #-1
 2910 0006 14BF     		ite	ne
 2911 0008 0023     		movne	r3, #0
 2912 000a 0123     		moveq	r3, #1
 2913              	.LVL330:
 830:Dsp/letter_shell/shell.c ****         || (shell->parser.cursor == shell->parser.length && direction == -1))
 2914              		.loc 1 830 0
 2915 000c C289     		ldrh	r2, [r0, #14]
 2916 000e 0AB9     		cbnz	r2, .L265
 830:Dsp/letter_shell/shell.c ****         || (shell->parser.cursor == shell->parser.length && direction == -1))
 2917              		.loc 1 830 0 is_stmt 0 discriminator 1
 2918 0010 0129     		cmp	r1, #1
 2919 0012 52D0     		beq	.L264
 2920              	.L265:
 831:Dsp/letter_shell/shell.c ****     {
 2921              		.loc 1 831 0 is_stmt 1
 2922 0014 8589     		ldrh	r5, [r0, #12]
 2923 0016 AA42     		cmp	r2, r5
 2924 0018 02D1     		bne	.L267
 831:Dsp/letter_shell/shell.c ****     {
 2925              		.loc 1 831 0 is_stmt 0 discriminator 1
 2926 001a B1F1FF3F 		cmp	r1, #-1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 90


 2927 001e 4CD0     		beq	.L264
 2928              	.L267:
 2929 0020 0446     		mov	r4, r0
 835:Dsp/letter_shell/shell.c ****     {
 2930              		.loc 1 835 0 is_stmt 1
 2931 0022 AA42     		cmp	r2, r5
 2932 0024 0DD1     		bne	.L268
 835:Dsp/letter_shell/shell.c ****     {
 2933              		.loc 1 835 0 is_stmt 0 discriminator 1
 2934 0026 0129     		cmp	r1, #1
 2935 0028 0BD1     		bne	.L268
 837:Dsp/letter_shell/shell.c ****         shell->parser.length--;
 2936              		.loc 1 837 0 is_stmt 1
 2937 002a 013A     		subs	r2, r2, #1
 2938 002c C281     		strh	r2, [r0, #14]	@ movhi
 838:Dsp/letter_shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 2939              		.loc 1 838 0
 2940 002e 6B1E     		subs	r3, r5, #1
 2941              	.LVL331:
 2942 0030 9BB2     		uxth	r3, r3
 2943 0032 8381     		strh	r3, [r0, #12]	@ movhi
 839:Dsp/letter_shell/shell.c ****         shellDeleteCommandLine(shell, 1);
 2944              		.loc 1 839 0
 2945 0034 0269     		ldr	r2, [r0, #16]
 2946 0036 0021     		movs	r1, #0
 2947              	.LVL332:
 2948 0038 D154     		strb	r1, [r2, r3]
 840:Dsp/letter_shell/shell.c ****     }
 2949              		.loc 1 840 0
 2950 003a 0121     		movs	r1, #1
 2951 003c FFF7FEFF 		bl	shellDeleteCommandLine
 2952              	.LVL333:
 2953 0040 38BD     		pop	{r3, r4, r5, pc}
 2954              	.LVL334:
 2955              	.L268:
 2956              	.LBB22:
 844:Dsp/letter_shell/shell.c ****         {
 2957              		.loc 1 844 0
 2958 0042 1BB2     		sxth	r3, r3
 2959              	.LVL335:
 2960 0044 06E0     		b	.L269
 2961              	.LVL336:
 2962              	.L270:
 846:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 2963              		.loc 1 846 0 discriminator 3
 2964 0046 2069     		ldr	r0, [r4, #16]
 2965 0048 1A44     		add	r2, r2, r3
 2966 004a 551E     		subs	r5, r2, #1
 847:Dsp/letter_shell/shell.c ****         }
 2967              		.loc 1 847 0 discriminator 3
 2968 004c 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 846:Dsp/letter_shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 2969              		.loc 1 846 0 discriminator 3
 2970 004e 4255     		strb	r2, [r0, r5]
 844:Dsp/letter_shell/shell.c ****         {
 2971              		.loc 1 844 0 discriminator 3
 2972 0050 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 91


 2973              	.LVL337:
 2974 0052 1BB2     		sxth	r3, r3
 2975              	.LVL338:
 2976              	.L269:
 844:Dsp/letter_shell/shell.c ****         {
 2977              		.loc 1 844 0 is_stmt 0 discriminator 1
 2978 0054 A089     		ldrh	r0, [r4, #12]
 2979 0056 E289     		ldrh	r2, [r4, #14]
 2980 0058 851A     		subs	r5, r0, r2
 2981 005a AB42     		cmp	r3, r5
 2982 005c F3DB     		blt	.L270
 2983              	.LBE22:
 849:Dsp/letter_shell/shell.c ****         if (!offset)
 2984              		.loc 1 849 0 is_stmt 1
 2985 005e 0138     		subs	r0, r0, #1
 2986 0060 A081     		strh	r0, [r4, #12]	@ movhi
 850:Dsp/letter_shell/shell.c ****         {
 2987              		.loc 1 850 0
 2988 0062 B1F1FF3F 		cmp	r1, #-1
 2989 0066 05D0     		beq	.L271
 852:Dsp/letter_shell/shell.c ****             shellWriteByte(shell, '\b');
 2990              		.loc 1 852 0
 2991 0068 013A     		subs	r2, r2, #1
 2992 006a E281     		strh	r2, [r4, #14]	@ movhi
 853:Dsp/letter_shell/shell.c ****         }
 2993              		.loc 1 853 0
 2994 006c 0821     		movs	r1, #8
 2995              	.LVL339:
 2996 006e 2046     		mov	r0, r4
 2997 0070 FFF7FEFF 		bl	shellWriteByte
 2998              	.LVL340:
 2999              	.L271:
 855:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.cursor; i < shell->parser.length; i++)
 3000              		.loc 1 855 0
 3001 0074 2269     		ldr	r2, [r4, #16]
 3002 0076 A389     		ldrh	r3, [r4, #12]
 3003 0078 0021     		movs	r1, #0
 3004 007a D154     		strb	r1, [r2, r3]
 3005              	.LBB23:
 856:Dsp/letter_shell/shell.c ****         {
 3006              		.loc 1 856 0
 3007 007c B4F90E50 		ldrsh	r5, [r4, #14]
 3008              	.LVL341:
 3009 0080 06E0     		b	.L272
 3010              	.L273:
 858:Dsp/letter_shell/shell.c ****         }
 3011              		.loc 1 858 0 discriminator 3
 3012 0082 2369     		ldr	r3, [r4, #16]
 3013 0084 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 3014 0086 2046     		mov	r0, r4
 3015 0088 FFF7FEFF 		bl	shellWriteByte
 3016              	.LVL342:
 856:Dsp/letter_shell/shell.c ****         {
 3017              		.loc 1 856 0 discriminator 3
 3018 008c 0135     		adds	r5, r5, #1
 3019              	.LVL343:
 3020 008e 2DB2     		sxth	r5, r5
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 92


 3021              	.LVL344:
 3022              	.L272:
 856:Dsp/letter_shell/shell.c ****         {
 3023              		.loc 1 856 0 is_stmt 0 discriminator 1
 3024 0090 A389     		ldrh	r3, [r4, #12]
 3025 0092 9D42     		cmp	r5, r3
 3026 0094 F5DB     		blt	.L273
 3027              	.LBE23:
 860:Dsp/letter_shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor + 1; i > 0; i--)
 3028              		.loc 1 860 0 is_stmt 1
 3029 0096 2021     		movs	r1, #32
 3030 0098 2046     		mov	r0, r4
 3031 009a FFF7FEFF 		bl	shellWriteByte
 3032              	.LVL345:
 3033              	.LBB24:
 861:Dsp/letter_shell/shell.c ****         {
 3034              		.loc 1 861 0
 3035 009e A389     		ldrh	r3, [r4, #12]
 3036 00a0 E589     		ldrh	r5, [r4, #14]
 3037              	.LVL346:
 3038 00a2 5D1B     		subs	r5, r3, r5
 3039 00a4 0135     		adds	r5, r5, #1
 3040 00a6 2DB2     		sxth	r5, r5
 3041              	.LVL347:
 3042 00a8 05E0     		b	.L274
 3043              	.L275:
 863:Dsp/letter_shell/shell.c ****         }
 3044              		.loc 1 863 0 discriminator 3
 3045 00aa 0821     		movs	r1, #8
 3046 00ac 2046     		mov	r0, r4
 3047 00ae FFF7FEFF 		bl	shellWriteByte
 3048              	.LVL348:
 861:Dsp/letter_shell/shell.c ****         {
 3049              		.loc 1 861 0 discriminator 3
 3050 00b2 013D     		subs	r5, r5, #1
 3051              	.LVL349:
 3052 00b4 2DB2     		sxth	r5, r5
 3053              	.LVL350:
 3054              	.L274:
 861:Dsp/letter_shell/shell.c ****         {
 3055              		.loc 1 861 0 is_stmt 0 discriminator 1
 3056 00b6 002D     		cmp	r5, #0
 3057 00b8 F7DC     		bgt	.L275
 3058              	.LVL351:
 3059              	.L264:
 3060 00ba 38BD     		pop	{r3, r4, r5, pc}
 3061              	.LBE24:
 3062              		.cfi_endproc
 3063              	.LFE149:
 3065              		.section	.text.shellBackspace,"ax",%progbits
 3066              		.align	2
 3067              		.global	shellBackspace
 3068              		.thumb
 3069              		.thumb_func
 3071              	shellBackspace:
 3072              	.LFB170:
1579:Dsp/letter_shell/shell.c ****     shellDeleteByte(shell, 1);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 93


 3073              		.loc 1 1579 0 is_stmt 1
 3074              		.cfi_startproc
 3075              		@ args = 0, pretend = 0, frame = 0
 3076              		@ frame_needed = 0, uses_anonymous_args = 0
 3077              	.LVL352:
 3078 0000 08B5     		push	{r3, lr}
 3079              	.LCFI56:
 3080              		.cfi_def_cfa_offset 8
 3081              		.cfi_offset 3, -8
 3082              		.cfi_offset 14, -4
1580:Dsp/letter_shell/shell.c **** }
 3083              		.loc 1 1580 0
 3084 0002 0121     		movs	r1, #1
 3085 0004 FFF7FEFF 		bl	shellDeleteByte
 3086              	.LVL353:
 3087 0008 08BD     		pop	{r3, pc}
 3088              		.cfi_endproc
 3089              	.LFE170:
 3091 000a 00BF     		.section	.text.shellDelete,"ax",%progbits
 3092              		.align	2
 3093              		.global	shellDelete
 3094              		.thumb
 3095              		.thumb_func
 3097              	shellDelete:
 3098              	.LFB171:
1594:Dsp/letter_shell/shell.c ****     shellDeleteByte(shell, -1);
 3099              		.loc 1 1594 0
 3100              		.cfi_startproc
 3101              		@ args = 0, pretend = 0, frame = 0
 3102              		@ frame_needed = 0, uses_anonymous_args = 0
 3103              	.LVL354:
 3104 0000 08B5     		push	{r3, lr}
 3105              	.LCFI57:
 3106              		.cfi_def_cfa_offset 8
 3107              		.cfi_offset 3, -8
 3108              		.cfi_offset 14, -4
1595:Dsp/letter_shell/shell.c **** }
 3109              		.loc 1 1595 0
 3110 0002 4FF0FF31 		mov	r1, #-1
 3111 0006 FFF7FEFF 		bl	shellDeleteByte
 3112              	.LVL355:
 3113 000a 08BD     		pop	{r3, pc}
 3114              		.cfi_endproc
 3115              	.LFE171:
 3117              		.section	.text.shellSeekCommand,"ax",%progbits
 3118              		.align	2
 3119              		.global	shellSeekCommand
 3120              		.thumb
 3121              		.thumb_func
 3123              	shellSeekCommand:
 3124              	.LFB152:
 956:Dsp/letter_shell/shell.c ****     const char *name;
 3125              		.loc 1 956 0
 3126              		.cfi_startproc
 3127              		@ args = 0, pretend = 0, frame = 0
 3128              		@ frame_needed = 0, uses_anonymous_args = 0
 3129              	.LVL356:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 94


 3130 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3131              	.LCFI58:
 3132              		.cfi_def_cfa_offset 32
 3133              		.cfi_offset 4, -32
 3134              		.cfi_offset 5, -28
 3135              		.cfi_offset 6, -24
 3136              		.cfi_offset 7, -20
 3137              		.cfi_offset 8, -16
 3138              		.cfi_offset 9, -12
 3139              		.cfi_offset 10, -8
 3140              		.cfi_offset 14, -4
 3141 0004 8046     		mov	r8, r0
 3142 0006 8A46     		mov	r10, r1
 3143 0008 1746     		mov	r7, r2
 3144 000a 9946     		mov	r9, r3
 959:Dsp/letter_shell/shell.c ****         ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 3145              		.loc 1 959 0
 3146 000c B0F85C30 		ldrh	r3, [r0, #92]
 3147              	.LVL357:
 960:Dsp/letter_shell/shell.c ****     for (unsigned short i = 0; i < count; i++)
 3148              		.loc 1 960 0
 3149 0010 866D     		ldr	r6, [r0, #88]
 3150 0012 961B     		subs	r6, r2, r6
 959:Dsp/letter_shell/shell.c ****         ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 3151              		.loc 1 959 0
 3152 0014 A3EB1616 		sub	r6, r3, r6, lsr #4
 3153 0018 B6B2     		uxth	r6, r6
 3154              	.LVL358:
 3155              	.LBB25:
 961:Dsp/letter_shell/shell.c ****     {
 3156              		.loc 1 961 0
 3157 001a 0024     		movs	r4, #0
 3158 001c 1EE0     		b	.L282
 3159              	.LVL359:
 3160              	.L286:
 963:Dsp/letter_shell/shell.c ****             || shellCheckPermission(shell, &base[i]) != 0)
 3161              		.loc 1 963 0
 3162 001e 07EB0415 		add	r5, r7, r4, lsl #4
 3163 0022 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3164 0024 03F00F03 		and	r3, r3, #15
 3165 0028 092B     		cmp	r3, #9
 3166 002a 15D0     		beq	.L283
 964:Dsp/letter_shell/shell.c ****         {
 3167              		.loc 1 964 0
 3168 002c 2946     		mov	r1, r5
 3169 002e 4046     		mov	r0, r8
 3170 0030 FFF7FEFF 		bl	shellCheckPermission
 3171              	.LVL360:
 3172 0034 80B9     		cbnz	r0, .L283
 968:Dsp/letter_shell/shell.c ****         if (!compareLength)
 3173              		.loc 1 968 0
 3174 0036 2846     		mov	r0, r5
 3175 0038 FFF7FEFF 		bl	shellGetCommandName
 3176              	.LVL361:
 3177 003c 0146     		mov	r1, r0
 3178              	.LVL362:
 969:Dsp/letter_shell/shell.c ****         {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 95


 3179              		.loc 1 969 0
 3180 003e B9F1000F 		cmp	r9, #0
 3181 0042 04D1     		bne	.L284
 972:Dsp/letter_shell/shell.c ****             {
 3182              		.loc 1 972 0
 3183 0044 5046     		mov	r0, r10
 3184              	.LVL363:
 3185 0046 FFF7FEFF 		bl	strcmp
 3186              	.LVL364:
 3187 004a 28B9     		cbnz	r0, .L283
 3188 004c 09E0     		b	.L285
 3189              	.LVL365:
 3190              	.L284:
 979:Dsp/letter_shell/shell.c ****             {
 3191              		.loc 1 979 0
 3192 004e 4A46     		mov	r2, r9
 3193 0050 5046     		mov	r0, r10
 3194              	.LVL366:
 3195 0052 FFF7FEFF 		bl	strncmp
 3196              	.LVL367:
 3197 0056 20B1     		cbz	r0, .L285
 3198              	.L283:
 961:Dsp/letter_shell/shell.c ****     {
 3199              		.loc 1 961 0 discriminator 2
 3200 0058 0134     		adds	r4, r4, #1
 3201              	.LVL368:
 3202 005a A4B2     		uxth	r4, r4
 3203              	.LVL369:
 3204              	.L282:
 961:Dsp/letter_shell/shell.c ****     {
 3205              		.loc 1 961 0 is_stmt 0 discriminator 1
 3206 005c B442     		cmp	r4, r6
 3207 005e DED3     		bcc	.L286
 3208              	.LBE25:
 985:Dsp/letter_shell/shell.c **** }
 3209              		.loc 1 985 0 is_stmt 1
 3210 0060 0025     		movs	r5, #0
 3211              	.L285:
 986:Dsp/letter_shell/shell.c **** 
 3212              		.loc 1 986 0
 3213 0062 2846     		mov	r0, r5
 3214 0064 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3215              		.cfi_endproc
 3216              	.LFE152:
 3218              		.section	.text.shellInit,"ax",%progbits
 3219              		.align	2
 3220              		.global	shellInit
 3221              		.thumb
 3222              		.thumb_func
 3224              	shellInit:
 3225              	.LFB124:
 172:Dsp/letter_shell/shell.c ****     shell->parser.length = 0;
 3226              		.loc 1 172 0
 3227              		.cfi_startproc
 3228              		@ args = 0, pretend = 0, frame = 0
 3229              		@ frame_needed = 0, uses_anonymous_args = 0
 3230              	.LVL370:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 96


 3231 0000 38B5     		push	{r3, r4, r5, lr}
 3232              	.LCFI59:
 3233              		.cfi_def_cfa_offset 16
 3234              		.cfi_offset 3, -16
 3235              		.cfi_offset 4, -12
 3236              		.cfi_offset 5, -8
 3237              		.cfi_offset 14, -4
 3238 0002 0446     		mov	r4, r0
 173:Dsp/letter_shell/shell.c ****     shell->parser.cursor = 0;
 3239              		.loc 1 173 0
 3240 0004 0023     		movs	r3, #0
 3241 0006 8381     		strh	r3, [r0, #12]	@ movhi
 174:Dsp/letter_shell/shell.c ****     shell->history.offset = 0;
 3242              		.loc 1 174 0
 3243 0008 C381     		strh	r3, [r0, #14]	@ movhi
 175:Dsp/letter_shell/shell.c ****     shell->history.number = 0;
 3244              		.loc 1 175 0
 3245 000a A0F85430 		strh	r3, [r0, #84]	@ movhi
 176:Dsp/letter_shell/shell.c ****     shell->history.record = 0;
 3246              		.loc 1 176 0
 3247 000e A0F85030 		strh	r3, [r0, #80]	@ movhi
 177:Dsp/letter_shell/shell.c ****     shell->info.user = NULL;
 3248              		.loc 1 177 0
 3249 0012 A0F85230 		strh	r3, [r0, #82]	@ movhi
 178:Dsp/letter_shell/shell.c ****     shell->status.isChecked = 1;
 3250              		.loc 1 178 0
 3251 0016 0360     		str	r3, [r0]
 179:Dsp/letter_shell/shell.c **** 
 3252              		.loc 1 179 0
 3253 0018 90F86000 		ldrb	r0, [r0, #96]	@ zero_extendqisi2
 3254              	.LVL371:
 3255 001c 40F00100 		orr	r0, r0, #1
 3256 0020 84F86000 		strb	r0, [r4, #96]
 181:Dsp/letter_shell/shell.c ****     shell->parser.bufferSize = size / (SHELL_HISTORY_MAX_NUMBER + 1);
 3257              		.loc 1 181 0
 3258 0024 2161     		str	r1, [r4, #16]
 182:Dsp/letter_shell/shell.c ****     for (short i = 0; i < SHELL_HISTORY_MAX_NUMBER; i++)
 3259              		.loc 1 182 0
 3260 0026 1548     		ldr	r0, .L292
 3261 0028 A0FB0202 		umull	r0, r2, r0, r2
 3262              	.LVL372:
 3263 002c 9208     		lsrs	r2, r2, #2
 3264 002e A286     		strh	r2, [r4, #52]	@ movhi
 3265              	.LVL373:
 3266              	.LBB26:
 183:Dsp/letter_shell/shell.c ****     {
 3267              		.loc 1 183 0
 3268 0030 09E0     		b	.L289
 3269              	.LVL374:
 3270              	.L290:
 185:Dsp/letter_shell/shell.c ****     }
 3271              		.loc 1 185 0 discriminator 3
 3272 0032 03FB0225 		mla	r5, r3, r2, r2
 3273 0036 0D44     		add	r5, r5, r1
 3274 0038 03F10E00 		add	r0, r3, #14
 3275 003c 04EB8000 		add	r0, r4, r0, lsl #2
 3276 0040 4560     		str	r5, [r0, #4]
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 97


 183:Dsp/letter_shell/shell.c ****     {
 3277              		.loc 1 183 0 discriminator 3
 3278 0042 0133     		adds	r3, r3, #1
 3279              	.LVL375:
 3280 0044 1BB2     		sxth	r3, r3
 3281              	.LVL376:
 3282              	.L289:
 183:Dsp/letter_shell/shell.c ****     {
 3283              		.loc 1 183 0 is_stmt 0 discriminator 1
 3284 0046 042B     		cmp	r3, #4
 3285 0048 F3DD     		ble	.L290
 3286              	.LBE26:
 201:Dsp/letter_shell/shell.c ****         shell->commandList.count = ((unsigned int)(&_shell_command_end)
 3287              		.loc 1 201 0 is_stmt 1
 3288 004a 0D4A     		ldr	r2, .L292+4
 3289 004c A265     		str	r2, [r4, #88]
 202:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(&_shell_command_start))
 3290              		.loc 1 202 0
 3291 004e 0D4B     		ldr	r3, .L292+8
 3292              	.LVL377:
 203:Dsp/letter_shell/shell.c ****                                 / sizeof(ShellCommand);
 3293              		.loc 1 203 0
 3294 0050 9B1A     		subs	r3, r3, r2
 204:Dsp/letter_shell/shell.c ****     #else
 3295              		.loc 1 204 0
 3296 0052 1B09     		lsrs	r3, r3, #4
 202:Dsp/letter_shell/shell.c ****                                 - (unsigned int)(&_shell_command_start))
 3297              		.loc 1 202 0
 3298 0054 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 213:Dsp/letter_shell/shell.c **** 
 3299              		.loc 1 213 0
 3300 0058 2046     		mov	r0, r4
 3301 005a FFF7FEFF 		bl	shellAdd
 3302              	.LVL378:
 215:Dsp/letter_shell/shell.c ****                                          SHELL_DEFAULT_USER,
 3303              		.loc 1 215 0
 3304 005e 0023     		movs	r3, #0
 3305 0060 A26D     		ldr	r2, [r4, #88]
 3306 0062 0949     		ldr	r1, .L292+12
 3307 0064 2046     		mov	r0, r4
 3308 0066 FFF7FEFF 		bl	shellSeekCommand
 3309              	.LVL379:
 3310 006a 0146     		mov	r1, r0
 3311 006c 2046     		mov	r0, r4
 3312 006e FFF7FEFF 		bl	shellSetUser
 3313              	.LVL380:
 219:Dsp/letter_shell/shell.c **** }
 3314              		.loc 1 219 0
 3315 0072 0121     		movs	r1, #1
 3316 0074 2046     		mov	r0, r4
 3317 0076 FFF7FEFF 		bl	shellWriteCommandLine
 3318              	.LVL381:
 3319 007a 38BD     		pop	{r3, r4, r5, pc}
 3320              	.LVL382:
 3321              	.L293:
 3322              		.align	2
 3323              	.L292:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 98


 3324 007c ABAAAAAA 		.word	-1431655765
 3325 0080 00000000 		.word	_shell_command_start
 3326 0084 00000000 		.word	_shell_command_end
 3327 0088 88020000 		.word	.LC22
 3328              		.cfi_endproc
 3329              	.LFE124:
 3331              		.section	.text.shellHelp,"ax",%progbits
 3332              		.align	2
 3333              		.global	shellHelp
 3334              		.thumb
 3335              		.thumb_func
 3337              	shellHelp:
 3338              	.LFB173:
1632:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 3339              		.loc 1 1632 0
 3340              		.cfi_startproc
 3341              		@ args = 0, pretend = 0, frame = 0
 3342              		@ frame_needed = 0, uses_anonymous_args = 0
 3343              	.LVL383:
 3344 0000 70B5     		push	{r4, r5, r6, lr}
 3345              	.LCFI60:
 3346              		.cfi_def_cfa_offset 16
 3347              		.cfi_offset 4, -16
 3348              		.cfi_offset 5, -12
 3349              		.cfi_offset 6, -8
 3350              		.cfi_offset 14, -4
 3351 0002 0546     		mov	r5, r0
 3352 0004 0E46     		mov	r6, r1
1633:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell, return);
 3353              		.loc 1 1633 0
 3354 0006 FFF7FEFF 		bl	shellGetCurrent
 3355              	.LVL384:
1634:Dsp/letter_shell/shell.c ****     if (argc == 1)
 3356              		.loc 1 1634 0
 3357 000a 70B3     		cbz	r0, .L294
 3358 000c 0446     		mov	r4, r0
1635:Dsp/letter_shell/shell.c ****     {
 3359              		.loc 1 1635 0
 3360 000e 012D     		cmp	r5, #1
 3361 0010 02D1     		bne	.L296
1637:Dsp/letter_shell/shell.c ****     }
 3362              		.loc 1 1637 0
 3363 0012 FFF7FEFF 		bl	shellListAll
 3364              	.LVL385:
 3365 0016 70BD     		pop	{r4, r5, r6, pc}
 3366              	.LVL386:
 3367              	.L296:
1639:Dsp/letter_shell/shell.c ****     {
 3368              		.loc 1 1639 0
 3369 0018 012D     		cmp	r5, #1
 3370 001a 26DD     		ble	.L294
 3371              	.LBB27:
1641:Dsp/letter_shell/shell.c ****                                                  argv[1],
 3372              		.loc 1 1641 0
 3373 001c 0023     		movs	r3, #0
 3374 001e 826D     		ldr	r2, [r0, #88]
 3375 0020 7168     		ldr	r1, [r6, #4]
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 99


 3376 0022 FFF7FEFF 		bl	shellSeekCommand
 3377              	.LVL387:
1645:Dsp/letter_shell/shell.c ****         {
 3378              		.loc 1 1645 0
 3379 0026 0546     		mov	r5, r0
 3380              	.LVL388:
 3381 0028 D8B1     		cbz	r0, .L297
1647:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellGetCommandName(command));
 3382              		.loc 1 1647 0
 3383 002a 1049     		ldr	r1, .L299
 3384 002c 2046     		mov	r0, r4
 3385              	.LVL389:
 3386 002e FFF7FEFF 		bl	shellWriteString
 3387              	.LVL390:
1648:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
 3388              		.loc 1 1648 0
 3389 0032 2846     		mov	r0, r5
 3390 0034 FFF7FEFF 		bl	shellGetCommandName
 3391              	.LVL391:
 3392 0038 0146     		mov	r1, r0
 3393 003a 2046     		mov	r0, r4
 3394 003c FFF7FEFF 		bl	shellWriteString
 3395              	.LVL392:
1649:Dsp/letter_shell/shell.c ****             shellWriteString(shell, shellGetCommandDesc(command));
 3396              		.loc 1 1649 0
 3397 0040 0B4E     		ldr	r6, .L299+4
 3398              	.LVL393:
 3399 0042 3146     		mov	r1, r6
 3400 0044 2046     		mov	r0, r4
 3401 0046 FFF7FEFF 		bl	shellWriteString
 3402              	.LVL394:
1650:Dsp/letter_shell/shell.c ****             shellWriteString(shell, "\r\n");
 3403              		.loc 1 1650 0
 3404 004a 2846     		mov	r0, r5
 3405 004c FFF7FEFF 		bl	shellGetCommandDesc
 3406              	.LVL395:
 3407 0050 0146     		mov	r1, r0
 3408 0052 2046     		mov	r0, r4
 3409 0054 FFF7FEFF 		bl	shellWriteString
 3410              	.LVL396:
1651:Dsp/letter_shell/shell.c ****         }
 3411              		.loc 1 1651 0
 3412 0058 3146     		mov	r1, r6
 3413 005a 2046     		mov	r0, r4
 3414 005c FFF7FEFF 		bl	shellWriteString
 3415              	.LVL397:
 3416 0060 70BD     		pop	{r4, r5, r6, pc}
 3417              	.LVL398:
 3418              	.L297:
1655:Dsp/letter_shell/shell.c ****         }
 3419              		.loc 1 1655 0
 3420 0062 0449     		ldr	r1, .L299+8
 3421 0064 2046     		mov	r0, r4
 3422              	.LVL399:
 3423 0066 FFF7FEFF 		bl	shellWriteString
 3424              	.LVL400:
 3425              	.L294:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 100


 3426 006a 70BD     		pop	{r4, r5, r6, pc}
 3427              	.LVL401:
 3428              	.L300:
 3429              		.align	2
 3430              	.L299:
 3431 006c 8C020000 		.word	.LC23
 3432 0070 A0010000 		.word	.LC3
 3433 0074 A0020000 		.word	.LC24
 3434              	.LBE27:
 3435              		.cfi_endproc
 3436              	.LFE173:
 3438              		.section	.text.shellGetVarValue,"ax",%progbits
 3439              		.align	2
 3440              		.global	shellGetVarValue
 3441              		.thumb
 3442              		.thumb_func
 3444              	shellGetVarValue:
 3445              	.LFB153:
 997:Dsp/letter_shell/shell.c ****     int value = 0;
 3446              		.loc 1 997 0
 3447              		.cfi_startproc
 3448              		@ args = 0, pretend = 0, frame = 0
 3449              		@ frame_needed = 0, uses_anonymous_args = 0
 3450              	.LVL402:
 3451 0000 08B5     		push	{r3, lr}
 3452              	.LCFI61:
 3453              		.cfi_def_cfa_offset 8
 3454              		.cfi_offset 3, -8
 3455              		.cfi_offset 14, -4
 3456              	.LVL403:
 999:Dsp/letter_shell/shell.c ****     {
 3457              		.loc 1 999 0
 3458 0002 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3459 0004 03F00F03 		and	r3, r3, #15
 3460 0008 023B     		subs	r3, r3, #2
 3461 000a 052B     		cmp	r3, #5
 3462 000c 16D8     		bhi	.L309
 3463 000e DFE803F0 		tbb	[pc, r3]
 3464              	.L304:
 3465 0012 03       		.byte	(.L303-.L304)/2
 3466 0013 06       		.byte	(.L305-.L304)/2
 3467 0014 0A       		.byte	(.L306-.L304)/2
 3468 0015 0D       		.byte	(.L307-.L304)/2
 3469 0016 0D       		.byte	(.L307-.L304)/2
 3470 0017 0F       		.byte	(.L308-.L304)/2
 3471              		.p2align 1
 3472              	.L303:
1002:Dsp/letter_shell/shell.c ****         break;
 3473              		.loc 1 1002 0
 3474 0018 8B68     		ldr	r3, [r1, #8]
 3475 001a 1868     		ldr	r0, [r3]
 3476              	.LVL404:
1003:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_SHORT:
 3477              		.loc 1 1003 0
 3478 001c 08BD     		pop	{r3, pc}
 3479              	.LVL405:
 3480              	.L305:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 101


1005:Dsp/letter_shell/shell.c ****         break;
 3481              		.loc 1 1005 0
 3482 001e 8B68     		ldr	r3, [r1, #8]
 3483 0020 B3F90000 		ldrsh	r0, [r3]
 3484              	.LVL406:
1006:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_CHAR:
 3485              		.loc 1 1006 0
 3486 0024 08BD     		pop	{r3, pc}
 3487              	.LVL407:
 3488              	.L306:
1008:Dsp/letter_shell/shell.c ****         break;
 3489              		.loc 1 1008 0
 3490 0026 8B68     		ldr	r3, [r1, #8]
 3491 0028 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3492              	.LVL408:
1009:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
 3493              		.loc 1 1009 0
 3494 002a 08BD     		pop	{r3, pc}
 3495              	.LVL409:
 3496              	.L307:
1012:Dsp/letter_shell/shell.c ****         break;
 3497              		.loc 1 1012 0
 3498 002c 8868     		ldr	r0, [r1, #8]
 3499              	.LVL410:
1013:Dsp/letter_shell/shell.c ****     case SHELL_TYPE_VAR_NODE:
 3500              		.loc 1 1013 0
 3501 002e 08BD     		pop	{r3, pc}
 3502              	.LVL411:
 3503              	.L308:
1015:Dsp/letter_shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)
 3504              		.loc 1 1015 0
 3505 0030 8A68     		ldr	r2, [r1, #8]
 3506 0032 5368     		ldr	r3, [r2, #4]
1017:Dsp/letter_shell/shell.c ****         break;
 3507              		.loc 1 1017 0
 3508 0034 23B1     		cbz	r3, .L310
1017:Dsp/letter_shell/shell.c ****         break;
 3509              		.loc 1 1017 0 is_stmt 0 discriminator 1
 3510 0036 1068     		ldr	r0, [r2]
 3511              	.LVL412:
 3512 0038 9847     		blx	r3
 3513              	.LVL413:
 3514 003a 08BD     		pop	{r3, pc}
 3515              	.LVL414:
 3516              	.L309:
 998:Dsp/letter_shell/shell.c ****     switch (command->attr.attrs.type)
 3517              		.loc 1 998 0 is_stmt 1
 3518 003c 0020     		movs	r0, #0
 3519              	.LVL415:
 3520 003e 08BD     		pop	{r3, pc}
 3521              	.LVL416:
 3522              	.L310:
1017:Dsp/letter_shell/shell.c ****         break;
 3523              		.loc 1 1017 0
 3524 0040 0020     		movs	r0, #0
 3525              	.LVL417:
1023:Dsp/letter_shell/shell.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 102


 3526              		.loc 1 1023 0
 3527 0042 08BD     		pop	{r3, pc}
 3528              		.cfi_endproc
 3529              	.LFE153:
 3531              		.section	.text.shellShowVar,"ax",%progbits
 3532              		.align	2
 3533              		.thumb
 3534              		.thumb_func
 3536              	shellShowVar:
 3537              	.LFB155:
1089:Dsp/letter_shell/shell.c ****     char buffer[12] = "00000000000";
 3538              		.loc 1 1089 0
 3539              		.cfi_startproc
 3540              		@ args = 0, pretend = 0, frame = 16
 3541              		@ frame_needed = 0, uses_anonymous_args = 0
 3542              	.LVL418:
 3543 0000 70B5     		push	{r4, r5, r6, lr}
 3544              	.LCFI62:
 3545              		.cfi_def_cfa_offset 16
 3546              		.cfi_offset 4, -16
 3547              		.cfi_offset 5, -12
 3548              		.cfi_offset 6, -8
 3549              		.cfi_offset 14, -4
 3550 0002 84B0     		sub	sp, sp, #16
 3551              	.LCFI63:
 3552              		.cfi_def_cfa_offset 32
 3553 0004 0446     		mov	r4, r0
 3554 0006 0E46     		mov	r6, r1
1090:Dsp/letter_shell/shell.c ****     int value = shellGetVarValue(shell, command);
 3555              		.loc 1 1090 0
 3556 0008 274B     		ldr	r3, .L320
 3557 000a 93E80700 		ldmia	r3, {r0, r1, r2}
 3558              	.LVL419:
 3559 000e 04AB     		add	r3, sp, #16
 3560 0010 03E90700 		stmdb	r3, {r0, r1, r2}
1091:Dsp/letter_shell/shell.c ****     
 3561              		.loc 1 1091 0
 3562 0014 3146     		mov	r1, r6
 3563 0016 2046     		mov	r0, r4
 3564 0018 FFF7FEFF 		bl	shellGetVarValue
 3565              	.LVL420:
 3566 001c 0546     		mov	r5, r0
 3567              	.LVL421:
1093:Dsp/letter_shell/shell.c ****     shellWriteString(shell, " = ");
 3568              		.loc 1 1093 0
 3569 001e 7168     		ldr	r1, [r6, #4]
 3570 0020 2046     		mov	r0, r4
 3571              	.LVL422:
 3572 0022 FFF7FEFF 		bl	shellWriteString
 3573              	.LVL423:
1094:Dsp/letter_shell/shell.c **** 
 3574              		.loc 1 1094 0
 3575 0026 2149     		ldr	r1, .L320+4
 3576 0028 2046     		mov	r0, r4
 3577 002a FFF7FEFF 		bl	shellWriteString
 3578              	.LVL424:
1096:Dsp/letter_shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 103


 3579              		.loc 1 1096 0
 3580 002e 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 3581 0030 03F00F03 		and	r3, r3, #15
 3582 0034 052B     		cmp	r3, #5
 3583 0036 0DD1     		bne	.L318
1099:Dsp/letter_shell/shell.c ****         shellWriteString(shell, (char *)value);
 3584              		.loc 1 1099 0
 3585 0038 1D4E     		ldr	r6, .L320+8
 3586              	.LVL425:
 3587 003a 3146     		mov	r1, r6
 3588 003c 2046     		mov	r0, r4
 3589 003e FFF7FEFF 		bl	shellWriteString
 3590              	.LVL426:
1100:Dsp/letter_shell/shell.c ****         shellWriteString(shell, "\"");
 3591              		.loc 1 1100 0
 3592 0042 2946     		mov	r1, r5
 3593 0044 2046     		mov	r0, r4
 3594 0046 FFF7FEFF 		bl	shellWriteString
 3595              	.LVL427:
1101:Dsp/letter_shell/shell.c ****         break;
 3596              		.loc 1 1101 0
 3597 004a 3146     		mov	r1, r6
 3598 004c 2046     		mov	r0, r4
 3599 004e FFF7FEFF 		bl	shellWriteString
 3600              	.LVL428:
1102:Dsp/letter_shell/shell.c ****     // case SHELL_TYPE_VAR_INT:
 3601              		.loc 1 1102 0
 3602 0052 21E0     		b	.L315
 3603              	.LVL429:
 3604              	.L318:
1108:Dsp/letter_shell/shell.c ****         shellWriteString(shell, ", 0x");
 3605              		.loc 1 1108 0
 3606 0054 01A9     		add	r1, sp, #4
 3607 0056 2846     		mov	r0, r5
 3608 0058 FFF7FEFF 		bl	shellToDec
 3609              	.LVL430:
 3610 005c C0F10B01 		rsb	r1, r0, #11
 3611 0060 01AB     		add	r3, sp, #4
 3612 0062 1944     		add	r1, r1, r3
 3613 0064 2046     		mov	r0, r4
 3614 0066 FFF7FEFF 		bl	shellWriteString
 3615              	.LVL431:
1109:Dsp/letter_shell/shell.c ****         for (short i = 0; i < 11; i++)
 3616              		.loc 1 1109 0
 3617 006a 1249     		ldr	r1, .L320+12
 3618 006c 2046     		mov	r0, r4
 3619 006e FFF7FEFF 		bl	shellWriteString
 3620              	.LVL432:
 3621              	.LBB28:
1110:Dsp/letter_shell/shell.c ****         {
 3622              		.loc 1 1110 0
 3623 0072 0023     		movs	r3, #0
 3624 0074 06E0     		b	.L316
 3625              	.LVL433:
 3626              	.L317:
1112:Dsp/letter_shell/shell.c ****         }
 3627              		.loc 1 1112 0 discriminator 3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 104


 3628 0076 04AA     		add	r2, sp, #16
 3629 0078 1A44     		add	r2, r2, r3
 3630 007a 3021     		movs	r1, #48
 3631 007c 02F80C1C 		strb	r1, [r2, #-12]
1110:Dsp/letter_shell/shell.c ****         {
 3632              		.loc 1 1110 0 discriminator 3
 3633 0080 0133     		adds	r3, r3, #1
 3634              	.LVL434:
 3635 0082 1BB2     		sxth	r3, r3
 3636              	.LVL435:
 3637              	.L316:
1110:Dsp/letter_shell/shell.c ****         {
 3638              		.loc 1 1110 0 is_stmt 0 discriminator 1
 3639 0084 0A2B     		cmp	r3, #10
 3640 0086 F6DD     		ble	.L317
 3641              	.LBE28:
1114:Dsp/letter_shell/shell.c ****         shellWriteString(shell, buffer);
 3642              		.loc 1 1114 0 is_stmt 1
 3643 0088 01A9     		add	r1, sp, #4
 3644 008a 2846     		mov	r0, r5
 3645 008c FFF7FEFF 		bl	shellToHex
 3646              	.LVL436:
1115:Dsp/letter_shell/shell.c ****         break;
 3647              		.loc 1 1115 0
 3648 0090 01A9     		add	r1, sp, #4
 3649 0092 2046     		mov	r0, r4
 3650 0094 FFF7FEFF 		bl	shellWriteString
 3651              	.LVL437:
 3652              	.L315:
1119:Dsp/letter_shell/shell.c ****     return value;
 3653              		.loc 1 1119 0
 3654 0098 0749     		ldr	r1, .L320+16
 3655 009a 2046     		mov	r0, r4
 3656 009c FFF7FEFF 		bl	shellWriteString
 3657              	.LVL438:
1121:Dsp/letter_shell/shell.c **** 
 3658              		.loc 1 1121 0
 3659 00a0 2846     		mov	r0, r5
 3660 00a2 04B0     		add	sp, sp, #16
 3661              	.LCFI64:
 3662              		.cfi_def_cfa_offset 16
 3663              		@ sp needed
 3664 00a4 70BD     		pop	{r4, r5, r6, pc}
 3665              	.LVL439:
 3666              	.L321:
 3667 00a6 00BF     		.align	2
 3668              	.L320:
 3669 00a8 F0010000 		.word	.LC8
 3670 00ac B4020000 		.word	.LC25
 3671 00b0 B8020000 		.word	.LC26
 3672 00b4 E8010000 		.word	.LC10
 3673 00b8 A0010000 		.word	.LC3
 3674              		.cfi_endproc
 3675              	.LFE155:
 3677              		.section	.text.shellSetVarValue,"ax",%progbits
 3678              		.align	2
 3679              		.global	shellSetVarValue
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 105


 3680              		.thumb
 3681              		.thumb_func
 3683              	shellSetVarValue:
 3684              	.LFB154:
1035:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.readOnly)
 3685              		.loc 1 1035 0
 3686              		.cfi_startproc
 3687              		@ args = 0, pretend = 0, frame = 0
 3688              		@ frame_needed = 0, uses_anonymous_args = 0
 3689              	.LVL440:
 3690 0000 38B5     		push	{r3, r4, r5, lr}
 3691              	.LCFI65:
 3692              		.cfi_def_cfa_offset 16
 3693              		.cfi_offset 3, -16
 3694              		.cfi_offset 4, -12
 3695              		.cfi_offset 5, -8
 3696              		.cfi_offset 14, -4
 3697 0002 0546     		mov	r5, r0
 3698 0004 0C46     		mov	r4, r1
1036:Dsp/letter_shell/shell.c ****     {
 3699              		.loc 1 1036 0
 3700 0006 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3701 0008 13F0400F 		tst	r3, #64
 3702 000c 03D0     		beq	.L323
1038:Dsp/letter_shell/shell.c ****     }
 3703              		.loc 1 1038 0
 3704 000e 1849     		ldr	r1, .L334
 3705              	.LVL441:
 3706 0010 FFF7FEFF 		bl	shellWriteString
 3707              	.LVL442:
 3708 0014 26E0     		b	.L324
 3709              	.LVL443:
 3710              	.L323:
1042:Dsp/letter_shell/shell.c ****         {
 3711              		.loc 1 1042 0
 3712 0016 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3713 0018 03F00F03 		and	r3, r3, #15
 3714 001c 023B     		subs	r3, r3, #2
 3715 001e 052B     		cmp	r3, #5
 3716 0020 20D8     		bhi	.L324
 3717 0022 DFE803F0 		tbb	[pc, r3]
 3718              	.LVL444:
 3719              	.L326:
 3720 0026 03       		.byte	(.L325-.L326)/2
 3721 0027 06       		.byte	(.L327-.L326)/2
 3722 0028 09       		.byte	(.L328-.L326)/2
 3723 0029 0C       		.byte	(.L329-.L326)/2
 3724 002a 11       		.byte	(.L330-.L326)/2
 3725 002b 15       		.byte	(.L331-.L326)/2
 3726              		.p2align 1
 3727              	.L325:
1045:Dsp/letter_shell/shell.c ****             break;
 3728              		.loc 1 1045 0
 3729 002c A368     		ldr	r3, [r4, #8]
 3730 002e 1A60     		str	r2, [r3]
1046:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_SHORT:
 3731              		.loc 1 1046 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 106


 3732 0030 18E0     		b	.L324
 3733              	.L327:
1048:Dsp/letter_shell/shell.c ****             break;
 3734              		.loc 1 1048 0
 3735 0032 A368     		ldr	r3, [r4, #8]
 3736 0034 1A80     		strh	r2, [r3]	@ movhi
1049:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_CHAR:
 3737              		.loc 1 1049 0
 3738 0036 15E0     		b	.L324
 3739              	.L328:
1051:Dsp/letter_shell/shell.c ****             break;
 3740              		.loc 1 1051 0
 3741 0038 A368     		ldr	r3, [r4, #8]
 3742 003a 1A70     		strb	r2, [r3]
1052:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_STRING:
 3743              		.loc 1 1052 0
 3744 003c 12E0     		b	.L324
 3745              	.L329:
1054:Dsp/letter_shell/shell.c ****             break;
 3746              		.loc 1 1054 0
 3747 003e 1146     		mov	r1, r2
 3748 0040 A068     		ldr	r0, [r4, #8]
 3749              	.LVL445:
 3750 0042 FFF7FEFF 		bl	shellStringCopy
 3751              	.LVL446:
1055:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_POINT:
 3752              		.loc 1 1055 0
 3753 0046 0DE0     		b	.L324
 3754              	.LVL447:
 3755              	.L330:
1057:Dsp/letter_shell/shell.c ****             break;
 3756              		.loc 1 1057 0
 3757 0048 0A49     		ldr	r1, .L334+4
 3758 004a FFF7FEFF 		bl	shellWriteString
 3759              	.LVL448:
1058:Dsp/letter_shell/shell.c ****         case SHELL_TYPE_VAR_NODE:
 3760              		.loc 1 1058 0
 3761 004e 09E0     		b	.L324
 3762              	.LVL449:
 3763              	.L331:
1060:Dsp/letter_shell/shell.c ****             {
 3764              		.loc 1 1060 0
 3765 0050 A168     		ldr	r1, [r4, #8]
 3766 0052 8B68     		ldr	r3, [r1, #8]
 3767 0054 33B1     		cbz	r3, .L324
1062:Dsp/letter_shell/shell.c ****                 {
 3768              		.loc 1 1062 0
 3769 0056 0868     		ldr	r0, [r1]
 3770              	.LVL450:
 3771 0058 10B1     		cbz	r0, .L332
1064:Dsp/letter_shell/shell.c ****                         ->set(((ShellNodeVarAttr *)command->data.var.value)->var, value);
 3772              		.loc 1 1064 0
 3773 005a 1146     		mov	r1, r2
 3774 005c 9847     		blx	r3
 3775              	.LVL451:
 3776 005e 01E0     		b	.L324
 3777              	.LVL452:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 107


 3778              	.L332:
1069:Dsp/letter_shell/shell.c ****                 }
 3779              		.loc 1 1069 0
 3780 0060 1046     		mov	r0, r2
 3781 0062 9847     		blx	r3
 3782              	.LVL453:
 3783              	.L324:
1077:Dsp/letter_shell/shell.c **** }
 3784              		.loc 1 1077 0
 3785 0064 2146     		mov	r1, r4
 3786 0066 2846     		mov	r0, r5
 3787 0068 FFF7FEFF 		bl	shellShowVar
 3788              	.LVL454:
1078:Dsp/letter_shell/shell.c **** 
 3789              		.loc 1 1078 0
 3790 006c 38BD     		pop	{r3, r4, r5, pc}
 3791              	.LVL455:
 3792              	.L335:
 3793 006e 00BF     		.align	2
 3794              	.L334:
 3795 0070 BC020000 		.word	.LC27
 3796 0074 D8020000 		.word	.LC28
 3797              		.cfi_endproc
 3798              	.LFE154:
 3800              		.section	.text.shellSetVar,"ax",%progbits
 3801              		.align	2
 3802              		.global	shellSetVar
 3803              		.thumb
 3804              		.thumb_func
 3806              	shellSetVar:
 3807              	.LFB156:
1132:Dsp/letter_shell/shell.c ****     Shell *shell = shellGetCurrent();
 3808              		.loc 1 1132 0
 3809              		.cfi_startproc
 3810              		@ args = 0, pretend = 0, frame = 0
 3811              		@ frame_needed = 0, uses_anonymous_args = 0
 3812              	.LVL456:
 3813 0000 70B5     		push	{r4, r5, r6, lr}
 3814              	.LCFI66:
 3815              		.cfi_def_cfa_offset 16
 3816              		.cfi_offset 4, -16
 3817              		.cfi_offset 5, -12
 3818              		.cfi_offset 6, -8
 3819              		.cfi_offset 14, -4
 3820 0002 0546     		mov	r5, r0
 3821 0004 0E46     		mov	r6, r1
1133:Dsp/letter_shell/shell.c ****     if (shell == NULL)
 3822              		.loc 1 1133 0
 3823 0006 FFF7FEFF 		bl	shellGetCurrent
 3824              	.LVL457:
1134:Dsp/letter_shell/shell.c ****     {
 3825              		.loc 1 1134 0
 3826 000a 20B3     		cbz	r0, .L340
 3827 000c 0446     		mov	r4, r0
1138:Dsp/letter_shell/shell.c ****                                              name,
 3828              		.loc 1 1138 0
 3829 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 108


 3830 0010 826D     		ldr	r2, [r0, #88]
 3831 0012 2946     		mov	r1, r5
 3832 0014 FFF7FEFF 		bl	shellSeekCommand
 3833              	.LVL458:
1142:Dsp/letter_shell/shell.c ****     {
 3834              		.loc 1 1142 0
 3835 0018 0146     		mov	r1, r0
 3836 001a 28B9     		cbnz	r0, .L338
1144:Dsp/letter_shell/shell.c ****         return 0;
 3837              		.loc 1 1144 0
 3838 001c 0F49     		ldr	r1, .L342
 3839 001e 2046     		mov	r0, r4
 3840              	.LVL459:
 3841 0020 FFF7FEFF 		bl	shellWriteString
 3842              	.LVL460:
1145:Dsp/letter_shell/shell.c ****     }
 3843              		.loc 1 1145 0
 3844 0024 0020     		movs	r0, #0
 3845 0026 70BD     		pop	{r4, r5, r6, pc}
 3846              	.LVL461:
 3847              	.L338:
1147:Dsp/letter_shell/shell.c ****         || command->attr.attrs.type > SHELL_TYPE_VAR_NODE)
 3848              		.loc 1 1147 0
 3849 0028 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 3850 002a 03F00F03 		and	r3, r3, #15
1148:Dsp/letter_shell/shell.c ****     {
 3851              		.loc 1 1148 0
 3852 002e 0E33     		adds	r3, r3, #14
 3853 0030 03F00F03 		and	r3, r3, #15
1147:Dsp/letter_shell/shell.c ****         || command->attr.attrs.type > SHELL_TYPE_VAR_NODE)
 3854              		.loc 1 1147 0
 3855 0034 052B     		cmp	r3, #5
 3856 0036 09D9     		bls	.L339
1150:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_NOT_VAR]);
 3857              		.loc 1 1150 0
 3858 0038 2946     		mov	r1, r5
 3859 003a 2046     		mov	r0, r4
 3860              	.LVL462:
 3861 003c FFF7FEFF 		bl	shellWriteString
 3862              	.LVL463:
1151:Dsp/letter_shell/shell.c ****         return 0;
 3863              		.loc 1 1151 0
 3864 0040 0749     		ldr	r1, .L342+4
 3865 0042 2046     		mov	r0, r4
 3866 0044 FFF7FEFF 		bl	shellWriteString
 3867              	.LVL464:
1152:Dsp/letter_shell/shell.c ****     }
 3868              		.loc 1 1152 0
 3869 0048 0020     		movs	r0, #0
 3870 004a 70BD     		pop	{r4, r5, r6, pc}
 3871              	.LVL465:
 3872              	.L339:
1154:Dsp/letter_shell/shell.c **** }
 3873              		.loc 1 1154 0
 3874 004c 3246     		mov	r2, r6
 3875 004e 2046     		mov	r0, r4
 3876              	.LVL466:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 109


 3877 0050 FFF7FEFF 		bl	shellSetVarValue
 3878              	.LVL467:
 3879 0054 70BD     		pop	{r4, r5, r6, pc}
 3880              	.LVL468:
 3881              	.L340:
1136:Dsp/letter_shell/shell.c ****     }
 3882              		.loc 1 1136 0
 3883 0056 0020     		movs	r0, #0
 3884              	.LVL469:
1155:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
 3885              		.loc 1 1155 0
 3886 0058 70BD     		pop	{r4, r5, r6, pc}
 3887              	.LVL470:
 3888              	.L343:
 3889 005a 00BF     		.align	2
 3890              	.L342:
 3891 005c EC020000 		.word	.LC29
 3892 0060 FC020000 		.word	.LC30
 3893              		.cfi_endproc
 3894              	.LFE156:
 3896              		.section	.text.shellRunCommand,"ax",%progbits
 3897              		.align	2
 3898              		.global	shellRunCommand
 3899              		.thumb
 3900              		.thumb_func
 3902              	shellRunCommand:
 3903              	.LFB157:
1170:Dsp/letter_shell/shell.c ****     int returnValue = 0;
 3904              		.loc 1 1170 0
 3905              		.cfi_startproc
 3906              		@ args = 0, pretend = 0, frame = 0
 3907              		@ frame_needed = 0, uses_anonymous_args = 0
 3908              	.LVL471:
 3909 0000 70B5     		push	{r4, r5, r6, lr}
 3910              	.LCFI67:
 3911              		.cfi_def_cfa_offset 16
 3912              		.cfi_offset 4, -16
 3913              		.cfi_offset 5, -12
 3914              		.cfi_offset 6, -8
 3915              		.cfi_offset 14, -4
 3916 0002 0446     		mov	r4, r0
 3917 0004 0D46     		mov	r5, r1
 3918              	.LVL472:
1172:Dsp/letter_shell/shell.c ****     if (command->attr.attrs.type == SHELL_TYPE_CMD_MAIN)
 3919              		.loc 1 1172 0
 3920 0006 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 3921 000a 43F00203 		orr	r3, r3, #2
 3922 000e 80F86030 		strb	r3, [r0, #96]
1173:Dsp/letter_shell/shell.c ****     {
 3923              		.loc 1 1173 0
 3924 0012 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3925 0014 13F00F03 		ands	r3, r3, #15
 3926 0018 10D1     		bne	.L345
1175:Dsp/letter_shell/shell.c ****         returnValue = command->data.cmd.function(shell->parser.paramCount,
 3927              		.loc 1 1175 0
 3928 001a FFF7FEFF 		bl	shellRemoveParamQuotes
 3929              	.LVL473:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 110


1176:Dsp/letter_shell/shell.c ****                                                  shell->parser.param);
 3930              		.loc 1 1176 0
 3931 001e AB68     		ldr	r3, [r5, #8]
 3932 0020 04F11401 		add	r1, r4, #20
 3933 0024 E08E     		ldrh	r0, [r4, #54]
 3934 0026 9847     		blx	r3
 3935              	.LVL474:
 3936 0028 0646     		mov	r6, r0
 3937              	.LVL475:
1178:Dsp/letter_shell/shell.c ****         {
 3938              		.loc 1 1178 0
 3939 002a 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3940 002c 13F0200F 		tst	r3, #32
 3941 0030 28D1     		bne	.L346
1180:Dsp/letter_shell/shell.c ****         }
 3942              		.loc 1 1180 0
 3943 0032 0146     		mov	r1, r0
 3944 0034 2046     		mov	r0, r4
 3945              	.LVL476:
 3946 0036 FFF7FEFF 		bl	shellWriteReturnValue
 3947              	.LVL477:
 3948 003a 23E0     		b	.L346
 3949              	.LVL478:
 3950              	.L345:
1183:Dsp/letter_shell/shell.c ****     {
 3951              		.loc 1 1183 0
 3952 003c 012B     		cmp	r3, #1
 3953 003e 0ED1     		bne	.L347
1185:Dsp/letter_shell/shell.c ****                                   command,
 3954              		.loc 1 1185 0
 3955 0040 00F11403 		add	r3, r0, #20
 3956 0044 C28E     		ldrh	r2, [r0, #54]
 3957 0046 FFF7FEFF 		bl	shellExtRun
 3958              	.LVL479:
 3959 004a 0646     		mov	r6, r0
 3960              	.LVL480:
1189:Dsp/letter_shell/shell.c ****         {
 3961              		.loc 1 1189 0
 3962 004c 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3963 004e 13F0200F 		tst	r3, #32
 3964 0052 17D1     		bne	.L346
1191:Dsp/letter_shell/shell.c ****         }
 3965              		.loc 1 1191 0
 3966 0054 0146     		mov	r1, r0
 3967 0056 2046     		mov	r0, r4
 3968              	.LVL481:
 3969 0058 FFF7FEFF 		bl	shellWriteReturnValue
 3970              	.LVL482:
 3971 005c 12E0     		b	.L346
 3972              	.LVL483:
 3973              	.L347:
1194:Dsp/letter_shell/shell.c ****         && command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 3974              		.loc 1 1194 0
 3975 005e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 3976 0060 02F00F02 		and	r2, r2, #15
1195:Dsp/letter_shell/shell.c ****     {
 3977              		.loc 1 1195 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 111


 3978 0064 0E32     		adds	r2, r2, #14
 3979 0066 02F00F02 		and	r2, r2, #15
1194:Dsp/letter_shell/shell.c ****         && command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 3980              		.loc 1 1194 0
 3981 006a 052A     		cmp	r2, #5
 3982 006c 03D8     		bhi	.L348
1197:Dsp/letter_shell/shell.c ****     }
 3983              		.loc 1 1197 0
 3984 006e FFF7FEFF 		bl	shellShowVar
 3985              	.LVL484:
1171:Dsp/letter_shell/shell.c ****     shell->status.isActive = 1;
 3986              		.loc 1 1171 0
 3987 0072 0026     		movs	r6, #0
 3988 0074 06E0     		b	.L346
 3989              	.LVL485:
 3990              	.L348:
1199:Dsp/letter_shell/shell.c ****     {
 3991              		.loc 1 1199 0
 3992 0076 082B     		cmp	r3, #8
 3993 0078 03D1     		bne	.L349
1201:Dsp/letter_shell/shell.c ****     }
 3994              		.loc 1 1201 0
 3995 007a FFF7FEFF 		bl	shellSetUser
 3996              	.LVL486:
1171:Dsp/letter_shell/shell.c ****     shell->status.isActive = 1;
 3997              		.loc 1 1171 0
 3998 007e 0026     		movs	r6, #0
 3999 0080 00E0     		b	.L346
 4000              	.LVL487:
 4001              	.L349:
 4002 0082 0026     		movs	r6, #0
 4003              	.LVL488:
 4004              	.L346:
1203:Dsp/letter_shell/shell.c **** 
 4005              		.loc 1 1203 0
 4006 0084 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 4007 0088 6FF34103 		bfc	r3, #1, #1
 4008 008c 84F86030 		strb	r3, [r4, #96]
1206:Dsp/letter_shell/shell.c **** 
 4009              		.loc 1 1206 0
 4010 0090 3046     		mov	r0, r6
 4011 0092 70BD     		pop	{r4, r5, r6, pc}
 4012              		.cfi_endproc
 4013              	.LFE157:
 4015              		.section	.text.shellNormalInput,"ax",%progbits
 4016              		.align	2
 4017              		.global	shellNormalInput
 4018              		.thumb
 4019              		.thumb_func
 4021              	shellNormalInput:
 4022              	.LFB163:
1369:Dsp/letter_shell/shell.c ****     shell->status.tabFlag = 0;
 4023              		.loc 1 1369 0
 4024              		.cfi_startproc
 4025              		@ args = 0, pretend = 0, frame = 0
 4026              		@ frame_needed = 0, uses_anonymous_args = 0
 4027              	.LVL489:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 112


 4028 0000 08B5     		push	{r3, lr}
 4029              	.LCFI68:
 4030              		.cfi_def_cfa_offset 8
 4031              		.cfi_offset 3, -8
 4032              		.cfi_offset 14, -4
1370:Dsp/letter_shell/shell.c ****     shellInsertByte(shell, data);
 4033              		.loc 1 1370 0
 4034 0002 90F86020 		ldrb	r2, [r0, #96]	@ zero_extendqisi2
 4035 0006 6FF38202 		bfc	r2, #2, #1
 4036 000a 80F86020 		strb	r2, [r0, #96]
1371:Dsp/letter_shell/shell.c **** }
 4037              		.loc 1 1371 0
 4038 000e FFF7FEFF 		bl	shellInsertByte
 4039              	.LVL490:
 4040 0012 08BD     		pop	{r3, pc}
 4041              		.cfi_endproc
 4042              	.LFE163:
 4044              		.section	.text.shellExec,"ax",%progbits
 4045              		.align	2
 4046              		.global	shellExec
 4047              		.thumb
 4048              		.thumb_func
 4050              	shellExec:
 4051              	.LFB164:
1381:Dsp/letter_shell/shell.c ****     
 4052              		.loc 1 1381 0
 4053              		.cfi_startproc
 4054              		@ args = 0, pretend = 0, frame = 0
 4055              		@ frame_needed = 0, uses_anonymous_args = 0
 4056              	.LVL491:
1383:Dsp/letter_shell/shell.c ****     {
 4057              		.loc 1 1383 0
 4058 0000 8389     		ldrh	r3, [r0, #12]
 4059 0002 5BB3     		cbz	r3, .L358
1381:Dsp/letter_shell/shell.c ****     
 4060              		.loc 1 1381 0
 4061 0004 10B5     		push	{r4, lr}
 4062              	.LCFI69:
 4063              		.cfi_def_cfa_offset 8
 4064              		.cfi_offset 4, -8
 4065              		.cfi_offset 14, -4
 4066 0006 0446     		mov	r4, r0
1388:Dsp/letter_shell/shell.c **** 
 4067              		.loc 1 1388 0
 4068 0008 0269     		ldr	r2, [r0, #16]
 4069 000a 0021     		movs	r1, #0
 4070 000c D154     		strb	r1, [r2, r3]
1390:Dsp/letter_shell/shell.c ****     {
 4071              		.loc 1 1390 0
 4072 000e 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 4073 0012 13F0010F 		tst	r3, #1
 4074 0016 1ED0     		beq	.L355
 4075              	.LBB29:
1392:Dsp/letter_shell/shell.c ****         shellParserParam(shell);
 4076              		.loc 1 1392 0
 4077 0018 FFF7FEFF 		bl	shellHistoryAdd
 4078              	.LVL492:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 113


1393:Dsp/letter_shell/shell.c ****         shell->parser.length = shell->parser.cursor = 0;
 4079              		.loc 1 1393 0
 4080 001c 2046     		mov	r0, r4
 4081 001e FFF7FEFF 		bl	shellParserParam
 4082              	.LVL493:
1394:Dsp/letter_shell/shell.c ****         if (shell->parser.paramCount == 0)
 4083              		.loc 1 1394 0
 4084 0022 0023     		movs	r3, #0
 4085 0024 E381     		strh	r3, [r4, #14]	@ movhi
 4086 0026 A381     		strh	r3, [r4, #12]	@ movhi
1395:Dsp/letter_shell/shell.c ****         {
 4087              		.loc 1 1395 0
 4088 0028 E38E     		ldrh	r3, [r4, #54]
 4089 002a B3B1     		cbz	r3, .L353
1399:Dsp/letter_shell/shell.c **** 
 4090              		.loc 1 1399 0
 4091 002c 0C49     		ldr	r1, .L359
 4092 002e 2046     		mov	r0, r4
 4093 0030 FFF7FEFF 		bl	shellWriteString
 4094              	.LVL494:
1401:Dsp/letter_shell/shell.c ****                                                  shell->parser.param[0],
 4095              		.loc 1 1401 0
 4096 0034 0023     		movs	r3, #0
 4097 0036 A26D     		ldr	r2, [r4, #88]
 4098 0038 6169     		ldr	r1, [r4, #20]
 4099 003a 2046     		mov	r0, r4
 4100 003c FFF7FEFF 		bl	shellSeekCommand
 4101              	.LVL495:
1405:Dsp/letter_shell/shell.c ****         {
 4102              		.loc 1 1405 0
 4103 0040 0146     		mov	r1, r0
 4104 0042 18B1     		cbz	r0, .L356
1407:Dsp/letter_shell/shell.c ****         }
 4105              		.loc 1 1407 0
 4106 0044 2046     		mov	r0, r4
 4107              	.LVL496:
 4108 0046 FFF7FEFF 		bl	shellRunCommand
 4109              	.LVL497:
 4110 004a 10BD     		pop	{r4, pc}
 4111              	.LVL498:
 4112              	.L356:
1411:Dsp/letter_shell/shell.c ****         }
 4113              		.loc 1 1411 0
 4114 004c 0549     		ldr	r1, .L359+4
 4115 004e 2046     		mov	r0, r4
 4116              	.LVL499:
 4117 0050 FFF7FEFF 		bl	shellWriteString
 4118              	.LVL500:
 4119 0054 10BD     		pop	{r4, pc}
 4120              	.LVL501:
 4121              	.L355:
 4122              	.LBE29:
1416:Dsp/letter_shell/shell.c ****     }
 4123              		.loc 1 1416 0
 4124 0056 FFF7FEFF 		bl	shellCheckPassword
 4125              	.LVL502:
 4126              	.L353:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 114


 4127 005a 10BD     		pop	{r4, pc}
 4128              	.LVL503:
 4129              	.L358:
 4130              	.LCFI70:
 4131              		.cfi_def_cfa_offset 0
 4132              		.cfi_restore 4
 4133              		.cfi_restore 14
 4134 005c 7047     		bx	lr
 4135              	.L360:
 4136 005e 00BF     		.align	2
 4137              	.L359:
 4138 0060 A0010000 		.word	.LC3
 4139 0064 A0020000 		.word	.LC24
 4140              		.cfi_endproc
 4141              	.LFE164:
 4143              		.section	.text.shellEnter,"ax",%progbits
 4144              		.align	2
 4145              		.global	shellEnter
 4146              		.thumb
 4147              		.thumb_func
 4149              	shellEnter:
 4150              	.LFB172:
1607:Dsp/letter_shell/shell.c ****     shellExec(shell);
 4151              		.loc 1 1607 0
 4152              		.cfi_startproc
 4153              		@ args = 0, pretend = 0, frame = 0
 4154              		@ frame_needed = 0, uses_anonymous_args = 0
 4155              	.LVL504:
 4156 0000 10B5     		push	{r4, lr}
 4157              	.LCFI71:
 4158              		.cfi_def_cfa_offset 8
 4159              		.cfi_offset 4, -8
 4160              		.cfi_offset 14, -4
 4161 0002 0446     		mov	r4, r0
1608:Dsp/letter_shell/shell.c ****     shellWriteCommandLine(shell, 1);
 4162              		.loc 1 1608 0
 4163 0004 FFF7FEFF 		bl	shellExec
 4164              	.LVL505:
1609:Dsp/letter_shell/shell.c **** }
 4165              		.loc 1 1609 0
 4166 0008 0121     		movs	r1, #1
 4167 000a 2046     		mov	r0, r4
 4168 000c FFF7FEFF 		bl	shellWriteCommandLine
 4169              	.LVL506:
 4170 0010 10BD     		pop	{r4, pc}
 4171              		.cfi_endproc
 4172              	.LFE172:
 4174 0012 00BF     		.section	.text.shellHandler,"ax",%progbits
 4175              		.align	2
 4176              		.global	shellHandler
 4177              		.thumb
 4178              		.thumb_func
 4180              	shellHandler:
 4181              	.LFB174:
1670:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(data, return);
 4182              		.loc 1 1670 0
 4183              		.cfi_startproc
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 115


 4184              		@ args = 0, pretend = 0, frame = 0
 4185              		@ frame_needed = 0, uses_anonymous_args = 0
 4186              	.LVL507:
1671:Dsp/letter_shell/shell.c **** 
 4187              		.loc 1 1671 0
 4188 0000 0029     		cmp	r1, #0
 4189 0002 65D0     		beq	.L377
1670:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(data, return);
 4190              		.loc 1 1670 0
 4191 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4192              	.LCFI72:
 4193              		.cfi_def_cfa_offset 32
 4194              		.cfi_offset 4, -32
 4195              		.cfi_offset 5, -28
 4196              		.cfi_offset 6, -24
 4197              		.cfi_offset 7, -20
 4198              		.cfi_offset 8, -16
 4199              		.cfi_offset 9, -12
 4200              		.cfi_offset 10, -8
 4201              		.cfi_offset 14, -4
 4202 0008 0646     		mov	r6, r0
 4203 000a 8A46     		mov	r10, r1
 4204              	.LVL508:
1688:Dsp/letter_shell/shell.c ****     {
 4205              		.loc 1 1688 0
 4206 000c 836B     		ldr	r3, [r0, #56]
 4207 000e 13F47F4F 		tst	r3, #65280
 4208 0012 0AD1     		bne	.L372
1693:Dsp/letter_shell/shell.c ****     {
 4209              		.loc 1 1693 0
 4210 0014 13F47F0F 		tst	r3, #16711680
 4211 0018 0CD1     		bne	.L373
1698:Dsp/letter_shell/shell.c ****     {
 4212              		.loc 1 1698 0
 4213 001a 13F07F4F 		tst	r3, #-16777216
 4214 001e 0ED1     		bne	.L374
1687:Dsp/letter_shell/shell.c ****     if ((shell->parser.keyValue & 0x0000FF00) != 0x00000000)
 4215              		.loc 1 1687 0
 4216 0020 4FF00008 		mov	r8, #0
1686:Dsp/letter_shell/shell.c ****     int keyFilter = 0x00000000;
 4217              		.loc 1 1686 0
 4218 0024 4FF01809 		mov	r9, #24
 4219 0028 0DE0     		b	.L365
 4220              	.L372:
1691:Dsp/letter_shell/shell.c ****     }
 4221              		.loc 1 1691 0
 4222 002a 6FF0FF08 		mvn	r8, #255
1690:Dsp/letter_shell/shell.c ****         keyFilter = 0xFFFFFF00;
 4223              		.loc 1 1690 0
 4224 002e 4FF00009 		mov	r9, #0
 4225 0032 08E0     		b	.L365
 4226              	.L373:
1696:Dsp/letter_shell/shell.c ****     }
 4227              		.loc 1 1696 0
 4228 0034 DFF89C80 		ldr	r8, .L378
1695:Dsp/letter_shell/shell.c ****         keyFilter = 0xFFFF0000;
 4229              		.loc 1 1695 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 116


 4230 0038 4FF00809 		mov	r9, #8
 4231 003c 03E0     		b	.L365
 4232              	.L374:
1701:Dsp/letter_shell/shell.c ****     }
 4233              		.loc 1 1701 0
 4234 003e 4FF07F48 		mov	r8, #-16777216
1700:Dsp/letter_shell/shell.c ****         keyFilter = 0xFF000000;
 4235              		.loc 1 1700 0
 4236 0042 4FF01009 		mov	r9, #16
 4237              	.L365:
 4238              	.LVL509:
1705:Dsp/letter_shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 4239              		.loc 1 1705 0
 4240 0046 B76D     		ldr	r7, [r6, #88]
 4241              	.LVL510:
 4242              	.LBB30:
1706:Dsp/letter_shell/shell.c ****     {
 4243              		.loc 1 1706 0
 4244 0048 0024     		movs	r4, #0
 4245 004a 32E0     		b	.L366
 4246              	.LVL511:
 4247              	.L371:
1709:Dsp/letter_shell/shell.c ****             && shellCheckPermission(shell, &(base[i])) == 0)
 4248              		.loc 1 1709 0
 4249 004c 07EB0415 		add	r5, r7, r4, lsl #4
 4250 0050 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 4251 0052 03F00F03 		and	r3, r3, #15
 4252 0056 092B     		cmp	r3, #9
 4253 0058 29D1     		bne	.L367
1710:Dsp/letter_shell/shell.c ****         {
 4254              		.loc 1 1710 0
 4255 005a 2946     		mov	r1, r5
 4256 005c 3046     		mov	r0, r6
 4257 005e FFF7FEFF 		bl	shellCheckPermission
 4258              	.LVL512:
 4259 0062 20BB     		cbnz	r0, .L367
1713:Dsp/letter_shell/shell.c ****                 && (base[i].data.key.value & (0xFF << keyByteOffset))
 4260              		.loc 1 1713 0
 4261 0064 6B68     		ldr	r3, [r5, #4]
 4262 0066 08EA0301 		and	r1, r8, r3
 4263 006a B26B     		ldr	r2, [r6, #56]
 4264 006c 9142     		cmp	r1, r2
 4265 006e 1ED1     		bne	.L367
1714:Dsp/letter_shell/shell.c ****                     == (data << keyByteOffset))
 4266              		.loc 1 1714 0
 4267 0070 FF21     		movs	r1, #255
 4268 0072 01FA09F1 		lsl	r1, r1, r9
 4269 0076 0B40     		ands	r3, r3, r1
1715:Dsp/letter_shell/shell.c ****             {
 4270              		.loc 1 1715 0
 4271 0078 0AFA09F1 		lsl	r1, r10, r9
1714:Dsp/letter_shell/shell.c ****                     == (data << keyByteOffset))
 4272              		.loc 1 1714 0
 4273 007c 8B42     		cmp	r3, r1
 4274 007e 16D1     		bne	.L367
1717:Dsp/letter_shell/shell.c ****                 data = 0x00;
 4275              		.loc 1 1717 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 117


 4276 0080 0A43     		orrs	r2, r2, r1
 4277 0082 B263     		str	r2, [r6, #56]
 4278              	.LVL513:
1719:Dsp/letter_shell/shell.c ****                     || (base[i].data.key.value & (0xFF << (keyByteOffset - 8)))
 4279              		.loc 1 1719 0
 4280 0084 B9F1000F 		cmp	r9, #0
 4281 0088 07D0     		beq	.L368
1720:Dsp/letter_shell/shell.c ****                         == 0x00000000)
 4282              		.loc 1 1720 0
 4283 008a 6B68     		ldr	r3, [r5, #4]
 4284 008c A9F10800 		sub	r0, r9, #8
 4285 0090 FF22     		movs	r2, #255
 4286 0092 02FA00F0 		lsl	r0, r2, r0
 4287 0096 0342     		tst	r3, r0
 4288 0098 07D1     		bne	.L375
 4289              	.L368:
1723:Dsp/letter_shell/shell.c ****                     {
 4290              		.loc 1 1723 0
 4291 009a AB68     		ldr	r3, [r5, #8]
 4292 009c 0BB1     		cbz	r3, .L369
1725:Dsp/letter_shell/shell.c ****                     }
 4293              		.loc 1 1725 0
 4294 009e 3046     		mov	r0, r6
 4295 00a0 9847     		blx	r3
 4296              	.LVL514:
 4297              	.L369:
1727:Dsp/letter_shell/shell.c ****                     break;
 4298              		.loc 1 1727 0
 4299 00a2 0023     		movs	r3, #0
 4300 00a4 B363     		str	r3, [r6, #56]
1718:Dsp/letter_shell/shell.c ****                 if (keyByteOffset == 0 
 4301              		.loc 1 1718 0
 4302 00a6 9A46     		mov	r10, r3
1728:Dsp/letter_shell/shell.c ****                 }
 4303              		.loc 1 1728 0
 4304 00a8 07E0     		b	.L370
 4305              	.L375:
1718:Dsp/letter_shell/shell.c ****                 if (keyByteOffset == 0 
 4306              		.loc 1 1718 0
 4307 00aa 4FF0000A 		mov	r10, #0
 4308              	.LVL515:
 4309              	.L367:
1706:Dsp/letter_shell/shell.c ****     {
 4310              		.loc 1 1706 0 discriminator 2
 4311 00ae 0134     		adds	r4, r4, #1
 4312              	.LVL516:
 4313 00b0 24B2     		sxth	r4, r4
 4314              	.LVL517:
 4315              	.L366:
1706:Dsp/letter_shell/shell.c ****     {
 4316              		.loc 1 1706 0 is_stmt 0 discriminator 1
 4317 00b2 B6F85C30 		ldrh	r3, [r6, #92]
 4318 00b6 9C42     		cmp	r4, r3
 4319 00b8 C8DB     		blt	.L371
 4320              	.LVL518:
 4321              	.L370:
 4322              	.LBE30:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 118


1734:Dsp/letter_shell/shell.c ****     {
 4323              		.loc 1 1734 0 is_stmt 1
 4324 00ba BAF1000F 		cmp	r10, #0
 4325 00be 05D0     		beq	.L363
1736:Dsp/letter_shell/shell.c ****         shellNormalInput(shell, data);
 4326              		.loc 1 1736 0
 4327 00c0 0023     		movs	r3, #0
 4328 00c2 B363     		str	r3, [r6, #56]
1737:Dsp/letter_shell/shell.c ****     }
 4329              		.loc 1 1737 0
 4330 00c4 5146     		mov	r1, r10
 4331 00c6 3046     		mov	r0, r6
 4332 00c8 FFF7FEFF 		bl	shellNormalInput
 4333              	.LVL519:
 4334              	.L363:
 4335 00cc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4336              	.LVL520:
 4337              	.L377:
 4338              	.LCFI73:
 4339              		.cfi_def_cfa_offset 0
 4340              		.cfi_restore 4
 4341              		.cfi_restore 5
 4342              		.cfi_restore 6
 4343              		.cfi_restore 7
 4344              		.cfi_restore 8
 4345              		.cfi_restore 9
 4346              		.cfi_restore 10
 4347              		.cfi_restore 14
 4348 00d0 7047     		bx	lr
 4349              	.L379:
 4350 00d2 00BF     		.align	2
 4351              	.L378:
 4352 00d4 0000FFFF 		.word	-65536
 4353              		.cfi_endproc
 4354              	.LFE174:
 4356              		.section	.text.shellTask,"ax",%progbits
 4357              		.align	2
 4358              		.global	shellTask
 4359              		.thumb
 4360              		.thumb_func
 4362              	shellTask:
 4363              	.LFB175:
1781:Dsp/letter_shell/shell.c ****     Shell *shell = (Shell *)param;
 4364              		.loc 1 1781 0
 4365              		.cfi_startproc
 4366              		@ args = 0, pretend = 0, frame = 8
 4367              		@ frame_needed = 0, uses_anonymous_args = 0
 4368              	.LVL521:
 4369 0000 10B5     		push	{r4, lr}
 4370              	.LCFI74:
 4371              		.cfi_def_cfa_offset 8
 4372              		.cfi_offset 4, -8
 4373              		.cfi_offset 14, -4
 4374 0002 82B0     		sub	sp, sp, #8
 4375              	.LCFI75:
 4376              		.cfi_def_cfa_offset 16
 4377 0004 0446     		mov	r4, r0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 119


 4378              	.LVL522:
 4379              	.L381:
1788:Dsp/letter_shell/shell.c ****         {
 4380              		.loc 1 1788 0
 4381 0006 636E     		ldr	r3, [r4, #100]
 4382 0008 002B     		cmp	r3, #0
 4383 000a FCD0     		beq	.L381
1788:Dsp/letter_shell/shell.c ****         {
 4384              		.loc 1 1788 0 is_stmt 0 discriminator 1
 4385 000c 0DF10700 		add	r0, sp, #7
 4386 0010 9847     		blx	r3
 4387              	.LVL523:
 4388 0012 0028     		cmp	r0, #0
 4389 0014 F7D1     		bne	.L381
1790:Dsp/letter_shell/shell.c ****         }
 4390              		.loc 1 1790 0 is_stmt 1
 4391 0016 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 4392 001a 2046     		mov	r0, r4
 4393 001c FFF7FEFF 		bl	shellHandler
 4394              	.LVL524:
 4395 0020 F1E7     		b	.L381
 4396              		.cfi_endproc
 4397              	.LFE175:
 4399 0022 00BF     		.section	.text.shellRun,"ax",%progbits
 4400              		.align	2
 4401              		.global	shellRun
 4402              		.thumb
 4403              		.thumb_func
 4405              	shellRun:
 4406              	.LFB181:
1871:Dsp/letter_shell/shell.c ****     }
1872:Dsp/letter_shell/shell.c **** }
1873:Dsp/letter_shell/shell.c **** SHELL_EXPORT_CMD(
1874:Dsp/letter_shell/shell.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
1875:Dsp/letter_shell/shell.c **** clear, shellClear, clear console);
1876:Dsp/letter_shell/shell.c **** 
1877:Dsp/letter_shell/shell.c **** 
1878:Dsp/letter_shell/shell.c **** /**
1879:Dsp/letter_shell/shell.c ****  * @brief shell执行命令
1880:Dsp/letter_shell/shell.c ****  * 
1881:Dsp/letter_shell/shell.c ****  * @param shell shell对象
1882:Dsp/letter_shell/shell.c ****  * @param cmd 命令字符串
1883:Dsp/letter_shell/shell.c ****  * @return int 返回值
1884:Dsp/letter_shell/shell.c ****  */
1885:Dsp/letter_shell/shell.c **** int shellRun(Shell *shell, const char *cmd)
1886:Dsp/letter_shell/shell.c **** {
 4407              		.loc 1 1886 0
 4408              		.cfi_startproc
 4409              		@ args = 0, pretend = 0, frame = 0
 4410              		@ frame_needed = 0, uses_anonymous_args = 0
 4411              	.LVL525:
1887:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell && cmd, return -1);
 4412              		.loc 1 1887 0
 4413 0000 28B3     		cbz	r0, .L388
1886:Dsp/letter_shell/shell.c ****     SHELL_ASSERT(shell && cmd, return -1);
 4414              		.loc 1 1886 0 discriminator 2
 4415 0002 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 120


 4416              	.LCFI76:
 4417              		.cfi_def_cfa_offset 16
 4418              		.cfi_offset 4, -16
 4419              		.cfi_offset 5, -12
 4420              		.cfi_offset 6, -8
 4421              		.cfi_offset 14, -4
 4422 0004 0446     		mov	r4, r0
 4423              		.loc 1 1887 0 discriminator 2
 4424 0006 29B3     		cbz	r1, .L389
 4425 0008 0D46     		mov	r5, r1
1888:Dsp/letter_shell/shell.c ****     char active = shell->status.isActive;
 4426              		.loc 1 1888 0
 4427 000a 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 4428 000e C3F34006 		ubfx	r6, r3, #1, #1
 4429              	.LVL526:
1889:Dsp/letter_shell/shell.c ****     if (strlen(cmd) > shell->parser.bufferSize - 1)
 4430              		.loc 1 1889 0
 4431 0012 0846     		mov	r0, r1
 4432              	.LVL527:
 4433 0014 FFF7FEFF 		bl	strlen
 4434              	.LVL528:
 4435 0018 A38E     		ldrh	r3, [r4, #52]
 4436 001a 013B     		subs	r3, r3, #1
 4437 001c 9842     		cmp	r0, r3
 4438 001e 06D9     		bls	.L387
1890:Dsp/letter_shell/shell.c ****     {
1891:Dsp/letter_shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CMD_TOO_LONG]);
 4439              		.loc 1 1891 0
 4440 0020 0E49     		ldr	r1, .L391
 4441 0022 2046     		mov	r0, r4
 4442 0024 FFF7FEFF 		bl	shellWriteString
 4443              	.LVL529:
1892:Dsp/letter_shell/shell.c ****         return -1;
 4444              		.loc 1 1892 0
 4445 0028 4FF0FF30 		mov	r0, #-1
 4446 002c 70BD     		pop	{r4, r5, r6, pc}
 4447              	.LVL530:
 4448              	.L387:
1893:Dsp/letter_shell/shell.c ****     }
1894:Dsp/letter_shell/shell.c ****     else
1895:Dsp/letter_shell/shell.c ****     {
1896:Dsp/letter_shell/shell.c ****         shell->parser.length = shellStringCopy(shell->parser.buffer, (char *)cmd);
 4449              		.loc 1 1896 0
 4450 002e 2946     		mov	r1, r5
 4451 0030 2069     		ldr	r0, [r4, #16]
 4452 0032 FFF7FEFF 		bl	shellStringCopy
 4453              	.LVL531:
 4454 0036 A081     		strh	r0, [r4, #12]	@ movhi
1897:Dsp/letter_shell/shell.c ****         shellExec(shell);
 4455              		.loc 1 1897 0
 4456 0038 2046     		mov	r0, r4
 4457 003a FFF7FEFF 		bl	shellExec
 4458              	.LVL532:
1898:Dsp/letter_shell/shell.c ****         shell->status.isActive = active;
 4459              		.loc 1 1898 0
 4460 003e 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 4461 0042 66F34103 		bfi	r3, r6, #1, #1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 121


 4462 0046 84F86030 		strb	r3, [r4, #96]
1899:Dsp/letter_shell/shell.c ****         return 0;
 4463              		.loc 1 1899 0
 4464 004a 0020     		movs	r0, #0
 4465 004c 70BD     		pop	{r4, r5, r6, pc}
 4466              	.LVL533:
 4467              	.L388:
 4468              	.LCFI77:
 4469              		.cfi_def_cfa_offset 0
 4470              		.cfi_restore 4
 4471              		.cfi_restore 5
 4472              		.cfi_restore 6
 4473              		.cfi_restore 14
1887:Dsp/letter_shell/shell.c ****     char active = shell->status.isActive;
 4474              		.loc 1 1887 0
 4475 004e 4FF0FF30 		mov	r0, #-1
 4476              	.LVL534:
1900:Dsp/letter_shell/shell.c ****     }
1901:Dsp/letter_shell/shell.c **** }
 4477              		.loc 1 1901 0
 4478 0052 7047     		bx	lr
 4479              	.LVL535:
 4480              	.L389:
 4481              	.LCFI78:
 4482              		.cfi_def_cfa_offset 16
 4483              		.cfi_offset 4, -16
 4484              		.cfi_offset 5, -12
 4485              		.cfi_offset 6, -8
 4486              		.cfi_offset 14, -4
1887:Dsp/letter_shell/shell.c ****     char active = shell->status.isActive;
 4487              		.loc 1 1887 0
 4488 0054 4FF0FF30 		mov	r0, #-1
 4489              	.LVL536:
 4490              		.loc 1 1901 0
 4491 0058 70BD     		pop	{r4, r5, r6, pc}
 4492              	.LVL537:
 4493              	.L392:
 4494 005a 00BF     		.align	2
 4495              	.L391:
 4496 005c 64020000 		.word	.LC21
 4497              		.cfi_endproc
 4498              	.LFE181:
 4500              		.global	shellCommandclear
 4501              		.global	shellDescclear
 4502              		.global	shellCmdclear
 4503              		.global	shellCommandkeys
 4504              		.global	shellDesckeys
 4505              		.global	shellCmdkeys
 4506              		.global	shellCommandvars
 4507              		.global	shellDescvars
 4508              		.global	shellCmdvars
 4509              		.global	shellCommandcmds
 4510              		.global	shellDesccmds
 4511              		.global	shellCmdcmds
 4512              		.global	shellCommandusers
 4513              		.global	shellDescusers
 4514              		.global	shellCmdusers
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 122


 4515              		.global	shellCommandhelp
 4516              		.global	shellDeschelp
 4517              		.global	shellCmdhelp
 4518              		.global	shellKey0x0D000000
 4519              		.global	shellDesc0x0D000000
 4520              		.global	shellKey0x0A000000
 4521              		.global	shellDesc0x0A000000
 4522              		.global	shellKey0x1B5B337E
 4523              		.global	shellDesc0x1B5B337E
 4524              		.global	shellKey0x7F000000
 4525              		.global	shellDesc0x7F000000
 4526              		.global	shellKey0x08000000
 4527              		.global	shellDesc0x08000000
 4528              		.global	shellKey0x09000000
 4529              		.global	shellDesc0x09000000
 4530              		.global	shellKey0x1B5B4400
 4531              		.global	shellDesc0x1B5B4400
 4532              		.global	shellKey0x1B5B4300
 4533              		.global	shellDesc0x1B5B4300
 4534              		.global	shellKey0x1B5B4200
 4535              		.global	shellDesc0x1B5B4200
 4536              		.global	shellKey0x1B5B4100
 4537              		.global	shellDesc0x1B5B4100
 4538              		.global	shellCommandsetVar
 4539              		.global	shellDescsetVar
 4540              		.global	shellCmdsetVar
 4541              		.global	shellUserDefault
 4542              		.global	shellDesDefaultUser
 4543              		.global	shellPasswordDefaultUser
 4544              		.global	shellCmdDefaultUser
 4545              		.section	.rodata.shellPasswordDefaultUser,"a",%progbits
 4546              		.align	2
 4549              	shellPasswordDefaultUser:
 4550 0000 00       		.space	1
 4551              		.section	.rodata.shellDesc0x1B5B4100,"a",%progbits
 4552              		.align	2
 4555              	shellDesc0x1B5B4100:
 4556 0000 757000   		.ascii	"up\000"
 4557              		.section	.bss.buffer.9202,"aw",%nobits
 4558              		.align	2
 4559              		.set	.LANCHOR1,. + 0
 4562              	buffer.9202:
 4563 0000 00000000 		.space	9
 4563      00000000 
 4563      00
 4564              		.section	.rodata.shellDesccmds,"a",%progbits
 4565              		.align	2
 4568              	shellDesccmds:
 4569 0000 6C697374 		.ascii	"list all cmd\000"
 4569      20616C6C 
 4569      20636D64 
 4569      00
 4570              		.section	.rodata.shellCmdusers,"a",%progbits
 4571              		.align	2
 4574              	shellCmdusers:
 4575 0000 75736572 		.ascii	"users\000"
 4575      7300
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 123


 4576              		.section	.rodata.shellDesc0x7F000000,"a",%progbits
 4577              		.align	2
 4580              	shellDesc0x7F000000:
 4581 0000 6261636B 		.ascii	"backspace\000"
 4581      73706163 
 4581      6500
 4582              		.section	.rodata.shellDescvars,"a",%progbits
 4583              		.align	2
 4586              	shellDescvars:
 4587 0000 6C697374 		.ascii	"list all var\000"
 4587      20616C6C 
 4587      20766172 
 4587      00
 4588              		.section	.rodata.shellDesc0x1B5B4300,"a",%progbits
 4589              		.align	2
 4592              	shellDesc0x1B5B4300:
 4593 0000 72696768 		.ascii	"right\000"
 4593      7400
 4594              		.section	.rodata.shellCmdvars,"a",%progbits
 4595              		.align	2
 4598              	shellCmdvars:
 4599 0000 76617273 		.ascii	"vars\000"
 4599      00
 4600              		.section	.rodata.shellCmdclear,"a",%progbits
 4601              		.align	2
 4604              	shellCmdclear:
 4605 0000 636C6561 		.ascii	"clear\000"
 4605      7200
 4606              		.section	.rodata.shellDesckeys,"a",%progbits
 4607              		.align	2
 4610              	shellDesckeys:
 4611 0000 6C697374 		.ascii	"list all key\000"
 4611      20616C6C 
 4611      206B6579 
 4611      00
 4612              		.section	.rodata.shellCmdkeys,"a",%progbits
 4613              		.align	2
 4616              	shellCmdkeys:
 4617 0000 6B657973 		.ascii	"keys\000"
 4617      00
 4618              		.section	.rodata.shellDesc0x08000000,"a",%progbits
 4619              		.align	2
 4622              	shellDesc0x08000000:
 4623 0000 6261636B 		.ascii	"backspace\000"
 4623      73706163 
 4623      6500
 4624              		.section	.rodata.shellDescusers,"a",%progbits
 4625              		.align	2
 4628              	shellDescusers:
 4629 0000 6C697374 		.ascii	"list all user\000"
 4629      20616C6C 
 4629      20757365 
 4629      7200
 4630              		.section	.rodata.shellCmdhelp,"a",%progbits
 4631              		.align	2
 4634              	shellCmdhelp:
 4635 0000 68656C70 		.ascii	"help\000"
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 124


 4635      00
 4636              		.section	.rodata.shellDescsetVar,"a",%progbits
 4637              		.align	2
 4640              	shellDescsetVar:
 4641 0000 73657420 		.ascii	"set var\000"
 4641      76617200 
 4642              		.section	.rodata.shellDesc0x0D000000,"a",%progbits
 4643              		.align	2
 4646              	shellDesc0x0D000000:
 4647 0000 656E7465 		.ascii	"enter\000"
 4647      7200
 4648              		.section	shellCommand,"a",%progbits
 4649              		.align	2
 4652              	shellCommandclear:
 4653 0000 00210000 		.word	8448
 4654 0004 00000000 		.word	shellCmdclear
 4655 0008 00000000 		.word	shellClear
 4656 000c 00000000 		.word	shellDescclear
 4659              	shellCommandkeys:
 4660 0010 00210000 		.word	8448
 4661 0014 00000000 		.word	shellCmdkeys
 4662 0018 00000000 		.word	shellKeys
 4663 001c 00000000 		.word	shellDesckeys
 4666              	shellCommandvars:
 4667 0020 00210000 		.word	8448
 4668 0024 00000000 		.word	shellCmdvars
 4669 0028 00000000 		.word	shellVars
 4670 002c 00000000 		.word	shellDescvars
 4673              	shellCommandcmds:
 4674 0030 00210000 		.word	8448
 4675 0034 00000000 		.word	shellCmdcmds
 4676 0038 00000000 		.word	shellCmds
 4677 003c 00000000 		.word	shellDesccmds
 4680              	shellCommandusers:
 4681 0040 00210000 		.word	8448
 4682 0044 00000000 		.word	shellCmdusers
 4683 0048 00000000 		.word	shellUsers
 4684 004c 00000000 		.word	shellDescusers
 4687              	shellCommandhelp:
 4688 0050 00200000 		.word	8192
 4689 0054 00000000 		.word	shellCmdhelp
 4690 0058 00000000 		.word	shellHelp
 4691 005c 00000000 		.word	shellDeschelp
 4694              	shellKey0x0D000000:
 4695 0060 00190000 		.word	6400
 4696 0064 0000000D 		.word	218103808
 4697 0068 00000000 		.word	shellEnter
 4698 006c 00000000 		.word	shellDesc0x0D000000
 4701              	shellKey0x0A000000:
 4702 0070 00190000 		.word	6400
 4703 0074 0000000A 		.word	167772160
 4704 0078 00000000 		.word	shellEnter
 4705 007c 00000000 		.word	shellDesc0x0A000000
 4708              	shellKey0x1B5B337E:
 4709 0080 00190000 		.word	6400
 4710 0084 7E335B1B 		.word	458961790
 4711 0088 00000000 		.word	shellDelete
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 125


 4712 008c 00000000 		.word	shellDesc0x1B5B337E
 4715              	shellKey0x7F000000:
 4716 0090 00190000 		.word	6400
 4717 0094 0000007F 		.word	2130706432
 4718 0098 00000000 		.word	shellBackspace
 4719 009c 00000000 		.word	shellDesc0x7F000000
 4722              	shellKey0x08000000:
 4723 00a0 00190000 		.word	6400
 4724 00a4 00000008 		.word	134217728
 4725 00a8 00000000 		.word	shellBackspace
 4726 00ac 00000000 		.word	shellDesc0x08000000
 4729              	shellKey0x09000000:
 4730 00b0 00090000 		.word	2304
 4731 00b4 00000009 		.word	150994944
 4732 00b8 00000000 		.word	shellTab
 4733 00bc 00000000 		.word	shellDesc0x09000000
 4736              	shellKey0x1B5B4400:
 4737 00c0 00190000 		.word	6400
 4738 00c4 00445B1B 		.word	458966016
 4739 00c8 00000000 		.word	shellLeft
 4740 00cc 00000000 		.word	shellDesc0x1B5B4400
 4743              	shellKey0x1B5B4300:
 4744 00d0 00190000 		.word	6400
 4745 00d4 00435B1B 		.word	458965760
 4746 00d8 00000000 		.word	shellRight
 4747 00dc 00000000 		.word	shellDesc0x1B5B4300
 4750              	shellKey0x1B5B4200:
 4751 00e0 00090000 		.word	2304
 4752 00e4 00425B1B 		.word	458965504
 4753 00e8 00000000 		.word	shellDown
 4754 00ec 00000000 		.word	shellDesc0x1B5B4200
 4757              	shellKey0x1B5B4100:
 4758 00f0 00090000 		.word	2304
 4759 00f4 00415B1B 		.word	458965248
 4760 00f8 00000000 		.word	shellUp
 4761 00fc 00000000 		.word	shellDesc0x1B5B4100
 4764              	shellCommandsetVar:
 4765 0100 00210000 		.word	8448
 4766 0104 00000000 		.word	shellCmdsetVar
 4767 0108 00000000 		.word	shellSetVar
 4768 010c 00000000 		.word	shellDescsetVar
 4771              	shellUserDefault:
 4772 0110 00080000 		.word	2048
 4773 0114 00000000 		.word	shellCmdDefaultUser
 4774 0118 00000000 		.word	shellPasswordDefaultUser
 4775 011c 00000000 		.word	shellDesDefaultUser
 4776              		.section	.rodata.shellDescclear,"a",%progbits
 4777              		.align	2
 4780              	shellDescclear:
 4781 0000 636C6561 		.ascii	"clear console\000"
 4781      7220636F 
 4781      6E736F6C 
 4781      6500
 4782              		.section	.rodata.shellDesc0x0A000000,"a",%progbits
 4783              		.align	2
 4786              	shellDesc0x0A000000:
 4787 0000 656E7465 		.ascii	"enter\000"
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 126


 4787      7200
 4788              		.section	.rodata.shellDeschelp,"a",%progbits
 4789              		.align	2
 4792              	shellDeschelp:
 4793 0000 73686F77 		.ascii	"show command info\015\012help [cmd]\000"
 4793      20636F6D 
 4793      6D616E64 
 4793      20696E66 
 4793      6F0D0A68 
 4794              		.section	.rodata.shellDesc0x1B5B4200,"a",%progbits
 4795              		.align	2
 4798              	shellDesc0x1B5B4200:
 4799 0000 646F776E 		.ascii	"down\000"
 4799      00
 4800              		.section	.rodata.shellDesc0x09000000,"a",%progbits
 4801              		.align	2
 4804              	shellDesc0x09000000:
 4805 0000 74616200 		.ascii	"tab\000"
 4806              		.section	.rodata.shellCmdcmds,"a",%progbits
 4807              		.align	2
 4810              	shellCmdcmds:
 4811 0000 636D6473 		.ascii	"cmds\000"
 4811      00
 4812              		.section	.rodata.shellCmdsetVar,"a",%progbits
 4813              		.align	2
 4816              	shellCmdsetVar:
 4817 0000 73657456 		.ascii	"setVar\000"
 4817      617200
 4818              		.section	.rodata.shellDesc0x1B5B337E,"a",%progbits
 4819              		.align	2
 4822              	shellDesc0x1B5B337E:
 4823 0000 64656C65 		.ascii	"delete\000"
 4823      746500
 4824              		.section	.rodata.shellDesDefaultUser,"a",%progbits
 4825              		.align	2
 4828              	shellDesDefaultUser:
 4829 0000 64656661 		.ascii	"default user\000"
 4829      756C7420 
 4829      75736572 
 4829      00
 4830              		.section	.bss.shellList,"aw",%nobits
 4831              		.align	2
 4832              		.set	.LANCHOR0,. + 0
 4835              	shellList:
 4836 0000 00000000 		.space	20
 4836      00000000 
 4836      00000000 
 4836      00000000 
 4836      00000000 
 4837              		.section	.rodata.shellDesc0x1B5B4400,"a",%progbits
 4838              		.align	2
 4841              	shellDesc0x1B5B4400:
 4842 0000 6C656674 		.ascii	"left\000"
 4842      00
 4843              		.section	.rodata.shellCmdDefaultUser,"a",%progbits
 4844              		.align	2
 4847              	shellCmdDefaultUser:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 127


 4848 0000 77687900 		.ascii	"why\000"
 4849              		.section	.rodata.str1.4,"aMS",%progbits,1
 4850              		.align	2
 4851              	.LC0:
 4852 0000 1B5B324A 		.ascii	"\033[2J\033[1H\000"
 4852      1B5B3148 
 4852      00
 4853 0009 000000   		.space	3
 4854              	.LC1:
 4855 000c 0D0A2020 		.ascii	"\015\012  ____    _      _       ___      _        "
 4855      5F5F5F5F 
 4855      20202020 
 4855      5F202020 
 4855      2020205F 
 4856 0039 20202020 		.ascii	"           \015\012 |    \\  /_\\    | |     | _ \\"
 4856      20202020 
 4856      2020200D 
 4856      0A207C20 
 4856      2020205C 
 4857 0063 2020207C 		.ascii	"   | |              ___ \015\012 |    |   _   __| |"
 4857      207C2020 
 4857      20202020 
 4857      20202020 
 4857      20202020 
 4858 0090 5F5F2020 		.ascii	"__   ||_|/ __| |__   ___    //    \015\012 |----/  "
 4858      207C7C5F 
 4858      7C2F205F 
 4858      5F7C207C 
 4858      5F5F2020 
 4859 00bd 7C207C20 		.ascii	"| | |__   __|  |  \\ |__   __|  //   \\  \\__    \015"
 4859      7C5F5F20 
 4859      20205F5F 
 4859      7C20207C 
 4859      20205C20 
 4860 00ec 0A207C20 		.ascii	"\012 |    |  | |    | |_    | |\\    | |_   ||   ||"
 4860      2020207C 
 4860      20207C20 
 4860      7C202020 
 4860      207C207C 
 4861 011b 20202020 		.ascii	"      \\  \015\012 \\____/  |_|    |___/   |_| \\  "
 4861      20205C20 
 4861      200D0A20 
 4861      5C5F5F5F 
 4861      5F2F2020 
 4862 0145 207C5F5F 		.ascii	" |___/   \\___//   ___//  \015\012\015\012Build:   "
 4862      5F2F2020 
 4862      205C5F5F 
 4862      5F2F2F20 
 4862      20205F5F 
 4863 016b 20202020 		.ascii	"    Oct 12 2021 13:19:24\015\012Version:     3.0.6\015"
 4863      4F637420 
 4863      31322032 
 4863      30323120 
 4863      31333A31 
 4864 0198 0A00     		.ascii	"\012\000"
 4865 019a 0000     		.space	2
 4866              	.LC2:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 128


 4867 019c 2F00     		.ascii	"/\000"
 4868 019e 0000     		.space	2
 4869              	.LC3:
 4870 01a0 0D0A00   		.ascii	"\015\012\000"
 4871 01a3 00       		.space	1
 4872              	.LC4:
 4873 01a4 3A00     		.ascii	":\000"
 4874 01a6 0000     		.space	2
 4875              	.LC5:
 4876 01a8 242000   		.ascii	"$ \000"
 4877 01ab 00       		.space	1
 4878              	.LC6:
 4879 01ac 0D0A506C 		.ascii	"\015\012Please input password:\000"
 4879      65617365 
 4879      20696E70 
 4879      75742070 
 4879      61737377 
 4880 01c5 000000   		.space	3
 4881              	.LC7:
 4882 01c8 0D0A7061 		.ascii	"\015\012password error\015\012\000"
 4882      7373776F 
 4882      72642065 
 4882      72726F72 
 4882      0D0A00
 4883 01db 00       		.space	1
 4884              	.LC9:
 4885 01dc 52657475 		.ascii	"Return: \000"
 4885      726E3A20 
 4885      00
 4886 01e5 000000   		.space	3
 4887              	.LC10:
 4888 01e8 2C203078 		.ascii	", 0x\000"
 4888      00
 4889 01ed 000000   		.space	3
 4890              	.LC8:
 4891 01f0 30303030 		.ascii	"00000000000\000"
 4891      30303030 
 4891      30303000 
 4892              	.LC11:
 4893 01fc 434D4420 		.ascii	"CMD \015\012\000"
 4893      0D0A00
 4894 0203 00       		.space	1
 4895              	.LC12:
 4896 0204 56415200 		.ascii	"VAR\000"
 4897              	.LC13:
 4898 0208 55534552 		.ascii	"USER\000"
 4898      00
 4899 020d 000000   		.space	3
 4900              	.LC14:
 4901 0210 4B455900 		.ascii	"KEY\000"
 4902              	.LC15:
 4903 0214 4E4F4E45 		.ascii	"NONE\000"
 4903      00
 4904 0219 000000   		.space	3
 4905              	.LC16:
 4906 021c 0D0A436F 		.ascii	"\015\012Command List:\015\012\000"
 4906      6D6D616E 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 129


 4906      64204C69 
 4906      73743A0D 
 4906      0A00
 4907 022e 0000     		.space	2
 4908              	.LC17:
 4909 0230 0D0A5661 		.ascii	"\015\012Var List:\015\012\000"
 4909      72204C69 
 4909      73743A0D 
 4909      0A00
 4910 023e 0000     		.space	2
 4911              	.LC18:
 4912 0240 0D0A5573 		.ascii	"\015\012User List:\015\012\000"
 4912      6572204C 
 4912      6973743A 
 4912      0D0A00
 4913 024f 00       		.space	1
 4914              	.LC19:
 4915 0250 0D0A4B65 		.ascii	"\015\012Key List:\015\012\000"
 4915      79204C69 
 4915      73743A0D 
 4915      0A00
 4916 025e 0000     		.space	2
 4917              	.LC20:
 4918 0260 08200800 		.ascii	"\010 \010\000"
 4919              	.LC21:
 4920 0264 0D0A5761 		.ascii	"\015\012Warning: Command is too long\015\012\000"
 4920      726E696E 
 4920      673A2043 
 4920      6F6D6D61 
 4920      6E642069 
 4921 0285 000000   		.space	3
 4922              	.LC22:
 4923 0288 77687900 		.ascii	"why\000"
 4924              	.LC23:
 4925 028c 636F6D6D 		.ascii	"command help of \000"
 4925      616E6420 
 4925      68656C70 
 4925      206F6620 
 4925      00
 4926 029d 000000   		.space	3
 4927              	.LC24:
 4928 02a0 436F6D6D 		.ascii	"Command not Found\015\012\000"
 4928      616E6420 
 4928      6E6F7420 
 4928      466F756E 
 4928      640D0A00 
 4929              	.LC25:
 4930 02b4 203D2000 		.ascii	" = \000"
 4931              	.LC26:
 4932 02b8 2200     		.ascii	"\"\000"
 4933 02ba 0000     		.space	2
 4934              	.LC27:
 4935 02bc 63616E27 		.ascii	"can't set read only var\015\012\000"
 4935      74207365 
 4935      74207265 
 4935      6164206F 
 4935      6E6C7920 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 130


 4936 02d6 0000     		.space	2
 4937              	.LC28:
 4938 02d8 63616E27 		.ascii	"can't set pointer\015\012\000"
 4938      74207365 
 4938      7420706F 
 4938      696E7465 
 4938      720D0A00 
 4939              	.LC29:
 4940 02ec 56617220 		.ascii	"Var not Fount\015\012\000"
 4940      6E6F7420 
 4940      466F756E 
 4940      740D0A00 
 4941              	.LC30:
 4942 02fc 20697320 		.ascii	" is not a var\015\012\000"
 4942      6E6F7420 
 4942      61207661 
 4942      720D0A00 
 4943              		.text
 4944              	.Letext0:
 4945              		.file 2 "Dsp/letter_shell/shell.h"
 4946              		.file 3 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_types.h"
 4947              		.file 4 "d:\\gcc_arm\\5.4 2016q3\\lib\\gcc\\arm-none-eabi\\5.4.1\\include\\stdarg.h"
 4948              		.file 5 "<built-in>"
 4949              		.file 6 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\stdio.h"
 4950              		.file 7 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 4951              		.file 8 "F4_CORE/core_cm4.h"
 4952              		.file 9 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\string.h"
 4953              		.file 10 "SYS/delay/delay.h"
 4954              		.file 11 "Dsp/letter_shell/shell_ext.h"
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 131


DEFINED SYMBOLS
                            *ABS*:00000000 shell.c
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:22     .text.shellAdd:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:26     .text.shellAdd:00000000 shellAdd
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:67     .text.shellAdd:00000020 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:73     .text.shellStringCopy:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:77     .text.shellStringCopy:00000000 shellStringCopy
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:123    .text.shellStringCompare:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:127    .text.shellStringCompare:00000000 shellStringCompare
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:185    .text.shellGetCommandDesc:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:189    .text.shellGetCommandDesc:00000000 shellGetCommandDesc
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:235    .text.shellParserParam:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:239    .text.shellParserParam:00000000 shellParserParam
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:383    .text.shellHistoryAdd:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:387    .text.shellHistoryAdd:00000000 shellHistoryAdd
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:465    .text.shellWriteByte:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:469    .text.shellWriteByte:00000000 shellWriteByte
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:496    .text.shellRight:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:501    .text.shellRight:00000000 shellRight
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:531    .text.shellLeft:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:536    .text.shellLeft:00000000 shellLeft
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:573    .text.shellRemoveParamQuotes:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:577    .text.shellRemoveParamQuotes:00000000 shellRemoveParamQuotes
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:652    .text.shellGetCurrent:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:657    .text.shellGetCurrent:00000000 shellGetCurrent
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:698    .text.shellGetCurrent:00000024 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:703    .text.shellWriteString:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:708    .text.shellWriteString:00000000 shellWriteString
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:771    .text.shellSetUser:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:775    .text.shellSetUser:00000000 shellSetUser
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:850    .text.shellSetUser:00000058 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:856    .text.shellWriteCommandLine:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:860    .text.shellWriteCommandLine:00000000 shellWriteCommandLine
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:923    .text.shellWriteCommandLine:00000048 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:932    .text.shellCheckPassword:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:936    .text.shellCheckPassword:00000000 shellCheckPassword
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:984    .text.shellCheckPassword:00000038 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:990    .text.shellClear:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:995    .text.shellClear:00000000 shellClear
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1020   .text.shellClear:00000010 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1025   .text.shellPrint:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1030   .text.shellPrint:00000000 shellPrint
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1093   .text.shellScan:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1098   .text.shellScan:00000000 shellScan
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1211   .text.shellScan:0000006c $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1216   .text.shellCheckPermission:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1221   .text.shellCheckPermission:00000000 shellCheckPermission
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1276   .text.shellToHex:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1281   .text.shellToHex:00000000 shellToHex
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1347   .text.shellGetCommandName:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1351   .text.shellGetCommandName:00000000 shellGetCommandName
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1429   .text.shellGetCommandName:00000040 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1434   .text.shellToDec:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1439   .text.shellToDec:00000000 shellToDec
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1535   .text.shellToDec:00000058 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1540   .text.shellWriteReturnValue:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1544   .text.shellWriteReturnValue:00000000 shellWriteReturnValue
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 132


C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1635   .text.shellWriteReturnValue:0000006c $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1643   .text.shellListItem:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1648   .text.shellListItem:00000000 shellListItem
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1750   .text.shellListItem:00000078 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1759   .text.shellListCommand:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1764   .text.shellListCommand:00000000 shellListCommand
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1829   .text.shellListCommand:00000040 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1834   .text.shellCmds:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1839   .text.shellCmds:00000000 shellCmds
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1864   .text.shellListVar:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1869   .text.shellListVar:00000000 shellListVar
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1938   .text.shellListVar:00000044 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1943   .text.shellVars:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1948   .text.shellVars:00000000 shellVars
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1973   .text.shellListUser:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:1978   .text.shellListUser:00000000 shellListUser
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2045   .text.shellListUser:00000040 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2050   .text.shellUsers:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2055   .text.shellUsers:00000000 shellUsers
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2080   .text.shellListKey:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2085   .text.shellListKey:00000000 shellListKey
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2152   .text.shellListKey:00000040 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2157   .text.shellKeys:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2162   .text.shellKeys:00000000 shellKeys
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2187   .text.shellListAll:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2192   .text.shellListAll:00000000 shellListAll
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2212   .text.shellDeleteCommandLine:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2217   .text.shellDeleteCommandLine:00000000 shellDeleteCommandLine
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2256   .text.shellDeleteCommandLine:0000001c $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2261   .text.shellClearCommandLine:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2266   .text.shellClearCommandLine:00000000 shellClearCommandLine
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2316   .text.shellHistory:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2320   .text.shellHistory:00000000 shellHistory
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2433   .text.shellHistory:000000a4 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2438   .text.shellUp:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2443   .text.shellUp:00000000 shellUp
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2464   .text.shellDown:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2469   .text.shellDown:00000000 shellDown
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2490   .text.shellTab:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2495   .text.shellTab:00000000 shellTab
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2705   .text.shellTab:00000114 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2711   .text.shellInsertByte:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2716   .text.shellInsertByte:00000000 shellInsertByte
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2883   .text.shellInsertByte:000000b8 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2889   .text.shellDeleteByte:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:2894   .text.shellDeleteByte:00000000 shellDeleteByte
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3066   .text.shellBackspace:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3071   .text.shellBackspace:00000000 shellBackspace
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3092   .text.shellDelete:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3097   .text.shellDelete:00000000 shellDelete
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3118   .text.shellSeekCommand:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3123   .text.shellSeekCommand:00000000 shellSeekCommand
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3219   .text.shellInit:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3224   .text.shellInit:00000000 shellInit
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3324   .text.shellInit:0000007c $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3332   .text.shellHelp:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3337   .text.shellHelp:00000000 shellHelp
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 133


C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3431   .text.shellHelp:0000006c $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3439   .text.shellGetVarValue:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3444   .text.shellGetVarValue:00000000 shellGetVarValue
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3465   .text.shellGetVarValue:00000012 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3471   .text.shellGetVarValue:00000018 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3532   .text.shellShowVar:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3536   .text.shellShowVar:00000000 shellShowVar
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3669   .text.shellShowVar:000000a8 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3678   .text.shellSetVarValue:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3683   .text.shellSetVarValue:00000000 shellSetVarValue
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3720   .text.shellSetVarValue:00000026 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3726   .text.shellSetVarValue:0000002c $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3795   .text.shellSetVarValue:00000070 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3801   .text.shellSetVar:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3806   .text.shellSetVar:00000000 shellSetVar
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3891   .text.shellSetVar:0000005c $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3897   .text.shellRunCommand:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:3902   .text.shellRunCommand:00000000 shellRunCommand
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4016   .text.shellNormalInput:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4021   .text.shellNormalInput:00000000 shellNormalInput
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4045   .text.shellExec:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4050   .text.shellExec:00000000 shellExec
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4138   .text.shellExec:00000060 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4144   .text.shellEnter:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4149   .text.shellEnter:00000000 shellEnter
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4175   .text.shellHandler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4180   .text.shellHandler:00000000 shellHandler
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4352   .text.shellHandler:000000d4 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4357   .text.shellTask:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4362   .text.shellTask:00000000 shellTask
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4400   .text.shellRun:00000000 $t
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4405   .text.shellRun:00000000 shellRun
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4496   .text.shellRun:0000005c $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4652   shellCommand:00000000 shellCommandclear
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4780   .rodata.shellDescclear:00000000 shellDescclear
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4604   .rodata.shellCmdclear:00000000 shellCmdclear
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4659   shellCommand:00000010 shellCommandkeys
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4610   .rodata.shellDesckeys:00000000 shellDesckeys
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4616   .rodata.shellCmdkeys:00000000 shellCmdkeys
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4666   shellCommand:00000020 shellCommandvars
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4586   .rodata.shellDescvars:00000000 shellDescvars
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4598   .rodata.shellCmdvars:00000000 shellCmdvars
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4673   shellCommand:00000030 shellCommandcmds
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4568   .rodata.shellDesccmds:00000000 shellDesccmds
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4810   .rodata.shellCmdcmds:00000000 shellCmdcmds
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4680   shellCommand:00000040 shellCommandusers
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4628   .rodata.shellDescusers:00000000 shellDescusers
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4574   .rodata.shellCmdusers:00000000 shellCmdusers
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4687   shellCommand:00000050 shellCommandhelp
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4792   .rodata.shellDeschelp:00000000 shellDeschelp
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4634   .rodata.shellCmdhelp:00000000 shellCmdhelp
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4694   shellCommand:00000060 shellKey0x0D000000
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4646   .rodata.shellDesc0x0D000000:00000000 shellDesc0x0D000000
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4701   shellCommand:00000070 shellKey0x0A000000
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4786   .rodata.shellDesc0x0A000000:00000000 shellDesc0x0A000000
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4708   shellCommand:00000080 shellKey0x1B5B337E
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4822   .rodata.shellDesc0x1B5B337E:00000000 shellDesc0x1B5B337E
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 134


C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4715   shellCommand:00000090 shellKey0x7F000000
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4580   .rodata.shellDesc0x7F000000:00000000 shellDesc0x7F000000
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4722   shellCommand:000000a0 shellKey0x08000000
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4622   .rodata.shellDesc0x08000000:00000000 shellDesc0x08000000
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4729   shellCommand:000000b0 shellKey0x09000000
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4804   .rodata.shellDesc0x09000000:00000000 shellDesc0x09000000
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4736   shellCommand:000000c0 shellKey0x1B5B4400
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4841   .rodata.shellDesc0x1B5B4400:00000000 shellDesc0x1B5B4400
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4743   shellCommand:000000d0 shellKey0x1B5B4300
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4592   .rodata.shellDesc0x1B5B4300:00000000 shellDesc0x1B5B4300
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4750   shellCommand:000000e0 shellKey0x1B5B4200
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4798   .rodata.shellDesc0x1B5B4200:00000000 shellDesc0x1B5B4200
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4757   shellCommand:000000f0 shellKey0x1B5B4100
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4555   .rodata.shellDesc0x1B5B4100:00000000 shellDesc0x1B5B4100
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4764   shellCommand:00000100 shellCommandsetVar
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4640   .rodata.shellDescsetVar:00000000 shellDescsetVar
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4816   .rodata.shellCmdsetVar:00000000 shellCmdsetVar
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4771   shellCommand:00000110 shellUserDefault
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4828   .rodata.shellDesDefaultUser:00000000 shellDesDefaultUser
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4549   .rodata.shellPasswordDefaultUser:00000000 shellPasswordDefaultUser
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4847   .rodata.shellCmdDefaultUser:00000000 shellCmdDefaultUser
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4546   .rodata.shellPasswordDefaultUser:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4552   .rodata.shellDesc0x1B5B4100:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4558   .bss.buffer.9202:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4562   .bss.buffer.9202:00000000 buffer.9202
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4565   .rodata.shellDesccmds:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4571   .rodata.shellCmdusers:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4577   .rodata.shellDesc0x7F000000:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4583   .rodata.shellDescvars:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4589   .rodata.shellDesc0x1B5B4300:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4595   .rodata.shellCmdvars:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4601   .rodata.shellCmdclear:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4607   .rodata.shellDesckeys:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4613   .rodata.shellCmdkeys:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4619   .rodata.shellDesc0x08000000:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4625   .rodata.shellDescusers:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4631   .rodata.shellCmdhelp:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4637   .rodata.shellDescsetVar:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4643   .rodata.shellDesc0x0D000000:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4649   shellCommand:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4777   .rodata.shellDescclear:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4783   .rodata.shellDesc0x0A000000:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4789   .rodata.shellDeschelp:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4795   .rodata.shellDesc0x1B5B4200:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4801   .rodata.shellDesc0x09000000:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4807   .rodata.shellCmdcmds:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4813   .rodata.shellCmdsetVar:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4819   .rodata.shellDesc0x1B5B337E:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4825   .rodata.shellDesDefaultUser:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4831   .bss.shellList:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4835   .bss.shellList:00000000 shellList
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4838   .rodata.shellDesc0x1B5B4400:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4844   .rodata.shellCmdDefaultUser:00000000 $d
C:\Users\why\AppData\Local\Temp\ccWCdZQI.s:4850   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ARM GAS  C:\Users\why\AppData\Local\Temp\ccWCdZQI.s 			page 135


strcmp
delay_us
strlen
vsnprintf
vsscanf
strncmp
_shell_command_start
_shell_command_end
shellExtRun
