ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"shell.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.shellAdd,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	shellAdd:
  27              	.LFB125:
  28              		.file 1 "SYS/shell/shell.c"
   1:SYS/shell/shell.c **** /**
   2:SYS/shell/shell.c ****  * @file shell.c
   3:SYS/shell/shell.c ****  * @author Letter (NevermindZZT@gmail.com)
   4:SYS/shell/shell.c ****  * @version 3.0.0
   5:SYS/shell/shell.c ****  * @date 2019-12-30
   6:SYS/shell/shell.c ****  * 
   7:SYS/shell/shell.c ****  * @copyright (c) 2020 Letter
   8:SYS/shell/shell.c ****  * 
   9:SYS/shell/shell.c ****  */
  10:SYS/shell/shell.c **** 
  11:SYS/shell/shell.c **** #include "shell.h"
  12:SYS/shell/shell.c **** #include "string.h"
  13:SYS/shell/shell.c **** #include "stdio.h"
  14:SYS/shell/shell.c **** #include "stdarg.h"
  15:SYS/shell/shell.c **** #include "shell_ext.h"
  16:SYS/shell/shell.c **** #include "stm32f4xx_usart.h"
  17:SYS/shell/shell.c **** #include "task_manager_cfg.h"
  18:SYS/shell/shell.c **** 
  19:SYS/shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
  20:SYS/shell/shell.c **** /**
  21:SYS/shell/shell.c ****  * @brief 默认用户
  22:SYS/shell/shell.c ****  */
  23:SYS/shell/shell.c **** const char shellCmdDefaultUser[] = SHELL_DEFAULT_USER;
  24:SYS/shell/shell.c **** const char shellPasswordDefaultUser[] = SHELL_DEFAULT_USER_PASSWORD;
  25:SYS/shell/shell.c **** const char shellDesDefaultUser[] = "default user";
  26:SYS/shell/shell.c **** const ShellCommand shellUserDefault SECTION("shellCommand") =
  27:SYS/shell/shell.c ****     {
  28:SYS/shell/shell.c ****         .attr.value = SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_USER),
  29:SYS/shell/shell.c ****         .data.user.name = shellCmdDefaultUser,
  30:SYS/shell/shell.c ****         .data.user.password = shellPasswordDefaultUser,
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 2


  31:SYS/shell/shell.c ****         .data.user.desc = shellDesDefaultUser};
  32:SYS/shell/shell.c **** #endif
  33:SYS/shell/shell.c **** 
  34:SYS/shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
  35:SYS/shell/shell.c **** #if defined(__CC_ARM) || (defined(__ARMCC_VERSION) && __ARMCC_VERSION >= 6000000)
  36:SYS/shell/shell.c **** extern const unsigned int shellCommand$$Base;
  37:SYS/shell/shell.c **** extern const unsigned int shellCommand$$Limit;
  38:SYS/shell/shell.c **** #elif defined(__ICCARM__) || defined(__ICCRX__)
  39:SYS/shell/shell.c **** #pragma section = "shellCommand"
  40:SYS/shell/shell.c **** #elif defined(__GNUC__)
  41:SYS/shell/shell.c **** extern const unsigned int _shell_command_start;
  42:SYS/shell/shell.c **** extern const unsigned int _shell_command_end;
  43:SYS/shell/shell.c **** #endif
  44:SYS/shell/shell.c **** #else
  45:SYS/shell/shell.c **** extern const ShellCommand shellCommandList[];
  46:SYS/shell/shell.c **** extern const unsigned short shellCommandCount;
  47:SYS/shell/shell.c **** #endif
  48:SYS/shell/shell.c **** 
  49:SYS/shell/shell.c **** /**
  50:SYS/shell/shell.c ****  * @brief shell 常量文本索引
  51:SYS/shell/shell.c ****  */
  52:SYS/shell/shell.c **** enum
  53:SYS/shell/shell.c **** {
  54:SYS/shell/shell.c **** #if SHELL_SHOW_INFO == 1
  55:SYS/shell/shell.c ****     SHELL_TEXT_INFO, /**< shell信息 */
  56:SYS/shell/shell.c **** #endif
  57:SYS/shell/shell.c ****     SHELL_TEXT_CMD_TOO_LONG,                /**< 命令过长 */
  58:SYS/shell/shell.c ****     SHELL_TEXT_CMD_LIST,                    /**< 可执行命令列表标题 */
  59:SYS/shell/shell.c ****     SHELL_TEXT_VAR_LIST,                    /**< 变量列表标题 */
  60:SYS/shell/shell.c ****     SHELL_TEXT_USER_LIST,                   /**< 用户列表标题 */
  61:SYS/shell/shell.c ****     SHELL_TEXT_KEY_LIST,                    /**< 按键列表标题 */
  62:SYS/shell/shell.c ****     SHELL_TEXT_CMD_NOT_FOUND,               /**< 命令未找到 */
  63:SYS/shell/shell.c ****     SHELL_TEXT_POINT_CANNOT_MODIFY,         /**< 指针变量不允许修改 */
  64:SYS/shell/shell.c ****     SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY, /**< 只读变量不允许修改 */
  65:SYS/shell/shell.c ****     SHELL_TEXT_NOT_VAR,                     /**< 命令不是变量 */
  66:SYS/shell/shell.c ****     SHELL_TEXT_VAR_NOT_FOUND,               /**< 变量未找到 */
  67:SYS/shell/shell.c ****     SHELL_TEXT_HELP_HEADER,                 /**< help头 */
  68:SYS/shell/shell.c ****     SHELL_TEXT_PASSWORD_HINT,               /**< 密码输入提示 */
  69:SYS/shell/shell.c ****     SHELL_TEXT_PASSWORD_ERROR,              /**< 密码错误 */
  70:SYS/shell/shell.c ****     SHELL_TEXT_CLEAR_CONSOLE,               /**< 清空控制台 */
  71:SYS/shell/shell.c ****     SHELL_TEXT_CLEAR_LINE,                  /**< 清空当前行 */
  72:SYS/shell/shell.c ****     SHELL_TEXT_TYPE_CMD,                    /**< 命令类型 */
  73:SYS/shell/shell.c ****     SHELL_TEXT_TYPE_VAR,                    /**< 变量类型 */
  74:SYS/shell/shell.c ****     SHELL_TEXT_TYPE_USER,                   /**< 用户类型 */
  75:SYS/shell/shell.c ****     SHELL_TEXT_TYPE_KEY,                    /**< 按键类型 */
  76:SYS/shell/shell.c ****     SHELL_TEXT_TYPE_NONE,                   /**< 非法类型 */
  77:SYS/shell/shell.c **** #if SHELL_EXEC_UNDEF_FUNC == 1
  78:SYS/shell/shell.c ****     SHELL_TEXT_PARAM_ERROR, /**< 参数错误 */
  79:SYS/shell/shell.c **** #endif
  80:SYS/shell/shell.c **** };
  81:SYS/shell/shell.c **** 
  82:SYS/shell/shell.c **** static const char *shellText[] =
  83:SYS/shell/shell.c ****     {
  84:SYS/shell/shell.c **** #if SHELL_SHOW_INFO == 1
  85:SYS/shell/shell.c ****         [SHELL_TEXT_INFO] =
  86:SYS/shell/shell.c ****             "\r\n\r\n"
  87:SYS/shell/shell.c ****             "/************  BitRtos  ************\\r\n\r\n"
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 3


  88:SYS/shell/shell.c ****             "Team Mate:        8_B!T0\r\n"
  89:SYS/shell/shell.c ****             "                  WHY\r\n"
  90:SYS/shell/shell.c ****             "\r\n"
  91:SYS/shell/shell.c ****             "Build:            "__DATE__
  92:SYS/shell/shell.c ****             " "__TIME__
  93:SYS/shell/shell.c ****             "\r\n"
  94:SYS/shell/shell.c ****             "Shell   Version:  " SHELL_VERSION "\r\n"
  95:SYS/shell/shell.c ****             "BitRtos Version:  " RTOS_VERSION "\r\n",
  96:SYS/shell/shell.c **** #endif
  97:SYS/shell/shell.c ****         [SHELL_TEXT_CMD_TOO_LONG] =
  98:SYS/shell/shell.c ****             "\r\nWarning: Command is too long\r\n",
  99:SYS/shell/shell.c ****         [SHELL_TEXT_CMD_LIST] =
 100:SYS/shell/shell.c ****             "\r\nCommand List:\r\n",
 101:SYS/shell/shell.c ****         [SHELL_TEXT_VAR_LIST] =
 102:SYS/shell/shell.c ****             "\r\nVar List:\r\n",
 103:SYS/shell/shell.c ****         [SHELL_TEXT_USER_LIST] =
 104:SYS/shell/shell.c ****             "\r\nUser List:\r\n",
 105:SYS/shell/shell.c ****         [SHELL_TEXT_KEY_LIST] =
 106:SYS/shell/shell.c ****             "\r\nKey List:\r\n",
 107:SYS/shell/shell.c ****         [SHELL_TEXT_CMD_NOT_FOUND] =
 108:SYS/shell/shell.c ****             "Command not Found\r\n",
 109:SYS/shell/shell.c ****         [SHELL_TEXT_POINT_CANNOT_MODIFY] =
 110:SYS/shell/shell.c ****             "can't set pointer\r\n",
 111:SYS/shell/shell.c ****         [SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY] =
 112:SYS/shell/shell.c ****             "can't set read only var\r\n",
 113:SYS/shell/shell.c ****         [SHELL_TEXT_NOT_VAR] =
 114:SYS/shell/shell.c ****             " is not a var\r\n",
 115:SYS/shell/shell.c ****         [SHELL_TEXT_VAR_NOT_FOUND] =
 116:SYS/shell/shell.c ****             "Var not Fount\r\n",
 117:SYS/shell/shell.c ****         [SHELL_TEXT_HELP_HEADER] =
 118:SYS/shell/shell.c ****             "command help of ",
 119:SYS/shell/shell.c ****         [SHELL_TEXT_PASSWORD_HINT] =
 120:SYS/shell/shell.c ****             "\r\nPlease input password:",
 121:SYS/shell/shell.c ****         [SHELL_TEXT_PASSWORD_ERROR] =
 122:SYS/shell/shell.c ****             "\r\npassword error\r\n",
 123:SYS/shell/shell.c ****         [SHELL_TEXT_CLEAR_CONSOLE] =
 124:SYS/shell/shell.c ****             "\033[2J\033[1H",
 125:SYS/shell/shell.c ****         [SHELL_TEXT_CLEAR_LINE] =
 126:SYS/shell/shell.c ****             "\033[2K\r",
 127:SYS/shell/shell.c ****         [SHELL_TEXT_TYPE_CMD] =
 128:SYS/shell/shell.c ****             "CMD \r\n",
 129:SYS/shell/shell.c ****         [SHELL_TEXT_TYPE_VAR] =
 130:SYS/shell/shell.c ****             "VAR",
 131:SYS/shell/shell.c ****         [SHELL_TEXT_TYPE_USER] =
 132:SYS/shell/shell.c ****             "USER",
 133:SYS/shell/shell.c ****         [SHELL_TEXT_TYPE_KEY] =
 134:SYS/shell/shell.c ****             "KEY",
 135:SYS/shell/shell.c ****         [SHELL_TEXT_TYPE_NONE] =
 136:SYS/shell/shell.c ****             "NONE",
 137:SYS/shell/shell.c **** #if SHELL_EXEC_UNDEF_FUNC == 1
 138:SYS/shell/shell.c ****         [SHELL_TEXT_PARAM_ERROR] =
 139:SYS/shell/shell.c ****             "Parameter error\r\n",
 140:SYS/shell/shell.c **** #endif
 141:SYS/shell/shell.c **** };
 142:SYS/shell/shell.c **** 
 143:SYS/shell/shell.c **** /**
 144:SYS/shell/shell.c ****  * @brief shell对象表
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 4


 145:SYS/shell/shell.c ****  */
 146:SYS/shell/shell.c **** static Shell *shellList[SHELL_MAX_NUMBER] = {NULL};
 147:SYS/shell/shell.c **** 
 148:SYS/shell/shell.c **** static void shellAdd(Shell *shell);
 149:SYS/shell/shell.c **** static void shellWriteCommandLine(Shell *shell, unsigned char newline);
 150:SYS/shell/shell.c **** static void shellWriteReturnValue(Shell *shell, int value);
 151:SYS/shell/shell.c **** static int shellShowVar(Shell *shell, ShellCommand *command);
 152:SYS/shell/shell.c **** static void shellSetUser(Shell *shell, const ShellCommand *user);
 153:SYS/shell/shell.c **** ShellCommand *shellSeekCommand(Shell *shell,
 154:SYS/shell/shell.c ****                                const char *cmd,
 155:SYS/shell/shell.c ****                                ShellCommand *base,
 156:SYS/shell/shell.c ****                                unsigned short compareLength);
 157:SYS/shell/shell.c **** 
 158:SYS/shell/shell.c **** /**
 159:SYS/shell/shell.c ****  * @brief shell 初始化
 160:SYS/shell/shell.c ****  * 
 161:SYS/shell/shell.c ****  * @param shell shell对象
 162:SYS/shell/shell.c ****  */
 163:SYS/shell/shell.c **** void shellInit(Shell *shell, char *buffer, unsigned short size)
 164:SYS/shell/shell.c **** {
 165:SYS/shell/shell.c ****     __asm("cpsid i");
 166:SYS/shell/shell.c ****     shell->parser.length = 0;
 167:SYS/shell/shell.c ****     shell->parser.cursor = 0;
 168:SYS/shell/shell.c ****     shell->history.offset = 0;
 169:SYS/shell/shell.c ****     shell->history.number = 0;
 170:SYS/shell/shell.c ****     shell->history.record = 0;
 171:SYS/shell/shell.c ****     shell->info.user = NULL;
 172:SYS/shell/shell.c ****     shell->status.isChecked = 1;
 173:SYS/shell/shell.c **** 
 174:SYS/shell/shell.c ****     shell->parser.buffer = buffer;
 175:SYS/shell/shell.c ****     shell->parser.bufferSize = size / (SHELL_HISTORY_MAX_NUMBER + 1);
 176:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_HISTORY_MAX_NUMBER; i++)
 177:SYS/shell/shell.c ****     {
 178:SYS/shell/shell.c ****         shell->history.item[i] = buffer + shell->parser.bufferSize * (i + 1);
 179:SYS/shell/shell.c ****     }
 180:SYS/shell/shell.c **** 
 181:SYS/shell/shell.c **** #if SHELL_USING_CMD_EXPORT == 1
 182:SYS/shell/shell.c **** #if defined(__CC_ARM) || (defined(__ARMCC_VERSION) && __ARMCC_VERSION >= 6000000)
 183:SYS/shell/shell.c ****     shell->commandList.base = (ShellCommand *)(&shellCommand$$Base);
 184:SYS/shell/shell.c ****     shell->commandList.count = ((unsigned int)(&shellCommand$$Limit) - (unsigned int)(&shellCommand
 185:SYS/shell/shell.c **** 
 186:SYS/shell/shell.c **** #elif defined(__ICCARM__) || defined(__ICCRX__)
 187:SYS/shell/shell.c ****     shell->commandList.base = (ShellCommand *)(__section_begin("shellCommand"));
 188:SYS/shell/shell.c ****     shell->commandList.count = ((unsigned int)(__section_end("shellCommand")) - (unsigned int)(__se
 189:SYS/shell/shell.c **** #elif defined(__GNUC__)
 190:SYS/shell/shell.c ****     shell->commandList.base = (ShellCommand *)(&_shell_command_start);
 191:SYS/shell/shell.c ****     shell->commandList.count = ((unsigned int)(&_shell_command_end) - (unsigned int)(&_shell_comman
 192:SYS/shell/shell.c **** #else
 193:SYS/shell/shell.c **** #error not supported compiler, please use command table mode
 194:SYS/shell/shell.c **** #endif
 195:SYS/shell/shell.c **** #else
 196:SYS/shell/shell.c ****     shell->commandList.base = (ShellCommand *)shellCommandList;
 197:SYS/shell/shell.c ****     shell->commandList.count = shellCommandCount;
 198:SYS/shell/shell.c **** #endif
 199:SYS/shell/shell.c **** 
 200:SYS/shell/shell.c ****     shellAdd(shell);
 201:SYS/shell/shell.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 5


 202:SYS/shell/shell.c ****     shellSetUser(shell, shellSeekCommand(shell,
 203:SYS/shell/shell.c ****                                          SHELL_DEFAULT_USER,
 204:SYS/shell/shell.c ****                                          shell->commandList.base,
 205:SYS/shell/shell.c ****                                          0));
 206:SYS/shell/shell.c ****     shellWriteCommandLine(shell, 1);
 207:SYS/shell/shell.c ****     __asm("cpsie i");
 208:SYS/shell/shell.c **** }
 209:SYS/shell/shell.c **** 
 210:SYS/shell/shell.c **** /**
 211:SYS/shell/shell.c ****  * @brief 添加shell
 212:SYS/shell/shell.c ****  * 
 213:SYS/shell/shell.c ****  * @param shell shell对象
 214:SYS/shell/shell.c ****  */
 215:SYS/shell/shell.c **** static void shellAdd(Shell *shell)
 216:SYS/shell/shell.c **** {
  29              		.loc 1 216 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.LBB2:
 217:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
  36              		.loc 1 217 0
  37 0000 0023     		movs	r3, #0
  38 0002 0AE0     		b	.L2
  39              	.LVL1:
  40              	.L5:
 218:SYS/shell/shell.c ****     {
 219:SYS/shell/shell.c ****         if (shellList[i] == NULL)
  41              		.loc 1 219 0
  42 0004 1946     		mov	r1, r3
  43 0006 064A     		ldr	r2, .L6
  44 0008 52F82320 		ldr	r2, [r2, r3, lsl #2]
  45 000c 1AB9     		cbnz	r2, .L3
 220:SYS/shell/shell.c ****         {
 221:SYS/shell/shell.c ****             shellList[i] = shell;
  46              		.loc 1 221 0
  47 000e 044B     		ldr	r3, .L6
  48              	.LVL2:
  49 0010 43F82100 		str	r0, [r3, r1, lsl #2]
 222:SYS/shell/shell.c ****             return;
  50              		.loc 1 222 0
  51 0014 7047     		bx	lr
  52              	.LVL3:
  53              	.L3:
 217:SYS/shell/shell.c ****     {
  54              		.loc 1 217 0 discriminator 2
  55 0016 0133     		adds	r3, r3, #1
  56              	.LVL4:
  57 0018 1BB2     		sxth	r3, r3
  58              	.LVL5:
  59              	.L2:
 217:SYS/shell/shell.c ****     {
  60              		.loc 1 217 0 is_stmt 0 discriminator 1
  61 001a 042B     		cmp	r3, #4
  62 001c F2DD     		ble	.L5
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 6


  63 001e 7047     		bx	lr
  64              	.L7:
  65              		.align	2
  66              	.L6:
  67 0020 00000000 		.word	.LANCHOR0
  68              	.LBE2:
  69              		.cfi_endproc
  70              	.LFE125:
  72              		.section	.text.shellStringCopy,"ax",%progbits
  73              		.align	2
  74              		.thumb
  75              		.thumb_func
  77              	shellStringCopy:
  78              	.LFB136:
 223:SYS/shell/shell.c ****         }
 224:SYS/shell/shell.c ****     }
 225:SYS/shell/shell.c **** }
 226:SYS/shell/shell.c **** 
 227:SYS/shell/shell.c **** /**
 228:SYS/shell/shell.c ****  * @brief 获取当前活动shell
 229:SYS/shell/shell.c ****  * 
 230:SYS/shell/shell.c ****  * @return Shell* 当前活动shell对象
 231:SYS/shell/shell.c ****  */
 232:SYS/shell/shell.c **** Shell *shellGetCurrent(void)
 233:SYS/shell/shell.c **** {
 234:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
 235:SYS/shell/shell.c ****     {
 236:SYS/shell/shell.c ****         if (shellList[i] && shellList[i]->status.isActive)
 237:SYS/shell/shell.c ****         {
 238:SYS/shell/shell.c ****             return shellList[i];
 239:SYS/shell/shell.c ****         }
 240:SYS/shell/shell.c ****     }
 241:SYS/shell/shell.c ****     return NULL;
 242:SYS/shell/shell.c **** }
 243:SYS/shell/shell.c **** 
 244:SYS/shell/shell.c **** /**
 245:SYS/shell/shell.c ****  * @brief shell写字符
 246:SYS/shell/shell.c ****  * 
 247:SYS/shell/shell.c ****  * @param shell shell对象
 248:SYS/shell/shell.c ****  * @param data 字符数据
 249:SYS/shell/shell.c ****  */
 250:SYS/shell/shell.c **** void shellWriteByte(Shell *shell, const char data)
 251:SYS/shell/shell.c **** {
 252:SYS/shell/shell.c ****     shell->write(&data, sizeof(data));
 253:SYS/shell/shell.c **** }
 254:SYS/shell/shell.c **** 
 255:SYS/shell/shell.c **** /**
 256:SYS/shell/shell.c ****  * @brief shell 写字符串
 257:SYS/shell/shell.c ****  * 
 258:SYS/shell/shell.c ****  * @param shell shell对象
 259:SYS/shell/shell.c ****  * @param string 字符串数据
 260:SYS/shell/shell.c ****  * 
 261:SYS/shell/shell.c ****  * @return unsigned short 写入字符的数量
 262:SYS/shell/shell.c ****  */
 263:SYS/shell/shell.c **** unsigned short shellWriteString(Shell *shell, const char *string)
 264:SYS/shell/shell.c **** {
 265:SYS/shell/shell.c ****     unsigned short count = 0;
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 7


 266:SYS/shell/shell.c ****     SHELL_ASSERT(shell->write, return 0);
 267:SYS/shell/shell.c **** 
 268:SYS/shell/shell.c ****     shell->write(string, strlen(string));
 269:SYS/shell/shell.c ****     return count;
 270:SYS/shell/shell.c **** }
 271:SYS/shell/shell.c **** 
 272:SYS/shell/shell.c **** /**
 273:SYS/shell/shell.c ****  * @brief shell 写命令描述字符串
 274:SYS/shell/shell.c ****  * 
 275:SYS/shell/shell.c ****  * @param shell shell对象
 276:SYS/shell/shell.c ****  * @param string 字符串数据
 277:SYS/shell/shell.c ****  * 
 278:SYS/shell/shell.c ****  * @return unsigned short 写入字符的数量
 279:SYS/shell/shell.c ****  */
 280:SYS/shell/shell.c **** static unsigned short shellWriteCommandDesc(Shell *shell, const char *string)
 281:SYS/shell/shell.c **** {
 282:SYS/shell/shell.c ****     const char dot = '.';
 283:SYS/shell/shell.c ****     unsigned short count = 0;
 284:SYS/shell/shell.c ****     SHELL_ASSERT(shell->write, return 0);
 285:SYS/shell/shell.c ****     while (*string && *string != '\r' && *string != '\n' && count < 36)
 286:SYS/shell/shell.c ****     {
 287:SYS/shell/shell.c ****         shell->write(*string++, 1);
 288:SYS/shell/shell.c ****         count++;
 289:SYS/shell/shell.c ****         if (count >= 36 && *(string + 1))
 290:SYS/shell/shell.c ****         {
 291:SYS/shell/shell.c ****             shell->write(&dot, sizeof(dot));
 292:SYS/shell/shell.c ****             shell->write(&dot, sizeof(dot));
 293:SYS/shell/shell.c ****             shell->write(&dot, sizeof(dot));
 294:SYS/shell/shell.c ****         }
 295:SYS/shell/shell.c ****     }
 296:SYS/shell/shell.c ****     return count;
 297:SYS/shell/shell.c **** }
 298:SYS/shell/shell.c **** 
 299:SYS/shell/shell.c **** /**
 300:SYS/shell/shell.c ****  * @brief shell写命令提示符
 301:SYS/shell/shell.c ****  * 
 302:SYS/shell/shell.c ****  * @param shell shell对象
 303:SYS/shell/shell.c ****  * @param newline 新行
 304:SYS/shell/shell.c ****  * 
 305:SYS/shell/shell.c ****  */
 306:SYS/shell/shell.c **** static void shellWriteCommandLine(Shell *shell, unsigned char newline)
 307:SYS/shell/shell.c **** {
 308:SYS/shell/shell.c ****     if (shell->status.isChecked)
 309:SYS/shell/shell.c ****     {
 310:SYS/shell/shell.c ****         if (newline)
 311:SYS/shell/shell.c ****         {
 312:SYS/shell/shell.c ****             shellWriteString(shell, "\r\n");
 313:SYS/shell/shell.c ****         }
 314:SYS/shell/shell.c ****         shellWriteString(shell, shell->info.user->data.user.name);
 315:SYS/shell/shell.c ****         shellWriteString(shell, ":");
 316:SYS/shell/shell.c ****         shellWriteString(shell, shell->info.path ? shell->info.path : "/");
 317:SYS/shell/shell.c ****         shellWriteString(shell, "$ ");
 318:SYS/shell/shell.c ****     }
 319:SYS/shell/shell.c ****     else
 320:SYS/shell/shell.c ****     {
 321:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_PASSWORD_HINT]);
 322:SYS/shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 8


 323:SYS/shell/shell.c **** }
 324:SYS/shell/shell.c **** 
 325:SYS/shell/shell.c **** #if SHELL_PRINT_BUFFER > 0
 326:SYS/shell/shell.c **** /**
 327:SYS/shell/shell.c ****  * @brief shell格式化输出
 328:SYS/shell/shell.c ****  * 
 329:SYS/shell/shell.c ****  * @param shell shell对象
 330:SYS/shell/shell.c ****  * @param fmt 格式化字符串
 331:SYS/shell/shell.c ****  * @param ... 参数
 332:SYS/shell/shell.c ****  */
 333:SYS/shell/shell.c **** void shellPrint(Shell *shell, char *fmt, ...)
 334:SYS/shell/shell.c **** {
 335:SYS/shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 336:SYS/shell/shell.c ****     va_list vargs;
 337:SYS/shell/shell.c **** 
 338:SYS/shell/shell.c ****     SHELL_ASSERT(shell, return );
 339:SYS/shell/shell.c **** 
 340:SYS/shell/shell.c ****     va_start(vargs, fmt);
 341:SYS/shell/shell.c ****     vsnprintf(buffer, SHELL_PRINT_BUFFER - 1, fmt, vargs);
 342:SYS/shell/shell.c ****     va_end(vargs);
 343:SYS/shell/shell.c **** 
 344:SYS/shell/shell.c ****     shellWriteString(shell, buffer);
 345:SYS/shell/shell.c **** }
 346:SYS/shell/shell.c **** #endif
 347:SYS/shell/shell.c **** 
 348:SYS/shell/shell.c **** #if SHELL_SCAN_BUFFER > 0
 349:SYS/shell/shell.c **** /**
 350:SYS/shell/shell.c ****  * @brief shell格式化输入
 351:SYS/shell/shell.c ****  * 
 352:SYS/shell/shell.c ****  * @param shell shell对象
 353:SYS/shell/shell.c ****  * @param fmt 格式化字符串
 354:SYS/shell/shell.c ****  * @param ... 参数
 355:SYS/shell/shell.c ****  */
 356:SYS/shell/shell.c **** void shellScan(Shell *shell, char *fmt, ...)
 357:SYS/shell/shell.c **** {
 358:SYS/shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 359:SYS/shell/shell.c ****     va_list vargs;
 360:SYS/shell/shell.c ****     short index = 0;
 361:SYS/shell/shell.c **** 
 362:SYS/shell/shell.c ****     SHELL_ASSERT(shell, return );
 363:SYS/shell/shell.c **** 
 364:SYS/shell/shell.c ****     if (shell->read)
 365:SYS/shell/shell.c ****     {
 366:SYS/shell/shell.c ****         do
 367:SYS/shell/shell.c ****         {
 368:SYS/shell/shell.c ****             if (shell->read(&buffer[index]) == 0)
 369:SYS/shell/shell.c ****             {
 370:SYS/shell/shell.c ****                 shell->write(&buffer[index], sizeof(buffer[index]));
 371:SYS/shell/shell.c ****                 index++;
 372:SYS/shell/shell.c ****             }
 373:SYS/shell/shell.c ****         } while (buffer[index - 1] != '\r' && buffer[index - 1] != '\n' && index < SHELL_SCAN_BUFFE
 374:SYS/shell/shell.c ****         shellWriteString(shell, "\r\n");
 375:SYS/shell/shell.c ****         buffer[index] = '\0';
 376:SYS/shell/shell.c ****     }
 377:SYS/shell/shell.c **** 
 378:SYS/shell/shell.c ****     va_start(vargs, fmt);
 379:SYS/shell/shell.c ****     vsscanf(buffer, fmt, vargs);
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 9


 380:SYS/shell/shell.c ****     va_end(vargs);
 381:SYS/shell/shell.c **** }
 382:SYS/shell/shell.c **** #endif
 383:SYS/shell/shell.c **** 
 384:SYS/shell/shell.c **** /**
 385:SYS/shell/shell.c ****  * @brief shell 检查命令权限
 386:SYS/shell/shell.c ****  * 
 387:SYS/shell/shell.c ****  * @param shell shell对象
 388:SYS/shell/shell.c ****  * @param command ShellCommand
 389:SYS/shell/shell.c ****  * 
 390:SYS/shell/shell.c ****  * @return signed char 0 当前用户具有该命令权限
 391:SYS/shell/shell.c ****  * @return signec char -1 当前用户不具有该命令权限
 392:SYS/shell/shell.c ****  */
 393:SYS/shell/shell.c **** signed char shellCheckPermission(Shell *shell, ShellCommand *command)
 394:SYS/shell/shell.c **** {
 395:SYS/shell/shell.c ****     return ((!command->attr.attrs.permission || command->attr.attrs.type == SHELL_TYPE_USER || (com
 396:SYS/shell/shell.c ****                ? 0
 397:SYS/shell/shell.c ****                : -1;
 398:SYS/shell/shell.c **** }
 399:SYS/shell/shell.c **** 
 400:SYS/shell/shell.c **** /**
 401:SYS/shell/shell.c ****  * @brief int转16进制字符串
 402:SYS/shell/shell.c ****  * 
 403:SYS/shell/shell.c ****  * @param value 数值
 404:SYS/shell/shell.c ****  * @param buffer 缓冲
 405:SYS/shell/shell.c ****  * 
 406:SYS/shell/shell.c ****  * @return signed char 转换后有效数据长度
 407:SYS/shell/shell.c ****  */
 408:SYS/shell/shell.c **** signed char shellToHex(unsigned int value, char *buffer)
 409:SYS/shell/shell.c **** {
 410:SYS/shell/shell.c ****     char byte;
 411:SYS/shell/shell.c ****     unsigned char i = 8;
 412:SYS/shell/shell.c ****     buffer[8] = 0;
 413:SYS/shell/shell.c ****     while (value)
 414:SYS/shell/shell.c ****     {
 415:SYS/shell/shell.c ****         byte = value & 0x0000000F;
 416:SYS/shell/shell.c ****         buffer[--i] = (byte > 9) ? (byte + 87) : (byte + 48);
 417:SYS/shell/shell.c ****         value >>= 4;
 418:SYS/shell/shell.c ****     }
 419:SYS/shell/shell.c ****     return 8 - i;
 420:SYS/shell/shell.c **** }
 421:SYS/shell/shell.c **** 
 422:SYS/shell/shell.c **** /**
 423:SYS/shell/shell.c **** * @brief int转10进制字符串
 424:SYS/shell/shell.c ****  * 
 425:SYS/shell/shell.c ****  * @param value 数值
 426:SYS/shell/shell.c ****  * @param buffer 缓冲
 427:SYS/shell/shell.c ****  * 
 428:SYS/shell/shell.c ****  * @return signed char 转换后有效数据长度
 429:SYS/shell/shell.c ****  */
 430:SYS/shell/shell.c **** signed char shellToDec(int value, char *buffer)
 431:SYS/shell/shell.c **** {
 432:SYS/shell/shell.c ****     unsigned char i = 11;
 433:SYS/shell/shell.c ****     int v = value;
 434:SYS/shell/shell.c ****     if (value < 0)
 435:SYS/shell/shell.c ****     {
 436:SYS/shell/shell.c ****         v = -value;
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 10


 437:SYS/shell/shell.c ****     }
 438:SYS/shell/shell.c ****     buffer[11] = 0;
 439:SYS/shell/shell.c ****     while (v)
 440:SYS/shell/shell.c ****     {
 441:SYS/shell/shell.c ****         buffer[--i] = v % 10 + 48;
 442:SYS/shell/shell.c ****         v /= 10;
 443:SYS/shell/shell.c ****     }
 444:SYS/shell/shell.c ****     if (value < 0)
 445:SYS/shell/shell.c ****     {
 446:SYS/shell/shell.c ****         buffer[--i] = '-';
 447:SYS/shell/shell.c ****     }
 448:SYS/shell/shell.c ****     if (value == 0)
 449:SYS/shell/shell.c ****     {
 450:SYS/shell/shell.c ****         buffer[--i] = '0';
 451:SYS/shell/shell.c ****     }
 452:SYS/shell/shell.c ****     return 11 - i;
 453:SYS/shell/shell.c **** }
 454:SYS/shell/shell.c **** 
 455:SYS/shell/shell.c **** /**
 456:SYS/shell/shell.c ****  * @brief shell字符串复制
 457:SYS/shell/shell.c ****  * 
 458:SYS/shell/shell.c ****  * @param dest 目标字符串
 459:SYS/shell/shell.c ****  * @param src 源字符串
 460:SYS/shell/shell.c ****  * @return unsigned short 字符串长度
 461:SYS/shell/shell.c ****  */
 462:SYS/shell/shell.c **** static unsigned short shellStringCopy(char *dest, char *src)
 463:SYS/shell/shell.c **** {
  79              		.loc 1 463 0 is_stmt 1
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL6:
  85 0000 10B4     		push	{r4}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 4, -4
  89 0002 0446     		mov	r4, r0
  90              	.LVL7:
 464:SYS/shell/shell.c ****     unsigned short count = 0;
  91              		.loc 1 464 0
  92 0004 0020     		movs	r0, #0
  93              	.LVL8:
 465:SYS/shell/shell.c ****     while (*(src + count))
  94              		.loc 1 465 0
  95 0006 02E0     		b	.L9
  96              	.LVL9:
  97              	.L10:
 466:SYS/shell/shell.c ****     {
 467:SYS/shell/shell.c ****         *(dest + count) = *(src + count);
  98              		.loc 1 467 0
  99 0008 2354     		strb	r3, [r4, r0]
 468:SYS/shell/shell.c ****         count++;
 100              		.loc 1 468 0
 101 000a 0130     		adds	r0, r0, #1
 102              	.LVL10:
 103 000c 80B2     		uxth	r0, r0
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 11


 104              	.LVL11:
 105              	.L9:
 465:SYS/shell/shell.c ****     while (*(src + count))
 106              		.loc 1 465 0
 107 000e 0B5C     		ldrb	r3, [r1, r0]	@ zero_extendqisi2
 108 0010 002B     		cmp	r3, #0
 109 0012 F9D1     		bne	.L10
 469:SYS/shell/shell.c ****     }
 470:SYS/shell/shell.c ****     *(dest + count) = 0;
 110              		.loc 1 470 0
 111 0014 2354     		strb	r3, [r4, r0]
 471:SYS/shell/shell.c ****     return count;
 472:SYS/shell/shell.c **** }
 112              		.loc 1 472 0
 113 0016 5DF8044B 		ldr	r4, [sp], #4
 114              	.LCFI1:
 115              		.cfi_restore 4
 116              		.cfi_def_cfa_offset 0
 117              	.LVL12:
 118 001a 7047     		bx	lr
 119              		.cfi_endproc
 120              	.LFE136:
 122              		.section	.text.shellStringCompare,"ax",%progbits
 123              		.align	2
 124              		.thumb
 125              		.thumb_func
 127              	shellStringCompare:
 128              	.LFB137:
 473:SYS/shell/shell.c **** 
 474:SYS/shell/shell.c **** /**
 475:SYS/shell/shell.c ****  * @brief shell字符串比较
 476:SYS/shell/shell.c ****  * 
 477:SYS/shell/shell.c ****  * @param dest 目标字符串
 478:SYS/shell/shell.c ****  * @param src 源字符串
 479:SYS/shell/shell.c ****  * @return unsigned short 匹配长度
 480:SYS/shell/shell.c ****  */
 481:SYS/shell/shell.c **** static unsigned short shellStringCompare(char *dest, char *src)
 482:SYS/shell/shell.c **** {
 129              		.loc 1 482 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              	.LVL13:
 135 0000 30B4     		push	{r4, r5}
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 4, -8
 139              		.cfi_offset 5, -4
 140 0002 0546     		mov	r5, r0
 141              	.LVL14:
 483:SYS/shell/shell.c ****     unsigned short match = 0;
 484:SYS/shell/shell.c ****     unsigned short i = 0;
 142              		.loc 1 484 0
 143 0004 0023     		movs	r3, #0
 483:SYS/shell/shell.c ****     unsigned short match = 0;
 144              		.loc 1 483 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 12


 145 0006 1846     		mov	r0, r3
 146              	.LVL15:
 485:SYS/shell/shell.c **** 
 486:SYS/shell/shell.c ****     while (*(dest + i) && *(src + i))
 147              		.loc 1 486 0
 148 0008 05E0     		b	.L13
 149              	.LVL16:
 150              	.L15:
 487:SYS/shell/shell.c ****     {
 488:SYS/shell/shell.c ****         if (*(dest + i) != *(src + i))
 151              		.loc 1 488 0
 152 000a A242     		cmp	r2, r4
 153 000c 08D1     		bne	.L14
 489:SYS/shell/shell.c ****         {
 490:SYS/shell/shell.c ****             break;
 491:SYS/shell/shell.c ****         }
 492:SYS/shell/shell.c ****         match++;
 154              		.loc 1 492 0
 155 000e 0130     		adds	r0, r0, #1
 156              	.LVL17:
 157 0010 80B2     		uxth	r0, r0
 158              	.LVL18:
 493:SYS/shell/shell.c ****         i++;
 159              		.loc 1 493 0
 160 0012 0133     		adds	r3, r3, #1
 161              	.LVL19:
 162 0014 9BB2     		uxth	r3, r3
 163              	.LVL20:
 164              	.L13:
 486:SYS/shell/shell.c ****     {
 165              		.loc 1 486 0
 166 0016 EA5C     		ldrb	r2, [r5, r3]	@ zero_extendqisi2
 167 0018 12B1     		cbz	r2, .L14
 486:SYS/shell/shell.c ****     {
 168              		.loc 1 486 0 is_stmt 0 discriminator 1
 169 001a CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 170 001c 002C     		cmp	r4, #0
 171 001e F4D1     		bne	.L15
 172              	.L14:
 494:SYS/shell/shell.c ****     }
 495:SYS/shell/shell.c ****     return match;
 496:SYS/shell/shell.c **** }
 173              		.loc 1 496 0 is_stmt 1
 174 0020 30BC     		pop	{r4, r5}
 175              	.LCFI3:
 176              		.cfi_restore 5
 177              		.cfi_restore 4
 178              		.cfi_def_cfa_offset 0
 179              	.LVL21:
 180 0022 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE137:
 184              		.section	.text.shellGetCommandDesc,"ax",%progbits
 185              		.align	2
 186              		.thumb
 187              		.thumb_func
 189              	shellGetCommandDesc:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 13


 190              	.LFB139:
 497:SYS/shell/shell.c **** 
 498:SYS/shell/shell.c **** /**
 499:SYS/shell/shell.c ****  * @brief shell获取命令名
 500:SYS/shell/shell.c ****  * 
 501:SYS/shell/shell.c ****  * @param command 命令
 502:SYS/shell/shell.c ****  * @return const char* 命令名
 503:SYS/shell/shell.c ****  */
 504:SYS/shell/shell.c **** static const char *shellGetCommandName(ShellCommand *command)
 505:SYS/shell/shell.c **** {
 506:SYS/shell/shell.c ****     static char buffer[9];
 507:SYS/shell/shell.c ****     for (unsigned char i = 0; i < 9; i++)
 508:SYS/shell/shell.c ****     {
 509:SYS/shell/shell.c ****         buffer[i] = '0';
 510:SYS/shell/shell.c ****     }
 511:SYS/shell/shell.c ****     if (command->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 512:SYS/shell/shell.c ****     {
 513:SYS/shell/shell.c ****         return command->data.cmd.name;
 514:SYS/shell/shell.c ****     }
 515:SYS/shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 516:SYS/shell/shell.c ****     {
 517:SYS/shell/shell.c ****         return command->data.var.name;
 518:SYS/shell/shell.c ****     }
 519:SYS/shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_USER)
 520:SYS/shell/shell.c ****     {
 521:SYS/shell/shell.c ****         return command->data.user.name;
 522:SYS/shell/shell.c ****     }
 523:SYS/shell/shell.c ****     else
 524:SYS/shell/shell.c ****     {
 525:SYS/shell/shell.c ****         shellToHex(command->data.key.value, buffer);
 526:SYS/shell/shell.c ****         return buffer;
 527:SYS/shell/shell.c ****     }
 528:SYS/shell/shell.c **** }
 529:SYS/shell/shell.c **** 
 530:SYS/shell/shell.c **** /**
 531:SYS/shell/shell.c ****  * @brief shell获取命令描述
 532:SYS/shell/shell.c ****  * 
 533:SYS/shell/shell.c ****  * @param command 命令
 534:SYS/shell/shell.c ****  * @return const char* 命令描述
 535:SYS/shell/shell.c ****  */
 536:SYS/shell/shell.c **** static const char *shellGetCommandDesc(ShellCommand *command)
 537:SYS/shell/shell.c **** {
 191              		.loc 1 537 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL22:
 538:SYS/shell/shell.c ****     if (command->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 197              		.loc 1 538 0
 198 0000 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 199 0002 03F00F03 		and	r3, r3, #15
 200 0006 012B     		cmp	r3, #1
 201 0008 01DC     		bgt	.L18
 539:SYS/shell/shell.c ****     {
 540:SYS/shell/shell.c ****         return command->data.cmd.desc;
 202              		.loc 1 540 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 14


 203 000a C068     		ldr	r0, [r0, #12]
 204              	.LVL23:
 205 000c 7047     		bx	lr
 206              	.LVL24:
 207              	.L18:
 541:SYS/shell/shell.c ****     }
 542:SYS/shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 208              		.loc 1 542 0
 209 000e 072B     		cmp	r3, #7
 210 0010 01DC     		bgt	.L20
 543:SYS/shell/shell.c ****     {
 544:SYS/shell/shell.c ****         return command->data.var.desc;
 211              		.loc 1 544 0
 212 0012 C068     		ldr	r0, [r0, #12]
 213              	.LVL25:
 214 0014 7047     		bx	lr
 215              	.LVL26:
 216              	.L20:
 545:SYS/shell/shell.c ****     }
 546:SYS/shell/shell.c ****     else if (command->attr.attrs.type <= SHELL_TYPE_USER)
 217              		.loc 1 546 0
 218 0016 082B     		cmp	r3, #8
 219 0018 01DC     		bgt	.L21
 547:SYS/shell/shell.c ****     {
 548:SYS/shell/shell.c ****         return command->data.user.desc;
 220              		.loc 1 548 0
 221 001a C068     		ldr	r0, [r0, #12]
 222              	.LVL27:
 223 001c 7047     		bx	lr
 224              	.LVL28:
 225              	.L21:
 549:SYS/shell/shell.c ****     }
 550:SYS/shell/shell.c ****     else
 551:SYS/shell/shell.c ****     {
 552:SYS/shell/shell.c ****         return command->data.key.desc;
 226              		.loc 1 552 0
 227 001e C068     		ldr	r0, [r0, #12]
 228              	.LVL29:
 553:SYS/shell/shell.c ****     }
 554:SYS/shell/shell.c **** }
 229              		.loc 1 554 0
 230 0020 7047     		bx	lr
 231              		.cfi_endproc
 232              	.LFE139:
 234 0022 00BF     		.section	.text.shellParserParam,"ax",%progbits
 235              		.align	2
 236              		.thumb
 237              		.thumb_func
 239              	shellParserParam:
 240              	.LFB150:
 555:SYS/shell/shell.c **** 
 556:SYS/shell/shell.c **** /**
 557:SYS/shell/shell.c ****  * @brief shell 列出命令条目
 558:SYS/shell/shell.c ****  * 
 559:SYS/shell/shell.c ****  * @param shell shell对象
 560:SYS/shell/shell.c ****  * @param item 命令条目
 561:SYS/shell/shell.c ****  */
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 15


 562:SYS/shell/shell.c **** void shellListItem(Shell *shell, ShellCommand *item)
 563:SYS/shell/shell.c **** {
 564:SYS/shell/shell.c ****     short spaceLength;
 565:SYS/shell/shell.c **** 
 566:SYS/shell/shell.c ****     spaceLength = 22 - shellWriteString(shell, shellGetCommandName(item));
 567:SYS/shell/shell.c ****     spaceLength = (spaceLength > 0) ? spaceLength : 4;
 568:SYS/shell/shell.c ****     do
 569:SYS/shell/shell.c ****     {
 570:SYS/shell/shell.c ****         shellWriteByte(shell, '-');
 571:SYS/shell/shell.c ****     } while (--spaceLength);
 572:SYS/shell/shell.c ****     if (item->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 573:SYS/shell/shell.c ****     {
 574:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_CMD]);
 575:SYS/shell/shell.c ****     }
 576:SYS/shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_VAR_NODE)
 577:SYS/shell/shell.c ****     {
 578:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_VAR]);
 579:SYS/shell/shell.c ****     }
 580:SYS/shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_USER)
 581:SYS/shell/shell.c ****     {
 582:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_USER]);
 583:SYS/shell/shell.c ****     }
 584:SYS/shell/shell.c ****     else if (item->attr.attrs.type <= SHELL_TYPE_KEY)
 585:SYS/shell/shell.c ****     {
 586:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_KEY]);
 587:SYS/shell/shell.c ****     }
 588:SYS/shell/shell.c ****     else
 589:SYS/shell/shell.c ****     {
 590:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_TYPE_NONE]);
 591:SYS/shell/shell.c ****     }
 592:SYS/shell/shell.c **** #if SHELL_HELP_SHOW_PERMISSION == 1
 593:SYS/shell/shell.c ****     shellWriteString(shell, " ");
 594:SYS/shell/shell.c ****     for (signed char i = 7; i >= 0; i--)
 595:SYS/shell/shell.c ****     {
 596:SYS/shell/shell.c ****         shellWriteByte(shell, item->attr.attrs.permission & (1 << i) ? 'x' : '-');
 597:SYS/shell/shell.c ****     }
 598:SYS/shell/shell.c **** #endif
 599:SYS/shell/shell.c ****     // shellWriteString(shell, " ");
 600:SYS/shell/shell.c ****     // shellWriteCommandDesc(shell, shellGetCommandDesc(item));
 601:SYS/shell/shell.c ****     // shellWriteString(shell, "\r\n");
 602:SYS/shell/shell.c **** }
 603:SYS/shell/shell.c **** 
 604:SYS/shell/shell.c **** /**
 605:SYS/shell/shell.c ****  * @brief shell列出可执行命令
 606:SYS/shell/shell.c ****  * 
 607:SYS/shell/shell.c ****  * @param shell shell对象
 608:SYS/shell/shell.c ****  */
 609:SYS/shell/shell.c **** void shellListCommand(Shell *shell)
 610:SYS/shell/shell.c **** {
 611:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 612:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CMD_LIST]);
 613:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 614:SYS/shell/shell.c ****     {
 615:SYS/shell/shell.c ****         if (base[i].attr.attrs.type <= SHELL_TYPE_CMD_FUNC && shellCheckPermission(shell, &base[i])
 616:SYS/shell/shell.c ****         {
 617:SYS/shell/shell.c ****             shellListItem(shell, &base[i]);
 618:SYS/shell/shell.c ****         }
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 16


 619:SYS/shell/shell.c ****     }
 620:SYS/shell/shell.c **** }
 621:SYS/shell/shell.c **** 
 622:SYS/shell/shell.c **** /**
 623:SYS/shell/shell.c ****  * @brief shell列出变量
 624:SYS/shell/shell.c ****  * 
 625:SYS/shell/shell.c ****  * @param shell shell对象
 626:SYS/shell/shell.c ****  */
 627:SYS/shell/shell.c **** void shellListVar(Shell *shell)
 628:SYS/shell/shell.c **** {
 629:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 630:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_VAR_LIST]);
 631:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 632:SYS/shell/shell.c ****     {
 633:SYS/shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_CMD_FUNC && base[i].attr.attrs.type <= SHELL_TYPE_
 634:SYS/shell/shell.c ****         {
 635:SYS/shell/shell.c ****             shellListItem(shell, &base[i]);
 636:SYS/shell/shell.c ****         }
 637:SYS/shell/shell.c ****     }
 638:SYS/shell/shell.c **** }
 639:SYS/shell/shell.c **** 
 640:SYS/shell/shell.c **** /**
 641:SYS/shell/shell.c ****  * @brief shell列出用户
 642:SYS/shell/shell.c ****  * 
 643:SYS/shell/shell.c ****  * @param shell shell对象
 644:SYS/shell/shell.c ****  */
 645:SYS/shell/shell.c **** void shellListUser(Shell *shell)
 646:SYS/shell/shell.c **** {
 647:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 648:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_USER_LIST]);
 649:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 650:SYS/shell/shell.c ****     {
 651:SYS/shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_VAR_NODE && base[i].attr.attrs.type <= SHELL_TYPE_
 652:SYS/shell/shell.c ****         {
 653:SYS/shell/shell.c ****             shellListItem(shell, &base[i]);
 654:SYS/shell/shell.c ****         }
 655:SYS/shell/shell.c ****     }
 656:SYS/shell/shell.c **** }
 657:SYS/shell/shell.c **** 
 658:SYS/shell/shell.c **** /**
 659:SYS/shell/shell.c ****  * @brief shell列出按键
 660:SYS/shell/shell.c ****  * 
 661:SYS/shell/shell.c ****  * @param shell shell对象
 662:SYS/shell/shell.c ****  */
 663:SYS/shell/shell.c **** void shellListKey(Shell *shell)
 664:SYS/shell/shell.c **** {
 665:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 666:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_KEY_LIST]);
 667:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 668:SYS/shell/shell.c ****     {
 669:SYS/shell/shell.c ****         if (base[i].attr.attrs.type > SHELL_TYPE_USER && base[i].attr.attrs.type <= SHELL_TYPE_KEY 
 670:SYS/shell/shell.c ****         {
 671:SYS/shell/shell.c ****             shellListItem(shell, &base[i]);
 672:SYS/shell/shell.c ****         }
 673:SYS/shell/shell.c ****     }
 674:SYS/shell/shell.c **** }
 675:SYS/shell/shell.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 17


 676:SYS/shell/shell.c **** /**
 677:SYS/shell/shell.c ****  * @brief shell列出所有命令
 678:SYS/shell/shell.c ****  * 
 679:SYS/shell/shell.c ****  * @param shell shell对象
 680:SYS/shell/shell.c ****  */
 681:SYS/shell/shell.c **** void shellListAll(Shell *shell)
 682:SYS/shell/shell.c **** {
 683:SYS/shell/shell.c **** #if SHELL_HELP_LIST_USER == 1
 684:SYS/shell/shell.c ****     shellListUser(shell);
 685:SYS/shell/shell.c **** #endif
 686:SYS/shell/shell.c ****     shellListCommand(shell);
 687:SYS/shell/shell.c **** #if SHELL_HELP_LIST_VAR == 1
 688:SYS/shell/shell.c ****     shellListVar(shell);
 689:SYS/shell/shell.c **** #endif
 690:SYS/shell/shell.c **** #if SHELL_HELP_LIST_KEY == 1
 691:SYS/shell/shell.c ****     shellListKey(shell);
 692:SYS/shell/shell.c **** #endif
 693:SYS/shell/shell.c **** }
 694:SYS/shell/shell.c **** 
 695:SYS/shell/shell.c **** /**
 696:SYS/shell/shell.c ****  * @brief shell删除命令行数据
 697:SYS/shell/shell.c ****  * 
 698:SYS/shell/shell.c ****  * @param shell shell对象
 699:SYS/shell/shell.c ****  * @param length 删除长度
 700:SYS/shell/shell.c ****  */
 701:SYS/shell/shell.c **** void shellDeleteCommandLine(Shell *shell, unsigned char length)
 702:SYS/shell/shell.c **** {
 703:SYS/shell/shell.c ****     while (length--)
 704:SYS/shell/shell.c ****     {
 705:SYS/shell/shell.c ****         shellWriteString(shell, "\b \b");
 706:SYS/shell/shell.c ****     }
 707:SYS/shell/shell.c **** }
 708:SYS/shell/shell.c **** 
 709:SYS/shell/shell.c **** /**
 710:SYS/shell/shell.c ****  * @brief shell 清空命令行输入
 711:SYS/shell/shell.c ****  * 
 712:SYS/shell/shell.c ****  * @param shell shell对象
 713:SYS/shell/shell.c ****  */
 714:SYS/shell/shell.c **** void shellClearCommandLine(Shell *shell)
 715:SYS/shell/shell.c **** {
 716:SYS/shell/shell.c ****     for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 717:SYS/shell/shell.c ****     {
 718:SYS/shell/shell.c ****         shellWriteByte(shell, ' ');
 719:SYS/shell/shell.c ****     }
 720:SYS/shell/shell.c ****     shellDeleteCommandLine(shell, shell->parser.length);
 721:SYS/shell/shell.c **** }
 722:SYS/shell/shell.c **** 
 723:SYS/shell/shell.c **** /**
 724:SYS/shell/shell.c ****  * @brief shell插入一个字符到光标位置
 725:SYS/shell/shell.c ****  * 
 726:SYS/shell/shell.c ****  * @param shell shell对象
 727:SYS/shell/shell.c ****  * @param data 字符数据
 728:SYS/shell/shell.c ****  */
 729:SYS/shell/shell.c **** void shellInsertByte(Shell *shell, char data)
 730:SYS/shell/shell.c **** {
 731:SYS/shell/shell.c ****     /* 判断输入数据是否过长 */
 732:SYS/shell/shell.c ****     if (shell->parser.length >= shell->parser.bufferSize - 1)
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 18


 733:SYS/shell/shell.c ****     {
 734:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CMD_TOO_LONG]);
 735:SYS/shell/shell.c ****         shellWriteCommandLine(shell, 1);
 736:SYS/shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 737:SYS/shell/shell.c ****         return;
 738:SYS/shell/shell.c ****     }
 739:SYS/shell/shell.c **** 
 740:SYS/shell/shell.c ****     /* 插入数据 */
 741:SYS/shell/shell.c ****     if (shell->parser.cursor == shell->parser.length)
 742:SYS/shell/shell.c ****     {
 743:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length++] = data;
 744:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 745:SYS/shell/shell.c ****         shell->parser.cursor++;
 746:SYS/shell/shell.c ****         shellWriteByte(shell, data);
 747:SYS/shell/shell.c ****     }
 748:SYS/shell/shell.c ****     else if (shell->parser.cursor < shell->parser.length)
 749:SYS/shell/shell.c ****     {
 750:SYS/shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 751:SYS/shell/shell.c ****         {
 752:SYS/shell/shell.c ****             shell->parser.buffer[shell->parser.cursor + i] =
 753:SYS/shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 754:SYS/shell/shell.c ****         }
 755:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.cursor++] = data;
 756:SYS/shell/shell.c ****         shell->parser.buffer[++shell->parser.length] = 0;
 757:SYS/shell/shell.c ****         for (short i = shell->parser.cursor - 1; i < shell->parser.length; i++)
 758:SYS/shell/shell.c ****         {
 759:SYS/shell/shell.c ****             shellWriteByte(shell, shell->parser.buffer[i]);
 760:SYS/shell/shell.c ****         }
 761:SYS/shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 762:SYS/shell/shell.c ****         {
 763:SYS/shell/shell.c ****             shellWriteByte(shell, '\b');
 764:SYS/shell/shell.c ****         }
 765:SYS/shell/shell.c ****     }
 766:SYS/shell/shell.c **** }
 767:SYS/shell/shell.c **** 
 768:SYS/shell/shell.c **** /**
 769:SYS/shell/shell.c ****  * @brief shell 删除字节
 770:SYS/shell/shell.c ****  * 
 771:SYS/shell/shell.c ****  * @param shell shell对象
 772:SYS/shell/shell.c ****  * @param direction 删除方向 {@code 1}删除光标前字符 {@code -1}删除光标处字符
 773:SYS/shell/shell.c ****  */
 774:SYS/shell/shell.c **** void shellDeleteByte(Shell *shell, signed char direction)
 775:SYS/shell/shell.c **** {
 776:SYS/shell/shell.c ****     char offset = (direction == -1) ? 1 : 0;
 777:SYS/shell/shell.c **** 
 778:SYS/shell/shell.c ****     if ((shell->parser.cursor == 0 && direction == 1) || (shell->parser.cursor == shell->parser.len
 779:SYS/shell/shell.c ****     {
 780:SYS/shell/shell.c ****         return;
 781:SYS/shell/shell.c ****     }
 782:SYS/shell/shell.c ****     if (shell->parser.cursor == shell->parser.length && direction == 1)
 783:SYS/shell/shell.c ****     {
 784:SYS/shell/shell.c ****         shell->parser.cursor--;
 785:SYS/shell/shell.c ****         shell->parser.length--;
 786:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 787:SYS/shell/shell.c ****         shellDeleteCommandLine(shell, 1);
 788:SYS/shell/shell.c ****     }
 789:SYS/shell/shell.c ****     else
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 19


 790:SYS/shell/shell.c ****     {
 791:SYS/shell/shell.c ****         for (short i = offset; i < shell->parser.length - shell->parser.cursor; i++)
 792:SYS/shell/shell.c ****         {
 793:SYS/shell/shell.c ****             shell->parser.buffer[shell->parser.cursor + i - 1] =
 794:SYS/shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 795:SYS/shell/shell.c ****         }
 796:SYS/shell/shell.c ****         shell->parser.length--;
 797:SYS/shell/shell.c ****         if (!offset)
 798:SYS/shell/shell.c ****         {
 799:SYS/shell/shell.c ****             shell->parser.cursor--;
 800:SYS/shell/shell.c ****             shellWriteByte(shell, '\b');
 801:SYS/shell/shell.c ****         }
 802:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 803:SYS/shell/shell.c ****         for (short i = shell->parser.cursor; i < shell->parser.length; i++)
 804:SYS/shell/shell.c ****         {
 805:SYS/shell/shell.c ****             shellWriteByte(shell, shell->parser.buffer[i]);
 806:SYS/shell/shell.c ****         }
 807:SYS/shell/shell.c ****         shellWriteByte(shell, ' ');
 808:SYS/shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor + 1; i > 0; i--)
 809:SYS/shell/shell.c ****         {
 810:SYS/shell/shell.c ****             shellWriteByte(shell, '\b');
 811:SYS/shell/shell.c ****         }
 812:SYS/shell/shell.c ****     }
 813:SYS/shell/shell.c **** }
 814:SYS/shell/shell.c **** 
 815:SYS/shell/shell.c **** /**
 816:SYS/shell/shell.c ****  * @brief shell 解析参数
 817:SYS/shell/shell.c ****  * 
 818:SYS/shell/shell.c ****  * @param shell shell对象
 819:SYS/shell/shell.c ****  */
 820:SYS/shell/shell.c **** static void shellParserParam(Shell *shell)
 821:SYS/shell/shell.c **** {
 241              		.loc 1 821 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246              	.LVL30:
 247              	.LBB3:
 822:SYS/shell/shell.c ****     unsigned char quotes = 0;
 823:SYS/shell/shell.c ****     unsigned char record = 1;
 824:SYS/shell/shell.c **** 
 825:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_PARAMETER_MAX_NUMBER; i++)
 248              		.loc 1 825 0
 249 0000 0023     		movs	r3, #0
 250 0002 06E0     		b	.L23
 251              	.LVL31:
 252              	.L24:
 826:SYS/shell/shell.c ****     {
 827:SYS/shell/shell.c ****         shell->parser.param[i] = NULL;
 253              		.loc 1 827 0 discriminator 3
 254 0004 1A1D     		adds	r2, r3, #4
 255 0006 00EB8202 		add	r2, r0, r2, lsl #2
 256 000a 0021     		movs	r1, #0
 257 000c 5160     		str	r1, [r2, #4]
 825:SYS/shell/shell.c ****     {
 258              		.loc 1 825 0 discriminator 3
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 20


 259 000e 0133     		adds	r3, r3, #1
 260              	.LVL32:
 261 0010 1BB2     		sxth	r3, r3
 262              	.LVL33:
 263              	.L23:
 825:SYS/shell/shell.c ****     {
 264              		.loc 1 825 0 is_stmt 0 discriminator 1
 265 0012 072B     		cmp	r3, #7
 266 0014 F6DD     		ble	.L24
 267              	.LBE3:
 821:SYS/shell/shell.c ****     unsigned char quotes = 0;
 268              		.loc 1 821 0 is_stmt 1
 269 0016 F0B4     		push	{r4, r5, r6, r7}
 270              	.LCFI4:
 271              		.cfi_def_cfa_offset 16
 272              		.cfi_offset 4, -16
 273              		.cfi_offset 5, -12
 274              		.cfi_offset 6, -8
 275              		.cfi_offset 7, -4
 828:SYS/shell/shell.c ****     }
 829:SYS/shell/shell.c **** 
 830:SYS/shell/shell.c ****     shell->parser.paramCount = 0;
 276              		.loc 1 830 0
 277 0018 0021     		movs	r1, #0
 278 001a C186     		strh	r1, [r0, #54]	@ movhi
 279              	.LVL34:
 280              	.LBB4:
 831:SYS/shell/shell.c ****     for (unsigned short i = 0; i < shell->parser.length; i++)
 281              		.loc 1 831 0
 282 001c 0B46     		mov	r3, r1
 283              	.LVL35:
 284              	.LBE4:
 823:SYS/shell/shell.c **** 
 285              		.loc 1 823 0
 286 001e 0126     		movs	r6, #1
 287              	.LBB5:
 288              		.loc 1 831 0
 289 0020 29E0     		b	.L25
 290              	.LVL36:
 291              	.L31:
 832:SYS/shell/shell.c ****     {
 833:SYS/shell/shell.c ****         if (quotes != 0 || (shell->parser.buffer[i] != ' ' && shell->parser.buffer[i] != 0))
 292              		.loc 1 833 0
 293 0022 29B9     		cbnz	r1, .L26
 294              		.loc 1 833 0 is_stmt 0 discriminator 1
 295 0024 0269     		ldr	r2, [r0, #16]
 296 0026 D418     		adds	r4, r2, r3
 297 0028 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 298 002a 202A     		cmp	r2, #32
 299 002c 1ED0     		beq	.L27
 300              		.loc 1 833 0 discriminator 2
 301 002e EAB1     		cbz	r2, .L27
 302              	.L26:
 834:SYS/shell/shell.c ****         {
 835:SYS/shell/shell.c ****             if (shell->parser.buffer[i] == '\"')
 303              		.loc 1 835 0 is_stmt 1
 304 0030 0269     		ldr	r2, [r0, #16]
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 21


 305 0032 1F46     		mov	r7, r3
 306 0034 D418     		adds	r4, r2, r3
 307 0036 D55C     		ldrb	r5, [r2, r3]	@ zero_extendqisi2
 308 0038 222D     		cmp	r5, #34
 309 003a 01D1     		bne	.L28
 836:SYS/shell/shell.c ****             {
 837:SYS/shell/shell.c ****                 quotes = quotes ? 0 : 1;
 310              		.loc 1 837 0
 311 003c 81F00101 		eor	r1, r1, #1
 312              	.LVL37:
 313              	.L28:
 838:SYS/shell/shell.c ****             }
 839:SYS/shell/shell.c ****             if (record == 1)
 314              		.loc 1 839 0
 315 0040 5EB1     		cbz	r6, .L29
 840:SYS/shell/shell.c ****             {
 841:SYS/shell/shell.c ****                 if (shell->parser.paramCount < SHELL_PARAMETER_MAX_NUMBER)
 316              		.loc 1 841 0
 317 0042 C58E     		ldrh	r5, [r0, #54]
 318 0044 072D     		cmp	r5, #7
 319 0046 07D8     		bhi	.L32
 842:SYS/shell/shell.c ****                 {
 843:SYS/shell/shell.c ****                     shell->parser.param[shell->parser.paramCount++] =
 320              		.loc 1 843 0
 321 0048 6E1C     		adds	r6, r5, #1
 322              	.LVL38:
 323 004a C686     		strh	r6, [r0, #54]	@ movhi
 324 004c 0435     		adds	r5, r5, #4
 325 004e 00EB8505 		add	r5, r0, r5, lsl #2
 326 0052 6C60     		str	r4, [r5, #4]
 844:SYS/shell/shell.c ****                         &(shell->parser.buffer[i]);
 845:SYS/shell/shell.c ****                 }
 846:SYS/shell/shell.c ****                 record = 0;
 327              		.loc 1 846 0
 328 0054 0026     		movs	r6, #0
 329 0056 00E0     		b	.L29
 330              	.LVL39:
 331              	.L32:
 332 0058 0026     		movs	r6, #0
 333              	.LVL40:
 334              	.L29:
 847:SYS/shell/shell.c ****             }
 848:SYS/shell/shell.c ****             if (shell->parser.buffer[i] == '\\' && shell->parser.buffer[i + 1] != 0)
 335              		.loc 1 848 0
 336 005a 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 337 005c 5C2C     		cmp	r4, #92
 338 005e 08D1     		bne	.L30
 339              		.loc 1 848 0 is_stmt 0 discriminator 1
 340 0060 0137     		adds	r7, r7, #1
 341 0062 D25D     		ldrb	r2, [r2, r7]	@ zero_extendqisi2
 342 0064 2AB1     		cbz	r2, .L30
 849:SYS/shell/shell.c ****             {
 850:SYS/shell/shell.c ****                 i++;
 343              		.loc 1 850 0 is_stmt 1
 344 0066 0133     		adds	r3, r3, #1
 345              	.LVL41:
 346 0068 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 22


 347              	.LVL42:
 348 006a 02E0     		b	.L30
 349              	.L27:
 851:SYS/shell/shell.c ****             }
 852:SYS/shell/shell.c ****         }
 853:SYS/shell/shell.c ****         else
 854:SYS/shell/shell.c ****         {
 855:SYS/shell/shell.c ****             shell->parser.buffer[i] = 0;
 350              		.loc 1 855 0
 351 006c 0022     		movs	r2, #0
 352 006e 2270     		strb	r2, [r4]
 353              	.LVL43:
 856:SYS/shell/shell.c ****             record = 1;
 354              		.loc 1 856 0
 355 0070 0126     		movs	r6, #1
 356              	.LVL44:
 357              	.L30:
 831:SYS/shell/shell.c ****     {
 358              		.loc 1 831 0 discriminator 2
 359 0072 0133     		adds	r3, r3, #1
 360              	.LVL45:
 361 0074 9BB2     		uxth	r3, r3
 362              	.LVL46:
 363              	.L25:
 831:SYS/shell/shell.c ****     {
 364              		.loc 1 831 0 is_stmt 0 discriminator 1
 365 0076 8289     		ldrh	r2, [r0, #12]
 366 0078 9342     		cmp	r3, r2
 367 007a D2D3     		bcc	.L31
 368              	.LBE5:
 857:SYS/shell/shell.c ****         }
 858:SYS/shell/shell.c ****     }
 859:SYS/shell/shell.c **** }
 369              		.loc 1 859 0 is_stmt 1
 370 007c F0BC     		pop	{r4, r5, r6, r7}
 371              	.LCFI5:
 372              		.cfi_restore 7
 373              		.cfi_restore 6
 374              		.cfi_restore 5
 375              		.cfi_restore 4
 376              		.cfi_def_cfa_offset 0
 377              	.LVL47:
 378 007e 7047     		bx	lr
 379              		.cfi_endproc
 380              	.LFE150:
 382              		.section	.text.shellHistoryAdd,"ax",%progbits
 383              		.align	2
 384              		.thumb
 385              		.thumb_func
 387              	shellHistoryAdd:
 388              	.LFB161:
 860:SYS/shell/shell.c **** 
 861:SYS/shell/shell.c **** /**
 862:SYS/shell/shell.c ****  * @brief shell去除字符串参数头尾的双引号
 863:SYS/shell/shell.c ****  * 
 864:SYS/shell/shell.c ****  * @param shell shell对象
 865:SYS/shell/shell.c ****  */
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 23


 866:SYS/shell/shell.c **** static void shellRemoveParamQuotes(Shell *shell)
 867:SYS/shell/shell.c **** {
 868:SYS/shell/shell.c ****     unsigned short paramLength;
 869:SYS/shell/shell.c ****     for (unsigned short i = 0; i < shell->parser.paramCount; i++)
 870:SYS/shell/shell.c ****     {
 871:SYS/shell/shell.c ****         if (shell->parser.param[i][0] == '\"')
 872:SYS/shell/shell.c ****         {
 873:SYS/shell/shell.c ****             shell->parser.param[i][0] = 0;
 874:SYS/shell/shell.c ****             shell->parser.param[i] = &shell->parser.param[i][1];
 875:SYS/shell/shell.c ****         }
 876:SYS/shell/shell.c ****         paramLength = strlen(shell->parser.param[i]);
 877:SYS/shell/shell.c ****         if (shell->parser.param[i][paramLength - 1] == '\"')
 878:SYS/shell/shell.c ****         {
 879:SYS/shell/shell.c ****             shell->parser.param[i][paramLength - 1] = 0;
 880:SYS/shell/shell.c ****         }
 881:SYS/shell/shell.c ****     }
 882:SYS/shell/shell.c **** }
 883:SYS/shell/shell.c **** 
 884:SYS/shell/shell.c **** /**
 885:SYS/shell/shell.c ****  * @brief shell匹配命令
 886:SYS/shell/shell.c ****  * 
 887:SYS/shell/shell.c ****  * @param shell shell对象
 888:SYS/shell/shell.c ****  * @param cmd 命令
 889:SYS/shell/shell.c ****  * @param base 匹配命令表基址
 890:SYS/shell/shell.c ****  * @param compareLength 匹配字符串长度
 891:SYS/shell/shell.c ****  * @return ShellCommand* 匹配到的命令
 892:SYS/shell/shell.c ****  */
 893:SYS/shell/shell.c **** ShellCommand *shellSeekCommand(Shell *shell,
 894:SYS/shell/shell.c ****                                const char *cmd,
 895:SYS/shell/shell.c ****                                ShellCommand *base,
 896:SYS/shell/shell.c ****                                unsigned short compareLength)
 897:SYS/shell/shell.c **** {
 898:SYS/shell/shell.c ****     const char *name;
 899:SYS/shell/shell.c ****     int ret;
 900:SYS/shell/shell.c ****     unsigned short count = shell->commandList.count -
 901:SYS/shell/shell.c ****                            ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 902:SYS/shell/shell.c ****     for (unsigned short i = 0; i < count; i++)
 903:SYS/shell/shell.c ****     {
 904:SYS/shell/shell.c ****         if (base[i].attr.attrs.type == SHELL_TYPE_KEY || shellCheckPermission(shell, &base[i]) != 0
 905:SYS/shell/shell.c ****         {
 906:SYS/shell/shell.c ****             continue;
 907:SYS/shell/shell.c ****         }
 908:SYS/shell/shell.c ****         name = shellGetCommandName(&base[i]);
 909:SYS/shell/shell.c ****         if (!compareLength)
 910:SYS/shell/shell.c ****         {
 911:SYS/shell/shell.c ****             ret = strcmp(cmd, name);
 912:SYS/shell/shell.c ****             if (strcmp(cmd, name) == 0)
 913:SYS/shell/shell.c ****             {
 914:SYS/shell/shell.c ****                 return &base[i];
 915:SYS/shell/shell.c ****             }
 916:SYS/shell/shell.c ****         }
 917:SYS/shell/shell.c ****         else
 918:SYS/shell/shell.c ****         {
 919:SYS/shell/shell.c ****             if (strncmp(cmd, name, compareLength) == 0)
 920:SYS/shell/shell.c ****             {
 921:SYS/shell/shell.c ****                 return &base[i];
 922:SYS/shell/shell.c ****             }
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 24


 923:SYS/shell/shell.c ****         }
 924:SYS/shell/shell.c ****     }
 925:SYS/shell/shell.c ****     return NULL;
 926:SYS/shell/shell.c **** }
 927:SYS/shell/shell.c **** 
 928:SYS/shell/shell.c **** /**
 929:SYS/shell/shell.c ****  * @brief shell 获取变量值
 930:SYS/shell/shell.c ****  * 
 931:SYS/shell/shell.c ****  * @param shell shell对象
 932:SYS/shell/shell.c ****  * @param command 命令
 933:SYS/shell/shell.c ****  * @return int 变量值
 934:SYS/shell/shell.c ****  */
 935:SYS/shell/shell.c **** int shellGetVarValue(Shell *shell, ShellCommand *command)
 936:SYS/shell/shell.c **** {
 937:SYS/shell/shell.c ****     int value = 0;
 938:SYS/shell/shell.c ****     switch (command->attr.attrs.type)
 939:SYS/shell/shell.c ****     {
 940:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_INT:
 941:SYS/shell/shell.c ****         value = *((int *)(command->data.var.value));
 942:SYS/shell/shell.c ****         break;
 943:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_SHORT:
 944:SYS/shell/shell.c ****         value = *((short *)(command->data.var.value));
 945:SYS/shell/shell.c ****         break;
 946:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_CHAR:
 947:SYS/shell/shell.c ****         value = *((char *)(command->data.var.value));
 948:SYS/shell/shell.c ****         break;
 949:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
 950:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_POINT:
 951:SYS/shell/shell.c ****         value = (int)(command->data.var.value);
 952:SYS/shell/shell.c ****         break;
 953:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_NODE:
 954:SYS/shell/shell.c ****         value = ((ShellNodeVarAttr *)command->data.var.value)->get ? ((ShellNodeVarAttr *)command->
 955:SYS/shell/shell.c ****                                                                          ->get(((ShellNodeVarAttr *
 956:SYS/shell/shell.c ****                                                                    : 0;
 957:SYS/shell/shell.c ****         break;
 958:SYS/shell/shell.c ****     default:
 959:SYS/shell/shell.c ****         break;
 960:SYS/shell/shell.c ****     }
 961:SYS/shell/shell.c ****     return value;
 962:SYS/shell/shell.c **** }
 963:SYS/shell/shell.c **** 
 964:SYS/shell/shell.c **** /**
 965:SYS/shell/shell.c ****  * @brief shell设置变量值
 966:SYS/shell/shell.c ****  * 
 967:SYS/shell/shell.c ****  * @param shell shell对象
 968:SYS/shell/shell.c ****  * @param command 命令
 969:SYS/shell/shell.c ****  * @param value 值
 970:SYS/shell/shell.c ****  * @return int 返回变量值
 971:SYS/shell/shell.c ****  */
 972:SYS/shell/shell.c **** int shellSetVarValue(Shell *shell, ShellCommand *command, int value)
 973:SYS/shell/shell.c **** {
 974:SYS/shell/shell.c ****     if (command->attr.attrs.readOnly)
 975:SYS/shell/shell.c ****     {
 976:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_VAR_READ_ONLY_CANNOT_MODIFY]);
 977:SYS/shell/shell.c ****     }
 978:SYS/shell/shell.c ****     else
 979:SYS/shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 25


 980:SYS/shell/shell.c ****         switch (command->attr.attrs.type)
 981:SYS/shell/shell.c ****         {
 982:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_INT:
 983:SYS/shell/shell.c ****             *((int *)(command->data.var.value)) = value;
 984:SYS/shell/shell.c ****             break;
 985:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_SHORT:
 986:SYS/shell/shell.c ****             *((short *)(command->data.var.value)) = value;
 987:SYS/shell/shell.c ****             break;
 988:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_CHAR:
 989:SYS/shell/shell.c ****             *((char *)(command->data.var.value)) = value;
 990:SYS/shell/shell.c ****             break;
 991:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_STRING:
 992:SYS/shell/shell.c ****             shellStringCopy(((char *)(command->data.var.value)), (char *)value);
 993:SYS/shell/shell.c ****             break;
 994:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_POINT:
 995:SYS/shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_POINT_CANNOT_MODIFY]);
 996:SYS/shell/shell.c ****             break;
 997:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_NODE:
 998:SYS/shell/shell.c ****             if (((ShellNodeVarAttr *)command->data.var.value)->set)
 999:SYS/shell/shell.c ****             {
1000:SYS/shell/shell.c ****                 if (((ShellNodeVarAttr *)command->data.var.value)->var)
1001:SYS/shell/shell.c ****                 {
1002:SYS/shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)
1003:SYS/shell/shell.c ****                         ->set(((ShellNodeVarAttr *)command->data.var.value)->var, value);
1004:SYS/shell/shell.c ****                 }
1005:SYS/shell/shell.c ****                 else
1006:SYS/shell/shell.c ****                 {
1007:SYS/shell/shell.c ****                     ((ShellNodeVarAttr *)command->data.var.value)->set(value);
1008:SYS/shell/shell.c ****                 }
1009:SYS/shell/shell.c ****             }
1010:SYS/shell/shell.c ****             break;
1011:SYS/shell/shell.c ****         default:
1012:SYS/shell/shell.c ****             break;
1013:SYS/shell/shell.c ****         }
1014:SYS/shell/shell.c ****     }
1015:SYS/shell/shell.c ****     return shellShowVar(shell, command);
1016:SYS/shell/shell.c **** }
1017:SYS/shell/shell.c **** 
1018:SYS/shell/shell.c **** /**
1019:SYS/shell/shell.c ****  * @brief shell变量输出
1020:SYS/shell/shell.c ****  * 
1021:SYS/shell/shell.c ****  * @param shell shell对象
1022:SYS/shell/shell.c ****  * @param command 命令
1023:SYS/shell/shell.c ****  * @return int 返回变量值
1024:SYS/shell/shell.c ****  */
1025:SYS/shell/shell.c **** static int shellShowVar(Shell *shell, ShellCommand *command)
1026:SYS/shell/shell.c **** {
1027:SYS/shell/shell.c ****     char buffer[12] = "00000000000";
1028:SYS/shell/shell.c ****     int value = shellGetVarValue(shell, command);
1029:SYS/shell/shell.c **** 
1030:SYS/shell/shell.c ****     shellWriteString(shell, command->data.var.name);
1031:SYS/shell/shell.c ****     shellWriteString(shell, " = ");
1032:SYS/shell/shell.c **** 
1033:SYS/shell/shell.c ****     switch (command->attr.attrs.type)
1034:SYS/shell/shell.c ****     {
1035:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
1036:SYS/shell/shell.c ****         shellWriteString(shell, "\"");
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 26


1037:SYS/shell/shell.c ****         shellWriteString(shell, (char *)value);
1038:SYS/shell/shell.c ****         shellWriteString(shell, "\"");
1039:SYS/shell/shell.c ****         break;
1040:SYS/shell/shell.c ****     // case SHELL_TYPE_VAR_INT:
1041:SYS/shell/shell.c ****     // case SHELL_TYPE_VAR_SHORT:
1042:SYS/shell/shell.c ****     // case SHELL_TYPE_VAR_CHAR:
1043:SYS/shell/shell.c ****     // case SHELL_TYPE_VAR_POINT:
1044:SYS/shell/shell.c ****     default:
1045:SYS/shell/shell.c ****         shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
1046:SYS/shell/shell.c ****         shellWriteString(shell, ", 0x");
1047:SYS/shell/shell.c ****         for (short i = 0; i < 11; i++)
1048:SYS/shell/shell.c ****         {
1049:SYS/shell/shell.c ****             buffer[i] = '0';
1050:SYS/shell/shell.c ****         }
1051:SYS/shell/shell.c ****         shellToHex(value, buffer);
1052:SYS/shell/shell.c ****         shellWriteString(shell, buffer);
1053:SYS/shell/shell.c ****         break;
1054:SYS/shell/shell.c ****     }
1055:SYS/shell/shell.c **** 
1056:SYS/shell/shell.c ****     shellWriteString(shell, "\r\n");
1057:SYS/shell/shell.c ****     return value;
1058:SYS/shell/shell.c **** }
1059:SYS/shell/shell.c **** 
1060:SYS/shell/shell.c **** /**
1061:SYS/shell/shell.c ****  * @brief shell设置变量
1062:SYS/shell/shell.c ****  * 
1063:SYS/shell/shell.c ****  * @param name 变量名
1064:SYS/shell/shell.c ****  * @param value 变量值
1065:SYS/shell/shell.c ****  * @return int 返回变量值
1066:SYS/shell/shell.c ****  */
1067:SYS/shell/shell.c **** int shellSetVar(char *name, int value)
1068:SYS/shell/shell.c **** {
1069:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
1070:SYS/shell/shell.c ****     if (shell == NULL)
1071:SYS/shell/shell.c ****     {
1072:SYS/shell/shell.c ****         return 0;
1073:SYS/shell/shell.c ****     }
1074:SYS/shell/shell.c ****     ShellCommand *command = shellSeekCommand(shell,
1075:SYS/shell/shell.c ****                                              name,
1076:SYS/shell/shell.c ****                                              shell->commandList.base,
1077:SYS/shell/shell.c ****                                              0);
1078:SYS/shell/shell.c ****     if (!command)
1079:SYS/shell/shell.c ****     {
1080:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_VAR_NOT_FOUND]);
1081:SYS/shell/shell.c ****         return 0;
1082:SYS/shell/shell.c ****     }
1083:SYS/shell/shell.c ****     if (command->attr.attrs.type < SHELL_TYPE_VAR_INT || command->attr.attrs.type > SHELL_TYPE_VAR_
1084:SYS/shell/shell.c ****     {
1085:SYS/shell/shell.c ****         shellWriteString(shell, name);
1086:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_NOT_VAR]);
1087:SYS/shell/shell.c ****         return 0;
1088:SYS/shell/shell.c ****     }
1089:SYS/shell/shell.c ****     return shellSetVarValue(shell, command, value);
1090:SYS/shell/shell.c **** }
1091:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1092:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_RETURN,
1093:SYS/shell/shell.c ****     setVar, shellSetVar, set var);
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 27


1094:SYS/shell/shell.c **** 
1095:SYS/shell/shell.c **** /**
1096:SYS/shell/shell.c ****  * @brief shell运行命令
1097:SYS/shell/shell.c ****  * 
1098:SYS/shell/shell.c ****  * @param shell shell对象
1099:SYS/shell/shell.c ****  * @param command 命令
1100:SYS/shell/shell.c ****  * 
1101:SYS/shell/shell.c ****  * @return unsigned int 命令返回值
1102:SYS/shell/shell.c ****  */
1103:SYS/shell/shell.c **** unsigned int shellRunCommand(Shell *shell, ShellCommand *command)
1104:SYS/shell/shell.c **** {
1105:SYS/shell/shell.c ****     int returnValue = 0;
1106:SYS/shell/shell.c ****     shell->status.isActive = 1;
1107:SYS/shell/shell.c ****     if (command->attr.attrs.type == SHELL_TYPE_CMD_MAIN)
1108:SYS/shell/shell.c ****     {
1109:SYS/shell/shell.c ****         shellRemoveParamQuotes(shell);
1110:SYS/shell/shell.c ****         returnValue = command->data.cmd.function(shell->parser.paramCount,
1111:SYS/shell/shell.c ****                                                  shell->parser.param);
1112:SYS/shell/shell.c ****         if (!command->attr.attrs.disableReturn)
1113:SYS/shell/shell.c ****         {
1114:SYS/shell/shell.c ****             shellWriteReturnValue(shell, returnValue);
1115:SYS/shell/shell.c ****         }
1116:SYS/shell/shell.c ****     }
1117:SYS/shell/shell.c ****     else if (command->attr.attrs.type == SHELL_TYPE_CMD_FUNC)
1118:SYS/shell/shell.c ****     {
1119:SYS/shell/shell.c ****         returnValue = shellExtRun(shell,
1120:SYS/shell/shell.c ****                                   command,
1121:SYS/shell/shell.c ****                                   shell->parser.paramCount,
1122:SYS/shell/shell.c ****                                   shell->parser.param);
1123:SYS/shell/shell.c ****         if (!command->attr.attrs.disableReturn)
1124:SYS/shell/shell.c ****         {
1125:SYS/shell/shell.c ****             shellWriteReturnValue(shell, returnValue);
1126:SYS/shell/shell.c ****         }
1127:SYS/shell/shell.c ****     }
1128:SYS/shell/shell.c ****     else if (command->attr.attrs.type >= SHELL_TYPE_VAR_INT && command->attr.attrs.type <= SHELL_TY
1129:SYS/shell/shell.c ****     {
1130:SYS/shell/shell.c ****         shellShowVar(shell, command);
1131:SYS/shell/shell.c ****     }
1132:SYS/shell/shell.c ****     else if (command->attr.attrs.type == SHELL_TYPE_USER)
1133:SYS/shell/shell.c ****     {
1134:SYS/shell/shell.c ****         shellSetUser(shell, command);
1135:SYS/shell/shell.c ****     }
1136:SYS/shell/shell.c ****     shell->status.isActive = 0;
1137:SYS/shell/shell.c **** 
1138:SYS/shell/shell.c ****     return returnValue;
1139:SYS/shell/shell.c **** }
1140:SYS/shell/shell.c **** 
1141:SYS/shell/shell.c **** /**
1142:SYS/shell/shell.c ****  * @brief shell校验密码
1143:SYS/shell/shell.c ****  * 
1144:SYS/shell/shell.c ****  * @param shell shell对象
1145:SYS/shell/shell.c ****  */
1146:SYS/shell/shell.c **** static void shellCheckPassword(Shell *shell)
1147:SYS/shell/shell.c **** {
1148:SYS/shell/shell.c ****     if (strcmp(shell->parser.buffer, shell->info.user->data.user.password) == 0)
1149:SYS/shell/shell.c ****     {
1150:SYS/shell/shell.c ****         shell->status.isChecked = 1;
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 28


1151:SYS/shell/shell.c **** #if SHELL_SHOW_INFO == 1
1152:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_INFO]);
1153:SYS/shell/shell.c **** #endif
1154:SYS/shell/shell.c ****     }
1155:SYS/shell/shell.c ****     else
1156:SYS/shell/shell.c ****     {
1157:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_PASSWORD_ERROR]);
1158:SYS/shell/shell.c ****     }
1159:SYS/shell/shell.c ****     shell->parser.length = 0;
1160:SYS/shell/shell.c ****     shell->parser.cursor = 0;
1161:SYS/shell/shell.c **** }
1162:SYS/shell/shell.c **** 
1163:SYS/shell/shell.c **** /**
1164:SYS/shell/shell.c ****  * @brief shell设置用户
1165:SYS/shell/shell.c ****  * 
1166:SYS/shell/shell.c ****  * @param shell shell对象
1167:SYS/shell/shell.c ****  * @param user 用户
1168:SYS/shell/shell.c ****  */
1169:SYS/shell/shell.c **** static void shellSetUser(Shell *shell, const ShellCommand *user)
1170:SYS/shell/shell.c **** {
1171:SYS/shell/shell.c ****     shell->info.user = user;
1172:SYS/shell/shell.c ****     shell->status.isChecked =
1173:SYS/shell/shell.c ****         ((user->data.user.password && strlen(user->data.user.password) != 0) && (shell->parser.para
1174:SYS/shell/shell.c ****             ? 0
1175:SYS/shell/shell.c ****             : 1;
1176:SYS/shell/shell.c **** 
1177:SYS/shell/shell.c **** #if SHELL_CLS_WHEN_LOGIN == 1
1178:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_CONSOLE]);
1179:SYS/shell/shell.c **** #endif
1180:SYS/shell/shell.c **** #if SHELL_SHOW_INFO == 1
1181:SYS/shell/shell.c ****     if (shell->status.isChecked)
1182:SYS/shell/shell.c ****     {
1183:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_INFO]);
1184:SYS/shell/shell.c ****     }
1185:SYS/shell/shell.c **** #endif
1186:SYS/shell/shell.c **** }
1187:SYS/shell/shell.c **** 
1188:SYS/shell/shell.c **** /**
1189:SYS/shell/shell.c ****  * @brief shell写返回值
1190:SYS/shell/shell.c ****  * 
1191:SYS/shell/shell.c ****  * @param shell shell对象
1192:SYS/shell/shell.c ****  * @param value 返回值
1193:SYS/shell/shell.c ****  */
1194:SYS/shell/shell.c **** static void shellWriteReturnValue(Shell *shell, int value)
1195:SYS/shell/shell.c **** {
1196:SYS/shell/shell.c ****     char buffer[12] = "00000000000";
1197:SYS/shell/shell.c ****     shellWriteString(shell, "Return: ");
1198:SYS/shell/shell.c ****     shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
1199:SYS/shell/shell.c ****     shellWriteString(shell, ", 0x");
1200:SYS/shell/shell.c ****     for (short i = 0; i < 11; i++)
1201:SYS/shell/shell.c ****     {
1202:SYS/shell/shell.c ****         buffer[i] = '0';
1203:SYS/shell/shell.c ****     }
1204:SYS/shell/shell.c ****     shellToHex(value, buffer);
1205:SYS/shell/shell.c ****     shellWriteString(shell, buffer);
1206:SYS/shell/shell.c ****     shellWriteString(shell, "\r\n");
1207:SYS/shell/shell.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 29


1208:SYS/shell/shell.c **** 
1209:SYS/shell/shell.c **** /**
1210:SYS/shell/shell.c ****  * @brief shell历史记录添加
1211:SYS/shell/shell.c ****  * 
1212:SYS/shell/shell.c ****  * @param shell shell对象
1213:SYS/shell/shell.c ****  */
1214:SYS/shell/shell.c **** static void shellHistoryAdd(Shell *shell)
1215:SYS/shell/shell.c **** {
 389              		.loc 1 1215 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              	.LVL48:
 394 0000 10B5     		push	{r4, lr}
 395              	.LCFI6:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 4, -8
 398              		.cfi_offset 14, -4
 399 0002 0446     		mov	r4, r0
1216:SYS/shell/shell.c ****     shell->history.offset = 0;
 400              		.loc 1 1216 0
 401 0004 0023     		movs	r3, #0
 402 0006 A0F85430 		strh	r3, [r0, #84]	@ movhi
1217:SYS/shell/shell.c ****     if (shell->history.number > 0 && strcmp(shell->history.item[(shell->history.record == 0 ? SHELL
 403              		.loc 1 1217 0
 404 000a B0F85030 		ldrh	r3, [r0, #80]
 405 000e 6BB1     		cbz	r3, .L35
 406              		.loc 1 1217 0 is_stmt 0 discriminator 1
 407 0010 B0F85230 		ldrh	r3, [r0, #82]
 408 0014 0BB1     		cbz	r3, .L40
 409              		.loc 1 1217 0 discriminator 2
 410 0016 013B     		subs	r3, r3, #1
 411 0018 00E0     		b	.L36
 412              	.L40:
 413              		.loc 1 1217 0
 414 001a 0423     		movs	r3, #4
 415              	.L36:
 416              		.loc 1 1217 0 discriminator 5
 417 001c 0E33     		adds	r3, r3, #14
 418 001e 04EB8303 		add	r3, r4, r3, lsl #2
 419 0022 2169     		ldr	r1, [r4, #16]
 420 0024 5868     		ldr	r0, [r3, #4]
 421              	.LVL49:
 422 0026 FFF7FEFF 		bl	strcmp
 423              	.LVL50:
 424 002a 00B3     		cbz	r0, .L34
 425              	.L35:
1218:SYS/shell/shell.c ****                                             shell->parser.buffer) == 0)
1219:SYS/shell/shell.c ****     {
1220:SYS/shell/shell.c ****         return;
1221:SYS/shell/shell.c ****     }
1222:SYS/shell/shell.c ****     if (shellStringCopy(shell->history.item[shell->history.record],
 426              		.loc 1 1222 0 is_stmt 1
 427 002c B4F85230 		ldrh	r3, [r4, #82]
 428 0030 0E33     		adds	r3, r3, #14
 429 0032 04EB8303 		add	r3, r4, r3, lsl #2
 430 0036 2169     		ldr	r1, [r4, #16]
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 30


 431 0038 5868     		ldr	r0, [r3, #4]
 432 003a FFF7FEFF 		bl	shellStringCopy
 433              	.LVL51:
 434 003e 20B1     		cbz	r0, .L38
1223:SYS/shell/shell.c ****                         shell->parser.buffer) != 0)
1224:SYS/shell/shell.c ****     {
1225:SYS/shell/shell.c ****         shell->history.record++;
 435              		.loc 1 1225 0
 436 0040 B4F85230 		ldrh	r3, [r4, #82]
 437 0044 0133     		adds	r3, r3, #1
 438 0046 A4F85230 		strh	r3, [r4, #82]	@ movhi
 439              	.L38:
1226:SYS/shell/shell.c ****     }
1227:SYS/shell/shell.c ****     if (++shell->history.number > SHELL_HISTORY_MAX_NUMBER)
 440              		.loc 1 1227 0
 441 004a B4F85030 		ldrh	r3, [r4, #80]
 442 004e 0133     		adds	r3, r3, #1
 443 0050 9BB2     		uxth	r3, r3
 444 0052 A4F85030 		strh	r3, [r4, #80]	@ movhi
 445 0056 052B     		cmp	r3, #5
 446 0058 02D9     		bls	.L39
1228:SYS/shell/shell.c ****     {
1229:SYS/shell/shell.c ****         shell->history.number = SHELL_HISTORY_MAX_NUMBER;
 447              		.loc 1 1229 0
 448 005a 0523     		movs	r3, #5
 449 005c A4F85030 		strh	r3, [r4, #80]	@ movhi
 450              	.L39:
1230:SYS/shell/shell.c ****     }
1231:SYS/shell/shell.c ****     if (shell->history.record >= SHELL_HISTORY_MAX_NUMBER)
 451              		.loc 1 1231 0
 452 0060 B4F85230 		ldrh	r3, [r4, #82]
 453 0064 042B     		cmp	r3, #4
 454 0066 02D9     		bls	.L34
1232:SYS/shell/shell.c ****     {
1233:SYS/shell/shell.c ****         shell->history.record = 0;
 455              		.loc 1 1233 0
 456 0068 0023     		movs	r3, #0
 457 006a A4F85230 		strh	r3, [r4, #82]	@ movhi
 458              	.L34:
 459 006e 10BD     		pop	{r4, pc}
 460              		.cfi_endproc
 461              	.LFE161:
 463              		.section	.text.shellRemoveParamQuotes,"ax",%progbits
 464              		.align	2
 465              		.thumb
 466              		.thumb_func
 468              	shellRemoveParamQuotes:
 469              	.LFB151:
 867:SYS/shell/shell.c ****     unsigned short paramLength;
 470              		.loc 1 867 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              	.LVL52:
 475 0000 70B5     		push	{r4, r5, r6, lr}
 476              	.LCFI7:
 477              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 31


 478              		.cfi_offset 4, -16
 479              		.cfi_offset 5, -12
 480              		.cfi_offset 6, -8
 481              		.cfi_offset 14, -4
 482 0002 0546     		mov	r5, r0
 483              	.LVL53:
 484              	.LBB6:
 869:SYS/shell/shell.c ****     {
 485              		.loc 1 869 0
 486 0004 0024     		movs	r4, #0
 487 0006 1FE0     		b	.L43
 488              	.LVL54:
 489              	.L46:
 871:SYS/shell/shell.c ****         {
 490              		.loc 1 871 0
 491 0008 2346     		mov	r3, r4
 492 000a 221D     		adds	r2, r4, #4
 493 000c 05EB8202 		add	r2, r5, r2, lsl #2
 494 0010 5268     		ldr	r2, [r2, #4]
 495 0012 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 496 0014 2229     		cmp	r1, #34
 497 0016 07D1     		bne	.L44
 873:SYS/shell/shell.c ****             shell->parser.param[i] = &shell->parser.param[i][1];
 498              		.loc 1 873 0
 499 0018 0021     		movs	r1, #0
 500 001a 1170     		strb	r1, [r2]
 874:SYS/shell/shell.c ****         }
 501              		.loc 1 874 0
 502 001c 221D     		adds	r2, r4, #4
 503 001e 05EB8202 		add	r2, r5, r2, lsl #2
 504 0022 5168     		ldr	r1, [r2, #4]
 505 0024 0131     		adds	r1, r1, #1
 506 0026 5160     		str	r1, [r2, #4]
 507              	.L44:
 876:SYS/shell/shell.c ****         if (shell->parser.param[i][paramLength - 1] == '\"')
 508              		.loc 1 876 0
 509 0028 0433     		adds	r3, r3, #4
 510 002a 05EB8303 		add	r3, r5, r3, lsl #2
 511 002e 5E68     		ldr	r6, [r3, #4]
 512 0030 3046     		mov	r0, r6
 513 0032 FFF7FEFF 		bl	strlen
 514              	.LVL55:
 877:SYS/shell/shell.c ****         {
 515              		.loc 1 877 0
 516 0036 80B2     		uxth	r0, r0
 517 0038 0138     		subs	r0, r0, #1
 518              	.LVL56:
 519 003a 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
 520 003c 222B     		cmp	r3, #34
 521 003e 01D1     		bne	.L45
 879:SYS/shell/shell.c ****         }
 522              		.loc 1 879 0
 523 0040 0023     		movs	r3, #0
 524 0042 3354     		strb	r3, [r6, r0]
 525              	.L45:
 869:SYS/shell/shell.c ****     {
 526              		.loc 1 869 0 discriminator 2
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 32


 527 0044 0134     		adds	r4, r4, #1
 528              	.LVL57:
 529 0046 A4B2     		uxth	r4, r4
 530              	.LVL58:
 531              	.L43:
 869:SYS/shell/shell.c ****     {
 532              		.loc 1 869 0 is_stmt 0 discriminator 1
 533 0048 EB8E     		ldrh	r3, [r5, #54]
 534 004a 9C42     		cmp	r4, r3
 535 004c DCD3     		bcc	.L46
 536              	.LBE6:
 882:SYS/shell/shell.c **** 
 537              		.loc 1 882 0 is_stmt 1
 538 004e 70BD     		pop	{r4, r5, r6, pc}
 539              		.cfi_endproc
 540              	.LFE151:
 542              		.section	.text.shellGetCurrent,"ax",%progbits
 543              		.align	2
 544              		.global	shellGetCurrent
 545              		.thumb
 546              		.thumb_func
 548              	shellGetCurrent:
 549              	.LFB126:
 233:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_MAX_NUMBER; i++)
 550              		.loc 1 233 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 555              	.LVL59:
 556              	.LBB7:
 234:SYS/shell/shell.c ****     {
 557              		.loc 1 234 0
 558 0000 0023     		movs	r3, #0
 559 0002 0AE0     		b	.L49
 560              	.LVL60:
 561              	.L52:
 236:SYS/shell/shell.c ****         {
 562              		.loc 1 236 0
 563 0004 074A     		ldr	r2, .L53
 564 0006 52F82300 		ldr	r0, [r2, r3, lsl #2]
 565 000a 20B1     		cbz	r0, .L50
 236:SYS/shell/shell.c ****         {
 566              		.loc 1 236 0 is_stmt 0 discriminator 1
 567 000c 90F86020 		ldrb	r2, [r0, #96]	@ zero_extendqisi2
 568 0010 12F0020F 		tst	r2, #2
 569 0014 04D1     		bne	.L51
 570              	.L50:
 234:SYS/shell/shell.c ****     {
 571              		.loc 1 234 0 is_stmt 1 discriminator 2
 572 0016 0133     		adds	r3, r3, #1
 573              	.LVL61:
 574 0018 1BB2     		sxth	r3, r3
 575              	.LVL62:
 576              	.L49:
 234:SYS/shell/shell.c ****     {
 577              		.loc 1 234 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 33


 578 001a 042B     		cmp	r3, #4
 579 001c F2DD     		ble	.L52
 580              	.LBE7:
 241:SYS/shell/shell.c **** }
 581              		.loc 1 241 0 is_stmt 1
 582 001e 0020     		movs	r0, #0
 583              	.L51:
 242:SYS/shell/shell.c **** 
 584              		.loc 1 242 0
 585 0020 7047     		bx	lr
 586              	.L54:
 587 0022 00BF     		.align	2
 588              	.L53:
 589 0024 00000000 		.word	.LANCHOR0
 590              		.cfi_endproc
 591              	.LFE126:
 593              		.section	.text.shellWriteByte,"ax",%progbits
 594              		.align	2
 595              		.global	shellWriteByte
 596              		.thumb
 597              		.thumb_func
 599              	shellWriteByte:
 600              	.LFB127:
 251:SYS/shell/shell.c ****     shell->write(&data, sizeof(data));
 601              		.loc 1 251 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 8
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              	.LVL63:
 606 0000 00B5     		push	{lr}
 607              	.LCFI8:
 608              		.cfi_def_cfa_offset 4
 609              		.cfi_offset 14, -4
 610 0002 83B0     		sub	sp, sp, #12
 611              	.LCFI9:
 612              		.cfi_def_cfa_offset 16
 613 0004 02AB     		add	r3, sp, #8
 614 0006 03F8011D 		strb	r1, [r3, #-1]!
 252:SYS/shell/shell.c **** }
 615              		.loc 1 252 0
 616 000a 826E     		ldr	r2, [r0, #104]
 617 000c 0121     		movs	r1, #1
 618              	.LVL64:
 619 000e 1846     		mov	r0, r3
 620              	.LVL65:
 621 0010 9047     		blx	r2
 622              	.LVL66:
 253:SYS/shell/shell.c **** 
 623              		.loc 1 253 0
 624 0012 03B0     		add	sp, sp, #12
 625              	.LCFI10:
 626              		.cfi_def_cfa_offset 4
 627              		@ sp needed
 628 0014 5DF804FB 		ldr	pc, [sp], #4
 629              		.cfi_endproc
 630              	.LFE127:
 632              		.section	.text.shellRight,"ax",%progbits
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 34


 633              		.align	2
 634              		.global	shellRight
 635              		.thumb
 636              		.thumb_func
 638              	shellRight:
 639              	.LFB167:
1234:SYS/shell/shell.c ****     }
1235:SYS/shell/shell.c **** }
1236:SYS/shell/shell.c **** 
1237:SYS/shell/shell.c **** /**
1238:SYS/shell/shell.c ****  * @brief shell历史记录查找
1239:SYS/shell/shell.c ****  * 
1240:SYS/shell/shell.c ****  * @param shell shell对象
1241:SYS/shell/shell.c ****  * @param dir 方向 {@code <0}往上查找 {@code >0}往下查找
1242:SYS/shell/shell.c ****  */
1243:SYS/shell/shell.c **** static void shellHistory(Shell *shell, signed char dir)
1244:SYS/shell/shell.c **** {
1245:SYS/shell/shell.c ****     if (dir > 0)
1246:SYS/shell/shell.c ****     {
1247:SYS/shell/shell.c ****         if (shell->history.offset-- <=
1248:SYS/shell/shell.c ****             -((shell->history.number > shell->history.record) ? shell->history.number : shell->hist
1249:SYS/shell/shell.c ****         {
1250:SYS/shell/shell.c ****             shell->history.offset = -((shell->history.number > shell->history.record)
1251:SYS/shell/shell.c ****                                           ? shell->history.number
1252:SYS/shell/shell.c ****                                           : shell->history.record);
1253:SYS/shell/shell.c ****         }
1254:SYS/shell/shell.c ****     }
1255:SYS/shell/shell.c ****     else if (dir < 0)
1256:SYS/shell/shell.c ****     {
1257:SYS/shell/shell.c ****         if (++shell->history.offset > 0)
1258:SYS/shell/shell.c ****         {
1259:SYS/shell/shell.c ****             shell->history.offset = 0;
1260:SYS/shell/shell.c ****             return;
1261:SYS/shell/shell.c ****         }
1262:SYS/shell/shell.c ****     }
1263:SYS/shell/shell.c ****     else
1264:SYS/shell/shell.c ****     {
1265:SYS/shell/shell.c ****         return;
1266:SYS/shell/shell.c ****     }
1267:SYS/shell/shell.c ****     shellClearCommandLine(shell);
1268:SYS/shell/shell.c ****     if (shell->history.offset == 0)
1269:SYS/shell/shell.c ****     {
1270:SYS/shell/shell.c ****         shell->parser.cursor = shell->parser.length = 0;
1271:SYS/shell/shell.c ****     }
1272:SYS/shell/shell.c ****     else
1273:SYS/shell/shell.c ****     {
1274:SYS/shell/shell.c ****         if ((shell->parser.length = shellStringCopy(shell->parser.buffer,
1275:SYS/shell/shell.c ****                                                     shell->history.item[(shell->history.record + SH
1276:SYS/shell/shell.c ****         {
1277:SYS/shell/shell.c ****             return;
1278:SYS/shell/shell.c ****         }
1279:SYS/shell/shell.c ****         shell->parser.cursor = shell->parser.length;
1280:SYS/shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
1281:SYS/shell/shell.c ****     }
1282:SYS/shell/shell.c **** }
1283:SYS/shell/shell.c **** 
1284:SYS/shell/shell.c **** /**
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 35


1285:SYS/shell/shell.c ****  * @brief shell 常规输入
1286:SYS/shell/shell.c ****  * 
1287:SYS/shell/shell.c ****  * @param shell shell 对象
1288:SYS/shell/shell.c ****  * @param data 输入字符
1289:SYS/shell/shell.c ****  */
1290:SYS/shell/shell.c **** void shellNormalInput(Shell *shell, char data)
1291:SYS/shell/shell.c **** {
1292:SYS/shell/shell.c ****     shell->status.tabFlag = 0;
1293:SYS/shell/shell.c ****     shellInsertByte(shell, data);
1294:SYS/shell/shell.c **** }
1295:SYS/shell/shell.c **** 
1296:SYS/shell/shell.c **** /**
1297:SYS/shell/shell.c ****  * @brief shell运行命令
1298:SYS/shell/shell.c ****  * 
1299:SYS/shell/shell.c ****  * @param shell shell对象
1300:SYS/shell/shell.c ****  */
1301:SYS/shell/shell.c **** void shellExec(Shell *shell)
1302:SYS/shell/shell.c **** {
1303:SYS/shell/shell.c **** 
1304:SYS/shell/shell.c ****     if (shell->parser.length == 0)
1305:SYS/shell/shell.c ****     {
1306:SYS/shell/shell.c ****         return;
1307:SYS/shell/shell.c ****     }
1308:SYS/shell/shell.c **** 
1309:SYS/shell/shell.c ****     shell->parser.buffer[shell->parser.length] = 0;
1310:SYS/shell/shell.c **** 
1311:SYS/shell/shell.c ****     if (shell->status.isChecked)
1312:SYS/shell/shell.c ****     {
1313:SYS/shell/shell.c ****         shellHistoryAdd(shell);
1314:SYS/shell/shell.c ****         shellParserParam(shell);
1315:SYS/shell/shell.c ****         shell->parser.length = shell->parser.cursor = 0;
1316:SYS/shell/shell.c ****         if (shell->parser.paramCount == 0)
1317:SYS/shell/shell.c ****         {
1318:SYS/shell/shell.c ****             return;
1319:SYS/shell/shell.c ****         }
1320:SYS/shell/shell.c ****         shellWriteString(shell, "\r\n");
1321:SYS/shell/shell.c **** 
1322:SYS/shell/shell.c ****         ShellCommand *command = shellSeekCommand(shell,
1323:SYS/shell/shell.c ****                                                  shell->parser.param[0],
1324:SYS/shell/shell.c ****                                                  shell->commandList.base,
1325:SYS/shell/shell.c ****                                                  0);
1326:SYS/shell/shell.c ****         if (command != NULL)
1327:SYS/shell/shell.c ****         {
1328:SYS/shell/shell.c ****             shellRunCommand(shell, command);
1329:SYS/shell/shell.c ****         }
1330:SYS/shell/shell.c ****         else
1331:SYS/shell/shell.c ****         {
1332:SYS/shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_CMD_NOT_FOUND]);
1333:SYS/shell/shell.c ****         }
1334:SYS/shell/shell.c ****     }
1335:SYS/shell/shell.c ****     else
1336:SYS/shell/shell.c ****     {
1337:SYS/shell/shell.c ****         shellCheckPassword(shell);
1338:SYS/shell/shell.c ****     }
1339:SYS/shell/shell.c **** }
1340:SYS/shell/shell.c **** 
1341:SYS/shell/shell.c **** /**
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 36


1342:SYS/shell/shell.c ****  * @brief shell上方向键输入
1343:SYS/shell/shell.c ****  * 
1344:SYS/shell/shell.c ****  * @param shell shell对象
1345:SYS/shell/shell.c ****  */
1346:SYS/shell/shell.c **** void shellUp(Shell *shell)
1347:SYS/shell/shell.c **** {
1348:SYS/shell/shell.c ****     shellHistory(shell, 1);
1349:SYS/shell/shell.c **** }
1350:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x1B5B4100, shellUp, up);
1351:SYS/shell/shell.c **** 
1352:SYS/shell/shell.c **** /**
1353:SYS/shell/shell.c ****  * @brief shell下方向键输入
1354:SYS/shell/shell.c ****  * 
1355:SYS/shell/shell.c ****  * @param shell shell对象
1356:SYS/shell/shell.c ****  */
1357:SYS/shell/shell.c **** void shellDown(Shell *shell)
1358:SYS/shell/shell.c **** {
1359:SYS/shell/shell.c ****     shellHistory(shell, -1);
1360:SYS/shell/shell.c **** }
1361:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x1B5B4200, shellDown, down);
1362:SYS/shell/shell.c **** 
1363:SYS/shell/shell.c **** /**
1364:SYS/shell/shell.c ****  * @brief shell右方向键输入
1365:SYS/shell/shell.c ****  * 
1366:SYS/shell/shell.c ****  * @param shell shell对象
1367:SYS/shell/shell.c ****  */
1368:SYS/shell/shell.c **** void shellRight(Shell *shell)
1369:SYS/shell/shell.c **** {
 640              		.loc 1 1369 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              	.LVL67:
 645 0000 08B5     		push	{r3, lr}
 646              	.LCFI11:
 647              		.cfi_def_cfa_offset 8
 648              		.cfi_offset 3, -8
 649              		.cfi_offset 14, -4
1370:SYS/shell/shell.c ****     if (shell->parser.cursor < shell->parser.length)
 650              		.loc 1 1370 0
 651 0002 C389     		ldrh	r3, [r0, #14]
 652 0004 8289     		ldrh	r2, [r0, #12]
 653 0006 9342     		cmp	r3, r2
 654 0008 05D2     		bcs	.L57
1371:SYS/shell/shell.c ****     {
1372:SYS/shell/shell.c ****         shellWriteByte(shell, shell->parser.buffer[shell->parser.cursor++]);
 655              		.loc 1 1372 0
 656 000a 0269     		ldr	r2, [r0, #16]
 657 000c 591C     		adds	r1, r3, #1
 658 000e C181     		strh	r1, [r0, #14]	@ movhi
 659 0010 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 660 0012 FFF7FEFF 		bl	shellWriteByte
 661              	.LVL68:
 662              	.L57:
 663 0016 08BD     		pop	{r3, pc}
 664              		.cfi_endproc
 665              	.LFE167:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 37


 667              		.section	.text.shellLeft,"ax",%progbits
 668              		.align	2
 669              		.global	shellLeft
 670              		.thumb
 671              		.thumb_func
 673              	shellLeft:
 674              	.LFB168:
1373:SYS/shell/shell.c ****     }
1374:SYS/shell/shell.c **** }
1375:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1376:SYS/shell/shell.c ****                  0x1B5B4300, shellRight, right);
1377:SYS/shell/shell.c **** 
1378:SYS/shell/shell.c **** /**
1379:SYS/shell/shell.c ****  * @brief shell左方向键输入
1380:SYS/shell/shell.c ****  * 
1381:SYS/shell/shell.c ****  * @param shell shell对象
1382:SYS/shell/shell.c ****  */
1383:SYS/shell/shell.c **** void shellLeft(Shell *shell)
1384:SYS/shell/shell.c **** {
 675              		.loc 1 1384 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              	.LVL69:
1385:SYS/shell/shell.c ****     if (shell->parser.cursor > 0)
 680              		.loc 1 1385 0
 681 0000 C389     		ldrh	r3, [r0, #14]
 682 0002 43B1     		cbz	r3, .L63
1384:SYS/shell/shell.c ****     if (shell->parser.cursor > 0)
 683              		.loc 1 1384 0
 684 0004 10B5     		push	{r4, lr}
 685              	.LCFI12:
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 4, -8
 688              		.cfi_offset 14, -4
 689 0006 0446     		mov	r4, r0
1386:SYS/shell/shell.c ****     {
1387:SYS/shell/shell.c ****         shellWriteByte(shell, '\b');
 690              		.loc 1 1387 0
 691 0008 0821     		movs	r1, #8
 692 000a FFF7FEFF 		bl	shellWriteByte
 693              	.LVL70:
1388:SYS/shell/shell.c ****         shell->parser.cursor--;
 694              		.loc 1 1388 0
 695 000e E389     		ldrh	r3, [r4, #14]
 696 0010 013B     		subs	r3, r3, #1
 697 0012 E381     		strh	r3, [r4, #14]	@ movhi
 698 0014 10BD     		pop	{r4, pc}
 699              	.LVL71:
 700              	.L63:
 701              	.LCFI13:
 702              		.cfi_def_cfa_offset 0
 703              		.cfi_restore 4
 704              		.cfi_restore 14
 705 0016 7047     		bx	lr
 706              		.cfi_endproc
 707              	.LFE168:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 38


 709              		.section	.text.shellWriteString,"ax",%progbits
 710              		.align	2
 711              		.global	shellWriteString
 712              		.thumb
 713              		.thumb_func
 715              	shellWriteString:
 716              	.LFB128:
 264:SYS/shell/shell.c ****     unsigned short count = 0;
 717              		.loc 1 264 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              	.LVL72:
 722 0000 38B5     		push	{r3, r4, r5, lr}
 723              	.LCFI14:
 724              		.cfi_def_cfa_offset 16
 725              		.cfi_offset 3, -16
 726              		.cfi_offset 4, -12
 727              		.cfi_offset 5, -8
 728              		.cfi_offset 14, -4
 729              	.LVL73:
 266:SYS/shell/shell.c **** 
 730              		.loc 1 266 0
 731 0002 856E     		ldr	r5, [r0, #104]
 732 0004 35B1     		cbz	r5, .L65
 733 0006 0C46     		mov	r4, r1
 268:SYS/shell/shell.c ****     return count;
 734              		.loc 1 268 0
 735 0008 0846     		mov	r0, r1
 736              	.LVL74:
 737 000a FFF7FEFF 		bl	strlen
 738              	.LVL75:
 739 000e 81B2     		uxth	r1, r0
 740 0010 2046     		mov	r0, r4
 741 0012 A847     		blx	r5
 742              	.LVL76:
 743              	.L65:
 270:SYS/shell/shell.c **** 
 744              		.loc 1 270 0
 745 0014 0020     		movs	r0, #0
 746 0016 38BD     		pop	{r3, r4, r5, pc}
 747              		.cfi_endproc
 748              	.LFE128:
 750              		.section	.text.shellSetUser,"ax",%progbits
 751              		.align	2
 752              		.thumb
 753              		.thumb_func
 755              	shellSetUser:
 756              	.LFB159:
1170:SYS/shell/shell.c ****     shell->info.user = user;
 757              		.loc 1 1170 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              	.LVL77:
 762 0000 10B5     		push	{r4, lr}
 763              	.LCFI15:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 39


 764              		.cfi_def_cfa_offset 8
 765              		.cfi_offset 4, -8
 766              		.cfi_offset 14, -4
 767 0002 0446     		mov	r4, r0
1171:SYS/shell/shell.c ****     shell->status.isChecked =
 768              		.loc 1 1171 0
 769 0004 0160     		str	r1, [r0]
1173:SYS/shell/shell.c ****             ? 0
 770              		.loc 1 1173 0
 771 0006 8868     		ldr	r0, [r1, #8]
 772              	.LVL78:
1175:SYS/shell/shell.c **** 
 773              		.loc 1 1175 0
 774 0008 50B1     		cbz	r0, .L70
1173:SYS/shell/shell.c ****             ? 0
 775              		.loc 1 1173 0
 776 000a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 777 000c 53B1     		cbz	r3, .L71
1173:SYS/shell/shell.c ****             ? 0
 778              		.loc 1 1173 0 is_stmt 0 discriminator 1
 779 000e E38E     		ldrh	r3, [r4, #54]
1175:SYS/shell/shell.c **** 
 780              		.loc 1 1175 0 is_stmt 1 discriminator 1
 781 0010 012B     		cmp	r3, #1
 782 0012 09D9     		bls	.L72
1173:SYS/shell/shell.c ****             ? 0
 783              		.loc 1 1173 0
 784 0014 A169     		ldr	r1, [r4, #24]
 785              	.LVL79:
 786 0016 FFF7FEFF 		bl	strcmp
 787              	.LVL80:
 788 001a 38B1     		cbz	r0, .L73
1175:SYS/shell/shell.c **** 
 789              		.loc 1 1175 0
 790 001c 0022     		movs	r2, #0
 791 001e 06E0     		b	.L68
 792              	.LVL81:
 793              	.L70:
 794 0020 0122     		movs	r2, #1
 795 0022 04E0     		b	.L68
 796              	.L71:
 797 0024 0122     		movs	r2, #1
 798 0026 02E0     		b	.L68
 799              	.L72:
 800 0028 0022     		movs	r2, #0
 801 002a 00E0     		b	.L68
 802              	.LVL82:
 803              	.L73:
 804 002c 0122     		movs	r2, #1
 805              	.L68:
1172:SYS/shell/shell.c ****         ((user->data.user.password && strlen(user->data.user.password) != 0) && (shell->parser.para
 806              		.loc 1 1172 0
 807 002e 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 808 0032 62F30003 		bfi	r3, r2, #0, #1
 809 0036 84F86030 		strb	r3, [r4, #96]
1178:SYS/shell/shell.c **** #endif
 810              		.loc 1 1178 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 40


 811 003a 0749     		ldr	r1, .L75
 812 003c 2046     		mov	r0, r4
 813 003e FFF7FEFF 		bl	shellWriteString
 814              	.LVL83:
1181:SYS/shell/shell.c ****     {
 815              		.loc 1 1181 0
 816 0042 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 817 0046 13F0010F 		tst	r3, #1
 818 004a 03D0     		beq	.L67
1183:SYS/shell/shell.c ****     }
 819              		.loc 1 1183 0
 820 004c 0349     		ldr	r1, .L75+4
 821 004e 2046     		mov	r0, r4
 822 0050 FFF7FEFF 		bl	shellWriteString
 823              	.LVL84:
 824              	.L67:
 825 0054 10BD     		pop	{r4, pc}
 826              	.LVL85:
 827              	.L76:
 828 0056 00BF     		.align	2
 829              	.L75:
 830 0058 00000000 		.word	.LC0
 831 005c 0C000000 		.word	.LC1
 832              		.cfi_endproc
 833              	.LFE159:
 835              		.section	.text.shellWriteCommandLine,"ax",%progbits
 836              		.align	2
 837              		.thumb
 838              		.thumb_func
 840              	shellWriteCommandLine:
 841              	.LFB130:
 307:SYS/shell/shell.c ****     if (shell->status.isChecked)
 842              		.loc 1 307 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846              	.LVL86:
 847 0000 10B5     		push	{r4, lr}
 848              	.LCFI16:
 849              		.cfi_def_cfa_offset 8
 850              		.cfi_offset 4, -8
 851              		.cfi_offset 14, -4
 852 0002 0446     		mov	r4, r0
 308:SYS/shell/shell.c ****     {
 853              		.loc 1 308 0
 854 0004 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 855 0008 13F0010F 		tst	r3, #1
 856 000c 17D0     		beq	.L78
 310:SYS/shell/shell.c ****         {
 857              		.loc 1 310 0
 858 000e 11B1     		cbz	r1, .L79
 312:SYS/shell/shell.c ****         }
 859              		.loc 1 312 0
 860 0010 0D49     		ldr	r1, .L84
 861              	.LVL87:
 862 0012 FFF7FEFF 		bl	shellWriteString
 863              	.LVL88:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 41


 864              	.L79:
 314:SYS/shell/shell.c ****         shellWriteString(shell, ":");
 865              		.loc 1 314 0
 866 0016 2368     		ldr	r3, [r4]
 867 0018 5968     		ldr	r1, [r3, #4]
 868 001a 2046     		mov	r0, r4
 869 001c FFF7FEFF 		bl	shellWriteString
 870              	.LVL89:
 315:SYS/shell/shell.c ****         shellWriteString(shell, shell->info.path ? shell->info.path : "/");
 871              		.loc 1 315 0
 872 0020 0A49     		ldr	r1, .L84+4
 873 0022 2046     		mov	r0, r4
 874 0024 FFF7FEFF 		bl	shellWriteString
 875              	.LVL90:
 316:SYS/shell/shell.c ****         shellWriteString(shell, "$ ");
 876              		.loc 1 316 0
 877 0028 A168     		ldr	r1, [r4, #8]
 878 002a 01B9     		cbnz	r1, .L80
 879 002c 0849     		ldr	r1, .L84+8
 880              	.L80:
 316:SYS/shell/shell.c ****         shellWriteString(shell, "$ ");
 881              		.loc 1 316 0 is_stmt 0 discriminator 4
 882 002e 2046     		mov	r0, r4
 883 0030 FFF7FEFF 		bl	shellWriteString
 884              	.LVL91:
 317:SYS/shell/shell.c ****     }
 885              		.loc 1 317 0 is_stmt 1 discriminator 4
 886 0034 0749     		ldr	r1, .L84+12
 887 0036 2046     		mov	r0, r4
 888 0038 FFF7FEFF 		bl	shellWriteString
 889              	.LVL92:
 890 003c 10BD     		pop	{r4, pc}
 891              	.LVL93:
 892              	.L78:
 321:SYS/shell/shell.c ****     }
 893              		.loc 1 321 0
 894 003e 0649     		ldr	r1, .L84+16
 895              	.LVL94:
 896 0040 FFF7FEFF 		bl	shellWriteString
 897              	.LVL95:
 898 0044 10BD     		pop	{r4, pc}
 899              	.LVL96:
 900              	.L85:
 901 0046 00BF     		.align	2
 902              	.L84:
 903 0048 CC000000 		.word	.LC3
 904 004c D0000000 		.word	.LC4
 905 0050 C8000000 		.word	.LC2
 906 0054 D4000000 		.word	.LC5
 907 0058 D8000000 		.word	.LC6
 908              		.cfi_endproc
 909              	.LFE130:
 911              		.section	.text.shellCheckPassword,"ax",%progbits
 912              		.align	2
 913              		.thumb
 914              		.thumb_func
 916              	shellCheckPassword:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 42


 917              	.LFB158:
1147:SYS/shell/shell.c ****     if (strcmp(shell->parser.buffer, shell->info.user->data.user.password) == 0)
 918              		.loc 1 1147 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922              	.LVL97:
 923 0000 10B5     		push	{r4, lr}
 924              	.LCFI17:
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 4, -8
 927              		.cfi_offset 14, -4
 928 0002 0446     		mov	r4, r0
1148:SYS/shell/shell.c ****     {
 929              		.loc 1 1148 0
 930 0004 0368     		ldr	r3, [r0]
 931 0006 9968     		ldr	r1, [r3, #8]
 932 0008 0069     		ldr	r0, [r0, #16]
 933              	.LVL98:
 934 000a FFF7FEFF 		bl	strcmp
 935              	.LVL99:
 936 000e 50B9     		cbnz	r0, .L87
1150:SYS/shell/shell.c **** #if SHELL_SHOW_INFO == 1
 937              		.loc 1 1150 0
 938 0010 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 939 0014 43F00103 		orr	r3, r3, #1
 940 0018 84F86030 		strb	r3, [r4, #96]
1152:SYS/shell/shell.c **** #endif
 941              		.loc 1 1152 0
 942 001c 0649     		ldr	r1, .L90
 943 001e 2046     		mov	r0, r4
 944 0020 FFF7FEFF 		bl	shellWriteString
 945              	.LVL100:
 946 0024 03E0     		b	.L88
 947              	.L87:
1157:SYS/shell/shell.c ****     }
 948              		.loc 1 1157 0
 949 0026 0549     		ldr	r1, .L90+4
 950 0028 2046     		mov	r0, r4
 951 002a FFF7FEFF 		bl	shellWriteString
 952              	.LVL101:
 953              	.L88:
1159:SYS/shell/shell.c ****     shell->parser.cursor = 0;
 954              		.loc 1 1159 0
 955 002e 0023     		movs	r3, #0
 956 0030 A381     		strh	r3, [r4, #12]	@ movhi
1160:SYS/shell/shell.c **** }
 957              		.loc 1 1160 0
 958 0032 E381     		strh	r3, [r4, #14]	@ movhi
 959 0034 10BD     		pop	{r4, pc}
 960              	.LVL102:
 961              	.L91:
 962 0036 00BF     		.align	2
 963              	.L90:
 964 0038 0C000000 		.word	.LC1
 965 003c F4000000 		.word	.LC7
 966              		.cfi_endproc
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 43


 967              	.LFE158:
 969              		.section	.text.shellClear,"ax",%progbits
 970              		.align	2
 971              		.global	shellClear
 972              		.thumb
 973              		.thumb_func
 975              	shellClear:
 976              	.LFB180:
1389:SYS/shell/shell.c ****     }
1390:SYS/shell/shell.c **** }
1391:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1392:SYS/shell/shell.c ****                  0x1B5B4400, shellLeft, left);
1393:SYS/shell/shell.c **** 
1394:SYS/shell/shell.c **** /**
1395:SYS/shell/shell.c ****  * @brief shell Tab按键处理
1396:SYS/shell/shell.c ****  * 
1397:SYS/shell/shell.c ****  * @param shell shell对象
1398:SYS/shell/shell.c ****  */
1399:SYS/shell/shell.c **** void shellTab(Shell *shell)
1400:SYS/shell/shell.c **** {
1401:SYS/shell/shell.c ****     unsigned short maxMatch = shell->parser.bufferSize;
1402:SYS/shell/shell.c ****     unsigned short lastMatchIndex = 0;
1403:SYS/shell/shell.c ****     unsigned short matchNum = 0;
1404:SYS/shell/shell.c ****     unsigned short length;
1405:SYS/shell/shell.c **** 
1406:SYS/shell/shell.c ****     if (shell->parser.length == 0)
1407:SYS/shell/shell.c ****     {
1408:SYS/shell/shell.c ****         shellListAll(shell);
1409:SYS/shell/shell.c ****         shellWriteCommandLine(shell, 1);
1410:SYS/shell/shell.c ****     }
1411:SYS/shell/shell.c ****     else if (shell->parser.length > 0)
1412:SYS/shell/shell.c ****     {
1413:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
1414:SYS/shell/shell.c ****         ShellCommand *base = (ShellCommand *)shell->commandList.base;
1415:SYS/shell/shell.c ****         for (short i = 0; i < shell->commandList.count; i++)
1416:SYS/shell/shell.c ****         {
1417:SYS/shell/shell.c ****             if (shellCheckPermission(shell, &base[i]) == 0 && shellStringCompare(shell->parser.buff
1418:SYS/shell/shell.c ****                                                                                  (char *)shellGetCo
1419:SYS/shell/shell.c ****             {
1420:SYS/shell/shell.c ****                 if (matchNum != 0)
1421:SYS/shell/shell.c ****                 {
1422:SYS/shell/shell.c ****                     if (matchNum == 1)
1423:SYS/shell/shell.c ****                     {
1424:SYS/shell/shell.c ****                         shellWriteString(shell, "\r\n");
1425:SYS/shell/shell.c ****                     }
1426:SYS/shell/shell.c ****                     shellListItem(shell, &base[lastMatchIndex]);
1427:SYS/shell/shell.c ****                     length =
1428:SYS/shell/shell.c ****                         shellStringCompare((char *)shellGetCommandName(&base[lastMatchIndex]),
1429:SYS/shell/shell.c ****                                            (char *)shellGetCommandName(&base[i]));
1430:SYS/shell/shell.c ****                     maxMatch = (maxMatch > length) ? length : maxMatch;
1431:SYS/shell/shell.c ****                 }
1432:SYS/shell/shell.c ****                 lastMatchIndex = i;
1433:SYS/shell/shell.c ****                 matchNum++;
1434:SYS/shell/shell.c ****             }
1435:SYS/shell/shell.c ****         }
1436:SYS/shell/shell.c ****         if (matchNum == 0)
1437:SYS/shell/shell.c ****         {
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 44


1438:SYS/shell/shell.c ****             return;
1439:SYS/shell/shell.c ****         }
1440:SYS/shell/shell.c ****         if (matchNum == 1)
1441:SYS/shell/shell.c ****         {
1442:SYS/shell/shell.c ****             shellClearCommandLine(shell);
1443:SYS/shell/shell.c ****         }
1444:SYS/shell/shell.c ****         if (matchNum != 0)
1445:SYS/shell/shell.c ****         {
1446:SYS/shell/shell.c ****             shell->parser.length =
1447:SYS/shell/shell.c ****                 shellStringCopy(shell->parser.buffer,
1448:SYS/shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
1449:SYS/shell/shell.c ****         }
1450:SYS/shell/shell.c ****         if (matchNum > 1)
1451:SYS/shell/shell.c ****         {
1452:SYS/shell/shell.c ****             shellListItem(shell, &base[lastMatchIndex]);
1453:SYS/shell/shell.c ****             shellWriteCommandLine(shell, 1);
1454:SYS/shell/shell.c ****             shell->parser.length = maxMatch;
1455:SYS/shell/shell.c ****         }
1456:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
1457:SYS/shell/shell.c ****         shell->parser.cursor = shell->parser.length;
1458:SYS/shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
1459:SYS/shell/shell.c ****     }
1460:SYS/shell/shell.c **** 
1461:SYS/shell/shell.c ****     if (SHELL_GET_TICK())
1462:SYS/shell/shell.c ****     {
1463:SYS/shell/shell.c ****         if (matchNum == 1 && shell->status.tabFlag && SHELL_GET_TICK() - shell->info.activeTime < S
1464:SYS/shell/shell.c ****         {
1465:SYS/shell/shell.c ****             shellClearCommandLine(shell);
1466:SYS/shell/shell.c ****             for (short i = shell->parser.length; i >= 0; i--)
1467:SYS/shell/shell.c ****             {
1468:SYS/shell/shell.c ****                 shell->parser.buffer[i + 5] = shell->parser.buffer[i];
1469:SYS/shell/shell.c ****             }
1470:SYS/shell/shell.c ****             shellStringCopy(shell->parser.buffer, "help");
1471:SYS/shell/shell.c ****             shell->parser.buffer[4] = ' ';
1472:SYS/shell/shell.c ****             shell->parser.length += 5;
1473:SYS/shell/shell.c ****             shell->parser.cursor = shell->parser.length;
1474:SYS/shell/shell.c ****             shellWriteString(shell, shell->parser.buffer);
1475:SYS/shell/shell.c ****         }
1476:SYS/shell/shell.c ****         else
1477:SYS/shell/shell.c ****         {
1478:SYS/shell/shell.c ****             shell->status.tabFlag = 1;
1479:SYS/shell/shell.c ****         }
1480:SYS/shell/shell.c ****     }
1481:SYS/shell/shell.c **** }
1482:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0), 0x09000000, shellTab, tab);
1483:SYS/shell/shell.c **** 
1484:SYS/shell/shell.c **** /**
1485:SYS/shell/shell.c ****  * @brief shell 退格
1486:SYS/shell/shell.c ****  * 
1487:SYS/shell/shell.c ****  * @param shell shell对象
1488:SYS/shell/shell.c ****  */
1489:SYS/shell/shell.c **** void shellBackspace(Shell *shell)
1490:SYS/shell/shell.c **** {
1491:SYS/shell/shell.c ****     shellDeleteByte(shell, 1);
1492:SYS/shell/shell.c **** }
1493:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1494:SYS/shell/shell.c ****                  0x08000000, shellBackspace, backspace);
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 45


1495:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1496:SYS/shell/shell.c ****                  0x7F000000, shellBackspace, backspace);
1497:SYS/shell/shell.c **** 
1498:SYS/shell/shell.c **** /**
1499:SYS/shell/shell.c ****  * @brief shell 删除
1500:SYS/shell/shell.c ****  * 
1501:SYS/shell/shell.c ****  * @param shell shell对象
1502:SYS/shell/shell.c ****  */
1503:SYS/shell/shell.c **** void shellDelete(Shell *shell)
1504:SYS/shell/shell.c **** {
1505:SYS/shell/shell.c ****     shellDeleteByte(shell, -1);
1506:SYS/shell/shell.c **** }
1507:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1508:SYS/shell/shell.c ****                  0x1B5B337E, shellDelete, delete);
1509:SYS/shell/shell.c **** 
1510:SYS/shell/shell.c **** /**
1511:SYS/shell/shell.c ****  * @brief shell 回车处理
1512:SYS/shell/shell.c ****  * 
1513:SYS/shell/shell.c ****  * @param shell shell对象
1514:SYS/shell/shell.c ****  */
1515:SYS/shell/shell.c **** void shellEnter(Shell *shell)
1516:SYS/shell/shell.c **** {
1517:SYS/shell/shell.c ****     shellExec(shell);
1518:SYS/shell/shell.c ****     shellWriteCommandLine(shell, 1);
1519:SYS/shell/shell.c **** }
1520:SYS/shell/shell.c **** #if SHELL_ENTER_LF == 1
1521:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1522:SYS/shell/shell.c ****                  0x0A000000, shellEnter, enter);
1523:SYS/shell/shell.c **** #endif
1524:SYS/shell/shell.c **** #if SHELL_ENTER_CR == 1
1525:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1526:SYS/shell/shell.c ****                  0x0D000000, shellEnter, enter);
1527:SYS/shell/shell.c **** #endif
1528:SYS/shell/shell.c **** #if SHELL_ENTER_CRLF == 1
1529:SYS/shell/shell.c **** SHELL_EXPORT_KEY(SHELL_CMD_PERMISSION(0) | SHELL_CMD_ENABLE_UNCHECKED,
1530:SYS/shell/shell.c ****                  0x0D0A0000, shellEnter, enter);
1531:SYS/shell/shell.c **** #endif
1532:SYS/shell/shell.c **** 
1533:SYS/shell/shell.c **** /**
1534:SYS/shell/shell.c ****  * @brief shell help
1535:SYS/shell/shell.c ****  * 
1536:SYS/shell/shell.c ****  * @param argc 参数个数
1537:SYS/shell/shell.c ****  * @param argv 参数
1538:SYS/shell/shell.c ****  */
1539:SYS/shell/shell.c **** void shellHelp(int argc, char *argv[])
1540:SYS/shell/shell.c **** {
1541:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
1542:SYS/shell/shell.c ****     SHELL_ASSERT(shell, return );
1543:SYS/shell/shell.c ****     if (argc == 1)
1544:SYS/shell/shell.c ****     {
1545:SYS/shell/shell.c ****         shellListAll(shell);
1546:SYS/shell/shell.c ****     }
1547:SYS/shell/shell.c ****     else if (argc > 1)
1548:SYS/shell/shell.c ****     {
1549:SYS/shell/shell.c ****         ShellCommand *command = shellSeekCommand(shell,
1550:SYS/shell/shell.c ****                                                  argv[1],
1551:SYS/shell/shell.c ****                                                  shell->commandList.base,
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 46


1552:SYS/shell/shell.c ****                                                  0);
1553:SYS/shell/shell.c ****         if (command)
1554:SYS/shell/shell.c ****         {
1555:SYS/shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_HELP_HEADER]);
1556:SYS/shell/shell.c ****             shellWriteString(shell, shellGetCommandName(command));
1557:SYS/shell/shell.c ****             shellWriteString(shell, "\r\n");
1558:SYS/shell/shell.c ****             shellWriteString(shell, shellGetCommandDesc(command));
1559:SYS/shell/shell.c ****             shellWriteString(shell, "\r\n");
1560:SYS/shell/shell.c ****         }
1561:SYS/shell/shell.c ****         else
1562:SYS/shell/shell.c ****         {
1563:SYS/shell/shell.c ****             shellWriteString(shell, shellText[SHELL_TEXT_CMD_NOT_FOUND]);
1564:SYS/shell/shell.c ****         }
1565:SYS/shell/shell.c ****     }
1566:SYS/shell/shell.c **** }
1567:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1568:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_MAIN) | SHELL_CMD_DISABLE_RETURN,
1569:SYS/shell/shell.c ****     help, shellHelp, show command info\r\nhelp[cmd]);
1570:SYS/shell/shell.c **** 
1571:SYS/shell/shell.c **** /**
1572:SYS/shell/shell.c ****  * @brief shell 输入处理
1573:SYS/shell/shell.c ****  * 
1574:SYS/shell/shell.c ****  * @param shell shell对象
1575:SYS/shell/shell.c ****  * @param data 输入数据
1576:SYS/shell/shell.c ****  */
1577:SYS/shell/shell.c **** void shellHandler(Shell *shell, char data)
1578:SYS/shell/shell.c **** {
1579:SYS/shell/shell.c ****     SHELL_ASSERT(data, return );
1580:SYS/shell/shell.c **** 
1581:SYS/shell/shell.c **** #if SHELL_LOCK_TIMEOUT > 0
1582:SYS/shell/shell.c ****     if (shell->info.user->data.user.password && strlen(shell->info.user->data.user.password) != 0 &
1583:SYS/shell/shell.c ****     {
1584:SYS/shell/shell.c ****         if (SHELL_GET_TICK() - shell->info.activeTime > SHELL_LOCK_TIMEOUT)
1585:SYS/shell/shell.c ****         {
1586:SYS/shell/shell.c ****             shell->status.isChecked = 0;
1587:SYS/shell/shell.c ****         }
1588:SYS/shell/shell.c ****     }
1589:SYS/shell/shell.c **** #endif
1590:SYS/shell/shell.c **** 
1591:SYS/shell/shell.c ****     /* 根据记录的按键键值计算当前字节在按键键值中的偏移 */
1592:SYS/shell/shell.c ****     char keyByteOffset = 24;
1593:SYS/shell/shell.c ****     int keyFilter = 0x00000000;
1594:SYS/shell/shell.c ****     if ((shell->parser.keyValue & 0x0000FF00) != 0x00000000)
1595:SYS/shell/shell.c ****     {
1596:SYS/shell/shell.c ****         keyByteOffset = 0;
1597:SYS/shell/shell.c ****         keyFilter = 0xFFFFFF00;
1598:SYS/shell/shell.c ****     }
1599:SYS/shell/shell.c ****     else if ((shell->parser.keyValue & 0x00FF0000) != 0x00000000)
1600:SYS/shell/shell.c ****     {
1601:SYS/shell/shell.c ****         keyByteOffset = 8;
1602:SYS/shell/shell.c ****         keyFilter = 0xFFFF0000;
1603:SYS/shell/shell.c ****     }
1604:SYS/shell/shell.c ****     else if ((shell->parser.keyValue & 0xFF000000) != 0x00000000)
1605:SYS/shell/shell.c ****     {
1606:SYS/shell/shell.c ****         keyByteOffset = 16;
1607:SYS/shell/shell.c ****         keyFilter = 0xFF000000;
1608:SYS/shell/shell.c ****     }
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 47


1609:SYS/shell/shell.c **** 
1610:SYS/shell/shell.c ****     /* 遍历ShellCommand列表，尝试进行按键键值匹配 */
1611:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
1612:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
1613:SYS/shell/shell.c ****     {
1614:SYS/shell/shell.c ****         /* 判断是否是按键定义并验证权限 */
1615:SYS/shell/shell.c ****         if (base[i].attr.attrs.type == SHELL_TYPE_KEY && shellCheckPermission(shell, &(base[i])) ==
1616:SYS/shell/shell.c ****         {
1617:SYS/shell/shell.c ****             /* 对输入的字节同按键键值进行匹配 */
1618:SYS/shell/shell.c ****             if ((base[i].data.key.value & keyFilter) == shell->parser.keyValue && (base[i].data.key
1619:SYS/shell/shell.c ****             {
1620:SYS/shell/shell.c ****                 shell->parser.keyValue |= data << keyByteOffset;
1621:SYS/shell/shell.c ****                 data = 0x00;
1622:SYS/shell/shell.c ****                 if (keyByteOffset == 0 || (base[i].data.key.value & (0xFF << (keyByteOffset - 8))) 
1623:SYS/shell/shell.c ****                 {
1624:SYS/shell/shell.c ****                     if (base[i].data.key.function)
1625:SYS/shell/shell.c ****                     {
1626:SYS/shell/shell.c ****                         base[i].data.key.function(shell);
1627:SYS/shell/shell.c ****                     }
1628:SYS/shell/shell.c ****                     shell->parser.keyValue = 0x00000000;
1629:SYS/shell/shell.c ****                     break;
1630:SYS/shell/shell.c ****                 }
1631:SYS/shell/shell.c ****             }
1632:SYS/shell/shell.c ****         }
1633:SYS/shell/shell.c ****     }
1634:SYS/shell/shell.c **** 
1635:SYS/shell/shell.c ****     if (data != 0x00)
1636:SYS/shell/shell.c ****     {
1637:SYS/shell/shell.c ****         shell->parser.keyValue = 0x00000000;
1638:SYS/shell/shell.c ****         shellNormalInput(shell, data);
1639:SYS/shell/shell.c ****     }
1640:SYS/shell/shell.c **** 
1641:SYS/shell/shell.c ****     if (SHELL_GET_TICK())
1642:SYS/shell/shell.c ****     {
1643:SYS/shell/shell.c ****         shell->info.activeTime = SHELL_GET_TICK();
1644:SYS/shell/shell.c ****     }
1645:SYS/shell/shell.c **** }
1646:SYS/shell/shell.c **** 
1647:SYS/shell/shell.c **** #if SHELL_SUPPORT_END_LINE == 1
1648:SYS/shell/shell.c **** void shellWriteEndLine(Shell *shell, char *buffer, int len)
1649:SYS/shell/shell.c **** {
1650:SYS/shell/shell.c ****     if (!shell->status.isActive)
1651:SYS/shell/shell.c ****     {
1652:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_LINE]);
1653:SYS/shell/shell.c ****     }
1654:SYS/shell/shell.c ****     while (len--)
1655:SYS/shell/shell.c ****     {
1656:SYS/shell/shell.c ****         shell->write(*buffer++);
1657:SYS/shell/shell.c ****     }
1658:SYS/shell/shell.c ****     if (!shell->status.isActive)
1659:SYS/shell/shell.c ****     {
1660:SYS/shell/shell.c ****         shellWriteCommandLine(shell, 0);
1661:SYS/shell/shell.c ****         if (shell->parser.length > 0)
1662:SYS/shell/shell.c ****         {
1663:SYS/shell/shell.c ****             shellWriteString(shell, shell->parser.buffer);
1664:SYS/shell/shell.c ****             for (short i = 0; i < shell->parser.length - shell->parser.cursor; i++)
1665:SYS/shell/shell.c ****             {
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 48


1666:SYS/shell/shell.c ****                 shell->write('\b');
1667:SYS/shell/shell.c ****             }
1668:SYS/shell/shell.c ****         }
1669:SYS/shell/shell.c ****     }
1670:SYS/shell/shell.c **** }
1671:SYS/shell/shell.c **** #endif /** SHELL_SUPPORT_END_LINE == 1 */
1672:SYS/shell/shell.c **** 
1673:SYS/shell/shell.c **** /**
1674:SYS/shell/shell.c ****  * @brief shell 任务
1675:SYS/shell/shell.c ****  * 
1676:SYS/shell/shell.c ****  * @param param 参数(shell对象)
1677:SYS/shell/shell.c ****  * 
1678:SYS/shell/shell.c ****  */
1679:SYS/shell/shell.c **** void shellTask(void *param)
1680:SYS/shell/shell.c **** {
1681:SYS/shell/shell.c ****     Shell *shell = (Shell *)param;
1682:SYS/shell/shell.c ****     char data;
1683:SYS/shell/shell.c **** #if SHELL_TASK_WHILE == 1
1684:SYS/shell/shell.c ****     while (1)
1685:SYS/shell/shell.c ****     {
1686:SYS/shell/shell.c **** #endif
1687:SYS/shell/shell.c ****         if (shell->read && shell->read(&data) == 0)
1688:SYS/shell/shell.c ****         {
1689:SYS/shell/shell.c ****             shellHandler(shell, data);
1690:SYS/shell/shell.c ****         }
1691:SYS/shell/shell.c **** #if SHELL_TASK_WHILE == 1
1692:SYS/shell/shell.c ****     }
1693:SYS/shell/shell.c **** #endif
1694:SYS/shell/shell.c **** }
1695:SYS/shell/shell.c **** 
1696:SYS/shell/shell.c **** /**
1697:SYS/shell/shell.c ****  * @brief shell 输出用户列表(shell调用)
1698:SYS/shell/shell.c ****  */
1699:SYS/shell/shell.c **** void shellUsers(void)
1700:SYS/shell/shell.c **** {
1701:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
1702:SYS/shell/shell.c ****     if (shell)
1703:SYS/shell/shell.c ****     {
1704:SYS/shell/shell.c ****         shellListUser(shell);
1705:SYS/shell/shell.c ****     }
1706:SYS/shell/shell.c **** }
1707:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1708:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_RETURN,
1709:SYS/shell/shell.c ****     users, shellUsers, list all user);
1710:SYS/shell/shell.c **** 
1711:SYS/shell/shell.c **** /**
1712:SYS/shell/shell.c ****  * @brief shell 输出命令列表(shell调用)
1713:SYS/shell/shell.c ****  */
1714:SYS/shell/shell.c **** void shellCmds(void)
1715:SYS/shell/shell.c **** {
1716:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
1717:SYS/shell/shell.c ****     if (shell)
1718:SYS/shell/shell.c ****     {
1719:SYS/shell/shell.c ****         shellListCommand(shell);
1720:SYS/shell/shell.c ****     }
1721:SYS/shell/shell.c **** }
1722:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 49


1723:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_RETURN,
1724:SYS/shell/shell.c ****     cmds, shellCmds, list all cmd);
1725:SYS/shell/shell.c **** 
1726:SYS/shell/shell.c **** /**
1727:SYS/shell/shell.c ****  * @brief shell 输出变量列表(shell调用)
1728:SYS/shell/shell.c ****  */
1729:SYS/shell/shell.c **** void shellVars(void)
1730:SYS/shell/shell.c **** {
1731:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
1732:SYS/shell/shell.c ****     if (shell)
1733:SYS/shell/shell.c ****     {
1734:SYS/shell/shell.c ****         shellListVar(shell);
1735:SYS/shell/shell.c ****     }
1736:SYS/shell/shell.c **** }
1737:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1738:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_RETURN,
1739:SYS/shell/shell.c ****     vars, shellVars, list all var);
1740:SYS/shell/shell.c **** 
1741:SYS/shell/shell.c **** /**
1742:SYS/shell/shell.c ****  * @brief shell 输出按键列表(shell调用)
1743:SYS/shell/shell.c ****  */
1744:SYS/shell/shell.c **** void shellKeys(void)
1745:SYS/shell/shell.c **** {
1746:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
1747:SYS/shell/shell.c ****     if (shell)
1748:SYS/shell/shell.c ****     {
1749:SYS/shell/shell.c ****         shellListKey(shell);
1750:SYS/shell/shell.c ****     }
1751:SYS/shell/shell.c **** }
1752:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1753:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_RETURN,
1754:SYS/shell/shell.c ****     keys, shellKeys, list all key);
1755:SYS/shell/shell.c **** 
1756:SYS/shell/shell.c **** /**
1757:SYS/shell/shell.c ****  * @brief shell 清空控制台(shell调用)
1758:SYS/shell/shell.c ****  */
1759:SYS/shell/shell.c **** void shellClear(void)
1760:SYS/shell/shell.c **** {
 977              		.loc 1 1760 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981 0000 08B5     		push	{r3, lr}
 982              	.LCFI18:
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 3, -8
 985              		.cfi_offset 14, -4
1761:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 986              		.loc 1 1761 0
 987 0002 FFF7FEFF 		bl	shellGetCurrent
 988              	.LVL103:
1762:SYS/shell/shell.c ****     if (shell)
 989              		.loc 1 1762 0
 990 0006 10B1     		cbz	r0, .L92
1763:SYS/shell/shell.c ****     {
1764:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CLEAR_CONSOLE]);
 991              		.loc 1 1764 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 50


 992 0008 0149     		ldr	r1, .L95
 993 000a FFF7FEFF 		bl	shellWriteString
 994              	.LVL104:
 995              	.L92:
 996 000e 08BD     		pop	{r3, pc}
 997              	.L96:
 998              		.align	2
 999              	.L95:
 1000 0010 00000000 		.word	.LC0
 1001              		.cfi_endproc
 1002              	.LFE180:
 1004              		.section	.text.shellPrint,"ax",%progbits
 1005              		.align	2
 1006              		.global	shellPrint
 1007              		.thumb
 1008              		.thumb_func
 1010              	shellPrint:
 1011              	.LFB131:
 334:SYS/shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 1012              		.loc 1 334 0
 1013              		.cfi_startproc
 1014              		@ args = 4, pretend = 12, frame = 136
 1015              		@ frame_needed = 0, uses_anonymous_args = 1
 1016              	.LVL105:
 338:SYS/shell/shell.c **** 
 1017              		.loc 1 338 0
 1018 0000 90B1     		cbz	r0, .L102
 334:SYS/shell/shell.c ****     char buffer[SHELL_PRINT_BUFFER];
 1019              		.loc 1 334 0
 1020 0002 0EB4     		push	{r1, r2, r3}
 1021              	.LCFI19:
 1022              		.cfi_def_cfa_offset 12
 1023              		.cfi_offset 1, -12
 1024              		.cfi_offset 2, -8
 1025              		.cfi_offset 3, -4
 1026 0004 10B5     		push	{r4, lr}
 1027              	.LCFI20:
 1028              		.cfi_def_cfa_offset 20
 1029              		.cfi_offset 4, -20
 1030              		.cfi_offset 14, -16
 1031 0006 A3B0     		sub	sp, sp, #140
 1032              	.LCFI21:
 1033              		.cfi_def_cfa_offset 160
 1034 0008 0446     		mov	r4, r0
 340:SYS/shell/shell.c ****     vsnprintf(buffer, SHELL_PRINT_BUFFER - 1, fmt, vargs);
 1035              		.loc 1 340 0
 1036 000a 26AB     		add	r3, sp, #152
 1037 000c 0193     		str	r3, [sp, #4]
 341:SYS/shell/shell.c ****     va_end(vargs);
 1038              		.loc 1 341 0
 1039 000e 259A     		ldr	r2, [sp, #148]
 1040 0010 7F21     		movs	r1, #127
 1041 0012 02A8     		add	r0, sp, #8
 1042              	.LVL106:
 1043 0014 FFF7FEFF 		bl	vsnprintf
 1044              	.LVL107:
 344:SYS/shell/shell.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 51


 1045              		.loc 1 344 0
 1046 0018 02A9     		add	r1, sp, #8
 1047 001a 2046     		mov	r0, r4
 1048 001c FFF7FEFF 		bl	shellWriteString
 1049              	.LVL108:
 345:SYS/shell/shell.c **** #endif
 1050              		.loc 1 345 0
 1051 0020 23B0     		add	sp, sp, #140
 1052              	.LCFI22:
 1053              		.cfi_def_cfa_offset 20
 1054              		@ sp needed
 1055 0022 BDE81040 		pop	{r4, lr}
 1056              	.LCFI23:
 1057              		.cfi_restore 14
 1058              		.cfi_restore 4
 1059              		.cfi_def_cfa_offset 12
 1060              	.LVL109:
 1061 0026 03B0     		add	sp, sp, #12
 1062              	.LCFI24:
 1063              		.cfi_restore 3
 1064              		.cfi_restore 2
 1065              		.cfi_restore 1
 1066              		.cfi_def_cfa_offset 0
 1067              	.L102:
 1068 0028 7047     		bx	lr
 1069              		.cfi_endproc
 1070              	.LFE131:
 1072 002a 00BF     		.section	.text.shellScan,"ax",%progbits
 1073              		.align	2
 1074              		.global	shellScan
 1075              		.thumb
 1076              		.thumb_func
 1078              	shellScan:
 1079              	.LFB132:
 357:SYS/shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 1080              		.loc 1 357 0
 1081              		.cfi_startproc
 1082              		@ args = 4, pretend = 12, frame = 8
 1083              		@ frame_needed = 0, uses_anonymous_args = 1
 1084              	.LVL110:
 362:SYS/shell/shell.c **** 
 1085              		.loc 1 362 0
 1086 0000 0028     		cmp	r0, #0
 1087 0002 31D0     		beq	.L112
 357:SYS/shell/shell.c ****     char buffer[SHELL_SCAN_BUFFER];
 1088              		.loc 1 357 0
 1089 0004 0EB4     		push	{r1, r2, r3}
 1090              	.LCFI25:
 1091              		.cfi_def_cfa_offset 12
 1092              		.cfi_offset 1, -12
 1093              		.cfi_offset 2, -8
 1094              		.cfi_offset 3, -4
 1095 0006 70B5     		push	{r4, r5, r6, lr}
 1096              	.LCFI26:
 1097              		.cfi_def_cfa_offset 28
 1098              		.cfi_offset 4, -28
 1099              		.cfi_offset 5, -24
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 52


 1100              		.cfi_offset 6, -20
 1101              		.cfi_offset 14, -16
 1102 0008 83B0     		sub	sp, sp, #12
 1103              	.LCFI27:
 1104              		.cfi_def_cfa_offset 40
 1105 000a 0646     		mov	r6, r0
 364:SYS/shell/shell.c ****     {
 1106              		.loc 1 364 0
 1107 000c 436E     		ldr	r3, [r0, #100]
 1108 000e 0BB3     		cbz	r3, .L105
 1109 0010 0024     		movs	r4, #0
 1110              	.LVL111:
 1111              	.L108:
 368:SYS/shell/shell.c ****             {
 1112              		.loc 1 368 0
 1113 0012 736E     		ldr	r3, [r6, #100]
 1114 0014 01AA     		add	r2, sp, #4
 1115 0016 1519     		adds	r5, r2, r4
 1116 0018 2846     		mov	r0, r5
 1117 001a 9847     		blx	r3
 1118              	.LVL112:
 1119 001c 28B9     		cbnz	r0, .L106
 370:SYS/shell/shell.c ****                 index++;
 1120              		.loc 1 370 0
 1121 001e B36E     		ldr	r3, [r6, #104]
 1122 0020 0121     		movs	r1, #1
 1123 0022 2846     		mov	r0, r5
 1124 0024 9847     		blx	r3
 1125              	.LVL113:
 371:SYS/shell/shell.c ****             }
 1126              		.loc 1 371 0
 1127 0026 0134     		adds	r4, r4, #1
 1128              	.LVL114:
 1129 0028 24B2     		sxth	r4, r4
 1130              	.LVL115:
 1131              	.L106:
 373:SYS/shell/shell.c ****         shellWriteString(shell, "\r\n");
 1132              		.loc 1 373 0
 1133 002a 2546     		mov	r5, r4
 1134 002c 631E     		subs	r3, r4, #1
 1135 002e 02AA     		add	r2, sp, #8
 1136 0030 1344     		add	r3, r3, r2
 1137 0032 13F8043C 		ldrb	r3, [r3, #-4]	@ zero_extendqisi2
 1138 0036 0D2B     		cmp	r3, #13
 1139 0038 03D0     		beq	.L107
 373:SYS/shell/shell.c ****         shellWriteString(shell, "\r\n");
 1140              		.loc 1 373 0 is_stmt 0 discriminator 1
 1141 003a 0A2B     		cmp	r3, #10
 1142 003c 01D0     		beq	.L107
 373:SYS/shell/shell.c ****         shellWriteString(shell, "\r\n");
 1143              		.loc 1 373 0 discriminator 2
 1144 003e 002C     		cmp	r4, #0
 1145 0040 E7DD     		ble	.L108
 1146              	.L107:
 374:SYS/shell/shell.c ****         buffer[index] = '\0';
 1147              		.loc 1 374 0 is_stmt 1
 1148 0042 0A49     		ldr	r1, .L113
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 53


 1149 0044 3046     		mov	r0, r6
 1150 0046 FFF7FEFF 		bl	shellWriteString
 1151              	.LVL116:
 375:SYS/shell/shell.c ****     }
 1152              		.loc 1 375 0
 1153 004a 02AB     		add	r3, sp, #8
 1154 004c 1D44     		add	r5, r5, r3
 1155 004e 0023     		movs	r3, #0
 1156 0050 05F8043C 		strb	r3, [r5, #-4]
 1157              	.LVL117:
 1158              	.L105:
 378:SYS/shell/shell.c ****     vsscanf(buffer, fmt, vargs);
 1159              		.loc 1 378 0
 1160 0054 08AA     		add	r2, sp, #32
 1161 0056 0092     		str	r2, [sp]
 379:SYS/shell/shell.c ****     va_end(vargs);
 1162              		.loc 1 379 0
 1163 0058 0799     		ldr	r1, [sp, #28]
 1164 005a 01A8     		add	r0, sp, #4
 1165 005c FFF7FEFF 		bl	vsscanf
 1166              	.LVL118:
 381:SYS/shell/shell.c **** #endif
 1167              		.loc 1 381 0
 1168 0060 03B0     		add	sp, sp, #12
 1169              	.LCFI28:
 1170              		.cfi_def_cfa_offset 28
 1171              		@ sp needed
 1172 0062 BDE87040 		pop	{r4, r5, r6, lr}
 1173              	.LCFI29:
 1174              		.cfi_restore 14
 1175              		.cfi_restore 6
 1176              		.cfi_restore 5
 1177              		.cfi_restore 4
 1178              		.cfi_def_cfa_offset 12
 1179              	.LVL119:
 1180 0066 03B0     		add	sp, sp, #12
 1181              	.LCFI30:
 1182              		.cfi_restore 3
 1183              		.cfi_restore 2
 1184              		.cfi_restore 1
 1185              		.cfi_def_cfa_offset 0
 1186              	.L112:
 1187 0068 7047     		bx	lr
 1188              	.L114:
 1189 006a 00BF     		.align	2
 1190              	.L113:
 1191 006c CC000000 		.word	.LC3
 1192              		.cfi_endproc
 1193              	.LFE132:
 1195              		.section	.text.shellCheckPermission,"ax",%progbits
 1196              		.align	2
 1197              		.global	shellCheckPermission
 1198              		.thumb
 1199              		.thumb_func
 1201              	shellCheckPermission:
 1202              	.LFB133:
 394:SYS/shell/shell.c ****     return ((!command->attr.attrs.permission || command->attr.attrs.type == SHELL_TYPE_USER || (com
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 54


 1203              		.loc 1 394 0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207              		@ link register save eliminated.
 1208              	.LVL120:
 395:SYS/shell/shell.c ****                ? 0
 1209              		.loc 1 395 0
 1210 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1211 0002 43B1     		cbz	r3, .L116
 395:SYS/shell/shell.c ****                ? 0
 1212              		.loc 1 395 0 is_stmt 0 discriminator 2
 1213 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1214 0006 02F00F02 		and	r2, r2, #15
 1215 000a 082A     		cmp	r2, #8
 1216 000c 03D0     		beq	.L116
 395:SYS/shell/shell.c ****                ? 0
 1217              		.loc 1 395 0 discriminator 4
 1218 000e 0268     		ldr	r2, [r0]
 1219 0010 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1220 0012 1342     		tst	r3, r2
 1221 0014 0BD0     		beq	.L118
 1222              	.L116:
 395:SYS/shell/shell.c ****                ? 0
 1223              		.loc 1 395 0 discriminator 5
 1224 0016 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 1225 001a 13F0010F 		tst	r3, #1
 1226 001e 09D1     		bne	.L119
 395:SYS/shell/shell.c ****                ? 0
 1227              		.loc 1 395 0 discriminator 8
 1228 0020 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1229 0022 13F0100F 		tst	r3, #16
 1230 0026 07D1     		bne	.L120
 395:SYS/shell/shell.c ****                ? 0
 1231              		.loc 1 395 0
 1232 0028 4FF0FF30 		mov	r0, #-1
 1233              	.LVL121:
 1234 002c 7047     		bx	lr
 1235              	.LVL122:
 1236              	.L118:
 1237 002e 4FF0FF30 		mov	r0, #-1
 1238              	.LVL123:
 1239 0032 7047     		bx	lr
 1240              	.LVL124:
 1241              	.L119:
 1242 0034 0020     		movs	r0, #0
 1243              	.LVL125:
 1244 0036 7047     		bx	lr
 1245              	.LVL126:
 1246              	.L120:
 1247 0038 0020     		movs	r0, #0
 1248              	.LVL127:
 398:SYS/shell/shell.c **** 
 1249              		.loc 1 398 0 is_stmt 1
 1250 003a 7047     		bx	lr
 1251              		.cfi_endproc
 1252              	.LFE133:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 55


 1254              		.section	.text.shellToHex,"ax",%progbits
 1255              		.align	2
 1256              		.global	shellToHex
 1257              		.thumb
 1258              		.thumb_func
 1260              	shellToHex:
 1261              	.LFB134:
 409:SYS/shell/shell.c ****     char byte;
 1262              		.loc 1 409 0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 0
 1265              		@ frame_needed = 0, uses_anonymous_args = 0
 1266              		@ link register save eliminated.
 1267              	.LVL128:
 1268 0000 10B4     		push	{r4}
 1269              	.LCFI31:
 1270              		.cfi_def_cfa_offset 4
 1271              		.cfi_offset 4, -4
 1272              	.LVL129:
 412:SYS/shell/shell.c ****     while (value)
 1273              		.loc 1 412 0
 1274 0002 0023     		movs	r3, #0
 1275 0004 0B72     		strb	r3, [r1, #8]
 411:SYS/shell/shell.c ****     buffer[8] = 0;
 1276              		.loc 1 411 0
 1277 0006 0823     		movs	r3, #8
 413:SYS/shell/shell.c ****     {
 1278              		.loc 1 413 0
 1279 0008 0BE0     		b	.L122
 1280              	.LVL130:
 1281              	.L125:
 415:SYS/shell/shell.c ****         buffer[--i] = (byte > 9) ? (byte + 87) : (byte + 48);
 1282              		.loc 1 415 0
 1283 000a 00F00F02 		and	r2, r0, #15
 1284              	.LVL131:
 416:SYS/shell/shell.c ****         value >>= 4;
 1285              		.loc 1 416 0
 1286 000e 013B     		subs	r3, r3, #1
 1287              	.LVL132:
 1288 0010 DBB2     		uxtb	r3, r3
 1289              	.LVL133:
 1290 0012 CC18     		adds	r4, r1, r3
 1291 0014 092A     		cmp	r2, #9
 1292 0016 01D9     		bls	.L123
 416:SYS/shell/shell.c ****         value >>= 4;
 1293              		.loc 1 416 0 is_stmt 0 discriminator 1
 1294 0018 5732     		adds	r2, r2, #87
 1295              	.LVL134:
 1296 001a 00E0     		b	.L124
 1297              	.LVL135:
 1298              	.L123:
 416:SYS/shell/shell.c ****         value >>= 4;
 1299              		.loc 1 416 0 discriminator 2
 1300 001c 3032     		adds	r2, r2, #48
 1301              	.LVL136:
 1302              	.L124:
 416:SYS/shell/shell.c ****         value >>= 4;
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 56


 1303              		.loc 1 416 0 discriminator 4
 1304 001e 2270     		strb	r2, [r4]
 417:SYS/shell/shell.c ****     }
 1305              		.loc 1 417 0 is_stmt 1 discriminator 4
 1306 0020 0009     		lsrs	r0, r0, #4
 1307              	.LVL137:
 1308              	.L122:
 413:SYS/shell/shell.c ****     {
 1309              		.loc 1 413 0
 1310 0022 0028     		cmp	r0, #0
 1311 0024 F1D1     		bne	.L125
 419:SYS/shell/shell.c **** }
 1312              		.loc 1 419 0
 1313 0026 C3F10800 		rsb	r0, r3, #8
 1314              	.LVL138:
 420:SYS/shell/shell.c **** 
 1315              		.loc 1 420 0
 1316 002a 40B2     		sxtb	r0, r0
 1317 002c 5DF8044B 		ldr	r4, [sp], #4
 1318              	.LCFI32:
 1319              		.cfi_restore 4
 1320              		.cfi_def_cfa_offset 0
 1321 0030 7047     		bx	lr
 1322              		.cfi_endproc
 1323              	.LFE134:
 1325 0032 00BF     		.section	.text.shellGetCommandName,"ax",%progbits
 1326              		.align	2
 1327              		.thumb
 1328              		.thumb_func
 1330              	shellGetCommandName:
 1331              	.LFB138:
 505:SYS/shell/shell.c ****     static char buffer[9];
 1332              		.loc 1 505 0
 1333              		.cfi_startproc
 1334              		@ args = 0, pretend = 0, frame = 0
 1335              		@ frame_needed = 0, uses_anonymous_args = 0
 1336              	.LVL139:
 1337              	.LBB8:
 507:SYS/shell/shell.c ****     {
 1338              		.loc 1 507 0
 1339 0000 0023     		movs	r3, #0
 1340 0002 04E0     		b	.L128
 1341              	.LVL140:
 1342              	.L129:
 509:SYS/shell/shell.c ****     }
 1343              		.loc 1 509 0 discriminator 3
 1344 0004 3021     		movs	r1, #48
 1345 0006 0E4A     		ldr	r2, .L136
 1346 0008 D154     		strb	r1, [r2, r3]
 507:SYS/shell/shell.c ****     {
 1347              		.loc 1 507 0 discriminator 3
 1348 000a 0133     		adds	r3, r3, #1
 1349              	.LVL141:
 1350 000c DBB2     		uxtb	r3, r3
 1351              	.LVL142:
 1352              	.L128:
 507:SYS/shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 57


 1353              		.loc 1 507 0 is_stmt 0 discriminator 1
 1354 000e 082B     		cmp	r3, #8
 1355 0010 F8D9     		bls	.L129
 1356              	.LBE8:
 511:SYS/shell/shell.c ****     {
 1357              		.loc 1 511 0 is_stmt 1
 1358 0012 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1359              	.LVL143:
 1360 0014 03F00F03 		and	r3, r3, #15
 1361 0018 012B     		cmp	r3, #1
 1362 001a 01DC     		bgt	.L130
 513:SYS/shell/shell.c ****     }
 1363              		.loc 1 513 0
 1364 001c 4068     		ldr	r0, [r0, #4]
 1365              	.LVL144:
 528:SYS/shell/shell.c **** 
 1366              		.loc 1 528 0
 1367 001e 7047     		bx	lr
 1368              	.LVL145:
 1369              	.L130:
 515:SYS/shell/shell.c ****     {
 1370              		.loc 1 515 0
 1371 0020 072B     		cmp	r3, #7
 1372 0022 01DC     		bgt	.L132
 517:SYS/shell/shell.c ****     }
 1373              		.loc 1 517 0
 1374 0024 4068     		ldr	r0, [r0, #4]
 1375              	.LVL146:
 1376 0026 7047     		bx	lr
 1377              	.LVL147:
 1378              	.L132:
 519:SYS/shell/shell.c ****     {
 1379              		.loc 1 519 0
 1380 0028 082B     		cmp	r3, #8
 1381 002a 01DC     		bgt	.L133
 521:SYS/shell/shell.c ****     }
 1382              		.loc 1 521 0
 1383 002c 4068     		ldr	r0, [r0, #4]
 1384              	.LVL148:
 1385 002e 7047     		bx	lr
 1386              	.LVL149:
 1387              	.L133:
 505:SYS/shell/shell.c ****     static char buffer[9];
 1388              		.loc 1 505 0
 1389 0030 10B5     		push	{r4, lr}
 1390              	.LCFI33:
 1391              		.cfi_def_cfa_offset 8
 1392              		.cfi_offset 4, -8
 1393              		.cfi_offset 14, -4
 525:SYS/shell/shell.c ****         return buffer;
 1394              		.loc 1 525 0
 1395 0032 034C     		ldr	r4, .L136
 1396 0034 2146     		mov	r1, r4
 1397 0036 4068     		ldr	r0, [r0, #4]
 1398              	.LVL150:
 1399 0038 FFF7FEFF 		bl	shellToHex
 1400              	.LVL151:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 58


 526:SYS/shell/shell.c ****     }
 1401              		.loc 1 526 0
 1402 003c 2046     		mov	r0, r4
 528:SYS/shell/shell.c **** 
 1403              		.loc 1 528 0
 1404 003e 10BD     		pop	{r4, pc}
 1405              	.L137:
 1406              		.align	2
 1407              	.L136:
 1408 0040 00000000 		.word	.LANCHOR1
 1409              		.cfi_endproc
 1410              	.LFE138:
 1412              		.section	.text.shellToDec,"ax",%progbits
 1413              		.align	2
 1414              		.global	shellToDec
 1415              		.thumb
 1416              		.thumb_func
 1418              	shellToDec:
 1419              	.LFB135:
 431:SYS/shell/shell.c ****     unsigned char i = 11;
 1420              		.loc 1 431 0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 0
 1423              		@ frame_needed = 0, uses_anonymous_args = 0
 1424              		@ link register save eliminated.
 1425              	.LVL152:
 1426 0000 70B4     		push	{r4, r5, r6}
 1427              	.LCFI34:
 1428              		.cfi_def_cfa_offset 12
 1429              		.cfi_offset 4, -12
 1430              		.cfi_offset 5, -8
 1431              		.cfi_offset 6, -4
 1432              	.LVL153:
 434:SYS/shell/shell.c ****     {
 1433              		.loc 1 434 0
 1434 0002 0028     		cmp	r0, #0
 1435 0004 01DA     		bge	.L144
 436:SYS/shell/shell.c ****     }
 1436              		.loc 1 436 0
 1437 0006 4442     		negs	r4, r0
 1438              	.LVL154:
 1439 0008 00E0     		b	.L139
 1440              	.LVL155:
 1441              	.L144:
 433:SYS/shell/shell.c ****     if (value < 0)
 1442              		.loc 1 433 0
 1443 000a 0446     		mov	r4, r0
 1444              	.LVL156:
 1445              	.L139:
 438:SYS/shell/shell.c ****     while (v)
 1446              		.loc 1 438 0
 1447 000c 0023     		movs	r3, #0
 1448 000e CB72     		strb	r3, [r1, #11]
 432:SYS/shell/shell.c ****     int v = value;
 1449              		.loc 1 432 0
 1450 0010 0B22     		movs	r2, #11
 439:SYS/shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 59


 1451              		.loc 1 439 0
 1452 0012 0FE0     		b	.L140
 1453              	.LVL157:
 1454              	.L141:
 441:SYS/shell/shell.c ****         v /= 10;
 1455              		.loc 1 441 0
 1456 0014 013A     		subs	r2, r2, #1
 1457              	.LVL158:
 1458 0016 D2B2     		uxtb	r2, r2
 1459              	.LVL159:
 1460 0018 0F4B     		ldr	r3, .L146
 1461 001a 83FB0435 		smull	r3, r5, r3, r4
 1462 001e E317     		asrs	r3, r4, #31
 1463 0020 C3EBA503 		rsb	r3, r3, r5, asr #2
 1464 0024 1E46     		mov	r6, r3
 1465 0026 03EB8303 		add	r3, r3, r3, lsl #2
 1466 002a 5D00     		lsls	r5, r3, #1
 1467 002c 631B     		subs	r3, r4, r5
 1468 002e 3033     		adds	r3, r3, #48
 1469 0030 8B54     		strb	r3, [r1, r2]
 442:SYS/shell/shell.c ****     }
 1470              		.loc 1 442 0
 1471 0032 3446     		mov	r4, r6
 1472              	.LVL160:
 1473              	.L140:
 439:SYS/shell/shell.c ****     {
 1474              		.loc 1 439 0
 1475 0034 002C     		cmp	r4, #0
 1476 0036 EDD1     		bne	.L141
 444:SYS/shell/shell.c ****     {
 1477              		.loc 1 444 0
 1478 0038 0028     		cmp	r0, #0
 1479 003a 03DA     		bge	.L142
 446:SYS/shell/shell.c ****     }
 1480              		.loc 1 446 0
 1481 003c 013A     		subs	r2, r2, #1
 1482              	.LVL161:
 1483 003e D2B2     		uxtb	r2, r2
 1484              	.LVL162:
 1485 0040 2D23     		movs	r3, #45
 1486 0042 8B54     		strb	r3, [r1, r2]
 1487              	.L142:
 448:SYS/shell/shell.c ****     {
 1488              		.loc 1 448 0
 1489 0044 18B9     		cbnz	r0, .L143
 450:SYS/shell/shell.c ****     }
 1490              		.loc 1 450 0
 1491 0046 013A     		subs	r2, r2, #1
 1492              	.LVL163:
 1493 0048 D2B2     		uxtb	r2, r2
 1494              	.LVL164:
 1495 004a 3023     		movs	r3, #48
 1496 004c 8B54     		strb	r3, [r1, r2]
 1497              	.L143:
 452:SYS/shell/shell.c **** }
 1498              		.loc 1 452 0
 1499 004e C2F10B00 		rsb	r0, r2, #11
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 60


 1500              	.LVL165:
 453:SYS/shell/shell.c **** 
 1501              		.loc 1 453 0
 1502 0052 40B2     		sxtb	r0, r0
 1503 0054 70BC     		pop	{r4, r5, r6}
 1504              	.LCFI35:
 1505              		.cfi_restore 6
 1506              		.cfi_restore 5
 1507              		.cfi_restore 4
 1508              		.cfi_def_cfa_offset 0
 1509              	.LVL166:
 1510 0056 7047     		bx	lr
 1511              	.L147:
 1512              		.align	2
 1513              	.L146:
 1514 0058 67666666 		.word	1717986919
 1515              		.cfi_endproc
 1516              	.LFE135:
 1518              		.section	.text.shellWriteReturnValue,"ax",%progbits
 1519              		.align	2
 1520              		.thumb
 1521              		.thumb_func
 1523              	shellWriteReturnValue:
 1524              	.LFB160:
1195:SYS/shell/shell.c ****     char buffer[12] = "00000000000";
 1525              		.loc 1 1195 0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 16
 1528              		@ frame_needed = 0, uses_anonymous_args = 0
 1529              	.LVL167:
 1530 0000 70B5     		push	{r4, r5, r6, lr}
 1531              	.LCFI36:
 1532              		.cfi_def_cfa_offset 16
 1533              		.cfi_offset 4, -16
 1534              		.cfi_offset 5, -12
 1535              		.cfi_offset 6, -8
 1536              		.cfi_offset 14, -4
 1537 0002 84B0     		sub	sp, sp, #16
 1538              	.LCFI37:
 1539              		.cfi_def_cfa_offset 32
 1540 0004 0446     		mov	r4, r0
 1541 0006 0E46     		mov	r6, r1
1196:SYS/shell/shell.c ****     shellWriteString(shell, "Return: ");
 1542              		.loc 1 1196 0
 1543 0008 184B     		ldr	r3, .L152
 1544 000a 01AD     		add	r5, sp, #4
 1545 000c 93E80700 		ldmia	r3, {r0, r1, r2}
 1546              	.LVL168:
 1547 0010 85E80700 		stmia	r5, {r0, r1, r2}
1197:SYS/shell/shell.c ****     shellWriteString(shell, &buffer[11 - shellToDec(value, buffer)]);
 1548              		.loc 1 1197 0
 1549 0014 1649     		ldr	r1, .L152+4
 1550 0016 2046     		mov	r0, r4
 1551 0018 FFF7FEFF 		bl	shellWriteString
 1552              	.LVL169:
1198:SYS/shell/shell.c ****     shellWriteString(shell, ", 0x");
 1553              		.loc 1 1198 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 61


 1554 001c 2946     		mov	r1, r5
 1555 001e 3046     		mov	r0, r6
 1556 0020 FFF7FEFF 		bl	shellToDec
 1557              	.LVL170:
 1558 0024 C0F10B01 		rsb	r1, r0, #11
 1559 0028 2944     		add	r1, r1, r5
 1560 002a 2046     		mov	r0, r4
 1561 002c FFF7FEFF 		bl	shellWriteString
 1562              	.LVL171:
1199:SYS/shell/shell.c ****     for (short i = 0; i < 11; i++)
 1563              		.loc 1 1199 0
 1564 0030 1049     		ldr	r1, .L152+8
 1565 0032 2046     		mov	r0, r4
 1566 0034 FFF7FEFF 		bl	shellWriteString
 1567              	.LVL172:
 1568              	.LBB9:
1200:SYS/shell/shell.c ****     {
 1569              		.loc 1 1200 0
 1570 0038 0023     		movs	r3, #0
 1571 003a 06E0     		b	.L149
 1572              	.LVL173:
 1573              	.L150:
1202:SYS/shell/shell.c ****     }
 1574              		.loc 1 1202 0 discriminator 3
 1575 003c 04AA     		add	r2, sp, #16
 1576 003e 1A44     		add	r2, r2, r3
 1577 0040 3021     		movs	r1, #48
 1578 0042 02F80C1C 		strb	r1, [r2, #-12]
1200:SYS/shell/shell.c ****     {
 1579              		.loc 1 1200 0 discriminator 3
 1580 0046 0133     		adds	r3, r3, #1
 1581              	.LVL174:
 1582 0048 1BB2     		sxth	r3, r3
 1583              	.LVL175:
 1584              	.L149:
1200:SYS/shell/shell.c ****     {
 1585              		.loc 1 1200 0 is_stmt 0 discriminator 1
 1586 004a 0A2B     		cmp	r3, #10
 1587 004c F6DD     		ble	.L150
 1588              	.LBE9:
1204:SYS/shell/shell.c ****     shellWriteString(shell, buffer);
 1589              		.loc 1 1204 0 is_stmt 1
 1590 004e 01A9     		add	r1, sp, #4
 1591 0050 3046     		mov	r0, r6
 1592 0052 FFF7FEFF 		bl	shellToHex
 1593              	.LVL176:
1205:SYS/shell/shell.c ****     shellWriteString(shell, "\r\n");
 1594              		.loc 1 1205 0
 1595 0056 01A9     		add	r1, sp, #4
 1596 0058 2046     		mov	r0, r4
 1597 005a FFF7FEFF 		bl	shellWriteString
 1598              	.LVL177:
1206:SYS/shell/shell.c **** }
 1599              		.loc 1 1206 0
 1600 005e 0649     		ldr	r1, .L152+12
 1601 0060 2046     		mov	r0, r4
 1602 0062 FFF7FEFF 		bl	shellWriteString
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 62


 1603              	.LVL178:
1207:SYS/shell/shell.c **** 
 1604              		.loc 1 1207 0
 1605 0066 04B0     		add	sp, sp, #16
 1606              	.LCFI38:
 1607              		.cfi_def_cfa_offset 16
 1608              		@ sp needed
 1609 0068 70BD     		pop	{r4, r5, r6, pc}
 1610              	.LVL179:
 1611              	.L153:
 1612 006a 00BF     		.align	2
 1613              	.L152:
 1614 006c 1C010000 		.word	.LC8
 1615 0070 08010000 		.word	.LC9
 1616 0074 14010000 		.word	.LC10
 1617 0078 CC000000 		.word	.LC3
 1618              		.cfi_endproc
 1619              	.LFE160:
 1621              		.section	.text.shellListItem,"ax",%progbits
 1622              		.align	2
 1623              		.global	shellListItem
 1624              		.thumb
 1625              		.thumb_func
 1627              	shellListItem:
 1628              	.LFB140:
 563:SYS/shell/shell.c ****     short spaceLength;
 1629              		.loc 1 563 0
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 0
 1632              		@ frame_needed = 0, uses_anonymous_args = 0
 1633              	.LVL180:
 1634 0000 70B5     		push	{r4, r5, r6, lr}
 1635              	.LCFI39:
 1636              		.cfi_def_cfa_offset 16
 1637              		.cfi_offset 4, -16
 1638              		.cfi_offset 5, -12
 1639              		.cfi_offset 6, -8
 1640              		.cfi_offset 14, -4
 1641 0002 0546     		mov	r5, r0
 1642 0004 0E46     		mov	r6, r1
 566:SYS/shell/shell.c ****     spaceLength = (spaceLength > 0) ? spaceLength : 4;
 1643              		.loc 1 566 0
 1644 0006 0846     		mov	r0, r1
 1645              	.LVL181:
 1646 0008 FFF7FEFF 		bl	shellGetCommandName
 1647              	.LVL182:
 1648 000c 0146     		mov	r1, r0
 1649 000e 2846     		mov	r0, r5
 1650 0010 FFF7FEFF 		bl	shellWriteString
 1651              	.LVL183:
 1652 0014 C0F11600 		rsb	r0, r0, #22
 1653 0018 04B2     		sxth	r4, r0
 1654              	.LVL184:
 567:SYS/shell/shell.c ****     do
 1655              		.loc 1 567 0
 1656 001a 002C     		cmp	r4, #0
 1657 001c 00DC     		bgt	.L156
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 63


 1658 001e 0424     		movs	r4, #4
 1659              	.LVL185:
 1660              	.L156:
 570:SYS/shell/shell.c ****     } while (--spaceLength);
 1661              		.loc 1 570 0 discriminator 1
 1662 0020 2D21     		movs	r1, #45
 1663 0022 2846     		mov	r0, r5
 1664 0024 FFF7FEFF 		bl	shellWriteByte
 1665              	.LVL186:
 571:SYS/shell/shell.c ****     if (item->attr.attrs.type <= SHELL_TYPE_CMD_FUNC)
 1666              		.loc 1 571 0 discriminator 1
 1667 0028 013C     		subs	r4, r4, #1
 1668              	.LVL187:
 1669 002a 24B2     		sxth	r4, r4
 1670              	.LVL188:
 1671 002c 002C     		cmp	r4, #0
 1672 002e F7D1     		bne	.L156
 572:SYS/shell/shell.c ****     {
 1673              		.loc 1 572 0
 1674 0030 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 1675 0032 03F00F03 		and	r3, r3, #15
 1676 0036 012B     		cmp	r3, #1
 1677 0038 04DC     		bgt	.L157
 574:SYS/shell/shell.c ****     }
 1678              		.loc 1 574 0
 1679 003a 0F49     		ldr	r1, .L163
 1680 003c 2846     		mov	r0, r5
 1681 003e FFF7FEFF 		bl	shellWriteString
 1682              	.LVL189:
 1683 0042 70BD     		pop	{r4, r5, r6, pc}
 1684              	.LVL190:
 1685              	.L157:
 576:SYS/shell/shell.c ****     {
 1686              		.loc 1 576 0
 1687 0044 072B     		cmp	r3, #7
 1688 0046 04DC     		bgt	.L159
 578:SYS/shell/shell.c ****     }
 1689              		.loc 1 578 0
 1690 0048 0C49     		ldr	r1, .L163+4
 1691 004a 2846     		mov	r0, r5
 1692 004c FFF7FEFF 		bl	shellWriteString
 1693              	.LVL191:
 1694 0050 70BD     		pop	{r4, r5, r6, pc}
 1695              	.LVL192:
 1696              	.L159:
 580:SYS/shell/shell.c ****     {
 1697              		.loc 1 580 0
 1698 0052 082B     		cmp	r3, #8
 1699 0054 04DC     		bgt	.L160
 582:SYS/shell/shell.c ****     }
 1700              		.loc 1 582 0
 1701 0056 0A49     		ldr	r1, .L163+8
 1702 0058 2846     		mov	r0, r5
 1703 005a FFF7FEFF 		bl	shellWriteString
 1704              	.LVL193:
 1705 005e 70BD     		pop	{r4, r5, r6, pc}
 1706              	.LVL194:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 64


 1707              	.L160:
 584:SYS/shell/shell.c ****     {
 1708              		.loc 1 584 0
 1709 0060 092B     		cmp	r3, #9
 1710 0062 04DC     		bgt	.L161
 586:SYS/shell/shell.c ****     }
 1711              		.loc 1 586 0
 1712 0064 0749     		ldr	r1, .L163+12
 1713 0066 2846     		mov	r0, r5
 1714 0068 FFF7FEFF 		bl	shellWriteString
 1715              	.LVL195:
 1716 006c 70BD     		pop	{r4, r5, r6, pc}
 1717              	.LVL196:
 1718              	.L161:
 590:SYS/shell/shell.c ****     }
 1719              		.loc 1 590 0
 1720 006e 0649     		ldr	r1, .L163+16
 1721 0070 2846     		mov	r0, r5
 1722 0072 FFF7FEFF 		bl	shellWriteString
 1723              	.LVL197:
 1724 0076 70BD     		pop	{r4, r5, r6, pc}
 1725              	.LVL198:
 1726              	.L164:
 1727              		.align	2
 1728              	.L163:
 1729 0078 28010000 		.word	.LC11
 1730 007c 30010000 		.word	.LC12
 1731 0080 34010000 		.word	.LC13
 1732 0084 3C010000 		.word	.LC14
 1733 0088 40010000 		.word	.LC15
 1734              		.cfi_endproc
 1735              	.LFE140:
 1737              		.section	.text.shellListCommand,"ax",%progbits
 1738              		.align	2
 1739              		.global	shellListCommand
 1740              		.thumb
 1741              		.thumb_func
 1743              	shellListCommand:
 1744              	.LFB141:
 610:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1745              		.loc 1 610 0
 1746              		.cfi_startproc
 1747              		@ args = 0, pretend = 0, frame = 0
 1748              		@ frame_needed = 0, uses_anonymous_args = 0
 1749              	.LVL199:
 1750 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1751              	.LCFI40:
 1752              		.cfi_def_cfa_offset 24
 1753              		.cfi_offset 3, -24
 1754              		.cfi_offset 4, -20
 1755              		.cfi_offset 5, -16
 1756              		.cfi_offset 6, -12
 1757              		.cfi_offset 7, -8
 1758              		.cfi_offset 14, -4
 1759 0002 0646     		mov	r6, r0
 611:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_CMD_LIST]);
 1760              		.loc 1 611 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 65


 1761 0004 876D     		ldr	r7, [r0, #88]
 1762              	.LVL200:
 612:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1763              		.loc 1 612 0
 1764 0006 0E49     		ldr	r1, .L170
 1765 0008 FFF7FEFF 		bl	shellWriteString
 1766              	.LVL201:
 1767              	.LBB10:
 613:SYS/shell/shell.c ****     {
 1768              		.loc 1 613 0
 1769 000c 0024     		movs	r4, #0
 1770 000e 11E0     		b	.L166
 1771              	.LVL202:
 1772              	.L168:
 615:SYS/shell/shell.c ****         {
 1773              		.loc 1 615 0
 1774 0010 07EB0415 		add	r5, r7, r4, lsl #4
 1775 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1776 0016 03F00F03 		and	r3, r3, #15
 1777 001a 012B     		cmp	r3, #1
 1778 001c 08DC     		bgt	.L167
 615:SYS/shell/shell.c ****         {
 1779              		.loc 1 615 0 is_stmt 0 discriminator 1
 1780 001e 2946     		mov	r1, r5
 1781 0020 3046     		mov	r0, r6
 1782 0022 FFF7FEFF 		bl	shellCheckPermission
 1783              	.LVL203:
 1784 0026 18B9     		cbnz	r0, .L167
 617:SYS/shell/shell.c ****         }
 1785              		.loc 1 617 0 is_stmt 1
 1786 0028 2946     		mov	r1, r5
 1787 002a 3046     		mov	r0, r6
 1788 002c FFF7FEFF 		bl	shellListItem
 1789              	.LVL204:
 1790              	.L167:
 613:SYS/shell/shell.c ****     {
 1791              		.loc 1 613 0 discriminator 2
 1792 0030 0134     		adds	r4, r4, #1
 1793              	.LVL205:
 1794 0032 24B2     		sxth	r4, r4
 1795              	.LVL206:
 1796              	.L166:
 613:SYS/shell/shell.c ****     {
 1797              		.loc 1 613 0 is_stmt 0 discriminator 1
 1798 0034 B6F85C30 		ldrh	r3, [r6, #92]
 1799 0038 9C42     		cmp	r4, r3
 1800 003a E9DB     		blt	.L168
 1801              	.LBE10:
 620:SYS/shell/shell.c **** 
 1802              		.loc 1 620 0 is_stmt 1
 1803 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1804              	.LVL207:
 1805              	.L171:
 1806 003e 00BF     		.align	2
 1807              	.L170:
 1808 0040 48010000 		.word	.LC16
 1809              		.cfi_endproc
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 66


 1810              	.LFE141:
 1812              		.section	.text.shellCmds,"ax",%progbits
 1813              		.align	2
 1814              		.global	shellCmds
 1815              		.thumb
 1816              		.thumb_func
 1818              	shellCmds:
 1819              	.LFB177:
1715:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 1820              		.loc 1 1715 0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824 0000 08B5     		push	{r3, lr}
 1825              	.LCFI41:
 1826              		.cfi_def_cfa_offset 8
 1827              		.cfi_offset 3, -8
 1828              		.cfi_offset 14, -4
1716:SYS/shell/shell.c ****     if (shell)
 1829              		.loc 1 1716 0
 1830 0002 FFF7FEFF 		bl	shellGetCurrent
 1831              	.LVL208:
1717:SYS/shell/shell.c ****     {
 1832              		.loc 1 1717 0
 1833 0006 08B1     		cbz	r0, .L172
1719:SYS/shell/shell.c ****     }
 1834              		.loc 1 1719 0
 1835 0008 FFF7FEFF 		bl	shellListCommand
 1836              	.LVL209:
 1837              	.L172:
 1838 000c 08BD     		pop	{r3, pc}
 1839              		.cfi_endproc
 1840              	.LFE177:
 1842 000e 00BF     		.section	.text.shellListVar,"ax",%progbits
 1843              		.align	2
 1844              		.global	shellListVar
 1845              		.thumb
 1846              		.thumb_func
 1848              	shellListVar:
 1849              	.LFB142:
 628:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1850              		.loc 1 628 0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 0
 1853              		@ frame_needed = 0, uses_anonymous_args = 0
 1854              	.LVL210:
 1855 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1856              	.LCFI42:
 1857              		.cfi_def_cfa_offset 24
 1858              		.cfi_offset 3, -24
 1859              		.cfi_offset 4, -20
 1860              		.cfi_offset 5, -16
 1861              		.cfi_offset 6, -12
 1862              		.cfi_offset 7, -8
 1863              		.cfi_offset 14, -4
 1864 0002 0646     		mov	r6, r0
 629:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_VAR_LIST]);
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 67


 1865              		.loc 1 629 0
 1866 0004 876D     		ldr	r7, [r0, #88]
 1867              	.LVL211:
 630:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1868              		.loc 1 630 0
 1869 0006 0F49     		ldr	r1, .L180
 1870 0008 FFF7FEFF 		bl	shellWriteString
 1871              	.LVL212:
 1872              	.LBB11:
 631:SYS/shell/shell.c ****     {
 1873              		.loc 1 631 0
 1874 000c 0024     		movs	r4, #0
 1875 000e 14E0     		b	.L176
 1876              	.LVL213:
 1877              	.L178:
 633:SYS/shell/shell.c ****         {
 1878              		.loc 1 633 0
 1879 0010 07EB0415 		add	r5, r7, r4, lsl #4
 1880 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1881 0016 03F00F03 		and	r3, r3, #15
 1882 001a 0E33     		adds	r3, r3, #14
 1883 001c 03F00F03 		and	r3, r3, #15
 1884 0020 052B     		cmp	r3, #5
 1885 0022 08D8     		bhi	.L177
 633:SYS/shell/shell.c ****         {
 1886              		.loc 1 633 0 is_stmt 0 discriminator 1
 1887 0024 2946     		mov	r1, r5
 1888 0026 3046     		mov	r0, r6
 1889 0028 FFF7FEFF 		bl	shellCheckPermission
 1890              	.LVL214:
 1891 002c 18B9     		cbnz	r0, .L177
 635:SYS/shell/shell.c ****         }
 1892              		.loc 1 635 0 is_stmt 1
 1893 002e 2946     		mov	r1, r5
 1894 0030 3046     		mov	r0, r6
 1895 0032 FFF7FEFF 		bl	shellListItem
 1896              	.LVL215:
 1897              	.L177:
 631:SYS/shell/shell.c ****     {
 1898              		.loc 1 631 0 discriminator 2
 1899 0036 0134     		adds	r4, r4, #1
 1900              	.LVL216:
 1901 0038 24B2     		sxth	r4, r4
 1902              	.LVL217:
 1903              	.L176:
 631:SYS/shell/shell.c ****     {
 1904              		.loc 1 631 0 is_stmt 0 discriminator 1
 1905 003a B6F85C30 		ldrh	r3, [r6, #92]
 1906 003e 9C42     		cmp	r4, r3
 1907 0040 E6DB     		blt	.L178
 1908              	.LBE11:
 638:SYS/shell/shell.c **** 
 1909              		.loc 1 638 0 is_stmt 1
 1910 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1911              	.LVL218:
 1912              	.L181:
 1913              		.align	2
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 68


 1914              	.L180:
 1915 0044 5C010000 		.word	.LC17
 1916              		.cfi_endproc
 1917              	.LFE142:
 1919              		.section	.text.shellVars,"ax",%progbits
 1920              		.align	2
 1921              		.global	shellVars
 1922              		.thumb
 1923              		.thumb_func
 1925              	shellVars:
 1926              	.LFB178:
1730:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 1927              		.loc 1 1730 0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 0
 1930              		@ frame_needed = 0, uses_anonymous_args = 0
 1931 0000 08B5     		push	{r3, lr}
 1932              	.LCFI43:
 1933              		.cfi_def_cfa_offset 8
 1934              		.cfi_offset 3, -8
 1935              		.cfi_offset 14, -4
1731:SYS/shell/shell.c ****     if (shell)
 1936              		.loc 1 1731 0
 1937 0002 FFF7FEFF 		bl	shellGetCurrent
 1938              	.LVL219:
1732:SYS/shell/shell.c ****     {
 1939              		.loc 1 1732 0
 1940 0006 08B1     		cbz	r0, .L182
1734:SYS/shell/shell.c ****     }
 1941              		.loc 1 1734 0
 1942 0008 FFF7FEFF 		bl	shellListVar
 1943              	.LVL220:
 1944              	.L182:
 1945 000c 08BD     		pop	{r3, pc}
 1946              		.cfi_endproc
 1947              	.LFE178:
 1949 000e 00BF     		.section	.text.shellListUser,"ax",%progbits
 1950              		.align	2
 1951              		.global	shellListUser
 1952              		.thumb
 1953              		.thumb_func
 1955              	shellListUser:
 1956              	.LFB143:
 646:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 1957              		.loc 1 646 0
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 0
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
 1961              	.LVL221:
 1962 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1963              	.LCFI44:
 1964              		.cfi_def_cfa_offset 24
 1965              		.cfi_offset 3, -24
 1966              		.cfi_offset 4, -20
 1967              		.cfi_offset 5, -16
 1968              		.cfi_offset 6, -12
 1969              		.cfi_offset 7, -8
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 69


 1970              		.cfi_offset 14, -4
 1971 0002 0646     		mov	r6, r0
 647:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_USER_LIST]);
 1972              		.loc 1 647 0
 1973 0004 876D     		ldr	r7, [r0, #88]
 1974              	.LVL222:
 648:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 1975              		.loc 1 648 0
 1976 0006 0E49     		ldr	r1, .L190
 1977 0008 FFF7FEFF 		bl	shellWriteString
 1978              	.LVL223:
 1979              	.LBB12:
 649:SYS/shell/shell.c ****     {
 1980              		.loc 1 649 0
 1981 000c 0024     		movs	r4, #0
 1982 000e 11E0     		b	.L186
 1983              	.LVL224:
 1984              	.L188:
 651:SYS/shell/shell.c ****         {
 1985              		.loc 1 651 0
 1986 0010 07EB0415 		add	r5, r7, r4, lsl #4
 1987 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1988 0016 03F00F03 		and	r3, r3, #15
 1989 001a 082B     		cmp	r3, #8
 1990 001c 08D1     		bne	.L187
 651:SYS/shell/shell.c ****         {
 1991              		.loc 1 651 0 is_stmt 0 discriminator 1
 1992 001e 2946     		mov	r1, r5
 1993 0020 3046     		mov	r0, r6
 1994 0022 FFF7FEFF 		bl	shellCheckPermission
 1995              	.LVL225:
 1996 0026 18B9     		cbnz	r0, .L187
 653:SYS/shell/shell.c ****         }
 1997              		.loc 1 653 0 is_stmt 1
 1998 0028 2946     		mov	r1, r5
 1999 002a 3046     		mov	r0, r6
 2000 002c FFF7FEFF 		bl	shellListItem
 2001              	.LVL226:
 2002              	.L187:
 649:SYS/shell/shell.c ****     {
 2003              		.loc 1 649 0 discriminator 2
 2004 0030 0134     		adds	r4, r4, #1
 2005              	.LVL227:
 2006 0032 24B2     		sxth	r4, r4
 2007              	.LVL228:
 2008              	.L186:
 649:SYS/shell/shell.c ****     {
 2009              		.loc 1 649 0 is_stmt 0 discriminator 1
 2010 0034 B6F85C30 		ldrh	r3, [r6, #92]
 2011 0038 9C42     		cmp	r4, r3
 2012 003a E9DB     		blt	.L188
 2013              	.LBE12:
 656:SYS/shell/shell.c **** 
 2014              		.loc 1 656 0 is_stmt 1
 2015 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2016              	.LVL229:
 2017              	.L191:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 70


 2018 003e 00BF     		.align	2
 2019              	.L190:
 2020 0040 6C010000 		.word	.LC18
 2021              		.cfi_endproc
 2022              	.LFE143:
 2024              		.section	.text.shellUsers,"ax",%progbits
 2025              		.align	2
 2026              		.global	shellUsers
 2027              		.thumb
 2028              		.thumb_func
 2030              	shellUsers:
 2031              	.LFB176:
1700:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 2032              		.loc 1 1700 0
 2033              		.cfi_startproc
 2034              		@ args = 0, pretend = 0, frame = 0
 2035              		@ frame_needed = 0, uses_anonymous_args = 0
 2036 0000 08B5     		push	{r3, lr}
 2037              	.LCFI45:
 2038              		.cfi_def_cfa_offset 8
 2039              		.cfi_offset 3, -8
 2040              		.cfi_offset 14, -4
1701:SYS/shell/shell.c ****     if (shell)
 2041              		.loc 1 1701 0
 2042 0002 FFF7FEFF 		bl	shellGetCurrent
 2043              	.LVL230:
1702:SYS/shell/shell.c ****     {
 2044              		.loc 1 1702 0
 2045 0006 08B1     		cbz	r0, .L192
1704:SYS/shell/shell.c ****     }
 2046              		.loc 1 1704 0
 2047 0008 FFF7FEFF 		bl	shellListUser
 2048              	.LVL231:
 2049              	.L192:
 2050 000c 08BD     		pop	{r3, pc}
 2051              		.cfi_endproc
 2052              	.LFE176:
 2054 000e 00BF     		.section	.text.shellListKey,"ax",%progbits
 2055              		.align	2
 2056              		.global	shellListKey
 2057              		.thumb
 2058              		.thumb_func
 2060              	shellListKey:
 2061              	.LFB144:
 664:SYS/shell/shell.c ****     ShellCommand *base = (ShellCommand *)shell->commandList.base;
 2062              		.loc 1 664 0
 2063              		.cfi_startproc
 2064              		@ args = 0, pretend = 0, frame = 0
 2065              		@ frame_needed = 0, uses_anonymous_args = 0
 2066              	.LVL232:
 2067 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2068              	.LCFI46:
 2069              		.cfi_def_cfa_offset 24
 2070              		.cfi_offset 3, -24
 2071              		.cfi_offset 4, -20
 2072              		.cfi_offset 5, -16
 2073              		.cfi_offset 6, -12
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 71


 2074              		.cfi_offset 7, -8
 2075              		.cfi_offset 14, -4
 2076 0002 0646     		mov	r6, r0
 665:SYS/shell/shell.c ****     shellWriteString(shell, shellText[SHELL_TEXT_KEY_LIST]);
 2077              		.loc 1 665 0
 2078 0004 876D     		ldr	r7, [r0, #88]
 2079              	.LVL233:
 666:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 2080              		.loc 1 666 0
 2081 0006 0E49     		ldr	r1, .L200
 2082 0008 FFF7FEFF 		bl	shellWriteString
 2083              	.LVL234:
 2084              	.LBB13:
 667:SYS/shell/shell.c ****     {
 2085              		.loc 1 667 0
 2086 000c 0024     		movs	r4, #0
 2087 000e 11E0     		b	.L196
 2088              	.LVL235:
 2089              	.L198:
 669:SYS/shell/shell.c ****         {
 2090              		.loc 1 669 0
 2091 0010 07EB0415 		add	r5, r7, r4, lsl #4
 2092 0014 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 2093 0016 03F00F03 		and	r3, r3, #15
 2094 001a 092B     		cmp	r3, #9
 2095 001c 08D1     		bne	.L197
 669:SYS/shell/shell.c ****         {
 2096              		.loc 1 669 0 is_stmt 0 discriminator 1
 2097 001e 2946     		mov	r1, r5
 2098 0020 3046     		mov	r0, r6
 2099 0022 FFF7FEFF 		bl	shellCheckPermission
 2100              	.LVL236:
 2101 0026 18B9     		cbnz	r0, .L197
 671:SYS/shell/shell.c ****         }
 2102              		.loc 1 671 0 is_stmt 1
 2103 0028 2946     		mov	r1, r5
 2104 002a 3046     		mov	r0, r6
 2105 002c FFF7FEFF 		bl	shellListItem
 2106              	.LVL237:
 2107              	.L197:
 667:SYS/shell/shell.c ****     {
 2108              		.loc 1 667 0 discriminator 2
 2109 0030 0134     		adds	r4, r4, #1
 2110              	.LVL238:
 2111 0032 24B2     		sxth	r4, r4
 2112              	.LVL239:
 2113              	.L196:
 667:SYS/shell/shell.c ****     {
 2114              		.loc 1 667 0 is_stmt 0 discriminator 1
 2115 0034 B6F85C30 		ldrh	r3, [r6, #92]
 2116 0038 9C42     		cmp	r4, r3
 2117 003a E9DB     		blt	.L198
 2118              	.LBE13:
 674:SYS/shell/shell.c **** 
 2119              		.loc 1 674 0 is_stmt 1
 2120 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2121              	.LVL240:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 72


 2122              	.L201:
 2123 003e 00BF     		.align	2
 2124              	.L200:
 2125 0040 7C010000 		.word	.LC19
 2126              		.cfi_endproc
 2127              	.LFE144:
 2129              		.section	.text.shellKeys,"ax",%progbits
 2130              		.align	2
 2131              		.global	shellKeys
 2132              		.thumb
 2133              		.thumb_func
 2135              	shellKeys:
 2136              	.LFB179:
1745:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 2137              		.loc 1 1745 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 0, uses_anonymous_args = 0
 2141 0000 08B5     		push	{r3, lr}
 2142              	.LCFI47:
 2143              		.cfi_def_cfa_offset 8
 2144              		.cfi_offset 3, -8
 2145              		.cfi_offset 14, -4
1746:SYS/shell/shell.c ****     if (shell)
 2146              		.loc 1 1746 0
 2147 0002 FFF7FEFF 		bl	shellGetCurrent
 2148              	.LVL241:
1747:SYS/shell/shell.c ****     {
 2149              		.loc 1 1747 0
 2150 0006 08B1     		cbz	r0, .L202
1749:SYS/shell/shell.c ****     }
 2151              		.loc 1 1749 0
 2152 0008 FFF7FEFF 		bl	shellListKey
 2153              	.LVL242:
 2154              	.L202:
 2155 000c 08BD     		pop	{r3, pc}
 2156              		.cfi_endproc
 2157              	.LFE179:
 2159 000e 00BF     		.section	.text.shellListAll,"ax",%progbits
 2160              		.align	2
 2161              		.global	shellListAll
 2162              		.thumb
 2163              		.thumb_func
 2165              	shellListAll:
 2166              	.LFB145:
 682:SYS/shell/shell.c **** #if SHELL_HELP_LIST_USER == 1
 2167              		.loc 1 682 0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 0
 2170              		@ frame_needed = 0, uses_anonymous_args = 0
 2171              	.LVL243:
 2172 0000 08B5     		push	{r3, lr}
 2173              	.LCFI48:
 2174              		.cfi_def_cfa_offset 8
 2175              		.cfi_offset 3, -8
 2176              		.cfi_offset 14, -4
 686:SYS/shell/shell.c **** #if SHELL_HELP_LIST_VAR == 1
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 73


 2177              		.loc 1 686 0
 2178 0002 FFF7FEFF 		bl	shellListCommand
 2179              	.LVL244:
 2180 0006 08BD     		pop	{r3, pc}
 2181              		.cfi_endproc
 2182              	.LFE145:
 2184              		.section	.text.shellDeleteCommandLine,"ax",%progbits
 2185              		.align	2
 2186              		.global	shellDeleteCommandLine
 2187              		.thumb
 2188              		.thumb_func
 2190              	shellDeleteCommandLine:
 2191              	.LFB146:
 702:SYS/shell/shell.c ****     while (length--)
 2192              		.loc 1 702 0
 2193              		.cfi_startproc
 2194              		@ args = 0, pretend = 0, frame = 0
 2195              		@ frame_needed = 0, uses_anonymous_args = 0
 2196              	.LVL245:
 2197 0000 38B5     		push	{r3, r4, r5, lr}
 2198              	.LCFI49:
 2199              		.cfi_def_cfa_offset 16
 2200              		.cfi_offset 3, -16
 2201              		.cfi_offset 4, -12
 2202              		.cfi_offset 5, -8
 2203              		.cfi_offset 14, -4
 2204 0002 0546     		mov	r5, r0
 703:SYS/shell/shell.c ****     {
 2205              		.loc 1 703 0
 2206 0004 04E0     		b	.L208
 2207              	.LVL246:
 2208              	.L209:
 705:SYS/shell/shell.c ****     }
 2209              		.loc 1 705 0
 2210 0006 0549     		ldr	r1, .L211
 2211 0008 2846     		mov	r0, r5
 2212 000a FFF7FEFF 		bl	shellWriteString
 2213              	.LVL247:
 703:SYS/shell/shell.c ****     {
 2214              		.loc 1 703 0
 2215 000e 2146     		mov	r1, r4
 2216              	.LVL248:
 2217              	.L208:
 2218 0010 4B1E     		subs	r3, r1, #1
 2219 0012 DCB2     		uxtb	r4, r3
 2220              	.LVL249:
 2221 0014 0029     		cmp	r1, #0
 2222 0016 F6D1     		bne	.L209
 707:SYS/shell/shell.c **** 
 2223              		.loc 1 707 0
 2224 0018 38BD     		pop	{r3, r4, r5, pc}
 2225              	.LVL250:
 2226              	.L212:
 2227 001a 00BF     		.align	2
 2228              	.L211:
 2229 001c 8C010000 		.word	.LC20
 2230              		.cfi_endproc
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 74


 2231              	.LFE146:
 2233              		.section	.text.shellClearCommandLine,"ax",%progbits
 2234              		.align	2
 2235              		.global	shellClearCommandLine
 2236              		.thumb
 2237              		.thumb_func
 2239              	shellClearCommandLine:
 2240              	.LFB147:
 715:SYS/shell/shell.c ****     for (short i = shell->parser.length - shell->parser.cursor; i > 0; i--)
 2241              		.loc 1 715 0
 2242              		.cfi_startproc
 2243              		@ args = 0, pretend = 0, frame = 0
 2244              		@ frame_needed = 0, uses_anonymous_args = 0
 2245              	.LVL251:
 2246 0000 38B5     		push	{r3, r4, r5, lr}
 2247              	.LCFI50:
 2248              		.cfi_def_cfa_offset 16
 2249              		.cfi_offset 3, -16
 2250              		.cfi_offset 4, -12
 2251              		.cfi_offset 5, -8
 2252              		.cfi_offset 14, -4
 2253 0002 0546     		mov	r5, r0
 2254              	.LBB14:
 716:SYS/shell/shell.c ****     {
 2255              		.loc 1 716 0
 2256 0004 8389     		ldrh	r3, [r0, #12]
 2257 0006 C489     		ldrh	r4, [r0, #14]
 2258 0008 1C1B     		subs	r4, r3, r4
 2259 000a 24B2     		sxth	r4, r4
 2260              	.LVL252:
 2261 000c 05E0     		b	.L214
 2262              	.LVL253:
 2263              	.L215:
 718:SYS/shell/shell.c ****     }
 2264              		.loc 1 718 0 discriminator 3
 2265 000e 2021     		movs	r1, #32
 2266 0010 2846     		mov	r0, r5
 2267 0012 FFF7FEFF 		bl	shellWriteByte
 2268              	.LVL254:
 716:SYS/shell/shell.c ****     {
 2269              		.loc 1 716 0 discriminator 3
 2270 0016 013C     		subs	r4, r4, #1
 2271              	.LVL255:
 2272 0018 24B2     		sxth	r4, r4
 2273              	.LVL256:
 2274              	.L214:
 716:SYS/shell/shell.c ****     {
 2275              		.loc 1 716 0 is_stmt 0 discriminator 1
 2276 001a 002C     		cmp	r4, #0
 2277 001c F7DC     		bgt	.L215
 2278              	.LBE14:
 720:SYS/shell/shell.c **** }
 2279              		.loc 1 720 0 is_stmt 1
 2280 001e 297B     		ldrb	r1, [r5, #12]	@ zero_extendqisi2
 2281 0020 2846     		mov	r0, r5
 2282 0022 FFF7FEFF 		bl	shellDeleteCommandLine
 2283              	.LVL257:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 75


 2284 0026 38BD     		pop	{r3, r4, r5, pc}
 2285              		.cfi_endproc
 2286              	.LFE147:
 2288              		.section	.text.shellHistory,"ax",%progbits
 2289              		.align	2
 2290              		.thumb
 2291              		.thumb_func
 2293              	shellHistory:
 2294              	.LFB162:
1244:SYS/shell/shell.c ****     if (dir > 0)
 2295              		.loc 1 1244 0
 2296              		.cfi_startproc
 2297              		@ args = 0, pretend = 0, frame = 0
 2298              		@ frame_needed = 0, uses_anonymous_args = 0
 2299              	.LVL258:
 2300 0000 10B5     		push	{r4, lr}
 2301              	.LCFI51:
 2302              		.cfi_def_cfa_offset 8
 2303              		.cfi_offset 4, -8
 2304              		.cfi_offset 14, -4
1245:SYS/shell/shell.c ****     {
 2305              		.loc 1 1245 0
 2306 0002 0029     		cmp	r1, #0
 2307              	.LVL259:
 2308 0004 19DD     		ble	.L218
1247:SYS/shell/shell.c ****             -((shell->history.number > shell->history.record) ? shell->history.number : shell->hist
 2309              		.loc 1 1247 0
 2310 0006 B0F95410 		ldrsh	r1, [r0, #84]
 2311 000a 4B1E     		subs	r3, r1, #1
 2312 000c A0F85430 		strh	r3, [r0, #84]	@ movhi
1248:SYS/shell/shell.c ****         {
 2313              		.loc 1 1248 0
 2314 0010 B0F85020 		ldrh	r2, [r0, #80]
 2315 0014 B0F85230 		ldrh	r3, [r0, #82]
 2316 0018 9A42     		cmp	r2, r3
 2317 001a 01D9     		bls	.L219
1248:SYS/shell/shell.c ****         {
 2318              		.loc 1 1248 0 is_stmt 0 discriminator 1
 2319 001c 5442     		negs	r4, r2
 2320 001e 00E0     		b	.L220
 2321              	.L219:
1248:SYS/shell/shell.c ****         {
 2322              		.loc 1 1248 0 discriminator 2
 2323 0020 5C42     		negs	r4, r3
 2324              	.L220:
1247:SYS/shell/shell.c ****             -((shell->history.number > shell->history.record) ? shell->history.number : shell->hist
 2325              		.loc 1 1247 0 is_stmt 1
 2326 0022 8C42     		cmp	r4, r1
 2327 0024 17DB     		blt	.L221
1250:SYS/shell/shell.c ****                                           ? shell->history.number
 2328              		.loc 1 1250 0
 2329 0026 9A42     		cmp	r2, r3
 2330 0028 02D9     		bls	.L222
1250:SYS/shell/shell.c ****                                           ? shell->history.number
 2331              		.loc 1 1250 0 is_stmt 0 discriminator 1
 2332 002a 5342     		negs	r3, r2
 2333 002c 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 76


 2334 002e 01E0     		b	.L223
 2335              	.L222:
1250:SYS/shell/shell.c ****                                           ? shell->history.number
 2336              		.loc 1 1250 0 discriminator 2
 2337 0030 5B42     		negs	r3, r3
 2338 0032 1BB2     		sxth	r3, r3
 2339              	.L223:
1250:SYS/shell/shell.c ****                                           ? shell->history.number
 2340              		.loc 1 1250 0 discriminator 4
 2341 0034 A0F85430 		strh	r3, [r0, #84]	@ movhi
 2342 0038 0DE0     		b	.L221
 2343              	.L218:
1255:SYS/shell/shell.c ****     {
 2344              		.loc 1 1255 0 is_stmt 1
 2345 003a 0029     		cmp	r1, #0
 2346 003c 30DA     		bge	.L217
1257:SYS/shell/shell.c ****         {
 2347              		.loc 1 1257 0
 2348 003e B0F95430 		ldrsh	r3, [r0, #84]
 2349 0042 0133     		adds	r3, r3, #1
 2350 0044 1BB2     		sxth	r3, r3
 2351 0046 A0F85430 		strh	r3, [r0, #84]	@ movhi
 2352 004a 002B     		cmp	r3, #0
 2353 004c 03DD     		ble	.L221
1259:SYS/shell/shell.c ****             return;
 2354              		.loc 1 1259 0
 2355 004e 0023     		movs	r3, #0
 2356 0050 A0F85430 		strh	r3, [r0, #84]	@ movhi
1260:SYS/shell/shell.c ****         }
 2357              		.loc 1 1260 0
 2358 0054 10BD     		pop	{r4, pc}
 2359              	.L221:
 2360 0056 0446     		mov	r4, r0
1267:SYS/shell/shell.c ****     if (shell->history.offset == 0)
 2361              		.loc 1 1267 0
 2362 0058 FFF7FEFF 		bl	shellClearCommandLine
 2363              	.LVL260:
1268:SYS/shell/shell.c ****     {
 2364              		.loc 1 1268 0
 2365 005c B4F95420 		ldrsh	r2, [r4, #84]
 2366 0060 1AB9     		cbnz	r2, .L225
1270:SYS/shell/shell.c ****     }
 2367              		.loc 1 1270 0
 2368 0062 0023     		movs	r3, #0
 2369 0064 A381     		strh	r3, [r4, #12]	@ movhi
 2370 0066 E381     		strh	r3, [r4, #14]	@ movhi
 2371 0068 10BD     		pop	{r4, pc}
 2372              	.LVL261:
 2373              	.L225:
1275:SYS/shell/shell.c ****         {
 2374              		.loc 1 1275 0
 2375 006a B4F85230 		ldrh	r3, [r4, #82]
 2376 006e 0533     		adds	r3, r3, #5
 2377 0070 1A44     		add	r2, r2, r3
 2378 0072 0C4B     		ldr	r3, .L227
 2379 0074 83FB0231 		smull	r3, r1, r3, r2
 2380 0078 D317     		asrs	r3, r2, #31
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 77


 2381 007a C3EB6103 		rsb	r3, r3, r1, asr #1
 2382 007e 03EB8303 		add	r3, r3, r3, lsl #2
 2383 0082 D31A     		subs	r3, r2, r3
1274:SYS/shell/shell.c ****                                                     shell->history.item[(shell->history.record + SH
 2384              		.loc 1 1274 0
 2385 0084 0E33     		adds	r3, r3, #14
 2386 0086 04EB8303 		add	r3, r4, r3, lsl #2
 2387 008a 5968     		ldr	r1, [r3, #4]
 2388 008c 2069     		ldr	r0, [r4, #16]
 2389 008e FFF7FEFF 		bl	shellStringCopy
 2390              	.LVL262:
 2391 0092 A081     		strh	r0, [r4, #12]	@ movhi
 2392 0094 20B1     		cbz	r0, .L217
1279:SYS/shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2393              		.loc 1 1279 0
 2394 0096 E081     		strh	r0, [r4, #14]	@ movhi
1280:SYS/shell/shell.c ****     }
 2395              		.loc 1 1280 0
 2396 0098 2169     		ldr	r1, [r4, #16]
 2397 009a 2046     		mov	r0, r4
 2398 009c FFF7FEFF 		bl	shellWriteString
 2399              	.LVL263:
 2400              	.L217:
 2401 00a0 10BD     		pop	{r4, pc}
 2402              	.L228:
 2403 00a2 00BF     		.align	2
 2404              	.L227:
 2405 00a4 67666666 		.word	1717986919
 2406              		.cfi_endproc
 2407              	.LFE162:
 2409              		.section	.text.shellUp,"ax",%progbits
 2410              		.align	2
 2411              		.global	shellUp
 2412              		.thumb
 2413              		.thumb_func
 2415              	shellUp:
 2416              	.LFB165:
1347:SYS/shell/shell.c ****     shellHistory(shell, 1);
 2417              		.loc 1 1347 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 0
 2420              		@ frame_needed = 0, uses_anonymous_args = 0
 2421              	.LVL264:
 2422 0000 08B5     		push	{r3, lr}
 2423              	.LCFI52:
 2424              		.cfi_def_cfa_offset 8
 2425              		.cfi_offset 3, -8
 2426              		.cfi_offset 14, -4
1348:SYS/shell/shell.c **** }
 2427              		.loc 1 1348 0
 2428 0002 0121     		movs	r1, #1
 2429 0004 FFF7FEFF 		bl	shellHistory
 2430              	.LVL265:
 2431 0008 08BD     		pop	{r3, pc}
 2432              		.cfi_endproc
 2433              	.LFE165:
 2435 000a 00BF     		.section	.text.shellDown,"ax",%progbits
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 78


 2436              		.align	2
 2437              		.global	shellDown
 2438              		.thumb
 2439              		.thumb_func
 2441              	shellDown:
 2442              	.LFB166:
1358:SYS/shell/shell.c ****     shellHistory(shell, -1);
 2443              		.loc 1 1358 0
 2444              		.cfi_startproc
 2445              		@ args = 0, pretend = 0, frame = 0
 2446              		@ frame_needed = 0, uses_anonymous_args = 0
 2447              	.LVL266:
 2448 0000 08B5     		push	{r3, lr}
 2449              	.LCFI53:
 2450              		.cfi_def_cfa_offset 8
 2451              		.cfi_offset 3, -8
 2452              		.cfi_offset 14, -4
1359:SYS/shell/shell.c **** }
 2453              		.loc 1 1359 0
 2454 0002 4FF0FF31 		mov	r1, #-1
 2455 0006 FFF7FEFF 		bl	shellHistory
 2456              	.LVL267:
 2457 000a 08BD     		pop	{r3, pc}
 2458              		.cfi_endproc
 2459              	.LFE166:
 2461              		.section	.text.shellTab,"ax",%progbits
 2462              		.align	2
 2463              		.global	shellTab
 2464              		.thumb
 2465              		.thumb_func
 2467              	shellTab:
 2468              	.LFB169:
1400:SYS/shell/shell.c ****     unsigned short maxMatch = shell->parser.bufferSize;
 2469              		.loc 1 1400 0
 2470              		.cfi_startproc
 2471              		@ args = 0, pretend = 0, frame = 0
 2472              		@ frame_needed = 0, uses_anonymous_args = 0
 2473              	.LVL268:
 2474 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2475              	.LCFI54:
 2476              		.cfi_def_cfa_offset 40
 2477              		.cfi_offset 3, -40
 2478              		.cfi_offset 4, -36
 2479              		.cfi_offset 5, -32
 2480              		.cfi_offset 6, -28
 2481              		.cfi_offset 7, -24
 2482              		.cfi_offset 8, -20
 2483              		.cfi_offset 9, -16
 2484              		.cfi_offset 10, -12
 2485              		.cfi_offset 11, -8
 2486              		.cfi_offset 14, -4
 2487 0004 0546     		mov	r5, r0
1401:SYS/shell/shell.c ****     unsigned short lastMatchIndex = 0;
 2488              		.loc 1 1401 0
 2489 0006 B0F834A0 		ldrh	r10, [r0, #52]
 2490              	.LVL269:
1406:SYS/shell/shell.c ****     {
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 79


 2491              		.loc 1 1406 0
 2492 000a 8389     		ldrh	r3, [r0, #12]
 2493 000c 3BB9     		cbnz	r3, .L234
1408:SYS/shell/shell.c ****         shellWriteCommandLine(shell, 1);
 2494              		.loc 1 1408 0
 2495 000e FFF7FEFF 		bl	shellListAll
 2496              	.LVL270:
1409:SYS/shell/shell.c ****     }
 2497              		.loc 1 1409 0
 2498 0012 0121     		movs	r1, #1
 2499 0014 2846     		mov	r0, r5
 2500 0016 FFF7FEFF 		bl	shellWriteCommandLine
 2501              	.LVL271:
 2502 001a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2503              	.LVL272:
 2504              	.L234:
1411:SYS/shell/shell.c ****     {
 2505              		.loc 1 1411 0
 2506 001e 002B     		cmp	r3, #0
 2507 0020 75D0     		beq	.L233
 2508              	.LBB15:
1413:SYS/shell/shell.c ****         ShellCommand *base = (ShellCommand *)shell->commandList.base;
 2509              		.loc 1 1413 0
 2510 0022 0269     		ldr	r2, [r0, #16]
 2511 0024 4FF00008 		mov	r8, #0
 2512 0028 02F80380 		strb	r8, [r2, r3]
1414:SYS/shell/shell.c ****         for (short i = 0; i < shell->commandList.count; i++)
 2513              		.loc 1 1414 0
 2514 002c 876D     		ldr	r7, [r0, #88]
 2515              	.LVL273:
 2516              	.LBB16:
1415:SYS/shell/shell.c ****         {
 2517              		.loc 1 1415 0
 2518 002e 4446     		mov	r4, r8
 2519              	.LBE16:
 2520              	.LBE15:
1403:SYS/shell/shell.c ****     unsigned short length;
 2521              		.loc 1 1403 0
 2522 0030 C146     		mov	r9, r8
 2523              	.LBB18:
 2524              	.LBB17:
1415:SYS/shell/shell.c ****         {
 2525              		.loc 1 1415 0
 2526 0032 3AE0     		b	.L236
 2527              	.LVL274:
 2528              	.L240:
1417:SYS/shell/shell.c ****                                                                                  (char *)shellGetCo
 2529              		.loc 1 1417 0
 2530 0034 07EB0416 		add	r6, r7, r4, lsl #4
 2531 0038 3146     		mov	r1, r6
 2532 003a 2846     		mov	r0, r5
 2533 003c FFF7FEFF 		bl	shellCheckPermission
 2534              	.LVL275:
 2535 0040 88BB     		cbnz	r0, .L237
1417:SYS/shell/shell.c ****                                                                                  (char *)shellGetCo
 2536              		.loc 1 1417 0 is_stmt 0 discriminator 1
 2537 0042 D5F810B0 		ldr	fp, [r5, #16]
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 80


1418:SYS/shell/shell.c ****             {
 2538              		.loc 1 1418 0 is_stmt 1 discriminator 1
 2539 0046 3046     		mov	r0, r6
 2540 0048 FFF7FEFF 		bl	shellGetCommandName
 2541              	.LVL276:
1417:SYS/shell/shell.c ****                                                                                  (char *)shellGetCo
 2542              		.loc 1 1417 0 discriminator 1
 2543 004c 0146     		mov	r1, r0
 2544 004e 5846     		mov	r0, fp
 2545 0050 FFF7FEFF 		bl	shellStringCompare
 2546              	.LVL277:
1418:SYS/shell/shell.c ****             {
 2547              		.loc 1 1418 0 discriminator 1
 2548 0054 AB89     		ldrh	r3, [r5, #12]
1417:SYS/shell/shell.c ****                                                                                  (char *)shellGetCo
 2549              		.loc 1 1417 0 discriminator 1
 2550 0056 9842     		cmp	r0, r3
 2551 0058 25D1     		bne	.L237
1420:SYS/shell/shell.c ****                 {
 2552              		.loc 1 1420 0
 2553 005a B9F1000F 		cmp	r9, #0
 2554 005e 1CD0     		beq	.L238
1422:SYS/shell/shell.c ****                     {
 2555              		.loc 1 1422 0
 2556 0060 B9F1010F 		cmp	r9, #1
 2557 0064 03D1     		bne	.L239
1424:SYS/shell/shell.c ****                     }
 2558              		.loc 1 1424 0
 2559 0066 2B49     		ldr	r1, .L245
 2560 0068 2846     		mov	r0, r5
 2561 006a FFF7FEFF 		bl	shellWriteString
 2562              	.LVL278:
 2563              	.L239:
1426:SYS/shell/shell.c ****                     length =
 2564              		.loc 1 1426 0
 2565 006e 07EB0818 		add	r8, r7, r8, lsl #4
 2566              	.LVL279:
 2567 0072 4146     		mov	r1, r8
 2568 0074 2846     		mov	r0, r5
 2569 0076 FFF7FEFF 		bl	shellListItem
 2570              	.LVL280:
1428:SYS/shell/shell.c ****                                            (char *)shellGetCommandName(&base[i]));
 2571              		.loc 1 1428 0
 2572 007a 4046     		mov	r0, r8
 2573 007c FFF7FEFF 		bl	shellGetCommandName
 2574              	.LVL281:
 2575 0080 8046     		mov	r8, r0
1429:SYS/shell/shell.c ****                     maxMatch = (maxMatch > length) ? length : maxMatch;
 2576              		.loc 1 1429 0
 2577 0082 3046     		mov	r0, r6
 2578 0084 FFF7FEFF 		bl	shellGetCommandName
 2579              	.LVL282:
1427:SYS/shell/shell.c ****                         shellStringCompare((char *)shellGetCommandName(&base[lastMatchIndex]),
 2580              		.loc 1 1427 0
 2581 0088 0146     		mov	r1, r0
 2582 008a 4046     		mov	r0, r8
 2583 008c FFF7FEFF 		bl	shellStringCompare
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 81


 2584              	.LVL283:
1430:SYS/shell/shell.c ****                 }
 2585              		.loc 1 1430 0
 2586 0090 5045     		cmp	r0, r10
 2587 0092 28BF     		it	cs
 2588 0094 5046     		movcs	r0, r10
 2589              	.LVL284:
 2590 0096 1FFA80FA 		uxth	r10, r0
 2591              	.LVL285:
 2592              	.L238:
1432:SYS/shell/shell.c ****                 matchNum++;
 2593              		.loc 1 1432 0
 2594 009a 1FFA84F8 		uxth	r8, r4
 2595              	.LVL286:
1433:SYS/shell/shell.c ****             }
 2596              		.loc 1 1433 0
 2597 009e 09F10109 		add	r9, r9, #1
 2598              	.LVL287:
 2599 00a2 1FFA89F9 		uxth	r9, r9
 2600              	.LVL288:
 2601              	.L237:
1415:SYS/shell/shell.c ****         {
 2602              		.loc 1 1415 0 discriminator 2
 2603 00a6 0134     		adds	r4, r4, #1
 2604              	.LVL289:
 2605 00a8 24B2     		sxth	r4, r4
 2606              	.LVL290:
 2607              	.L236:
1415:SYS/shell/shell.c ****         {
 2608              		.loc 1 1415 0 is_stmt 0 discriminator 1
 2609 00aa B5F85C30 		ldrh	r3, [r5, #92]
 2610 00ae 9C42     		cmp	r4, r3
 2611 00b0 C0DB     		blt	.L240
 2612              	.LBE17:
1436:SYS/shell/shell.c ****         {
 2613              		.loc 1 1436 0 is_stmt 1
 2614 00b2 B9F1000F 		cmp	r9, #0
 2615 00b6 2AD0     		beq	.L233
1440:SYS/shell/shell.c ****         {
 2616              		.loc 1 1440 0
 2617 00b8 B9F1010F 		cmp	r9, #1
 2618 00bc 02D1     		bne	.L241
1442:SYS/shell/shell.c ****         }
 2619              		.loc 1 1442 0
 2620 00be 2846     		mov	r0, r5
 2621 00c0 FFF7FEFF 		bl	shellClearCommandLine
 2622              	.LVL291:
 2623              	.L241:
1444:SYS/shell/shell.c ****         {
 2624              		.loc 1 1444 0
 2625 00c4 B9F1000F 		cmp	r9, #0
 2626 00c8 09D0     		beq	.L242
1447:SYS/shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
 2627              		.loc 1 1447 0
 2628 00ca 2C69     		ldr	r4, [r5, #16]
 2629              	.LVL292:
1448:SYS/shell/shell.c ****         }
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 82


 2630              		.loc 1 1448 0
 2631 00cc 07EB0810 		add	r0, r7, r8, lsl #4
 2632 00d0 FFF7FEFF 		bl	shellGetCommandName
 2633              	.LVL293:
1447:SYS/shell/shell.c ****                                 (char *)shellGetCommandName(&base[lastMatchIndex]));
 2634              		.loc 1 1447 0
 2635 00d4 0146     		mov	r1, r0
 2636 00d6 2046     		mov	r0, r4
 2637 00d8 FFF7FEFF 		bl	shellStringCopy
 2638              	.LVL294:
1446:SYS/shell/shell.c ****                 shellStringCopy(shell->parser.buffer,
 2639              		.loc 1 1446 0
 2640 00dc A881     		strh	r0, [r5, #12]	@ movhi
 2641              	.L242:
1450:SYS/shell/shell.c ****         {
 2642              		.loc 1 1450 0
 2643 00de B9F1010F 		cmp	r9, #1
 2644 00e2 0AD9     		bls	.L243
1452:SYS/shell/shell.c ****             shellWriteCommandLine(shell, 1);
 2645              		.loc 1 1452 0
 2646 00e4 07EB0811 		add	r1, r7, r8, lsl #4
 2647 00e8 2846     		mov	r0, r5
 2648 00ea FFF7FEFF 		bl	shellListItem
 2649              	.LVL295:
1453:SYS/shell/shell.c ****             shell->parser.length = maxMatch;
 2650              		.loc 1 1453 0
 2651 00ee 0121     		movs	r1, #1
 2652 00f0 2846     		mov	r0, r5
 2653 00f2 FFF7FEFF 		bl	shellWriteCommandLine
 2654              	.LVL296:
1454:SYS/shell/shell.c ****         }
 2655              		.loc 1 1454 0
 2656 00f6 A5F80CA0 		strh	r10, [r5, #12]	@ movhi
 2657              	.L243:
1456:SYS/shell/shell.c ****         shell->parser.cursor = shell->parser.length;
 2658              		.loc 1 1456 0
 2659 00fa 2A69     		ldr	r2, [r5, #16]
 2660 00fc AB89     		ldrh	r3, [r5, #12]
 2661 00fe 0021     		movs	r1, #0
 2662 0100 D154     		strb	r1, [r2, r3]
1457:SYS/shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2663              		.loc 1 1457 0
 2664 0102 AB89     		ldrh	r3, [r5, #12]
 2665 0104 EB81     		strh	r3, [r5, #14]	@ movhi
1458:SYS/shell/shell.c ****     }
 2666              		.loc 1 1458 0
 2667 0106 2969     		ldr	r1, [r5, #16]
 2668 0108 2846     		mov	r0, r5
 2669 010a FFF7FEFF 		bl	shellWriteString
 2670              	.LVL297:
 2671              	.L233:
 2672 010e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2673              	.LVL298:
 2674              	.L246:
 2675 0112 00BF     		.align	2
 2676              	.L245:
 2677 0114 CC000000 		.word	.LC3
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 83


 2678              	.LBE18:
 2679              		.cfi_endproc
 2680              	.LFE169:
 2682              		.section	.text.shellInsertByte,"ax",%progbits
 2683              		.align	2
 2684              		.global	shellInsertByte
 2685              		.thumb
 2686              		.thumb_func
 2688              	shellInsertByte:
 2689              	.LFB148:
 730:SYS/shell/shell.c ****     /* 判断输入数据是否过长 */
 2690              		.loc 1 730 0
 2691              		.cfi_startproc
 2692              		@ args = 0, pretend = 0, frame = 0
 2693              		@ frame_needed = 0, uses_anonymous_args = 0
 2694              	.LVL299:
 2695 0000 38B5     		push	{r3, r4, r5, lr}
 2696              	.LCFI55:
 2697              		.cfi_def_cfa_offset 16
 2698              		.cfi_offset 3, -16
 2699              		.cfi_offset 4, -12
 2700              		.cfi_offset 5, -8
 2701              		.cfi_offset 14, -4
 2702 0002 0446     		mov	r4, r0
 732:SYS/shell/shell.c ****     {
 2703              		.loc 1 732 0
 2704 0004 8389     		ldrh	r3, [r0, #12]
 2705 0006 828E     		ldrh	r2, [r0, #52]
 2706 0008 013A     		subs	r2, r2, #1
 2707 000a 9342     		cmp	r3, r2
 2708 000c 0BDB     		blt	.L248
 734:SYS/shell/shell.c ****         shellWriteCommandLine(shell, 1);
 2709              		.loc 1 734 0
 2710 000e 2A49     		ldr	r1, .L258
 2711              	.LVL300:
 2712 0010 FFF7FEFF 		bl	shellWriteString
 2713              	.LVL301:
 735:SYS/shell/shell.c ****         shellWriteString(shell, shell->parser.buffer);
 2714              		.loc 1 735 0
 2715 0014 0121     		movs	r1, #1
 2716 0016 2046     		mov	r0, r4
 2717 0018 FFF7FEFF 		bl	shellWriteCommandLine
 2718              	.LVL302:
 736:SYS/shell/shell.c ****         return;
 2719              		.loc 1 736 0
 2720 001c 2169     		ldr	r1, [r4, #16]
 2721 001e 2046     		mov	r0, r4
 2722 0020 FFF7FEFF 		bl	shellWriteString
 2723              	.LVL303:
 737:SYS/shell/shell.c ****     }
 2724              		.loc 1 737 0
 2725 0024 38BD     		pop	{r3, r4, r5, pc}
 2726              	.LVL304:
 2727              	.L248:
 741:SYS/shell/shell.c ****     {
 2728              		.loc 1 741 0
 2729 0026 C289     		ldrh	r2, [r0, #14]
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 84


 2730 0028 9342     		cmp	r3, r2
 2731 002a 0ED1     		bne	.L250
 743:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 2732              		.loc 1 743 0
 2733 002c 0269     		ldr	r2, [r0, #16]
 2734 002e 581C     		adds	r0, r3, #1
 2735              	.LVL305:
 2736 0030 A081     		strh	r0, [r4, #12]	@ movhi
 2737 0032 D154     		strb	r1, [r2, r3]
 744:SYS/shell/shell.c ****         shell->parser.cursor++;
 2738              		.loc 1 744 0
 2739 0034 2269     		ldr	r2, [r4, #16]
 2740 0036 A389     		ldrh	r3, [r4, #12]
 2741 0038 0020     		movs	r0, #0
 2742 003a D054     		strb	r0, [r2, r3]
 745:SYS/shell/shell.c ****         shellWriteByte(shell, data);
 2743              		.loc 1 745 0
 2744 003c E389     		ldrh	r3, [r4, #14]
 2745 003e 0133     		adds	r3, r3, #1
 2746 0040 E381     		strh	r3, [r4, #14]	@ movhi
 746:SYS/shell/shell.c ****     }
 2747              		.loc 1 746 0
 2748 0042 2046     		mov	r0, r4
 2749 0044 FFF7FEFF 		bl	shellWriteByte
 2750              	.LVL306:
 2751 0048 38BD     		pop	{r3, r4, r5, pc}
 2752              	.LVL307:
 2753              	.L250:
 748:SYS/shell/shell.c ****     {
 2754              		.loc 1 748 0
 2755 004a 9342     		cmp	r3, r2
 2756 004c 33D9     		bls	.L247
 2757              	.LBB19:
 750:SYS/shell/shell.c ****         {
 2758              		.loc 1 750 0
 2759 004e 9B1A     		subs	r3, r3, r2
 2760 0050 1BB2     		sxth	r3, r3
 2761              	.LVL308:
 2762 0052 08E0     		b	.L251
 2763              	.LVL309:
 2764              	.L252:
 752:SYS/shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 2765              		.loc 1 752 0 discriminator 3
 2766 0054 2069     		ldr	r0, [r4, #16]
 2767 0056 E289     		ldrh	r2, [r4, #14]
 2768 0058 1A44     		add	r2, r2, r3
 2769 005a 8518     		adds	r5, r0, r2
 753:SYS/shell/shell.c ****         }
 2770              		.loc 1 753 0 discriminator 3
 2771 005c 15F8015C 		ldrb	r5, [r5, #-1]	@ zero_extendqisi2
 752:SYS/shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i - 1];
 2772              		.loc 1 752 0 discriminator 3
 2773 0060 8554     		strb	r5, [r0, r2]
 750:SYS/shell/shell.c ****         {
 2774              		.loc 1 750 0 discriminator 3
 2775 0062 013B     		subs	r3, r3, #1
 2776              	.LVL310:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 85


 2777 0064 1BB2     		sxth	r3, r3
 2778              	.LVL311:
 2779              	.L251:
 750:SYS/shell/shell.c ****         {
 2780              		.loc 1 750 0 is_stmt 0 discriminator 1
 2781 0066 002B     		cmp	r3, #0
 2782 0068 F4DC     		bgt	.L252
 2783              	.LBE19:
 755:SYS/shell/shell.c ****         shell->parser.buffer[++shell->parser.length] = 0;
 2784              		.loc 1 755 0 is_stmt 1
 2785 006a 2269     		ldr	r2, [r4, #16]
 2786 006c E389     		ldrh	r3, [r4, #14]
 2787              	.LVL312:
 2788 006e 581C     		adds	r0, r3, #1
 2789 0070 E081     		strh	r0, [r4, #14]	@ movhi
 2790 0072 D154     		strb	r1, [r2, r3]
 756:SYS/shell/shell.c ****         for (short i = shell->parser.cursor - 1; i < shell->parser.length; i++)
 2791              		.loc 1 756 0
 2792 0074 2269     		ldr	r2, [r4, #16]
 2793 0076 A389     		ldrh	r3, [r4, #12]
 2794 0078 0133     		adds	r3, r3, #1
 2795 007a 9BB2     		uxth	r3, r3
 2796 007c A381     		strh	r3, [r4, #12]	@ movhi
 2797 007e 0021     		movs	r1, #0
 2798              	.LVL313:
 2799 0080 D154     		strb	r1, [r2, r3]
 2800              	.LBB20:
 757:SYS/shell/shell.c ****         {
 2801              		.loc 1 757 0
 2802 0082 E589     		ldrh	r5, [r4, #14]
 2803 0084 013D     		subs	r5, r5, #1
 2804 0086 2DB2     		sxth	r5, r5
 2805              	.LVL314:
 2806 0088 06E0     		b	.L253
 2807              	.L254:
 759:SYS/shell/shell.c ****         }
 2808              		.loc 1 759 0 discriminator 3
 2809 008a 2369     		ldr	r3, [r4, #16]
 2810 008c 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 2811 008e 2046     		mov	r0, r4
 2812 0090 FFF7FEFF 		bl	shellWriteByte
 2813              	.LVL315:
 757:SYS/shell/shell.c ****         {
 2814              		.loc 1 757 0 discriminator 3
 2815 0094 0135     		adds	r5, r5, #1
 2816              	.LVL316:
 2817 0096 2DB2     		sxth	r5, r5
 2818              	.LVL317:
 2819              	.L253:
 757:SYS/shell/shell.c ****         {
 2820              		.loc 1 757 0 is_stmt 0 discriminator 1
 2821 0098 A389     		ldrh	r3, [r4, #12]
 2822 009a 9D42     		cmp	r5, r3
 2823 009c F5DB     		blt	.L254
 2824              	.LBE20:
 2825              	.LBB21:
 761:SYS/shell/shell.c ****         {
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 86


 2826              		.loc 1 761 0 is_stmt 1
 2827 009e E589     		ldrh	r5, [r4, #14]
 2828              	.LVL318:
 2829 00a0 5D1B     		subs	r5, r3, r5
 2830 00a2 2DB2     		sxth	r5, r5
 2831              	.LVL319:
 2832 00a4 05E0     		b	.L255
 2833              	.L256:
 763:SYS/shell/shell.c ****         }
 2834              		.loc 1 763 0 discriminator 3
 2835 00a6 0821     		movs	r1, #8
 2836 00a8 2046     		mov	r0, r4
 2837 00aa FFF7FEFF 		bl	shellWriteByte
 2838              	.LVL320:
 761:SYS/shell/shell.c ****         {
 2839              		.loc 1 761 0 discriminator 3
 2840 00ae 013D     		subs	r5, r5, #1
 2841              	.LVL321:
 2842 00b0 2DB2     		sxth	r5, r5
 2843              	.LVL322:
 2844              	.L255:
 761:SYS/shell/shell.c ****         {
 2845              		.loc 1 761 0 is_stmt 0 discriminator 1
 2846 00b2 002D     		cmp	r5, #0
 2847 00b4 F7DC     		bgt	.L256
 2848              	.LVL323:
 2849              	.L247:
 2850 00b6 38BD     		pop	{r3, r4, r5, pc}
 2851              	.LVL324:
 2852              	.L259:
 2853              		.align	2
 2854              	.L258:
 2855 00b8 90010000 		.word	.LC21
 2856              	.LBE21:
 2857              		.cfi_endproc
 2858              	.LFE148:
 2860              		.section	.text.shellDeleteByte,"ax",%progbits
 2861              		.align	2
 2862              		.global	shellDeleteByte
 2863              		.thumb
 2864              		.thumb_func
 2866              	shellDeleteByte:
 2867              	.LFB149:
 775:SYS/shell/shell.c ****     char offset = (direction == -1) ? 1 : 0;
 2868              		.loc 1 775 0 is_stmt 1
 2869              		.cfi_startproc
 2870              		@ args = 0, pretend = 0, frame = 0
 2871              		@ frame_needed = 0, uses_anonymous_args = 0
 2872              	.LVL325:
 2873 0000 38B5     		push	{r3, r4, r5, lr}
 2874              	.LCFI56:
 2875              		.cfi_def_cfa_offset 16
 2876              		.cfi_offset 3, -16
 2877              		.cfi_offset 4, -12
 2878              		.cfi_offset 5, -8
 2879              		.cfi_offset 14, -4
 776:SYS/shell/shell.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 87


 2880              		.loc 1 776 0
 2881 0002 B1F1FF3F 		cmp	r1, #-1
 2882 0006 14BF     		ite	ne
 2883 0008 0023     		movne	r3, #0
 2884 000a 0123     		moveq	r3, #1
 2885              	.LVL326:
 778:SYS/shell/shell.c ****     {
 2886              		.loc 1 778 0
 2887 000c C289     		ldrh	r2, [r0, #14]
 2888 000e 0AB9     		cbnz	r2, .L261
 778:SYS/shell/shell.c ****     {
 2889              		.loc 1 778 0 is_stmt 0 discriminator 1
 2890 0010 0129     		cmp	r1, #1
 2891 0012 52D0     		beq	.L260
 2892              	.L261:
 778:SYS/shell/shell.c ****     {
 2893              		.loc 1 778 0 discriminator 3
 2894 0014 8589     		ldrh	r5, [r0, #12]
 2895 0016 AA42     		cmp	r2, r5
 2896 0018 02D1     		bne	.L263
 778:SYS/shell/shell.c ****     {
 2897              		.loc 1 778 0 discriminator 4
 2898 001a B1F1FF3F 		cmp	r1, #-1
 2899 001e 4CD0     		beq	.L260
 2900              	.L263:
 2901 0020 0446     		mov	r4, r0
 782:SYS/shell/shell.c ****     {
 2902              		.loc 1 782 0 is_stmt 1
 2903 0022 AA42     		cmp	r2, r5
 2904 0024 0DD1     		bne	.L264
 782:SYS/shell/shell.c ****     {
 2905              		.loc 1 782 0 is_stmt 0 discriminator 1
 2906 0026 0129     		cmp	r1, #1
 2907 0028 0BD1     		bne	.L264
 784:SYS/shell/shell.c ****         shell->parser.length--;
 2908              		.loc 1 784 0 is_stmt 1
 2909 002a 013A     		subs	r2, r2, #1
 2910 002c C281     		strh	r2, [r0, #14]	@ movhi
 785:SYS/shell/shell.c ****         shell->parser.buffer[shell->parser.length] = 0;
 2911              		.loc 1 785 0
 2912 002e 6B1E     		subs	r3, r5, #1
 2913              	.LVL327:
 2914 0030 9BB2     		uxth	r3, r3
 2915 0032 8381     		strh	r3, [r0, #12]	@ movhi
 786:SYS/shell/shell.c ****         shellDeleteCommandLine(shell, 1);
 2916              		.loc 1 786 0
 2917 0034 0269     		ldr	r2, [r0, #16]
 2918 0036 0021     		movs	r1, #0
 2919              	.LVL328:
 2920 0038 D154     		strb	r1, [r2, r3]
 787:SYS/shell/shell.c ****     }
 2921              		.loc 1 787 0
 2922 003a 0121     		movs	r1, #1
 2923 003c FFF7FEFF 		bl	shellDeleteCommandLine
 2924              	.LVL329:
 2925 0040 38BD     		pop	{r3, r4, r5, pc}
 2926              	.LVL330:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 88


 2927              	.L264:
 2928              	.LBB22:
 791:SYS/shell/shell.c ****         {
 2929              		.loc 1 791 0
 2930 0042 1BB2     		sxth	r3, r3
 2931              	.LVL331:
 2932 0044 06E0     		b	.L265
 2933              	.LVL332:
 2934              	.L266:
 793:SYS/shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 2935              		.loc 1 793 0 discriminator 3
 2936 0046 2069     		ldr	r0, [r4, #16]
 2937 0048 1A44     		add	r2, r2, r3
 2938 004a 551E     		subs	r5, r2, #1
 794:SYS/shell/shell.c ****         }
 2939              		.loc 1 794 0 discriminator 3
 2940 004c 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 793:SYS/shell/shell.c ****                 shell->parser.buffer[shell->parser.cursor + i];
 2941              		.loc 1 793 0 discriminator 3
 2942 004e 4255     		strb	r2, [r0, r5]
 791:SYS/shell/shell.c ****         {
 2943              		.loc 1 791 0 discriminator 3
 2944 0050 0133     		adds	r3, r3, #1
 2945              	.LVL333:
 2946 0052 1BB2     		sxth	r3, r3
 2947              	.LVL334:
 2948              	.L265:
 791:SYS/shell/shell.c ****         {
 2949              		.loc 1 791 0 is_stmt 0 discriminator 1
 2950 0054 A089     		ldrh	r0, [r4, #12]
 2951 0056 E289     		ldrh	r2, [r4, #14]
 2952 0058 851A     		subs	r5, r0, r2
 2953 005a AB42     		cmp	r3, r5
 2954 005c F3DB     		blt	.L266
 2955              	.LBE22:
 796:SYS/shell/shell.c ****         if (!offset)
 2956              		.loc 1 796 0 is_stmt 1
 2957 005e 0138     		subs	r0, r0, #1
 2958 0060 A081     		strh	r0, [r4, #12]	@ movhi
 797:SYS/shell/shell.c ****         {
 2959              		.loc 1 797 0
 2960 0062 B1F1FF3F 		cmp	r1, #-1
 2961 0066 05D0     		beq	.L267
 799:SYS/shell/shell.c ****             shellWriteByte(shell, '\b');
 2962              		.loc 1 799 0
 2963 0068 013A     		subs	r2, r2, #1
 2964 006a E281     		strh	r2, [r4, #14]	@ movhi
 800:SYS/shell/shell.c ****         }
 2965              		.loc 1 800 0
 2966 006c 0821     		movs	r1, #8
 2967              	.LVL335:
 2968 006e 2046     		mov	r0, r4
 2969 0070 FFF7FEFF 		bl	shellWriteByte
 2970              	.LVL336:
 2971              	.L267:
 802:SYS/shell/shell.c ****         for (short i = shell->parser.cursor; i < shell->parser.length; i++)
 2972              		.loc 1 802 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 89


 2973 0074 2269     		ldr	r2, [r4, #16]
 2974 0076 A389     		ldrh	r3, [r4, #12]
 2975 0078 0021     		movs	r1, #0
 2976 007a D154     		strb	r1, [r2, r3]
 2977              	.LBB23:
 803:SYS/shell/shell.c ****         {
 2978              		.loc 1 803 0
 2979 007c B4F90E50 		ldrsh	r5, [r4, #14]
 2980              	.LVL337:
 2981 0080 06E0     		b	.L268
 2982              	.L269:
 805:SYS/shell/shell.c ****         }
 2983              		.loc 1 805 0 discriminator 3
 2984 0082 2369     		ldr	r3, [r4, #16]
 2985 0084 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 2986 0086 2046     		mov	r0, r4
 2987 0088 FFF7FEFF 		bl	shellWriteByte
 2988              	.LVL338:
 803:SYS/shell/shell.c ****         {
 2989              		.loc 1 803 0 discriminator 3
 2990 008c 0135     		adds	r5, r5, #1
 2991              	.LVL339:
 2992 008e 2DB2     		sxth	r5, r5
 2993              	.LVL340:
 2994              	.L268:
 803:SYS/shell/shell.c ****         {
 2995              		.loc 1 803 0 is_stmt 0 discriminator 1
 2996 0090 A389     		ldrh	r3, [r4, #12]
 2997 0092 9D42     		cmp	r5, r3
 2998 0094 F5DB     		blt	.L269
 2999              	.LBE23:
 807:SYS/shell/shell.c ****         for (short i = shell->parser.length - shell->parser.cursor + 1; i > 0; i--)
 3000              		.loc 1 807 0 is_stmt 1
 3001 0096 2021     		movs	r1, #32
 3002 0098 2046     		mov	r0, r4
 3003 009a FFF7FEFF 		bl	shellWriteByte
 3004              	.LVL341:
 3005              	.LBB24:
 808:SYS/shell/shell.c ****         {
 3006              		.loc 1 808 0
 3007 009e A389     		ldrh	r3, [r4, #12]
 3008 00a0 E589     		ldrh	r5, [r4, #14]
 3009              	.LVL342:
 3010 00a2 5D1B     		subs	r5, r3, r5
 3011 00a4 0135     		adds	r5, r5, #1
 3012 00a6 2DB2     		sxth	r5, r5
 3013              	.LVL343:
 3014 00a8 05E0     		b	.L270
 3015              	.L271:
 810:SYS/shell/shell.c ****         }
 3016              		.loc 1 810 0 discriminator 3
 3017 00aa 0821     		movs	r1, #8
 3018 00ac 2046     		mov	r0, r4
 3019 00ae FFF7FEFF 		bl	shellWriteByte
 3020              	.LVL344:
 808:SYS/shell/shell.c ****         {
 3021              		.loc 1 808 0 discriminator 3
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 90


 3022 00b2 013D     		subs	r5, r5, #1
 3023              	.LVL345:
 3024 00b4 2DB2     		sxth	r5, r5
 3025              	.LVL346:
 3026              	.L270:
 808:SYS/shell/shell.c ****         {
 3027              		.loc 1 808 0 is_stmt 0 discriminator 1
 3028 00b6 002D     		cmp	r5, #0
 3029 00b8 F7DC     		bgt	.L271
 3030              	.LVL347:
 3031              	.L260:
 3032 00ba 38BD     		pop	{r3, r4, r5, pc}
 3033              	.LBE24:
 3034              		.cfi_endproc
 3035              	.LFE149:
 3037              		.section	.text.shellBackspace,"ax",%progbits
 3038              		.align	2
 3039              		.global	shellBackspace
 3040              		.thumb
 3041              		.thumb_func
 3043              	shellBackspace:
 3044              	.LFB170:
1490:SYS/shell/shell.c ****     shellDeleteByte(shell, 1);
 3045              		.loc 1 1490 0 is_stmt 1
 3046              		.cfi_startproc
 3047              		@ args = 0, pretend = 0, frame = 0
 3048              		@ frame_needed = 0, uses_anonymous_args = 0
 3049              	.LVL348:
 3050 0000 08B5     		push	{r3, lr}
 3051              	.LCFI57:
 3052              		.cfi_def_cfa_offset 8
 3053              		.cfi_offset 3, -8
 3054              		.cfi_offset 14, -4
1491:SYS/shell/shell.c **** }
 3055              		.loc 1 1491 0
 3056 0002 0121     		movs	r1, #1
 3057 0004 FFF7FEFF 		bl	shellDeleteByte
 3058              	.LVL349:
 3059 0008 08BD     		pop	{r3, pc}
 3060              		.cfi_endproc
 3061              	.LFE170:
 3063 000a 00BF     		.section	.text.shellDelete,"ax",%progbits
 3064              		.align	2
 3065              		.global	shellDelete
 3066              		.thumb
 3067              		.thumb_func
 3069              	shellDelete:
 3070              	.LFB171:
1504:SYS/shell/shell.c ****     shellDeleteByte(shell, -1);
 3071              		.loc 1 1504 0
 3072              		.cfi_startproc
 3073              		@ args = 0, pretend = 0, frame = 0
 3074              		@ frame_needed = 0, uses_anonymous_args = 0
 3075              	.LVL350:
 3076 0000 08B5     		push	{r3, lr}
 3077              	.LCFI58:
 3078              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 91


 3079              		.cfi_offset 3, -8
 3080              		.cfi_offset 14, -4
1505:SYS/shell/shell.c **** }
 3081              		.loc 1 1505 0
 3082 0002 4FF0FF31 		mov	r1, #-1
 3083 0006 FFF7FEFF 		bl	shellDeleteByte
 3084              	.LVL351:
 3085 000a 08BD     		pop	{r3, pc}
 3086              		.cfi_endproc
 3087              	.LFE171:
 3089              		.section	.text.shellSeekCommand,"ax",%progbits
 3090              		.align	2
 3091              		.global	shellSeekCommand
 3092              		.thumb
 3093              		.thumb_func
 3095              	shellSeekCommand:
 3096              	.LFB152:
 897:SYS/shell/shell.c ****     const char *name;
 3097              		.loc 1 897 0
 3098              		.cfi_startproc
 3099              		@ args = 0, pretend = 0, frame = 0
 3100              		@ frame_needed = 0, uses_anonymous_args = 0
 3101              	.LVL352:
 3102 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3103              	.LCFI59:
 3104              		.cfi_def_cfa_offset 32
 3105              		.cfi_offset 4, -32
 3106              		.cfi_offset 5, -28
 3107              		.cfi_offset 6, -24
 3108              		.cfi_offset 7, -20
 3109              		.cfi_offset 8, -16
 3110              		.cfi_offset 9, -12
 3111              		.cfi_offset 10, -8
 3112              		.cfi_offset 14, -4
 3113 0004 8046     		mov	r8, r0
 3114 0006 8A46     		mov	r10, r1
 3115 0008 1746     		mov	r7, r2
 3116 000a 9946     		mov	r9, r3
 900:SYS/shell/shell.c ****                            ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 3117              		.loc 1 900 0
 3118 000c B0F85C30 		ldrh	r3, [r0, #92]
 3119              	.LVL353:
 901:SYS/shell/shell.c ****     for (unsigned short i = 0; i < count; i++)
 3120              		.loc 1 901 0
 3121 0010 866D     		ldr	r6, [r0, #88]
 3122 0012 961B     		subs	r6, r2, r6
 900:SYS/shell/shell.c ****                            ((int)base - (int)shell->commandList.base) / sizeof(ShellCommand);
 3123              		.loc 1 900 0
 3124 0014 A3EB1616 		sub	r6, r3, r6, lsr #4
 3125 0018 B6B2     		uxth	r6, r6
 3126              	.LVL354:
 3127              	.LBB25:
 902:SYS/shell/shell.c ****     {
 3128              		.loc 1 902 0
 3129 001a 0024     		movs	r4, #0
 3130 001c 1EE0     		b	.L278
 3131              	.LVL355:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 92


 3132              	.L282:
 904:SYS/shell/shell.c ****         {
 3133              		.loc 1 904 0
 3134 001e 07EB0415 		add	r5, r7, r4, lsl #4
 3135 0022 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3136 0024 03F00F03 		and	r3, r3, #15
 3137 0028 092B     		cmp	r3, #9
 3138 002a 15D0     		beq	.L279
 904:SYS/shell/shell.c ****         {
 3139              		.loc 1 904 0 is_stmt 0 discriminator 1
 3140 002c 2946     		mov	r1, r5
 3141 002e 4046     		mov	r0, r8
 3142 0030 FFF7FEFF 		bl	shellCheckPermission
 3143              	.LVL356:
 3144 0034 80B9     		cbnz	r0, .L279
 908:SYS/shell/shell.c ****         if (!compareLength)
 3145              		.loc 1 908 0 is_stmt 1
 3146 0036 2846     		mov	r0, r5
 3147 0038 FFF7FEFF 		bl	shellGetCommandName
 3148              	.LVL357:
 3149 003c 0146     		mov	r1, r0
 3150              	.LVL358:
 909:SYS/shell/shell.c ****         {
 3151              		.loc 1 909 0
 3152 003e B9F1000F 		cmp	r9, #0
 3153 0042 04D1     		bne	.L280
 912:SYS/shell/shell.c ****             {
 3154              		.loc 1 912 0
 3155 0044 5046     		mov	r0, r10
 3156              	.LVL359:
 3157 0046 FFF7FEFF 		bl	strcmp
 3158              	.LVL360:
 3159 004a 28B9     		cbnz	r0, .L279
 3160 004c 09E0     		b	.L281
 3161              	.LVL361:
 3162              	.L280:
 919:SYS/shell/shell.c ****             {
 3163              		.loc 1 919 0
 3164 004e 4A46     		mov	r2, r9
 3165 0050 5046     		mov	r0, r10
 3166              	.LVL362:
 3167 0052 FFF7FEFF 		bl	strncmp
 3168              	.LVL363:
 3169 0056 20B1     		cbz	r0, .L281
 3170              	.L279:
 902:SYS/shell/shell.c ****     {
 3171              		.loc 1 902 0 discriminator 2
 3172 0058 0134     		adds	r4, r4, #1
 3173              	.LVL364:
 3174 005a A4B2     		uxth	r4, r4
 3175              	.LVL365:
 3176              	.L278:
 902:SYS/shell/shell.c ****     {
 3177              		.loc 1 902 0 is_stmt 0 discriminator 1
 3178 005c B442     		cmp	r4, r6
 3179 005e DED3     		bcc	.L282
 3180              	.LBE25:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 93


 925:SYS/shell/shell.c **** }
 3181              		.loc 1 925 0 is_stmt 1
 3182 0060 0025     		movs	r5, #0
 3183              	.L281:
 926:SYS/shell/shell.c **** 
 3184              		.loc 1 926 0
 3185 0062 2846     		mov	r0, r5
 3186 0064 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3187              		.cfi_endproc
 3188              	.LFE152:
 3190              		.section	.text.shellInit,"ax",%progbits
 3191              		.align	2
 3192              		.global	shellInit
 3193              		.thumb
 3194              		.thumb_func
 3196              	shellInit:
 3197              	.LFB124:
 164:SYS/shell/shell.c ****     __asm("cpsid i");
 3198              		.loc 1 164 0
 3199              		.cfi_startproc
 3200              		@ args = 0, pretend = 0, frame = 0
 3201              		@ frame_needed = 0, uses_anonymous_args = 0
 3202              	.LVL366:
 3203 0000 38B5     		push	{r3, r4, r5, lr}
 3204              	.LCFI60:
 3205              		.cfi_def_cfa_offset 16
 3206              		.cfi_offset 3, -16
 3207              		.cfi_offset 4, -12
 3208              		.cfi_offset 5, -8
 3209              		.cfi_offset 14, -4
 3210 0002 0446     		mov	r4, r0
 165:SYS/shell/shell.c ****     shell->parser.length = 0;
 3211              		.loc 1 165 0
 3212              		.syntax unified
 3213              	@ 165 "SYS/shell/shell.c" 1
 3214 0004 72B6     		cpsid i
 3215              	@ 0 "" 2
 166:SYS/shell/shell.c ****     shell->parser.cursor = 0;
 3216              		.loc 1 166 0
 3217              		.thumb
 3218              		.syntax unified
 3219 0006 0023     		movs	r3, #0
 3220 0008 8381     		strh	r3, [r0, #12]	@ movhi
 167:SYS/shell/shell.c ****     shell->history.offset = 0;
 3221              		.loc 1 167 0
 3222 000a C381     		strh	r3, [r0, #14]	@ movhi
 168:SYS/shell/shell.c ****     shell->history.number = 0;
 3223              		.loc 1 168 0
 3224 000c A0F85430 		strh	r3, [r0, #84]	@ movhi
 169:SYS/shell/shell.c ****     shell->history.record = 0;
 3225              		.loc 1 169 0
 3226 0010 A0F85030 		strh	r3, [r0, #80]	@ movhi
 170:SYS/shell/shell.c ****     shell->info.user = NULL;
 3227              		.loc 1 170 0
 3228 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
 171:SYS/shell/shell.c ****     shell->status.isChecked = 1;
 3229              		.loc 1 171 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 94


 3230 0018 0360     		str	r3, [r0]
 172:SYS/shell/shell.c **** 
 3231              		.loc 1 172 0
 3232 001a 90F86000 		ldrb	r0, [r0, #96]	@ zero_extendqisi2
 3233              	.LVL367:
 3234 001e 40F00100 		orr	r0, r0, #1
 3235 0022 84F86000 		strb	r0, [r4, #96]
 174:SYS/shell/shell.c ****     shell->parser.bufferSize = size / (SHELL_HISTORY_MAX_NUMBER + 1);
 3236              		.loc 1 174 0
 3237 0026 2161     		str	r1, [r4, #16]
 175:SYS/shell/shell.c ****     for (short i = 0; i < SHELL_HISTORY_MAX_NUMBER; i++)
 3238              		.loc 1 175 0
 3239 0028 1548     		ldr	r0, .L288
 3240 002a A0FB0202 		umull	r0, r2, r0, r2
 3241              	.LVL368:
 3242 002e 9208     		lsrs	r2, r2, #2
 3243 0030 A286     		strh	r2, [r4, #52]	@ movhi
 3244              	.LVL369:
 3245              	.LBB26:
 176:SYS/shell/shell.c ****     {
 3246              		.loc 1 176 0
 3247 0032 09E0     		b	.L285
 3248              	.LVL370:
 3249              	.L286:
 178:SYS/shell/shell.c ****     }
 3250              		.loc 1 178 0 discriminator 3
 3251 0034 03FB0225 		mla	r5, r3, r2, r2
 3252 0038 0D44     		add	r5, r5, r1
 3253 003a 03F10E00 		add	r0, r3, #14
 3254 003e 04EB8000 		add	r0, r4, r0, lsl #2
 3255 0042 4560     		str	r5, [r0, #4]
 176:SYS/shell/shell.c ****     {
 3256              		.loc 1 176 0 discriminator 3
 3257 0044 0133     		adds	r3, r3, #1
 3258              	.LVL371:
 3259 0046 1BB2     		sxth	r3, r3
 3260              	.LVL372:
 3261              	.L285:
 176:SYS/shell/shell.c ****     {
 3262              		.loc 1 176 0 is_stmt 0 discriminator 1
 3263 0048 042B     		cmp	r3, #4
 3264 004a F3DD     		ble	.L286
 3265              	.LBE26:
 190:SYS/shell/shell.c ****     shell->commandList.count = ((unsigned int)(&_shell_command_end) - (unsigned int)(&_shell_comman
 3266              		.loc 1 190 0 is_stmt 1
 3267 004c 0D4A     		ldr	r2, .L288+4
 3268 004e A265     		str	r2, [r4, #88]
 191:SYS/shell/shell.c **** #else
 3269              		.loc 1 191 0
 3270 0050 0D4B     		ldr	r3, .L288+8
 3271              	.LVL373:
 3272 0052 9B1A     		subs	r3, r3, r2
 3273 0054 1B09     		lsrs	r3, r3, #4
 3274 0056 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 200:SYS/shell/shell.c **** 
 3275              		.loc 1 200 0
 3276 005a 2046     		mov	r0, r4
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 95


 3277 005c FFF7FEFF 		bl	shellAdd
 3278              	.LVL374:
 202:SYS/shell/shell.c ****                                          SHELL_DEFAULT_USER,
 3279              		.loc 1 202 0
 3280 0060 0023     		movs	r3, #0
 3281 0062 A26D     		ldr	r2, [r4, #88]
 3282 0064 0949     		ldr	r1, .L288+12
 3283 0066 2046     		mov	r0, r4
 3284 0068 FFF7FEFF 		bl	shellSeekCommand
 3285              	.LVL375:
 3286 006c 0146     		mov	r1, r0
 3287 006e 2046     		mov	r0, r4
 3288 0070 FFF7FEFF 		bl	shellSetUser
 3289              	.LVL376:
 206:SYS/shell/shell.c ****     __asm("cpsie i");
 3290              		.loc 1 206 0
 3291 0074 0121     		movs	r1, #1
 3292 0076 2046     		mov	r0, r4
 3293 0078 FFF7FEFF 		bl	shellWriteCommandLine
 3294              	.LVL377:
 207:SYS/shell/shell.c **** }
 3295              		.loc 1 207 0
 3296              		.syntax unified
 3297              	@ 207 "SYS/shell/shell.c" 1
 3298 007c 62B6     		cpsie i
 3299              	@ 0 "" 2
 3300              		.thumb
 3301              		.syntax unified
 3302 007e 38BD     		pop	{r3, r4, r5, pc}
 3303              	.LVL378:
 3304              	.L289:
 3305              		.align	2
 3306              	.L288:
 3307 0080 ABAAAAAA 		.word	-1431655765
 3308 0084 00000000 		.word	_shell_command_start
 3309 0088 00000000 		.word	_shell_command_end
 3310 008c B4010000 		.word	.LC22
 3311              		.cfi_endproc
 3312              	.LFE124:
 3314              		.section	.text.shellHelp,"ax",%progbits
 3315              		.align	2
 3316              		.global	shellHelp
 3317              		.thumb
 3318              		.thumb_func
 3320              	shellHelp:
 3321              	.LFB173:
1540:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 3322              		.loc 1 1540 0
 3323              		.cfi_startproc
 3324              		@ args = 0, pretend = 0, frame = 0
 3325              		@ frame_needed = 0, uses_anonymous_args = 0
 3326              	.LVL379:
 3327 0000 70B5     		push	{r4, r5, r6, lr}
 3328              	.LCFI61:
 3329              		.cfi_def_cfa_offset 16
 3330              		.cfi_offset 4, -16
 3331              		.cfi_offset 5, -12
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 96


 3332              		.cfi_offset 6, -8
 3333              		.cfi_offset 14, -4
 3334 0002 0546     		mov	r5, r0
 3335 0004 0E46     		mov	r6, r1
1541:SYS/shell/shell.c ****     SHELL_ASSERT(shell, return );
 3336              		.loc 1 1541 0
 3337 0006 FFF7FEFF 		bl	shellGetCurrent
 3338              	.LVL380:
1542:SYS/shell/shell.c ****     if (argc == 1)
 3339              		.loc 1 1542 0
 3340 000a 70B3     		cbz	r0, .L290
 3341 000c 0446     		mov	r4, r0
1543:SYS/shell/shell.c ****     {
 3342              		.loc 1 1543 0
 3343 000e 012D     		cmp	r5, #1
 3344 0010 02D1     		bne	.L292
1545:SYS/shell/shell.c ****     }
 3345              		.loc 1 1545 0
 3346 0012 FFF7FEFF 		bl	shellListAll
 3347              	.LVL381:
 3348 0016 70BD     		pop	{r4, r5, r6, pc}
 3349              	.LVL382:
 3350              	.L292:
1547:SYS/shell/shell.c ****     {
 3351              		.loc 1 1547 0
 3352 0018 012D     		cmp	r5, #1
 3353 001a 26DD     		ble	.L290
 3354              	.LBB27:
1549:SYS/shell/shell.c ****                                                  argv[1],
 3355              		.loc 1 1549 0
 3356 001c 0023     		movs	r3, #0
 3357 001e 826D     		ldr	r2, [r0, #88]
 3358 0020 7168     		ldr	r1, [r6, #4]
 3359 0022 FFF7FEFF 		bl	shellSeekCommand
 3360              	.LVL383:
1553:SYS/shell/shell.c ****         {
 3361              		.loc 1 1553 0
 3362 0026 0546     		mov	r5, r0
 3363              	.LVL384:
 3364 0028 D8B1     		cbz	r0, .L293
1555:SYS/shell/shell.c ****             shellWriteString(shell, shellGetCommandName(command));
 3365              		.loc 1 1555 0
 3366 002a 1049     		ldr	r1, .L295
 3367 002c 2046     		mov	r0, r4
 3368              	.LVL385:
 3369 002e FFF7FEFF 		bl	shellWriteString
 3370              	.LVL386:
1556:SYS/shell/shell.c ****             shellWriteString(shell, "\r\n");
 3371              		.loc 1 1556 0
 3372 0032 2846     		mov	r0, r5
 3373 0034 FFF7FEFF 		bl	shellGetCommandName
 3374              	.LVL387:
 3375 0038 0146     		mov	r1, r0
 3376 003a 2046     		mov	r0, r4
 3377 003c FFF7FEFF 		bl	shellWriteString
 3378              	.LVL388:
1557:SYS/shell/shell.c ****             shellWriteString(shell, shellGetCommandDesc(command));
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 97


 3379              		.loc 1 1557 0
 3380 0040 0B4E     		ldr	r6, .L295+4
 3381              	.LVL389:
 3382 0042 3146     		mov	r1, r6
 3383 0044 2046     		mov	r0, r4
 3384 0046 FFF7FEFF 		bl	shellWriteString
 3385              	.LVL390:
1558:SYS/shell/shell.c ****             shellWriteString(shell, "\r\n");
 3386              		.loc 1 1558 0
 3387 004a 2846     		mov	r0, r5
 3388 004c FFF7FEFF 		bl	shellGetCommandDesc
 3389              	.LVL391:
 3390 0050 0146     		mov	r1, r0
 3391 0052 2046     		mov	r0, r4
 3392 0054 FFF7FEFF 		bl	shellWriteString
 3393              	.LVL392:
1559:SYS/shell/shell.c ****         }
 3394              		.loc 1 1559 0
 3395 0058 3146     		mov	r1, r6
 3396 005a 2046     		mov	r0, r4
 3397 005c FFF7FEFF 		bl	shellWriteString
 3398              	.LVL393:
 3399 0060 70BD     		pop	{r4, r5, r6, pc}
 3400              	.LVL394:
 3401              	.L293:
1563:SYS/shell/shell.c ****         }
 3402              		.loc 1 1563 0
 3403 0062 0449     		ldr	r1, .L295+8
 3404 0064 2046     		mov	r0, r4
 3405              	.LVL395:
 3406 0066 FFF7FEFF 		bl	shellWriteString
 3407              	.LVL396:
 3408              	.L290:
 3409 006a 70BD     		pop	{r4, r5, r6, pc}
 3410              	.LVL397:
 3411              	.L296:
 3412              		.align	2
 3413              	.L295:
 3414 006c C4010000 		.word	.LC23
 3415 0070 CC000000 		.word	.LC3
 3416 0074 D8010000 		.word	.LC24
 3417              	.LBE27:
 3418              		.cfi_endproc
 3419              	.LFE173:
 3421              		.section	.text.shellGetVarValue,"ax",%progbits
 3422              		.align	2
 3423              		.global	shellGetVarValue
 3424              		.thumb
 3425              		.thumb_func
 3427              	shellGetVarValue:
 3428              	.LFB153:
 936:SYS/shell/shell.c ****     int value = 0;
 3429              		.loc 1 936 0
 3430              		.cfi_startproc
 3431              		@ args = 0, pretend = 0, frame = 0
 3432              		@ frame_needed = 0, uses_anonymous_args = 0
 3433              	.LVL398:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 98


 3434 0000 08B5     		push	{r3, lr}
 3435              	.LCFI62:
 3436              		.cfi_def_cfa_offset 8
 3437              		.cfi_offset 3, -8
 3438              		.cfi_offset 14, -4
 3439              	.LVL399:
 938:SYS/shell/shell.c ****     {
 3440              		.loc 1 938 0
 3441 0002 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3442 0004 03F00F03 		and	r3, r3, #15
 3443 0008 023B     		subs	r3, r3, #2
 3444 000a 052B     		cmp	r3, #5
 3445 000c 16D8     		bhi	.L305
 3446 000e DFE803F0 		tbb	[pc, r3]
 3447              	.L300:
 3448 0012 03       		.byte	(.L299-.L300)/2
 3449 0013 06       		.byte	(.L301-.L300)/2
 3450 0014 0A       		.byte	(.L302-.L300)/2
 3451 0015 0D       		.byte	(.L303-.L300)/2
 3452 0016 0D       		.byte	(.L303-.L300)/2
 3453 0017 0F       		.byte	(.L304-.L300)/2
 3454              		.p2align 1
 3455              	.L299:
 941:SYS/shell/shell.c ****         break;
 3456              		.loc 1 941 0
 3457 0018 8B68     		ldr	r3, [r1, #8]
 3458 001a 1868     		ldr	r0, [r3]
 3459              	.LVL400:
 942:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_SHORT:
 3460              		.loc 1 942 0
 3461 001c 08BD     		pop	{r3, pc}
 3462              	.LVL401:
 3463              	.L301:
 944:SYS/shell/shell.c ****         break;
 3464              		.loc 1 944 0
 3465 001e 8B68     		ldr	r3, [r1, #8]
 3466 0020 B3F90000 		ldrsh	r0, [r3]
 3467              	.LVL402:
 945:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_CHAR:
 3468              		.loc 1 945 0
 3469 0024 08BD     		pop	{r3, pc}
 3470              	.LVL403:
 3471              	.L302:
 947:SYS/shell/shell.c ****         break;
 3472              		.loc 1 947 0
 3473 0026 8B68     		ldr	r3, [r1, #8]
 3474 0028 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3475              	.LVL404:
 948:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_STRING:
 3476              		.loc 1 948 0
 3477 002a 08BD     		pop	{r3, pc}
 3478              	.LVL405:
 3479              	.L303:
 951:SYS/shell/shell.c ****         break;
 3480              		.loc 1 951 0
 3481 002c 8868     		ldr	r0, [r1, #8]
 3482              	.LVL406:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 99


 952:SYS/shell/shell.c ****     case SHELL_TYPE_VAR_NODE:
 3483              		.loc 1 952 0
 3484 002e 08BD     		pop	{r3, pc}
 3485              	.LVL407:
 3486              	.L304:
 954:SYS/shell/shell.c ****                                                                          ->get(((ShellNodeVarAttr *
 3487              		.loc 1 954 0
 3488 0030 8A68     		ldr	r2, [r1, #8]
 3489 0032 5368     		ldr	r3, [r2, #4]
 956:SYS/shell/shell.c ****         break;
 3490              		.loc 1 956 0
 3491 0034 23B1     		cbz	r3, .L306
 956:SYS/shell/shell.c ****         break;
 3492              		.loc 1 956 0 is_stmt 0 discriminator 1
 3493 0036 1068     		ldr	r0, [r2]
 3494              	.LVL408:
 3495 0038 9847     		blx	r3
 3496              	.LVL409:
 3497 003a 08BD     		pop	{r3, pc}
 3498              	.LVL410:
 3499              	.L305:
 937:SYS/shell/shell.c ****     switch (command->attr.attrs.type)
 3500              		.loc 1 937 0 is_stmt 1
 3501 003c 0020     		movs	r0, #0
 3502              	.LVL411:
 3503 003e 08BD     		pop	{r3, pc}
 3504              	.LVL412:
 3505              	.L306:
 956:SYS/shell/shell.c ****         break;
 3506              		.loc 1 956 0
 3507 0040 0020     		movs	r0, #0
 3508              	.LVL413:
 962:SYS/shell/shell.c **** 
 3509              		.loc 1 962 0
 3510 0042 08BD     		pop	{r3, pc}
 3511              		.cfi_endproc
 3512              	.LFE153:
 3514              		.section	.text.shellShowVar,"ax",%progbits
 3515              		.align	2
 3516              		.thumb
 3517              		.thumb_func
 3519              	shellShowVar:
 3520              	.LFB155:
1026:SYS/shell/shell.c ****     char buffer[12] = "00000000000";
 3521              		.loc 1 1026 0
 3522              		.cfi_startproc
 3523              		@ args = 0, pretend = 0, frame = 16
 3524              		@ frame_needed = 0, uses_anonymous_args = 0
 3525              	.LVL414:
 3526 0000 70B5     		push	{r4, r5, r6, lr}
 3527              	.LCFI63:
 3528              		.cfi_def_cfa_offset 16
 3529              		.cfi_offset 4, -16
 3530              		.cfi_offset 5, -12
 3531              		.cfi_offset 6, -8
 3532              		.cfi_offset 14, -4
 3533 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 100


 3534              	.LCFI64:
 3535              		.cfi_def_cfa_offset 32
 3536 0004 0446     		mov	r4, r0
 3537 0006 0E46     		mov	r6, r1
1027:SYS/shell/shell.c ****     int value = shellGetVarValue(shell, command);
 3538              		.loc 1 1027 0
 3539 0008 274B     		ldr	r3, .L316
 3540 000a 93E80700 		ldmia	r3, {r0, r1, r2}
 3541              	.LVL415:
 3542 000e 04AB     		add	r3, sp, #16
 3543 0010 03E90700 		stmdb	r3, {r0, r1, r2}
1028:SYS/shell/shell.c **** 
 3544              		.loc 1 1028 0
 3545 0014 3146     		mov	r1, r6
 3546 0016 2046     		mov	r0, r4
 3547 0018 FFF7FEFF 		bl	shellGetVarValue
 3548              	.LVL416:
 3549 001c 0546     		mov	r5, r0
 3550              	.LVL417:
1030:SYS/shell/shell.c ****     shellWriteString(shell, " = ");
 3551              		.loc 1 1030 0
 3552 001e 7168     		ldr	r1, [r6, #4]
 3553 0020 2046     		mov	r0, r4
 3554              	.LVL418:
 3555 0022 FFF7FEFF 		bl	shellWriteString
 3556              	.LVL419:
1031:SYS/shell/shell.c **** 
 3557              		.loc 1 1031 0
 3558 0026 2149     		ldr	r1, .L316+4
 3559 0028 2046     		mov	r0, r4
 3560 002a FFF7FEFF 		bl	shellWriteString
 3561              	.LVL420:
1033:SYS/shell/shell.c ****     {
 3562              		.loc 1 1033 0
 3563 002e 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 3564 0030 03F00F03 		and	r3, r3, #15
 3565 0034 052B     		cmp	r3, #5
 3566 0036 0DD1     		bne	.L314
1036:SYS/shell/shell.c ****         shellWriteString(shell, (char *)value);
 3567              		.loc 1 1036 0
 3568 0038 1D4E     		ldr	r6, .L316+8
 3569              	.LVL421:
 3570 003a 3146     		mov	r1, r6
 3571 003c 2046     		mov	r0, r4
 3572 003e FFF7FEFF 		bl	shellWriteString
 3573              	.LVL422:
1037:SYS/shell/shell.c ****         shellWriteString(shell, "\"");
 3574              		.loc 1 1037 0
 3575 0042 2946     		mov	r1, r5
 3576 0044 2046     		mov	r0, r4
 3577 0046 FFF7FEFF 		bl	shellWriteString
 3578              	.LVL423:
1038:SYS/shell/shell.c ****         break;
 3579              		.loc 1 1038 0
 3580 004a 3146     		mov	r1, r6
 3581 004c 2046     		mov	r0, r4
 3582 004e FFF7FEFF 		bl	shellWriteString
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 101


 3583              	.LVL424:
1039:SYS/shell/shell.c ****     // case SHELL_TYPE_VAR_INT:
 3584              		.loc 1 1039 0
 3585 0052 21E0     		b	.L311
 3586              	.LVL425:
 3587              	.L314:
1045:SYS/shell/shell.c ****         shellWriteString(shell, ", 0x");
 3588              		.loc 1 1045 0
 3589 0054 01A9     		add	r1, sp, #4
 3590 0056 2846     		mov	r0, r5
 3591 0058 FFF7FEFF 		bl	shellToDec
 3592              	.LVL426:
 3593 005c C0F10B01 		rsb	r1, r0, #11
 3594 0060 01AB     		add	r3, sp, #4
 3595 0062 1944     		add	r1, r1, r3
 3596 0064 2046     		mov	r0, r4
 3597 0066 FFF7FEFF 		bl	shellWriteString
 3598              	.LVL427:
1046:SYS/shell/shell.c ****         for (short i = 0; i < 11; i++)
 3599              		.loc 1 1046 0
 3600 006a 1249     		ldr	r1, .L316+12
 3601 006c 2046     		mov	r0, r4
 3602 006e FFF7FEFF 		bl	shellWriteString
 3603              	.LVL428:
 3604              	.LBB28:
1047:SYS/shell/shell.c ****         {
 3605              		.loc 1 1047 0
 3606 0072 0023     		movs	r3, #0
 3607 0074 06E0     		b	.L312
 3608              	.LVL429:
 3609              	.L313:
1049:SYS/shell/shell.c ****         }
 3610              		.loc 1 1049 0 discriminator 3
 3611 0076 04AA     		add	r2, sp, #16
 3612 0078 1A44     		add	r2, r2, r3
 3613 007a 3021     		movs	r1, #48
 3614 007c 02F80C1C 		strb	r1, [r2, #-12]
1047:SYS/shell/shell.c ****         {
 3615              		.loc 1 1047 0 discriminator 3
 3616 0080 0133     		adds	r3, r3, #1
 3617              	.LVL430:
 3618 0082 1BB2     		sxth	r3, r3
 3619              	.LVL431:
 3620              	.L312:
1047:SYS/shell/shell.c ****         {
 3621              		.loc 1 1047 0 is_stmt 0 discriminator 1
 3622 0084 0A2B     		cmp	r3, #10
 3623 0086 F6DD     		ble	.L313
 3624              	.LBE28:
1051:SYS/shell/shell.c ****         shellWriteString(shell, buffer);
 3625              		.loc 1 1051 0 is_stmt 1
 3626 0088 01A9     		add	r1, sp, #4
 3627 008a 2846     		mov	r0, r5
 3628 008c FFF7FEFF 		bl	shellToHex
 3629              	.LVL432:
1052:SYS/shell/shell.c ****         break;
 3630              		.loc 1 1052 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 102


 3631 0090 01A9     		add	r1, sp, #4
 3632 0092 2046     		mov	r0, r4
 3633 0094 FFF7FEFF 		bl	shellWriteString
 3634              	.LVL433:
 3635              	.L311:
1056:SYS/shell/shell.c ****     return value;
 3636              		.loc 1 1056 0
 3637 0098 0749     		ldr	r1, .L316+16
 3638 009a 2046     		mov	r0, r4
 3639 009c FFF7FEFF 		bl	shellWriteString
 3640              	.LVL434:
1058:SYS/shell/shell.c **** 
 3641              		.loc 1 1058 0
 3642 00a0 2846     		mov	r0, r5
 3643 00a2 04B0     		add	sp, sp, #16
 3644              	.LCFI65:
 3645              		.cfi_def_cfa_offset 16
 3646              		@ sp needed
 3647 00a4 70BD     		pop	{r4, r5, r6, pc}
 3648              	.LVL435:
 3649              	.L317:
 3650 00a6 00BF     		.align	2
 3651              	.L316:
 3652 00a8 1C010000 		.word	.LC8
 3653 00ac EC010000 		.word	.LC25
 3654 00b0 F0010000 		.word	.LC26
 3655 00b4 14010000 		.word	.LC10
 3656 00b8 CC000000 		.word	.LC3
 3657              		.cfi_endproc
 3658              	.LFE155:
 3660              		.section	.text.shellSetVarValue,"ax",%progbits
 3661              		.align	2
 3662              		.global	shellSetVarValue
 3663              		.thumb
 3664              		.thumb_func
 3666              	shellSetVarValue:
 3667              	.LFB154:
 973:SYS/shell/shell.c ****     if (command->attr.attrs.readOnly)
 3668              		.loc 1 973 0
 3669              		.cfi_startproc
 3670              		@ args = 0, pretend = 0, frame = 0
 3671              		@ frame_needed = 0, uses_anonymous_args = 0
 3672              	.LVL436:
 3673 0000 38B5     		push	{r3, r4, r5, lr}
 3674              	.LCFI66:
 3675              		.cfi_def_cfa_offset 16
 3676              		.cfi_offset 3, -16
 3677              		.cfi_offset 4, -12
 3678              		.cfi_offset 5, -8
 3679              		.cfi_offset 14, -4
 3680 0002 0546     		mov	r5, r0
 3681 0004 0C46     		mov	r4, r1
 974:SYS/shell/shell.c ****     {
 3682              		.loc 1 974 0
 3683 0006 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3684 0008 13F0400F 		tst	r3, #64
 3685 000c 03D0     		beq	.L319
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 103


 976:SYS/shell/shell.c ****     }
 3686              		.loc 1 976 0
 3687 000e 1849     		ldr	r1, .L330
 3688              	.LVL437:
 3689 0010 FFF7FEFF 		bl	shellWriteString
 3690              	.LVL438:
 3691 0014 26E0     		b	.L320
 3692              	.LVL439:
 3693              	.L319:
 980:SYS/shell/shell.c ****         {
 3694              		.loc 1 980 0
 3695 0016 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3696 0018 03F00F03 		and	r3, r3, #15
 3697 001c 023B     		subs	r3, r3, #2
 3698 001e 052B     		cmp	r3, #5
 3699 0020 20D8     		bhi	.L320
 3700 0022 DFE803F0 		tbb	[pc, r3]
 3701              	.LVL440:
 3702              	.L322:
 3703 0026 03       		.byte	(.L321-.L322)/2
 3704 0027 06       		.byte	(.L323-.L322)/2
 3705 0028 09       		.byte	(.L324-.L322)/2
 3706 0029 0C       		.byte	(.L325-.L322)/2
 3707 002a 11       		.byte	(.L326-.L322)/2
 3708 002b 15       		.byte	(.L327-.L322)/2
 3709              		.p2align 1
 3710              	.L321:
 983:SYS/shell/shell.c ****             break;
 3711              		.loc 1 983 0
 3712 002c A368     		ldr	r3, [r4, #8]
 3713 002e 1A60     		str	r2, [r3]
 984:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_SHORT:
 3714              		.loc 1 984 0
 3715 0030 18E0     		b	.L320
 3716              	.L323:
 986:SYS/shell/shell.c ****             break;
 3717              		.loc 1 986 0
 3718 0032 A368     		ldr	r3, [r4, #8]
 3719 0034 1A80     		strh	r2, [r3]	@ movhi
 987:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_CHAR:
 3720              		.loc 1 987 0
 3721 0036 15E0     		b	.L320
 3722              	.L324:
 989:SYS/shell/shell.c ****             break;
 3723              		.loc 1 989 0
 3724 0038 A368     		ldr	r3, [r4, #8]
 3725 003a 1A70     		strb	r2, [r3]
 990:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_STRING:
 3726              		.loc 1 990 0
 3727 003c 12E0     		b	.L320
 3728              	.L325:
 992:SYS/shell/shell.c ****             break;
 3729              		.loc 1 992 0
 3730 003e 1146     		mov	r1, r2
 3731 0040 A068     		ldr	r0, [r4, #8]
 3732              	.LVL441:
 3733 0042 FFF7FEFF 		bl	shellStringCopy
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 104


 3734              	.LVL442:
 993:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_POINT:
 3735              		.loc 1 993 0
 3736 0046 0DE0     		b	.L320
 3737              	.LVL443:
 3738              	.L326:
 995:SYS/shell/shell.c ****             break;
 3739              		.loc 1 995 0
 3740 0048 0A49     		ldr	r1, .L330+4
 3741 004a FFF7FEFF 		bl	shellWriteString
 3742              	.LVL444:
 996:SYS/shell/shell.c ****         case SHELL_TYPE_VAR_NODE:
 3743              		.loc 1 996 0
 3744 004e 09E0     		b	.L320
 3745              	.LVL445:
 3746              	.L327:
 998:SYS/shell/shell.c ****             {
 3747              		.loc 1 998 0
 3748 0050 A168     		ldr	r1, [r4, #8]
 3749 0052 8B68     		ldr	r3, [r1, #8]
 3750 0054 33B1     		cbz	r3, .L320
1000:SYS/shell/shell.c ****                 {
 3751              		.loc 1 1000 0
 3752 0056 0868     		ldr	r0, [r1]
 3753              	.LVL446:
 3754 0058 10B1     		cbz	r0, .L328
1002:SYS/shell/shell.c ****                         ->set(((ShellNodeVarAttr *)command->data.var.value)->var, value);
 3755              		.loc 1 1002 0
 3756 005a 1146     		mov	r1, r2
 3757 005c 9847     		blx	r3
 3758              	.LVL447:
 3759 005e 01E0     		b	.L320
 3760              	.LVL448:
 3761              	.L328:
1007:SYS/shell/shell.c ****                 }
 3762              		.loc 1 1007 0
 3763 0060 1046     		mov	r0, r2
 3764 0062 9847     		blx	r3
 3765              	.LVL449:
 3766              	.L320:
1015:SYS/shell/shell.c **** }
 3767              		.loc 1 1015 0
 3768 0064 2146     		mov	r1, r4
 3769 0066 2846     		mov	r0, r5
 3770 0068 FFF7FEFF 		bl	shellShowVar
 3771              	.LVL450:
1016:SYS/shell/shell.c **** 
 3772              		.loc 1 1016 0
 3773 006c 38BD     		pop	{r3, r4, r5, pc}
 3774              	.LVL451:
 3775              	.L331:
 3776 006e 00BF     		.align	2
 3777              	.L330:
 3778 0070 F4010000 		.word	.LC27
 3779 0074 10020000 		.word	.LC28
 3780              		.cfi_endproc
 3781              	.LFE154:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 105


 3783              		.section	.text.shellSetVar,"ax",%progbits
 3784              		.align	2
 3785              		.global	shellSetVar
 3786              		.thumb
 3787              		.thumb_func
 3789              	shellSetVar:
 3790              	.LFB156:
1068:SYS/shell/shell.c ****     Shell *shell = shellGetCurrent();
 3791              		.loc 1 1068 0
 3792              		.cfi_startproc
 3793              		@ args = 0, pretend = 0, frame = 0
 3794              		@ frame_needed = 0, uses_anonymous_args = 0
 3795              	.LVL452:
 3796 0000 70B5     		push	{r4, r5, r6, lr}
 3797              	.LCFI67:
 3798              		.cfi_def_cfa_offset 16
 3799              		.cfi_offset 4, -16
 3800              		.cfi_offset 5, -12
 3801              		.cfi_offset 6, -8
 3802              		.cfi_offset 14, -4
 3803 0002 0546     		mov	r5, r0
 3804 0004 0E46     		mov	r6, r1
1069:SYS/shell/shell.c ****     if (shell == NULL)
 3805              		.loc 1 1069 0
 3806 0006 FFF7FEFF 		bl	shellGetCurrent
 3807              	.LVL453:
1070:SYS/shell/shell.c ****     {
 3808              		.loc 1 1070 0
 3809 000a 20B3     		cbz	r0, .L336
 3810 000c 0446     		mov	r4, r0
1074:SYS/shell/shell.c ****                                              name,
 3811              		.loc 1 1074 0
 3812 000e 0023     		movs	r3, #0
 3813 0010 826D     		ldr	r2, [r0, #88]
 3814 0012 2946     		mov	r1, r5
 3815 0014 FFF7FEFF 		bl	shellSeekCommand
 3816              	.LVL454:
1078:SYS/shell/shell.c ****     {
 3817              		.loc 1 1078 0
 3818 0018 0146     		mov	r1, r0
 3819 001a 28B9     		cbnz	r0, .L334
1080:SYS/shell/shell.c ****         return 0;
 3820              		.loc 1 1080 0
 3821 001c 0F49     		ldr	r1, .L338
 3822 001e 2046     		mov	r0, r4
 3823              	.LVL455:
 3824 0020 FFF7FEFF 		bl	shellWriteString
 3825              	.LVL456:
1081:SYS/shell/shell.c ****     }
 3826              		.loc 1 1081 0
 3827 0024 0020     		movs	r0, #0
 3828 0026 70BD     		pop	{r4, r5, r6, pc}
 3829              	.LVL457:
 3830              	.L334:
1083:SYS/shell/shell.c ****     {
 3831              		.loc 1 1083 0
 3832 0028 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 106


 3833 002a 03F00F03 		and	r3, r3, #15
 3834 002e 0E33     		adds	r3, r3, #14
 3835 0030 03F00F03 		and	r3, r3, #15
 3836 0034 052B     		cmp	r3, #5
 3837 0036 09D9     		bls	.L335
1085:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_NOT_VAR]);
 3838              		.loc 1 1085 0
 3839 0038 2946     		mov	r1, r5
 3840 003a 2046     		mov	r0, r4
 3841              	.LVL458:
 3842 003c FFF7FEFF 		bl	shellWriteString
 3843              	.LVL459:
1086:SYS/shell/shell.c ****         return 0;
 3844              		.loc 1 1086 0
 3845 0040 0749     		ldr	r1, .L338+4
 3846 0042 2046     		mov	r0, r4
 3847 0044 FFF7FEFF 		bl	shellWriteString
 3848              	.LVL460:
1087:SYS/shell/shell.c ****     }
 3849              		.loc 1 1087 0
 3850 0048 0020     		movs	r0, #0
 3851 004a 70BD     		pop	{r4, r5, r6, pc}
 3852              	.LVL461:
 3853              	.L335:
1089:SYS/shell/shell.c **** }
 3854              		.loc 1 1089 0
 3855 004c 3246     		mov	r2, r6
 3856 004e 2046     		mov	r0, r4
 3857              	.LVL462:
 3858 0050 FFF7FEFF 		bl	shellSetVarValue
 3859              	.LVL463:
 3860 0054 70BD     		pop	{r4, r5, r6, pc}
 3861              	.LVL464:
 3862              	.L336:
1072:SYS/shell/shell.c ****     }
 3863              		.loc 1 1072 0
 3864 0056 0020     		movs	r0, #0
 3865              	.LVL465:
1090:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
 3866              		.loc 1 1090 0
 3867 0058 70BD     		pop	{r4, r5, r6, pc}
 3868              	.LVL466:
 3869              	.L339:
 3870 005a 00BF     		.align	2
 3871              	.L338:
 3872 005c 24020000 		.word	.LC29
 3873 0060 34020000 		.word	.LC30
 3874              		.cfi_endproc
 3875              	.LFE156:
 3877              		.section	.text.shellRunCommand,"ax",%progbits
 3878              		.align	2
 3879              		.global	shellRunCommand
 3880              		.thumb
 3881              		.thumb_func
 3883              	shellRunCommand:
 3884              	.LFB157:
1104:SYS/shell/shell.c ****     int returnValue = 0;
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 107


 3885              		.loc 1 1104 0
 3886              		.cfi_startproc
 3887              		@ args = 0, pretend = 0, frame = 0
 3888              		@ frame_needed = 0, uses_anonymous_args = 0
 3889              	.LVL467:
 3890 0000 70B5     		push	{r4, r5, r6, lr}
 3891              	.LCFI68:
 3892              		.cfi_def_cfa_offset 16
 3893              		.cfi_offset 4, -16
 3894              		.cfi_offset 5, -12
 3895              		.cfi_offset 6, -8
 3896              		.cfi_offset 14, -4
 3897 0002 0446     		mov	r4, r0
 3898 0004 0D46     		mov	r5, r1
 3899              	.LVL468:
1106:SYS/shell/shell.c ****     if (command->attr.attrs.type == SHELL_TYPE_CMD_MAIN)
 3900              		.loc 1 1106 0
 3901 0006 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 3902 000a 43F00203 		orr	r3, r3, #2
 3903 000e 80F86030 		strb	r3, [r0, #96]
1107:SYS/shell/shell.c ****     {
 3904              		.loc 1 1107 0
 3905 0012 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 3906 0014 13F00F03 		ands	r3, r3, #15
 3907 0018 10D1     		bne	.L341
1109:SYS/shell/shell.c ****         returnValue = command->data.cmd.function(shell->parser.paramCount,
 3908              		.loc 1 1109 0
 3909 001a FFF7FEFF 		bl	shellRemoveParamQuotes
 3910              	.LVL469:
1110:SYS/shell/shell.c ****                                                  shell->parser.param);
 3911              		.loc 1 1110 0
 3912 001e AB68     		ldr	r3, [r5, #8]
 3913 0020 04F11401 		add	r1, r4, #20
 3914 0024 E08E     		ldrh	r0, [r4, #54]
 3915 0026 9847     		blx	r3
 3916              	.LVL470:
 3917 0028 0646     		mov	r6, r0
 3918              	.LVL471:
1112:SYS/shell/shell.c ****         {
 3919              		.loc 1 1112 0
 3920 002a 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3921 002c 13F0200F 		tst	r3, #32
 3922 0030 28D1     		bne	.L342
1114:SYS/shell/shell.c ****         }
 3923              		.loc 1 1114 0
 3924 0032 0146     		mov	r1, r0
 3925 0034 2046     		mov	r0, r4
 3926              	.LVL472:
 3927 0036 FFF7FEFF 		bl	shellWriteReturnValue
 3928              	.LVL473:
 3929 003a 23E0     		b	.L342
 3930              	.LVL474:
 3931              	.L341:
1117:SYS/shell/shell.c ****     {
 3932              		.loc 1 1117 0
 3933 003c 012B     		cmp	r3, #1
 3934 003e 0ED1     		bne	.L343
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 108


1119:SYS/shell/shell.c ****                                   command,
 3935              		.loc 1 1119 0
 3936 0040 00F11403 		add	r3, r0, #20
 3937 0044 C28E     		ldrh	r2, [r0, #54]
 3938 0046 FFF7FEFF 		bl	shellExtRun
 3939              	.LVL475:
 3940 004a 0646     		mov	r6, r0
 3941              	.LVL476:
1123:SYS/shell/shell.c ****         {
 3942              		.loc 1 1123 0
 3943 004c 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3944 004e 13F0200F 		tst	r3, #32
 3945 0052 17D1     		bne	.L342
1125:SYS/shell/shell.c ****         }
 3946              		.loc 1 1125 0
 3947 0054 0146     		mov	r1, r0
 3948 0056 2046     		mov	r0, r4
 3949              	.LVL477:
 3950 0058 FFF7FEFF 		bl	shellWriteReturnValue
 3951              	.LVL478:
 3952 005c 12E0     		b	.L342
 3953              	.LVL479:
 3954              	.L343:
1128:SYS/shell/shell.c ****     {
 3955              		.loc 1 1128 0
 3956 005e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 3957 0060 02F00F02 		and	r2, r2, #15
 3958 0064 0E32     		adds	r2, r2, #14
 3959 0066 02F00F02 		and	r2, r2, #15
 3960 006a 052A     		cmp	r2, #5
 3961 006c 03D8     		bhi	.L344
1130:SYS/shell/shell.c ****     }
 3962              		.loc 1 1130 0
 3963 006e FFF7FEFF 		bl	shellShowVar
 3964              	.LVL480:
1105:SYS/shell/shell.c ****     shell->status.isActive = 1;
 3965              		.loc 1 1105 0
 3966 0072 0026     		movs	r6, #0
 3967 0074 06E0     		b	.L342
 3968              	.LVL481:
 3969              	.L344:
1132:SYS/shell/shell.c ****     {
 3970              		.loc 1 1132 0
 3971 0076 082B     		cmp	r3, #8
 3972 0078 03D1     		bne	.L345
1134:SYS/shell/shell.c ****     }
 3973              		.loc 1 1134 0
 3974 007a FFF7FEFF 		bl	shellSetUser
 3975              	.LVL482:
1105:SYS/shell/shell.c ****     shell->status.isActive = 1;
 3976              		.loc 1 1105 0
 3977 007e 0026     		movs	r6, #0
 3978 0080 00E0     		b	.L342
 3979              	.LVL483:
 3980              	.L345:
 3981 0082 0026     		movs	r6, #0
 3982              	.LVL484:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 109


 3983              	.L342:
1136:SYS/shell/shell.c **** 
 3984              		.loc 1 1136 0
 3985 0084 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 3986 0088 6FF34103 		bfc	r3, #1, #1
 3987 008c 84F86030 		strb	r3, [r4, #96]
1139:SYS/shell/shell.c **** 
 3988              		.loc 1 1139 0
 3989 0090 3046     		mov	r0, r6
 3990 0092 70BD     		pop	{r4, r5, r6, pc}
 3991              		.cfi_endproc
 3992              	.LFE157:
 3994              		.section	.text.shellNormalInput,"ax",%progbits
 3995              		.align	2
 3996              		.global	shellNormalInput
 3997              		.thumb
 3998              		.thumb_func
 4000              	shellNormalInput:
 4001              	.LFB163:
1291:SYS/shell/shell.c ****     shell->status.tabFlag = 0;
 4002              		.loc 1 1291 0
 4003              		.cfi_startproc
 4004              		@ args = 0, pretend = 0, frame = 0
 4005              		@ frame_needed = 0, uses_anonymous_args = 0
 4006              	.LVL485:
 4007 0000 08B5     		push	{r3, lr}
 4008              	.LCFI69:
 4009              		.cfi_def_cfa_offset 8
 4010              		.cfi_offset 3, -8
 4011              		.cfi_offset 14, -4
1292:SYS/shell/shell.c ****     shellInsertByte(shell, data);
 4012              		.loc 1 1292 0
 4013 0002 90F86020 		ldrb	r2, [r0, #96]	@ zero_extendqisi2
 4014 0006 6FF38202 		bfc	r2, #2, #1
 4015 000a 80F86020 		strb	r2, [r0, #96]
1293:SYS/shell/shell.c **** }
 4016              		.loc 1 1293 0
 4017 000e FFF7FEFF 		bl	shellInsertByte
 4018              	.LVL486:
 4019 0012 08BD     		pop	{r3, pc}
 4020              		.cfi_endproc
 4021              	.LFE163:
 4023              		.section	.text.shellExec,"ax",%progbits
 4024              		.align	2
 4025              		.global	shellExec
 4026              		.thumb
 4027              		.thumb_func
 4029              	shellExec:
 4030              	.LFB164:
1302:SYS/shell/shell.c **** 
 4031              		.loc 1 1302 0
 4032              		.cfi_startproc
 4033              		@ args = 0, pretend = 0, frame = 0
 4034              		@ frame_needed = 0, uses_anonymous_args = 0
 4035              	.LVL487:
1304:SYS/shell/shell.c ****     {
 4036              		.loc 1 1304 0
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 110


 4037 0000 8389     		ldrh	r3, [r0, #12]
 4038 0002 5BB3     		cbz	r3, .L354
1302:SYS/shell/shell.c **** 
 4039              		.loc 1 1302 0
 4040 0004 10B5     		push	{r4, lr}
 4041              	.LCFI70:
 4042              		.cfi_def_cfa_offset 8
 4043              		.cfi_offset 4, -8
 4044              		.cfi_offset 14, -4
 4045 0006 0446     		mov	r4, r0
1309:SYS/shell/shell.c **** 
 4046              		.loc 1 1309 0
 4047 0008 0269     		ldr	r2, [r0, #16]
 4048 000a 0021     		movs	r1, #0
 4049 000c D154     		strb	r1, [r2, r3]
1311:SYS/shell/shell.c ****     {
 4050              		.loc 1 1311 0
 4051 000e 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 4052 0012 13F0010F 		tst	r3, #1
 4053 0016 1ED0     		beq	.L351
 4054              	.LBB29:
1313:SYS/shell/shell.c ****         shellParserParam(shell);
 4055              		.loc 1 1313 0
 4056 0018 FFF7FEFF 		bl	shellHistoryAdd
 4057              	.LVL488:
1314:SYS/shell/shell.c ****         shell->parser.length = shell->parser.cursor = 0;
 4058              		.loc 1 1314 0
 4059 001c 2046     		mov	r0, r4
 4060 001e FFF7FEFF 		bl	shellParserParam
 4061              	.LVL489:
1315:SYS/shell/shell.c ****         if (shell->parser.paramCount == 0)
 4062              		.loc 1 1315 0
 4063 0022 0023     		movs	r3, #0
 4064 0024 E381     		strh	r3, [r4, #14]	@ movhi
 4065 0026 A381     		strh	r3, [r4, #12]	@ movhi
1316:SYS/shell/shell.c ****         {
 4066              		.loc 1 1316 0
 4067 0028 E38E     		ldrh	r3, [r4, #54]
 4068 002a B3B1     		cbz	r3, .L349
1320:SYS/shell/shell.c **** 
 4069              		.loc 1 1320 0
 4070 002c 0C49     		ldr	r1, .L355
 4071 002e 2046     		mov	r0, r4
 4072 0030 FFF7FEFF 		bl	shellWriteString
 4073              	.LVL490:
1322:SYS/shell/shell.c ****                                                  shell->parser.param[0],
 4074              		.loc 1 1322 0
 4075 0034 0023     		movs	r3, #0
 4076 0036 A26D     		ldr	r2, [r4, #88]
 4077 0038 6169     		ldr	r1, [r4, #20]
 4078 003a 2046     		mov	r0, r4
 4079 003c FFF7FEFF 		bl	shellSeekCommand
 4080              	.LVL491:
1326:SYS/shell/shell.c ****         {
 4081              		.loc 1 1326 0
 4082 0040 0146     		mov	r1, r0
 4083 0042 18B1     		cbz	r0, .L352
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 111


1328:SYS/shell/shell.c ****         }
 4084              		.loc 1 1328 0
 4085 0044 2046     		mov	r0, r4
 4086              	.LVL492:
 4087 0046 FFF7FEFF 		bl	shellRunCommand
 4088              	.LVL493:
 4089 004a 10BD     		pop	{r4, pc}
 4090              	.LVL494:
 4091              	.L352:
1332:SYS/shell/shell.c ****         }
 4092              		.loc 1 1332 0
 4093 004c 0549     		ldr	r1, .L355+4
 4094 004e 2046     		mov	r0, r4
 4095              	.LVL495:
 4096 0050 FFF7FEFF 		bl	shellWriteString
 4097              	.LVL496:
 4098 0054 10BD     		pop	{r4, pc}
 4099              	.LVL497:
 4100              	.L351:
 4101              	.LBE29:
1337:SYS/shell/shell.c ****     }
 4102              		.loc 1 1337 0
 4103 0056 FFF7FEFF 		bl	shellCheckPassword
 4104              	.LVL498:
 4105              	.L349:
 4106 005a 10BD     		pop	{r4, pc}
 4107              	.LVL499:
 4108              	.L354:
 4109              	.LCFI71:
 4110              		.cfi_def_cfa_offset 0
 4111              		.cfi_restore 4
 4112              		.cfi_restore 14
 4113 005c 7047     		bx	lr
 4114              	.L356:
 4115 005e 00BF     		.align	2
 4116              	.L355:
 4117 0060 CC000000 		.word	.LC3
 4118 0064 D8010000 		.word	.LC24
 4119              		.cfi_endproc
 4120              	.LFE164:
 4122              		.section	.text.shellEnter,"ax",%progbits
 4123              		.align	2
 4124              		.global	shellEnter
 4125              		.thumb
 4126              		.thumb_func
 4128              	shellEnter:
 4129              	.LFB172:
1516:SYS/shell/shell.c ****     shellExec(shell);
 4130              		.loc 1 1516 0
 4131              		.cfi_startproc
 4132              		@ args = 0, pretend = 0, frame = 0
 4133              		@ frame_needed = 0, uses_anonymous_args = 0
 4134              	.LVL500:
 4135 0000 10B5     		push	{r4, lr}
 4136              	.LCFI72:
 4137              		.cfi_def_cfa_offset 8
 4138              		.cfi_offset 4, -8
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 112


 4139              		.cfi_offset 14, -4
 4140 0002 0446     		mov	r4, r0
1517:SYS/shell/shell.c ****     shellWriteCommandLine(shell, 1);
 4141              		.loc 1 1517 0
 4142 0004 FFF7FEFF 		bl	shellExec
 4143              	.LVL501:
1518:SYS/shell/shell.c **** }
 4144              		.loc 1 1518 0
 4145 0008 0121     		movs	r1, #1
 4146 000a 2046     		mov	r0, r4
 4147 000c FFF7FEFF 		bl	shellWriteCommandLine
 4148              	.LVL502:
 4149 0010 10BD     		pop	{r4, pc}
 4150              		.cfi_endproc
 4151              	.LFE172:
 4153 0012 00BF     		.section	.text.shellHandler,"ax",%progbits
 4154              		.align	2
 4155              		.global	shellHandler
 4156              		.thumb
 4157              		.thumb_func
 4159              	shellHandler:
 4160              	.LFB174:
1578:SYS/shell/shell.c ****     SHELL_ASSERT(data, return );
 4161              		.loc 1 1578 0
 4162              		.cfi_startproc
 4163              		@ args = 0, pretend = 0, frame = 0
 4164              		@ frame_needed = 0, uses_anonymous_args = 0
 4165              	.LVL503:
1579:SYS/shell/shell.c **** 
 4166              		.loc 1 1579 0
 4167 0000 0029     		cmp	r1, #0
 4168 0002 65D0     		beq	.L373
1578:SYS/shell/shell.c ****     SHELL_ASSERT(data, return );
 4169              		.loc 1 1578 0
 4170 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4171              	.LCFI73:
 4172              		.cfi_def_cfa_offset 32
 4173              		.cfi_offset 4, -32
 4174              		.cfi_offset 5, -28
 4175              		.cfi_offset 6, -24
 4176              		.cfi_offset 7, -20
 4177              		.cfi_offset 8, -16
 4178              		.cfi_offset 9, -12
 4179              		.cfi_offset 10, -8
 4180              		.cfi_offset 14, -4
 4181 0008 0646     		mov	r6, r0
 4182 000a 8A46     		mov	r10, r1
 4183              	.LVL504:
1594:SYS/shell/shell.c ****     {
 4184              		.loc 1 1594 0
 4185 000c 836B     		ldr	r3, [r0, #56]
 4186 000e 13F47F4F 		tst	r3, #65280
 4187 0012 0AD1     		bne	.L368
1599:SYS/shell/shell.c ****     {
 4188              		.loc 1 1599 0
 4189 0014 13F47F0F 		tst	r3, #16711680
 4190 0018 0CD1     		bne	.L369
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 113


1604:SYS/shell/shell.c ****     {
 4191              		.loc 1 1604 0
 4192 001a 13F07F4F 		tst	r3, #-16777216
 4193 001e 0ED1     		bne	.L370
1593:SYS/shell/shell.c ****     if ((shell->parser.keyValue & 0x0000FF00) != 0x00000000)
 4194              		.loc 1 1593 0
 4195 0020 4FF00008 		mov	r8, #0
1592:SYS/shell/shell.c ****     int keyFilter = 0x00000000;
 4196              		.loc 1 1592 0
 4197 0024 4FF01809 		mov	r9, #24
 4198 0028 0DE0     		b	.L361
 4199              	.L368:
1597:SYS/shell/shell.c ****     }
 4200              		.loc 1 1597 0
 4201 002a 6FF0FF08 		mvn	r8, #255
1596:SYS/shell/shell.c ****         keyFilter = 0xFFFFFF00;
 4202              		.loc 1 1596 0
 4203 002e 4FF00009 		mov	r9, #0
 4204 0032 08E0     		b	.L361
 4205              	.L369:
1602:SYS/shell/shell.c ****     }
 4206              		.loc 1 1602 0
 4207 0034 DFF89C80 		ldr	r8, .L374
1601:SYS/shell/shell.c ****         keyFilter = 0xFFFF0000;
 4208              		.loc 1 1601 0
 4209 0038 4FF00809 		mov	r9, #8
 4210 003c 03E0     		b	.L361
 4211              	.L370:
1607:SYS/shell/shell.c ****     }
 4212              		.loc 1 1607 0
 4213 003e 4FF07F48 		mov	r8, #-16777216
1606:SYS/shell/shell.c ****         keyFilter = 0xFF000000;
 4214              		.loc 1 1606 0
 4215 0042 4FF01009 		mov	r9, #16
 4216              	.L361:
 4217              	.LVL505:
1611:SYS/shell/shell.c ****     for (short i = 0; i < shell->commandList.count; i++)
 4218              		.loc 1 1611 0
 4219 0046 B76D     		ldr	r7, [r6, #88]
 4220              	.LVL506:
 4221              	.LBB30:
1612:SYS/shell/shell.c ****     {
 4222              		.loc 1 1612 0
 4223 0048 0024     		movs	r4, #0
 4224 004a 32E0     		b	.L362
 4225              	.LVL507:
 4226              	.L367:
1615:SYS/shell/shell.c ****         {
 4227              		.loc 1 1615 0
 4228 004c 07EB0415 		add	r5, r7, r4, lsl #4
 4229 0050 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 4230 0052 03F00F03 		and	r3, r3, #15
 4231 0056 092B     		cmp	r3, #9
 4232 0058 29D1     		bne	.L363
1615:SYS/shell/shell.c ****         {
 4233              		.loc 1 1615 0 is_stmt 0 discriminator 1
 4234 005a 2946     		mov	r1, r5
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 114


 4235 005c 3046     		mov	r0, r6
 4236 005e FFF7FEFF 		bl	shellCheckPermission
 4237              	.LVL508:
 4238 0062 20BB     		cbnz	r0, .L363
1618:SYS/shell/shell.c ****             {
 4239              		.loc 1 1618 0 is_stmt 1
 4240 0064 6B68     		ldr	r3, [r5, #4]
 4241 0066 08EA0301 		and	r1, r8, r3
 4242 006a B26B     		ldr	r2, [r6, #56]
 4243 006c 9142     		cmp	r1, r2
 4244 006e 1ED1     		bne	.L363
1618:SYS/shell/shell.c ****             {
 4245              		.loc 1 1618 0 is_stmt 0 discriminator 1
 4246 0070 FF21     		movs	r1, #255
 4247 0072 01FA09F1 		lsl	r1, r1, r9
 4248 0076 0B40     		ands	r3, r3, r1
 4249 0078 0AFA09F1 		lsl	r1, r10, r9
 4250 007c 8B42     		cmp	r3, r1
 4251 007e 16D1     		bne	.L363
1620:SYS/shell/shell.c ****                 data = 0x00;
 4252              		.loc 1 1620 0 is_stmt 1
 4253 0080 0A43     		orrs	r2, r2, r1
 4254 0082 B263     		str	r2, [r6, #56]
 4255              	.LVL509:
1622:SYS/shell/shell.c ****                 {
 4256              		.loc 1 1622 0
 4257 0084 B9F1000F 		cmp	r9, #0
 4258 0088 07D0     		beq	.L364
1622:SYS/shell/shell.c ****                 {
 4259              		.loc 1 1622 0 is_stmt 0 discriminator 1
 4260 008a 6B68     		ldr	r3, [r5, #4]
 4261 008c A9F10800 		sub	r0, r9, #8
 4262 0090 FF22     		movs	r2, #255
 4263 0092 02FA00F0 		lsl	r0, r2, r0
 4264 0096 0342     		tst	r3, r0
 4265 0098 07D1     		bne	.L371
 4266              	.L364:
1624:SYS/shell/shell.c ****                     {
 4267              		.loc 1 1624 0 is_stmt 1
 4268 009a AB68     		ldr	r3, [r5, #8]
 4269 009c 0BB1     		cbz	r3, .L365
1626:SYS/shell/shell.c ****                     }
 4270              		.loc 1 1626 0
 4271 009e 3046     		mov	r0, r6
 4272 00a0 9847     		blx	r3
 4273              	.LVL510:
 4274              	.L365:
1628:SYS/shell/shell.c ****                     break;
 4275              		.loc 1 1628 0
 4276 00a2 0023     		movs	r3, #0
 4277 00a4 B363     		str	r3, [r6, #56]
1621:SYS/shell/shell.c ****                 if (keyByteOffset == 0 || (base[i].data.key.value & (0xFF << (keyByteOffset - 8))) 
 4278              		.loc 1 1621 0
 4279 00a6 9A46     		mov	r10, r3
1629:SYS/shell/shell.c ****                 }
 4280              		.loc 1 1629 0
 4281 00a8 07E0     		b	.L366
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 115


 4282              	.L371:
1621:SYS/shell/shell.c ****                 if (keyByteOffset == 0 || (base[i].data.key.value & (0xFF << (keyByteOffset - 8))) 
 4283              		.loc 1 1621 0
 4284 00aa 4FF0000A 		mov	r10, #0
 4285              	.LVL511:
 4286              	.L363:
1612:SYS/shell/shell.c ****     {
 4287              		.loc 1 1612 0 discriminator 2
 4288 00ae 0134     		adds	r4, r4, #1
 4289              	.LVL512:
 4290 00b0 24B2     		sxth	r4, r4
 4291              	.LVL513:
 4292              	.L362:
1612:SYS/shell/shell.c ****     {
 4293              		.loc 1 1612 0 is_stmt 0 discriminator 1
 4294 00b2 B6F85C30 		ldrh	r3, [r6, #92]
 4295 00b6 9C42     		cmp	r4, r3
 4296 00b8 C8DB     		blt	.L367
 4297              	.LVL514:
 4298              	.L366:
 4299              	.LBE30:
1635:SYS/shell/shell.c ****     {
 4300              		.loc 1 1635 0 is_stmt 1
 4301 00ba BAF1000F 		cmp	r10, #0
 4302 00be 05D0     		beq	.L359
1637:SYS/shell/shell.c ****         shellNormalInput(shell, data);
 4303              		.loc 1 1637 0
 4304 00c0 0023     		movs	r3, #0
 4305 00c2 B363     		str	r3, [r6, #56]
1638:SYS/shell/shell.c ****     }
 4306              		.loc 1 1638 0
 4307 00c4 5146     		mov	r1, r10
 4308 00c6 3046     		mov	r0, r6
 4309 00c8 FFF7FEFF 		bl	shellNormalInput
 4310              	.LVL515:
 4311              	.L359:
 4312 00cc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4313              	.LVL516:
 4314              	.L373:
 4315              	.LCFI74:
 4316              		.cfi_def_cfa_offset 0
 4317              		.cfi_restore 4
 4318              		.cfi_restore 5
 4319              		.cfi_restore 6
 4320              		.cfi_restore 7
 4321              		.cfi_restore 8
 4322              		.cfi_restore 9
 4323              		.cfi_restore 10
 4324              		.cfi_restore 14
 4325 00d0 7047     		bx	lr
 4326              	.L375:
 4327 00d2 00BF     		.align	2
 4328              	.L374:
 4329 00d4 0000FFFF 		.word	-65536
 4330              		.cfi_endproc
 4331              	.LFE174:
 4333              		.section	.text.shellTask,"ax",%progbits
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 116


 4334              		.align	2
 4335              		.global	shellTask
 4336              		.thumb
 4337              		.thumb_func
 4339              	shellTask:
 4340              	.LFB175:
1680:SYS/shell/shell.c ****     Shell *shell = (Shell *)param;
 4341              		.loc 1 1680 0
 4342              		.cfi_startproc
 4343              		@ args = 0, pretend = 0, frame = 8
 4344              		@ frame_needed = 0, uses_anonymous_args = 0
 4345              	.LVL517:
1687:SYS/shell/shell.c ****         {
 4346              		.loc 1 1687 0
 4347 0000 436E     		ldr	r3, [r0, #100]
 4348 0002 6BB1     		cbz	r3, .L379
1680:SYS/shell/shell.c ****     Shell *shell = (Shell *)param;
 4349              		.loc 1 1680 0 discriminator 1
 4350 0004 10B5     		push	{r4, lr}
 4351              	.LCFI75:
 4352              		.cfi_def_cfa_offset 8
 4353              		.cfi_offset 4, -8
 4354              		.cfi_offset 14, -4
 4355 0006 82B0     		sub	sp, sp, #8
 4356              	.LCFI76:
 4357              		.cfi_def_cfa_offset 16
 4358 0008 0446     		mov	r4, r0
1687:SYS/shell/shell.c ****         {
 4359              		.loc 1 1687 0 discriminator 1
 4360 000a 0DF10700 		add	r0, sp, #7
 4361              	.LVL518:
 4362 000e 9847     		blx	r3
 4363              	.LVL519:
 4364 0010 20B9     		cbnz	r0, .L376
1689:SYS/shell/shell.c ****         }
 4365              		.loc 1 1689 0
 4366 0012 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 4367 0016 2046     		mov	r0, r4
 4368 0018 FFF7FEFF 		bl	shellHandler
 4369              	.LVL520:
 4370              	.L376:
1694:SYS/shell/shell.c **** 
 4371              		.loc 1 1694 0
 4372 001c 02B0     		add	sp, sp, #8
 4373              	.LCFI77:
 4374              		.cfi_def_cfa_offset 8
 4375              		@ sp needed
 4376 001e 10BD     		pop	{r4, pc}
 4377              	.LVL521:
 4378              	.L379:
 4379              	.LCFI78:
 4380              		.cfi_def_cfa_offset 0
 4381              		.cfi_restore 4
 4382              		.cfi_restore 14
 4383 0020 7047     		bx	lr
 4384              		.cfi_endproc
 4385              	.LFE175:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 117


 4387 0022 00BF     		.section	.text.shellRun,"ax",%progbits
 4388              		.align	2
 4389              		.global	shellRun
 4390              		.thumb
 4391              		.thumb_func
 4393              	shellRun:
 4394              	.LFB181:
1765:SYS/shell/shell.c ****     }
1766:SYS/shell/shell.c **** }
1767:SYS/shell/shell.c **** SHELL_EXPORT_CMD(
1768:SYS/shell/shell.c ****     SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_RETURN,
1769:SYS/shell/shell.c ****     clear, shellClear, clear console);
1770:SYS/shell/shell.c **** 
1771:SYS/shell/shell.c **** /**
1772:SYS/shell/shell.c ****  * @brief shell执行命令
1773:SYS/shell/shell.c ****  * 
1774:SYS/shell/shell.c ****  * @param shell shell对象
1775:SYS/shell/shell.c ****  * @param cmd 命令字符串
1776:SYS/shell/shell.c ****  * @return int 返回值
1777:SYS/shell/shell.c ****  */
1778:SYS/shell/shell.c **** int shellRun(Shell *shell, const char *cmd)
1779:SYS/shell/shell.c **** {
 4395              		.loc 1 1779 0
 4396              		.cfi_startproc
 4397              		@ args = 0, pretend = 0, frame = 0
 4398              		@ frame_needed = 0, uses_anonymous_args = 0
 4399              	.LVL522:
1780:SYS/shell/shell.c ****     SHELL_ASSERT(shell && cmd, return -1);
 4400              		.loc 1 1780 0
 4401 0000 28B3     		cbz	r0, .L383
1779:SYS/shell/shell.c ****     SHELL_ASSERT(shell && cmd, return -1);
 4402              		.loc 1 1779 0 discriminator 2
 4403 0002 70B5     		push	{r4, r5, r6, lr}
 4404              	.LCFI79:
 4405              		.cfi_def_cfa_offset 16
 4406              		.cfi_offset 4, -16
 4407              		.cfi_offset 5, -12
 4408              		.cfi_offset 6, -8
 4409              		.cfi_offset 14, -4
 4410 0004 0446     		mov	r4, r0
 4411              		.loc 1 1780 0 discriminator 2
 4412 0006 29B3     		cbz	r1, .L384
 4413 0008 0D46     		mov	r5, r1
1781:SYS/shell/shell.c ****     char active = shell->status.isActive;
 4414              		.loc 1 1781 0
 4415 000a 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 4416 000e C3F34006 		ubfx	r6, r3, #1, #1
 4417              	.LVL523:
1782:SYS/shell/shell.c ****     if (strlen(cmd) > shell->parser.bufferSize - 1)
 4418              		.loc 1 1782 0
 4419 0012 0846     		mov	r0, r1
 4420              	.LVL524:
 4421 0014 FFF7FEFF 		bl	strlen
 4422              	.LVL525:
 4423 0018 A38E     		ldrh	r3, [r4, #52]
 4424 001a 013B     		subs	r3, r3, #1
 4425 001c 9842     		cmp	r0, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 118


 4426 001e 06D9     		bls	.L382
1783:SYS/shell/shell.c ****     {
1784:SYS/shell/shell.c ****         shellWriteString(shell, shellText[SHELL_TEXT_CMD_TOO_LONG]);
 4427              		.loc 1 1784 0
 4428 0020 0E49     		ldr	r1, .L386
 4429 0022 2046     		mov	r0, r4
 4430 0024 FFF7FEFF 		bl	shellWriteString
 4431              	.LVL526:
1785:SYS/shell/shell.c ****         return -1;
 4432              		.loc 1 1785 0
 4433 0028 4FF0FF30 		mov	r0, #-1
 4434 002c 70BD     		pop	{r4, r5, r6, pc}
 4435              	.LVL527:
 4436              	.L382:
1786:SYS/shell/shell.c ****     }
1787:SYS/shell/shell.c ****     else
1788:SYS/shell/shell.c ****     {
1789:SYS/shell/shell.c ****         shell->parser.length = shellStringCopy(shell->parser.buffer, (char *)cmd);
 4437              		.loc 1 1789 0
 4438 002e 2946     		mov	r1, r5
 4439 0030 2069     		ldr	r0, [r4, #16]
 4440 0032 FFF7FEFF 		bl	shellStringCopy
 4441              	.LVL528:
 4442 0036 A081     		strh	r0, [r4, #12]	@ movhi
1790:SYS/shell/shell.c ****         shellExec(shell);
 4443              		.loc 1 1790 0
 4444 0038 2046     		mov	r0, r4
 4445 003a FFF7FEFF 		bl	shellExec
 4446              	.LVL529:
1791:SYS/shell/shell.c ****         shell->status.isActive = active;
 4447              		.loc 1 1791 0
 4448 003e 94F86030 		ldrb	r3, [r4, #96]	@ zero_extendqisi2
 4449 0042 66F34103 		bfi	r3, r6, #1, #1
 4450 0046 84F86030 		strb	r3, [r4, #96]
1792:SYS/shell/shell.c ****         return 0;
 4451              		.loc 1 1792 0
 4452 004a 0020     		movs	r0, #0
 4453 004c 70BD     		pop	{r4, r5, r6, pc}
 4454              	.LVL530:
 4455              	.L383:
 4456              	.LCFI80:
 4457              		.cfi_def_cfa_offset 0
 4458              		.cfi_restore 4
 4459              		.cfi_restore 5
 4460              		.cfi_restore 6
 4461              		.cfi_restore 14
1780:SYS/shell/shell.c ****     char active = shell->status.isActive;
 4462              		.loc 1 1780 0
 4463 004e 4FF0FF30 		mov	r0, #-1
 4464              	.LVL531:
1793:SYS/shell/shell.c ****     }
1794:SYS/shell/shell.c **** }
 4465              		.loc 1 1794 0
 4466 0052 7047     		bx	lr
 4467              	.LVL532:
 4468              	.L384:
 4469              	.LCFI81:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 119


 4470              		.cfi_def_cfa_offset 16
 4471              		.cfi_offset 4, -16
 4472              		.cfi_offset 5, -12
 4473              		.cfi_offset 6, -8
 4474              		.cfi_offset 14, -4
1780:SYS/shell/shell.c ****     char active = shell->status.isActive;
 4475              		.loc 1 1780 0
 4476 0054 4FF0FF30 		mov	r0, #-1
 4477              	.LVL533:
 4478              		.loc 1 1794 0
 4479 0058 70BD     		pop	{r4, r5, r6, pc}
 4480              	.LVL534:
 4481              	.L387:
 4482 005a 00BF     		.align	2
 4483              	.L386:
 4484 005c 90010000 		.word	.LC21
 4485              		.cfi_endproc
 4486              	.LFE181:
 4488              		.global	shellCommandclear
 4489              		.global	shellDescclear
 4490              		.global	shellCmdclear
 4491              		.global	shellCommandkeys
 4492              		.global	shellDesckeys
 4493              		.global	shellCmdkeys
 4494              		.global	shellCommandvars
 4495              		.global	shellDescvars
 4496              		.global	shellCmdvars
 4497              		.global	shellCommandcmds
 4498              		.global	shellDesccmds
 4499              		.global	shellCmdcmds
 4500              		.global	shellCommandusers
 4501              		.global	shellDescusers
 4502              		.global	shellCmdusers
 4503              		.global	shellCommandhelp
 4504              		.global	shellDeschelp
 4505              		.global	shellCmdhelp
 4506              		.global	shellKey0x0D000000
 4507              		.global	shellDesc0x0D000000
 4508              		.global	shellKey0x0A000000
 4509              		.global	shellDesc0x0A000000
 4510              		.global	shellKey0x1B5B337E
 4511              		.global	shellDesc0x1B5B337E
 4512              		.global	shellKey0x7F000000
 4513              		.global	shellDesc0x7F000000
 4514              		.global	shellKey0x08000000
 4515              		.global	shellDesc0x08000000
 4516              		.global	shellKey0x09000000
 4517              		.global	shellDesc0x09000000
 4518              		.global	shellKey0x1B5B4400
 4519              		.global	shellDesc0x1B5B4400
 4520              		.global	shellKey0x1B5B4300
 4521              		.global	shellDesc0x1B5B4300
 4522              		.global	shellKey0x1B5B4200
 4523              		.global	shellDesc0x1B5B4200
 4524              		.global	shellKey0x1B5B4100
 4525              		.global	shellDesc0x1B5B4100
 4526              		.global	shellCommandsetVar
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 120


 4527              		.global	shellDescsetVar
 4528              		.global	shellCmdsetVar
 4529              		.global	shellUserDefault
 4530              		.global	shellDesDefaultUser
 4531              		.global	shellPasswordDefaultUser
 4532              		.global	shellCmdDefaultUser
 4533              		.section	.rodata.shellPasswordDefaultUser,"a",%progbits
 4534              		.align	2
 4537              	shellPasswordDefaultUser:
 4538 0000 00       		.space	1
 4539              		.section	.rodata.shellDesc0x1B5B4100,"a",%progbits
 4540              		.align	2
 4543              	shellDesc0x1B5B4100:
 4544 0000 757000   		.ascii	"up\000"
 4545              		.section	.rodata.shellCmdvars,"a",%progbits
 4546              		.align	2
 4549              	shellCmdvars:
 4550 0000 76617273 		.ascii	"vars\000"
 4550      00
 4551              		.section	.rodata.shellDesccmds,"a",%progbits
 4552              		.align	2
 4555              	shellDesccmds:
 4556 0000 6C697374 		.ascii	"list all cmd\000"
 4556      20616C6C 
 4556      20636D64 
 4556      00
 4557              		.section	.rodata.shellCmdusers,"a",%progbits
 4558              		.align	2
 4561              	shellCmdusers:
 4562 0000 75736572 		.ascii	"users\000"
 4562      7300
 4563              		.section	.rodata.shellDesc0x7F000000,"a",%progbits
 4564              		.align	2
 4567              	shellDesc0x7F000000:
 4568 0000 6261636B 		.ascii	"backspace\000"
 4568      73706163 
 4568      6500
 4569              		.section	.rodata.shellDescvars,"a",%progbits
 4570              		.align	2
 4573              	shellDescvars:
 4574 0000 6C697374 		.ascii	"list all var\000"
 4574      20616C6C 
 4574      20766172 
 4574      00
 4575              		.section	.rodata.shellDesc0x1B5B4300,"a",%progbits
 4576              		.align	2
 4579              	shellDesc0x1B5B4300:
 4580 0000 72696768 		.ascii	"right\000"
 4580      7400
 4581              		.section	.rodata.shellCmdhelp,"a",%progbits
 4582              		.align	2
 4585              	shellCmdhelp:
 4586 0000 68656C70 		.ascii	"help\000"
 4586      00
 4587              		.section	.rodata.shellCmdclear,"a",%progbits
 4588              		.align	2
 4591              	shellCmdclear:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 121


 4592 0000 636C6561 		.ascii	"clear\000"
 4592      7200
 4593              		.section	.rodata.shellDesckeys,"a",%progbits
 4594              		.align	2
 4597              	shellDesckeys:
 4598 0000 6C697374 		.ascii	"list all key\000"
 4598      20616C6C 
 4598      206B6579 
 4598      00
 4599              		.section	.rodata.shellCmdkeys,"a",%progbits
 4600              		.align	2
 4603              	shellCmdkeys:
 4604 0000 6B657973 		.ascii	"keys\000"
 4604      00
 4605              		.section	.rodata.shellDesc0x08000000,"a",%progbits
 4606              		.align	2
 4609              	shellDesc0x08000000:
 4610 0000 6261636B 		.ascii	"backspace\000"
 4610      73706163 
 4610      6500
 4611              		.section	.rodata.shellDescusers,"a",%progbits
 4612              		.align	2
 4615              	shellDescusers:
 4616 0000 6C697374 		.ascii	"list all user\000"
 4616      20616C6C 
 4616      20757365 
 4616      7200
 4617              		.section	.bss.buffer.9190,"aw",%nobits
 4618              		.align	2
 4619              		.set	.LANCHOR1,. + 0
 4622              	buffer.9190:
 4623 0000 00000000 		.space	9
 4623      00000000 
 4623      00
 4624              		.section	.rodata.shellDescsetVar,"a",%progbits
 4625              		.align	2
 4628              	shellDescsetVar:
 4629 0000 73657420 		.ascii	"set var\000"
 4629      76617200 
 4630              		.section	.rodata.shellDesc0x0D000000,"a",%progbits
 4631              		.align	2
 4634              	shellDesc0x0D000000:
 4635 0000 656E7465 		.ascii	"enter\000"
 4635      7200
 4636              		.section	shellCommand,"a",%progbits
 4637              		.align	2
 4640              	shellCommandclear:
 4641 0000 00210000 		.word	8448
 4642 0004 00000000 		.word	shellCmdclear
 4643 0008 00000000 		.word	shellClear
 4644 000c 00000000 		.word	shellDescclear
 4647              	shellCommandkeys:
 4648 0010 00210000 		.word	8448
 4649 0014 00000000 		.word	shellCmdkeys
 4650 0018 00000000 		.word	shellKeys
 4651 001c 00000000 		.word	shellDesckeys
 4654              	shellCommandvars:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 122


 4655 0020 00210000 		.word	8448
 4656 0024 00000000 		.word	shellCmdvars
 4657 0028 00000000 		.word	shellVars
 4658 002c 00000000 		.word	shellDescvars
 4661              	shellCommandcmds:
 4662 0030 00210000 		.word	8448
 4663 0034 00000000 		.word	shellCmdcmds
 4664 0038 00000000 		.word	shellCmds
 4665 003c 00000000 		.word	shellDesccmds
 4668              	shellCommandusers:
 4669 0040 00210000 		.word	8448
 4670 0044 00000000 		.word	shellCmdusers
 4671 0048 00000000 		.word	shellUsers
 4672 004c 00000000 		.word	shellDescusers
 4675              	shellCommandhelp:
 4676 0050 00200000 		.word	8192
 4677 0054 00000000 		.word	shellCmdhelp
 4678 0058 00000000 		.word	shellHelp
 4679 005c 00000000 		.word	shellDeschelp
 4682              	shellKey0x0D000000:
 4683 0060 00190000 		.word	6400
 4684 0064 0000000D 		.word	218103808
 4685 0068 00000000 		.word	shellEnter
 4686 006c 00000000 		.word	shellDesc0x0D000000
 4689              	shellKey0x0A000000:
 4690 0070 00190000 		.word	6400
 4691 0074 0000000A 		.word	167772160
 4692 0078 00000000 		.word	shellEnter
 4693 007c 00000000 		.word	shellDesc0x0A000000
 4696              	shellKey0x1B5B337E:
 4697 0080 00190000 		.word	6400
 4698 0084 7E335B1B 		.word	458961790
 4699 0088 00000000 		.word	shellDelete
 4700 008c 00000000 		.word	shellDesc0x1B5B337E
 4703              	shellKey0x7F000000:
 4704 0090 00190000 		.word	6400
 4705 0094 0000007F 		.word	2130706432
 4706 0098 00000000 		.word	shellBackspace
 4707 009c 00000000 		.word	shellDesc0x7F000000
 4710              	shellKey0x08000000:
 4711 00a0 00190000 		.word	6400
 4712 00a4 00000008 		.word	134217728
 4713 00a8 00000000 		.word	shellBackspace
 4714 00ac 00000000 		.word	shellDesc0x08000000
 4717              	shellKey0x09000000:
 4718 00b0 00090000 		.word	2304
 4719 00b4 00000009 		.word	150994944
 4720 00b8 00000000 		.word	shellTab
 4721 00bc 00000000 		.word	shellDesc0x09000000
 4724              	shellKey0x1B5B4400:
 4725 00c0 00190000 		.word	6400
 4726 00c4 00445B1B 		.word	458966016
 4727 00c8 00000000 		.word	shellLeft
 4728 00cc 00000000 		.word	shellDesc0x1B5B4400
 4731              	shellKey0x1B5B4300:
 4732 00d0 00190000 		.word	6400
 4733 00d4 00435B1B 		.word	458965760
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 123


 4734 00d8 00000000 		.word	shellRight
 4735 00dc 00000000 		.word	shellDesc0x1B5B4300
 4738              	shellKey0x1B5B4200:
 4739 00e0 00090000 		.word	2304
 4740 00e4 00425B1B 		.word	458965504
 4741 00e8 00000000 		.word	shellDown
 4742 00ec 00000000 		.word	shellDesc0x1B5B4200
 4745              	shellKey0x1B5B4100:
 4746 00f0 00090000 		.word	2304
 4747 00f4 00415B1B 		.word	458965248
 4748 00f8 00000000 		.word	shellUp
 4749 00fc 00000000 		.word	shellDesc0x1B5B4100
 4752              	shellCommandsetVar:
 4753 0100 00210000 		.word	8448
 4754 0104 00000000 		.word	shellCmdsetVar
 4755 0108 00000000 		.word	shellSetVar
 4756 010c 00000000 		.word	shellDescsetVar
 4759              	shellUserDefault:
 4760 0110 00080000 		.word	2048
 4761 0114 00000000 		.word	shellCmdDefaultUser
 4762 0118 00000000 		.word	shellPasswordDefaultUser
 4763 011c 00000000 		.word	shellDesDefaultUser
 4764              		.section	.rodata.shellDescclear,"a",%progbits
 4765              		.align	2
 4768              	shellDescclear:
 4769 0000 636C6561 		.ascii	"clear console\000"
 4769      7220636F 
 4769      6E736F6C 
 4769      6500
 4770              		.section	.rodata.shellDesc0x0A000000,"a",%progbits
 4771              		.align	2
 4774              	shellDesc0x0A000000:
 4775 0000 656E7465 		.ascii	"enter\000"
 4775      7200
 4776              		.section	.rodata.shellDeschelp,"a",%progbits
 4777              		.align	2
 4780              	shellDeschelp:
 4781 0000 73686F77 		.ascii	"show command info\015\012help[cmd]\000"
 4781      20636F6D 
 4781      6D616E64 
 4781      20696E66 
 4781      6F0D0A68 
 4782              		.section	.rodata.shellDesc0x1B5B4200,"a",%progbits
 4783              		.align	2
 4786              	shellDesc0x1B5B4200:
 4787 0000 646F776E 		.ascii	"down\000"
 4787      00
 4788              		.section	.rodata.shellDesc0x09000000,"a",%progbits
 4789              		.align	2
 4792              	shellDesc0x09000000:
 4793 0000 74616200 		.ascii	"tab\000"
 4794              		.section	.rodata.shellCmdcmds,"a",%progbits
 4795              		.align	2
 4798              	shellCmdcmds:
 4799 0000 636D6473 		.ascii	"cmds\000"
 4799      00
 4800              		.section	.rodata.shellCmdsetVar,"a",%progbits
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 124


 4801              		.align	2
 4804              	shellCmdsetVar:
 4805 0000 73657456 		.ascii	"setVar\000"
 4805      617200
 4806              		.section	.rodata.shellDesc0x1B5B337E,"a",%progbits
 4807              		.align	2
 4810              	shellDesc0x1B5B337E:
 4811 0000 64656C65 		.ascii	"delete\000"
 4811      746500
 4812              		.section	.rodata.shellDesDefaultUser,"a",%progbits
 4813              		.align	2
 4816              	shellDesDefaultUser:
 4817 0000 64656661 		.ascii	"default user\000"
 4817      756C7420 
 4817      75736572 
 4817      00
 4818              		.section	.bss.shellList,"aw",%nobits
 4819              		.align	2
 4820              		.set	.LANCHOR0,. + 0
 4823              	shellList:
 4824 0000 00000000 		.space	20
 4824      00000000 
 4824      00000000 
 4824      00000000 
 4824      00000000 
 4825              		.section	.rodata.shellDesc0x1B5B4400,"a",%progbits
 4826              		.align	2
 4829              	shellDesc0x1B5B4400:
 4830 0000 6C656674 		.ascii	"left\000"
 4830      00
 4831              		.section	.rodata.shellCmdDefaultUser,"a",%progbits
 4832              		.align	2
 4835              	shellCmdDefaultUser:
 4836 0000 502E302E 		.ascii	"P.0.Wder Squad\000"
 4836      57646572 
 4836      20537175 
 4836      616400
 4837              		.section	.rodata.str1.4,"aMS",%progbits,1
 4838              		.align	2
 4839              	.LC0:
 4840 0000 1B5B324A 		.ascii	"\033[2J\033[1H\000"
 4840      1B5B3148 
 4840      00
 4841 0009 000000   		.space	3
 4842              	.LC1:
 4843 000c 0D0A0D0A 		.ascii	"\015\012\015\012/************  BitRtos  ***********"
 4843      2F2A2A2A 
 4843      2A2A2A2A 
 4843      2A2A2A2A 
 4843      2A202042 
 4844 0033 2A5C720A 		.ascii	"*\\r\012\015\012Team Mate:        8_B!T0\015\012   "
 4844      0D0A5465 
 4844      616D204D 
 4844      6174653A 
 4844      20202020 
 4845 0056 20202020 		.ascii	"               WHY\015\012\015\012Build:           "
 4845      20202020 
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 125


 4845      20202020 
 4845      20202057 
 4845      48590D0A 
 4846 007d 20446563 		.ascii	" Dec  8 2021 14:38:03\015\012Shell   Version:  3.0."
 4846      20203820 
 4846      32303231 
 4846      2031343A 
 4846      33383A30 
 4847 00aa 360D0A42 		.ascii	"6\015\012BitRtos Version:  1.0.0\015\012\000"
 4847      69745274 
 4847      6F732056 
 4847      65727369 
 4847      6F6E3A20 
 4848 00c7 00       		.space	1
 4849              	.LC2:
 4850 00c8 2F00     		.ascii	"/\000"
 4851 00ca 0000     		.space	2
 4852              	.LC3:
 4853 00cc 0D0A00   		.ascii	"\015\012\000"
 4854 00cf 00       		.space	1
 4855              	.LC4:
 4856 00d0 3A00     		.ascii	":\000"
 4857 00d2 0000     		.space	2
 4858              	.LC5:
 4859 00d4 242000   		.ascii	"$ \000"
 4860 00d7 00       		.space	1
 4861              	.LC6:
 4862 00d8 0D0A506C 		.ascii	"\015\012Please input password:\000"
 4862      65617365 
 4862      20696E70 
 4862      75742070 
 4862      61737377 
 4863 00f1 000000   		.space	3
 4864              	.LC7:
 4865 00f4 0D0A7061 		.ascii	"\015\012password error\015\012\000"
 4865      7373776F 
 4865      72642065 
 4865      72726F72 
 4865      0D0A00
 4866 0107 00       		.space	1
 4867              	.LC9:
 4868 0108 52657475 		.ascii	"Return: \000"
 4868      726E3A20 
 4868      00
 4869 0111 000000   		.space	3
 4870              	.LC10:
 4871 0114 2C203078 		.ascii	", 0x\000"
 4871      00
 4872 0119 000000   		.space	3
 4873              	.LC8:
 4874 011c 30303030 		.ascii	"00000000000\000"
 4874      30303030 
 4874      30303000 
 4875              	.LC11:
 4876 0128 434D4420 		.ascii	"CMD \015\012\000"
 4876      0D0A00
 4877 012f 00       		.space	1
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 126


 4878              	.LC12:
 4879 0130 56415200 		.ascii	"VAR\000"
 4880              	.LC13:
 4881 0134 55534552 		.ascii	"USER\000"
 4881      00
 4882 0139 000000   		.space	3
 4883              	.LC14:
 4884 013c 4B455900 		.ascii	"KEY\000"
 4885              	.LC15:
 4886 0140 4E4F4E45 		.ascii	"NONE\000"
 4886      00
 4887 0145 000000   		.space	3
 4888              	.LC16:
 4889 0148 0D0A436F 		.ascii	"\015\012Command List:\015\012\000"
 4889      6D6D616E 
 4889      64204C69 
 4889      73743A0D 
 4889      0A00
 4890 015a 0000     		.space	2
 4891              	.LC17:
 4892 015c 0D0A5661 		.ascii	"\015\012Var List:\015\012\000"
 4892      72204C69 
 4892      73743A0D 
 4892      0A00
 4893 016a 0000     		.space	2
 4894              	.LC18:
 4895 016c 0D0A5573 		.ascii	"\015\012User List:\015\012\000"
 4895      6572204C 
 4895      6973743A 
 4895      0D0A00
 4896 017b 00       		.space	1
 4897              	.LC19:
 4898 017c 0D0A4B65 		.ascii	"\015\012Key List:\015\012\000"
 4898      79204C69 
 4898      73743A0D 
 4898      0A00
 4899 018a 0000     		.space	2
 4900              	.LC20:
 4901 018c 08200800 		.ascii	"\010 \010\000"
 4902              	.LC21:
 4903 0190 0D0A5761 		.ascii	"\015\012Warning: Command is too long\015\012\000"
 4903      726E696E 
 4903      673A2043 
 4903      6F6D6D61 
 4903      6E642069 
 4904 01b1 000000   		.space	3
 4905              	.LC22:
 4906 01b4 502E302E 		.ascii	"P.0.Wder Squad\000"
 4906      57646572 
 4906      20537175 
 4906      616400
 4907 01c3 00       		.space	1
 4908              	.LC23:
 4909 01c4 636F6D6D 		.ascii	"command help of \000"
 4909      616E6420 
 4909      68656C70 
 4909      206F6620 
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 127


 4909      00
 4910 01d5 000000   		.space	3
 4911              	.LC24:
 4912 01d8 436F6D6D 		.ascii	"Command not Found\015\012\000"
 4912      616E6420 
 4912      6E6F7420 
 4912      466F756E 
 4912      640D0A00 
 4913              	.LC25:
 4914 01ec 203D2000 		.ascii	" = \000"
 4915              	.LC26:
 4916 01f0 2200     		.ascii	"\"\000"
 4917 01f2 0000     		.space	2
 4918              	.LC27:
 4919 01f4 63616E27 		.ascii	"can't set read only var\015\012\000"
 4919      74207365 
 4919      74207265 
 4919      6164206F 
 4919      6E6C7920 
 4920 020e 0000     		.space	2
 4921              	.LC28:
 4922 0210 63616E27 		.ascii	"can't set pointer\015\012\000"
 4922      74207365 
 4922      7420706F 
 4922      696E7465 
 4922      720D0A00 
 4923              	.LC29:
 4924 0224 56617220 		.ascii	"Var not Fount\015\012\000"
 4924      6E6F7420 
 4924      466F756E 
 4924      740D0A00 
 4925              	.LC30:
 4926 0234 20697320 		.ascii	" is not a var\015\012\000"
 4926      6E6F7420 
 4926      61207661 
 4926      720D0A00 
 4927              		.text
 4928              	.Letext0:
 4929              		.file 2 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_types.h"
 4930              		.file 3 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 4931              		.file 4 "SYS/shell/shell.h"
 4932              		.file 5 "d:\\gcc_arm\\5.4 2016q3\\lib\\gcc\\arm-none-eabi\\5.4.1\\include\\stdarg.h"
 4933              		.file 6 "<built-in>"
 4934              		.file 7 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\stdio.h"
 4935              		.file 8 "F4_CORE/core_cm4.h"
 4936              		.file 9 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\string.h"
 4937              		.file 10 "SYS/shell/shell_ext.h"
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 128


DEFINED SYMBOLS
                            *ABS*:00000000 shell.c
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:22     .text.shellAdd:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:26     .text.shellAdd:00000000 shellAdd
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:67     .text.shellAdd:00000020 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:73     .text.shellStringCopy:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:77     .text.shellStringCopy:00000000 shellStringCopy
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:123    .text.shellStringCompare:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:127    .text.shellStringCompare:00000000 shellStringCompare
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:185    .text.shellGetCommandDesc:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:189    .text.shellGetCommandDesc:00000000 shellGetCommandDesc
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:235    .text.shellParserParam:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:239    .text.shellParserParam:00000000 shellParserParam
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:383    .text.shellHistoryAdd:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:387    .text.shellHistoryAdd:00000000 shellHistoryAdd
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:464    .text.shellRemoveParamQuotes:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:468    .text.shellRemoveParamQuotes:00000000 shellRemoveParamQuotes
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:543    .text.shellGetCurrent:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:548    .text.shellGetCurrent:00000000 shellGetCurrent
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:589    .text.shellGetCurrent:00000024 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:594    .text.shellWriteByte:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:599    .text.shellWriteByte:00000000 shellWriteByte
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:633    .text.shellRight:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:638    .text.shellRight:00000000 shellRight
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:668    .text.shellLeft:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:673    .text.shellLeft:00000000 shellLeft
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:710    .text.shellWriteString:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:715    .text.shellWriteString:00000000 shellWriteString
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:751    .text.shellSetUser:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:755    .text.shellSetUser:00000000 shellSetUser
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:830    .text.shellSetUser:00000058 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:836    .text.shellWriteCommandLine:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:840    .text.shellWriteCommandLine:00000000 shellWriteCommandLine
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:903    .text.shellWriteCommandLine:00000048 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:912    .text.shellCheckPassword:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:916    .text.shellCheckPassword:00000000 shellCheckPassword
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:964    .text.shellCheckPassword:00000038 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:970    .text.shellClear:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:975    .text.shellClear:00000000 shellClear
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1000   .text.shellClear:00000010 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1005   .text.shellPrint:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1010   .text.shellPrint:00000000 shellPrint
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1073   .text.shellScan:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1078   .text.shellScan:00000000 shellScan
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1191   .text.shellScan:0000006c $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1196   .text.shellCheckPermission:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1201   .text.shellCheckPermission:00000000 shellCheckPermission
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1255   .text.shellToHex:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1260   .text.shellToHex:00000000 shellToHex
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1326   .text.shellGetCommandName:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1330   .text.shellGetCommandName:00000000 shellGetCommandName
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1408   .text.shellGetCommandName:00000040 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1413   .text.shellToDec:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1418   .text.shellToDec:00000000 shellToDec
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1514   .text.shellToDec:00000058 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1519   .text.shellWriteReturnValue:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1523   .text.shellWriteReturnValue:00000000 shellWriteReturnValue
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 129


C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1614   .text.shellWriteReturnValue:0000006c $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1622   .text.shellListItem:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1627   .text.shellListItem:00000000 shellListItem
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1729   .text.shellListItem:00000078 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1738   .text.shellListCommand:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1743   .text.shellListCommand:00000000 shellListCommand
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1808   .text.shellListCommand:00000040 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1813   .text.shellCmds:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1818   .text.shellCmds:00000000 shellCmds
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1843   .text.shellListVar:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1848   .text.shellListVar:00000000 shellListVar
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1915   .text.shellListVar:00000044 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1920   .text.shellVars:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1925   .text.shellVars:00000000 shellVars
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1950   .text.shellListUser:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:1955   .text.shellListUser:00000000 shellListUser
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2020   .text.shellListUser:00000040 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2025   .text.shellUsers:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2030   .text.shellUsers:00000000 shellUsers
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2055   .text.shellListKey:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2060   .text.shellListKey:00000000 shellListKey
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2125   .text.shellListKey:00000040 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2130   .text.shellKeys:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2135   .text.shellKeys:00000000 shellKeys
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2160   .text.shellListAll:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2165   .text.shellListAll:00000000 shellListAll
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2185   .text.shellDeleteCommandLine:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2190   .text.shellDeleteCommandLine:00000000 shellDeleteCommandLine
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2229   .text.shellDeleteCommandLine:0000001c $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2234   .text.shellClearCommandLine:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2239   .text.shellClearCommandLine:00000000 shellClearCommandLine
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2289   .text.shellHistory:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2293   .text.shellHistory:00000000 shellHistory
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2405   .text.shellHistory:000000a4 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2410   .text.shellUp:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2415   .text.shellUp:00000000 shellUp
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2436   .text.shellDown:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2441   .text.shellDown:00000000 shellDown
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2462   .text.shellTab:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2467   .text.shellTab:00000000 shellTab
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2677   .text.shellTab:00000114 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2683   .text.shellInsertByte:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2688   .text.shellInsertByte:00000000 shellInsertByte
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2855   .text.shellInsertByte:000000b8 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2861   .text.shellDeleteByte:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:2866   .text.shellDeleteByte:00000000 shellDeleteByte
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3038   .text.shellBackspace:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3043   .text.shellBackspace:00000000 shellBackspace
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3064   .text.shellDelete:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3069   .text.shellDelete:00000000 shellDelete
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3090   .text.shellSeekCommand:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3095   .text.shellSeekCommand:00000000 shellSeekCommand
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3191   .text.shellInit:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3196   .text.shellInit:00000000 shellInit
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3307   .text.shellInit:00000080 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3315   .text.shellHelp:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3320   .text.shellHelp:00000000 shellHelp
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 130


C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3414   .text.shellHelp:0000006c $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3422   .text.shellGetVarValue:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3427   .text.shellGetVarValue:00000000 shellGetVarValue
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3448   .text.shellGetVarValue:00000012 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3454   .text.shellGetVarValue:00000018 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3515   .text.shellShowVar:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3519   .text.shellShowVar:00000000 shellShowVar
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3652   .text.shellShowVar:000000a8 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3661   .text.shellSetVarValue:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3666   .text.shellSetVarValue:00000000 shellSetVarValue
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3703   .text.shellSetVarValue:00000026 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3709   .text.shellSetVarValue:0000002c $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3778   .text.shellSetVarValue:00000070 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3784   .text.shellSetVar:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3789   .text.shellSetVar:00000000 shellSetVar
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3872   .text.shellSetVar:0000005c $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3878   .text.shellRunCommand:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3883   .text.shellRunCommand:00000000 shellRunCommand
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:3995   .text.shellNormalInput:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4000   .text.shellNormalInput:00000000 shellNormalInput
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4024   .text.shellExec:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4029   .text.shellExec:00000000 shellExec
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4117   .text.shellExec:00000060 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4123   .text.shellEnter:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4128   .text.shellEnter:00000000 shellEnter
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4154   .text.shellHandler:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4159   .text.shellHandler:00000000 shellHandler
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4329   .text.shellHandler:000000d4 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4334   .text.shellTask:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4339   .text.shellTask:00000000 shellTask
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4388   .text.shellRun:00000000 $t
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4393   .text.shellRun:00000000 shellRun
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4484   .text.shellRun:0000005c $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4640   shellCommand:00000000 shellCommandclear
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4768   .rodata.shellDescclear:00000000 shellDescclear
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4591   .rodata.shellCmdclear:00000000 shellCmdclear
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4647   shellCommand:00000010 shellCommandkeys
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4597   .rodata.shellDesckeys:00000000 shellDesckeys
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4603   .rodata.shellCmdkeys:00000000 shellCmdkeys
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4654   shellCommand:00000020 shellCommandvars
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4573   .rodata.shellDescvars:00000000 shellDescvars
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4549   .rodata.shellCmdvars:00000000 shellCmdvars
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4661   shellCommand:00000030 shellCommandcmds
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4555   .rodata.shellDesccmds:00000000 shellDesccmds
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4798   .rodata.shellCmdcmds:00000000 shellCmdcmds
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4668   shellCommand:00000040 shellCommandusers
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4615   .rodata.shellDescusers:00000000 shellDescusers
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4561   .rodata.shellCmdusers:00000000 shellCmdusers
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4675   shellCommand:00000050 shellCommandhelp
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4780   .rodata.shellDeschelp:00000000 shellDeschelp
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4585   .rodata.shellCmdhelp:00000000 shellCmdhelp
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4682   shellCommand:00000060 shellKey0x0D000000
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4634   .rodata.shellDesc0x0D000000:00000000 shellDesc0x0D000000
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4689   shellCommand:00000070 shellKey0x0A000000
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4774   .rodata.shellDesc0x0A000000:00000000 shellDesc0x0A000000
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4696   shellCommand:00000080 shellKey0x1B5B337E
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4810   .rodata.shellDesc0x1B5B337E:00000000 shellDesc0x1B5B337E
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 131


C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4703   shellCommand:00000090 shellKey0x7F000000
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4567   .rodata.shellDesc0x7F000000:00000000 shellDesc0x7F000000
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4710   shellCommand:000000a0 shellKey0x08000000
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4609   .rodata.shellDesc0x08000000:00000000 shellDesc0x08000000
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4717   shellCommand:000000b0 shellKey0x09000000
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4792   .rodata.shellDesc0x09000000:00000000 shellDesc0x09000000
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4724   shellCommand:000000c0 shellKey0x1B5B4400
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4829   .rodata.shellDesc0x1B5B4400:00000000 shellDesc0x1B5B4400
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4731   shellCommand:000000d0 shellKey0x1B5B4300
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4579   .rodata.shellDesc0x1B5B4300:00000000 shellDesc0x1B5B4300
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4738   shellCommand:000000e0 shellKey0x1B5B4200
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4786   .rodata.shellDesc0x1B5B4200:00000000 shellDesc0x1B5B4200
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4745   shellCommand:000000f0 shellKey0x1B5B4100
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4543   .rodata.shellDesc0x1B5B4100:00000000 shellDesc0x1B5B4100
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4752   shellCommand:00000100 shellCommandsetVar
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4628   .rodata.shellDescsetVar:00000000 shellDescsetVar
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4804   .rodata.shellCmdsetVar:00000000 shellCmdsetVar
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4759   shellCommand:00000110 shellUserDefault
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4816   .rodata.shellDesDefaultUser:00000000 shellDesDefaultUser
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4537   .rodata.shellPasswordDefaultUser:00000000 shellPasswordDefaultUser
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4835   .rodata.shellCmdDefaultUser:00000000 shellCmdDefaultUser
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4534   .rodata.shellPasswordDefaultUser:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4540   .rodata.shellDesc0x1B5B4100:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4546   .rodata.shellCmdvars:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4552   .rodata.shellDesccmds:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4558   .rodata.shellCmdusers:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4564   .rodata.shellDesc0x7F000000:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4570   .rodata.shellDescvars:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4576   .rodata.shellDesc0x1B5B4300:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4582   .rodata.shellCmdhelp:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4588   .rodata.shellCmdclear:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4594   .rodata.shellDesckeys:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4600   .rodata.shellCmdkeys:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4606   .rodata.shellDesc0x08000000:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4612   .rodata.shellDescusers:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4618   .bss.buffer.9190:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4622   .bss.buffer.9190:00000000 buffer.9190
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4625   .rodata.shellDescsetVar:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4631   .rodata.shellDesc0x0D000000:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4637   shellCommand:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4765   .rodata.shellDescclear:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4771   .rodata.shellDesc0x0A000000:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4777   .rodata.shellDeschelp:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4783   .rodata.shellDesc0x1B5B4200:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4789   .rodata.shellDesc0x09000000:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4795   .rodata.shellCmdcmds:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4801   .rodata.shellCmdsetVar:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4807   .rodata.shellDesc0x1B5B337E:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4813   .rodata.shellDesDefaultUser:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4819   .bss.shellList:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4823   .bss.shellList:00000000 shellList
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4826   .rodata.shellDesc0x1B5B4400:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4832   .rodata.shellCmdDefaultUser:00000000 $d
C:\Users\why\AppData\Local\Temp\cc9VDHln.s:4838   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ARM GAS  C:\Users\why\AppData\Local\Temp\cc9VDHln.s 			page 132


strcmp
strlen
vsnprintf
vsscanf
strncmp
_shell_command_start
_shell_command_end
shellExtRun
