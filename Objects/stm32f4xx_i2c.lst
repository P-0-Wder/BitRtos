ARM GAS  /tmp/ccqK3nom.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_i2c.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2C_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	I2C_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	I2C_DeInit:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "FWLIB/src/stm32f4xx_i2c.c"
   1:FWLIB/src/stm32f4xx_i2c.c **** /**
   2:FWLIB/src/stm32f4xx_i2c.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_i2c.c ****   * @file    stm32f4xx_i2c.c
   4:FWLIB/src/stm32f4xx_i2c.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_i2c.c ****   * @version V1.8.0
   6:FWLIB/src/stm32f4xx_i2c.c ****   * @date    04-November-2016
   7:FWLIB/src/stm32f4xx_i2c.c ****   * @brief   This file provides firmware functions to manage the following 
   8:FWLIB/src/stm32f4xx_i2c.c ****   *          functionalities of the Inter-integrated circuit (I2C)
   9:FWLIB/src/stm32f4xx_i2c.c ****   *           + Initialization and Configuration
  10:FWLIB/src/stm32f4xx_i2c.c ****   *           + Data transfers
  11:FWLIB/src/stm32f4xx_i2c.c ****   *           + PEC management
  12:FWLIB/src/stm32f4xx_i2c.c ****   *           + DMA transfers management
  13:FWLIB/src/stm32f4xx_i2c.c ****   *           + Interrupts, events and flags management 
  14:FWLIB/src/stm32f4xx_i2c.c ****   *           
  15:FWLIB/src/stm32f4xx_i2c.c ****     @verbatim    
  16:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================
  17:FWLIB/src/stm32f4xx_i2c.c ****                     ##### How to use this driver #####
  18:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================
  19:FWLIB/src/stm32f4xx_i2c.c ****     [..]
  20:FWLIB/src/stm32f4xx_i2c.c ****       (#) Enable peripheral clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2Cx, ENABLE)
  21:FWLIB/src/stm32f4xx_i2c.c ****           function for I2C1, I2C2 or I2C3.
  22:FWLIB/src/stm32f4xx_i2c.c ****   
  23:FWLIB/src/stm32f4xx_i2c.c ****       (#) Enable SDA, SCL  and SMBA (when used) GPIO clocks using 
  24:FWLIB/src/stm32f4xx_i2c.c ****           RCC_AHBPeriphClockCmd() function. 
  25:FWLIB/src/stm32f4xx_i2c.c ****   
  26:FWLIB/src/stm32f4xx_i2c.c ****       (#) Peripherals alternate function: 
  27:FWLIB/src/stm32f4xx_i2c.c ****         (++) Connect the pin to the desired peripherals' Alternate 
  28:FWLIB/src/stm32f4xx_i2c.c ****              Function (AF) using GPIO_PinAFConfig() function
  29:FWLIB/src/stm32f4xx_i2c.c ****         (++) Configure the desired pin in alternate function by:
ARM GAS  /tmp/ccqK3nom.s 			page 2


  30:FWLIB/src/stm32f4xx_i2c.c ****              GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  31:FWLIB/src/stm32f4xx_i2c.c ****         (++) Select the type, pull-up/pull-down and output speed via 
  32:FWLIB/src/stm32f4xx_i2c.c ****              GPIO_PuPd, GPIO_OType and GPIO_Speed members
  33:FWLIB/src/stm32f4xx_i2c.c ****         (++) Call GPIO_Init() function
  34:FWLIB/src/stm32f4xx_i2c.c ****              Recommended configuration is Push-Pull, Pull-up, Open-Drain.
  35:FWLIB/src/stm32f4xx_i2c.c ****              Add an external pull up if necessary (typically 4.7 KOhm).      
  36:FWLIB/src/stm32f4xx_i2c.c ****           
  37:FWLIB/src/stm32f4xx_i2c.c ****       (#) Program the Mode, duty cycle , Own address, Ack, Speed and Acknowledged
  38:FWLIB/src/stm32f4xx_i2c.c ****           Address using the I2C_Init() function.
  39:FWLIB/src/stm32f4xx_i2c.c ****   
  40:FWLIB/src/stm32f4xx_i2c.c ****       (#) Optionally you can enable/configure the following parameters without
  41:FWLIB/src/stm32f4xx_i2c.c ****           re-initialization (i.e there is no need to call again I2C_Init() function):
  42:FWLIB/src/stm32f4xx_i2c.c ****         (++) Enable the acknowledge feature using I2C_AcknowledgeConfig() function
  43:FWLIB/src/stm32f4xx_i2c.c ****         (++) Enable the dual addressing mode using I2C_DualAddressCmd() function
  44:FWLIB/src/stm32f4xx_i2c.c ****         (++) Enable the general call using the I2C_GeneralCallCmd() function
  45:FWLIB/src/stm32f4xx_i2c.c ****         (++) Enable the clock stretching using I2C_StretchClockCmd() function
  46:FWLIB/src/stm32f4xx_i2c.c ****         (++) Enable the fast mode duty cycle using the I2C_FastModeDutyCycleConfig()
  47:FWLIB/src/stm32f4xx_i2c.c ****              function.
  48:FWLIB/src/stm32f4xx_i2c.c ****         (++) Configure the NACK position for Master Receiver mode in case of 
  49:FWLIB/src/stm32f4xx_i2c.c ****              2 bytes reception using the function I2C_NACKPositionConfig().  
  50:FWLIB/src/stm32f4xx_i2c.c ****         (++) Enable the PEC Calculation using I2C_CalculatePEC() function
  51:FWLIB/src/stm32f4xx_i2c.c ****         (++) For SMBus Mode: 
  52:FWLIB/src/stm32f4xx_i2c.c ****           (+++) Enable the Address Resolution Protocol (ARP) using I2C_ARPCmd() function
  53:FWLIB/src/stm32f4xx_i2c.c ****           (+++) Configure the SMBusAlert pin using I2C_SMBusAlertConfig() function
  54:FWLIB/src/stm32f4xx_i2c.c ****   
  55:FWLIB/src/stm32f4xx_i2c.c ****       (#) Enable the NVIC and the corresponding interrupt using the function 
  56:FWLIB/src/stm32f4xx_i2c.c ****           I2C_ITConfig() if you need to use interrupt mode. 
  57:FWLIB/src/stm32f4xx_i2c.c ****   
  58:FWLIB/src/stm32f4xx_i2c.c ****       (#) When using the DMA mode 
  59:FWLIB/src/stm32f4xx_i2c.c ****         (++) Configure the DMA using DMA_Init() function
  60:FWLIB/src/stm32f4xx_i2c.c ****         (++) Active the needed channel Request using I2C_DMACmd() or
  61:FWLIB/src/stm32f4xx_i2c.c ****              I2C_DMALastTransferCmd() function.
  62:FWLIB/src/stm32f4xx_i2c.c ****         -@@- When using DMA mode, I2C interrupts may be used at the same time to
  63:FWLIB/src/stm32f4xx_i2c.c ****              control the communication flow (Start/Stop/Ack... events and errors).
  64:FWLIB/src/stm32f4xx_i2c.c ****    
  65:FWLIB/src/stm32f4xx_i2c.c ****       (#) Enable the I2C using the I2C_Cmd() function.
  66:FWLIB/src/stm32f4xx_i2c.c ****    
  67:FWLIB/src/stm32f4xx_i2c.c ****       (#) Enable the DMA using the DMA_Cmd() function when using DMA mode in the 
  68:FWLIB/src/stm32f4xx_i2c.c ****           transfers. 
  69:FWLIB/src/stm32f4xx_i2c.c ****   
  70:FWLIB/src/stm32f4xx_i2c.c ****     @endverbatim  
  71:FWLIB/src/stm32f4xx_i2c.c ****   ******************************************************************************
  72:FWLIB/src/stm32f4xx_i2c.c ****   * @attention
  73:FWLIB/src/stm32f4xx_i2c.c ****   *
  74:FWLIB/src/stm32f4xx_i2c.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
  75:FWLIB/src/stm32f4xx_i2c.c ****   *
  76:FWLIB/src/stm32f4xx_i2c.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  77:FWLIB/src/stm32f4xx_i2c.c ****   * You may not use this file except in compliance with the License.
  78:FWLIB/src/stm32f4xx_i2c.c ****   * You may obtain a copy of the License at:
  79:FWLIB/src/stm32f4xx_i2c.c ****   *
  80:FWLIB/src/stm32f4xx_i2c.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  81:FWLIB/src/stm32f4xx_i2c.c ****   *
  82:FWLIB/src/stm32f4xx_i2c.c ****   * Unless required by applicable law or agreed to in writing, software 
  83:FWLIB/src/stm32f4xx_i2c.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  84:FWLIB/src/stm32f4xx_i2c.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  85:FWLIB/src/stm32f4xx_i2c.c ****   * See the License for the specific language governing permissions and
  86:FWLIB/src/stm32f4xx_i2c.c ****   * limitations under the License.
ARM GAS  /tmp/ccqK3nom.s 			page 3


  87:FWLIB/src/stm32f4xx_i2c.c ****   *
  88:FWLIB/src/stm32f4xx_i2c.c ****   ******************************************************************************  
  89:FWLIB/src/stm32f4xx_i2c.c ****   */ 
  90:FWLIB/src/stm32f4xx_i2c.c **** 
  91:FWLIB/src/stm32f4xx_i2c.c **** /* Includes ------------------------------------------------------------------*/
  92:FWLIB/src/stm32f4xx_i2c.c **** #include "stm32f4xx_i2c.h"
  93:FWLIB/src/stm32f4xx_i2c.c **** #include "stm32f4xx_rcc.h"
  94:FWLIB/src/stm32f4xx_i2c.c **** 
  95:FWLIB/src/stm32f4xx_i2c.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  96:FWLIB/src/stm32f4xx_i2c.c ****   * @{
  97:FWLIB/src/stm32f4xx_i2c.c ****   */
  98:FWLIB/src/stm32f4xx_i2c.c **** 
  99:FWLIB/src/stm32f4xx_i2c.c **** /** @defgroup I2C 
 100:FWLIB/src/stm32f4xx_i2c.c ****   * @brief I2C driver modules
 101:FWLIB/src/stm32f4xx_i2c.c ****   * @{
 102:FWLIB/src/stm32f4xx_i2c.c ****   */ 
 103:FWLIB/src/stm32f4xx_i2c.c **** 
 104:FWLIB/src/stm32f4xx_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 105:FWLIB/src/stm32f4xx_i2c.c **** /* Private define ------------------------------------------------------------*/
 106:FWLIB/src/stm32f4xx_i2c.c **** 
 107:FWLIB/src/stm32f4xx_i2c.c **** #define CR1_CLEAR_MASK    ((uint16_t)0xFBF5)      /*<! I2C registers Masks */
 108:FWLIB/src/stm32f4xx_i2c.c **** #define FLAG_MASK         ((uint32_t)0x00FFFFFF)  /*<! I2C FLAG mask */
 109:FWLIB/src/stm32f4xx_i2c.c **** #define ITEN_MASK         ((uint32_t)0x07000000)  /*<! I2C Interrupt Enable mask */
 110:FWLIB/src/stm32f4xx_i2c.c **** 
 111:FWLIB/src/stm32f4xx_i2c.c **** /* Private macro -------------------------------------------------------------*/
 112:FWLIB/src/stm32f4xx_i2c.c **** /* Private variables ---------------------------------------------------------*/
 113:FWLIB/src/stm32f4xx_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 114:FWLIB/src/stm32f4xx_i2c.c **** /* Private functions ---------------------------------------------------------*/
 115:FWLIB/src/stm32f4xx_i2c.c **** 
 116:FWLIB/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Private_Functions
 117:FWLIB/src/stm32f4xx_i2c.c ****   * @{
 118:FWLIB/src/stm32f4xx_i2c.c ****   */
 119:FWLIB/src/stm32f4xx_i2c.c **** 
 120:FWLIB/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group1 Initialization and Configuration functions
 121:FWLIB/src/stm32f4xx_i2c.c ****  *  @brief   Initialization and Configuration functions 
 122:FWLIB/src/stm32f4xx_i2c.c ****  *
 123:FWLIB/src/stm32f4xx_i2c.c **** @verbatim   
 124:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================
 125:FWLIB/src/stm32f4xx_i2c.c ****             ##### Initialization and Configuration functions #####
 126:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================  
 127:FWLIB/src/stm32f4xx_i2c.c **** 
 128:FWLIB/src/stm32f4xx_i2c.c **** @endverbatim
 129:FWLIB/src/stm32f4xx_i2c.c ****   * @{
 130:FWLIB/src/stm32f4xx_i2c.c ****   */
 131:FWLIB/src/stm32f4xx_i2c.c **** 
 132:FWLIB/src/stm32f4xx_i2c.c **** /**
 133:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Deinitialize the I2Cx peripheral registers to their default reset values.
 134:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 135:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 136:FWLIB/src/stm32f4xx_i2c.c ****   */
 137:FWLIB/src/stm32f4xx_i2c.c **** void I2C_DeInit(I2C_TypeDef* I2Cx)
 138:FWLIB/src/stm32f4xx_i2c.c **** {
  30              		.loc 1 138 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 138 1 is_stmt 0 view .LVU1
ARM GAS  /tmp/ccqK3nom.s 			page 4


  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 139:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 140:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
  40              		.loc 1 140 3 is_stmt 1 view .LVU2
 141:FWLIB/src/stm32f4xx_i2c.c **** 
 142:FWLIB/src/stm32f4xx_i2c.c ****   if (I2Cx == I2C1)
  41              		.loc 1 142 3 view .LVU3
  42              		.loc 1 142 6 is_stmt 0 view .LVU4
  43 0002 154B     		ldr	r3, .L9
  44 0004 9842     		cmp	r0, r3
  45 0006 06D0     		beq	.L6
 143:FWLIB/src/stm32f4xx_i2c.c ****   {
 144:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable I2C1 reset state */
 145:FWLIB/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, ENABLE);
 146:FWLIB/src/stm32f4xx_i2c.c ****     /* Release I2C1 from reset state */
 147:FWLIB/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, DISABLE);    
 148:FWLIB/src/stm32f4xx_i2c.c ****   }
 149:FWLIB/src/stm32f4xx_i2c.c ****   else if (I2Cx == I2C2)
  46              		.loc 1 149 8 is_stmt 1 view .LVU5
  47              		.loc 1 149 11 is_stmt 0 view .LVU6
  48 0008 144B     		ldr	r3, .L9+4
  49 000a 9842     		cmp	r0, r3
  50 000c 0ED0     		beq	.L7
 150:FWLIB/src/stm32f4xx_i2c.c ****   {
 151:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable I2C2 reset state */
 152:FWLIB/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, ENABLE);
 153:FWLIB/src/stm32f4xx_i2c.c ****     /* Release I2C2 from reset state */
 154:FWLIB/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, DISABLE);      
 155:FWLIB/src/stm32f4xx_i2c.c ****   }
 156:FWLIB/src/stm32f4xx_i2c.c ****   else 
 157:FWLIB/src/stm32f4xx_i2c.c ****   {
 158:FWLIB/src/stm32f4xx_i2c.c ****     if (I2Cx == I2C3)
  51              		.loc 1 158 5 is_stmt 1 view .LVU7
  52              		.loc 1 158 8 is_stmt 0 view .LVU8
  53 000e 144B     		ldr	r3, .L9+8
  54 0010 9842     		cmp	r0, r3
  55 0012 16D0     		beq	.L8
  56              	.LVL1:
  57              	.L1:
 159:FWLIB/src/stm32f4xx_i2c.c ****     {
 160:FWLIB/src/stm32f4xx_i2c.c ****       /* Enable I2C3 reset state */
 161:FWLIB/src/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, ENABLE);
 162:FWLIB/src/stm32f4xx_i2c.c ****       /* Release I2C3 from reset state */
 163:FWLIB/src/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, DISABLE);     
 164:FWLIB/src/stm32f4xx_i2c.c ****     }
 165:FWLIB/src/stm32f4xx_i2c.c ****   }
 166:FWLIB/src/stm32f4xx_i2c.c **** }
  58              		.loc 1 166 1 view .LVU9
  59 0014 08BD     		pop	{r3, pc}
  60              	.LVL2:
  61              	.L6:
 145:FWLIB/src/stm32f4xx_i2c.c ****     /* Release I2C1 from reset state */
  62              		.loc 1 145 5 is_stmt 1 view .LVU10
ARM GAS  /tmp/ccqK3nom.s 			page 5


  63 0016 0121     		movs	r1, #1
  64 0018 4FF40010 		mov	r0, #2097152
  65              	.LVL3:
 145:FWLIB/src/stm32f4xx_i2c.c ****     /* Release I2C1 from reset state */
  66              		.loc 1 145 5 is_stmt 0 view .LVU11
  67 001c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  68              	.LVL4:
 147:FWLIB/src/stm32f4xx_i2c.c ****   }
  69              		.loc 1 147 5 is_stmt 1 view .LVU12
  70 0020 0021     		movs	r1, #0
  71 0022 4FF40010 		mov	r0, #2097152
  72 0026 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  73              	.LVL5:
  74 002a F3E7     		b	.L1
  75              	.LVL6:
  76              	.L7:
 152:FWLIB/src/stm32f4xx_i2c.c ****     /* Release I2C2 from reset state */
  77              		.loc 1 152 5 view .LVU13
  78 002c 0121     		movs	r1, #1
  79 002e 4FF48000 		mov	r0, #4194304
  80              	.LVL7:
 152:FWLIB/src/stm32f4xx_i2c.c ****     /* Release I2C2 from reset state */
  81              		.loc 1 152 5 is_stmt 0 view .LVU14
  82 0032 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  83              	.LVL8:
 154:FWLIB/src/stm32f4xx_i2c.c ****   }
  84              		.loc 1 154 5 is_stmt 1 view .LVU15
  85 0036 0021     		movs	r1, #0
  86 0038 4FF48000 		mov	r0, #4194304
  87 003c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  88              	.LVL9:
  89 0040 E8E7     		b	.L1
  90              	.LVL10:
  91              	.L8:
 161:FWLIB/src/stm32f4xx_i2c.c ****       /* Release I2C3 from reset state */
  92              		.loc 1 161 7 view .LVU16
  93 0042 0121     		movs	r1, #1
  94 0044 4FF40000 		mov	r0, #8388608
  95              	.LVL11:
 161:FWLIB/src/stm32f4xx_i2c.c ****       /* Release I2C3 from reset state */
  96              		.loc 1 161 7 is_stmt 0 view .LVU17
  97 0048 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  98              	.LVL12:
 163:FWLIB/src/stm32f4xx_i2c.c ****     }
  99              		.loc 1 163 7 is_stmt 1 view .LVU18
 100 004c 0021     		movs	r1, #0
 101 004e 4FF40000 		mov	r0, #8388608
 102 0052 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 103              	.LVL13:
 104              		.loc 1 166 1 is_stmt 0 view .LVU19
 105 0056 DDE7     		b	.L1
 106              	.L10:
 107              		.align	2
 108              	.L9:
 109 0058 00540040 		.word	1073763328
 110 005c 00580040 		.word	1073764352
 111 0060 005C0040 		.word	1073765376
ARM GAS  /tmp/ccqK3nom.s 			page 6


 112              		.cfi_endproc
 113              	.LFE123:
 115              		.section	.text.I2C_Init,"ax",%progbits
 116              		.align	1
 117              		.global	I2C_Init
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	I2C_Init:
 124              	.LVL14:
 125              	.LFB124:
 167:FWLIB/src/stm32f4xx_i2c.c **** 
 168:FWLIB/src/stm32f4xx_i2c.c **** /**
 169:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Initializes the I2Cx peripheral according to the specified 
 170:FWLIB/src/stm32f4xx_i2c.c ****   *         parameters in the I2C_InitStruct.
 171:FWLIB/src/stm32f4xx_i2c.c ****   *           
 172:FWLIB/src/stm32f4xx_i2c.c ****   * @note   To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency 
 173:FWLIB/src/stm32f4xx_i2c.c ****   *         (I2C peripheral input clock) must be a multiple of 10 MHz.  
 174:FWLIB/src/stm32f4xx_i2c.c ****   *           
 175:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 176:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to a I2C_InitTypeDef structure that contains 
 177:FWLIB/src/stm32f4xx_i2c.c ****   *         the configuration information for the specified I2C peripheral.
 178:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 179:FWLIB/src/stm32f4xx_i2c.c ****   */
 180:FWLIB/src/stm32f4xx_i2c.c **** void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)
 181:FWLIB/src/stm32f4xx_i2c.c **** {
 126              		.loc 1 181 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 16
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		.loc 1 181 1 is_stmt 0 view .LVU21
 131 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 132              	.LCFI1:
 133              		.cfi_def_cfa_offset 20
 134              		.cfi_offset 4, -20
 135              		.cfi_offset 5, -16
 136              		.cfi_offset 6, -12
 137              		.cfi_offset 7, -8
 138              		.cfi_offset 14, -4
 139 0002 85B0     		sub	sp, sp, #20
 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 40
 142 0004 0446     		mov	r4, r0
 143 0006 0D46     		mov	r5, r1
 182:FWLIB/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0, freqrange = 0;
 144              		.loc 1 182 3 is_stmt 1 view .LVU22
 145              	.LVL15:
 183:FWLIB/src/stm32f4xx_i2c.c ****   uint16_t result = 0x04;
 146              		.loc 1 183 3 view .LVU23
 184:FWLIB/src/stm32f4xx_i2c.c ****   uint32_t pclk1 = 8000000;
 147              		.loc 1 184 3 view .LVU24
 185:FWLIB/src/stm32f4xx_i2c.c ****   RCC_ClocksTypeDef  rcc_clocks;
 148              		.loc 1 185 3 view .LVU25
 186:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 187:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 149              		.loc 1 187 3 view .LVU26
ARM GAS  /tmp/ccqK3nom.s 			page 7


 188:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLOCK_SPEED(I2C_InitStruct->I2C_ClockSpeed));
 150              		.loc 1 188 3 view .LVU27
 189:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_MODE(I2C_InitStruct->I2C_Mode));
 151              		.loc 1 189 3 view .LVU28
 190:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_InitStruct->I2C_DutyCycle));
 152              		.loc 1 190 3 view .LVU29
 191:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(I2C_InitStruct->I2C_OwnAddress1));
 153              		.loc 1 191 3 view .LVU30
 192:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACK_STATE(I2C_InitStruct->I2C_Ack));
 154              		.loc 1 192 3 view .LVU31
 193:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACKNOWLEDGE_ADDRESS(I2C_InitStruct->I2C_AcknowledgedAddress));
 155              		.loc 1 193 3 view .LVU32
 194:FWLIB/src/stm32f4xx_i2c.c **** 
 195:FWLIB/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR2 Configuration ------------------------*/
 196:FWLIB/src/stm32f4xx_i2c.c ****   /* Get the I2Cx CR2 value */
 197:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR2;
 156              		.loc 1 197 3 view .LVU33
 157              		.loc 1 197 10 is_stmt 0 view .LVU34
 158 0008 8688     		ldrh	r6, [r0, #4]
 159 000a B6B2     		uxth	r6, r6
 160              	.LVL16:
 198:FWLIB/src/stm32f4xx_i2c.c ****   /* Clear frequency FREQ[5:0] bits */
 199:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_CR2_FREQ);
 161              		.loc 1 199 3 is_stmt 1 view .LVU35
 162              		.loc 1 199 10 is_stmt 0 view .LVU36
 163 000c 26F03F06 		bic	r6, r6, #63
 164              	.LVL17:
 165              		.loc 1 199 10 view .LVU37
 166 0010 B6B2     		uxth	r6, r6
 167              	.LVL18:
 200:FWLIB/src/stm32f4xx_i2c.c ****   /* Get pclk1 frequency value */
 201:FWLIB/src/stm32f4xx_i2c.c ****   RCC_GetClocksFreq(&rcc_clocks);
 168              		.loc 1 201 3 is_stmt 1 view .LVU38
 169 0012 6846     		mov	r0, sp
 170              	.LVL19:
 171              		.loc 1 201 3 is_stmt 0 view .LVU39
 172 0014 FFF7FEFF 		bl	RCC_GetClocksFreq
 173              	.LVL20:
 202:FWLIB/src/stm32f4xx_i2c.c ****   pclk1 = rcc_clocks.PCLK1_Frequency;
 174              		.loc 1 202 3 is_stmt 1 view .LVU40
 175              		.loc 1 202 9 is_stmt 0 view .LVU41
 176 0018 0298     		ldr	r0, [sp, #8]
 177              	.LVL21:
 203:FWLIB/src/stm32f4xx_i2c.c ****   /* Set frequency bits depending on pclk1 value */
 204:FWLIB/src/stm32f4xx_i2c.c ****   freqrange = (uint16_t)(pclk1 / 1000000);
 178              		.loc 1 204 3 is_stmt 1 view .LVU42
 179              		.loc 1 204 32 is_stmt 0 view .LVU43
 180 001a 2B4A     		ldr	r2, .L21
 181 001c A2FB0032 		umull	r3, r2, r2, r0
 182 0020 920C     		lsrs	r2, r2, #18
 183              		.loc 1 204 13 view .LVU44
 184 0022 97B2     		uxth	r7, r2
 185              	.LVL22:
 205:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 186              		.loc 1 205 3 is_stmt 1 view .LVU45
 187              		.loc 1 205 10 is_stmt 0 view .LVU46
 188 0024 3E43     		orrs	r6, r6, r7
ARM GAS  /tmp/ccqK3nom.s 			page 8


 189              	.LVL23:
 206:FWLIB/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR2 */
 207:FWLIB/src/stm32f4xx_i2c.c ****   I2Cx->CR2 = tmpreg;
 190              		.loc 1 207 3 is_stmt 1 view .LVU47
 191              		.loc 1 207 13 is_stmt 0 view .LVU48
 192 0026 A680     		strh	r6, [r4, #4]	@ movhi
 208:FWLIB/src/stm32f4xx_i2c.c **** 
 209:FWLIB/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CCR Configuration ------------------------*/
 210:FWLIB/src/stm32f4xx_i2c.c ****   /* Disable the selected I2C peripheral to configure TRISE */
 211:FWLIB/src/stm32f4xx_i2c.c ****   I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 193              		.loc 1 211 3 is_stmt 1 view .LVU49
 194              		.loc 1 211 13 is_stmt 0 view .LVU50
 195 0028 2188     		ldrh	r1, [r4]
 196 002a 89B2     		uxth	r1, r1
 197 002c 21F00101 		bic	r1, r1, #1
 198 0030 89B2     		uxth	r1, r1
 199 0032 2180     		strh	r1, [r4]	@ movhi
 212:FWLIB/src/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 213:FWLIB/src/stm32f4xx_i2c.c ****   /* Clear F/S, DUTY and CCR[11:0] bits */
 214:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg = 0;
 200              		.loc 1 214 3 is_stmt 1 view .LVU51
 201              	.LVL24:
 215:FWLIB/src/stm32f4xx_i2c.c **** 
 216:FWLIB/src/stm32f4xx_i2c.c ****   /* Configure speed in standard mode */
 217:FWLIB/src/stm32f4xx_i2c.c ****   if (I2C_InitStruct->I2C_ClockSpeed <= 100000)
 202              		.loc 1 217 3 view .LVU52
 203              		.loc 1 217 21 is_stmt 0 view .LVU53
 204 0034 2B68     		ldr	r3, [r5]
 205              		.loc 1 217 6 view .LVU54
 206 0036 2549     		ldr	r1, .L21+4
 207 0038 8B42     		cmp	r3, r1
 208 003a 1ED8     		bhi	.L12
 218:FWLIB/src/stm32f4xx_i2c.c ****   {
 219:FWLIB/src/stm32f4xx_i2c.c ****     /* Standard mode speed calculate */
 220:FWLIB/src/stm32f4xx_i2c.c ****     result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed << 1));
 209              		.loc 1 220 5 is_stmt 1 view .LVU55
 210              		.loc 1 220 65 is_stmt 0 view .LVU56
 211 003c 5B00     		lsls	r3, r3, #1
 212              		.loc 1 220 31 view .LVU57
 213 003e B0FBF3F3 		udiv	r3, r0, r3
 214              		.loc 1 220 12 view .LVU58
 215 0042 9BB2     		uxth	r3, r3
 216              	.LVL25:
 221:FWLIB/src/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x4*/
 222:FWLIB/src/stm32f4xx_i2c.c ****     if (result < 0x04)
 217              		.loc 1 222 5 is_stmt 1 view .LVU59
 218              		.loc 1 222 8 is_stmt 0 view .LVU60
 219 0044 032B     		cmp	r3, #3
 220 0046 00D8     		bhi	.L13
 223:FWLIB/src/stm32f4xx_i2c.c ****     {
 224:FWLIB/src/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 225:FWLIB/src/stm32f4xx_i2c.c ****       result = 0x04;  
 221              		.loc 1 225 14 view .LVU61
 222 0048 0423     		movs	r3, #4
 223              	.LVL26:
 224              	.L13:
 226:FWLIB/src/stm32f4xx_i2c.c ****     }
ARM GAS  /tmp/ccqK3nom.s 			page 9


 227:FWLIB/src/stm32f4xx_i2c.c ****     /* Set speed value for standard mode */
 228:FWLIB/src/stm32f4xx_i2c.c ****     tmpreg |= result;	  
 225              		.loc 1 228 5 is_stmt 1 view .LVU62
 229:FWLIB/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for standard mode */
 230:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->TRISE = freqrange + 1; 
 226              		.loc 1 230 5 view .LVU63
 227              		.loc 1 230 29 is_stmt 0 view .LVU64
 228 004a 0137     		adds	r7, r7, #1
 229              	.LVL27:
 230              		.loc 1 230 17 view .LVU65
 231 004c 2784     		strh	r7, [r4, #32]	@ movhi
 232              	.LVL28:
 233              	.L14:
 231:FWLIB/src/stm32f4xx_i2c.c ****   }
 232:FWLIB/src/stm32f4xx_i2c.c ****   /* Configure speed in fast mode */
 233:FWLIB/src/stm32f4xx_i2c.c ****   /* To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency (I2C peripheral
 234:FWLIB/src/stm32f4xx_i2c.c ****      input clock) must be a multiple of 10 MHz */
 235:FWLIB/src/stm32f4xx_i2c.c ****   else /*(I2C_InitStruct->I2C_ClockSpeed <= 400000)*/
 236:FWLIB/src/stm32f4xx_i2c.c ****   {
 237:FWLIB/src/stm32f4xx_i2c.c ****     if (I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_2)
 238:FWLIB/src/stm32f4xx_i2c.c ****     {
 239:FWLIB/src/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 2 */
 240:FWLIB/src/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 3));
 241:FWLIB/src/stm32f4xx_i2c.c ****     }
 242:FWLIB/src/stm32f4xx_i2c.c ****     else /*I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_16_9*/
 243:FWLIB/src/stm32f4xx_i2c.c ****     {
 244:FWLIB/src/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 16/9 */
 245:FWLIB/src/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 25));
 246:FWLIB/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 247:FWLIB/src/stm32f4xx_i2c.c ****       result |= I2C_DutyCycle_16_9;
 248:FWLIB/src/stm32f4xx_i2c.c ****     }
 249:FWLIB/src/stm32f4xx_i2c.c **** 
 250:FWLIB/src/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x1*/
 251:FWLIB/src/stm32f4xx_i2c.c ****     if ((result & I2C_CCR_CCR) == 0)
 252:FWLIB/src/stm32f4xx_i2c.c ****     {
 253:FWLIB/src/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 254:FWLIB/src/stm32f4xx_i2c.c ****       result |= (uint16_t)0x0001;  
 255:FWLIB/src/stm32f4xx_i2c.c ****     }
 256:FWLIB/src/stm32f4xx_i2c.c ****     /* Set speed value and set F/S bit for fast mode */
 257:FWLIB/src/stm32f4xx_i2c.c ****     tmpreg |= (uint16_t)(result | I2C_CCR_FS);
 258:FWLIB/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for fast mode */
 259:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->TRISE = (uint16_t)(((freqrange * (uint16_t)300) / (uint16_t)1000) + (uint16_t)1);  
 260:FWLIB/src/stm32f4xx_i2c.c ****   }
 261:FWLIB/src/stm32f4xx_i2c.c **** 
 262:FWLIB/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CCR */
 263:FWLIB/src/stm32f4xx_i2c.c ****   I2Cx->CCR = tmpreg;
 234              		.loc 1 263 3 is_stmt 1 view .LVU66
 235              		.loc 1 263 13 is_stmt 0 view .LVU67
 236 004e A383     		strh	r3, [r4, #28]	@ movhi
 264:FWLIB/src/stm32f4xx_i2c.c ****   /* Enable the selected I2C peripheral */
 265:FWLIB/src/stm32f4xx_i2c.c ****   I2Cx->CR1 |= I2C_CR1_PE;
 237              		.loc 1 265 3 is_stmt 1 view .LVU68
 238              		.loc 1 265 13 is_stmt 0 view .LVU69
 239 0050 2388     		ldrh	r3, [r4]
 240              	.LVL29:
 241              		.loc 1 265 13 view .LVU70
 242 0052 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccqK3nom.s 			page 10


 243 0056 2380     		strh	r3, [r4]	@ movhi
 244              	.LVL30:
 266:FWLIB/src/stm32f4xx_i2c.c **** 
 267:FWLIB/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR1 Configuration ------------------------*/
 268:FWLIB/src/stm32f4xx_i2c.c ****   /* Get the I2Cx CR1 value */
 269:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR1;
 245              		.loc 1 269 3 is_stmt 1 view .LVU71
 246              		.loc 1 269 10 is_stmt 0 view .LVU72
 247 0058 2388     		ldrh	r3, [r4]
 248 005a 9BB2     		uxth	r3, r3
 249              	.LVL31:
 270:FWLIB/src/stm32f4xx_i2c.c ****   /* Clear ACK, SMBTYPE and  SMBUS bits */
 271:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg &= CR1_CLEAR_MASK;
 250              		.loc 1 271 3 is_stmt 1 view .LVU73
 251              		.loc 1 271 10 is_stmt 0 view .LVU74
 252 005c 23F48163 		bic	r3, r3, #1032
 253              	.LVL32:
 254              		.loc 1 271 10 view .LVU75
 255 0060 23F00203 		bic	r3, r3, #2
 256              	.LVL33:
 272:FWLIB/src/stm32f4xx_i2c.c ****   /* Configure I2Cx: mode and acknowledgement */
 273:FWLIB/src/stm32f4xx_i2c.c ****   /* Set SMBTYPE and SMBUS bits according to I2C_Mode value */
 274:FWLIB/src/stm32f4xx_i2c.c ****   /* Set ACK bit according to I2C_Ack value */
 275:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint32_t)I2C_InitStruct->I2C_Mode | I2C_InitStruct->I2C_Ack);
 257              		.loc 1 275 3 is_stmt 1 view .LVU76
 258              		.loc 1 275 48 is_stmt 0 view .LVU77
 259 0064 AA88     		ldrh	r2, [r5, #4]
 260              		.loc 1 275 75 view .LVU78
 261 0066 6989     		ldrh	r1, [r5, #10]
 262              		.loc 1 275 13 view .LVU79
 263 0068 0A43     		orrs	r2, r2, r1
 264              		.loc 1 275 10 view .LVU80
 265 006a 1343     		orrs	r3, r3, r2
 266              	.LVL34:
 276:FWLIB/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 277:FWLIB/src/stm32f4xx_i2c.c ****   I2Cx->CR1 = tmpreg;
 267              		.loc 1 277 3 is_stmt 1 view .LVU81
 268              		.loc 1 277 13 is_stmt 0 view .LVU82
 269 006c 2380     		strh	r3, [r4]	@ movhi
 278:FWLIB/src/stm32f4xx_i2c.c **** 
 279:FWLIB/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx OAR1 Configuration -----------------------*/
 280:FWLIB/src/stm32f4xx_i2c.c ****   /* Set I2Cx Own Address1 and acknowledged address */
 281:FWLIB/src/stm32f4xx_i2c.c ****   I2Cx->OAR1 = (I2C_InitStruct->I2C_AcknowledgedAddress | I2C_InitStruct->I2C_OwnAddress1);
 270              		.loc 1 281 3 is_stmt 1 view .LVU83
 271              		.loc 1 281 31 is_stmt 0 view .LVU84
 272 006e AB89     		ldrh	r3, [r5, #12]
 273              	.LVL35:
 274              		.loc 1 281 73 view .LVU85
 275 0070 2A89     		ldrh	r2, [r5, #8]
 276              		.loc 1 281 14 view .LVU86
 277 0072 1343     		orrs	r3, r3, r2
 278 0074 2381     		strh	r3, [r4, #8]	@ movhi
 279              	.LVL36:
 282:FWLIB/src/stm32f4xx_i2c.c **** }
 280              		.loc 1 282 1 view .LVU87
 281 0076 05B0     		add	sp, sp, #20
 282              	.LCFI3:
ARM GAS  /tmp/ccqK3nom.s 			page 11


 283              		.cfi_remember_state
 284              		.cfi_def_cfa_offset 20
 285              		@ sp needed
 286 0078 F0BD     		pop	{r4, r5, r6, r7, pc}
 287              	.LVL37:
 288              	.L12:
 289              	.LCFI4:
 290              		.cfi_restore_state
 237:FWLIB/src/stm32f4xx_i2c.c ****     {
 291              		.loc 1 237 5 is_stmt 1 view .LVU88
 237:FWLIB/src/stm32f4xx_i2c.c ****     {
 292              		.loc 1 237 23 is_stmt 0 view .LVU89
 293 007a EE88     		ldrh	r6, [r5, #6]
 237:FWLIB/src/stm32f4xx_i2c.c ****     {
 294              		.loc 1 237 8 view .LVU90
 295 007c 4BF6FF71 		movw	r1, #49151
 296 0080 8E42     		cmp	r6, r1
 297 0082 1BD0     		beq	.L20
 245:FWLIB/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 298              		.loc 1 245 7 is_stmt 1 view .LVU91
 245:FWLIB/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 299              		.loc 1 245 67 is_stmt 0 view .LVU92
 300 0084 03EB8303 		add	r3, r3, r3, lsl #2
 301 0088 03EB8303 		add	r3, r3, r3, lsl #2
 245:FWLIB/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 302              		.loc 1 245 33 view .LVU93
 303 008c B0FBF3F3 		udiv	r3, r0, r3
 245:FWLIB/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 304              		.loc 1 245 14 view .LVU94
 305 0090 9BB2     		uxth	r3, r3
 306              	.LVL38:
 247:FWLIB/src/stm32f4xx_i2c.c ****     }
 307              		.loc 1 247 7 is_stmt 1 view .LVU95
 247:FWLIB/src/stm32f4xx_i2c.c ****     }
 308              		.loc 1 247 14 is_stmt 0 view .LVU96
 309 0092 43F48043 		orr	r3, r3, #16384
 310              	.LVL39:
 311              	.L16:
 251:FWLIB/src/stm32f4xx_i2c.c ****     {
 312              		.loc 1 251 5 is_stmt 1 view .LVU97
 251:FWLIB/src/stm32f4xx_i2c.c ****     {
 313              		.loc 1 251 8 is_stmt 0 view .LVU98
 314 0096 C3F30B01 		ubfx	r1, r3, #0, #12
 315 009a 09B9     		cbnz	r1, .L17
 254:FWLIB/src/stm32f4xx_i2c.c ****     }
 316              		.loc 1 254 7 is_stmt 1 view .LVU99
 254:FWLIB/src/stm32f4xx_i2c.c ****     }
 317              		.loc 1 254 14 is_stmt 0 view .LVU100
 318 009c 43F00103 		orr	r3, r3, #1
 319              	.LVL40:
 320              	.L17:
 257:FWLIB/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for fast mode */
 321              		.loc 1 257 5 is_stmt 1 view .LVU101
 257:FWLIB/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for fast mode */
 322              		.loc 1 257 12 is_stmt 0 view .LVU102
 323 00a0 43F40043 		orr	r3, r3, #32768
 324              	.LVL41:
ARM GAS  /tmp/ccqK3nom.s 			page 12


 259:FWLIB/src/stm32f4xx_i2c.c ****   }
 325              		.loc 1 259 5 is_stmt 1 view .LVU103
 259:FWLIB/src/stm32f4xx_i2c.c ****   }
 326              		.loc 1 259 42 is_stmt 0 view .LVU104
 327 00a4 4FF49671 		mov	r1, #300
 328 00a8 02FB01F2 		mul	r2, r2, r1
 259:FWLIB/src/stm32f4xx_i2c.c ****   }
 329              		.loc 1 259 59 view .LVU105
 330 00ac 0849     		ldr	r1, .L21+8
 331 00ae 81FB0212 		smull	r1, r2, r1, r2
 332 00b2 9211     		asrs	r2, r2, #6
 259:FWLIB/src/stm32f4xx_i2c.c ****   }
 333              		.loc 1 259 19 view .LVU106
 334 00b4 0132     		adds	r2, r2, #1
 335 00b6 92B2     		uxth	r2, r2
 259:FWLIB/src/stm32f4xx_i2c.c ****   }
 336              		.loc 1 259 17 view .LVU107
 337 00b8 2284     		strh	r2, [r4, #32]	@ movhi
 338 00ba C8E7     		b	.L14
 339              	.LVL42:
 340              	.L20:
 240:FWLIB/src/stm32f4xx_i2c.c ****     }
 341              		.loc 1 240 7 is_stmt 1 view .LVU108
 240:FWLIB/src/stm32f4xx_i2c.c ****     }
 342              		.loc 1 240 67 is_stmt 0 view .LVU109
 343 00bc 03EB4303 		add	r3, r3, r3, lsl #1
 240:FWLIB/src/stm32f4xx_i2c.c ****     }
 344              		.loc 1 240 33 view .LVU110
 345 00c0 B0FBF3F3 		udiv	r3, r0, r3
 240:FWLIB/src/stm32f4xx_i2c.c ****     }
 346              		.loc 1 240 14 view .LVU111
 347 00c4 9BB2     		uxth	r3, r3
 348              	.LVL43:
 240:FWLIB/src/stm32f4xx_i2c.c ****     }
 349              		.loc 1 240 14 view .LVU112
 350 00c6 E6E7     		b	.L16
 351              	.L22:
 352              		.align	2
 353              	.L21:
 354 00c8 83DE1B43 		.word	1125899907
 355 00cc A0860100 		.word	100000
 356 00d0 D34D6210 		.word	274877907
 357              		.cfi_endproc
 358              	.LFE124:
 360              		.section	.text.I2C_StructInit,"ax",%progbits
 361              		.align	1
 362              		.global	I2C_StructInit
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu fpv4-sp-d16
 368              	I2C_StructInit:
 369              	.LVL44:
 370              	.LFB125:
 283:FWLIB/src/stm32f4xx_i2c.c **** 
 284:FWLIB/src/stm32f4xx_i2c.c **** /**
 285:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Fills each I2C_InitStruct member with its default value.
ARM GAS  /tmp/ccqK3nom.s 			page 13


 286:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to an I2C_InitTypeDef structure which will be initialized.
 287:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 288:FWLIB/src/stm32f4xx_i2c.c ****   */
 289:FWLIB/src/stm32f4xx_i2c.c **** void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct)
 290:FWLIB/src/stm32f4xx_i2c.c **** {
 371              		.loc 1 290 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 291:FWLIB/src/stm32f4xx_i2c.c **** /*---------------- Reset I2C init structure parameters values ----------------*/
 292:FWLIB/src/stm32f4xx_i2c.c ****   /* initialize the I2C_ClockSpeed member */
 293:FWLIB/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_ClockSpeed = 5000;
 376              		.loc 1 293 3 view .LVU114
 377              		.loc 1 293 34 is_stmt 0 view .LVU115
 378 0000 41F28833 		movw	r3, #5000
 379 0004 0360     		str	r3, [r0]
 294:FWLIB/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Mode member */
 295:FWLIB/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Mode = I2C_Mode_I2C;
 380              		.loc 1 295 3 is_stmt 1 view .LVU116
 381              		.loc 1 295 28 is_stmt 0 view .LVU117
 382 0006 0023     		movs	r3, #0
 383 0008 8380     		strh	r3, [r0, #4]	@ movhi
 296:FWLIB/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_DutyCycle member */
 297:FWLIB/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_DutyCycle = I2C_DutyCycle_2;
 384              		.loc 1 297 3 is_stmt 1 view .LVU118
 385              		.loc 1 297 33 is_stmt 0 view .LVU119
 386 000a 4BF6FF72 		movw	r2, #49151
 387 000e C280     		strh	r2, [r0, #6]	@ movhi
 298:FWLIB/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_OwnAddress1 member */
 299:FWLIB/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_OwnAddress1 = 0;
 388              		.loc 1 299 3 is_stmt 1 view .LVU120
 389              		.loc 1 299 35 is_stmt 0 view .LVU121
 390 0010 0381     		strh	r3, [r0, #8]	@ movhi
 300:FWLIB/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Ack member */
 301:FWLIB/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Ack = I2C_Ack_Disable;
 391              		.loc 1 301 3 is_stmt 1 view .LVU122
 392              		.loc 1 301 27 is_stmt 0 view .LVU123
 393 0012 4381     		strh	r3, [r0, #10]	@ movhi
 302:FWLIB/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_AcknowledgedAddress member */
 303:FWLIB/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 394              		.loc 1 303 3 is_stmt 1 view .LVU124
 395              		.loc 1 303 43 is_stmt 0 view .LVU125
 396 0014 4FF48043 		mov	r3, #16384
 397 0018 8381     		strh	r3, [r0, #12]	@ movhi
 304:FWLIB/src/stm32f4xx_i2c.c **** }
 398              		.loc 1 304 1 view .LVU126
 399 001a 7047     		bx	lr
 400              		.cfi_endproc
 401              	.LFE125:
 403              		.section	.text.I2C_Cmd,"ax",%progbits
 404              		.align	1
 405              		.global	I2C_Cmd
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccqK3nom.s 			page 14


 411              	I2C_Cmd:
 412              	.LVL45:
 413              	.LFB126:
 305:FWLIB/src/stm32f4xx_i2c.c **** 
 306:FWLIB/src/stm32f4xx_i2c.c **** /**
 307:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C peripheral.
 308:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 309:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx peripheral. 
 310:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 311:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 312:FWLIB/src/stm32f4xx_i2c.c ****   */
 313:FWLIB/src/stm32f4xx_i2c.c **** void I2C_Cmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 314:FWLIB/src/stm32f4xx_i2c.c **** {
 414              		.loc 1 314 1 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 315:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 316:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 419              		.loc 1 316 3 view .LVU128
 317:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 420              		.loc 1 317 3 view .LVU129
 318:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 421              		.loc 1 318 3 view .LVU130
 422              		.loc 1 318 6 is_stmt 0 view .LVU131
 423 0000 21B1     		cbz	r1, .L25
 319:FWLIB/src/stm32f4xx_i2c.c ****   {
 320:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C peripheral */
 321:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PE;
 424              		.loc 1 321 5 is_stmt 1 view .LVU132
 425              		.loc 1 321 15 is_stmt 0 view .LVU133
 426 0002 0388     		ldrh	r3, [r0]
 427 0004 43F00103 		orr	r3, r3, #1
 428 0008 0380     		strh	r3, [r0]	@ movhi
 429 000a 7047     		bx	lr
 430              	.L25:
 322:FWLIB/src/stm32f4xx_i2c.c ****   }
 323:FWLIB/src/stm32f4xx_i2c.c ****   else
 324:FWLIB/src/stm32f4xx_i2c.c ****   {
 325:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C peripheral */
 326:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 431              		.loc 1 326 5 is_stmt 1 view .LVU134
 432              		.loc 1 326 15 is_stmt 0 view .LVU135
 433 000c 0388     		ldrh	r3, [r0]
 434 000e 9BB2     		uxth	r3, r3
 435 0010 23F00103 		bic	r3, r3, #1
 436 0014 9BB2     		uxth	r3, r3
 437 0016 0380     		strh	r3, [r0]	@ movhi
 327:FWLIB/src/stm32f4xx_i2c.c ****   }
 328:FWLIB/src/stm32f4xx_i2c.c **** }
 438              		.loc 1 328 1 view .LVU136
 439 0018 7047     		bx	lr
 440              		.cfi_endproc
 441              	.LFE126:
 443              		.section	.text.I2C_AnalogFilterCmd,"ax",%progbits
 444              		.align	1
ARM GAS  /tmp/ccqK3nom.s 			page 15


 445              		.global	I2C_AnalogFilterCmd
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu fpv4-sp-d16
 451              	I2C_AnalogFilterCmd:
 452              	.LVL46:
 453              	.LFB127:
 329:FWLIB/src/stm32f4xx_i2c.c **** 
 330:FWLIB/src/stm32f4xx_i2c.c **** /**
 331:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the Analog filter of I2C peripheral.
 332:FWLIB/src/stm32f4xx_i2c.c ****   * 
 333:FWLIB/src/stm32f4xx_i2c.c ****   * @note   This function can be used only for STM32F42xxx/STM3243xxx, STM32F401xx, STM32F410xx and
 334:FWLIB/src/stm32f4xx_i2c.c ****   *        
 335:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 336:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the Analog filter. 
 337:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 338:FWLIB/src/stm32f4xx_i2c.c ****   * @note   This function should be called before initializing and enabling
 339:FWLIB/src/stm32f4xx_i2c.c ****             the I2C Peripheral.
 340:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 341:FWLIB/src/stm32f4xx_i2c.c ****   */
 342:FWLIB/src/stm32f4xx_i2c.c **** void I2C_AnalogFilterCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 343:FWLIB/src/stm32f4xx_i2c.c **** {
 454              		.loc 1 343 1 is_stmt 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 344:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 345:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 459              		.loc 1 345 3 view .LVU138
 346:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 460              		.loc 1 346 3 view .LVU139
 347:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 461              		.loc 1 347 3 view .LVU140
 462              		.loc 1 347 6 is_stmt 0 view .LVU141
 463 0000 31B1     		cbz	r1, .L28
 348:FWLIB/src/stm32f4xx_i2c.c ****   {
 349:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable the analog filter */
 350:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->FLTR &= (uint16_t)~((uint16_t)I2C_FLTR_ANOFF);    
 464              		.loc 1 350 5 is_stmt 1 view .LVU142
 465              		.loc 1 350 16 is_stmt 0 view .LVU143
 466 0002 838C     		ldrh	r3, [r0, #36]
 467 0004 9BB2     		uxth	r3, r3
 468 0006 23F01003 		bic	r3, r3, #16
 469 000a 9BB2     		uxth	r3, r3
 470 000c 8384     		strh	r3, [r0, #36]	@ movhi
 471 000e 7047     		bx	lr
 472              	.L28:
 351:FWLIB/src/stm32f4xx_i2c.c ****   }
 352:FWLIB/src/stm32f4xx_i2c.c ****   else
 353:FWLIB/src/stm32f4xx_i2c.c ****   {
 354:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable the analog filter */
 355:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->FLTR |= I2C_FLTR_ANOFF;
 473              		.loc 1 355 5 is_stmt 1 view .LVU144
 474              		.loc 1 355 16 is_stmt 0 view .LVU145
 475 0010 838C     		ldrh	r3, [r0, #36]
ARM GAS  /tmp/ccqK3nom.s 			page 16


 476 0012 43F01003 		orr	r3, r3, #16
 477 0016 8384     		strh	r3, [r0, #36]	@ movhi
 356:FWLIB/src/stm32f4xx_i2c.c ****   }
 357:FWLIB/src/stm32f4xx_i2c.c **** }
 478              		.loc 1 357 1 view .LVU146
 479 0018 7047     		bx	lr
 480              		.cfi_endproc
 481              	.LFE127:
 483              		.section	.text.I2C_DigitalFilterConfig,"ax",%progbits
 484              		.align	1
 485              		.global	I2C_DigitalFilterConfig
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu fpv4-sp-d16
 491              	I2C_DigitalFilterConfig:
 492              	.LVL47:
 493              	.LFB128:
 358:FWLIB/src/stm32f4xx_i2c.c **** 
 359:FWLIB/src/stm32f4xx_i2c.c **** /**
 360:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Configures the Digital noise filter of I2C peripheral.
 361:FWLIB/src/stm32f4xx_i2c.c ****   * 
 362:FWLIB/src/stm32f4xx_i2c.c ****   * @note   This function can be used only for STM32F42xxx/STM3243xxx, STM32F401xx, STM32F410xx and
 363:FWLIB/src/stm32f4xx_i2c.c ****   *       
 364:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 365:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_DigitalFilter: Coefficient of digital noise filter. 
 366:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be a number between 0x00 and 0x0F.
 367:FWLIB/src/stm32f4xx_i2c.c ****   * @note   This function should be called before initializing and enabling
 368:FWLIB/src/stm32f4xx_i2c.c ****             the I2C Peripheral.
 369:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 370:FWLIB/src/stm32f4xx_i2c.c ****   */
 371:FWLIB/src/stm32f4xx_i2c.c **** void I2C_DigitalFilterConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DigitalFilter)
 372:FWLIB/src/stm32f4xx_i2c.c **** {
 494              		.loc 1 372 1 is_stmt 1 view -0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 373:FWLIB/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 499              		.loc 1 373 3 view .LVU148
 374:FWLIB/src/stm32f4xx_i2c.c ****   
 375:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 376:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 500              		.loc 1 376 3 view .LVU149
 377:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DIGITAL_FILTER(I2C_DigitalFilter));
 501              		.loc 1 377 3 view .LVU150
 378:FWLIB/src/stm32f4xx_i2c.c ****   
 379:FWLIB/src/stm32f4xx_i2c.c ****   /* Get the old register value */
 380:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->FLTR;
 502              		.loc 1 380 3 view .LVU151
 503              		.loc 1 380 10 is_stmt 0 view .LVU152
 504 0000 838C     		ldrh	r3, [r0, #36]
 505 0002 9BB2     		uxth	r3, r3
 506              	.LVL48:
 381:FWLIB/src/stm32f4xx_i2c.c ****   
 382:FWLIB/src/stm32f4xx_i2c.c ****   /* Reset I2Cx DNF bit [3:0] */
 383:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_FLTR_DNF);
ARM GAS  /tmp/ccqK3nom.s 			page 17


 507              		.loc 1 383 3 is_stmt 1 view .LVU153
 508              		.loc 1 383 10 is_stmt 0 view .LVU154
 509 0004 23F00F03 		bic	r3, r3, #15
 510              	.LVL49:
 384:FWLIB/src/stm32f4xx_i2c.c ****   
 385:FWLIB/src/stm32f4xx_i2c.c ****   /* Set I2Cx DNF coefficient */
 386:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint16_t)I2C_DigitalFilter & I2C_FLTR_DNF);
 511              		.loc 1 386 3 is_stmt 1 view .LVU155
 512              		.loc 1 386 13 is_stmt 0 view .LVU156
 513 0008 01F00F01 		and	r1, r1, #15
 514              	.LVL50:
 515              		.loc 1 386 10 view .LVU157
 516 000c 0B43     		orrs	r3, r3, r1
 517              	.LVL51:
 387:FWLIB/src/stm32f4xx_i2c.c ****   
 388:FWLIB/src/stm32f4xx_i2c.c ****   /* Store the new register value */
 389:FWLIB/src/stm32f4xx_i2c.c ****   I2Cx->FLTR = tmpreg;
 518              		.loc 1 389 3 is_stmt 1 view .LVU158
 519              		.loc 1 389 14 is_stmt 0 view .LVU159
 520 000e 8384     		strh	r3, [r0, #36]	@ movhi
 390:FWLIB/src/stm32f4xx_i2c.c **** }
 521              		.loc 1 390 1 view .LVU160
 522 0010 7047     		bx	lr
 523              		.cfi_endproc
 524              	.LFE128:
 526              		.section	.text.I2C_GenerateSTART,"ax",%progbits
 527              		.align	1
 528              		.global	I2C_GenerateSTART
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 532              		.fpu fpv4-sp-d16
 534              	I2C_GenerateSTART:
 535              	.LVL52:
 536              	.LFB129:
 391:FWLIB/src/stm32f4xx_i2c.c **** 
 392:FWLIB/src/stm32f4xx_i2c.c **** /**
 393:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication START condition.
 394:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 395:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C START condition generation.
 396:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 397:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None.
 398:FWLIB/src/stm32f4xx_i2c.c ****   */
 399:FWLIB/src/stm32f4xx_i2c.c **** void I2C_GenerateSTART(I2C_TypeDef* I2Cx, FunctionalState NewState)
 400:FWLIB/src/stm32f4xx_i2c.c **** {
 537              		.loc 1 400 1 is_stmt 1 view -0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 401:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 402:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 542              		.loc 1 402 3 view .LVU162
 403:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 543              		.loc 1 403 3 view .LVU163
 404:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 544              		.loc 1 404 3 view .LVU164
ARM GAS  /tmp/ccqK3nom.s 			page 18


 545              		.loc 1 404 6 is_stmt 0 view .LVU165
 546 0000 21B1     		cbz	r1, .L32
 405:FWLIB/src/stm32f4xx_i2c.c ****   {
 406:FWLIB/src/stm32f4xx_i2c.c ****     /* Generate a START condition */
 407:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_START;
 547              		.loc 1 407 5 is_stmt 1 view .LVU166
 548              		.loc 1 407 15 is_stmt 0 view .LVU167
 549 0002 0388     		ldrh	r3, [r0]
 550 0004 43F48073 		orr	r3, r3, #256
 551 0008 0380     		strh	r3, [r0]	@ movhi
 552 000a 7047     		bx	lr
 553              	.L32:
 408:FWLIB/src/stm32f4xx_i2c.c ****   }
 409:FWLIB/src/stm32f4xx_i2c.c ****   else
 410:FWLIB/src/stm32f4xx_i2c.c ****   {
 411:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable the START condition generation */
 412:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_START);
 554              		.loc 1 412 5 is_stmt 1 view .LVU168
 555              		.loc 1 412 15 is_stmt 0 view .LVU169
 556 000c 0388     		ldrh	r3, [r0]
 557 000e 9BB2     		uxth	r3, r3
 558 0010 23F48073 		bic	r3, r3, #256
 559 0014 9BB2     		uxth	r3, r3
 560 0016 0380     		strh	r3, [r0]	@ movhi
 413:FWLIB/src/stm32f4xx_i2c.c ****   }
 414:FWLIB/src/stm32f4xx_i2c.c **** }
 561              		.loc 1 414 1 view .LVU170
 562 0018 7047     		bx	lr
 563              		.cfi_endproc
 564              	.LFE129:
 566              		.section	.text.I2C_GenerateSTOP,"ax",%progbits
 567              		.align	1
 568              		.global	I2C_GenerateSTOP
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv4-sp-d16
 574              	I2C_GenerateSTOP:
 575              	.LVL53:
 576              	.LFB130:
 415:FWLIB/src/stm32f4xx_i2c.c **** 
 416:FWLIB/src/stm32f4xx_i2c.c **** /**
 417:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication STOP condition.
 418:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 419:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C STOP condition generation.
 420:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 421:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None.
 422:FWLIB/src/stm32f4xx_i2c.c ****   */
 423:FWLIB/src/stm32f4xx_i2c.c **** void I2C_GenerateSTOP(I2C_TypeDef* I2Cx, FunctionalState NewState)
 424:FWLIB/src/stm32f4xx_i2c.c **** {
 577              		.loc 1 424 1 is_stmt 1 view -0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 425:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 426:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
ARM GAS  /tmp/ccqK3nom.s 			page 19


 582              		.loc 1 426 3 view .LVU172
 427:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 583              		.loc 1 427 3 view .LVU173
 428:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 584              		.loc 1 428 3 view .LVU174
 585              		.loc 1 428 6 is_stmt 0 view .LVU175
 586 0000 21B1     		cbz	r1, .L35
 429:FWLIB/src/stm32f4xx_i2c.c ****   {
 430:FWLIB/src/stm32f4xx_i2c.c ****     /* Generate a STOP condition */
 431:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_STOP;
 587              		.loc 1 431 5 is_stmt 1 view .LVU176
 588              		.loc 1 431 15 is_stmt 0 view .LVU177
 589 0002 0388     		ldrh	r3, [r0]
 590 0004 43F40073 		orr	r3, r3, #512
 591 0008 0380     		strh	r3, [r0]	@ movhi
 592 000a 7047     		bx	lr
 593              	.L35:
 432:FWLIB/src/stm32f4xx_i2c.c ****   }
 433:FWLIB/src/stm32f4xx_i2c.c ****   else
 434:FWLIB/src/stm32f4xx_i2c.c ****   {
 435:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable the STOP condition generation */
 436:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_STOP);
 594              		.loc 1 436 5 is_stmt 1 view .LVU178
 595              		.loc 1 436 15 is_stmt 0 view .LVU179
 596 000c 0388     		ldrh	r3, [r0]
 597 000e 9BB2     		uxth	r3, r3
 598 0010 23F40073 		bic	r3, r3, #512
 599 0014 9BB2     		uxth	r3, r3
 600 0016 0380     		strh	r3, [r0]	@ movhi
 437:FWLIB/src/stm32f4xx_i2c.c ****   }
 438:FWLIB/src/stm32f4xx_i2c.c **** }
 601              		.loc 1 438 1 view .LVU180
 602 0018 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE130:
 606              		.section	.text.I2C_Send7bitAddress,"ax",%progbits
 607              		.align	1
 608              		.global	I2C_Send7bitAddress
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv4-sp-d16
 614              	I2C_Send7bitAddress:
 615              	.LVL54:
 616              	.LFB131:
 439:FWLIB/src/stm32f4xx_i2c.c **** 
 440:FWLIB/src/stm32f4xx_i2c.c **** /**
 441:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Transmits the address byte to select the slave device.
 442:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 443:FWLIB/src/stm32f4xx_i2c.c ****   * @param  Address: specifies the slave address which will be transmitted
 444:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_Direction: specifies whether the I2C device will be a Transmitter
 445:FWLIB/src/stm32f4xx_i2c.c ****   *         or a Receiver. 
 446:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values
 447:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Transmitter: Transmitter mode
 448:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Receiver: Receiver mode
 449:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None.
 450:FWLIB/src/stm32f4xx_i2c.c ****   */
ARM GAS  /tmp/ccqK3nom.s 			page 20


 451:FWLIB/src/stm32f4xx_i2c.c **** void I2C_Send7bitAddress(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction)
 452:FWLIB/src/stm32f4xx_i2c.c **** {
 617              		.loc 1 452 1 is_stmt 1 view -0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 453:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 454:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 622              		.loc 1 454 3 view .LVU182
 455:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DIRECTION(I2C_Direction));
 623              		.loc 1 455 3 view .LVU183
 456:FWLIB/src/stm32f4xx_i2c.c ****   /* Test on the direction to set/reset the read/write bit */
 457:FWLIB/src/stm32f4xx_i2c.c ****   if (I2C_Direction != I2C_Direction_Transmitter)
 624              		.loc 1 457 3 view .LVU184
 625              		.loc 1 457 6 is_stmt 0 view .LVU185
 626 0000 22B1     		cbz	r2, .L38
 458:FWLIB/src/stm32f4xx_i2c.c ****   {
 459:FWLIB/src/stm32f4xx_i2c.c ****     /* Set the address bit0 for read */
 460:FWLIB/src/stm32f4xx_i2c.c ****     Address |= I2C_OAR1_ADD0;
 627              		.loc 1 460 5 is_stmt 1 view .LVU186
 628              		.loc 1 460 13 is_stmt 0 view .LVU187
 629 0002 41F00101 		orr	r1, r1, #1
 630              	.LVL55:
 631              	.L39:
 461:FWLIB/src/stm32f4xx_i2c.c ****   }
 462:FWLIB/src/stm32f4xx_i2c.c ****   else
 463:FWLIB/src/stm32f4xx_i2c.c ****   {
 464:FWLIB/src/stm32f4xx_i2c.c ****     /* Reset the address bit0 for write */
 465:FWLIB/src/stm32f4xx_i2c.c ****     Address &= (uint8_t)~((uint8_t)I2C_OAR1_ADD0);
 466:FWLIB/src/stm32f4xx_i2c.c ****   }
 467:FWLIB/src/stm32f4xx_i2c.c ****   /* Send the address */
 468:FWLIB/src/stm32f4xx_i2c.c ****   I2Cx->DR = Address;
 632              		.loc 1 468 3 is_stmt 1 view .LVU188
 633              		.loc 1 468 12 is_stmt 0 view .LVU189
 634 0006 89B2     		uxth	r1, r1
 635              	.LVL56:
 636              		.loc 1 468 12 view .LVU190
 637 0008 0182     		strh	r1, [r0, #16]	@ movhi
 469:FWLIB/src/stm32f4xx_i2c.c **** }
 638              		.loc 1 469 1 view .LVU191
 639 000a 7047     		bx	lr
 640              	.LVL57:
 641              	.L38:
 465:FWLIB/src/stm32f4xx_i2c.c ****   }
 642              		.loc 1 465 5 is_stmt 1 view .LVU192
 465:FWLIB/src/stm32f4xx_i2c.c ****   }
 643              		.loc 1 465 13 is_stmt 0 view .LVU193
 644 000c 01F0FE01 		and	r1, r1, #254
 645              	.LVL58:
 465:FWLIB/src/stm32f4xx_i2c.c ****   }
 646              		.loc 1 465 13 view .LVU194
 647 0010 F9E7     		b	.L39
 648              		.cfi_endproc
 649              	.LFE131:
 651              		.section	.text.I2C_AcknowledgeConfig,"ax",%progbits
 652              		.align	1
ARM GAS  /tmp/ccqK3nom.s 			page 21


 653              		.global	I2C_AcknowledgeConfig
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 657              		.fpu fpv4-sp-d16
 659              	I2C_AcknowledgeConfig:
 660              	.LVL59:
 661              	.LFB132:
 470:FWLIB/src/stm32f4xx_i2c.c **** 
 471:FWLIB/src/stm32f4xx_i2c.c **** /**
 472:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C acknowledge feature.
 473:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 474:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C Acknowledgement.
 475:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 476:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None.
 477:FWLIB/src/stm32f4xx_i2c.c ****   */
 478:FWLIB/src/stm32f4xx_i2c.c **** void I2C_AcknowledgeConfig(I2C_TypeDef* I2Cx, FunctionalState NewState)
 479:FWLIB/src/stm32f4xx_i2c.c **** {
 662              		.loc 1 479 1 is_stmt 1 view -0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 480:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 481:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 667              		.loc 1 481 3 view .LVU196
 482:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 668              		.loc 1 482 3 view .LVU197
 483:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 669              		.loc 1 483 3 view .LVU198
 670              		.loc 1 483 6 is_stmt 0 view .LVU199
 671 0000 21B1     		cbz	r1, .L41
 484:FWLIB/src/stm32f4xx_i2c.c ****   {
 485:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable the acknowledgement */
 486:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ACK;
 672              		.loc 1 486 5 is_stmt 1 view .LVU200
 673              		.loc 1 486 15 is_stmt 0 view .LVU201
 674 0002 0388     		ldrh	r3, [r0]
 675 0004 43F48063 		orr	r3, r3, #1024
 676 0008 0380     		strh	r3, [r0]	@ movhi
 677 000a 7047     		bx	lr
 678              	.L41:
 487:FWLIB/src/stm32f4xx_i2c.c ****   }
 488:FWLIB/src/stm32f4xx_i2c.c ****   else
 489:FWLIB/src/stm32f4xx_i2c.c ****   {
 490:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable the acknowledgement */
 491:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ACK);
 679              		.loc 1 491 5 is_stmt 1 view .LVU202
 680              		.loc 1 491 15 is_stmt 0 view .LVU203
 681 000c 0388     		ldrh	r3, [r0]
 682 000e 9BB2     		uxth	r3, r3
 683 0010 23F48063 		bic	r3, r3, #1024
 684 0014 9BB2     		uxth	r3, r3
 685 0016 0380     		strh	r3, [r0]	@ movhi
 492:FWLIB/src/stm32f4xx_i2c.c ****   }
 493:FWLIB/src/stm32f4xx_i2c.c **** }
 686              		.loc 1 493 1 view .LVU204
ARM GAS  /tmp/ccqK3nom.s 			page 22


 687 0018 7047     		bx	lr
 688              		.cfi_endproc
 689              	.LFE132:
 691              		.section	.text.I2C_OwnAddress2Config,"ax",%progbits
 692              		.align	1
 693              		.global	I2C_OwnAddress2Config
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 697              		.fpu fpv4-sp-d16
 699              	I2C_OwnAddress2Config:
 700              	.LVL60:
 701              	.LFB133:
 494:FWLIB/src/stm32f4xx_i2c.c **** 
 495:FWLIB/src/stm32f4xx_i2c.c **** /**
 496:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Configures the specified I2C own address2.
 497:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 498:FWLIB/src/stm32f4xx_i2c.c ****   * @param  Address: specifies the 7bit I2C own address2.
 499:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None.
 500:FWLIB/src/stm32f4xx_i2c.c ****   */
 501:FWLIB/src/stm32f4xx_i2c.c **** void I2C_OwnAddress2Config(I2C_TypeDef* I2Cx, uint8_t Address)
 502:FWLIB/src/stm32f4xx_i2c.c **** {
 702              		.loc 1 502 1 is_stmt 1 view -0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 503:FWLIB/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 707              		.loc 1 503 3 view .LVU206
 504:FWLIB/src/stm32f4xx_i2c.c **** 
 505:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 506:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 708              		.loc 1 506 3 view .LVU207
 507:FWLIB/src/stm32f4xx_i2c.c **** 
 508:FWLIB/src/stm32f4xx_i2c.c ****   /* Get the old register value */
 509:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->OAR2;
 709              		.loc 1 509 3 view .LVU208
 710              		.loc 1 509 10 is_stmt 0 view .LVU209
 711 0000 8389     		ldrh	r3, [r0, #12]
 712 0002 9BB2     		uxth	r3, r3
 713              	.LVL61:
 510:FWLIB/src/stm32f4xx_i2c.c **** 
 511:FWLIB/src/stm32f4xx_i2c.c ****   /* Reset I2Cx Own address2 bit [7:1] */
 512:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_OAR2_ADD2);
 714              		.loc 1 512 3 is_stmt 1 view .LVU210
 715              		.loc 1 512 10 is_stmt 0 view .LVU211
 716 0004 23F0FE03 		bic	r3, r3, #254
 717              	.LVL62:
 513:FWLIB/src/stm32f4xx_i2c.c **** 
 514:FWLIB/src/stm32f4xx_i2c.c ****   /* Set I2Cx Own address2 */
 515:FWLIB/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint16_t)Address & (uint16_t)0x00FE);
 718              		.loc 1 515 3 is_stmt 1 view .LVU212
 719              		.loc 1 515 13 is_stmt 0 view .LVU213
 720 0008 01F0FE01 		and	r1, r1, #254
 721              	.LVL63:
 722              		.loc 1 515 10 view .LVU214
 723 000c 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/ccqK3nom.s 			page 23


 724              	.LVL64:
 516:FWLIB/src/stm32f4xx_i2c.c **** 
 517:FWLIB/src/stm32f4xx_i2c.c ****   /* Store the new register value */
 518:FWLIB/src/stm32f4xx_i2c.c ****   I2Cx->OAR2 = tmpreg;
 725              		.loc 1 518 3 is_stmt 1 view .LVU215
 726              		.loc 1 518 14 is_stmt 0 view .LVU216
 727 000e 8381     		strh	r3, [r0, #12]	@ movhi
 519:FWLIB/src/stm32f4xx_i2c.c **** }
 728              		.loc 1 519 1 view .LVU217
 729 0010 7047     		bx	lr
 730              		.cfi_endproc
 731              	.LFE133:
 733              		.section	.text.I2C_DualAddressCmd,"ax",%progbits
 734              		.align	1
 735              		.global	I2C_DualAddressCmd
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu fpv4-sp-d16
 741              	I2C_DualAddressCmd:
 742              	.LVL65:
 743              	.LFB134:
 520:FWLIB/src/stm32f4xx_i2c.c **** 
 521:FWLIB/src/stm32f4xx_i2c.c **** /**
 522:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C dual addressing mode.
 523:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 524:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C dual addressing mode.
 525:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 526:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 527:FWLIB/src/stm32f4xx_i2c.c ****   */
 528:FWLIB/src/stm32f4xx_i2c.c **** void I2C_DualAddressCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 529:FWLIB/src/stm32f4xx_i2c.c **** {
 744              		.loc 1 529 1 is_stmt 1 view -0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 530:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 531:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 749              		.loc 1 531 3 view .LVU219
 532:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 750              		.loc 1 532 3 view .LVU220
 533:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 751              		.loc 1 533 3 view .LVU221
 752              		.loc 1 533 6 is_stmt 0 view .LVU222
 753 0000 21B1     		cbz	r1, .L45
 534:FWLIB/src/stm32f4xx_i2c.c ****   {
 535:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable dual addressing mode */
 536:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->OAR2 |= I2C_OAR2_ENDUAL;
 754              		.loc 1 536 5 is_stmt 1 view .LVU223
 755              		.loc 1 536 16 is_stmt 0 view .LVU224
 756 0002 8389     		ldrh	r3, [r0, #12]
 757 0004 43F00103 		orr	r3, r3, #1
 758 0008 8381     		strh	r3, [r0, #12]	@ movhi
 759 000a 7047     		bx	lr
 760              	.L45:
 537:FWLIB/src/stm32f4xx_i2c.c ****   }
ARM GAS  /tmp/ccqK3nom.s 			page 24


 538:FWLIB/src/stm32f4xx_i2c.c ****   else
 539:FWLIB/src/stm32f4xx_i2c.c ****   {
 540:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable dual addressing mode */
 541:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->OAR2 &= (uint16_t)~((uint16_t)I2C_OAR2_ENDUAL);
 761              		.loc 1 541 5 is_stmt 1 view .LVU225
 762              		.loc 1 541 16 is_stmt 0 view .LVU226
 763 000c 8389     		ldrh	r3, [r0, #12]
 764 000e 9BB2     		uxth	r3, r3
 765 0010 23F00103 		bic	r3, r3, #1
 766 0014 9BB2     		uxth	r3, r3
 767 0016 8381     		strh	r3, [r0, #12]	@ movhi
 542:FWLIB/src/stm32f4xx_i2c.c ****   }
 543:FWLIB/src/stm32f4xx_i2c.c **** }
 768              		.loc 1 543 1 view .LVU227
 769 0018 7047     		bx	lr
 770              		.cfi_endproc
 771              	.LFE134:
 773              		.section	.text.I2C_GeneralCallCmd,"ax",%progbits
 774              		.align	1
 775              		.global	I2C_GeneralCallCmd
 776              		.syntax unified
 777              		.thumb
 778              		.thumb_func
 779              		.fpu fpv4-sp-d16
 781              	I2C_GeneralCallCmd:
 782              	.LVL66:
 783              	.LFB135:
 544:FWLIB/src/stm32f4xx_i2c.c **** 
 545:FWLIB/src/stm32f4xx_i2c.c **** /**
 546:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C general call feature.
 547:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 548:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C General call.
 549:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 550:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 551:FWLIB/src/stm32f4xx_i2c.c ****   */
 552:FWLIB/src/stm32f4xx_i2c.c **** void I2C_GeneralCallCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 553:FWLIB/src/stm32f4xx_i2c.c **** {
 784              		.loc 1 553 1 is_stmt 1 view -0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 554:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 555:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 789              		.loc 1 555 3 view .LVU229
 556:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 790              		.loc 1 556 3 view .LVU230
 557:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 791              		.loc 1 557 3 view .LVU231
 792              		.loc 1 557 6 is_stmt 0 view .LVU232
 793 0000 21B1     		cbz	r1, .L48
 558:FWLIB/src/stm32f4xx_i2c.c ****   {
 559:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable general call */
 560:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENGC;
 794              		.loc 1 560 5 is_stmt 1 view .LVU233
 795              		.loc 1 560 15 is_stmt 0 view .LVU234
 796 0002 0388     		ldrh	r3, [r0]
ARM GAS  /tmp/ccqK3nom.s 			page 25


 797 0004 43F04003 		orr	r3, r3, #64
 798 0008 0380     		strh	r3, [r0]	@ movhi
 799 000a 7047     		bx	lr
 800              	.L48:
 561:FWLIB/src/stm32f4xx_i2c.c ****   }
 562:FWLIB/src/stm32f4xx_i2c.c ****   else
 563:FWLIB/src/stm32f4xx_i2c.c ****   {
 564:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable general call */
 565:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENGC);
 801              		.loc 1 565 5 is_stmt 1 view .LVU235
 802              		.loc 1 565 15 is_stmt 0 view .LVU236
 803 000c 0388     		ldrh	r3, [r0]
 804 000e 9BB2     		uxth	r3, r3
 805 0010 23F04003 		bic	r3, r3, #64
 806 0014 9BB2     		uxth	r3, r3
 807 0016 0380     		strh	r3, [r0]	@ movhi
 566:FWLIB/src/stm32f4xx_i2c.c ****   }
 567:FWLIB/src/stm32f4xx_i2c.c **** }
 808              		.loc 1 567 1 view .LVU237
 809 0018 7047     		bx	lr
 810              		.cfi_endproc
 811              	.LFE135:
 813              		.section	.text.I2C_SoftwareResetCmd,"ax",%progbits
 814              		.align	1
 815              		.global	I2C_SoftwareResetCmd
 816              		.syntax unified
 817              		.thumb
 818              		.thumb_func
 819              		.fpu fpv4-sp-d16
 821              	I2C_SoftwareResetCmd:
 822              	.LVL67:
 823              	.LFB136:
 568:FWLIB/src/stm32f4xx_i2c.c **** 
 569:FWLIB/src/stm32f4xx_i2c.c **** /**
 570:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C software reset.
 571:FWLIB/src/stm32f4xx_i2c.c ****   * @note   When software reset is enabled, the I2C IOs are released (this can
 572:FWLIB/src/stm32f4xx_i2c.c ****   *         be useful to recover from bus errors).  
 573:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 574:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C software reset.
 575:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 576:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 577:FWLIB/src/stm32f4xx_i2c.c ****   */
 578:FWLIB/src/stm32f4xx_i2c.c **** void I2C_SoftwareResetCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 579:FWLIB/src/stm32f4xx_i2c.c **** {
 824              		.loc 1 579 1 is_stmt 1 view -0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 580:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 581:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 829              		.loc 1 581 3 view .LVU239
 582:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 830              		.loc 1 582 3 view .LVU240
 583:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 831              		.loc 1 583 3 view .LVU241
 832              		.loc 1 583 6 is_stmt 0 view .LVU242
ARM GAS  /tmp/ccqK3nom.s 			page 26


 833 0000 21B1     		cbz	r1, .L51
 584:FWLIB/src/stm32f4xx_i2c.c ****   {
 585:FWLIB/src/stm32f4xx_i2c.c ****     /* Peripheral under reset */
 586:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_SWRST;
 834              		.loc 1 586 5 is_stmt 1 view .LVU243
 835              		.loc 1 586 15 is_stmt 0 view .LVU244
 836 0002 0388     		ldrh	r3, [r0]
 837 0004 43F40043 		orr	r3, r3, #32768
 838 0008 0380     		strh	r3, [r0]	@ movhi
 839 000a 7047     		bx	lr
 840              	.L51:
 587:FWLIB/src/stm32f4xx_i2c.c ****   }
 588:FWLIB/src/stm32f4xx_i2c.c ****   else
 589:FWLIB/src/stm32f4xx_i2c.c ****   {
 590:FWLIB/src/stm32f4xx_i2c.c ****     /* Peripheral not under reset */
 591:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_SWRST);
 841              		.loc 1 591 5 is_stmt 1 view .LVU245
 842              		.loc 1 591 15 is_stmt 0 view .LVU246
 843 000c 0388     		ldrh	r3, [r0]
 844 000e C3F30E03 		ubfx	r3, r3, #0, #15
 845 0012 0380     		strh	r3, [r0]	@ movhi
 592:FWLIB/src/stm32f4xx_i2c.c ****   }
 593:FWLIB/src/stm32f4xx_i2c.c **** }
 846              		.loc 1 593 1 view .LVU247
 847 0014 7047     		bx	lr
 848              		.cfi_endproc
 849              	.LFE136:
 851              		.section	.text.I2C_StretchClockCmd,"ax",%progbits
 852              		.align	1
 853              		.global	I2C_StretchClockCmd
 854              		.syntax unified
 855              		.thumb
 856              		.thumb_func
 857              		.fpu fpv4-sp-d16
 859              	I2C_StretchClockCmd:
 860              	.LVL68:
 861              	.LFB137:
 594:FWLIB/src/stm32f4xx_i2c.c **** 
 595:FWLIB/src/stm32f4xx_i2c.c **** /**
 596:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C Clock stretching.
 597:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 598:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx Clock stretching.
 599:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 600:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 601:FWLIB/src/stm32f4xx_i2c.c ****   */
 602:FWLIB/src/stm32f4xx_i2c.c **** void I2C_StretchClockCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 603:FWLIB/src/stm32f4xx_i2c.c **** {
 862              		.loc 1 603 1 is_stmt 1 view -0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              		@ link register save eliminated.
 604:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 605:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 867              		.loc 1 605 3 view .LVU249
 606:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 868              		.loc 1 606 3 view .LVU250
ARM GAS  /tmp/ccqK3nom.s 			page 27


 607:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState == DISABLE)
 869              		.loc 1 607 3 view .LVU251
 870              		.loc 1 607 6 is_stmt 0 view .LVU252
 871 0000 21B9     		cbnz	r1, .L54
 608:FWLIB/src/stm32f4xx_i2c.c ****   {
 609:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C Clock stretching */
 610:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_NOSTRETCH;
 872              		.loc 1 610 5 is_stmt 1 view .LVU253
 873              		.loc 1 610 15 is_stmt 0 view .LVU254
 874 0002 0388     		ldrh	r3, [r0]
 875 0004 43F08003 		orr	r3, r3, #128
 876 0008 0380     		strh	r3, [r0]	@ movhi
 877 000a 7047     		bx	lr
 878              	.L54:
 611:FWLIB/src/stm32f4xx_i2c.c ****   }
 612:FWLIB/src/stm32f4xx_i2c.c ****   else
 613:FWLIB/src/stm32f4xx_i2c.c ****   {
 614:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C Clock stretching */
 615:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_NOSTRETCH);
 879              		.loc 1 615 5 is_stmt 1 view .LVU255
 880              		.loc 1 615 15 is_stmt 0 view .LVU256
 881 000c 0388     		ldrh	r3, [r0]
 882 000e 9BB2     		uxth	r3, r3
 883 0010 23F08003 		bic	r3, r3, #128
 884 0014 9BB2     		uxth	r3, r3
 885 0016 0380     		strh	r3, [r0]	@ movhi
 616:FWLIB/src/stm32f4xx_i2c.c ****   }
 617:FWLIB/src/stm32f4xx_i2c.c **** }
 886              		.loc 1 617 1 view .LVU257
 887 0018 7047     		bx	lr
 888              		.cfi_endproc
 889              	.LFE137:
 891              		.section	.text.I2C_FastModeDutyCycleConfig,"ax",%progbits
 892              		.align	1
 893              		.global	I2C_FastModeDutyCycleConfig
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv4-sp-d16
 899              	I2C_FastModeDutyCycleConfig:
 900              	.LVL69:
 901              	.LFB138:
 618:FWLIB/src/stm32f4xx_i2c.c **** 
 619:FWLIB/src/stm32f4xx_i2c.c **** /**
 620:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C fast mode duty cycle.
 621:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 622:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_DutyCycle: specifies the fast mode duty cycle.
 623:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 624:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_2: I2C fast mode Tlow/Thigh = 2
 625:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_16_9: I2C fast mode Tlow/Thigh = 16/9
 626:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 627:FWLIB/src/stm32f4xx_i2c.c ****   */
 628:FWLIB/src/stm32f4xx_i2c.c **** void I2C_FastModeDutyCycleConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle)
 629:FWLIB/src/stm32f4xx_i2c.c **** {
 902              		.loc 1 629 1 is_stmt 1 view -0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccqK3nom.s 			page 28


 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              		@ link register save eliminated.
 630:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 631:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 907              		.loc 1 631 3 view .LVU259
 632:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_DutyCycle));
 908              		.loc 1 632 3 view .LVU260
 633:FWLIB/src/stm32f4xx_i2c.c ****   if (I2C_DutyCycle != I2C_DutyCycle_16_9)
 909              		.loc 1 633 3 view .LVU261
 910              		.loc 1 633 6 is_stmt 0 view .LVU262
 911 0000 B1F5804F 		cmp	r1, #16384
 912 0004 06D0     		beq	.L57
 634:FWLIB/src/stm32f4xx_i2c.c ****   {
 635:FWLIB/src/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=2 */
 636:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CCR &= I2C_DutyCycle_2;
 913              		.loc 1 636 5 is_stmt 1 view .LVU263
 914              		.loc 1 636 15 is_stmt 0 view .LVU264
 915 0006 838B     		ldrh	r3, [r0, #28]
 916 0008 9BB2     		uxth	r3, r3
 917 000a 23F48043 		bic	r3, r3, #16384
 918 000e 9BB2     		uxth	r3, r3
 919 0010 8383     		strh	r3, [r0, #28]	@ movhi
 920 0012 7047     		bx	lr
 921              	.L57:
 637:FWLIB/src/stm32f4xx_i2c.c ****   }
 638:FWLIB/src/stm32f4xx_i2c.c ****   else
 639:FWLIB/src/stm32f4xx_i2c.c ****   {
 640:FWLIB/src/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=16/9 */
 641:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CCR |= I2C_DutyCycle_16_9;
 922              		.loc 1 641 5 is_stmt 1 view .LVU265
 923              		.loc 1 641 15 is_stmt 0 view .LVU266
 924 0014 838B     		ldrh	r3, [r0, #28]
 925 0016 43F48043 		orr	r3, r3, #16384
 926 001a 8383     		strh	r3, [r0, #28]	@ movhi
 642:FWLIB/src/stm32f4xx_i2c.c ****   }
 643:FWLIB/src/stm32f4xx_i2c.c **** }
 927              		.loc 1 643 1 view .LVU267
 928 001c 7047     		bx	lr
 929              		.cfi_endproc
 930              	.LFE138:
 932              		.section	.text.I2C_NACKPositionConfig,"ax",%progbits
 933              		.align	1
 934              		.global	I2C_NACKPositionConfig
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 938              		.fpu fpv4-sp-d16
 940              	I2C_NACKPositionConfig:
 941              	.LVL70:
 942              	.LFB139:
 644:FWLIB/src/stm32f4xx_i2c.c **** 
 645:FWLIB/src/stm32f4xx_i2c.c **** /**
 646:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C NACK position in master receiver mode.
 647:FWLIB/src/stm32f4xx_i2c.c ****   * @note   This function is useful in I2C Master Receiver mode when the number
 648:FWLIB/src/stm32f4xx_i2c.c ****   *         of data to be received is equal to 2. In this case, this function 
 649:FWLIB/src/stm32f4xx_i2c.c ****   *         should be called (with parameter I2C_NACKPosition_Next) before data 
 650:FWLIB/src/stm32f4xx_i2c.c ****   *         reception starts,as described in the 2-byte reception procedure 
ARM GAS  /tmp/ccqK3nom.s 			page 29


 651:FWLIB/src/stm32f4xx_i2c.c ****   *         recommended in Reference Manual in Section: Master receiver.                
 652:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 653:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_NACKPosition: specifies the NACK position. 
 654:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 655:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Next: indicates that the next byte will be the last
 656:FWLIB/src/stm32f4xx_i2c.c ****   *                                        received byte.  
 657:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Current: indicates that current byte is the last 
 658:FWLIB/src/stm32f4xx_i2c.c ****   *                                           received byte.
 659:FWLIB/src/stm32f4xx_i2c.c ****   *            
 660:FWLIB/src/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_PECPositionConfig() 
 661:FWLIB/src/stm32f4xx_i2c.c ****   *          but is intended to be used in I2C mode while I2C_PECPositionConfig() 
 662:FWLIB/src/stm32f4xx_i2c.c ****   *          is intended to used in SMBUS mode. 
 663:FWLIB/src/stm32f4xx_i2c.c ****   *            
 664:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 665:FWLIB/src/stm32f4xx_i2c.c ****   */
 666:FWLIB/src/stm32f4xx_i2c.c **** void I2C_NACKPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_NACKPosition)
 667:FWLIB/src/stm32f4xx_i2c.c **** {
 943              		.loc 1 667 1 is_stmt 1 view -0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 668:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 669:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 948              		.loc 1 669 3 view .LVU269
 670:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_NACK_POSITION(I2C_NACKPosition));
 949              		.loc 1 670 3 view .LVU270
 671:FWLIB/src/stm32f4xx_i2c.c ****   
 672:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the input parameter */
 673:FWLIB/src/stm32f4xx_i2c.c ****   if (I2C_NACKPosition == I2C_NACKPosition_Next)
 950              		.loc 1 673 3 view .LVU271
 951              		.loc 1 673 6 is_stmt 0 view .LVU272
 952 0000 B1F5006F 		cmp	r1, #2048
 953 0004 06D0     		beq	.L62
 674:FWLIB/src/stm32f4xx_i2c.c ****   {
 675:FWLIB/src/stm32f4xx_i2c.c ****     /* Next byte in shift register is the last received byte */
 676:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_NACKPosition_Next;
 677:FWLIB/src/stm32f4xx_i2c.c ****   }
 678:FWLIB/src/stm32f4xx_i2c.c ****   else
 679:FWLIB/src/stm32f4xx_i2c.c ****   {
 680:FWLIB/src/stm32f4xx_i2c.c ****     /* Current byte in shift register is the last received byte */
 681:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_NACKPosition_Current;
 954              		.loc 1 681 5 is_stmt 1 view .LVU273
 955              		.loc 1 681 15 is_stmt 0 view .LVU274
 956 0006 0388     		ldrh	r3, [r0]
 957 0008 9BB2     		uxth	r3, r3
 958 000a 23F40063 		bic	r3, r3, #2048
 959 000e 9BB2     		uxth	r3, r3
 960 0010 0380     		strh	r3, [r0]	@ movhi
 682:FWLIB/src/stm32f4xx_i2c.c ****   }
 683:FWLIB/src/stm32f4xx_i2c.c **** }
 961              		.loc 1 683 1 view .LVU275
 962 0012 7047     		bx	lr
 963              	.L62:
 676:FWLIB/src/stm32f4xx_i2c.c ****   }
 964              		.loc 1 676 5 is_stmt 1 view .LVU276
 676:FWLIB/src/stm32f4xx_i2c.c ****   }
ARM GAS  /tmp/ccqK3nom.s 			page 30


 965              		.loc 1 676 15 is_stmt 0 view .LVU277
 966 0014 0388     		ldrh	r3, [r0]
 967 0016 43F40063 		orr	r3, r3, #2048
 968 001a 0380     		strh	r3, [r0]	@ movhi
 969 001c 7047     		bx	lr
 970              		.cfi_endproc
 971              	.LFE139:
 973              		.section	.text.I2C_SMBusAlertConfig,"ax",%progbits
 974              		.align	1
 975              		.global	I2C_SMBusAlertConfig
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 979              		.fpu fpv4-sp-d16
 981              	I2C_SMBusAlertConfig:
 982              	.LVL71:
 983              	.LFB140:
 684:FWLIB/src/stm32f4xx_i2c.c **** 
 685:FWLIB/src/stm32f4xx_i2c.c **** /**
 686:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Drives the SMBusAlert pin high or low for the specified I2C.
 687:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 688:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_SMBusAlert: specifies SMBAlert pin level. 
 689:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 690:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_Low: SMBAlert pin driven low
 691:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_High: SMBAlert pin driven high
 692:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 693:FWLIB/src/stm32f4xx_i2c.c ****   */
 694:FWLIB/src/stm32f4xx_i2c.c **** void I2C_SMBusAlertConfig(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert)
 695:FWLIB/src/stm32f4xx_i2c.c **** {
 984              		.loc 1 695 1 is_stmt 1 view -0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 988              		@ link register save eliminated.
 696:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 697:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 989              		.loc 1 697 3 view .LVU279
 698:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_SMBUS_ALERT(I2C_SMBusAlert));
 990              		.loc 1 698 3 view .LVU280
 699:FWLIB/src/stm32f4xx_i2c.c ****   if (I2C_SMBusAlert == I2C_SMBusAlert_Low)
 991              		.loc 1 699 3 view .LVU281
 992              		.loc 1 699 6 is_stmt 0 view .LVU282
 993 0000 B1F5005F 		cmp	r1, #8192
 994 0004 06D0     		beq	.L66
 700:FWLIB/src/stm32f4xx_i2c.c ****   {
 701:FWLIB/src/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin Low */
 702:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_SMBusAlert_Low;
 703:FWLIB/src/stm32f4xx_i2c.c ****   }
 704:FWLIB/src/stm32f4xx_i2c.c ****   else
 705:FWLIB/src/stm32f4xx_i2c.c ****   {
 706:FWLIB/src/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin High  */
 707:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_SMBusAlert_High;
 995              		.loc 1 707 5 is_stmt 1 view .LVU283
 996              		.loc 1 707 15 is_stmt 0 view .LVU284
 997 0006 0388     		ldrh	r3, [r0]
 998 0008 9BB2     		uxth	r3, r3
 999 000a 23F40053 		bic	r3, r3, #8192
ARM GAS  /tmp/ccqK3nom.s 			page 31


 1000 000e 9BB2     		uxth	r3, r3
 1001 0010 0380     		strh	r3, [r0]	@ movhi
 708:FWLIB/src/stm32f4xx_i2c.c ****   }
 709:FWLIB/src/stm32f4xx_i2c.c **** }
 1002              		.loc 1 709 1 view .LVU285
 1003 0012 7047     		bx	lr
 1004              	.L66:
 702:FWLIB/src/stm32f4xx_i2c.c ****   }
 1005              		.loc 1 702 5 is_stmt 1 view .LVU286
 702:FWLIB/src/stm32f4xx_i2c.c ****   }
 1006              		.loc 1 702 15 is_stmt 0 view .LVU287
 1007 0014 0388     		ldrh	r3, [r0]
 1008 0016 43F40053 		orr	r3, r3, #8192
 1009 001a 0380     		strh	r3, [r0]	@ movhi
 1010 001c 7047     		bx	lr
 1011              		.cfi_endproc
 1012              	.LFE140:
 1014              		.section	.text.I2C_ARPCmd,"ax",%progbits
 1015              		.align	1
 1016              		.global	I2C_ARPCmd
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1020              		.fpu fpv4-sp-d16
 1022              	I2C_ARPCmd:
 1023              	.LVL72:
 1024              	.LFB141:
 710:FWLIB/src/stm32f4xx_i2c.c **** 
 711:FWLIB/src/stm32f4xx_i2c.c **** /**
 712:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C ARP.
 713:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 714:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx ARP. 
 715:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 716:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 717:FWLIB/src/stm32f4xx_i2c.c ****   */
 718:FWLIB/src/stm32f4xx_i2c.c **** void I2C_ARPCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 719:FWLIB/src/stm32f4xx_i2c.c **** {
 1025              		.loc 1 719 1 is_stmt 1 view -0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              		@ link register save eliminated.
 720:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 721:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1030              		.loc 1 721 3 view .LVU289
 722:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1031              		.loc 1 722 3 view .LVU290
 723:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1032              		.loc 1 723 3 view .LVU291
 1033              		.loc 1 723 6 is_stmt 0 view .LVU292
 1034 0000 21B1     		cbz	r1, .L68
 724:FWLIB/src/stm32f4xx_i2c.c ****   {
 725:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C ARP */
 726:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENARP;
 1035              		.loc 1 726 5 is_stmt 1 view .LVU293
 1036              		.loc 1 726 15 is_stmt 0 view .LVU294
 1037 0002 0388     		ldrh	r3, [r0]
ARM GAS  /tmp/ccqK3nom.s 			page 32


 1038 0004 43F01003 		orr	r3, r3, #16
 1039 0008 0380     		strh	r3, [r0]	@ movhi
 1040 000a 7047     		bx	lr
 1041              	.L68:
 727:FWLIB/src/stm32f4xx_i2c.c ****   }
 728:FWLIB/src/stm32f4xx_i2c.c ****   else
 729:FWLIB/src/stm32f4xx_i2c.c ****   {
 730:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C ARP */
 731:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENARP);
 1042              		.loc 1 731 5 is_stmt 1 view .LVU295
 1043              		.loc 1 731 15 is_stmt 0 view .LVU296
 1044 000c 0388     		ldrh	r3, [r0]
 1045 000e 9BB2     		uxth	r3, r3
 1046 0010 23F01003 		bic	r3, r3, #16
 1047 0014 9BB2     		uxth	r3, r3
 1048 0016 0380     		strh	r3, [r0]	@ movhi
 732:FWLIB/src/stm32f4xx_i2c.c ****   }
 733:FWLIB/src/stm32f4xx_i2c.c **** }
 1049              		.loc 1 733 1 view .LVU297
 1050 0018 7047     		bx	lr
 1051              		.cfi_endproc
 1052              	.LFE141:
 1054              		.section	.text.I2C_SendData,"ax",%progbits
 1055              		.align	1
 1056              		.global	I2C_SendData
 1057              		.syntax unified
 1058              		.thumb
 1059              		.thumb_func
 1060              		.fpu fpv4-sp-d16
 1062              	I2C_SendData:
 1063              	.LVL73:
 1064              	.LFB142:
 734:FWLIB/src/stm32f4xx_i2c.c **** /**
 735:FWLIB/src/stm32f4xx_i2c.c ****   * @}
 736:FWLIB/src/stm32f4xx_i2c.c ****   */
 737:FWLIB/src/stm32f4xx_i2c.c **** 
 738:FWLIB/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group2 Data transfers functions
 739:FWLIB/src/stm32f4xx_i2c.c ****  *  @brief   Data transfers functions 
 740:FWLIB/src/stm32f4xx_i2c.c ****  *
 741:FWLIB/src/stm32f4xx_i2c.c **** @verbatim   
 742:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================
 743:FWLIB/src/stm32f4xx_i2c.c ****                   ##### Data transfers functions #####
 744:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================  
 745:FWLIB/src/stm32f4xx_i2c.c **** 
 746:FWLIB/src/stm32f4xx_i2c.c **** @endverbatim
 747:FWLIB/src/stm32f4xx_i2c.c ****   * @{
 748:FWLIB/src/stm32f4xx_i2c.c ****   */
 749:FWLIB/src/stm32f4xx_i2c.c **** 
 750:FWLIB/src/stm32f4xx_i2c.c **** /**
 751:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Sends a data byte through the I2Cx peripheral.
 752:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 753:FWLIB/src/stm32f4xx_i2c.c ****   * @param  Data: Byte to be transmitted..
 754:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 755:FWLIB/src/stm32f4xx_i2c.c ****   */
 756:FWLIB/src/stm32f4xx_i2c.c **** void I2C_SendData(I2C_TypeDef* I2Cx, uint8_t Data)
 757:FWLIB/src/stm32f4xx_i2c.c **** {
 1065              		.loc 1 757 1 is_stmt 1 view -0
ARM GAS  /tmp/ccqK3nom.s 			page 33


 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069              		@ link register save eliminated.
 758:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 759:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1070              		.loc 1 759 3 view .LVU299
 760:FWLIB/src/stm32f4xx_i2c.c ****   /* Write in the DR register the data to be sent */
 761:FWLIB/src/stm32f4xx_i2c.c ****   I2Cx->DR = Data;
 1071              		.loc 1 761 3 view .LVU300
 1072              		.loc 1 761 12 is_stmt 0 view .LVU301
 1073 0000 0182     		strh	r1, [r0, #16]	@ movhi
 762:FWLIB/src/stm32f4xx_i2c.c **** }
 1074              		.loc 1 762 1 view .LVU302
 1075 0002 7047     		bx	lr
 1076              		.cfi_endproc
 1077              	.LFE142:
 1079              		.section	.text.I2C_ReceiveData,"ax",%progbits
 1080              		.align	1
 1081              		.global	I2C_ReceiveData
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1085              		.fpu fpv4-sp-d16
 1087              	I2C_ReceiveData:
 1088              	.LVL74:
 1089              	.LFB143:
 763:FWLIB/src/stm32f4xx_i2c.c **** 
 764:FWLIB/src/stm32f4xx_i2c.c **** /**
 765:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Returns the most recent received data by the I2Cx peripheral.
 766:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 767:FWLIB/src/stm32f4xx_i2c.c ****   * @retval The value of the received data.
 768:FWLIB/src/stm32f4xx_i2c.c ****   */
 769:FWLIB/src/stm32f4xx_i2c.c **** uint8_t I2C_ReceiveData(I2C_TypeDef* I2Cx)
 770:FWLIB/src/stm32f4xx_i2c.c **** {
 1090              		.loc 1 770 1 is_stmt 1 view -0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
 1094              		@ link register save eliminated.
 771:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 772:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1095              		.loc 1 772 3 view .LVU304
 773:FWLIB/src/stm32f4xx_i2c.c ****   /* Return the data in the DR register */
 774:FWLIB/src/stm32f4xx_i2c.c ****   return (uint8_t)I2Cx->DR;
 1096              		.loc 1 774 3 view .LVU305
 1097              		.loc 1 774 23 is_stmt 0 view .LVU306
 1098 0000 008A     		ldrh	r0, [r0, #16]
 1099              	.LVL75:
 775:FWLIB/src/stm32f4xx_i2c.c **** }
 1100              		.loc 1 775 1 view .LVU307
 1101 0002 C0B2     		uxtb	r0, r0
 1102 0004 7047     		bx	lr
 1103              		.cfi_endproc
 1104              	.LFE143:
 1106              		.section	.text.I2C_TransmitPEC,"ax",%progbits
 1107              		.align	1
ARM GAS  /tmp/ccqK3nom.s 			page 34


 1108              		.global	I2C_TransmitPEC
 1109              		.syntax unified
 1110              		.thumb
 1111              		.thumb_func
 1112              		.fpu fpv4-sp-d16
 1114              	I2C_TransmitPEC:
 1115              	.LVL76:
 1116              	.LFB144:
 776:FWLIB/src/stm32f4xx_i2c.c **** 
 777:FWLIB/src/stm32f4xx_i2c.c **** /**
 778:FWLIB/src/stm32f4xx_i2c.c ****   * @}
 779:FWLIB/src/stm32f4xx_i2c.c ****   */
 780:FWLIB/src/stm32f4xx_i2c.c **** 
 781:FWLIB/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group3 PEC management functions
 782:FWLIB/src/stm32f4xx_i2c.c ****  *  @brief   PEC management functions 
 783:FWLIB/src/stm32f4xx_i2c.c ****  *
 784:FWLIB/src/stm32f4xx_i2c.c **** @verbatim   
 785:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================
 786:FWLIB/src/stm32f4xx_i2c.c ****                   ##### PEC management functions #####
 787:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================  
 788:FWLIB/src/stm32f4xx_i2c.c **** 
 789:FWLIB/src/stm32f4xx_i2c.c **** @endverbatim
 790:FWLIB/src/stm32f4xx_i2c.c ****   * @{
 791:FWLIB/src/stm32f4xx_i2c.c ****   */
 792:FWLIB/src/stm32f4xx_i2c.c **** 
 793:FWLIB/src/stm32f4xx_i2c.c **** /**
 794:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C PEC transfer.
 795:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 796:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C PEC transmission.
 797:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 798:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 799:FWLIB/src/stm32f4xx_i2c.c ****   */
 800:FWLIB/src/stm32f4xx_i2c.c **** void I2C_TransmitPEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 801:FWLIB/src/stm32f4xx_i2c.c **** {
 1117              		.loc 1 801 1 is_stmt 1 view -0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121              		@ link register save eliminated.
 802:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 803:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1122              		.loc 1 803 3 view .LVU309
 804:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1123              		.loc 1 804 3 view .LVU310
 805:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1124              		.loc 1 805 3 view .LVU311
 1125              		.loc 1 805 6 is_stmt 0 view .LVU312
 1126 0000 21B1     		cbz	r1, .L73
 806:FWLIB/src/stm32f4xx_i2c.c ****   {
 807:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC transmission */
 808:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PEC;
 1127              		.loc 1 808 5 is_stmt 1 view .LVU313
 1128              		.loc 1 808 15 is_stmt 0 view .LVU314
 1129 0002 0388     		ldrh	r3, [r0]
 1130 0004 43F48053 		orr	r3, r3, #4096
 1131 0008 0380     		strh	r3, [r0]	@ movhi
 1132 000a 7047     		bx	lr
ARM GAS  /tmp/ccqK3nom.s 			page 35


 1133              	.L73:
 809:FWLIB/src/stm32f4xx_i2c.c ****   }
 810:FWLIB/src/stm32f4xx_i2c.c ****   else
 811:FWLIB/src/stm32f4xx_i2c.c ****   {
 812:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC transmission */
 813:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PEC);
 1134              		.loc 1 813 5 is_stmt 1 view .LVU315
 1135              		.loc 1 813 15 is_stmt 0 view .LVU316
 1136 000c 0388     		ldrh	r3, [r0]
 1137 000e 9BB2     		uxth	r3, r3
 1138 0010 23F48053 		bic	r3, r3, #4096
 1139 0014 9BB2     		uxth	r3, r3
 1140 0016 0380     		strh	r3, [r0]	@ movhi
 814:FWLIB/src/stm32f4xx_i2c.c ****   }
 815:FWLIB/src/stm32f4xx_i2c.c **** }
 1141              		.loc 1 815 1 view .LVU317
 1142 0018 7047     		bx	lr
 1143              		.cfi_endproc
 1144              	.LFE144:
 1146              		.section	.text.I2C_PECPositionConfig,"ax",%progbits
 1147              		.align	1
 1148              		.global	I2C_PECPositionConfig
 1149              		.syntax unified
 1150              		.thumb
 1151              		.thumb_func
 1152              		.fpu fpv4-sp-d16
 1154              	I2C_PECPositionConfig:
 1155              	.LVL77:
 1156              	.LFB145:
 816:FWLIB/src/stm32f4xx_i2c.c **** 
 817:FWLIB/src/stm32f4xx_i2c.c **** /**
 818:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C PEC position.
 819:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 820:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_PECPosition: specifies the PEC position. 
 821:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 822:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Next: indicates that the next byte is PEC
 823:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Current: indicates that current byte is PEC
 824:FWLIB/src/stm32f4xx_i2c.c ****   *       
 825:FWLIB/src/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_NACKPositionConfig()
 826:FWLIB/src/stm32f4xx_i2c.c ****   *          but is intended to be used in SMBUS mode while I2C_NACKPositionConfig() 
 827:FWLIB/src/stm32f4xx_i2c.c ****   *          is intended to used in I2C mode.
 828:FWLIB/src/stm32f4xx_i2c.c ****   *                
 829:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 830:FWLIB/src/stm32f4xx_i2c.c ****   */
 831:FWLIB/src/stm32f4xx_i2c.c **** void I2C_PECPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition)
 832:FWLIB/src/stm32f4xx_i2c.c **** {
 1157              		.loc 1 832 1 is_stmt 1 view -0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 833:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 834:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1162              		.loc 1 834 3 view .LVU319
 835:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_PEC_POSITION(I2C_PECPosition));
 1163              		.loc 1 835 3 view .LVU320
 836:FWLIB/src/stm32f4xx_i2c.c ****   if (I2C_PECPosition == I2C_PECPosition_Next)
ARM GAS  /tmp/ccqK3nom.s 			page 36


 1164              		.loc 1 836 3 view .LVU321
 1165              		.loc 1 836 6 is_stmt 0 view .LVU322
 1166 0000 B1F5006F 		cmp	r1, #2048
 1167 0004 06D0     		beq	.L78
 837:FWLIB/src/stm32f4xx_i2c.c ****   {
 838:FWLIB/src/stm32f4xx_i2c.c ****     /* Next byte in shift register is PEC */
 839:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_PECPosition_Next;
 840:FWLIB/src/stm32f4xx_i2c.c ****   }
 841:FWLIB/src/stm32f4xx_i2c.c ****   else
 842:FWLIB/src/stm32f4xx_i2c.c ****   {
 843:FWLIB/src/stm32f4xx_i2c.c ****     /* Current byte in shift register is PEC */
 844:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_PECPosition_Current;
 1168              		.loc 1 844 5 is_stmt 1 view .LVU323
 1169              		.loc 1 844 15 is_stmt 0 view .LVU324
 1170 0006 0388     		ldrh	r3, [r0]
 1171 0008 9BB2     		uxth	r3, r3
 1172 000a 23F40063 		bic	r3, r3, #2048
 1173 000e 9BB2     		uxth	r3, r3
 1174 0010 0380     		strh	r3, [r0]	@ movhi
 845:FWLIB/src/stm32f4xx_i2c.c ****   }
 846:FWLIB/src/stm32f4xx_i2c.c **** }
 1175              		.loc 1 846 1 view .LVU325
 1176 0012 7047     		bx	lr
 1177              	.L78:
 839:FWLIB/src/stm32f4xx_i2c.c ****   }
 1178              		.loc 1 839 5 is_stmt 1 view .LVU326
 839:FWLIB/src/stm32f4xx_i2c.c ****   }
 1179              		.loc 1 839 15 is_stmt 0 view .LVU327
 1180 0014 0388     		ldrh	r3, [r0]
 1181 0016 43F40063 		orr	r3, r3, #2048
 1182 001a 0380     		strh	r3, [r0]	@ movhi
 1183 001c 7047     		bx	lr
 1184              		.cfi_endproc
 1185              	.LFE145:
 1187              		.section	.text.I2C_CalculatePEC,"ax",%progbits
 1188              		.align	1
 1189              		.global	I2C_CalculatePEC
 1190              		.syntax unified
 1191              		.thumb
 1192              		.thumb_func
 1193              		.fpu fpv4-sp-d16
 1195              	I2C_CalculatePEC:
 1196              	.LVL78:
 1197              	.LFB146:
 847:FWLIB/src/stm32f4xx_i2c.c **** 
 848:FWLIB/src/stm32f4xx_i2c.c **** /**
 849:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the PEC value calculation of the transferred bytes.
 850:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 851:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx PEC value calculation.
 852:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 853:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 854:FWLIB/src/stm32f4xx_i2c.c ****   */
 855:FWLIB/src/stm32f4xx_i2c.c **** void I2C_CalculatePEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 856:FWLIB/src/stm32f4xx_i2c.c **** {
 1198              		.loc 1 856 1 is_stmt 1 view -0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccqK3nom.s 			page 37


 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              		@ link register save eliminated.
 857:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 858:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1203              		.loc 1 858 3 view .LVU329
 859:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1204              		.loc 1 859 3 view .LVU330
 860:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1205              		.loc 1 860 3 view .LVU331
 1206              		.loc 1 860 6 is_stmt 0 view .LVU332
 1207 0000 21B1     		cbz	r1, .L80
 861:FWLIB/src/stm32f4xx_i2c.c ****   {
 862:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC calculation */
 863:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENPEC;
 1208              		.loc 1 863 5 is_stmt 1 view .LVU333
 1209              		.loc 1 863 15 is_stmt 0 view .LVU334
 1210 0002 0388     		ldrh	r3, [r0]
 1211 0004 43F02003 		orr	r3, r3, #32
 1212 0008 0380     		strh	r3, [r0]	@ movhi
 1213 000a 7047     		bx	lr
 1214              	.L80:
 864:FWLIB/src/stm32f4xx_i2c.c ****   }
 865:FWLIB/src/stm32f4xx_i2c.c ****   else
 866:FWLIB/src/stm32f4xx_i2c.c ****   {
 867:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC calculation */
 868:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENPEC);
 1215              		.loc 1 868 5 is_stmt 1 view .LVU335
 1216              		.loc 1 868 15 is_stmt 0 view .LVU336
 1217 000c 0388     		ldrh	r3, [r0]
 1218 000e 9BB2     		uxth	r3, r3
 1219 0010 23F02003 		bic	r3, r3, #32
 1220 0014 9BB2     		uxth	r3, r3
 1221 0016 0380     		strh	r3, [r0]	@ movhi
 869:FWLIB/src/stm32f4xx_i2c.c ****   }
 870:FWLIB/src/stm32f4xx_i2c.c **** }
 1222              		.loc 1 870 1 view .LVU337
 1223 0018 7047     		bx	lr
 1224              		.cfi_endproc
 1225              	.LFE146:
 1227              		.section	.text.I2C_GetPEC,"ax",%progbits
 1228              		.align	1
 1229              		.global	I2C_GetPEC
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1233              		.fpu fpv4-sp-d16
 1235              	I2C_GetPEC:
 1236              	.LVL79:
 1237              	.LFB147:
 871:FWLIB/src/stm32f4xx_i2c.c **** 
 872:FWLIB/src/stm32f4xx_i2c.c **** /**
 873:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Returns the PEC value for the specified I2C.
 874:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 875:FWLIB/src/stm32f4xx_i2c.c ****   * @retval The PEC value.
 876:FWLIB/src/stm32f4xx_i2c.c ****   */
 877:FWLIB/src/stm32f4xx_i2c.c **** uint8_t I2C_GetPEC(I2C_TypeDef* I2Cx)
 878:FWLIB/src/stm32f4xx_i2c.c **** {
ARM GAS  /tmp/ccqK3nom.s 			page 38


 1238              		.loc 1 878 1 is_stmt 1 view -0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242              		@ link register save eliminated.
 879:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 880:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1243              		.loc 1 880 3 view .LVU339
 881:FWLIB/src/stm32f4xx_i2c.c ****   /* Return the selected I2C PEC value */
 882:FWLIB/src/stm32f4xx_i2c.c ****   return ((I2Cx->SR2) >> 8);
 1244              		.loc 1 882 3 view .LVU340
 1245              		.loc 1 882 16 is_stmt 0 view .LVU341
 1246 0000 008B     		ldrh	r0, [r0, #24]
 1247              	.LVL80:
 883:FWLIB/src/stm32f4xx_i2c.c **** }
 1248              		.loc 1 883 1 view .LVU342
 1249 0002 000A     		lsrs	r0, r0, #8
 1250 0004 7047     		bx	lr
 1251              		.cfi_endproc
 1252              	.LFE147:
 1254              		.section	.text.I2C_DMACmd,"ax",%progbits
 1255              		.align	1
 1256              		.global	I2C_DMACmd
 1257              		.syntax unified
 1258              		.thumb
 1259              		.thumb_func
 1260              		.fpu fpv4-sp-d16
 1262              	I2C_DMACmd:
 1263              	.LVL81:
 1264              	.LFB148:
 884:FWLIB/src/stm32f4xx_i2c.c **** 
 885:FWLIB/src/stm32f4xx_i2c.c **** /**
 886:FWLIB/src/stm32f4xx_i2c.c ****   * @}
 887:FWLIB/src/stm32f4xx_i2c.c ****   */
 888:FWLIB/src/stm32f4xx_i2c.c **** 
 889:FWLIB/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group4 DMA transfers management functions
 890:FWLIB/src/stm32f4xx_i2c.c ****  *  @brief   DMA transfers management functions 
 891:FWLIB/src/stm32f4xx_i2c.c ****  *
 892:FWLIB/src/stm32f4xx_i2c.c **** @verbatim   
 893:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================
 894:FWLIB/src/stm32f4xx_i2c.c ****                 ##### DMA transfers management functions #####
 895:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================  
 896:FWLIB/src/stm32f4xx_i2c.c ****   This section provides functions allowing to configure the I2C DMA channels 
 897:FWLIB/src/stm32f4xx_i2c.c ****   requests.
 898:FWLIB/src/stm32f4xx_i2c.c ****   
 899:FWLIB/src/stm32f4xx_i2c.c **** @endverbatim
 900:FWLIB/src/stm32f4xx_i2c.c ****   * @{
 901:FWLIB/src/stm32f4xx_i2c.c ****   */
 902:FWLIB/src/stm32f4xx_i2c.c **** 
 903:FWLIB/src/stm32f4xx_i2c.c **** /**
 904:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C DMA requests.
 905:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 906:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA transfer.
 907:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 908:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 909:FWLIB/src/stm32f4xx_i2c.c ****   */
 910:FWLIB/src/stm32f4xx_i2c.c **** void I2C_DMACmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
ARM GAS  /tmp/ccqK3nom.s 			page 39


 911:FWLIB/src/stm32f4xx_i2c.c **** {
 1265              		.loc 1 911 1 is_stmt 1 view -0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 0, uses_anonymous_args = 0
 1269              		@ link register save eliminated.
 912:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 913:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1270              		.loc 1 913 3 view .LVU344
 914:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1271              		.loc 1 914 3 view .LVU345
 915:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1272              		.loc 1 915 3 view .LVU346
 1273              		.loc 1 915 6 is_stmt 0 view .LVU347
 1274 0000 21B1     		cbz	r1, .L84
 916:FWLIB/src/stm32f4xx_i2c.c ****   {
 917:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C DMA requests */
 918:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_DMAEN;
 1275              		.loc 1 918 5 is_stmt 1 view .LVU348
 1276              		.loc 1 918 15 is_stmt 0 view .LVU349
 1277 0002 8388     		ldrh	r3, [r0, #4]
 1278 0004 43F40063 		orr	r3, r3, #2048
 1279 0008 8380     		strh	r3, [r0, #4]	@ movhi
 1280 000a 7047     		bx	lr
 1281              	.L84:
 919:FWLIB/src/stm32f4xx_i2c.c ****   }
 920:FWLIB/src/stm32f4xx_i2c.c ****   else
 921:FWLIB/src/stm32f4xx_i2c.c ****   {
 922:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C DMA requests */
 923:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_DMAEN);
 1282              		.loc 1 923 5 is_stmt 1 view .LVU350
 1283              		.loc 1 923 15 is_stmt 0 view .LVU351
 1284 000c 8388     		ldrh	r3, [r0, #4]
 1285 000e 9BB2     		uxth	r3, r3
 1286 0010 23F40063 		bic	r3, r3, #2048
 1287 0014 9BB2     		uxth	r3, r3
 1288 0016 8380     		strh	r3, [r0, #4]	@ movhi
 924:FWLIB/src/stm32f4xx_i2c.c ****   }
 925:FWLIB/src/stm32f4xx_i2c.c **** }
 1289              		.loc 1 925 1 view .LVU352
 1290 0018 7047     		bx	lr
 1291              		.cfi_endproc
 1292              	.LFE148:
 1294              		.section	.text.I2C_DMALastTransferCmd,"ax",%progbits
 1295              		.align	1
 1296              		.global	I2C_DMALastTransferCmd
 1297              		.syntax unified
 1298              		.thumb
 1299              		.thumb_func
 1300              		.fpu fpv4-sp-d16
 1302              	I2C_DMALastTransferCmd:
 1303              	.LVL82:
 1304              	.LFB149:
 926:FWLIB/src/stm32f4xx_i2c.c **** 
 927:FWLIB/src/stm32f4xx_i2c.c **** /**
 928:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Specifies that the next DMA transfer is the last one.
 929:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
ARM GAS  /tmp/ccqK3nom.s 			page 40


 930:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA last transfer.
 931:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 932:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
 933:FWLIB/src/stm32f4xx_i2c.c ****   */
 934:FWLIB/src/stm32f4xx_i2c.c **** void I2C_DMALastTransferCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 935:FWLIB/src/stm32f4xx_i2c.c **** {
 1305              		.loc 1 935 1 is_stmt 1 view -0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
 936:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 937:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1310              		.loc 1 937 3 view .LVU354
 938:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1311              		.loc 1 938 3 view .LVU355
 939:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1312              		.loc 1 939 3 view .LVU356
 1313              		.loc 1 939 6 is_stmt 0 view .LVU357
 1314 0000 21B1     		cbz	r1, .L87
 940:FWLIB/src/stm32f4xx_i2c.c ****   {
 941:FWLIB/src/stm32f4xx_i2c.c ****     /* Next DMA transfer is the last transfer */
 942:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_LAST;
 1315              		.loc 1 942 5 is_stmt 1 view .LVU358
 1316              		.loc 1 942 15 is_stmt 0 view .LVU359
 1317 0002 8388     		ldrh	r3, [r0, #4]
 1318 0004 43F48053 		orr	r3, r3, #4096
 1319 0008 8380     		strh	r3, [r0, #4]	@ movhi
 1320 000a 7047     		bx	lr
 1321              	.L87:
 943:FWLIB/src/stm32f4xx_i2c.c ****   }
 944:FWLIB/src/stm32f4xx_i2c.c ****   else
 945:FWLIB/src/stm32f4xx_i2c.c ****   {
 946:FWLIB/src/stm32f4xx_i2c.c ****     /* Next DMA transfer is not the last transfer */
 947:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_LAST);
 1322              		.loc 1 947 5 is_stmt 1 view .LVU360
 1323              		.loc 1 947 15 is_stmt 0 view .LVU361
 1324 000c 8388     		ldrh	r3, [r0, #4]
 1325 000e 9BB2     		uxth	r3, r3
 1326 0010 23F48053 		bic	r3, r3, #4096
 1327 0014 9BB2     		uxth	r3, r3
 1328 0016 8380     		strh	r3, [r0, #4]	@ movhi
 948:FWLIB/src/stm32f4xx_i2c.c ****   }
 949:FWLIB/src/stm32f4xx_i2c.c **** }
 1329              		.loc 1 949 1 view .LVU362
 1330 0018 7047     		bx	lr
 1331              		.cfi_endproc
 1332              	.LFE149:
 1334              		.section	.text.I2C_ReadRegister,"ax",%progbits
 1335              		.align	1
 1336              		.global	I2C_ReadRegister
 1337              		.syntax unified
 1338              		.thumb
 1339              		.thumb_func
 1340              		.fpu fpv4-sp-d16
 1342              	I2C_ReadRegister:
 1343              	.LVL83:
ARM GAS  /tmp/ccqK3nom.s 			page 41


 1344              	.LFB150:
 950:FWLIB/src/stm32f4xx_i2c.c **** 
 951:FWLIB/src/stm32f4xx_i2c.c **** /**
 952:FWLIB/src/stm32f4xx_i2c.c ****   * @}
 953:FWLIB/src/stm32f4xx_i2c.c ****   */
 954:FWLIB/src/stm32f4xx_i2c.c **** 
 955:FWLIB/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group5 Interrupts events and flags management functions
 956:FWLIB/src/stm32f4xx_i2c.c ****  *  @brief   Interrupts, events and flags management functions
 957:FWLIB/src/stm32f4xx_i2c.c ****  *
 958:FWLIB/src/stm32f4xx_i2c.c **** @verbatim   
 959:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================
 960:FWLIB/src/stm32f4xx_i2c.c ****           ##### Interrupts, events and flags management functions #####
 961:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================
 962:FWLIB/src/stm32f4xx_i2c.c ****     [..]
 963:FWLIB/src/stm32f4xx_i2c.c ****     This section provides functions allowing to configure the I2C Interrupts 
 964:FWLIB/src/stm32f4xx_i2c.c ****     sources and check or clear the flags or pending bits status.
 965:FWLIB/src/stm32f4xx_i2c.c ****     The user should identify which mode will be used in his application to manage 
 966:FWLIB/src/stm32f4xx_i2c.c ****     the communication: Polling mode, Interrupt mode or DMA mode. 
 967:FWLIB/src/stm32f4xx_i2c.c **** 
 968:FWLIB/src/stm32f4xx_i2c.c **** 
 969:FWLIB/src/stm32f4xx_i2c.c ****                 ##### I2C State Monitoring Functions #####                   
 970:FWLIB/src/stm32f4xx_i2c.c ****  =============================================================================== 
 971:FWLIB/src/stm32f4xx_i2c.c ****     [..]  
 972:FWLIB/src/stm32f4xx_i2c.c ****     This I2C driver provides three different ways for I2C state monitoring
 973:FWLIB/src/stm32f4xx_i2c.c ****     depending on the application requirements and constraints:
 974:FWLIB/src/stm32f4xx_i2c.c ****          
 975:FWLIB/src/stm32f4xx_i2c.c ****    
 976:FWLIB/src/stm32f4xx_i2c.c ****      (#) Basic state monitoring (Using I2C_CheckEvent() function)
 977:FWLIB/src/stm32f4xx_i2c.c ****      
 978:FWLIB/src/stm32f4xx_i2c.c ****         It compares the status registers (SR1 and SR2) content to a given event
 979:FWLIB/src/stm32f4xx_i2c.c ****         (can be the combination of one or more flags).
 980:FWLIB/src/stm32f4xx_i2c.c ****         It returns SUCCESS if the current status includes the given flags 
 981:FWLIB/src/stm32f4xx_i2c.c ****         and returns ERROR if one or more flags are missing in the current status.
 982:FWLIB/src/stm32f4xx_i2c.c **** 
 983:FWLIB/src/stm32f4xx_i2c.c ****           (++) When to use
 984:FWLIB/src/stm32f4xx_i2c.c ****              (+++) This function is suitable for most applications as well as for startup 
 985:FWLIB/src/stm32f4xx_i2c.c ****                activity since the events are fully described in the product reference 
 986:FWLIB/src/stm32f4xx_i2c.c ****                manual (RM0090).
 987:FWLIB/src/stm32f4xx_i2c.c ****              (+++) It is also suitable for users who need to define their own events.
 988:FWLIB/src/stm32f4xx_i2c.c **** 
 989:FWLIB/src/stm32f4xx_i2c.c ****           (++) Limitations
 990:FWLIB/src/stm32f4xx_i2c.c ****                If an error occurs (ie. error flags are set besides to the monitored 
 991:FWLIB/src/stm32f4xx_i2c.c ****                flags), the I2C_CheckEvent() function may return SUCCESS despite 
 992:FWLIB/src/stm32f4xx_i2c.c ****                the communication hold or corrupted real state. 
 993:FWLIB/src/stm32f4xx_i2c.c ****                In this case, it is advised to use error interrupts to monitor 
 994:FWLIB/src/stm32f4xx_i2c.c ****                the error events and handle them in the interrupt IRQ handler.
 995:FWLIB/src/stm32f4xx_i2c.c ****          
 996:FWLIB/src/stm32f4xx_i2c.c ****      -@@- For error management, it is advised to use the following functions:
 997:FWLIB/src/stm32f4xx_i2c.c ****         (+@@) I2C_ITConfig() to configure and enable the error interrupts (I2C_IT_ERR).
 998:FWLIB/src/stm32f4xx_i2c.c ****         (+@@) I2Cx_ER_IRQHandler() which is called when the error interrupt occurs.
 999:FWLIB/src/stm32f4xx_i2c.c ****               Where x is the peripheral instance (I2C1, I2C2 ...)
1000:FWLIB/src/stm32f4xx_i2c.c ****         (+@@) I2C_GetFlagStatus() or I2C_GetITStatus()  to be called into the 
1001:FWLIB/src/stm32f4xx_i2c.c ****               I2Cx_ER_IRQHandler() function in order to determine which error occurred.
1002:FWLIB/src/stm32f4xx_i2c.c ****         (+@@) I2C_ClearFlag() or I2C_ClearITPendingBit() and/or I2C_SoftwareResetCmd() 
1003:FWLIB/src/stm32f4xx_i2c.c ****               and/or I2C_GenerateStop() in order to clear the error flag and source 
1004:FWLIB/src/stm32f4xx_i2c.c ****               and return to correct  communication status.
1005:FWLIB/src/stm32f4xx_i2c.c ****              
ARM GAS  /tmp/ccqK3nom.s 			page 42


1006:FWLIB/src/stm32f4xx_i2c.c ****  
1007:FWLIB/src/stm32f4xx_i2c.c ****      (#) Advanced state monitoring (Using the function I2C_GetLastEvent())
1008:FWLIB/src/stm32f4xx_i2c.c **** 
1009:FWLIB/src/stm32f4xx_i2c.c ****         Using the function I2C_GetLastEvent() which returns the image of both status 
1010:FWLIB/src/stm32f4xx_i2c.c ****         registers in a single word (uint32_t) (Status Register 2 value is shifted left 
1011:FWLIB/src/stm32f4xx_i2c.c ****         by 16 bits and concatenated to Status Register 1).
1012:FWLIB/src/stm32f4xx_i2c.c **** 
1013:FWLIB/src/stm32f4xx_i2c.c ****           (++) When to use
1014:FWLIB/src/stm32f4xx_i2c.c ****              (+++) This function is suitable for the same applications above but it 
1015:FWLIB/src/stm32f4xx_i2c.c ****                allows to overcome the mentioned limitation of I2C_GetFlagStatus() 
1016:FWLIB/src/stm32f4xx_i2c.c ****                function.
1017:FWLIB/src/stm32f4xx_i2c.c ****              (+++) The returned value could be compared to events already defined in 
1018:FWLIB/src/stm32f4xx_i2c.c ****                the library (stm32f4xx_i2c.h) or to custom values defined by user.
1019:FWLIB/src/stm32f4xx_i2c.c ****                This function is suitable when multiple flags are monitored at the 
1020:FWLIB/src/stm32f4xx_i2c.c ****                same time.
1021:FWLIB/src/stm32f4xx_i2c.c ****              (+++) At the opposite of I2C_CheckEvent() function, this function allows 
1022:FWLIB/src/stm32f4xx_i2c.c ****                user to choose when an event is accepted (when all events flags are 
1023:FWLIB/src/stm32f4xx_i2c.c ****                set and no other flags are set or just when the needed flags are set 
1024:FWLIB/src/stm32f4xx_i2c.c ****                like I2C_CheckEvent() function.
1025:FWLIB/src/stm32f4xx_i2c.c **** 
1026:FWLIB/src/stm32f4xx_i2c.c ****           (++) Limitations
1027:FWLIB/src/stm32f4xx_i2c.c ****              (+++) User may need to define his own events.
1028:FWLIB/src/stm32f4xx_i2c.c ****              (+++) Same remark concerning the error management is applicable for this 
1029:FWLIB/src/stm32f4xx_i2c.c ****                function if user decides to check only regular communication flags 
1030:FWLIB/src/stm32f4xx_i2c.c ****                (and ignores error flags).
1031:FWLIB/src/stm32f4xx_i2c.c ****       
1032:FWLIB/src/stm32f4xx_i2c.c ****  
1033:FWLIB/src/stm32f4xx_i2c.c ****      (#) Flag-based state monitoring (Using the function I2C_GetFlagStatus())
1034:FWLIB/src/stm32f4xx_i2c.c ****      
1035:FWLIB/src/stm32f4xx_i2c.c ****       Using the function I2C_GetFlagStatus() which simply returns the status of 
1036:FWLIB/src/stm32f4xx_i2c.c ****       one single flag (ie. I2C_FLAG_RXNE ...). 
1037:FWLIB/src/stm32f4xx_i2c.c **** 
1038:FWLIB/src/stm32f4xx_i2c.c ****           (++) When to use
1039:FWLIB/src/stm32f4xx_i2c.c ****              (+++) This function could be used for specific applications or in debug 
1040:FWLIB/src/stm32f4xx_i2c.c ****                phase.
1041:FWLIB/src/stm32f4xx_i2c.c ****              (+++) It is suitable when only one flag checking is needed (most I2C 
1042:FWLIB/src/stm32f4xx_i2c.c ****                events are monitored through multiple flags).
1043:FWLIB/src/stm32f4xx_i2c.c ****           (++) Limitations: 
1044:FWLIB/src/stm32f4xx_i2c.c ****              (+++) When calling this function, the Status register is accessed. 
1045:FWLIB/src/stm32f4xx_i2c.c ****                Some flags are cleared when the status register is accessed. 
1046:FWLIB/src/stm32f4xx_i2c.c ****                So checking the status of one Flag, may clear other ones.
1047:FWLIB/src/stm32f4xx_i2c.c ****              (+++) Function may need to be called twice or more in order to monitor 
1048:FWLIB/src/stm32f4xx_i2c.c ****                one single event.
1049:FWLIB/src/stm32f4xx_i2c.c ****  
1050:FWLIB/src/stm32f4xx_i2c.c ****    For detailed description of Events, please refer to section I2C_Events in 
1051:FWLIB/src/stm32f4xx_i2c.c ****    stm32f4xx_i2c.h file.
1052:FWLIB/src/stm32f4xx_i2c.c ****        
1053:FWLIB/src/stm32f4xx_i2c.c **** @endverbatim
1054:FWLIB/src/stm32f4xx_i2c.c ****   * @{
1055:FWLIB/src/stm32f4xx_i2c.c ****   */
1056:FWLIB/src/stm32f4xx_i2c.c ****    
1057:FWLIB/src/stm32f4xx_i2c.c **** /**
1058:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Reads the specified I2C register and returns its value.
1059:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_Register: specifies the register to read.
1060:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1061:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR1:  CR1 register.
1062:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR2:   CR2 register.
ARM GAS  /tmp/ccqK3nom.s 			page 43


1063:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR1:  OAR1 register.
1064:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR2:  OAR2 register.
1065:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_DR:    DR register.
1066:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR1:   SR1 register.
1067:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR2:   SR2 register.
1068:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CCR:   CCR register.
1069:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_TRISE: TRISE register.
1070:FWLIB/src/stm32f4xx_i2c.c ****   * @retval The value of the read register.
1071:FWLIB/src/stm32f4xx_i2c.c ****   */
1072:FWLIB/src/stm32f4xx_i2c.c **** uint16_t I2C_ReadRegister(I2C_TypeDef* I2Cx, uint8_t I2C_Register)
1073:FWLIB/src/stm32f4xx_i2c.c **** {
 1345              		.loc 1 1073 1 is_stmt 1 view -0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 8
 1348              		@ frame_needed = 0, uses_anonymous_args = 0
 1349              		@ link register save eliminated.
 1350              		.loc 1 1073 1 is_stmt 0 view .LVU364
 1351 0000 82B0     		sub	sp, sp, #8
 1352              	.LCFI5:
 1353              		.cfi_def_cfa_offset 8
1074:FWLIB/src/stm32f4xx_i2c.c ****   __IO uint32_t tmp = 0;
 1354              		.loc 1 1074 3 is_stmt 1 view .LVU365
 1355              		.loc 1 1074 17 is_stmt 0 view .LVU366
 1356 0002 0023     		movs	r3, #0
 1357 0004 0193     		str	r3, [sp, #4]
1075:FWLIB/src/stm32f4xx_i2c.c **** 
1076:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1077:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1358              		.loc 1 1077 3 is_stmt 1 view .LVU367
1078:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_REGISTER(I2C_Register));
 1359              		.loc 1 1078 3 view .LVU368
1079:FWLIB/src/stm32f4xx_i2c.c **** 
1080:FWLIB/src/stm32f4xx_i2c.c ****   tmp = (uint32_t) I2Cx;
 1360              		.loc 1 1080 3 view .LVU369
 1361              		.loc 1 1080 7 is_stmt 0 view .LVU370
 1362 0006 0190     		str	r0, [sp, #4]
1081:FWLIB/src/stm32f4xx_i2c.c ****   tmp += I2C_Register;
 1363              		.loc 1 1081 3 is_stmt 1 view .LVU371
 1364              		.loc 1 1081 7 is_stmt 0 view .LVU372
 1365 0008 019B     		ldr	r3, [sp, #4]
 1366 000a 1944     		add	r1, r1, r3
 1367              	.LVL84:
 1368              		.loc 1 1081 7 view .LVU373
 1369 000c 0191     		str	r1, [sp, #4]
1082:FWLIB/src/stm32f4xx_i2c.c **** 
1083:FWLIB/src/stm32f4xx_i2c.c ****   /* Return the selected register value */
1084:FWLIB/src/stm32f4xx_i2c.c ****   return (*(__IO uint16_t *) tmp);
 1370              		.loc 1 1084 3 is_stmt 1 view .LVU374
 1371              		.loc 1 1084 12 is_stmt 0 view .LVU375
 1372 000e 019B     		ldr	r3, [sp, #4]
 1373              		.loc 1 1084 11 view .LVU376
 1374 0010 1888     		ldrh	r0, [r3]
 1375              	.LVL85:
1085:FWLIB/src/stm32f4xx_i2c.c **** }
 1376              		.loc 1 1085 1 view .LVU377
 1377 0012 02B0     		add	sp, sp, #8
 1378              	.LCFI6:
ARM GAS  /tmp/ccqK3nom.s 			page 44


 1379              		.cfi_def_cfa_offset 0
 1380              		@ sp needed
 1381 0014 7047     		bx	lr
 1382              		.cfi_endproc
 1383              	.LFE150:
 1385              		.section	.text.I2C_ITConfig,"ax",%progbits
 1386              		.align	1
 1387              		.global	I2C_ITConfig
 1388              		.syntax unified
 1389              		.thumb
 1390              		.thumb_func
 1391              		.fpu fpv4-sp-d16
 1393              	I2C_ITConfig:
 1394              	.LVL86:
 1395              	.LFB151:
1086:FWLIB/src/stm32f4xx_i2c.c **** 
1087:FWLIB/src/stm32f4xx_i2c.c **** /**
1088:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C interrupts.
1089:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1090:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the I2C interrupts sources to be enabled or disabled. 
1091:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1092:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BUF: Buffer interrupt mask
1093:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_EVT: Event interrupt mask
1094:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ERR: Error interrupt mask
1095:FWLIB/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the specified I2C interrupts.
1096:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
1097:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
1098:FWLIB/src/stm32f4xx_i2c.c ****   */
1099:FWLIB/src/stm32f4xx_i2c.c **** void I2C_ITConfig(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState)
1100:FWLIB/src/stm32f4xx_i2c.c **** {
 1396              		.loc 1 1100 1 is_stmt 1 view -0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400              		@ link register save eliminated.
1101:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1102:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1401              		.loc 1 1102 3 view .LVU379
1103:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1402              		.loc 1 1103 3 view .LVU380
1104:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CONFIG_IT(I2C_IT));
 1403              		.loc 1 1104 3 view .LVU381
1105:FWLIB/src/stm32f4xx_i2c.c ****   
1106:FWLIB/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1404              		.loc 1 1106 3 view .LVU382
 1405              		.loc 1 1106 6 is_stmt 0 view .LVU383
 1406 0000 1AB1     		cbz	r2, .L92
1107:FWLIB/src/stm32f4xx_i2c.c ****   {
1108:FWLIB/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C interrupts */
1109:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_IT;
 1407              		.loc 1 1109 5 is_stmt 1 view .LVU384
 1408              		.loc 1 1109 15 is_stmt 0 view .LVU385
 1409 0002 8388     		ldrh	r3, [r0, #4]
 1410 0004 1943     		orrs	r1, r1, r3
 1411              	.LVL87:
 1412              		.loc 1 1109 15 view .LVU386
 1413 0006 8180     		strh	r1, [r0, #4]	@ movhi
ARM GAS  /tmp/ccqK3nom.s 			page 45


 1414 0008 7047     		bx	lr
 1415              	.LVL88:
 1416              	.L92:
1110:FWLIB/src/stm32f4xx_i2c.c ****   }
1111:FWLIB/src/stm32f4xx_i2c.c ****   else
1112:FWLIB/src/stm32f4xx_i2c.c ****   {
1113:FWLIB/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C interrupts */
1114:FWLIB/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~I2C_IT;
 1417              		.loc 1 1114 5 is_stmt 1 view .LVU387
 1418              		.loc 1 1114 15 is_stmt 0 view .LVU388
 1419 000a 8388     		ldrh	r3, [r0, #4]
 1420 000c 23EA0101 		bic	r1, r3, r1
 1421              	.LVL89:
 1422              		.loc 1 1114 15 view .LVU389
 1423 0010 8180     		strh	r1, [r0, #4]	@ movhi
1115:FWLIB/src/stm32f4xx_i2c.c ****   }
1116:FWLIB/src/stm32f4xx_i2c.c **** }
 1424              		.loc 1 1116 1 view .LVU390
 1425 0012 7047     		bx	lr
 1426              		.cfi_endproc
 1427              	.LFE151:
 1429              		.section	.text.I2C_CheckEvent,"ax",%progbits
 1430              		.align	1
 1431              		.global	I2C_CheckEvent
 1432              		.syntax unified
 1433              		.thumb
 1434              		.thumb_func
 1435              		.fpu fpv4-sp-d16
 1437              	I2C_CheckEvent:
 1438              	.LVL90:
 1439              	.LFB152:
1117:FWLIB/src/stm32f4xx_i2c.c **** 
1118:FWLIB/src/stm32f4xx_i2c.c **** /*
1119:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================
1120:FWLIB/src/stm32f4xx_i2c.c ****                           1. Basic state monitoring                    
1121:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================  
1122:FWLIB/src/stm32f4xx_i2c.c ****  */
1123:FWLIB/src/stm32f4xx_i2c.c **** 
1124:FWLIB/src/stm32f4xx_i2c.c **** /**
1125:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the last I2Cx Event is equal to the one passed
1126:FWLIB/src/stm32f4xx_i2c.c ****   *         as parameter.
1127:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1128:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_EVENT: specifies the event to be checked. 
1129:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1130:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED: EV1
1131:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED: EV1
1132:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED: EV1
1133:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED: EV1
1134:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED: EV1
1135:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_RECEIVED: EV2
1136:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_DUALF): EV2
1137:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_GENCALL): EV2
1138:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_TRANSMITTED: EV3
1139:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_DUALF): EV3
1140:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_GENCALL): EV3
1141:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_ACK_FAILURE: EV3_2
1142:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_STOP_DETECTED: EV4
ARM GAS  /tmp/ccqK3nom.s 			page 46


1143:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_SELECT: EV5
1144:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED: EV6     
1145:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED: EV6
1146:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_RECEIVED: EV7
1147:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTING: EV8
1148:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTED: EV8_2
1149:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_ADDRESS10: EV9
1150:FWLIB/src/stm32f4xx_i2c.c ****   *     
1151:FWLIB/src/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1152:FWLIB/src/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1153:FWLIB/src/stm32f4xx_i2c.c ****   *    
1154:FWLIB/src/stm32f4xx_i2c.c ****   * @retval An ErrorStatus enumeration value:
1155:FWLIB/src/stm32f4xx_i2c.c ****   *           - SUCCESS: Last event is equal to the I2C_EVENT
1156:FWLIB/src/stm32f4xx_i2c.c ****   *           - ERROR: Last event is different from the I2C_EVENT
1157:FWLIB/src/stm32f4xx_i2c.c ****   */
1158:FWLIB/src/stm32f4xx_i2c.c **** ErrorStatus I2C_CheckEvent(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT)
1159:FWLIB/src/stm32f4xx_i2c.c **** {
 1440              		.loc 1 1159 1 is_stmt 1 view -0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 0
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
 1444              		@ link register save eliminated.
1160:FWLIB/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 1445              		.loc 1 1160 3 view .LVU392
1161:FWLIB/src/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
 1446              		.loc 1 1161 3 view .LVU393
1162:FWLIB/src/stm32f4xx_i2c.c ****   ErrorStatus status = ERROR;
 1447              		.loc 1 1162 3 view .LVU394
1163:FWLIB/src/stm32f4xx_i2c.c **** 
1164:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1165:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1448              		.loc 1 1165 3 view .LVU395
1166:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_EVENT(I2C_EVENT));
 1449              		.loc 1 1166 3 view .LVU396
1167:FWLIB/src/stm32f4xx_i2c.c **** 
1168:FWLIB/src/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1169:FWLIB/src/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 1450              		.loc 1 1169 3 view .LVU397
 1451              		.loc 1 1169 15 is_stmt 0 view .LVU398
 1452 0000 838A     		ldrh	r3, [r0, #20]
 1453              	.LVL91:
1170:FWLIB/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 1454              		.loc 1 1170 3 is_stmt 1 view .LVU399
 1455              		.loc 1 1170 15 is_stmt 0 view .LVU400
 1456 0002 028B     		ldrh	r2, [r0, #24]
 1457              	.LVL92:
1171:FWLIB/src/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
 1458              		.loc 1 1171 3 is_stmt 1 view .LVU401
1172:FWLIB/src/stm32f4xx_i2c.c **** 
1173:FWLIB/src/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1174:FWLIB/src/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 1459              		.loc 1 1174 3 view .LVU402
 1460              		.loc 1 1174 22 is_stmt 0 view .LVU403
 1461 0004 43EA0243 		orr	r3, r3, r2, lsl #16
 1462              	.LVL93:
 1463              		.loc 1 1174 13 view .LVU404
 1464 0008 23F07F43 		bic	r3, r3, #-16777216
ARM GAS  /tmp/ccqK3nom.s 			page 47


 1465              	.LVL94:
1175:FWLIB/src/stm32f4xx_i2c.c **** 
1176:FWLIB/src/stm32f4xx_i2c.c ****   /* Check whether the last event contains the I2C_EVENT */
1177:FWLIB/src/stm32f4xx_i2c.c ****   if ((lastevent & I2C_EVENT) == I2C_EVENT)
 1466              		.loc 1 1177 3 is_stmt 1 view .LVU405
 1467              		.loc 1 1177 6 is_stmt 0 view .LVU406
 1468 000c 31EA0303 		bics	r3, r1, r3
 1469              	.LVL95:
 1470              		.loc 1 1177 6 view .LVU407
 1471 0010 01D0     		beq	.L97
1178:FWLIB/src/stm32f4xx_i2c.c ****   {
1179:FWLIB/src/stm32f4xx_i2c.c ****     /* SUCCESS: last event is equal to I2C_EVENT */
1180:FWLIB/src/stm32f4xx_i2c.c ****     status = SUCCESS;
1181:FWLIB/src/stm32f4xx_i2c.c ****   }
1182:FWLIB/src/stm32f4xx_i2c.c ****   else
1183:FWLIB/src/stm32f4xx_i2c.c ****   {
1184:FWLIB/src/stm32f4xx_i2c.c ****     /* ERROR: last event is different from I2C_EVENT */
1185:FWLIB/src/stm32f4xx_i2c.c ****     status = ERROR;
 1472              		.loc 1 1185 12 view .LVU408
 1473 0012 0020     		movs	r0, #0
 1474              	.LVL96:
1186:FWLIB/src/stm32f4xx_i2c.c ****   }
1187:FWLIB/src/stm32f4xx_i2c.c ****   /* Return status */
1188:FWLIB/src/stm32f4xx_i2c.c ****   return status;
 1475              		.loc 1 1188 3 is_stmt 1 view .LVU409
1189:FWLIB/src/stm32f4xx_i2c.c **** }
 1476              		.loc 1 1189 1 is_stmt 0 view .LVU410
 1477 0014 7047     		bx	lr
 1478              	.LVL97:
 1479              	.L97:
1180:FWLIB/src/stm32f4xx_i2c.c ****   }
 1480              		.loc 1 1180 12 view .LVU411
 1481 0016 0120     		movs	r0, #1
 1482              	.LVL98:
1180:FWLIB/src/stm32f4xx_i2c.c ****   }
 1483              		.loc 1 1180 12 view .LVU412
 1484 0018 7047     		bx	lr
 1485              		.cfi_endproc
 1486              	.LFE152:
 1488              		.section	.text.I2C_GetLastEvent,"ax",%progbits
 1489              		.align	1
 1490              		.global	I2C_GetLastEvent
 1491              		.syntax unified
 1492              		.thumb
 1493              		.thumb_func
 1494              		.fpu fpv4-sp-d16
 1496              	I2C_GetLastEvent:
 1497              	.LVL99:
 1498              	.LFB153:
1190:FWLIB/src/stm32f4xx_i2c.c **** 
1191:FWLIB/src/stm32f4xx_i2c.c **** /*
1192:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================
1193:FWLIB/src/stm32f4xx_i2c.c ****                           2. Advanced state monitoring                   
1194:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================  
1195:FWLIB/src/stm32f4xx_i2c.c ****  */
1196:FWLIB/src/stm32f4xx_i2c.c **** 
1197:FWLIB/src/stm32f4xx_i2c.c **** /**
ARM GAS  /tmp/ccqK3nom.s 			page 48


1198:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Returns the last I2Cx Event.
1199:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1200:FWLIB/src/stm32f4xx_i2c.c ****   *     
1201:FWLIB/src/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1202:FWLIB/src/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1203:FWLIB/src/stm32f4xx_i2c.c ****   *    
1204:FWLIB/src/stm32f4xx_i2c.c ****   * @retval The last event
1205:FWLIB/src/stm32f4xx_i2c.c ****   */
1206:FWLIB/src/stm32f4xx_i2c.c **** uint32_t I2C_GetLastEvent(I2C_TypeDef* I2Cx)
1207:FWLIB/src/stm32f4xx_i2c.c **** {
 1499              		.loc 1 1207 1 is_stmt 1 view -0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 0
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503              		@ link register save eliminated.
1208:FWLIB/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 1504              		.loc 1 1208 3 view .LVU414
1209:FWLIB/src/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
 1505              		.loc 1 1209 3 view .LVU415
1210:FWLIB/src/stm32f4xx_i2c.c **** 
1211:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1212:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1506              		.loc 1 1212 3 view .LVU416
1213:FWLIB/src/stm32f4xx_i2c.c **** 
1214:FWLIB/src/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1215:FWLIB/src/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 1507              		.loc 1 1215 3 view .LVU417
 1508              		.loc 1 1215 15 is_stmt 0 view .LVU418
 1509 0000 838A     		ldrh	r3, [r0, #20]
 1510              	.LVL100:
1216:FWLIB/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 1511              		.loc 1 1216 3 is_stmt 1 view .LVU419
 1512              		.loc 1 1216 15 is_stmt 0 view .LVU420
 1513 0002 008B     		ldrh	r0, [r0, #24]
 1514              	.LVL101:
1217:FWLIB/src/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
 1515              		.loc 1 1217 3 is_stmt 1 view .LVU421
1218:FWLIB/src/stm32f4xx_i2c.c **** 
1219:FWLIB/src/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1220:FWLIB/src/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 1516              		.loc 1 1220 3 view .LVU422
 1517              		.loc 1 1220 22 is_stmt 0 view .LVU423
 1518 0004 43EA0040 		orr	r0, r3, r0, lsl #16
 1519              	.LVL102:
1221:FWLIB/src/stm32f4xx_i2c.c **** 
1222:FWLIB/src/stm32f4xx_i2c.c ****   /* Return status */
1223:FWLIB/src/stm32f4xx_i2c.c ****   return lastevent;
 1520              		.loc 1 1223 3 is_stmt 1 view .LVU424
1224:FWLIB/src/stm32f4xx_i2c.c **** }
 1521              		.loc 1 1224 1 is_stmt 0 view .LVU425
 1522 0008 20F07F40 		bic	r0, r0, #-16777216
 1523              	.LVL103:
 1524              		.loc 1 1224 1 view .LVU426
 1525 000c 7047     		bx	lr
 1526              		.cfi_endproc
 1527              	.LFE153:
 1529              		.section	.text.I2C_GetFlagStatus,"ax",%progbits
ARM GAS  /tmp/ccqK3nom.s 			page 49


 1530              		.align	1
 1531              		.global	I2C_GetFlagStatus
 1532              		.syntax unified
 1533              		.thumb
 1534              		.thumb_func
 1535              		.fpu fpv4-sp-d16
 1537              	I2C_GetFlagStatus:
 1538              	.LVL104:
 1539              	.LFB154:
1225:FWLIB/src/stm32f4xx_i2c.c **** 
1226:FWLIB/src/stm32f4xx_i2c.c **** /*
1227:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================
1228:FWLIB/src/stm32f4xx_i2c.c ****                           3. Flag-based state monitoring                   
1229:FWLIB/src/stm32f4xx_i2c.c ****  ===============================================================================  
1230:FWLIB/src/stm32f4xx_i2c.c ****  */
1231:FWLIB/src/stm32f4xx_i2c.c **** 
1232:FWLIB/src/stm32f4xx_i2c.c **** /**
1233:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C flag is set or not.
1234:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1235:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to check. 
1236:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1237:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_DUALF: Dual flag (Slave mode)
1238:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBHOST: SMBus host header (Slave mode)
1239:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBDEFAULT: SMBus default header (Slave mode)
1240:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_GENCALL: General call header flag (Slave mode)
1241:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TRA: Transmitter/Receiver flag
1242:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BUSY: Bus busy flag
1243:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_MSL: Master/Slave flag
1244:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1245:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1246:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1247:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1248:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1249:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1250:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1251:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TXE: Data register empty flag (Transmitter)
1252:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_RXNE: Data register not empty (Receiver) flag
1253:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_STOPF: Stop detection flag (Slave mode)
1254:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADD10: 10-bit header sent flag (Master mode)
1255:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BTF: Byte transfer finished flag
1256:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADDR: Address sent flag (Master mode) "ADSL"
1257:FWLIB/src/stm32f4xx_i2c.c ****   *                                Address matched flag (Slave mode)"ENDAD"
1258:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SB: Start bit flag (Master mode)
1259:FWLIB/src/stm32f4xx_i2c.c ****   * @retval The new state of I2C_FLAG (SET or RESET).
1260:FWLIB/src/stm32f4xx_i2c.c ****   */
1261:FWLIB/src/stm32f4xx_i2c.c **** FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1262:FWLIB/src/stm32f4xx_i2c.c **** {
 1540              		.loc 1 1262 1 is_stmt 1 view -0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 8
 1543              		@ frame_needed = 0, uses_anonymous_args = 0
 1544              		@ link register save eliminated.
 1545              		.loc 1 1262 1 is_stmt 0 view .LVU428
 1546 0000 82B0     		sub	sp, sp, #8
 1547              	.LCFI7:
 1548              		.cfi_def_cfa_offset 8
1263:FWLIB/src/stm32f4xx_i2c.c ****   FlagStatus bitstatus = RESET;
ARM GAS  /tmp/ccqK3nom.s 			page 50


 1549              		.loc 1 1263 3 is_stmt 1 view .LVU429
 1550              	.LVL105:
1264:FWLIB/src/stm32f4xx_i2c.c ****   __IO uint32_t i2creg = 0, i2cxbase = 0;
 1551              		.loc 1 1264 3 view .LVU430
 1552              		.loc 1 1264 17 is_stmt 0 view .LVU431
 1553 0002 0023     		movs	r3, #0
 1554 0004 0193     		str	r3, [sp, #4]
 1555              		.loc 1 1264 29 view .LVU432
 1556 0006 0093     		str	r3, [sp]
1265:FWLIB/src/stm32f4xx_i2c.c **** 
1266:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1267:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1557              		.loc 1 1267 3 is_stmt 1 view .LVU433
1268:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_FLAG(I2C_FLAG));
 1558              		.loc 1 1268 3 view .LVU434
1269:FWLIB/src/stm32f4xx_i2c.c **** 
1270:FWLIB/src/stm32f4xx_i2c.c ****   /* Get the I2Cx peripheral base address */
1271:FWLIB/src/stm32f4xx_i2c.c ****   i2cxbase = (uint32_t)I2Cx;
 1559              		.loc 1 1271 3 view .LVU435
 1560              		.loc 1 1271 12 is_stmt 0 view .LVU436
 1561 0008 0090     		str	r0, [sp]
1272:FWLIB/src/stm32f4xx_i2c.c ****   
1273:FWLIB/src/stm32f4xx_i2c.c ****   /* Read flag register index */
1274:FWLIB/src/stm32f4xx_i2c.c ****   i2creg = I2C_FLAG >> 28;
 1562              		.loc 1 1274 3 is_stmt 1 view .LVU437
 1563              		.loc 1 1274 21 is_stmt 0 view .LVU438
 1564 000a 0B0F     		lsrs	r3, r1, #28
 1565              		.loc 1 1274 10 view .LVU439
 1566 000c 0193     		str	r3, [sp, #4]
1275:FWLIB/src/stm32f4xx_i2c.c ****   
1276:FWLIB/src/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1277:FWLIB/src/stm32f4xx_i2c.c ****   I2C_FLAG &= FLAG_MASK;
 1567              		.loc 1 1277 3 is_stmt 1 view .LVU440
 1568              		.loc 1 1277 12 is_stmt 0 view .LVU441
 1569 000e 21F07F41 		bic	r1, r1, #-16777216
 1570              	.LVL106:
1278:FWLIB/src/stm32f4xx_i2c.c ****   
1279:FWLIB/src/stm32f4xx_i2c.c ****   if(i2creg != 0)
 1571              		.loc 1 1279 3 is_stmt 1 view .LVU442
 1572              		.loc 1 1279 13 is_stmt 0 view .LVU443
 1573 0012 019B     		ldr	r3, [sp, #4]
 1574              		.loc 1 1279 5 view .LVU444
 1575 0014 4BB1     		cbz	r3, .L100
1280:FWLIB/src/stm32f4xx_i2c.c ****   {
1281:FWLIB/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR1 register address */
1282:FWLIB/src/stm32f4xx_i2c.c ****     i2cxbase += 0x14;
 1576              		.loc 1 1282 5 is_stmt 1 view .LVU445
 1577              		.loc 1 1282 14 is_stmt 0 view .LVU446
 1578 0016 009B     		ldr	r3, [sp]
 1579 0018 1433     		adds	r3, r3, #20
 1580 001a 0093     		str	r3, [sp]
 1581              	.L101:
1283:FWLIB/src/stm32f4xx_i2c.c ****   }
1284:FWLIB/src/stm32f4xx_i2c.c ****   else
1285:FWLIB/src/stm32f4xx_i2c.c ****   {
1286:FWLIB/src/stm32f4xx_i2c.c ****     /* Flag in I2Cx SR2 Register */
1287:FWLIB/src/stm32f4xx_i2c.c ****     I2C_FLAG = (uint32_t)(I2C_FLAG >> 16);
ARM GAS  /tmp/ccqK3nom.s 			page 51


1288:FWLIB/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR2 register address */
1289:FWLIB/src/stm32f4xx_i2c.c ****     i2cxbase += 0x18;
1290:FWLIB/src/stm32f4xx_i2c.c ****   }
1291:FWLIB/src/stm32f4xx_i2c.c ****   
1292:FWLIB/src/stm32f4xx_i2c.c ****   if(((*(__IO uint32_t *)i2cxbase) & I2C_FLAG) != (uint32_t)RESET)
 1582              		.loc 1 1292 3 is_stmt 1 view .LVU447
 1583              		.loc 1 1292 9 is_stmt 0 view .LVU448
 1584 001c 009B     		ldr	r3, [sp]
 1585              		.loc 1 1292 8 view .LVU449
 1586 001e 1B68     		ldr	r3, [r3]
 1587              		.loc 1 1292 5 view .LVU450
 1588 0020 0B42     		tst	r3, r1
 1589 0022 07D0     		beq	.L103
1293:FWLIB/src/stm32f4xx_i2c.c ****   {
1294:FWLIB/src/stm32f4xx_i2c.c ****     /* I2C_FLAG is set */
1295:FWLIB/src/stm32f4xx_i2c.c ****     bitstatus = SET;
 1590              		.loc 1 1295 15 view .LVU451
 1591 0024 0120     		movs	r0, #1
 1592              	.LVL107:
 1593              	.L102:
1296:FWLIB/src/stm32f4xx_i2c.c ****   }
1297:FWLIB/src/stm32f4xx_i2c.c ****   else
1298:FWLIB/src/stm32f4xx_i2c.c ****   {
1299:FWLIB/src/stm32f4xx_i2c.c ****     /* I2C_FLAG is reset */
1300:FWLIB/src/stm32f4xx_i2c.c ****     bitstatus = RESET;
1301:FWLIB/src/stm32f4xx_i2c.c ****   }
1302:FWLIB/src/stm32f4xx_i2c.c ****   
1303:FWLIB/src/stm32f4xx_i2c.c ****   /* Return the I2C_FLAG status */
1304:FWLIB/src/stm32f4xx_i2c.c ****   return  bitstatus;
 1594              		.loc 1 1304 3 is_stmt 1 view .LVU452
1305:FWLIB/src/stm32f4xx_i2c.c **** }
 1595              		.loc 1 1305 1 is_stmt 0 view .LVU453
 1596 0026 02B0     		add	sp, sp, #8
 1597              	.LCFI8:
 1598              		.cfi_remember_state
 1599              		.cfi_def_cfa_offset 0
 1600              		@ sp needed
 1601 0028 7047     		bx	lr
 1602              	.LVL108:
 1603              	.L100:
 1604              	.LCFI9:
 1605              		.cfi_restore_state
1287:FWLIB/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR2 register address */
 1606              		.loc 1 1287 5 is_stmt 1 view .LVU454
1287:FWLIB/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR2 register address */
 1607              		.loc 1 1287 14 is_stmt 0 view .LVU455
 1608 002a 090C     		lsrs	r1, r1, #16
 1609              	.LVL109:
1289:FWLIB/src/stm32f4xx_i2c.c ****   }
 1610              		.loc 1 1289 5 is_stmt 1 view .LVU456
1289:FWLIB/src/stm32f4xx_i2c.c ****   }
 1611              		.loc 1 1289 14 is_stmt 0 view .LVU457
 1612 002c 009B     		ldr	r3, [sp]
 1613 002e 1833     		adds	r3, r3, #24
 1614 0030 0093     		str	r3, [sp]
 1615 0032 F3E7     		b	.L101
 1616              	.L103:
ARM GAS  /tmp/ccqK3nom.s 			page 52


1300:FWLIB/src/stm32f4xx_i2c.c ****   }
 1617              		.loc 1 1300 15 view .LVU458
 1618 0034 0020     		movs	r0, #0
 1619              	.LVL110:
1300:FWLIB/src/stm32f4xx_i2c.c ****   }
 1620              		.loc 1 1300 15 view .LVU459
 1621 0036 F6E7     		b	.L102
 1622              		.cfi_endproc
 1623              	.LFE154:
 1625              		.section	.text.I2C_ClearFlag,"ax",%progbits
 1626              		.align	1
 1627              		.global	I2C_ClearFlag
 1628              		.syntax unified
 1629              		.thumb
 1630              		.thumb_func
 1631              		.fpu fpv4-sp-d16
 1633              	I2C_ClearFlag:
 1634              	.LVL111:
 1635              	.LFB155:
1306:FWLIB/src/stm32f4xx_i2c.c **** 
1307:FWLIB/src/stm32f4xx_i2c.c **** /**
1308:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's pending flags.
1309:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1310:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to clear. 
1311:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1312:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1313:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1314:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1315:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1316:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1317:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1318:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1319:FWLIB/src/stm32f4xx_i2c.c ****   *   
1320:FWLIB/src/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1321:FWLIB/src/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetFlagStatus()) followed by a write operation 
1322:FWLIB/src/stm32f4xx_i2c.c ****   *          to I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1323:FWLIB/src/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1324:FWLIB/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetFlagStatus()) followed by writing the 
1325:FWLIB/src/stm32f4xx_i2c.c ****   *          second byte of the address in DR register.
1326:FWLIB/src/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1327:FWLIB/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetFlagStatus()) followed by a 
1328:FWLIB/src/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1329:FWLIB/src/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1330:FWLIB/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetFlagStatus()) followed by a read operation to 
1331:FWLIB/src/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1332:FWLIB/src/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared software sequence: a read operation to I2C_SR1
1333:FWLIB/src/stm32f4xx_i2c.c ****   *          register (I2C_GetFlagStatus()) followed by a write operation to I2C_DR
1334:FWLIB/src/stm32f4xx_i2c.c ****   *          register (I2C_SendData()).
1335:FWLIB/src/stm32f4xx_i2c.c ****   *  
1336:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
1337:FWLIB/src/stm32f4xx_i2c.c ****   */
1338:FWLIB/src/stm32f4xx_i2c.c **** void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1339:FWLIB/src/stm32f4xx_i2c.c **** {
 1636              		.loc 1 1339 1 is_stmt 1 view -0
 1637              		.cfi_startproc
 1638              		@ args = 0, pretend = 0, frame = 0
 1639              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccqK3nom.s 			page 53


 1640              		@ link register save eliminated.
1340:FWLIB/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
 1641              		.loc 1 1340 3 view .LVU461
1341:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1342:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1642              		.loc 1 1342 3 view .LVU462
1343:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_FLAG(I2C_FLAG));
 1643              		.loc 1 1343 3 view .LVU463
1344:FWLIB/src/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1345:FWLIB/src/stm32f4xx_i2c.c ****   flagpos = I2C_FLAG & FLAG_MASK;
 1644              		.loc 1 1345 3 view .LVU464
 1645              		.loc 1 1345 11 is_stmt 0 view .LVU465
 1646 0000 21F07F41 		bic	r1, r1, #-16777216
 1647              	.LVL112:
1346:FWLIB/src/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1347:FWLIB/src/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 1648              		.loc 1 1347 3 is_stmt 1 view .LVU466
 1649              		.loc 1 1347 15 is_stmt 0 view .LVU467
 1650 0004 C943     		mvns	r1, r1
 1651              	.LVL113:
 1652              		.loc 1 1347 15 view .LVU468
 1653 0006 89B2     		uxth	r1, r1
 1654              	.LVL114:
 1655              		.loc 1 1347 13 view .LVU469
 1656 0008 8182     		strh	r1, [r0, #20]	@ movhi
1348:FWLIB/src/stm32f4xx_i2c.c **** }
 1657              		.loc 1 1348 1 view .LVU470
 1658 000a 7047     		bx	lr
 1659              		.cfi_endproc
 1660              	.LFE155:
 1662              		.section	.text.I2C_GetITStatus,"ax",%progbits
 1663              		.align	1
 1664              		.global	I2C_GetITStatus
 1665              		.syntax unified
 1666              		.thumb
 1667              		.thumb_func
 1668              		.fpu fpv4-sp-d16
 1670              	I2C_GetITStatus:
 1671              	.LVL115:
 1672              	.LFB156:
1349:FWLIB/src/stm32f4xx_i2c.c **** 
1350:FWLIB/src/stm32f4xx_i2c.c **** /**
1351:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C interrupt has occurred or not.
1352:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1353:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt source to check. 
1354:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1355:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert flag
1356:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error flag
1357:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception flag
1358:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun flag (Slave mode)
1359:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure flag
1360:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost flag (Master mode)
1361:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error flag
1362:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TXE: Data register empty flag (Transmitter)
1363:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_RXNE: Data register not empty (Receiver) flag
1364:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_STOPF: Stop detection flag (Slave mode)
1365:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADD10: 10-bit header sent flag (Master mode)
ARM GAS  /tmp/ccqK3nom.s 			page 54


1366:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BTF: Byte transfer finished flag
1367:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADDR: Address sent flag (Master mode) "ADSL"
1368:FWLIB/src/stm32f4xx_i2c.c ****   *                              Address matched flag (Slave mode)"ENDAD"
1369:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SB: Start bit flag (Master mode)
1370:FWLIB/src/stm32f4xx_i2c.c ****   * @retval The new state of I2C_IT (SET or RESET).
1371:FWLIB/src/stm32f4xx_i2c.c ****   */
1372:FWLIB/src/stm32f4xx_i2c.c **** ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1373:FWLIB/src/stm32f4xx_i2c.c **** {
 1673              		.loc 1 1373 1 is_stmt 1 view -0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
1374:FWLIB/src/stm32f4xx_i2c.c ****   ITStatus bitstatus = RESET;
 1678              		.loc 1 1374 3 view .LVU472
1375:FWLIB/src/stm32f4xx_i2c.c ****   uint32_t enablestatus = 0;
 1679              		.loc 1 1375 3 view .LVU473
1376:FWLIB/src/stm32f4xx_i2c.c **** 
1377:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1378:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1680              		.loc 1 1378 3 view .LVU474
1379:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_IT(I2C_IT));
 1681              		.loc 1 1379 3 view .LVU475
1380:FWLIB/src/stm32f4xx_i2c.c **** 
1381:FWLIB/src/stm32f4xx_i2c.c ****   /* Check if the interrupt source is enabled or not */
1382:FWLIB/src/stm32f4xx_i2c.c ****   enablestatus = (uint32_t)(((I2C_IT & ITEN_MASK) >> 16) & (I2Cx->CR2)) ;
 1682              		.loc 1 1382 3 view .LVU476
 1683              		.loc 1 1382 65 is_stmt 0 view .LVU477
 1684 0000 8388     		ldrh	r3, [r0, #4]
 1685              		.loc 1 1382 18 view .LVU478
 1686 0002 03EA1143 		and	r3, r3, r1, lsr #16
 1687              		.loc 1 1382 16 view .LVU479
 1688 0006 03F4E063 		and	r3, r3, #1792
 1689              	.LVL116:
1383:FWLIB/src/stm32f4xx_i2c.c ****   
1384:FWLIB/src/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1385:FWLIB/src/stm32f4xx_i2c.c ****   I2C_IT &= FLAG_MASK;
 1690              		.loc 1 1385 3 is_stmt 1 view .LVU480
1386:FWLIB/src/stm32f4xx_i2c.c **** 
1387:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the status of the specified I2C flag */
1388:FWLIB/src/stm32f4xx_i2c.c ****   if (((I2Cx->SR1 & I2C_IT) != (uint32_t)RESET) && enablestatus)
 1691              		.loc 1 1388 3 view .LVU481
 1692              		.loc 1 1388 13 is_stmt 0 view .LVU482
 1693 000a 828A     		ldrh	r2, [r0, #20]
 1694              		.loc 1 1388 6 view .LVU483
 1695 000c 1142     		tst	r1, r2
 1696 000e 02D0     		beq	.L108
 1697              		.loc 1 1388 49 discriminator 1 view .LVU484
 1698 0010 1BB9     		cbnz	r3, .L109
1389:FWLIB/src/stm32f4xx_i2c.c ****   {
1390:FWLIB/src/stm32f4xx_i2c.c ****     /* I2C_IT is set */
1391:FWLIB/src/stm32f4xx_i2c.c ****     bitstatus = SET;
1392:FWLIB/src/stm32f4xx_i2c.c ****   }
1393:FWLIB/src/stm32f4xx_i2c.c ****   else
1394:FWLIB/src/stm32f4xx_i2c.c ****   {
1395:FWLIB/src/stm32f4xx_i2c.c ****     /* I2C_IT is reset */
1396:FWLIB/src/stm32f4xx_i2c.c ****     bitstatus = RESET;
ARM GAS  /tmp/ccqK3nom.s 			page 55


 1699              		.loc 1 1396 15 view .LVU485
 1700 0012 0020     		movs	r0, #0
 1701              	.LVL117:
 1702              		.loc 1 1396 15 view .LVU486
 1703 0014 7047     		bx	lr
 1704              	.LVL118:
 1705              	.L108:
 1706              		.loc 1 1396 15 view .LVU487
 1707 0016 0020     		movs	r0, #0
 1708              	.LVL119:
 1709              		.loc 1 1396 15 view .LVU488
 1710 0018 7047     		bx	lr
 1711              	.LVL120:
 1712              	.L109:
1391:FWLIB/src/stm32f4xx_i2c.c ****   }
 1713              		.loc 1 1391 15 view .LVU489
 1714 001a 0120     		movs	r0, #1
 1715              	.LVL121:
1397:FWLIB/src/stm32f4xx_i2c.c ****   }
1398:FWLIB/src/stm32f4xx_i2c.c ****   /* Return the I2C_IT status */
1399:FWLIB/src/stm32f4xx_i2c.c ****   return  bitstatus;
 1716              		.loc 1 1399 3 is_stmt 1 view .LVU490
1400:FWLIB/src/stm32f4xx_i2c.c **** }
 1717              		.loc 1 1400 1 is_stmt 0 view .LVU491
 1718 001c 7047     		bx	lr
 1719              		.cfi_endproc
 1720              	.LFE156:
 1722              		.section	.text.I2C_ClearITPendingBit,"ax",%progbits
 1723              		.align	1
 1724              		.global	I2C_ClearITPendingBit
 1725              		.syntax unified
 1726              		.thumb
 1727              		.thumb_func
 1728              		.fpu fpv4-sp-d16
 1730              	I2C_ClearITPendingBit:
 1731              	.LVL122:
 1732              	.LFB157:
1401:FWLIB/src/stm32f4xx_i2c.c **** 
1402:FWLIB/src/stm32f4xx_i2c.c **** /**
1403:FWLIB/src/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's interrupt pending bits.
1404:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1405:FWLIB/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt pending bit to clear. 
1406:FWLIB/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1407:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert interrupt
1408:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error interrupt
1409:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception  interrupt
1410:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun interrupt (Slave mode)
1411:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure interrupt
1412:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost interrupt (Master mode)
1413:FWLIB/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error interrupt
1414:FWLIB/src/stm32f4xx_i2c.c ****   * 
1415:FWLIB/src/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1416:FWLIB/src/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1417:FWLIB/src/stm32f4xx_i2c.c ****   *          I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1418:FWLIB/src/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1419:FWLIB/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetITStatus()) followed by writing the second 
1420:FWLIB/src/stm32f4xx_i2c.c ****   *          byte of the address in I2C_DR register.
ARM GAS  /tmp/ccqK3nom.s 			page 56


1421:FWLIB/src/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1422:FWLIB/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetITStatus()) followed by a 
1423:FWLIB/src/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1424:FWLIB/src/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1425:FWLIB/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a read operation to 
1426:FWLIB/src/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1427:FWLIB/src/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared by software sequence: a read operation to 
1428:FWLIB/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1429:FWLIB/src/stm32f4xx_i2c.c ****   *          I2C_DR register (I2C_SendData()).
1430:FWLIB/src/stm32f4xx_i2c.c ****   * @retval None
1431:FWLIB/src/stm32f4xx_i2c.c ****   */
1432:FWLIB/src/stm32f4xx_i2c.c **** void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1433:FWLIB/src/stm32f4xx_i2c.c **** {
 1733              		.loc 1 1433 1 is_stmt 1 view -0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 0
 1736              		@ frame_needed = 0, uses_anonymous_args = 0
 1737              		@ link register save eliminated.
1434:FWLIB/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
 1738              		.loc 1 1434 3 view .LVU493
1435:FWLIB/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1436:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1739              		.loc 1 1436 3 view .LVU494
1437:FWLIB/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_IT(I2C_IT));
 1740              		.loc 1 1437 3 view .LVU495
1438:FWLIB/src/stm32f4xx_i2c.c **** 
1439:FWLIB/src/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1440:FWLIB/src/stm32f4xx_i2c.c ****   flagpos = I2C_IT & FLAG_MASK;
 1741              		.loc 1 1440 3 view .LVU496
 1742              		.loc 1 1440 11 is_stmt 0 view .LVU497
 1743 0000 21F07F41 		bic	r1, r1, #-16777216
 1744              	.LVL123:
1441:FWLIB/src/stm32f4xx_i2c.c **** 
1442:FWLIB/src/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1443:FWLIB/src/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 1745              		.loc 1 1443 3 is_stmt 1 view .LVU498
 1746              		.loc 1 1443 15 is_stmt 0 view .LVU499
 1747 0004 C943     		mvns	r1, r1
 1748              	.LVL124:
 1749              		.loc 1 1443 15 view .LVU500
 1750 0006 89B2     		uxth	r1, r1
 1751              	.LVL125:
 1752              		.loc 1 1443 13 view .LVU501
 1753 0008 8182     		strh	r1, [r0, #20]	@ movhi
1444:FWLIB/src/stm32f4xx_i2c.c **** }
 1754              		.loc 1 1444 1 view .LVU502
 1755 000a 7047     		bx	lr
 1756              		.cfi_endproc
 1757              	.LFE157:
 1759              		.text
 1760              	.Letext0:
 1761              		.file 2 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 1762              		.file 3 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 1763              		.file 4 "F4_CORE/core_cm4.h"
 1764              		.file 5 "USER/system_stm32f4xx.h"
 1765              		.file 6 "USER/stm32f4xx.h"
 1766              		.file 7 "FWLIB/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccqK3nom.s 			page 57


 1767              		.file 8 "FWLIB/inc/stm32f4xx_i2c.h"
ARM GAS  /tmp/ccqK3nom.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_i2c.c
     /tmp/ccqK3nom.s:18     .text.I2C_DeInit:0000000000000000 $t
     /tmp/ccqK3nom.s:26     .text.I2C_DeInit:0000000000000000 I2C_DeInit
     /tmp/ccqK3nom.s:109    .text.I2C_DeInit:0000000000000058 $d
     /tmp/ccqK3nom.s:116    .text.I2C_Init:0000000000000000 $t
     /tmp/ccqK3nom.s:123    .text.I2C_Init:0000000000000000 I2C_Init
     /tmp/ccqK3nom.s:354    .text.I2C_Init:00000000000000c8 $d
     /tmp/ccqK3nom.s:361    .text.I2C_StructInit:0000000000000000 $t
     /tmp/ccqK3nom.s:368    .text.I2C_StructInit:0000000000000000 I2C_StructInit
     /tmp/ccqK3nom.s:404    .text.I2C_Cmd:0000000000000000 $t
     /tmp/ccqK3nom.s:411    .text.I2C_Cmd:0000000000000000 I2C_Cmd
     /tmp/ccqK3nom.s:444    .text.I2C_AnalogFilterCmd:0000000000000000 $t
     /tmp/ccqK3nom.s:451    .text.I2C_AnalogFilterCmd:0000000000000000 I2C_AnalogFilterCmd
     /tmp/ccqK3nom.s:484    .text.I2C_DigitalFilterConfig:0000000000000000 $t
     /tmp/ccqK3nom.s:491    .text.I2C_DigitalFilterConfig:0000000000000000 I2C_DigitalFilterConfig
     /tmp/ccqK3nom.s:527    .text.I2C_GenerateSTART:0000000000000000 $t
     /tmp/ccqK3nom.s:534    .text.I2C_GenerateSTART:0000000000000000 I2C_GenerateSTART
     /tmp/ccqK3nom.s:567    .text.I2C_GenerateSTOP:0000000000000000 $t
     /tmp/ccqK3nom.s:574    .text.I2C_GenerateSTOP:0000000000000000 I2C_GenerateSTOP
     /tmp/ccqK3nom.s:607    .text.I2C_Send7bitAddress:0000000000000000 $t
     /tmp/ccqK3nom.s:614    .text.I2C_Send7bitAddress:0000000000000000 I2C_Send7bitAddress
     /tmp/ccqK3nom.s:652    .text.I2C_AcknowledgeConfig:0000000000000000 $t
     /tmp/ccqK3nom.s:659    .text.I2C_AcknowledgeConfig:0000000000000000 I2C_AcknowledgeConfig
     /tmp/ccqK3nom.s:692    .text.I2C_OwnAddress2Config:0000000000000000 $t
     /tmp/ccqK3nom.s:699    .text.I2C_OwnAddress2Config:0000000000000000 I2C_OwnAddress2Config
     /tmp/ccqK3nom.s:734    .text.I2C_DualAddressCmd:0000000000000000 $t
     /tmp/ccqK3nom.s:741    .text.I2C_DualAddressCmd:0000000000000000 I2C_DualAddressCmd
     /tmp/ccqK3nom.s:774    .text.I2C_GeneralCallCmd:0000000000000000 $t
     /tmp/ccqK3nom.s:781    .text.I2C_GeneralCallCmd:0000000000000000 I2C_GeneralCallCmd
     /tmp/ccqK3nom.s:814    .text.I2C_SoftwareResetCmd:0000000000000000 $t
     /tmp/ccqK3nom.s:821    .text.I2C_SoftwareResetCmd:0000000000000000 I2C_SoftwareResetCmd
     /tmp/ccqK3nom.s:852    .text.I2C_StretchClockCmd:0000000000000000 $t
     /tmp/ccqK3nom.s:859    .text.I2C_StretchClockCmd:0000000000000000 I2C_StretchClockCmd
     /tmp/ccqK3nom.s:892    .text.I2C_FastModeDutyCycleConfig:0000000000000000 $t
     /tmp/ccqK3nom.s:899    .text.I2C_FastModeDutyCycleConfig:0000000000000000 I2C_FastModeDutyCycleConfig
     /tmp/ccqK3nom.s:933    .text.I2C_NACKPositionConfig:0000000000000000 $t
     /tmp/ccqK3nom.s:940    .text.I2C_NACKPositionConfig:0000000000000000 I2C_NACKPositionConfig
     /tmp/ccqK3nom.s:974    .text.I2C_SMBusAlertConfig:0000000000000000 $t
     /tmp/ccqK3nom.s:981    .text.I2C_SMBusAlertConfig:0000000000000000 I2C_SMBusAlertConfig
     /tmp/ccqK3nom.s:1015   .text.I2C_ARPCmd:0000000000000000 $t
     /tmp/ccqK3nom.s:1022   .text.I2C_ARPCmd:0000000000000000 I2C_ARPCmd
     /tmp/ccqK3nom.s:1055   .text.I2C_SendData:0000000000000000 $t
     /tmp/ccqK3nom.s:1062   .text.I2C_SendData:0000000000000000 I2C_SendData
     /tmp/ccqK3nom.s:1080   .text.I2C_ReceiveData:0000000000000000 $t
     /tmp/ccqK3nom.s:1087   .text.I2C_ReceiveData:0000000000000000 I2C_ReceiveData
     /tmp/ccqK3nom.s:1107   .text.I2C_TransmitPEC:0000000000000000 $t
     /tmp/ccqK3nom.s:1114   .text.I2C_TransmitPEC:0000000000000000 I2C_TransmitPEC
     /tmp/ccqK3nom.s:1147   .text.I2C_PECPositionConfig:0000000000000000 $t
     /tmp/ccqK3nom.s:1154   .text.I2C_PECPositionConfig:0000000000000000 I2C_PECPositionConfig
     /tmp/ccqK3nom.s:1188   .text.I2C_CalculatePEC:0000000000000000 $t
     /tmp/ccqK3nom.s:1195   .text.I2C_CalculatePEC:0000000000000000 I2C_CalculatePEC
     /tmp/ccqK3nom.s:1228   .text.I2C_GetPEC:0000000000000000 $t
     /tmp/ccqK3nom.s:1235   .text.I2C_GetPEC:0000000000000000 I2C_GetPEC
     /tmp/ccqK3nom.s:1255   .text.I2C_DMACmd:0000000000000000 $t
     /tmp/ccqK3nom.s:1262   .text.I2C_DMACmd:0000000000000000 I2C_DMACmd
     /tmp/ccqK3nom.s:1295   .text.I2C_DMALastTransferCmd:0000000000000000 $t
ARM GAS  /tmp/ccqK3nom.s 			page 59


     /tmp/ccqK3nom.s:1302   .text.I2C_DMALastTransferCmd:0000000000000000 I2C_DMALastTransferCmd
     /tmp/ccqK3nom.s:1335   .text.I2C_ReadRegister:0000000000000000 $t
     /tmp/ccqK3nom.s:1342   .text.I2C_ReadRegister:0000000000000000 I2C_ReadRegister
     /tmp/ccqK3nom.s:1386   .text.I2C_ITConfig:0000000000000000 $t
     /tmp/ccqK3nom.s:1393   .text.I2C_ITConfig:0000000000000000 I2C_ITConfig
     /tmp/ccqK3nom.s:1430   .text.I2C_CheckEvent:0000000000000000 $t
     /tmp/ccqK3nom.s:1437   .text.I2C_CheckEvent:0000000000000000 I2C_CheckEvent
     /tmp/ccqK3nom.s:1489   .text.I2C_GetLastEvent:0000000000000000 $t
     /tmp/ccqK3nom.s:1496   .text.I2C_GetLastEvent:0000000000000000 I2C_GetLastEvent
     /tmp/ccqK3nom.s:1530   .text.I2C_GetFlagStatus:0000000000000000 $t
     /tmp/ccqK3nom.s:1537   .text.I2C_GetFlagStatus:0000000000000000 I2C_GetFlagStatus
     /tmp/ccqK3nom.s:1626   .text.I2C_ClearFlag:0000000000000000 $t
     /tmp/ccqK3nom.s:1633   .text.I2C_ClearFlag:0000000000000000 I2C_ClearFlag
     /tmp/ccqK3nom.s:1663   .text.I2C_GetITStatus:0000000000000000 $t
     /tmp/ccqK3nom.s:1670   .text.I2C_GetITStatus:0000000000000000 I2C_GetITStatus
     /tmp/ccqK3nom.s:1723   .text.I2C_ClearITPendingBit:0000000000000000 $t
     /tmp/ccqK3nom.s:1730   .text.I2C_ClearITPendingBit:0000000000000000 I2C_ClearITPendingBit

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
