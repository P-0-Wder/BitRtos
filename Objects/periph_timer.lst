ARM GAS  /tmp/ccwxaLkA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"periph_timer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.periph_Timer_IO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	periph_Timer_IO_Init:
  25              	.LFB123:
  26              		.file 1 "Bsp/periph_timer.c"
   1:Bsp/periph_timer.c **** #include "stm32f4xx_tim.h"
   2:Bsp/periph_timer.c **** #include "periph_timer.h"
   3:Bsp/periph_timer.c **** #include "periph_gpio.h"
   4:Bsp/periph_timer.c **** #include "periph_dma.h"
   5:Bsp/periph_timer.c **** #include "misc.h"
   6:Bsp/periph_timer.c **** #include <stdbool.h>
   7:Bsp/periph_timer.c **** 
   8:Bsp/periph_timer.c **** TIM_TypeDef *Timer_Port[Timer_Port_Sum] = {TIM2,
   9:Bsp/periph_timer.c **** 										   TIM3,
  10:Bsp/periph_timer.c **** 										   TIM4};
  11:Bsp/periph_timer.c **** 
  12:Bsp/periph_timer.c **** static uint32_t Timer_CLK[Timer_Port_Sum] = {RCC_APB1Periph_TIM2,
  13:Bsp/periph_timer.c **** 											 RCC_APB1Periph_TIM3,
  14:Bsp/periph_timer.c **** 											 RCC_APB1Periph_TIM4};
  15:Bsp/periph_timer.c **** 
  16:Bsp/periph_timer.c **** static uint8_t Timer_IRQ_Channel[Timer_Port_Sum] = {TIM2_IRQn,
  17:Bsp/periph_timer.c **** 													TIM3_IRQn,
  18:Bsp/periph_timer.c **** 													TIM4_IRQn};
  19:Bsp/periph_timer.c **** 
  20:Bsp/periph_timer.c **** static void (*PWM_Set_Value[PWM_SUM])(TIM_TypeDef *TIMx, uint32_t Compare1) = {TIM_SetCompare1,
  21:Bsp/periph_timer.c **** 																			   TIM_SetCompare2,
  22:Bsp/periph_timer.c **** 																			   TIM_SetCompare3,
  23:Bsp/periph_timer.c **** 																			   TIM_SetCompare4};
  24:Bsp/periph_timer.c **** 
  25:Bsp/periph_timer.c **** static void periph_Timer_IO_Init(Timer_list timerx, Timer_PWM_Channel_State CH1_State, Timer_PWM_Ch
  26:Bsp/periph_timer.c **** {
  27              		.loc 1 26 0
  28              		.cfi_startproc
  29              		@ args = 4, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/ccwxaLkA.s 			page 2


  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0446     		mov	r4, r0
  40 0004 1646     		mov	r6, r2
  41 0006 1D46     		mov	r5, r3
  27:Bsp/periph_timer.c **** 	if (CH1_State == PWM_CH1_Enable)
  42              		.loc 1 27 0
  43 0008 0129     		cmp	r1, #1
  44 000a 08D0     		beq	.L19
  45              	.LVL1:
  46              	.L2:
  28:Bsp/periph_timer.c **** 	{
  29:Bsp/periph_timer.c **** 		switch ((uint8_t)timerx)
  30:Bsp/periph_timer.c **** 		{
  31:Bsp/periph_timer.c **** 		case Timer_2:
  32:Bsp/periph_timer.c **** 			GPIO_TIM2_PWMCH1_IO_Init();
  33:Bsp/periph_timer.c **** 			break;
  34:Bsp/periph_timer.c **** 		case Timer_3:
  35:Bsp/periph_timer.c **** 			GPIO_TIM3_PWMCH1_IO_Init();
  36:Bsp/periph_timer.c **** 			break;
  37:Bsp/periph_timer.c **** 		case Timer_4:
  38:Bsp/periph_timer.c **** 			GPIO_TIM4_PWMCH1_IO_Init();
  39:Bsp/periph_timer.c **** 			break;
  40:Bsp/periph_timer.c **** 		default:
  41:Bsp/periph_timer.c **** 			break;
  42:Bsp/periph_timer.c **** 		}
  43:Bsp/periph_timer.c **** 	}
  44:Bsp/periph_timer.c **** 
  45:Bsp/periph_timer.c **** 	if (CH2_State == PWM_CH2_Enable)
  47              		.loc 1 45 0
  48 000c 012E     		cmp	r6, #1
  49 000e 14D0     		beq	.L20
  50              	.L6:
  46:Bsp/periph_timer.c **** 	{
  47:Bsp/periph_timer.c **** 		switch ((uint8_t)timerx)
  48:Bsp/periph_timer.c **** 		{
  49:Bsp/periph_timer.c **** 		case Timer_2:
  50:Bsp/periph_timer.c **** 			GPIO_TIM2_PWMCH2_IO_Init();
  51:Bsp/periph_timer.c **** 			break;
  52:Bsp/periph_timer.c **** 		case Timer_3:
  53:Bsp/periph_timer.c **** 			GPIO_TIM3_PWMCH2_IO_Init();
  54:Bsp/periph_timer.c **** 			break;
  55:Bsp/periph_timer.c **** 		case Timer_4:
  56:Bsp/periph_timer.c **** 			GPIO_TIM4_PWMCH2_IO_Init();
  57:Bsp/periph_timer.c **** 			break;
  58:Bsp/periph_timer.c **** 		default:
  59:Bsp/periph_timer.c **** 			break;
  60:Bsp/periph_timer.c **** 		}
  61:Bsp/periph_timer.c **** 	}
  62:Bsp/periph_timer.c **** 
  63:Bsp/periph_timer.c **** 	if (CH3_State == PWM_CH3_Enable)
  51              		.loc 1 63 0
  52 0010 012D     		cmp	r5, #1
ARM GAS  /tmp/ccwxaLkA.s 			page 3


  53 0012 20D0     		beq	.L21
  54              	.L10:
  64:Bsp/periph_timer.c **** 	{
  65:Bsp/periph_timer.c **** 		switch ((uint8_t)timerx)
  66:Bsp/periph_timer.c **** 		{
  67:Bsp/periph_timer.c **** 		case Timer_2:
  68:Bsp/periph_timer.c **** 			GPIO_TIM2_PWMCH3_IO_Init();
  69:Bsp/periph_timer.c **** 			break;
  70:Bsp/periph_timer.c **** 		case Timer_3:
  71:Bsp/periph_timer.c **** 			GPIO_TIM3_PWMCH3_IO_Init();
  72:Bsp/periph_timer.c **** 			break;
  73:Bsp/periph_timer.c **** 		case Timer_4:
  74:Bsp/periph_timer.c **** 			GPIO_TIM4_PWMCH3_IO_Init();
  75:Bsp/periph_timer.c **** 			break;
  76:Bsp/periph_timer.c **** 		default:
  77:Bsp/periph_timer.c **** 			break;
  78:Bsp/periph_timer.c **** 		}
  79:Bsp/periph_timer.c **** 	}
  80:Bsp/periph_timer.c **** 
  81:Bsp/periph_timer.c **** 	if (CH4_State == PWM_CH4_Enable)
  55              		.loc 1 81 0
  56 0014 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
  57 0018 012B     		cmp	r3, #1
  58 001a 2AD0     		beq	.L22
  59              	.L1:
  60 001c 70BD     		pop	{r4, r5, r6, pc}
  61              	.LVL2:
  62              	.L19:
  29:Bsp/periph_timer.c **** 		{
  63              		.loc 1 29 0
  64 001e 0128     		cmp	r0, #1
  65 0020 08D0     		beq	.L3
  66 0022 20B1     		cbz	r0, .L4
  67 0024 0228     		cmp	r0, #2
  68 0026 F1D1     		bne	.L2
  38:Bsp/periph_timer.c **** 			break;
  69              		.loc 1 38 0
  70 0028 FFF7FEFF 		bl	GPIO_TIM4_PWMCH1_IO_Init
  71              	.LVL3:
  39:Bsp/periph_timer.c **** 		default:
  72              		.loc 1 39 0
  73 002c EEE7     		b	.L2
  74              	.LVL4:
  75              	.L4:
  32:Bsp/periph_timer.c **** 			break;
  76              		.loc 1 32 0
  77 002e FFF7FEFF 		bl	GPIO_TIM2_PWMCH1_IO_Init
  78              	.LVL5:
  33:Bsp/periph_timer.c **** 		case Timer_3:
  79              		.loc 1 33 0
  80 0032 EBE7     		b	.L2
  81              	.LVL6:
  82              	.L3:
  35:Bsp/periph_timer.c **** 			break;
  83              		.loc 1 35 0
  84 0034 FFF7FEFF 		bl	GPIO_TIM3_PWMCH1_IO_Init
  85              	.LVL7:
ARM GAS  /tmp/ccwxaLkA.s 			page 4


  36:Bsp/periph_timer.c **** 		case Timer_4:
  86              		.loc 1 36 0
  87 0038 E8E7     		b	.L2
  88              	.L20:
  47:Bsp/periph_timer.c **** 		{
  89              		.loc 1 47 0
  90 003a 012C     		cmp	r4, #1
  91 003c 08D0     		beq	.L7
  92 003e 24B1     		cbz	r4, .L8
  93 0040 022C     		cmp	r4, #2
  94 0042 E5D1     		bne	.L6
  56:Bsp/periph_timer.c **** 			break;
  95              		.loc 1 56 0
  96 0044 FFF7FEFF 		bl	GPIO_TIM4_PWMCH2_IO_Init
  97              	.LVL8:
  57:Bsp/periph_timer.c **** 		default:
  98              		.loc 1 57 0
  99 0048 E2E7     		b	.L6
 100              	.L8:
  50:Bsp/periph_timer.c **** 			break;
 101              		.loc 1 50 0
 102 004a FFF7FEFF 		bl	GPIO_TIM2_PWMCH2_IO_Init
 103              	.LVL9:
  51:Bsp/periph_timer.c **** 		case Timer_3:
 104              		.loc 1 51 0
 105 004e DFE7     		b	.L6
 106              	.L7:
  53:Bsp/periph_timer.c **** 			break;
 107              		.loc 1 53 0
 108 0050 FFF7FEFF 		bl	GPIO_TIM3_PWMCH2_IO_Init
 109              	.LVL10:
  54:Bsp/periph_timer.c **** 		case Timer_4:
 110              		.loc 1 54 0
 111 0054 DCE7     		b	.L6
 112              	.L21:
  65:Bsp/periph_timer.c **** 		{
 113              		.loc 1 65 0
 114 0056 012C     		cmp	r4, #1
 115 0058 08D0     		beq	.L11
 116 005a 24B1     		cbz	r4, .L12
 117 005c 022C     		cmp	r4, #2
 118 005e D9D1     		bne	.L10
  74:Bsp/periph_timer.c **** 			break;
 119              		.loc 1 74 0
 120 0060 FFF7FEFF 		bl	GPIO_TIM4_PWMCH3_IO_Init
 121              	.LVL11:
  75:Bsp/periph_timer.c **** 		default:
 122              		.loc 1 75 0
 123 0064 D6E7     		b	.L10
 124              	.L12:
  68:Bsp/periph_timer.c **** 			break;
 125              		.loc 1 68 0
 126 0066 FFF7FEFF 		bl	GPIO_TIM2_PWMCH3_IO_Init
 127              	.LVL12:
  69:Bsp/periph_timer.c **** 		case Timer_3:
 128              		.loc 1 69 0
 129 006a D3E7     		b	.L10
ARM GAS  /tmp/ccwxaLkA.s 			page 5


 130              	.L11:
  71:Bsp/periph_timer.c **** 			break;
 131              		.loc 1 71 0
 132 006c FFF7FEFF 		bl	GPIO_TIM3_PWMCH3_IO_Init
 133              	.LVL13:
  72:Bsp/periph_timer.c **** 		case Timer_4:
 134              		.loc 1 72 0
 135 0070 D0E7     		b	.L10
 136              	.L22:
  82:Bsp/periph_timer.c **** 	{
  83:Bsp/periph_timer.c **** 		switch ((uint8_t)timerx)
 137              		.loc 1 83 0
 138 0072 012C     		cmp	r4, #1
 139 0074 06D0     		beq	.L15
 140 0076 14B1     		cbz	r4, .L16
 141 0078 022C     		cmp	r4, #2
 142 007a 06D0     		beq	.L17
 143 007c 70BD     		pop	{r4, r5, r6, pc}
 144              	.LVL14:
 145              	.L16:
  84:Bsp/periph_timer.c **** 		{
  85:Bsp/periph_timer.c **** 		case Timer_2:
  86:Bsp/periph_timer.c **** 			GPIO_TIM2_PWMCH4_IO_Init();
 146              		.loc 1 86 0
 147 007e FFF7FEFF 		bl	GPIO_TIM2_PWMCH4_IO_Init
 148              	.LVL15:
  87:Bsp/periph_timer.c **** 			break;
 149              		.loc 1 87 0
 150 0082 70BD     		pop	{r4, r5, r6, pc}
 151              	.LVL16:
 152              	.L15:
  88:Bsp/periph_timer.c **** 		case Timer_3:
  89:Bsp/periph_timer.c **** 			GPIO_TIM3_PWMCH4_IO_Init();
 153              		.loc 1 89 0
 154 0084 FFF7FEFF 		bl	GPIO_TIM3_PWMCH4_IO_Init
 155              	.LVL17:
  90:Bsp/periph_timer.c **** 			break;
 156              		.loc 1 90 0
 157 0088 70BD     		pop	{r4, r5, r6, pc}
 158              	.LVL18:
 159              	.L17:
  91:Bsp/periph_timer.c **** 		case Timer_4:
  92:Bsp/periph_timer.c **** 			GPIO_TIM4_PWMCH4_IO_Init();
 160              		.loc 1 92 0
 161 008a FFF7FEFF 		bl	GPIO_TIM4_PWMCH4_IO_Init
 162              	.LVL19:
  93:Bsp/periph_timer.c **** 			break;
  94:Bsp/periph_timer.c **** 		default:
  95:Bsp/periph_timer.c **** 			break;
  96:Bsp/periph_timer.c **** 		}
  97:Bsp/periph_timer.c **** 	}
  98:Bsp/periph_timer.c **** }
 163              		.loc 1 98 0
 164 008e C5E7     		b	.L1
 165              		.cfi_endproc
 166              	.LFE123:
 168              		.section	.text.periph_Timer_CounterMode_Init,"ax",%progbits
ARM GAS  /tmp/ccwxaLkA.s 			page 6


 169              		.align	1
 170              		.global	periph_Timer_CounterMode_Init
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv4-sp-d16
 176              	periph_Timer_CounterMode_Init:
 177              	.LFB124:
  99:Bsp/periph_timer.c **** 
 100:Bsp/periph_timer.c **** void periph_Timer_CounterMode_Init(Timer_list timerx, uint32_t Period, uint32_t Prescaler, uint8_t 
 101:Bsp/periph_timer.c **** {
 178              		.loc 1 101 0
 179              		.cfi_startproc
 180              		@ args = 4, pretend = 0, frame = 16
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              	.LVL20:
 183 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 184              	.LCFI1:
 185              		.cfi_def_cfa_offset 20
 186              		.cfi_offset 4, -20
 187              		.cfi_offset 5, -16
 188              		.cfi_offset 6, -12
 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0002 85B0     		sub	sp, sp, #20
 192              	.LCFI2:
 193              		.cfi_def_cfa_offset 40
 194 0004 0446     		mov	r4, r0
 195 0006 0F46     		mov	r7, r1
 196 0008 1546     		mov	r5, r2
 197 000a 1E46     		mov	r6, r3
 102:Bsp/periph_timer.c **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
 103:Bsp/periph_timer.c **** 	NVIC_InitTypeDef NVIC_InitStructure;
 104:Bsp/periph_timer.c **** 
 105:Bsp/periph_timer.c **** 	RCC_APB1PeriphClockCmd(Timer_CLK[timerx], ENABLE);
 198              		.loc 1 105 0
 199 000c 0121     		movs	r1, #1
 200              	.LVL21:
 201 000e 194B     		ldr	r3, .L25
 202              	.LVL22:
 203 0010 53F82000 		ldr	r0, [r3, r0, lsl #2]
 204              	.LVL23:
 205 0014 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 206              	.LVL24:
 106:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_Period = Period;		 //1000
 207              		.loc 1 106 0
 208 0018 0297     		str	r7, [sp, #8]
 107:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_Prescaler = Prescaler; //83
 209              		.loc 1 107 0
 210 001a ADF80450 		strh	r5, [sp, #4]	@ movhi
 108:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
 211              		.loc 1 108 0
 212 001e 0023     		movs	r3, #0
 213 0020 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 109:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 214              		.loc 1 109 0
 215 0024 ADF80630 		strh	r3, [sp, #6]	@ movhi
ARM GAS  /tmp/ccwxaLkA.s 			page 7


 110:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
 216              		.loc 1 110 0
 217 0028 8DF80E30 		strb	r3, [sp, #14]
 111:Bsp/periph_timer.c **** 	TIM_TimeBaseInit(Timer_Port[timerx], &TIM_TimeBaseStructure);
 218              		.loc 1 111 0
 219 002c 124D     		ldr	r5, .L25+4
 220              	.LVL25:
 221 002e 01A9     		add	r1, sp, #4
 222 0030 55F82400 		ldr	r0, [r5, r4, lsl #2]
 223 0034 FFF7FEFF 		bl	TIM_TimeBaseInit
 224              	.LVL26:
 112:Bsp/periph_timer.c **** 
 113:Bsp/periph_timer.c **** 	TIM_ITConfig(Timer_Port[timerx], TIM_IT_Update, ENABLE);
 225              		.loc 1 113 0
 226 0038 0122     		movs	r2, #1
 227 003a 1146     		mov	r1, r2
 228 003c 55F82400 		ldr	r0, [r5, r4, lsl #2]
 229 0040 FFF7FEFF 		bl	TIM_ITConfig
 230              	.LVL27:
 114:Bsp/periph_timer.c **** 	TIM_Cmd(Timer_Port[timerx], ENABLE);
 231              		.loc 1 114 0
 232 0044 0121     		movs	r1, #1
 233 0046 55F82400 		ldr	r0, [r5, r4, lsl #2]
 234 004a FFF7FEFF 		bl	TIM_Cmd
 235              	.LVL28:
 115:Bsp/periph_timer.c **** 
 116:Bsp/periph_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannel = Timer_IRQ_Channel[timerx];
 236              		.loc 1 116 0
 237 004e 0B4B     		ldr	r3, .L25+8
 238 0050 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 239 0052 8DF80030 		strb	r3, [sp]
 117:Bsp/periph_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 240              		.loc 1 117 0
 241 0056 0123     		movs	r3, #1
 242 0058 8DF80330 		strb	r3, [sp, #3]
 118:Bsp/periph_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = PreemptionPriority;
 243              		.loc 1 118 0
 244 005c 8DF80160 		strb	r6, [sp, #1]
 119:Bsp/periph_timer.c **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority = SubPriority;
 245              		.loc 1 119 0
 246 0060 9DF82830 		ldrb	r3, [sp, #40]	@ zero_extendqisi2
 247 0064 8DF80230 		strb	r3, [sp, #2]
 120:Bsp/periph_timer.c **** 	NVIC_Init(&NVIC_InitStructure);
 248              		.loc 1 120 0
 249 0068 6846     		mov	r0, sp
 250 006a FFF7FEFF 		bl	NVIC_Init
 251              	.LVL29:
 121:Bsp/periph_timer.c **** }
 252              		.loc 1 121 0
 253 006e 05B0     		add	sp, sp, #20
 254              	.LCFI3:
 255              		.cfi_def_cfa_offset 20
 256              		@ sp needed
 257 0070 F0BD     		pop	{r4, r5, r6, r7, pc}
 258              	.LVL30:
 259              	.L26:
 260 0072 00BF     		.align	2
ARM GAS  /tmp/ccwxaLkA.s 			page 8


 261              	.L25:
 262 0074 00000000 		.word	.LANCHOR0
 263 0078 00000000 		.word	.LANCHOR1
 264 007c 00000000 		.word	.LANCHOR2
 265              		.cfi_endproc
 266              	.LFE124:
 268              		.section	.text.periph_Timer_Encoder_Mode_Init,"ax",%progbits
 269              		.align	1
 270              		.global	periph_Timer_Encoder_Mode_Init
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu fpv4-sp-d16
 276              	periph_Timer_Encoder_Mode_Init:
 277              	.LFB125:
 122:Bsp/periph_timer.c **** 
 123:Bsp/periph_timer.c **** /* need modify */
 124:Bsp/periph_timer.c **** void periph_Timer_Encoder_Mode_Init(Timer_list timerx, uint16_t channel_a, uint16_t channel_b)
 125:Bsp/periph_timer.c **** {
 278              		.loc 1 125 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 24
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              	.LVL31:
 283 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 32
 286              		.cfi_offset 4, -32
 287              		.cfi_offset 5, -28
 288              		.cfi_offset 6, -24
 289              		.cfi_offset 7, -20
 290              		.cfi_offset 8, -16
 291              		.cfi_offset 9, -12
 292              		.cfi_offset 10, -8
 293              		.cfi_offset 14, -4
 294 0004 86B0     		sub	sp, sp, #24
 295              	.LCFI5:
 296              		.cfi_def_cfa_offset 56
 297 0006 0446     		mov	r4, r0
 298 0008 8A46     		mov	r10, r1
 299 000a 9146     		mov	r9, r2
 126:Bsp/periph_timer.c **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
 127:Bsp/periph_timer.c **** 	TIM_ICInitTypeDef TIM_ICInitStructure;
 128:Bsp/periph_timer.c **** 
 129:Bsp/periph_timer.c **** 	RCC_APB2PeriphClockCmd(Timer_CLK[timerx], ENABLE);
 300              		.loc 1 129 0
 301 000c 0121     		movs	r1, #1
 302              	.LVL32:
 303 000e 1D4B     		ldr	r3, .L29
 304 0010 53F82000 		ldr	r0, [r3, r0, lsl #2]
 305              	.LVL33:
 306 0014 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 307              	.LVL34:
 130:Bsp/periph_timer.c **** 
 131:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_Period = 0xffff;
 308              		.loc 1 131 0
 309 0018 4FF6FF73 		movw	r3, #65535
ARM GAS  /tmp/ccwxaLkA.s 			page 9


 310 001c 0493     		str	r3, [sp, #16]
 132:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_Prescaler = 0;
 311              		.loc 1 132 0
 312 001e 0027     		movs	r7, #0
 313 0020 06A9     		add	r1, sp, #24
 314 0022 21F80C7D 		strh	r7, [r1, #-12]!	@ movhi
 133:Bsp/periph_timer.c **** 	TIM_TimeBaseInit(Timer_Port[timerx], &TIM_TimeBaseStructure);
 315              		.loc 1 133 0
 316 0026 184D     		ldr	r5, .L29+4
 317 0028 55F82400 		ldr	r0, [r5, r4, lsl #2]
 318 002c FFF7FEFF 		bl	TIM_TimeBaseInit
 319              	.LVL35:
 134:Bsp/periph_timer.c **** 
 135:Bsp/periph_timer.c **** 	TIM_ICInitStructure.TIM_ICFilter = 10;
 320              		.loc 1 135 0
 321 0030 0A23     		movs	r3, #10
 322 0032 ADF80830 		strh	r3, [sp, #8]	@ movhi
 136:Bsp/periph_timer.c **** 	TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
 323              		.loc 1 136 0
 324 0036 4FF00108 		mov	r8, #1
 325 003a ADF80480 		strh	r8, [sp, #4]	@ movhi
 137:Bsp/periph_timer.c **** 	TIM_ICInitStructure.TIM_Channel = channel_a; //TIM_Channel_1
 326              		.loc 1 137 0
 327 003e 06AE     		add	r6, sp, #24
 328 0040 26F818AD 		strh	r10, [r6, #-24]!	@ movhi
 138:Bsp/periph_timer.c **** 	TIM_ICInit(Timer_Port[timerx], &TIM_ICInitStructure);
 329              		.loc 1 138 0
 330 0044 3146     		mov	r1, r6
 331 0046 55F82400 		ldr	r0, [r5, r4, lsl #2]
 332 004a FFF7FEFF 		bl	TIM_ICInit
 333              	.LVL36:
 139:Bsp/periph_timer.c **** 
 140:Bsp/periph_timer.c **** 	TIM_ICInitStructure.TIM_Channel = channel_b; //TIM_Channel_2
 334              		.loc 1 140 0
 335 004e ADF80090 		strh	r9, [sp]	@ movhi
 141:Bsp/periph_timer.c **** 	TIM_ICInit(Timer_Port[timerx], &TIM_ICInitStructure);
 336              		.loc 1 141 0
 337 0052 3146     		mov	r1, r6
 338 0054 55F82400 		ldr	r0, [r5, r4, lsl #2]
 339 0058 FFF7FEFF 		bl	TIM_ICInit
 340              	.LVL37:
 142:Bsp/periph_timer.c **** 
 143:Bsp/periph_timer.c **** 	TIM_EncoderInterfaceConfig(Timer_Port[timerx], TIM_EncoderMode_TI12, TIM_ICPolarity_Rising, TIM_IC
 341              		.loc 1 143 0
 342 005c 3B46     		mov	r3, r7
 343 005e 3A46     		mov	r2, r7
 344 0060 0321     		movs	r1, #3
 345 0062 55F82400 		ldr	r0, [r5, r4, lsl #2]
 346 0066 FFF7FEFF 		bl	TIM_EncoderInterfaceConfig
 347              	.LVL38:
 144:Bsp/periph_timer.c **** 	TIM_ICStructInit(&TIM_ICInitStructure);
 348              		.loc 1 144 0
 349 006a 3046     		mov	r0, r6
 350 006c FFF7FEFF 		bl	TIM_ICStructInit
 351              	.LVL39:
 145:Bsp/periph_timer.c **** 
 146:Bsp/periph_timer.c **** 	Timer_Port[timerx]->CNT = 0;
ARM GAS  /tmp/ccwxaLkA.s 			page 10


 352              		.loc 1 146 0
 353 0070 55F82400 		ldr	r0, [r5, r4, lsl #2]
 354 0074 4762     		str	r7, [r0, #36]
 147:Bsp/periph_timer.c **** 	TIM_Cmd(Timer_Port[timerx], ENABLE);
 355              		.loc 1 147 0
 356 0076 4146     		mov	r1, r8
 357 0078 FFF7FEFF 		bl	TIM_Cmd
 358              	.LVL40:
 148:Bsp/periph_timer.c **** }
 359              		.loc 1 148 0
 360 007c 06B0     		add	sp, sp, #24
 361              	.LCFI6:
 362              		.cfi_def_cfa_offset 32
 363              		@ sp needed
 364 007e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 365              	.L30:
 366 0082 00BF     		.align	2
 367              	.L29:
 368 0084 00000000 		.word	.LANCHOR0
 369 0088 00000000 		.word	.LANCHOR1
 370              		.cfi_endproc
 371              	.LFE125:
 373              		.section	.text.periph_Timer_GetEncoder_Input,"ax",%progbits
 374              		.align	1
 375              		.global	periph_Timer_GetEncoder_Input
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 379              		.fpu fpv4-sp-d16
 381              	periph_Timer_GetEncoder_Input:
 382              	.LFB126:
 149:Bsp/periph_timer.c **** 
 150:Bsp/periph_timer.c **** int8_t periph_Timer_GetEncoder_Input(Timer_list timerx)
 151:Bsp/periph_timer.c **** {
 383              		.loc 1 151 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388              	.LVL41:
 152:Bsp/periph_timer.c **** 	return (int8_t)Timer_Port[timerx]->CNT;
 389              		.loc 1 152 0
 390 0000 024B     		ldr	r3, .L32
 391 0002 53F82030 		ldr	r3, [r3, r0, lsl #2]
 392 0006 586A     		ldr	r0, [r3, #36]
 393              	.LVL42:
 153:Bsp/periph_timer.c **** }
 394              		.loc 1 153 0
 395 0008 40B2     		sxtb	r0, r0
 396 000a 7047     		bx	lr
 397              	.L33:
 398              		.align	2
 399              	.L32:
 400 000c 00000000 		.word	.LANCHOR1
 401              		.cfi_endproc
 402              	.LFE126:
 404              		.section	.text.periph_Timer_PWMOutPut_Mode_Init,"ax",%progbits
ARM GAS  /tmp/ccwxaLkA.s 			page 11


 405              		.align	1
 406              		.global	periph_Timer_PWMOutPut_Mode_Init
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 410              		.fpu fpv4-sp-d16
 412              	periph_Timer_PWMOutPut_Mode_Init:
 413              	.LFB127:
 154:Bsp/periph_timer.c **** 
 155:Bsp/periph_timer.c **** void periph_Timer_PWMOutPut_Mode_Init(Timer_list timerx, PWM_Hz hz, Timer_PWM_Channel_State CH1_Sta
 156:Bsp/periph_timer.c **** {
 414              		.loc 1 156 0
 415              		.cfi_startproc
 416              		@ args = 8, pretend = 0, frame = 32
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              	.LVL43:
 419 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 420              	.LCFI7:
 421              		.cfi_def_cfa_offset 28
 422              		.cfi_offset 4, -28
 423              		.cfi_offset 5, -24
 424              		.cfi_offset 6, -20
 425              		.cfi_offset 7, -16
 426              		.cfi_offset 8, -12
 427              		.cfi_offset 9, -8
 428              		.cfi_offset 14, -4
 429 0004 8BB0     		sub	sp, sp, #44
 430              	.LCFI8:
 431              		.cfi_def_cfa_offset 72
 432 0006 0446     		mov	r4, r0
 433 0008 0D46     		mov	r5, r1
 434 000a 9146     		mov	r9, r2
 435 000c 9846     		mov	r8, r3
 436 000e 9DF84870 		ldrb	r7, [sp, #72]	@ zero_extendqisi2
 437 0012 9DF84C60 		ldrb	r6, [sp, #76]	@ zero_extendqisi2
 157:Bsp/periph_timer.c **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
 158:Bsp/periph_timer.c **** 	TIM_OCInitTypeDef TIM_OCInitStructure;
 159:Bsp/periph_timer.c **** 
 160:Bsp/periph_timer.c **** 	periph_Timer_IO_Init(timerx, CH1_State, CH2_State, CH3_State, CH4_State);
 438              		.loc 1 160 0
 439 0016 0096     		str	r6, [sp]
 440 0018 3B46     		mov	r3, r7
 441              	.LVL44:
 442 001a 4246     		mov	r2, r8
 443              	.LVL45:
 444 001c 4946     		mov	r1, r9
 445              	.LVL46:
 446 001e FFF7FEFF 		bl	periph_Timer_IO_Init
 447              	.LVL47:
 161:Bsp/periph_timer.c **** 
 162:Bsp/periph_timer.c **** 	RCC_APB1PeriphClockCmd(Timer_CLK[timerx], ENABLE);
 448              		.loc 1 162 0
 449 0022 0121     		movs	r1, #1
 450 0024 414B     		ldr	r3, .L46
 451 0026 53F82400 		ldr	r0, [r3, r4, lsl #2]
 452 002a FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 453              	.LVL48:
ARM GAS  /tmp/ccwxaLkA.s 			page 12


 163:Bsp/periph_timer.c **** 	TIM_DeInit(Timer_Port[timerx]);
 454              		.loc 1 163 0
 455 002e 404B     		ldr	r3, .L46+4
 456 0030 53F82400 		ldr	r0, [r3, r4, lsl #2]
 457 0034 FFF7FEFF 		bl	TIM_DeInit
 458              	.LVL49:
 164:Bsp/periph_timer.c **** 
 165:Bsp/periph_timer.c **** 	if (hz == PWM_50hz)
 459              		.loc 1 165 0
 460 0038 002D     		cmp	r5, #0
 461 003a 3DD1     		bne	.L35
 166:Bsp/periph_timer.c **** 	{
 167:Bsp/periph_timer.c **** 		TIM_TimeBaseStructure.TIM_Period = TimerPWM_50Hz_Period;
 462              		.loc 1 167 0
 463 003c 44F62063 		movw	r3, #20000
 464 0040 0893     		str	r3, [sp, #32]
 168:Bsp/periph_timer.c **** 		TIM_TimeBaseStructure.TIM_Prescaler = TimerPWM_50Hz_Prescaler;
 465              		.loc 1 168 0
 466 0042 5323     		movs	r3, #83
 467 0044 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 468              	.L36:
 169:Bsp/periph_timer.c **** 	}
 170:Bsp/periph_timer.c **** 	else if (hz == PWM_38Khz)
 171:Bsp/periph_timer.c **** 	{
 172:Bsp/periph_timer.c **** 		TIM_TimeBaseStructure.TIM_Period = TimerPWM_38KHz_Period;
 173:Bsp/periph_timer.c **** 		TIM_TimeBaseStructure.TIM_Prescaler = TimerPWM_38KHz_Prescaler;
 174:Bsp/periph_timer.c **** 	}
 175:Bsp/periph_timer.c **** 
 176:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
 469              		.loc 1 176 0
 470 0048 0025     		movs	r5, #0
 471 004a ADF82450 		strh	r5, [sp, #36]	@ movhi
 177:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 472              		.loc 1 177 0
 473 004e ADF81E50 		strh	r5, [sp, #30]	@ movhi
 178:Bsp/periph_timer.c **** 	TIM_TimeBaseInit(Timer_Port[timerx], &TIM_TimeBaseStructure);
 474              		.loc 1 178 0
 475 0052 07A9     		add	r1, sp, #28
 476 0054 364B     		ldr	r3, .L46+4
 477 0056 53F82400 		ldr	r0, [r3, r4, lsl #2]
 478 005a FFF7FEFF 		bl	TIM_TimeBaseInit
 479              	.LVL50:
 179:Bsp/periph_timer.c **** 
 180:Bsp/periph_timer.c **** 	TIM_OCStructInit(&TIM_OCInitStructure);
 480              		.loc 1 180 0
 481 005e 02A8     		add	r0, sp, #8
 482 0060 FFF7FEFF 		bl	TIM_OCStructInit
 483              	.LVL51:
 181:Bsp/periph_timer.c **** 	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
 484              		.loc 1 181 0
 485 0064 6023     		movs	r3, #96
 486 0066 ADF80830 		strh	r3, [sp, #8]	@ movhi
 182:Bsp/periph_timer.c **** 	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
 487              		.loc 1 182 0
 488 006a 0123     		movs	r3, #1
 489 006c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 183:Bsp/periph_timer.c **** 	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
ARM GAS  /tmp/ccwxaLkA.s 			page 13


 490              		.loc 1 183 0
 491 0070 ADF81450 		strh	r5, [sp, #20]	@ movhi
 184:Bsp/periph_timer.c **** 
 185:Bsp/periph_timer.c **** 	if (CH1_State == PWM_CH1_Enable)
 492              		.loc 1 185 0
 493 0074 9945     		cmp	r9, r3
 494 0076 28D0     		beq	.L42
 495              	.L37:
 186:Bsp/periph_timer.c **** 	{
 187:Bsp/periph_timer.c **** 		TIM_OC1Init(Timer_Port[timerx], &TIM_OCInitStructure);
 188:Bsp/periph_timer.c **** 		TIM_OC1PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 189:Bsp/periph_timer.c **** 	}
 190:Bsp/periph_timer.c **** 
 191:Bsp/periph_timer.c **** 	if (CH2_State == PWM_CH2_Enable)
 496              		.loc 1 191 0
 497 0078 B8F1010F 		cmp	r8, #1
 498 007c 31D0     		beq	.L43
 499              	.L38:
 192:Bsp/periph_timer.c **** 	{
 193:Bsp/periph_timer.c **** 		TIM_OC2Init(Timer_Port[timerx], &TIM_OCInitStructure);
 194:Bsp/periph_timer.c **** 		TIM_OC2PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 195:Bsp/periph_timer.c **** 	}
 196:Bsp/periph_timer.c **** 
 197:Bsp/periph_timer.c **** 	if (CH3_State == PWM_CH3_Enable)
 500              		.loc 1 197 0
 501 007e 012F     		cmp	r7, #1
 502 0080 3BD0     		beq	.L44
 503              	.L39:
 198:Bsp/periph_timer.c **** 	{
 199:Bsp/periph_timer.c **** 		TIM_OC3Init(Timer_Port[timerx], &TIM_OCInitStructure);
 200:Bsp/periph_timer.c **** 		TIM_OC3PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 201:Bsp/periph_timer.c **** 	}
 202:Bsp/periph_timer.c **** 
 203:Bsp/periph_timer.c **** 	if (CH4_State == PWM_CH4_Enable)
 504              		.loc 1 203 0
 505 0082 012E     		cmp	r6, #1
 506 0084 45D0     		beq	.L45
 507              	.L40:
 204:Bsp/periph_timer.c **** 	{
 205:Bsp/periph_timer.c **** 		TIM_OC4Init(Timer_Port[timerx], &TIM_OCInitStructure);
 206:Bsp/periph_timer.c **** 		TIM_OC4PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 207:Bsp/periph_timer.c **** 	}
 208:Bsp/periph_timer.c **** 
 209:Bsp/periph_timer.c **** 	TIM_ARRPreloadConfig(Timer_Port[timerx], ENABLE);
 508              		.loc 1 209 0
 509 0086 2A4D     		ldr	r5, .L46+4
 510 0088 0121     		movs	r1, #1
 511 008a 55F82400 		ldr	r0, [r5, r4, lsl #2]
 512 008e FFF7FEFF 		bl	TIM_ARRPreloadConfig
 513              	.LVL52:
 210:Bsp/periph_timer.c **** 	TIM_ClearFlag(Timer_Port[timerx], TIM_FLAG_Update);
 514              		.loc 1 210 0
 515 0092 0121     		movs	r1, #1
 516 0094 55F82400 		ldr	r0, [r5, r4, lsl #2]
 517 0098 FFF7FEFF 		bl	TIM_ClearFlag
 518              	.LVL53:
 211:Bsp/periph_timer.c **** 	TIM_ITConfig(Timer_Port[timerx], TIM_IT_Update, ENABLE);
ARM GAS  /tmp/ccwxaLkA.s 			page 14


 519              		.loc 1 211 0
 520 009c 0122     		movs	r2, #1
 521 009e 1146     		mov	r1, r2
 522 00a0 55F82400 		ldr	r0, [r5, r4, lsl #2]
 523 00a4 FFF7FEFF 		bl	TIM_ITConfig
 524              	.LVL54:
 212:Bsp/periph_timer.c **** 	TIM_Cmd(Timer_Port[timerx], ENABLE);
 525              		.loc 1 212 0
 526 00a8 0121     		movs	r1, #1
 527 00aa 55F82400 		ldr	r0, [r5, r4, lsl #2]
 528 00ae FFF7FEFF 		bl	TIM_Cmd
 529              	.LVL55:
 213:Bsp/periph_timer.c **** }
 530              		.loc 1 213 0
 531 00b2 0BB0     		add	sp, sp, #44
 532              	.LCFI9:
 533              		.cfi_remember_state
 534              		.cfi_def_cfa_offset 28
 535              		@ sp needed
 536 00b4 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 537              	.LVL56:
 538              	.L35:
 539              	.LCFI10:
 540              		.cfi_restore_state
 170:Bsp/periph_timer.c **** 	{
 541              		.loc 1 170 0
 542 00b8 012D     		cmp	r5, #1
 543 00ba C5D1     		bne	.L36
 172:Bsp/periph_timer.c **** 		TIM_TimeBaseStructure.TIM_Prescaler = TimerPWM_38KHz_Prescaler;
 544              		.loc 1 172 0
 545 00bc 40F6A303 		movw	r3, #2211
 546 00c0 0893     		str	r3, [sp, #32]
 173:Bsp/periph_timer.c **** 	}
 547              		.loc 1 173 0
 548 00c2 0023     		movs	r3, #0
 549 00c4 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 550 00c8 BEE7     		b	.L36
 551              	.L42:
 187:Bsp/periph_timer.c **** 		TIM_OC1PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 552              		.loc 1 187 0
 553 00ca 194D     		ldr	r5, .L46+4
 554 00cc 02A9     		add	r1, sp, #8
 555 00ce 55F82400 		ldr	r0, [r5, r4, lsl #2]
 556 00d2 FFF7FEFF 		bl	TIM_OC1Init
 557              	.LVL57:
 188:Bsp/periph_timer.c **** 	}
 558              		.loc 1 188 0
 559 00d6 0821     		movs	r1, #8
 560 00d8 55F82400 		ldr	r0, [r5, r4, lsl #2]
 561 00dc FFF7FEFF 		bl	TIM_OC1PreloadConfig
 562              	.LVL58:
 563 00e0 CAE7     		b	.L37
 564              	.L43:
 193:Bsp/periph_timer.c **** 		TIM_OC2PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 565              		.loc 1 193 0
 566 00e2 134D     		ldr	r5, .L46+4
 567 00e4 02A9     		add	r1, sp, #8
ARM GAS  /tmp/ccwxaLkA.s 			page 15


 568 00e6 55F82400 		ldr	r0, [r5, r4, lsl #2]
 569 00ea FFF7FEFF 		bl	TIM_OC2Init
 570              	.LVL59:
 194:Bsp/periph_timer.c **** 	}
 571              		.loc 1 194 0
 572 00ee 0821     		movs	r1, #8
 573 00f0 55F82400 		ldr	r0, [r5, r4, lsl #2]
 574 00f4 FFF7FEFF 		bl	TIM_OC2PreloadConfig
 575              	.LVL60:
 576 00f8 C1E7     		b	.L38
 577              	.L44:
 199:Bsp/periph_timer.c **** 		TIM_OC3PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 578              		.loc 1 199 0
 579 00fa 0D4D     		ldr	r5, .L46+4
 580 00fc 02A9     		add	r1, sp, #8
 581 00fe 55F82400 		ldr	r0, [r5, r4, lsl #2]
 582 0102 FFF7FEFF 		bl	TIM_OC3Init
 583              	.LVL61:
 200:Bsp/periph_timer.c **** 	}
 584              		.loc 1 200 0
 585 0106 0821     		movs	r1, #8
 586 0108 55F82400 		ldr	r0, [r5, r4, lsl #2]
 587 010c FFF7FEFF 		bl	TIM_OC3PreloadConfig
 588              	.LVL62:
 589 0110 B7E7     		b	.L39
 590              	.L45:
 205:Bsp/periph_timer.c **** 		TIM_OC4PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 591              		.loc 1 205 0
 592 0112 074D     		ldr	r5, .L46+4
 593 0114 02A9     		add	r1, sp, #8
 594 0116 55F82400 		ldr	r0, [r5, r4, lsl #2]
 595 011a FFF7FEFF 		bl	TIM_OC4Init
 596              	.LVL63:
 206:Bsp/periph_timer.c **** 	}
 597              		.loc 1 206 0
 598 011e 0821     		movs	r1, #8
 599 0120 55F82400 		ldr	r0, [r5, r4, lsl #2]
 600 0124 FFF7FEFF 		bl	TIM_OC4PreloadConfig
 601              	.LVL64:
 602 0128 ADE7     		b	.L40
 603              	.L47:
 604 012a 00BF     		.align	2
 605              	.L46:
 606 012c 00000000 		.word	.LANCHOR0
 607 0130 00000000 		.word	.LANCHOR1
 608              		.cfi_endproc
 609              	.LFE127:
 611              		.section	.text.periph_Timer_PWM_SetEnable,"ax",%progbits
 612              		.align	1
 613              		.global	periph_Timer_PWM_SetEnable
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 617              		.fpu fpv4-sp-d16
 619              	periph_Timer_PWM_SetEnable:
 620              	.LFB128:
 214:Bsp/periph_timer.c **** 
ARM GAS  /tmp/ccwxaLkA.s 			page 16


 215:Bsp/periph_timer.c **** void periph_Timer_PWM_SetEnable(Timer_list timerx, uint8_t state)
 216:Bsp/periph_timer.c **** {
 621              		.loc 1 216 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              	.LVL65:
 626 0000 08B5     		push	{r3, lr}
 627              	.LCFI11:
 628              		.cfi_def_cfa_offset 8
 629              		.cfi_offset 3, -8
 630              		.cfi_offset 14, -4
 217:Bsp/periph_timer.c **** 	if (state)
 631              		.loc 1 217 0
 632 0002 31B9     		cbnz	r1, .L52
 218:Bsp/periph_timer.c **** 	{
 219:Bsp/periph_timer.c **** 		TIM_Cmd(Timer_Port[timerx], ENABLE);
 220:Bsp/periph_timer.c **** 	}
 221:Bsp/periph_timer.c **** 	else
 222:Bsp/periph_timer.c **** 	{
 223:Bsp/periph_timer.c **** 		TIM_Cmd(Timer_Port[timerx], DISABLE);
 633              		.loc 1 223 0
 634 0004 0021     		movs	r1, #0
 635              	.LVL66:
 636 0006 064B     		ldr	r3, .L53
 637 0008 53F82000 		ldr	r0, [r3, r0, lsl #2]
 638              	.LVL67:
 639 000c FFF7FEFF 		bl	TIM_Cmd
 640              	.LVL68:
 641 0010 08BD     		pop	{r3, pc}
 642              	.LVL69:
 643              	.L52:
 219:Bsp/periph_timer.c **** 	}
 644              		.loc 1 219 0
 645 0012 0121     		movs	r1, #1
 646              	.LVL70:
 647 0014 024B     		ldr	r3, .L53
 648 0016 53F82000 		ldr	r0, [r3, r0, lsl #2]
 649              	.LVL71:
 650 001a FFF7FEFF 		bl	TIM_Cmd
 651              	.LVL72:
 652 001e 08BD     		pop	{r3, pc}
 653              	.L54:
 654              		.align	2
 655              	.L53:
 656 0020 00000000 		.word	.LANCHOR1
 657              		.cfi_endproc
 658              	.LFE128:
 660              		.section	.text.periph_Timer_DShotOutPut_Mode_Init,"ax",%progbits
 661              		.align	1
 662              		.global	periph_Timer_DShotOutPut_Mode_Init
 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 666              		.fpu fpv4-sp-d16
 668              	periph_Timer_DShotOutPut_Mode_Init:
 669              	.LFB129:
ARM GAS  /tmp/ccwxaLkA.s 			page 17


 224:Bsp/periph_timer.c **** 	}
 225:Bsp/periph_timer.c **** }
 226:Bsp/periph_timer.c **** 
 227:Bsp/periph_timer.c **** void periph_Timer_DShotOutPut_Mode_Init(Timer_list timerx, Timer_PWM_Channel_State CH1_State, Timer
 228:Bsp/periph_timer.c **** 										uint32_t Buff_Size, uint32_t CH1_Buff, uint32_t CH2_Buff, uint32_t CH3_Buff, uint32_t CH4
 229:Bsp/periph_timer.c **** {
 670              		.loc 1 229 0
 671              		.cfi_startproc
 672              		@ args = 24, pretend = 0, frame = 96
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              	.LVL73:
 675 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 676              	.LCFI12:
 677              		.cfi_def_cfa_offset 32
 678              		.cfi_offset 4, -32
 679              		.cfi_offset 5, -28
 680              		.cfi_offset 6, -24
 681              		.cfi_offset 7, -20
 682              		.cfi_offset 8, -16
 683              		.cfi_offset 9, -12
 684              		.cfi_offset 10, -8
 685              		.cfi_offset 14, -4
 686 0004 9AB0     		sub	sp, sp, #104
 687              	.LCFI13:
 688              		.cfi_def_cfa_offset 136
 689 0006 0446     		mov	r4, r0
 690 0008 8946     		mov	r9, r1
 691 000a 9046     		mov	r8, r2
 692 000c 1F46     		mov	r7, r3
 693 000e 9DF88850 		ldrb	r5, [sp, #136]	@ zero_extendqisi2
 230:Bsp/periph_timer.c **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
 231:Bsp/periph_timer.c **** 	TIM_OCInitTypeDef TIM_OCInitStructure;
 232:Bsp/periph_timer.c **** 	DMA_InitTypeDef DMA_InitStructure;
 233:Bsp/periph_timer.c **** 
 234:Bsp/periph_timer.c **** 	periph_Timer_IO_Init(timerx, CH1_State, CH2_State, CH3_State, CH4_State);
 694              		.loc 1 234 0
 695 0012 0095     		str	r5, [sp]
 696 0014 FFF7FEFF 		bl	periph_Timer_IO_Init
 697              	.LVL74:
 235:Bsp/periph_timer.c **** 
 236:Bsp/periph_timer.c **** 	RCC_APB1PeriphClockCmd(Timer_CLK[timerx], ENABLE);
 698              		.loc 1 236 0
 699 0018 0121     		movs	r1, #1
 700 001a 964B     		ldr	r3, .L81
 701 001c 53F82400 		ldr	r0, [r3, r4, lsl #2]
 702 0020 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 703              	.LVL75:
 237:Bsp/periph_timer.c **** 	TIM_DeInit(Timer_Port[timerx]);
 704              		.loc 1 237 0
 705 0024 DFF850A2 		ldr	r10, .L81+4
 706 0028 5AF82400 		ldr	r0, [r10, r4, lsl #2]
 707 002c FFF7FEFF 		bl	TIM_DeInit
 708              	.LVL76:
 238:Bsp/periph_timer.c **** 
 239:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_Period = TIM_DShot600_Period;
 709              		.loc 1 239 0
 710 0030 4523     		movs	r3, #69
ARM GAS  /tmp/ccwxaLkA.s 			page 18


 711 0032 1893     		str	r3, [sp, #96]
 240:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_Prescaler = TIM_DShot600_Prescaler;
 712              		.loc 1 240 0
 713 0034 0323     		movs	r3, #3
 714 0036 ADF85C30 		strh	r3, [sp, #92]	@ movhi
 241:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
 715              		.loc 1 241 0
 716 003a 0026     		movs	r6, #0
 717 003c ADF86460 		strh	r6, [sp, #100]	@ movhi
 242:Bsp/periph_timer.c **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 718              		.loc 1 242 0
 719 0040 ADF85E60 		strh	r6, [sp, #94]	@ movhi
 243:Bsp/periph_timer.c **** 	TIM_TimeBaseInit(Timer_Port[timerx], &TIM_TimeBaseStructure);
 720              		.loc 1 243 0
 721 0044 17A9     		add	r1, sp, #92
 722 0046 5AF82400 		ldr	r0, [r10, r4, lsl #2]
 723 004a FFF7FEFF 		bl	TIM_TimeBaseInit
 724              	.LVL77:
 244:Bsp/periph_timer.c **** 
 245:Bsp/periph_timer.c **** 	TIM_OCStructInit(&TIM_OCInitStructure);
 725              		.loc 1 245 0
 726 004e 12A8     		add	r0, sp, #72
 727 0050 FFF7FEFF 		bl	TIM_OCStructInit
 728              	.LVL78:
 246:Bsp/periph_timer.c **** 	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
 729              		.loc 1 246 0
 730 0054 6023     		movs	r3, #96
 731 0056 ADF84830 		strh	r3, [sp, #72]	@ movhi
 247:Bsp/periph_timer.c **** 	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
 732              		.loc 1 247 0
 733 005a 0123     		movs	r3, #1
 734 005c ADF84A30 		strh	r3, [sp, #74]	@ movhi
 248:Bsp/periph_timer.c **** 	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
 735              		.loc 1 248 0
 736 0060 ADF85460 		strh	r6, [sp, #84]	@ movhi
 249:Bsp/periph_timer.c **** 
 250:Bsp/periph_timer.c **** 	if (CH1_State == PWM_CH1_Enable)
 737              		.loc 1 250 0
 738 0064 9945     		cmp	r9, r3
 739 0066 20D0     		beq	.L69
 740              	.L56:
 251:Bsp/periph_timer.c **** 	{
 252:Bsp/periph_timer.c **** 		TIM_OC1Init(Timer_Port[timerx], &TIM_OCInitStructure);
 253:Bsp/periph_timer.c **** 		TIM_OC1PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 254:Bsp/periph_timer.c **** 	}
 255:Bsp/periph_timer.c **** 
 256:Bsp/periph_timer.c **** 	if (CH2_State == PWM_CH2_Enable)
 741              		.loc 1 256 0
 742 0068 B8F1010F 		cmp	r8, #1
 743 006c 28D0     		beq	.L70
 744              	.L57:
 257:Bsp/periph_timer.c **** 	{
 258:Bsp/periph_timer.c **** 		TIM_OC2Init(Timer_Port[timerx], &TIM_OCInitStructure);
 259:Bsp/periph_timer.c **** 		TIM_OC2PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 260:Bsp/periph_timer.c **** 	}
 261:Bsp/periph_timer.c **** 
 262:Bsp/periph_timer.c **** 	if (CH3_State == PWM_CH3_Enable)
ARM GAS  /tmp/ccwxaLkA.s 			page 19


 745              		.loc 1 262 0
 746 006e 012F     		cmp	r7, #1
 747 0070 32D0     		beq	.L71
 748              	.L58:
 263:Bsp/periph_timer.c **** 	{
 264:Bsp/periph_timer.c **** 		TIM_OC3Init(Timer_Port[timerx], &TIM_OCInitStructure);
 265:Bsp/periph_timer.c **** 		TIM_OC3PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 266:Bsp/periph_timer.c **** 	}
 267:Bsp/periph_timer.c **** 
 268:Bsp/periph_timer.c **** 	if (CH4_State == PWM_CH4_Enable)
 749              		.loc 1 268 0
 750 0072 012D     		cmp	r5, #1
 751 0074 3CD0     		beq	.L72
 752              	.L59:
 269:Bsp/periph_timer.c **** 	{
 270:Bsp/periph_timer.c **** 		TIM_OC4Init(Timer_Port[timerx], &TIM_OCInitStructure);
 271:Bsp/periph_timer.c **** 		TIM_OC4PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 272:Bsp/periph_timer.c **** 	}
 273:Bsp/periph_timer.c **** 
 274:Bsp/periph_timer.c **** 	TIM_ARRPreloadConfig(Timer_Port[timerx], ENABLE);
 753              		.loc 1 274 0
 754 0076 804E     		ldr	r6, .L81+4
 755 0078 0121     		movs	r1, #1
 756 007a 56F82400 		ldr	r0, [r6, r4, lsl #2]
 757 007e FFF7FEFF 		bl	TIM_ARRPreloadConfig
 758              	.LVL79:
 275:Bsp/periph_timer.c **** 	TIM_Cmd(Timer_Port[timerx], ENABLE);
 759              		.loc 1 275 0
 760 0082 0121     		movs	r1, #1
 761 0084 56F82400 		ldr	r0, [r6, r4, lsl #2]
 762 0088 FFF7FEFF 		bl	TIM_Cmd
 763              	.LVL80:
 276:Bsp/periph_timer.c **** 
 277:Bsp/periph_timer.c **** 	if (CH1_State == PWM_CH1_Enable)
 764              		.loc 1 277 0
 765 008c B9F1010F 		cmp	r9, #1
 766 0090 3AD0     		beq	.L73
 767              	.L60:
 278:Bsp/periph_timer.c **** 	{
 279:Bsp/periph_timer.c **** 		TIM_DMACmd(Timer_Port[timerx], TIM_DMA_CC1, ENABLE);
 280:Bsp/periph_timer.c **** 
 281:Bsp/periph_timer.c **** 		if (timerx == Timer_2)
 282:Bsp/periph_timer.c **** 		{
 283:Bsp/periph_timer.c **** 			periph_DMA_TIM(&DMA_InitStructure, TIM2_CH1_DMA_Channel, (uint32_t) & (TIM2->CCR1), CH1_Buff, Bu
 284:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM2_DMA_CLK, TIM2_CH1_DMA_Stream, &DMA_InitStructure, DISABLE);
 285:Bsp/periph_timer.c **** 		}
 286:Bsp/periph_timer.c **** 		else if (timerx == Timer_3)
 287:Bsp/periph_timer.c **** 		{
 288:Bsp/periph_timer.c **** 			periph_DMA_TIM(&DMA_InitStructure, TIM3_CH1_DMA_Channel, (uint32_t) & (TIM3->CCR1), CH1_Buff, Bu
 289:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM3_DMA_CLK, TIM3_CH1_DMA_Stream, &DMA_InitStructure, DISABLE);
 290:Bsp/periph_timer.c **** 		}
 291:Bsp/periph_timer.c **** 	}
 292:Bsp/periph_timer.c **** 
 293:Bsp/periph_timer.c **** 	if (CH2_State == PWM_CH2_Enable)
 768              		.loc 1 293 0
 769 0092 B8F1010F 		cmp	r8, #1
 770 0096 63D0     		beq	.L74
ARM GAS  /tmp/ccwxaLkA.s 			page 20


 771              	.L62:
 294:Bsp/periph_timer.c **** 	{
 295:Bsp/periph_timer.c **** 		TIM_DMACmd(Timer_Port[timerx], TIM_DMA_CC2, ENABLE);
 296:Bsp/periph_timer.c **** 
 297:Bsp/periph_timer.c **** 		if (timerx == Timer_2)
 298:Bsp/periph_timer.c **** 		{
 299:Bsp/periph_timer.c **** 			periph_DMA_TIM(&DMA_InitStructure, TIM2_CH2_DMA_Channel, (uint32_t) & (TIM2->CCR2), CH2_Buff, Bu
 300:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM2_DMA_CLK, TIM2_CH2_DMA_Stream, &DMA_InitStructure, DISABLE);
 301:Bsp/periph_timer.c **** 		}
 302:Bsp/periph_timer.c **** 		else if (timerx == Timer_3)
 303:Bsp/periph_timer.c **** 		{
 304:Bsp/periph_timer.c **** 			periph_DMA_TIM(&DMA_InitStructure, TIM3_CH2_DMA_Channel, (uint32_t) & (TIM3->CCR2), CH2_Buff, Bu
 305:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM3_DMA_CLK, TIM3_CH2_DMA_Stream, &DMA_InitStructure, DISABLE);
 306:Bsp/periph_timer.c **** 		}
 307:Bsp/periph_timer.c **** 	}
 308:Bsp/periph_timer.c **** 
 309:Bsp/periph_timer.c **** 	if (CH3_State == PWM_CH3_Enable)
 772              		.loc 1 309 0
 773 0098 012F     		cmp	r7, #1
 774 009a 00F08E80 		beq	.L75
 775              	.L64:
 310:Bsp/periph_timer.c **** 	{
 311:Bsp/periph_timer.c **** 		TIM_DMACmd(Timer_Port[timerx], TIM_DMA_CC3, ENABLE);
 312:Bsp/periph_timer.c **** 
 313:Bsp/periph_timer.c **** 		if (timerx == Timer_2)
 314:Bsp/periph_timer.c **** 		{
 315:Bsp/periph_timer.c **** 			periph_DMA_TIM(&DMA_InitStructure, TIM2_CH3_DMA_Channel, (uint32_t) & (TIM2->CCR3), CH3_Buff, Bu
 316:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM2_DMA_CLK, TIM2_CH3_DMA_Stream, &DMA_InitStructure, DISABLE);
 317:Bsp/periph_timer.c **** 		}
 318:Bsp/periph_timer.c **** 		else if (timerx == Timer_3)
 319:Bsp/periph_timer.c **** 		{
 320:Bsp/periph_timer.c **** 			periph_DMA_TIM(&DMA_InitStructure, TIM3_CH2_DMA_Channel, (uint32_t) & (TIM3->CCR3), CH3_Buff, Bu
 321:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM3_DMA_CLK, TIM3_CH3_DMA_Stream, &DMA_InitStructure, DISABLE);
 322:Bsp/periph_timer.c **** 		}
 323:Bsp/periph_timer.c **** 	}
 324:Bsp/periph_timer.c **** 
 325:Bsp/periph_timer.c **** 	if (CH4_State == PWM_CH4_Enable)
 776              		.loc 1 325 0
 777 009e 012D     		cmp	r5, #1
 778 00a0 00F0B980 		beq	.L76
 779              	.L55:
 326:Bsp/periph_timer.c **** 	{
 327:Bsp/periph_timer.c **** 		TIM_DMACmd(Timer_Port[timerx], TIM_DMA_CC4, ENABLE);
 328:Bsp/periph_timer.c **** 
 329:Bsp/periph_timer.c **** 		if (timerx == Timer_2)
 330:Bsp/periph_timer.c **** 		{
 331:Bsp/periph_timer.c **** 			periph_DMA_TIM(&DMA_InitStructure, TIM2_CH4_DMA_Channel, (uint32_t) & (TIM2->CCR4), CH4_Buff, Bu
 332:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM2_DMA_CLK, TIM2_CH4_DMA_Stream, &DMA_InitStructure, DISABLE);
 333:Bsp/periph_timer.c **** 		}
 334:Bsp/periph_timer.c **** 		else if (timerx == Timer_3)
 335:Bsp/periph_timer.c **** 		{
 336:Bsp/periph_timer.c **** 			periph_DMA_TIM(&DMA_InitStructure, TIM3_CH4_DMA_Channel, (uint32_t) & (TIM3->CCR4), CH4_Buff, Bu
 337:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM3_DMA_CLK, TIM3_CH4_DMA_Stream, &DMA_InitStructure, DISABLE);
 338:Bsp/periph_timer.c **** 		}
 339:Bsp/periph_timer.c **** 	}
 340:Bsp/periph_timer.c **** }
 780              		.loc 1 340 0
ARM GAS  /tmp/ccwxaLkA.s 			page 21


 781 00a4 1AB0     		add	sp, sp, #104
 782              	.LCFI14:
 783              		.cfi_remember_state
 784              		.cfi_def_cfa_offset 32
 785              		@ sp needed
 786 00a6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 787              	.LVL81:
 788              	.L69:
 789              	.LCFI15:
 790              		.cfi_restore_state
 252:Bsp/periph_timer.c **** 		TIM_OC1PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 791              		.loc 1 252 0
 792 00aa 12A9     		add	r1, sp, #72
 793 00ac 5AF82400 		ldr	r0, [r10, r4, lsl #2]
 794 00b0 FFF7FEFF 		bl	TIM_OC1Init
 795              	.LVL82:
 253:Bsp/periph_timer.c **** 	}
 796              		.loc 1 253 0
 797 00b4 0821     		movs	r1, #8
 798 00b6 5AF82400 		ldr	r0, [r10, r4, lsl #2]
 799 00ba FFF7FEFF 		bl	TIM_OC1PreloadConfig
 800              	.LVL83:
 801 00be D3E7     		b	.L56
 802              	.L70:
 258:Bsp/periph_timer.c **** 		TIM_OC2PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 803              		.loc 1 258 0
 804 00c0 6D4E     		ldr	r6, .L81+4
 805 00c2 12A9     		add	r1, sp, #72
 806 00c4 56F82400 		ldr	r0, [r6, r4, lsl #2]
 807 00c8 FFF7FEFF 		bl	TIM_OC2Init
 808              	.LVL84:
 259:Bsp/periph_timer.c **** 	}
 809              		.loc 1 259 0
 810 00cc 0821     		movs	r1, #8
 811 00ce 56F82400 		ldr	r0, [r6, r4, lsl #2]
 812 00d2 FFF7FEFF 		bl	TIM_OC2PreloadConfig
 813              	.LVL85:
 814 00d6 CAE7     		b	.L57
 815              	.L71:
 264:Bsp/periph_timer.c **** 		TIM_OC3PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 816              		.loc 1 264 0
 817 00d8 674E     		ldr	r6, .L81+4
 818 00da 12A9     		add	r1, sp, #72
 819 00dc 56F82400 		ldr	r0, [r6, r4, lsl #2]
 820 00e0 FFF7FEFF 		bl	TIM_OC3Init
 821              	.LVL86:
 265:Bsp/periph_timer.c **** 	}
 822              		.loc 1 265 0
 823 00e4 0821     		movs	r1, #8
 824 00e6 56F82400 		ldr	r0, [r6, r4, lsl #2]
 825 00ea FFF7FEFF 		bl	TIM_OC3PreloadConfig
 826              	.LVL87:
 827 00ee C0E7     		b	.L58
 828              	.L72:
 270:Bsp/periph_timer.c **** 		TIM_OC4PreloadConfig(Timer_Port[timerx], TIM_OCPreload_Enable);
 829              		.loc 1 270 0
 830 00f0 614E     		ldr	r6, .L81+4
ARM GAS  /tmp/ccwxaLkA.s 			page 22


 831 00f2 12A9     		add	r1, sp, #72
 832 00f4 56F82400 		ldr	r0, [r6, r4, lsl #2]
 833 00f8 FFF7FEFF 		bl	TIM_OC4Init
 834              	.LVL88:
 271:Bsp/periph_timer.c **** 	}
 835              		.loc 1 271 0
 836 00fc 0821     		movs	r1, #8
 837 00fe 56F82400 		ldr	r0, [r6, r4, lsl #2]
 838 0102 FFF7FEFF 		bl	TIM_OC4PreloadConfig
 839              	.LVL89:
 840 0106 B6E7     		b	.L59
 841              	.L73:
 279:Bsp/periph_timer.c **** 
 842              		.loc 1 279 0
 843 0108 0122     		movs	r2, #1
 844 010a 4FF40071 		mov	r1, #512
 845 010e 56F82400 		ldr	r0, [r6, r4, lsl #2]
 846 0112 FFF7FEFF 		bl	TIM_DMACmd
 847              	.LVL90:
 281:Bsp/periph_timer.c **** 		{
 848              		.loc 1 281 0
 849 0116 94B1     		cbz	r4, .L77
 286:Bsp/periph_timer.c **** 		{
 850              		.loc 1 286 0
 851 0118 012C     		cmp	r4, #1
 852 011a BAD1     		bne	.L60
 853              	.LBB2:
 288:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM3_DMA_CLK, TIM3_CH1_DMA_Stream, &DMA_InitStructure, DISABLE);
 854              		.loc 1 288 0
 855 011c 239B     		ldr	r3, [sp, #140]
 856 011e 0093     		str	r3, [sp]
 857 0120 249B     		ldr	r3, [sp, #144]
 858 0122 564A     		ldr	r2, .L81+8
 859 0124 4FF02061 		mov	r1, #167772160
 860 0128 03A8     		add	r0, sp, #12
 861 012a FFF7FEFF 		bl	periph_DMA_TIM
 862              	.LVL91:
 289:Bsp/periph_timer.c **** 		}
 863              		.loc 1 289 0
 864 012e 0023     		movs	r3, #0
 865 0130 03AA     		add	r2, sp, #12
 866 0132 5349     		ldr	r1, .L81+12
 867 0134 4FF40010 		mov	r0, #2097152
 868 0138 FFF7FEFF 		bl	periph_DMA_Init
 869              	.LVL92:
 870 013c A9E7     		b	.L60
 871              	.L77:
 872              	.LBE2:
 873              	.LBB3:
 283:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM2_DMA_CLK, TIM2_CH1_DMA_Stream, &DMA_InitStructure, DISABLE);
 874              		.loc 1 283 0
 875 013e 239B     		ldr	r3, [sp, #140]
 876 0140 0093     		str	r3, [sp]
 877 0142 249B     		ldr	r3, [sp, #144]
 878 0144 4F4A     		ldr	r2, .L81+16
 879 0146 4FF0C061 		mov	r1, #100663296
 880 014a 03A8     		add	r0, sp, #12
ARM GAS  /tmp/ccwxaLkA.s 			page 23


 881 014c FFF7FEFF 		bl	periph_DMA_TIM
 882              	.LVL93:
 284:Bsp/periph_timer.c **** 		}
 883              		.loc 1 284 0
 884 0150 0023     		movs	r3, #0
 885 0152 03AA     		add	r2, sp, #12
 886 0154 4C49     		ldr	r1, .L81+20
 887 0156 4FF40010 		mov	r0, #2097152
 888 015a FFF7FEFF 		bl	periph_DMA_Init
 889              	.LVL94:
 890              	.LBE3:
 891 015e 98E7     		b	.L60
 892              	.L74:
 295:Bsp/periph_timer.c **** 
 893              		.loc 1 295 0
 894 0160 0122     		movs	r2, #1
 895 0162 4FF48061 		mov	r1, #1024
 896 0166 444B     		ldr	r3, .L81+4
 897 0168 53F82400 		ldr	r0, [r3, r4, lsl #2]
 898 016c FFF7FEFF 		bl	TIM_DMACmd
 899              	.LVL95:
 297:Bsp/periph_timer.c **** 		{
 900              		.loc 1 297 0
 901 0170 94B1     		cbz	r4, .L78
 302:Bsp/periph_timer.c **** 		{
 902              		.loc 1 302 0
 903 0172 012C     		cmp	r4, #1
 904 0174 90D1     		bne	.L62
 905              	.LBB4:
 304:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM3_DMA_CLK, TIM3_CH2_DMA_Stream, &DMA_InitStructure, DISABLE);
 906              		.loc 1 304 0
 907 0176 239B     		ldr	r3, [sp, #140]
 908 0178 0093     		str	r3, [sp]
 909 017a 259B     		ldr	r3, [sp, #148]
 910 017c 434A     		ldr	r2, .L81+24
 911 017e 4FF02061 		mov	r1, #167772160
 912 0182 03A8     		add	r0, sp, #12
 913 0184 FFF7FEFF 		bl	periph_DMA_TIM
 914              	.LVL96:
 305:Bsp/periph_timer.c **** 		}
 915              		.loc 1 305 0
 916 0188 0023     		movs	r3, #0
 917 018a 03AA     		add	r2, sp, #12
 918 018c 3E49     		ldr	r1, .L81+20
 919 018e 4FF40010 		mov	r0, #2097152
 920 0192 FFF7FEFF 		bl	periph_DMA_Init
 921              	.LVL97:
 922 0196 7FE7     		b	.L62
 923              	.L78:
 924              	.LBE4:
 925              	.LBB5:
 299:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM2_DMA_CLK, TIM2_CH2_DMA_Stream, &DMA_InitStructure, DISABLE);
 926              		.loc 1 299 0
 927 0198 239B     		ldr	r3, [sp, #140]
 928 019a 0093     		str	r3, [sp]
 929 019c 259B     		ldr	r3, [sp, #148]
 930 019e 3C4A     		ldr	r2, .L81+28
ARM GAS  /tmp/ccwxaLkA.s 			page 24


 931 01a0 4FF0C061 		mov	r1, #100663296
 932 01a4 03A8     		add	r0, sp, #12
 933 01a6 FFF7FEFF 		bl	periph_DMA_TIM
 934              	.LVL98:
 300:Bsp/periph_timer.c **** 		}
 935              		.loc 1 300 0
 936 01aa 0023     		movs	r3, #0
 937 01ac 03AA     		add	r2, sp, #12
 938 01ae 3949     		ldr	r1, .L81+32
 939 01b0 4FF40010 		mov	r0, #2097152
 940 01b4 FFF7FEFF 		bl	periph_DMA_Init
 941              	.LVL99:
 942              	.LBE5:
 943 01b8 6EE7     		b	.L62
 944              	.L75:
 311:Bsp/periph_timer.c **** 
 945              		.loc 1 311 0
 946 01ba 0122     		movs	r2, #1
 947 01bc 4FF40061 		mov	r1, #2048
 948 01c0 2D4B     		ldr	r3, .L81+4
 949 01c2 53F82400 		ldr	r0, [r3, r4, lsl #2]
 950 01c6 FFF7FEFF 		bl	TIM_DMACmd
 951              	.LVL100:
 313:Bsp/periph_timer.c **** 		{
 952              		.loc 1 313 0
 953 01ca 9CB1     		cbz	r4, .L79
 318:Bsp/periph_timer.c **** 		{
 954              		.loc 1 318 0
 955 01cc 012C     		cmp	r4, #1
 956 01ce 7FF466AF 		bne	.L64
 957              	.LBB6:
 320:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM3_DMA_CLK, TIM3_CH3_DMA_Stream, &DMA_InitStructure, DISABLE);
 958              		.loc 1 320 0
 959 01d2 239B     		ldr	r3, [sp, #140]
 960 01d4 0093     		str	r3, [sp]
 961 01d6 269B     		ldr	r3, [sp, #152]
 962 01d8 2F4A     		ldr	r2, .L81+36
 963 01da 4FF02061 		mov	r1, #167772160
 964 01de 03A8     		add	r0, sp, #12
 965 01e0 FFF7FEFF 		bl	periph_DMA_TIM
 966              	.LVL101:
 321:Bsp/periph_timer.c **** 		}
 967              		.loc 1 321 0
 968 01e4 0023     		movs	r3, #0
 969 01e6 03AA     		add	r2, sp, #12
 970 01e8 2C49     		ldr	r1, .L81+40
 971 01ea 4FF40010 		mov	r0, #2097152
 972 01ee FFF7FEFF 		bl	periph_DMA_Init
 973              	.LVL102:
 974 01f2 54E7     		b	.L64
 975              	.L79:
 976              	.LBE6:
 977              	.LBB7:
 315:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM2_DMA_CLK, TIM2_CH3_DMA_Stream, &DMA_InitStructure, DISABLE);
 978              		.loc 1 315 0
 979 01f4 239B     		ldr	r3, [sp, #140]
 980 01f6 0093     		str	r3, [sp]
ARM GAS  /tmp/ccwxaLkA.s 			page 25


 981 01f8 269B     		ldr	r3, [sp, #152]
 982 01fa 294A     		ldr	r2, .L81+44
 983 01fc 4FF0C061 		mov	r1, #100663296
 984 0200 03A8     		add	r0, sp, #12
 985 0202 FFF7FEFF 		bl	periph_DMA_TIM
 986              	.LVL103:
 316:Bsp/periph_timer.c **** 		}
 987              		.loc 1 316 0
 988 0206 0023     		movs	r3, #0
 989 0208 03AA     		add	r2, sp, #12
 990 020a 2649     		ldr	r1, .L81+48
 991 020c 4FF40010 		mov	r0, #2097152
 992 0210 FFF7FEFF 		bl	periph_DMA_Init
 993              	.LVL104:
 994              	.LBE7:
 995 0214 43E7     		b	.L64
 996              	.L76:
 327:Bsp/periph_timer.c **** 
 997              		.loc 1 327 0
 998 0216 0122     		movs	r2, #1
 999 0218 4FF48051 		mov	r1, #4096
 1000 021c 164B     		ldr	r3, .L81+4
 1001 021e 53F82400 		ldr	r0, [r3, r4, lsl #2]
 1002 0222 FFF7FEFF 		bl	TIM_DMACmd
 1003              	.LVL105:
 329:Bsp/periph_timer.c **** 		{
 1004              		.loc 1 329 0
 1005 0226 9CB1     		cbz	r4, .L80
 334:Bsp/periph_timer.c **** 		{
 1006              		.loc 1 334 0
 1007 0228 012C     		cmp	r4, #1
 1008 022a 7FF43BAF 		bne	.L55
 1009              	.LBB8:
 336:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM3_DMA_CLK, TIM3_CH4_DMA_Stream, &DMA_InitStructure, DISABLE);
 1010              		.loc 1 336 0
 1011 022e 239B     		ldr	r3, [sp, #140]
 1012 0230 0093     		str	r3, [sp]
 1013 0232 279B     		ldr	r3, [sp, #156]
 1014 0234 1C4A     		ldr	r2, .L81+52
 1015 0236 4FF02061 		mov	r1, #167772160
 1016 023a 03A8     		add	r0, sp, #12
 1017 023c FFF7FEFF 		bl	periph_DMA_TIM
 1018              	.LVL106:
 337:Bsp/periph_timer.c **** 		}
 1019              		.loc 1 337 0
 1020 0240 0023     		movs	r3, #0
 1021 0242 03AA     		add	r2, sp, #12
 1022 0244 1949     		ldr	r1, .L81+56
 1023 0246 4FF40010 		mov	r0, #2097152
 1024 024a FFF7FEFF 		bl	periph_DMA_Init
 1025              	.LVL107:
 1026              	.LBE8:
 1027              		.loc 1 340 0
 1028 024e 29E7     		b	.L55
 1029              	.L80:
 1030              	.LBB9:
 331:Bsp/periph_timer.c **** 			periph_DMA_Init(TIM2_DMA_CLK, TIM2_CH4_DMA_Stream, &DMA_InitStructure, DISABLE);
ARM GAS  /tmp/ccwxaLkA.s 			page 26


 1031              		.loc 1 331 0
 1032 0250 239B     		ldr	r3, [sp, #140]
 1033 0252 0093     		str	r3, [sp]
 1034 0254 279B     		ldr	r3, [sp, #156]
 1035 0256 164A     		ldr	r2, .L81+60
 1036 0258 4FF0C061 		mov	r1, #100663296
 1037 025c 03A8     		add	r0, sp, #12
 1038 025e FFF7FEFF 		bl	periph_DMA_TIM
 1039              	.LVL108:
 332:Bsp/periph_timer.c **** 		}
 1040              		.loc 1 332 0
 1041 0262 0023     		movs	r3, #0
 1042 0264 03AA     		add	r2, sp, #12
 1043 0266 0B49     		ldr	r1, .L81+32
 1044 0268 4FF40010 		mov	r0, #2097152
 1045 026c FFF7FEFF 		bl	periph_DMA_Init
 1046              	.LVL109:
 1047              	.LBE9:
 1048 0270 18E7     		b	.L55
 1049              	.L82:
 1050 0272 00BF     		.align	2
 1051              	.L81:
 1052 0274 00000000 		.word	.LANCHOR0
 1053 0278 00000000 		.word	.LANCHOR1
 1054 027c 34040040 		.word	1073742900
 1055 0280 70600240 		.word	1073897584
 1056 0284 34000040 		.word	1073741876
 1057 0288 88600240 		.word	1073897608
 1058 028c 38040040 		.word	1073742904
 1059 0290 38000040 		.word	1073741880
 1060 0294 A0600240 		.word	1073897632
 1061 0298 3C040040 		.word	1073742908
 1062 029c B8600240 		.word	1073897656
 1063 02a0 3C000040 		.word	1073741884
 1064 02a4 28600240 		.word	1073897512
 1065 02a8 40040040 		.word	1073742912
 1066 02ac 40600240 		.word	1073897536
 1067 02b0 40000040 		.word	1073741888
 1068              		.cfi_endproc
 1069              	.LFE129:
 1071              		.section	.text.periph_Timer_Set_PWMOutPut,"ax",%progbits
 1072              		.align	1
 1073              		.global	periph_Timer_Set_PWMOutPut
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1077              		.fpu fpv4-sp-d16
 1079              	periph_Timer_Set_PWMOutPut:
 1080              	.LFB130:
 341:Bsp/periph_timer.c **** 
 342:Bsp/periph_timer.c **** void periph_Timer_Set_PWMOutPut(Timer_list timerx, PWM_OutPut_Channel Channel, uint32_t value)
 343:Bsp/periph_timer.c **** {
 1081              		.loc 1 343 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085              	.LVL110:
ARM GAS  /tmp/ccwxaLkA.s 			page 27


 1086 0000 08B5     		push	{r3, lr}
 1087              	.LCFI16:
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 3, -8
 1090              		.cfi_offset 14, -4
 344:Bsp/periph_timer.c **** 	PWM_Set_Value[Channel](Timer_Port[timerx], value);
 1091              		.loc 1 344 0
 1092 0002 044B     		ldr	r3, .L85
 1093 0004 53F82130 		ldr	r3, [r3, r1, lsl #2]
 1094 0008 1146     		mov	r1, r2
 1095              	.LVL111:
 1096 000a 034A     		ldr	r2, .L85+4
 1097              	.LVL112:
 1098 000c 52F82000 		ldr	r0, [r2, r0, lsl #2]
 1099              	.LVL113:
 1100 0010 9847     		blx	r3
 1101              	.LVL114:
 1102 0012 08BD     		pop	{r3, pc}
 1103              	.L86:
 1104              		.align	2
 1105              	.L85:
 1106 0014 00000000 		.word	.LANCHOR3
 1107 0018 00000000 		.word	.LANCHOR1
 1108              		.cfi_endproc
 1109              	.LFE130:
 1111              		.section	.text.periph_Timer_Counter_SetEnable,"ax",%progbits
 1112              		.align	1
 1113              		.global	periph_Timer_Counter_SetEnable
 1114              		.syntax unified
 1115              		.thumb
 1116              		.thumb_func
 1117              		.fpu fpv4-sp-d16
 1119              	periph_Timer_Counter_SetEnable:
 1120              	.LFB131:
 345:Bsp/periph_timer.c **** }
 346:Bsp/periph_timer.c **** 
 347:Bsp/periph_timer.c **** void periph_Timer_Counter_SetEnable(Timer_list timerx, uint8_t state)
 348:Bsp/periph_timer.c **** {
 1121              		.loc 1 348 0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 0
 1124              		@ frame_needed = 0, uses_anonymous_args = 0
 1125              	.LVL115:
 1126 0000 08B5     		push	{r3, lr}
 1127              	.LCFI17:
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 3, -8
 1130              		.cfi_offset 14, -4
 349:Bsp/periph_timer.c **** 	if (state)
 1131              		.loc 1 349 0
 1132 0002 31B9     		cbnz	r1, .L91
 350:Bsp/periph_timer.c **** 	{
 351:Bsp/periph_timer.c **** 		TIM_Cmd(Timer_Port[timerx], ENABLE);
 352:Bsp/periph_timer.c **** 	}
 353:Bsp/periph_timer.c **** 	else
 354:Bsp/periph_timer.c **** 	{
 355:Bsp/periph_timer.c **** 		TIM_Cmd(Timer_Port[timerx], DISABLE);
ARM GAS  /tmp/ccwxaLkA.s 			page 28


 1133              		.loc 1 355 0
 1134 0004 0021     		movs	r1, #0
 1135              	.LVL116:
 1136 0006 064B     		ldr	r3, .L92
 1137 0008 53F82000 		ldr	r0, [r3, r0, lsl #2]
 1138              	.LVL117:
 1139 000c FFF7FEFF 		bl	TIM_Cmd
 1140              	.LVL118:
 1141 0010 08BD     		pop	{r3, pc}
 1142              	.LVL119:
 1143              	.L91:
 351:Bsp/periph_timer.c **** 	}
 1144              		.loc 1 351 0
 1145 0012 0121     		movs	r1, #1
 1146              	.LVL120:
 1147 0014 024B     		ldr	r3, .L92
 1148 0016 53F82000 		ldr	r0, [r3, r0, lsl #2]
 1149              	.LVL121:
 1150 001a FFF7FEFF 		bl	TIM_Cmd
 1151              	.LVL122:
 1152 001e 08BD     		pop	{r3, pc}
 1153              	.L93:
 1154              		.align	2
 1155              	.L92:
 1156 0020 00000000 		.word	.LANCHOR1
 1157              		.cfi_endproc
 1158              	.LFE131:
 1160              		.global	Timer_Port
 1161              		.section	.data.Timer_Port,"aw",%progbits
 1162              		.align	2
 1163              		.set	.LANCHOR1,. + 0
 1166              	Timer_Port:
 1167 0000 00000040 		.word	1073741824
 1168 0004 00040040 		.word	1073742848
 1169 0008 00080040 		.word	1073743872
 1170              		.section	.rodata.PWM_Set_Value,"a",%progbits
 1171              		.align	2
 1172              		.set	.LANCHOR3,. + 0
 1175              	PWM_Set_Value:
 1176 0000 00000000 		.word	TIM_SetCompare1
 1177 0004 00000000 		.word	TIM_SetCompare2
 1178 0008 00000000 		.word	TIM_SetCompare3
 1179 000c 00000000 		.word	TIM_SetCompare4
 1180              		.section	.rodata.Timer_CLK,"a",%progbits
 1181              		.align	2
 1182              		.set	.LANCHOR0,. + 0
 1185              	Timer_CLK:
 1186 0000 01000000 		.word	1
 1187 0004 02000000 		.word	2
 1188 0008 04000000 		.word	4
 1189              		.section	.rodata.Timer_IRQ_Channel,"a",%progbits
 1190              		.align	2
 1191              		.set	.LANCHOR2,. + 0
 1194              	Timer_IRQ_Channel:
 1195 0000 1C       		.byte	28
 1196 0001 1D       		.byte	29
 1197 0002 1E       		.byte	30
ARM GAS  /tmp/ccwxaLkA.s 			page 29


 1198              		.text
 1199              	.Letext0:
 1200              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1201              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1202              		.file 4 "F4_CORE/core_cm4.h"
 1203              		.file 5 "USER/system_stm32f4xx.h"
 1204              		.file 6 "USER/stm32f4xx.h"
 1205              		.file 7 "FWLIB/inc/stm32f4xx_dma.h"
 1206              		.file 8 "FWLIB/inc/misc.h"
 1207              		.file 9 "FWLIB/inc/stm32f4xx_tim.h"
 1208              		.file 10 "Bsp/periph_timer.h"
 1209              		.file 11 "Bsp/periph_dma.h"
 1210              		.file 12 "FWLIB/inc/stm32f4xx_rcc.h"
 1211              		.file 13 "Bsp/periph_gpio.h"
ARM GAS  /tmp/ccwxaLkA.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 periph_timer.c
     /tmp/ccwxaLkA.s:18     .text.periph_Timer_IO_Init:0000000000000000 $t
     /tmp/ccwxaLkA.s:24     .text.periph_Timer_IO_Init:0000000000000000 periph_Timer_IO_Init
     /tmp/ccwxaLkA.s:169    .text.periph_Timer_CounterMode_Init:0000000000000000 $t
     /tmp/ccwxaLkA.s:176    .text.periph_Timer_CounterMode_Init:0000000000000000 periph_Timer_CounterMode_Init
     /tmp/ccwxaLkA.s:262    .text.periph_Timer_CounterMode_Init:0000000000000074 $d
     /tmp/ccwxaLkA.s:269    .text.periph_Timer_Encoder_Mode_Init:0000000000000000 $t
     /tmp/ccwxaLkA.s:276    .text.periph_Timer_Encoder_Mode_Init:0000000000000000 periph_Timer_Encoder_Mode_Init
     /tmp/ccwxaLkA.s:368    .text.periph_Timer_Encoder_Mode_Init:0000000000000084 $d
     /tmp/ccwxaLkA.s:374    .text.periph_Timer_GetEncoder_Input:0000000000000000 $t
     /tmp/ccwxaLkA.s:381    .text.periph_Timer_GetEncoder_Input:0000000000000000 periph_Timer_GetEncoder_Input
     /tmp/ccwxaLkA.s:400    .text.periph_Timer_GetEncoder_Input:000000000000000c $d
     /tmp/ccwxaLkA.s:405    .text.periph_Timer_PWMOutPut_Mode_Init:0000000000000000 $t
     /tmp/ccwxaLkA.s:412    .text.periph_Timer_PWMOutPut_Mode_Init:0000000000000000 periph_Timer_PWMOutPut_Mode_Init
     /tmp/ccwxaLkA.s:606    .text.periph_Timer_PWMOutPut_Mode_Init:000000000000012c $d
     /tmp/ccwxaLkA.s:612    .text.periph_Timer_PWM_SetEnable:0000000000000000 $t
     /tmp/ccwxaLkA.s:619    .text.periph_Timer_PWM_SetEnable:0000000000000000 periph_Timer_PWM_SetEnable
     /tmp/ccwxaLkA.s:656    .text.periph_Timer_PWM_SetEnable:0000000000000020 $d
     /tmp/ccwxaLkA.s:661    .text.periph_Timer_DShotOutPut_Mode_Init:0000000000000000 $t
     /tmp/ccwxaLkA.s:668    .text.periph_Timer_DShotOutPut_Mode_Init:0000000000000000 periph_Timer_DShotOutPut_Mode_Init
     /tmp/ccwxaLkA.s:1052   .text.periph_Timer_DShotOutPut_Mode_Init:0000000000000274 $d
     /tmp/ccwxaLkA.s:1072   .text.periph_Timer_Set_PWMOutPut:0000000000000000 $t
     /tmp/ccwxaLkA.s:1079   .text.periph_Timer_Set_PWMOutPut:0000000000000000 periph_Timer_Set_PWMOutPut
     /tmp/ccwxaLkA.s:1106   .text.periph_Timer_Set_PWMOutPut:0000000000000014 $d
     /tmp/ccwxaLkA.s:1112   .text.periph_Timer_Counter_SetEnable:0000000000000000 $t
     /tmp/ccwxaLkA.s:1119   .text.periph_Timer_Counter_SetEnable:0000000000000000 periph_Timer_Counter_SetEnable
     /tmp/ccwxaLkA.s:1156   .text.periph_Timer_Counter_SetEnable:0000000000000020 $d
     /tmp/ccwxaLkA.s:1166   .data.Timer_Port:0000000000000000 Timer_Port
     /tmp/ccwxaLkA.s:1162   .data.Timer_Port:0000000000000000 $d
     /tmp/ccwxaLkA.s:1171   .rodata.PWM_Set_Value:0000000000000000 $d
     /tmp/ccwxaLkA.s:1175   .rodata.PWM_Set_Value:0000000000000000 PWM_Set_Value
     /tmp/ccwxaLkA.s:1181   .rodata.Timer_CLK:0000000000000000 $d
     /tmp/ccwxaLkA.s:1185   .rodata.Timer_CLK:0000000000000000 Timer_CLK
     /tmp/ccwxaLkA.s:1190   .rodata.Timer_IRQ_Channel:0000000000000000 $d
     /tmp/ccwxaLkA.s:1194   .rodata.Timer_IRQ_Channel:0000000000000000 Timer_IRQ_Channel
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
GPIO_TIM4_PWMCH1_IO_Init
GPIO_TIM2_PWMCH1_IO_Init
GPIO_TIM3_PWMCH1_IO_Init
GPIO_TIM4_PWMCH2_IO_Init
GPIO_TIM2_PWMCH2_IO_Init
GPIO_TIM3_PWMCH2_IO_Init
GPIO_TIM4_PWMCH3_IO_Init
GPIO_TIM2_PWMCH3_IO_Init
GPIO_TIM3_PWMCH3_IO_Init
GPIO_TIM2_PWMCH4_IO_Init
GPIO_TIM3_PWMCH4_IO_Init
GPIO_TIM4_PWMCH4_IO_Init
RCC_APB1PeriphClockCmd
TIM_TimeBaseInit
TIM_ITConfig
TIM_Cmd
NVIC_Init
RCC_APB2PeriphClockCmd
ARM GAS  /tmp/ccwxaLkA.s 			page 31


TIM_ICInit
TIM_EncoderInterfaceConfig
TIM_ICStructInit
TIM_DeInit
TIM_OCStructInit
TIM_ARRPreloadConfig
TIM_ClearFlag
TIM_OC1Init
TIM_OC1PreloadConfig
TIM_OC2Init
TIM_OC2PreloadConfig
TIM_OC3Init
TIM_OC3PreloadConfig
TIM_OC4Init
TIM_OC4PreloadConfig
TIM_DMACmd
periph_DMA_TIM
periph_DMA_Init
TIM_SetCompare1
TIM_SetCompare2
TIM_SetCompare3
TIM_SetCompare4
