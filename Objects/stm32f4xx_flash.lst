ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FLASH_SetLatency,"ax",%progbits
  18              		.align	1
  19              		.global	FLASH_SetLatency
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	FLASH_SetLatency:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "FWLIB/src/stm32f4xx_flash.c"
   1:FWLIB/src/stm32f4xx_flash.c **** /**
   2:FWLIB/src/stm32f4xx_flash.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_flash.c ****   * @file    stm32f4xx_flash.c
   4:FWLIB/src/stm32f4xx_flash.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_flash.c ****   * @version V1.8.0
   6:FWLIB/src/stm32f4xx_flash.c ****   * @date    04-November-2016
   7:FWLIB/src/stm32f4xx_flash.c ****   * @brief   This file provides firmware functions to manage the following 
   8:FWLIB/src/stm32f4xx_flash.c ****   *          functionalities of the FLASH peripheral:
   9:FWLIB/src/stm32f4xx_flash.c ****   *            + FLASH Interface configuration
  10:FWLIB/src/stm32f4xx_flash.c ****   *            + FLASH Memory Programming
  11:FWLIB/src/stm32f4xx_flash.c ****   *            + Option Bytes Programming
  12:FWLIB/src/stm32f4xx_flash.c ****   *            + Interrupts and flags management
  13:FWLIB/src/stm32f4xx_flash.c ****   *  
  14:FWLIB/src/stm32f4xx_flash.c ****  @verbatim    
  15:FWLIB/src/stm32f4xx_flash.c ****  ===============================================================================
  16:FWLIB/src/stm32f4xx_flash.c ****                         ##### How to use this driver #####
  17:FWLIB/src/stm32f4xx_flash.c ****  ===============================================================================
  18:FWLIB/src/stm32f4xx_flash.c ****     [..]                             
  19:FWLIB/src/stm32f4xx_flash.c ****       This driver provides functions to configure and program the FLASH memory 
  20:FWLIB/src/stm32f4xx_flash.c ****       of all STM32F4xx devices. These functions are split in 4 groups:
  21:FWLIB/src/stm32f4xx_flash.c ****    
  22:FWLIB/src/stm32f4xx_flash.c ****       (#) FLASH Interface configuration functions: this group includes the
  23:FWLIB/src/stm32f4xx_flash.c ****           management of the following features:
  24:FWLIB/src/stm32f4xx_flash.c ****         (++) Set the latency
  25:FWLIB/src/stm32f4xx_flash.c ****         (++) Enable/Disable the prefetch buffer
  26:FWLIB/src/stm32f4xx_flash.c ****         (++) Enable/Disable the Instruction cache and the Data cache
  27:FWLIB/src/stm32f4xx_flash.c ****         (++) Reset the Instruction cache and the Data cache
  28:FWLIB/src/stm32f4xx_flash.c ****     
  29:FWLIB/src/stm32f4xx_flash.c ****       (#) FLASH Memory Programming functions: this group includes all needed
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 2


  30:FWLIB/src/stm32f4xx_flash.c ****           functions to erase and program the main memory:
  31:FWLIB/src/stm32f4xx_flash.c ****         (++) Lock and Unlock the FLASH interface
  32:FWLIB/src/stm32f4xx_flash.c ****         (++) Erase function: Erase sector, erase all sectors
  33:FWLIB/src/stm32f4xx_flash.c ****         (++) Program functions: byte, half word, word and double word
  34:FWLIB/src/stm32f4xx_flash.c ****     
  35:FWLIB/src/stm32f4xx_flash.c ****       (#) Option Bytes Programming functions: this group includes all needed
  36:FWLIB/src/stm32f4xx_flash.c ****           functions to manage the Option Bytes:
  37:FWLIB/src/stm32f4xx_flash.c ****         (++) Set/Reset the write protection
  38:FWLIB/src/stm32f4xx_flash.c ****         (++) Set the Read protection Level
  39:FWLIB/src/stm32f4xx_flash.c ****         (++) Set the BOR level
  40:FWLIB/src/stm32f4xx_flash.c ****         (++) Program the user Option Bytes
  41:FWLIB/src/stm32f4xx_flash.c ****         (++) Launch the Option Bytes loader
  42:FWLIB/src/stm32f4xx_flash.c ****     
  43:FWLIB/src/stm32f4xx_flash.c ****       (#) Interrupts and flags management functions: this group 
  44:FWLIB/src/stm32f4xx_flash.c ****           includes all needed functions to:
  45:FWLIB/src/stm32f4xx_flash.c ****         (++) Enable/Disable the FLASH interrupt sources
  46:FWLIB/src/stm32f4xx_flash.c ****         (++) Get flags status
  47:FWLIB/src/stm32f4xx_flash.c ****         (++) Clear flags
  48:FWLIB/src/stm32f4xx_flash.c ****         (++) Get FLASH operation status
  49:FWLIB/src/stm32f4xx_flash.c ****         (++) Wait for last FLASH operation   
  50:FWLIB/src/stm32f4xx_flash.c ****  @endverbatim
  51:FWLIB/src/stm32f4xx_flash.c ****   ******************************************************************************
  52:FWLIB/src/stm32f4xx_flash.c ****   * @attention
  53:FWLIB/src/stm32f4xx_flash.c ****   *
  54:FWLIB/src/stm32f4xx_flash.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
  55:FWLIB/src/stm32f4xx_flash.c ****   *
  56:FWLIB/src/stm32f4xx_flash.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  57:FWLIB/src/stm32f4xx_flash.c ****   * You may not use this file except in compliance with the License.
  58:FWLIB/src/stm32f4xx_flash.c ****   * You may obtain a copy of the License at:
  59:FWLIB/src/stm32f4xx_flash.c ****   *
  60:FWLIB/src/stm32f4xx_flash.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  61:FWLIB/src/stm32f4xx_flash.c ****   *
  62:FWLIB/src/stm32f4xx_flash.c ****   * Unless required by applicable law or agreed to in writing, software 
  63:FWLIB/src/stm32f4xx_flash.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  64:FWLIB/src/stm32f4xx_flash.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  65:FWLIB/src/stm32f4xx_flash.c ****   * See the License for the specific language governing permissions and
  66:FWLIB/src/stm32f4xx_flash.c ****   * limitations under the License.
  67:FWLIB/src/stm32f4xx_flash.c ****   *
  68:FWLIB/src/stm32f4xx_flash.c ****   ******************************************************************************
  69:FWLIB/src/stm32f4xx_flash.c ****   */
  70:FWLIB/src/stm32f4xx_flash.c **** 
  71:FWLIB/src/stm32f4xx_flash.c **** /* Includes ------------------------------------------------------------------*/
  72:FWLIB/src/stm32f4xx_flash.c **** #include "stm32f4xx_flash.h"
  73:FWLIB/src/stm32f4xx_flash.c **** 
  74:FWLIB/src/stm32f4xx_flash.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  75:FWLIB/src/stm32f4xx_flash.c ****   * @{
  76:FWLIB/src/stm32f4xx_flash.c ****   */
  77:FWLIB/src/stm32f4xx_flash.c **** 
  78:FWLIB/src/stm32f4xx_flash.c **** /** @defgroup FLASH 
  79:FWLIB/src/stm32f4xx_flash.c ****   * @brief FLASH driver modules
  80:FWLIB/src/stm32f4xx_flash.c ****   * @{
  81:FWLIB/src/stm32f4xx_flash.c ****   */ 
  82:FWLIB/src/stm32f4xx_flash.c **** 
  83:FWLIB/src/stm32f4xx_flash.c **** /* Private typedef -----------------------------------------------------------*/
  84:FWLIB/src/stm32f4xx_flash.c **** /* Private define ------------------------------------------------------------*/ 
  85:FWLIB/src/stm32f4xx_flash.c **** #define SECTOR_MASK               ((uint32_t)0xFFFFFF07)
  86:FWLIB/src/stm32f4xx_flash.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 3


  87:FWLIB/src/stm32f4xx_flash.c **** /* Private macro -------------------------------------------------------------*/
  88:FWLIB/src/stm32f4xx_flash.c **** /* Private variables ---------------------------------------------------------*/
  89:FWLIB/src/stm32f4xx_flash.c **** /* Private function prototypes -----------------------------------------------*/
  90:FWLIB/src/stm32f4xx_flash.c **** /* Private functions ---------------------------------------------------------*/
  91:FWLIB/src/stm32f4xx_flash.c **** 
  92:FWLIB/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Private_Functions
  93:FWLIB/src/stm32f4xx_flash.c ****   * @{
  94:FWLIB/src/stm32f4xx_flash.c ****   */ 
  95:FWLIB/src/stm32f4xx_flash.c **** 
  96:FWLIB/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group1 FLASH Interface configuration functions
  97:FWLIB/src/stm32f4xx_flash.c ****   *  @brief   FLASH Interface configuration functions 
  98:FWLIB/src/stm32f4xx_flash.c ****  *
  99:FWLIB/src/stm32f4xx_flash.c **** 
 100:FWLIB/src/stm32f4xx_flash.c **** @verbatim   
 101:FWLIB/src/stm32f4xx_flash.c ****  ===============================================================================
 102:FWLIB/src/stm32f4xx_flash.c ****               ##### FLASH Interface configuration functions #####
 103:FWLIB/src/stm32f4xx_flash.c ****  ===============================================================================
 104:FWLIB/src/stm32f4xx_flash.c ****     [..]
 105:FWLIB/src/stm32f4xx_flash.c ****       This group includes the following functions:
 106:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_SetLatency(uint32_t FLASH_Latency)
 107:FWLIB/src/stm32f4xx_flash.c ****           To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 108:FWLIB/src/stm32f4xx_flash.c ****           must be correctly programmed according to the frequency of the CPU clock 
 109:FWLIB/src/stm32f4xx_flash.c ****           (HCLK) and the supply voltage of the device.
 110:FWLIB/src/stm32f4xx_flash.c ****     [..]      
 111:FWLIB/src/stm32f4xx_flash.c ****       For STM32F405xx/07xx and STM32F415xx/17xx devices
 112:FWLIB/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 113:FWLIB/src/stm32f4xx_flash.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 114:FWLIB/src/stm32f4xx_flash.c ****  |               |---------------------------------------------------------------------|
 115:FWLIB/src/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 116:FWLIB/src/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 117:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 118:FWLIB/src/stm32f4xx_flash.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
 119:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 120:FWLIB/src/stm32f4xx_flash.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
 121:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 122:FWLIB/src/stm32f4xx_flash.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
 123:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 124:FWLIB/src/stm32f4xx_flash.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |66 < HCLK <= 88  |60 < HCLK <= 80  |
 125:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 126:FWLIB/src/stm32f4xx_flash.c ****  |4WS(5CPU cycle)|120< HCLK <= 150|96 < HCLK <= 120|88 < HCLK <= 110 |80 < HCLK <= 100 |
 127:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 128:FWLIB/src/stm32f4xx_flash.c ****  |5WS(6CPU cycle)|150< HCLK <= 168|120< HCLK <= 144|110 < HCLK <= 132|100 < HCLK <= 120|
 129:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 130:FWLIB/src/stm32f4xx_flash.c ****  |6WS(7CPU cycle)|      NA        |144< HCLK <= 168|132 < HCLK <= 154|120 < HCLK <= 140|
 131:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 132:FWLIB/src/stm32f4xx_flash.c ****  |7WS(8CPU cycle)|      NA        |      NA        |154 < HCLK <= 168|140 < HCLK <= 160|
 133:FWLIB/src/stm32f4xx_flash.c ****  +---------------|----------------|----------------|-----------------|-----------------+
 134:FWLIB/src/stm32f4xx_flash.c **** 
 135:FWLIB/src/stm32f4xx_flash.c ****     [..]      
 136:FWLIB/src/stm32f4xx_flash.c ****       For STM32F42xxx/43xxx devices
 137:FWLIB/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 138:FWLIB/src/stm32f4xx_flash.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 139:FWLIB/src/stm32f4xx_flash.c ****  |               |---------------------------------------------------------------------|
 140:FWLIB/src/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 141:FWLIB/src/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 142:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 143:FWLIB/src/stm32f4xx_flash.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 4


 144:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 145:FWLIB/src/stm32f4xx_flash.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
 146:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 147:FWLIB/src/stm32f4xx_flash.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
 148:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 149:FWLIB/src/stm32f4xx_flash.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |66 < HCLK <= 88  |60 < HCLK <= 80  |
 150:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 151:FWLIB/src/stm32f4xx_flash.c ****  |4WS(5CPU cycle)|120< HCLK <= 150|96 < HCLK <= 120|88 < HCLK <= 110 |80 < HCLK <= 100 |
 152:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 153:FWLIB/src/stm32f4xx_flash.c ****  |5WS(6CPU cycle)|120< HCLK <= 180|120< HCLK <= 144|110 < HCLK <= 132|100 < HCLK <= 120|
 154:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 155:FWLIB/src/stm32f4xx_flash.c ****  |6WS(7CPU cycle)|      NA        |144< HCLK <= 168|132 < HCLK <= 154|120 < HCLK <= 140|
 156:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 157:FWLIB/src/stm32f4xx_flash.c ****  |7WS(8CPU cycle)|      NA        |168< HCLK <= 180|154 < HCLK <= 176|140 < HCLK <= 160|
 158:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 159:FWLIB/src/stm32f4xx_flash.c ****  |8WS(9CPU cycle)|      NA        |      NA        |176 < HCLK <= 180|160 < HCLK <= 168|
 160:FWLIB/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 161:FWLIB/src/stm32f4xx_flash.c ****    
 162:FWLIB/src/stm32f4xx_flash.c ****     [..]
 163:FWLIB/src/stm32f4xx_flash.c ****     For STM32F401x devices
 164:FWLIB/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 165:FWLIB/src/stm32f4xx_flash.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 166:FWLIB/src/stm32f4xx_flash.c ****  |               |---------------------------------------------------------------------|
 167:FWLIB/src/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 168:FWLIB/src/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 169:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 170:FWLIB/src/stm32f4xx_flash.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
 171:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 172:FWLIB/src/stm32f4xx_flash.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
 173:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 174:FWLIB/src/stm32f4xx_flash.c ****  |2WS(3CPU cycle)|60 < HCLK <= 84 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
 175:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 176:FWLIB/src/stm32f4xx_flash.c ****  |3WS(4CPU cycle)|      NA        |72 < HCLK <= 84 |66 < HCLK <= 84  |60 < HCLK <= 80  |
 177:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 178:FWLIB/src/stm32f4xx_flash.c ****  |4WS(5CPU cycle)|      NA        |      NA        |      NA         |80 < HCLK <= 84  |
 179:FWLIB/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 180:FWLIB/src/stm32f4xx_flash.c **** 
 181:FWLIB/src/stm32f4xx_flash.c ****     [..]
 182:FWLIB/src/stm32f4xx_flash.c ****     For STM32F410xx/STM32F411xE devices
 183:FWLIB/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 184:FWLIB/src/stm32f4xx_flash.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 185:FWLIB/src/stm32f4xx_flash.c ****  |               |---------------------------------------------------------------------|
 186:FWLIB/src/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 187:FWLIB/src/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 188:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 189:FWLIB/src/stm32f4xx_flash.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 18   |0 < HCLK <= 16   |
 190:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 191:FWLIB/src/stm32f4xx_flash.c ****  |1WS(2CPU cycle)|30 < HCLK <= 64 |24 < HCLK <= 48 |18 < HCLK <= 36  |16 < HCLK <= 32  |
 192:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 193:FWLIB/src/stm32f4xx_flash.c ****  |2WS(3CPU cycle)|64 < HCLK <= 90 |48 < HCLK <= 72 |36 < HCLK <= 54  |32 < HCLK <= 48  |
 194:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 195:FWLIB/src/stm32f4xx_flash.c ****  |3WS(4CPU cycle)|90 < HCLK <= 100|72 < HCLK <= 96 |54 < HCLK <= 72  |48 < HCLK <= 64  |
 196:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 197:FWLIB/src/stm32f4xx_flash.c ****  |4WS(5CPU cycle)|      NA        |96 < HCLK <= 100|72 < HCLK <= 90  |64 < HCLK <= 80  |
 198:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 199:FWLIB/src/stm32f4xx_flash.c ****  |5WS(6CPU cycle)|      NA        |       NA       |90 < HCLK <= 100 |80 < HCLK <= 96  |
 200:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 5


 201:FWLIB/src/stm32f4xx_flash.c ****  |6WS(7CPU cycle)|      NA        |       NA       |        NA       |96 < HCLK <= 100 |
 202:FWLIB/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 203:FWLIB/src/stm32f4xx_flash.c ****  
 204:FWLIB/src/stm32f4xx_flash.c ****  [..]
 205:FWLIB/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------------------
 206:FWLIB/src/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   | voltage ra
 207:FWLIB/src/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   | with Exter
 208:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|-----------
 209:FWLIB/src/stm32f4xx_flash.c ****  |Max Parallelism|      x32       |               x16                |       x8        |          x
 210:FWLIB/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|-----------
 211:FWLIB/src/stm32f4xx_flash.c ****  |PSIZE[1:0]     |      10        |               01                 |       00        |           
 212:FWLIB/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------------------
 213:FWLIB/src/stm32f4xx_flash.c **** 
 214:FWLIB/src/stm32f4xx_flash.c ****       -@- On STM32F405xx/407xx and STM32F415xx/417xx devices: 
 215:FWLIB/src/stm32f4xx_flash.c ****            (++) when VOS = '0' Scale 2 mode, the maximum value of fHCLK = 144MHz. 
 216:FWLIB/src/stm32f4xx_flash.c ****            (++) when VOS = '1' Scale 1 mode, the maximum value of fHCLK = 168MHz. 
 217:FWLIB/src/stm32f4xx_flash.c ****           [..] 
 218:FWLIB/src/stm32f4xx_flash.c ****           On STM32F42xxx/43xxx devices:
 219:FWLIB/src/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x01' Scale 3 mode, the maximum value of fHCLK is 120MHz.
 220:FWLIB/src/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x10' Scale 2 mode, the maximum value of fHCLK is 144MHz if OverDr
 221:FWLIB/src/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x11' Scale 1 mode, the maximum value of fHCLK is 168MHz if OverDr
 222:FWLIB/src/stm32f4xx_flash.c ****           [..]
 223:FWLIB/src/stm32f4xx_flash.c ****           On STM32F401x devices:
 224:FWLIB/src/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x01' Scale 3 mode, the maximum value of fHCLK is 60MHz.
 225:FWLIB/src/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x10' Scale 2 mode, the maximum value of fHCLK is 84MHz.
 226:FWLIB/src/stm32f4xx_flash.c ****           [..]  
 227:FWLIB/src/stm32f4xx_flash.c ****           On STM32F410xx/STM32F411xE devices:
 228:FWLIB/src/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x01' Scale 3 mode, the maximum value of fHCLK is 64MHz.
 229:FWLIB/src/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x10' Scale 2 mode, the maximum value of fHCLK is 84MHz.
 230:FWLIB/src/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x11' Scale 1 mode, the maximum value of fHCLK is 100MHz.
 231:FWLIB/src/stm32f4xx_flash.c **** 
 232:FWLIB/src/stm32f4xx_flash.c ****         For more details please refer product DataSheet 
 233:FWLIB/src/stm32f4xx_flash.c ****            You can use PWR_MainRegulatorModeConfig() function to control VOS bits.
 234:FWLIB/src/stm32f4xx_flash.c **** 
 235:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_PrefetchBufferCmd(FunctionalState NewState)
 236:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_InstructionCacheCmd(FunctionalState NewState)
 237:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_DataCacheCmd(FunctionalState NewState)
 238:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_InstructionCacheReset(void)
 239:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_DataCacheReset(void)
 240:FWLIB/src/stm32f4xx_flash.c ****       
 241:FWLIB/src/stm32f4xx_flash.c ****     [..]   
 242:FWLIB/src/stm32f4xx_flash.c ****       The unlock sequence is not needed for these functions.
 243:FWLIB/src/stm32f4xx_flash.c ****  
 244:FWLIB/src/stm32f4xx_flash.c **** @endverbatim
 245:FWLIB/src/stm32f4xx_flash.c ****   * @{
 246:FWLIB/src/stm32f4xx_flash.c ****   */
 247:FWLIB/src/stm32f4xx_flash.c ****  
 248:FWLIB/src/stm32f4xx_flash.c **** /**
 249:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Sets the code latency value.  
 250:FWLIB/src/stm32f4xx_flash.c ****   * @param  FLASH_Latency: specifies the FLASH Latency value.
 251:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 252:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_0: FLASH Zero Latency cycle
 253:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_1: FLASH One Latency cycle
 254:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_2: FLASH Two Latency cycles
 255:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_3: FLASH Three Latency cycles
 256:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_4: FLASH Four Latency cycles 
 257:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_5: FLASH Five Latency cycles 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 6


 258:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_6: FLASH Six Latency cycles
 259:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_7: FLASH Seven Latency cycles 
 260:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_8: FLASH Eight Latency cycles
 261:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_9: FLASH Nine Latency cycles
 262:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_10: FLASH Teen Latency cycles 
 263:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_11: FLASH Eleven Latency cycles 
 264:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_12: FLASH Twelve Latency cycles
 265:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_13: FLASH Thirteen Latency cycles
 266:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_14: FLASH Fourteen Latency cycles
 267:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_15: FLASH Fifteen Latency cycles 
 268:FWLIB/src/stm32f4xx_flash.c ****   *              
 269:FWLIB/src/stm32f4xx_flash.c ****   * @note For STM32F405xx/407xx, STM32F415xx/417xx, STM32F401xx/411xE/STM32F412xG and STM32F413_423
 270:FWLIB/src/stm32f4xx_flash.c ****   *       this parameter can be a value between FLASH_Latency_0 and FLASH_Latency_7.
 271:FWLIB/src/stm32f4xx_flash.c ****   *
 272:FWLIB/src/stm32f4xx_flash.c ****   * @note For STM32F42xxx/43xxx devices this parameter can be a value between 
 273:FWLIB/src/stm32f4xx_flash.c ****   *       FLASH_Latency_0 and FLASH_Latency_15. 
 274:FWLIB/src/stm32f4xx_flash.c ****   *         
 275:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
 276:FWLIB/src/stm32f4xx_flash.c ****   */
 277:FWLIB/src/stm32f4xx_flash.c **** void FLASH_SetLatency(uint32_t FLASH_Latency)
 278:FWLIB/src/stm32f4xx_flash.c **** {
  30              		.loc 1 278 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 279:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
 280:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_LATENCY(FLASH_Latency));
  35              		.loc 1 280 3 view .LVU1
 281:FWLIB/src/stm32f4xx_flash.c ****   
 282:FWLIB/src/stm32f4xx_flash.c ****   /* Perform Byte access to FLASH_ACR[8:0] to set the Latency value */
 283:FWLIB/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)ACR_BYTE0_ADDRESS = (uint8_t)FLASH_Latency;
  36              		.loc 1 283 3 view .LVU2
  37              		.loc 1 283 40 is_stmt 0 view .LVU3
  38 0000 C0B2     		uxtb	r0, r0
  39              	.LVL1:
  40              		.loc 1 283 38 view .LVU4
  41 0002 014B     		ldr	r3, .L2
  42 0004 1870     		strb	r0, [r3]
 284:FWLIB/src/stm32f4xx_flash.c **** }
  43              		.loc 1 284 1 view .LVU5
  44 0006 7047     		bx	lr
  45              	.L3:
  46              		.align	2
  47              	.L2:
  48 0008 003C0240 		.word	1073888256
  49              		.cfi_endproc
  50              	.LFE123:
  52              		.section	.text.FLASH_PrefetchBufferCmd,"ax",%progbits
  53              		.align	1
  54              		.global	FLASH_PrefetchBufferCmd
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu fpv4-sp-d16
  60              	FLASH_PrefetchBufferCmd:
  61              	.LVL2:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 7


  62              	.LFB124:
 285:FWLIB/src/stm32f4xx_flash.c **** 
 286:FWLIB/src/stm32f4xx_flash.c **** /**
 287:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the Prefetch Buffer.
 288:FWLIB/src/stm32f4xx_flash.c ****   * @param  NewState: new state of the Prefetch Buffer.
 289:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 290:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
 291:FWLIB/src/stm32f4xx_flash.c ****   */
 292:FWLIB/src/stm32f4xx_flash.c **** void FLASH_PrefetchBufferCmd(FunctionalState NewState)
 293:FWLIB/src/stm32f4xx_flash.c **** {
  63              		.loc 1 293 1 is_stmt 1 view -0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
 294:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
 295:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
  68              		.loc 1 295 3 view .LVU7
 296:FWLIB/src/stm32f4xx_flash.c ****   
 297:FWLIB/src/stm32f4xx_flash.c ****   /* Enable or disable the Prefetch Buffer */
 298:FWLIB/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
  69              		.loc 1 298 3 view .LVU8
  70              		.loc 1 298 5 is_stmt 0 view .LVU9
  71 0000 28B1     		cbz	r0, .L5
 299:FWLIB/src/stm32f4xx_flash.c ****   {
 300:FWLIB/src/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_PRFTEN;
  72              		.loc 1 300 5 is_stmt 1 view .LVU10
  73              		.loc 1 300 16 is_stmt 0 view .LVU11
  74 0002 064A     		ldr	r2, .L7
  75 0004 1368     		ldr	r3, [r2]
  76 0006 43F48073 		orr	r3, r3, #256
  77 000a 1360     		str	r3, [r2]
  78 000c 7047     		bx	lr
  79              	.L5:
 301:FWLIB/src/stm32f4xx_flash.c ****   }
 302:FWLIB/src/stm32f4xx_flash.c ****   else
 303:FWLIB/src/stm32f4xx_flash.c ****   {
 304:FWLIB/src/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_PRFTEN);
  80              		.loc 1 304 5 is_stmt 1 view .LVU12
  81              		.loc 1 304 16 is_stmt 0 view .LVU13
  82 000e 034A     		ldr	r2, .L7
  83 0010 1368     		ldr	r3, [r2]
  84 0012 23F48073 		bic	r3, r3, #256
  85 0016 1360     		str	r3, [r2]
 305:FWLIB/src/stm32f4xx_flash.c ****   }
 306:FWLIB/src/stm32f4xx_flash.c **** }
  86              		.loc 1 306 1 view .LVU14
  87 0018 7047     		bx	lr
  88              	.L8:
  89 001a 00BF     		.align	2
  90              	.L7:
  91 001c 003C0240 		.word	1073888256
  92              		.cfi_endproc
  93              	.LFE124:
  95              		.section	.text.FLASH_InstructionCacheCmd,"ax",%progbits
  96              		.align	1
  97              		.global	FLASH_InstructionCacheCmd
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 8


  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu fpv4-sp-d16
 103              	FLASH_InstructionCacheCmd:
 104              	.LVL3:
 105              	.LFB125:
 307:FWLIB/src/stm32f4xx_flash.c **** 
 308:FWLIB/src/stm32f4xx_flash.c **** /**
 309:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the Instruction Cache feature.
 310:FWLIB/src/stm32f4xx_flash.c ****   * @param  NewState: new state of the Instruction Cache.
 311:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 312:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
 313:FWLIB/src/stm32f4xx_flash.c ****   */
 314:FWLIB/src/stm32f4xx_flash.c **** void FLASH_InstructionCacheCmd(FunctionalState NewState)
 315:FWLIB/src/stm32f4xx_flash.c **** {
 106              		.loc 1 315 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 316:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
 317:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 111              		.loc 1 317 3 view .LVU16
 318:FWLIB/src/stm32f4xx_flash.c ****   
 319:FWLIB/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 112              		.loc 1 319 3 view .LVU17
 113              		.loc 1 319 5 is_stmt 0 view .LVU18
 114 0000 28B1     		cbz	r0, .L10
 320:FWLIB/src/stm32f4xx_flash.c ****   {
 321:FWLIB/src/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_ICEN;
 115              		.loc 1 321 5 is_stmt 1 view .LVU19
 116              		.loc 1 321 16 is_stmt 0 view .LVU20
 117 0002 064A     		ldr	r2, .L12
 118 0004 1368     		ldr	r3, [r2]
 119 0006 43F40073 		orr	r3, r3, #512
 120 000a 1360     		str	r3, [r2]
 121 000c 7047     		bx	lr
 122              	.L10:
 322:FWLIB/src/stm32f4xx_flash.c ****   }
 323:FWLIB/src/stm32f4xx_flash.c ****   else
 324:FWLIB/src/stm32f4xx_flash.c ****   {
 325:FWLIB/src/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_ICEN);
 123              		.loc 1 325 5 is_stmt 1 view .LVU21
 124              		.loc 1 325 16 is_stmt 0 view .LVU22
 125 000e 034A     		ldr	r2, .L12
 126 0010 1368     		ldr	r3, [r2]
 127 0012 23F40073 		bic	r3, r3, #512
 128 0016 1360     		str	r3, [r2]
 326:FWLIB/src/stm32f4xx_flash.c ****   }
 327:FWLIB/src/stm32f4xx_flash.c **** }
 129              		.loc 1 327 1 view .LVU23
 130 0018 7047     		bx	lr
 131              	.L13:
 132 001a 00BF     		.align	2
 133              	.L12:
 134 001c 003C0240 		.word	1073888256
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 9


 135              		.cfi_endproc
 136              	.LFE125:
 138              		.section	.text.FLASH_DataCacheCmd,"ax",%progbits
 139              		.align	1
 140              		.global	FLASH_DataCacheCmd
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	FLASH_DataCacheCmd:
 147              	.LVL4:
 148              	.LFB126:
 328:FWLIB/src/stm32f4xx_flash.c **** 
 329:FWLIB/src/stm32f4xx_flash.c **** /**
 330:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the Data Cache feature.
 331:FWLIB/src/stm32f4xx_flash.c ****   * @param  NewState: new state of the Data Cache.
 332:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 333:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
 334:FWLIB/src/stm32f4xx_flash.c ****   */
 335:FWLIB/src/stm32f4xx_flash.c **** void FLASH_DataCacheCmd(FunctionalState NewState)
 336:FWLIB/src/stm32f4xx_flash.c **** {
 149              		.loc 1 336 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 337:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
 338:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 154              		.loc 1 338 3 view .LVU25
 339:FWLIB/src/stm32f4xx_flash.c ****   
 340:FWLIB/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 155              		.loc 1 340 3 view .LVU26
 156              		.loc 1 340 5 is_stmt 0 view .LVU27
 157 0000 28B1     		cbz	r0, .L15
 341:FWLIB/src/stm32f4xx_flash.c ****   {
 342:FWLIB/src/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_DCEN;
 158              		.loc 1 342 5 is_stmt 1 view .LVU28
 159              		.loc 1 342 16 is_stmt 0 view .LVU29
 160 0002 064A     		ldr	r2, .L17
 161 0004 1368     		ldr	r3, [r2]
 162 0006 43F48063 		orr	r3, r3, #1024
 163 000a 1360     		str	r3, [r2]
 164 000c 7047     		bx	lr
 165              	.L15:
 343:FWLIB/src/stm32f4xx_flash.c ****   }
 344:FWLIB/src/stm32f4xx_flash.c ****   else
 345:FWLIB/src/stm32f4xx_flash.c ****   {
 346:FWLIB/src/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_DCEN);
 166              		.loc 1 346 5 is_stmt 1 view .LVU30
 167              		.loc 1 346 16 is_stmt 0 view .LVU31
 168 000e 034A     		ldr	r2, .L17
 169 0010 1368     		ldr	r3, [r2]
 170 0012 23F48063 		bic	r3, r3, #1024
 171 0016 1360     		str	r3, [r2]
 347:FWLIB/src/stm32f4xx_flash.c ****   }
 348:FWLIB/src/stm32f4xx_flash.c **** }
 172              		.loc 1 348 1 view .LVU32
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 10


 173 0018 7047     		bx	lr
 174              	.L18:
 175 001a 00BF     		.align	2
 176              	.L17:
 177 001c 003C0240 		.word	1073888256
 178              		.cfi_endproc
 179              	.LFE126:
 181              		.section	.text.FLASH_InstructionCacheReset,"ax",%progbits
 182              		.align	1
 183              		.global	FLASH_InstructionCacheReset
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv4-sp-d16
 189              	FLASH_InstructionCacheReset:
 190              	.LFB127:
 349:FWLIB/src/stm32f4xx_flash.c **** 
 350:FWLIB/src/stm32f4xx_flash.c **** /**
 351:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Resets the Instruction Cache.
 352:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function must be used only when the Instruction Cache is disabled.  
 353:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
 354:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
 355:FWLIB/src/stm32f4xx_flash.c ****   */
 356:FWLIB/src/stm32f4xx_flash.c **** void FLASH_InstructionCacheReset(void)
 357:FWLIB/src/stm32f4xx_flash.c **** {
 191              		.loc 1 357 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 358:FWLIB/src/stm32f4xx_flash.c ****   FLASH->ACR |= FLASH_ACR_ICRST;
 196              		.loc 1 358 3 view .LVU34
 197              		.loc 1 358 14 is_stmt 0 view .LVU35
 198 0000 024A     		ldr	r2, .L20
 199 0002 1368     		ldr	r3, [r2]
 200 0004 43F40063 		orr	r3, r3, #2048
 201 0008 1360     		str	r3, [r2]
 359:FWLIB/src/stm32f4xx_flash.c **** }
 202              		.loc 1 359 1 view .LVU36
 203 000a 7047     		bx	lr
 204              	.L21:
 205              		.align	2
 206              	.L20:
 207 000c 003C0240 		.word	1073888256
 208              		.cfi_endproc
 209              	.LFE127:
 211              		.section	.text.FLASH_DataCacheReset,"ax",%progbits
 212              		.align	1
 213              		.global	FLASH_DataCacheReset
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv4-sp-d16
 219              	FLASH_DataCacheReset:
 220              	.LFB128:
 360:FWLIB/src/stm32f4xx_flash.c **** 
 361:FWLIB/src/stm32f4xx_flash.c **** /**
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 11


 362:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Resets the Data Cache.
 363:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function must be used only when the Data Cache is disabled.  
 364:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
 365:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
 366:FWLIB/src/stm32f4xx_flash.c ****   */
 367:FWLIB/src/stm32f4xx_flash.c **** void FLASH_DataCacheReset(void)
 368:FWLIB/src/stm32f4xx_flash.c **** {
 221              		.loc 1 368 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 369:FWLIB/src/stm32f4xx_flash.c ****   FLASH->ACR |= FLASH_ACR_DCRST;
 226              		.loc 1 369 3 view .LVU38
 227              		.loc 1 369 14 is_stmt 0 view .LVU39
 228 0000 024A     		ldr	r2, .L23
 229 0002 1368     		ldr	r3, [r2]
 230 0004 43F48053 		orr	r3, r3, #4096
 231 0008 1360     		str	r3, [r2]
 370:FWLIB/src/stm32f4xx_flash.c **** }
 232              		.loc 1 370 1 view .LVU40
 233 000a 7047     		bx	lr
 234              	.L24:
 235              		.align	2
 236              	.L23:
 237 000c 003C0240 		.word	1073888256
 238              		.cfi_endproc
 239              	.LFE128:
 241              		.section	.text.FLASH_Unlock,"ax",%progbits
 242              		.align	1
 243              		.global	FLASH_Unlock
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	FLASH_Unlock:
 250              	.LFB129:
 371:FWLIB/src/stm32f4xx_flash.c **** 
 372:FWLIB/src/stm32f4xx_flash.c **** /**
 373:FWLIB/src/stm32f4xx_flash.c ****   * @}
 374:FWLIB/src/stm32f4xx_flash.c ****   */
 375:FWLIB/src/stm32f4xx_flash.c **** 
 376:FWLIB/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group2 FLASH Memory Programming functions
 377:FWLIB/src/stm32f4xx_flash.c ****  *  @brief   FLASH Memory Programming functions
 378:FWLIB/src/stm32f4xx_flash.c ****  *
 379:FWLIB/src/stm32f4xx_flash.c **** @verbatim   
 380:FWLIB/src/stm32f4xx_flash.c ****  ===============================================================================
 381:FWLIB/src/stm32f4xx_flash.c ****                 ##### FLASH Memory Programming functions #####
 382:FWLIB/src/stm32f4xx_flash.c ****  ===============================================================================   
 383:FWLIB/src/stm32f4xx_flash.c ****     [..]
 384:FWLIB/src/stm32f4xx_flash.c ****       This group includes the following functions:
 385:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_Unlock(void)
 386:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_Lock(void)
 387:FWLIB/src/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_EraseSector(uint32_t FLASH_Sector, uint8_t VoltageRange)
 388:FWLIB/src/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_EraseAllSectors(uint8_t VoltageRange)       
 389:FWLIB/src/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_ProgramDoubleWord(uint32_t Address, uint64_t Data)
 390:FWLIB/src/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 12


 391:FWLIB/src/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
 392:FWLIB/src/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_ProgramByte(uint32_t Address, uint8_t Data)
 393:FWLIB/src/stm32f4xx_flash.c ****           The following functions can be used only for STM32F42xxx/43xxx devices. 
 394:FWLIB/src/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_EraseAllBank1Sectors(uint8_t VoltageRange)
 395:FWLIB/src/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_EraseAllBank2Sectors(uint8_t VoltageRange)    
 396:FWLIB/src/stm32f4xx_flash.c ****     [..]   
 397:FWLIB/src/stm32f4xx_flash.c ****       Any operation of erase or program should follow these steps:
 398:FWLIB/src/stm32f4xx_flash.c ****       (#) Call the FLASH_Unlock() function to enable the FLASH control register access
 399:FWLIB/src/stm32f4xx_flash.c **** 
 400:FWLIB/src/stm32f4xx_flash.c ****       (#) Call the desired function to erase sector(s) or program data
 401:FWLIB/src/stm32f4xx_flash.c **** 
 402:FWLIB/src/stm32f4xx_flash.c ****       (#) Call the FLASH_Lock() function to disable the FLASH control register access
 403:FWLIB/src/stm32f4xx_flash.c ****           (recommended to protect the FLASH memory against possible unwanted operation)
 404:FWLIB/src/stm32f4xx_flash.c ****     
 405:FWLIB/src/stm32f4xx_flash.c **** @endverbatim
 406:FWLIB/src/stm32f4xx_flash.c ****   * @{
 407:FWLIB/src/stm32f4xx_flash.c ****   */
 408:FWLIB/src/stm32f4xx_flash.c **** 
 409:FWLIB/src/stm32f4xx_flash.c **** /**
 410:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Unlocks the FLASH control register access
 411:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
 412:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
 413:FWLIB/src/stm32f4xx_flash.c ****   */
 414:FWLIB/src/stm32f4xx_flash.c **** void FLASH_Unlock(void)
 415:FWLIB/src/stm32f4xx_flash.c **** {
 251              		.loc 1 415 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 416:FWLIB/src/stm32f4xx_flash.c ****   if((FLASH->CR & FLASH_CR_LOCK) != RESET)
 256              		.loc 1 416 3 view .LVU42
 257              		.loc 1 416 12 is_stmt 0 view .LVU43
 258 0000 054B     		ldr	r3, .L28
 259 0002 1B69     		ldr	r3, [r3, #16]
 260              		.loc 1 416 5 view .LVU44
 261 0004 002B     		cmp	r3, #0
 262 0006 00DB     		blt	.L27
 263              	.L25:
 417:FWLIB/src/stm32f4xx_flash.c ****   {
 418:FWLIB/src/stm32f4xx_flash.c ****     /* Authorize the FLASH Registers access */
 419:FWLIB/src/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY1;
 420:FWLIB/src/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY2;
 421:FWLIB/src/stm32f4xx_flash.c ****   }  
 422:FWLIB/src/stm32f4xx_flash.c **** }
 264              		.loc 1 422 1 view .LVU45
 265 0008 7047     		bx	lr
 266              	.L27:
 419:FWLIB/src/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY2;
 267              		.loc 1 419 5 is_stmt 1 view .LVU46
 419:FWLIB/src/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY2;
 268              		.loc 1 419 17 is_stmt 0 view .LVU47
 269 000a 034B     		ldr	r3, .L28
 270 000c 034A     		ldr	r2, .L28+4
 271 000e 5A60     		str	r2, [r3, #4]
 420:FWLIB/src/stm32f4xx_flash.c ****   }  
 272              		.loc 1 420 5 is_stmt 1 view .LVU48
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 13


 420:FWLIB/src/stm32f4xx_flash.c ****   }  
 273              		.loc 1 420 17 is_stmt 0 view .LVU49
 274 0010 02F18832 		add	r2, r2, #-2004318072
 275 0014 5A60     		str	r2, [r3, #4]
 276              		.loc 1 422 1 view .LVU50
 277 0016 F7E7     		b	.L25
 278              	.L29:
 279              		.align	2
 280              	.L28:
 281 0018 003C0240 		.word	1073888256
 282 001c 23016745 		.word	1164378403
 283              		.cfi_endproc
 284              	.LFE129:
 286              		.section	.text.FLASH_Lock,"ax",%progbits
 287              		.align	1
 288              		.global	FLASH_Lock
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	FLASH_Lock:
 295              	.LFB130:
 423:FWLIB/src/stm32f4xx_flash.c **** 
 424:FWLIB/src/stm32f4xx_flash.c **** /**
 425:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Locks the FLASH control register access
 426:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
 427:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
 428:FWLIB/src/stm32f4xx_flash.c ****   */
 429:FWLIB/src/stm32f4xx_flash.c **** void FLASH_Lock(void)
 430:FWLIB/src/stm32f4xx_flash.c **** {
 296              		.loc 1 430 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 431:FWLIB/src/stm32f4xx_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 432:FWLIB/src/stm32f4xx_flash.c ****   FLASH->CR |= FLASH_CR_LOCK;
 301              		.loc 1 432 3 view .LVU52
 302              		.loc 1 432 13 is_stmt 0 view .LVU53
 303 0000 024A     		ldr	r2, .L31
 304 0002 1369     		ldr	r3, [r2, #16]
 305 0004 43F00043 		orr	r3, r3, #-2147483648
 306 0008 1361     		str	r3, [r2, #16]
 433:FWLIB/src/stm32f4xx_flash.c **** }
 307              		.loc 1 433 1 view .LVU54
 308 000a 7047     		bx	lr
 309              	.L32:
 310              		.align	2
 311              	.L31:
 312 000c 003C0240 		.word	1073888256
 313              		.cfi_endproc
 314              	.LFE130:
 316              		.section	.text.FLASH_OB_Unlock,"ax",%progbits
 317              		.align	1
 318              		.global	FLASH_OB_Unlock
 319              		.syntax unified
 320              		.thumb
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 14


 321              		.thumb_func
 322              		.fpu fpv4-sp-d16
 324              	FLASH_OB_Unlock:
 325              	.LFB139:
 434:FWLIB/src/stm32f4xx_flash.c **** 
 435:FWLIB/src/stm32f4xx_flash.c **** /**
 436:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Erases a specified FLASH Sector.
 437:FWLIB/src/stm32f4xx_flash.c ****   *
 438:FWLIB/src/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 439:FWLIB/src/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 440:FWLIB/src/stm32f4xx_flash.c ****   *
 441:FWLIB/src/stm32f4xx_flash.c ****   * @param  FLASH_Sector: The Sector number to be erased.
 442:FWLIB/src/stm32f4xx_flash.c ****   *
 443:FWLIB/src/stm32f4xx_flash.c ****   *  @note  For STM32F405xx/407xx and STM32F415xx/417xx devices this parameter can 
 444:FWLIB/src/stm32f4xx_flash.c ****   *         be a value between FLASH_Sector_0 and FLASH_Sector_11.
 445:FWLIB/src/stm32f4xx_flash.c ****   *
 446:FWLIB/src/stm32f4xx_flash.c ****   *         For STM32F42xxx/43xxx devices this parameter can be a value between 
 447:FWLIB/src/stm32f4xx_flash.c ****   *         FLASH_Sector_0 and FLASH_Sector_23.
 448:FWLIB/src/stm32f4xx_flash.c ****   *
 449:FWLIB/src/stm32f4xx_flash.c ****   *         For STM32F401xx devices this parameter can be a value between 
 450:FWLIB/src/stm32f4xx_flash.c ****   *         FLASH_Sector_0 and FLASH_Sector_5.
 451:FWLIB/src/stm32f4xx_flash.c ****   *
 452:FWLIB/src/stm32f4xx_flash.c ****   *         For STM32F411xE and STM32F412xG devices this parameter can be a value between 
 453:FWLIB/src/stm32f4xx_flash.c ****   *         FLASH_Sector_0 and FLASH_Sector_7.
 454:FWLIB/src/stm32f4xx_flash.c ****   *
 455:FWLIB/src/stm32f4xx_flash.c ****   *         For STM32F410xx devices this parameter can be a value between 
 456:FWLIB/src/stm32f4xx_flash.c ****   *         FLASH_Sector_0 and FLASH_Sector_4.
 457:FWLIB/src/stm32f4xx_flash.c ****   *
 458:FWLIB/src/stm32f4xx_flash.c ****   *         For STM32F413_423xx devices this parameter can be a value between 
 459:FWLIB/src/stm32f4xx_flash.c ****   *         FLASH_Sector_0 and FLASH_Sector_15.
 460:FWLIB/src/stm32f4xx_flash.c ****   *
 461:FWLIB/src/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 462:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 463:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 464:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 465:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 466:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 467:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 468:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 469:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 470:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 471:FWLIB/src/stm32f4xx_flash.c ****   *       
 472:FWLIB/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 473:FWLIB/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 474:FWLIB/src/stm32f4xx_flash.c ****   */
 475:FWLIB/src/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseSector(uint32_t FLASH_Sector, uint8_t VoltageRange)
 476:FWLIB/src/stm32f4xx_flash.c **** {
 477:FWLIB/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 478:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 479:FWLIB/src/stm32f4xx_flash.c **** 
 480:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
 481:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_SECTOR(FLASH_Sector));
 482:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 483:FWLIB/src/stm32f4xx_flash.c ****   
 484:FWLIB/src/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 485:FWLIB/src/stm32f4xx_flash.c ****   {
 486:FWLIB/src/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 15


 487:FWLIB/src/stm32f4xx_flash.c ****   }
 488:FWLIB/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 489:FWLIB/src/stm32f4xx_flash.c ****   {
 490:FWLIB/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 491:FWLIB/src/stm32f4xx_flash.c ****   }
 492:FWLIB/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 493:FWLIB/src/stm32f4xx_flash.c ****   {
 494:FWLIB/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 495:FWLIB/src/stm32f4xx_flash.c ****   }
 496:FWLIB/src/stm32f4xx_flash.c ****   else
 497:FWLIB/src/stm32f4xx_flash.c ****   {
 498:FWLIB/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 499:FWLIB/src/stm32f4xx_flash.c ****   }
 500:FWLIB/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 501:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 502:FWLIB/src/stm32f4xx_flash.c ****   
 503:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 504:FWLIB/src/stm32f4xx_flash.c ****   { 
 505:FWLIB/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase the sector */
 506:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 507:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 508:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK;
 509:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 510:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 511:FWLIB/src/stm32f4xx_flash.c ****     
 512:FWLIB/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 513:FWLIB/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 514:FWLIB/src/stm32f4xx_flash.c ****     
 515:FWLIB/src/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the SER Bit */
 516:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_SER);
 517:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK; 
 518:FWLIB/src/stm32f4xx_flash.c ****   }
 519:FWLIB/src/stm32f4xx_flash.c ****   /* Return the Erase Status */
 520:FWLIB/src/stm32f4xx_flash.c ****   return status;
 521:FWLIB/src/stm32f4xx_flash.c **** }
 522:FWLIB/src/stm32f4xx_flash.c **** 
 523:FWLIB/src/stm32f4xx_flash.c **** /**
 524:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Erases all FLASH Sectors.
 525:FWLIB/src/stm32f4xx_flash.c ****   *
 526:FWLIB/src/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 527:FWLIB/src/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 528:FWLIB/src/stm32f4xx_flash.c ****   *  
 529:FWLIB/src/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 530:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 531:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 532:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 533:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 534:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 535:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 536:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 537:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 538:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 539:FWLIB/src/stm32f4xx_flash.c ****   *       
 540:FWLIB/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 541:FWLIB/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 542:FWLIB/src/stm32f4xx_flash.c ****   */
 543:FWLIB/src/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseAllSectors(uint8_t VoltageRange)
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 16


 544:FWLIB/src/stm32f4xx_flash.c **** {
 545:FWLIB/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 546:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 547:FWLIB/src/stm32f4xx_flash.c ****   
 548:FWLIB/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 549:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 550:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 551:FWLIB/src/stm32f4xx_flash.c ****   
 552:FWLIB/src/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 553:FWLIB/src/stm32f4xx_flash.c ****   {
 554:FWLIB/src/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 555:FWLIB/src/stm32f4xx_flash.c ****   }
 556:FWLIB/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 557:FWLIB/src/stm32f4xx_flash.c ****   {
 558:FWLIB/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 559:FWLIB/src/stm32f4xx_flash.c ****   }
 560:FWLIB/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 561:FWLIB/src/stm32f4xx_flash.c ****   {
 562:FWLIB/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 563:FWLIB/src/stm32f4xx_flash.c ****   }
 564:FWLIB/src/stm32f4xx_flash.c ****   else
 565:FWLIB/src/stm32f4xx_flash.c ****   {
 566:FWLIB/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 567:FWLIB/src/stm32f4xx_flash.c ****   }  
 568:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 569:FWLIB/src/stm32f4xx_flash.c ****   {
 570:FWLIB/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase all sectors */
 571:FWLIB/src/stm32f4xx_flash.c **** #if defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM32F469_479xx)
 572:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 573:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 574:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= (FLASH_CR_MER1 | FLASH_CR_MER2);
 575:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 576:FWLIB/src/stm32f4xx_flash.c ****     
 577:FWLIB/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 578:FWLIB/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 579:FWLIB/src/stm32f4xx_flash.c **** 
 580:FWLIB/src/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the MER Bit */
 581:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= ~(FLASH_CR_MER1 | FLASH_CR_MER2);
 582:FWLIB/src/stm32f4xx_flash.c **** #endif /* STM32F427_437xx ||  STM32F429_439xx ||  STM32F469_479xx */
 583:FWLIB/src/stm32f4xx_flash.c **** 
 584:FWLIB/src/stm32f4xx_flash.c **** #if defined(STM32F40_41xxx) || defined(STM32F401xx) || defined(STM32F410xx) || defined(STM32F411xE)
 585:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 586:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 587:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_MER;
 588:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 589:FWLIB/src/stm32f4xx_flash.c ****     
 590:FWLIB/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 591:FWLIB/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 592:FWLIB/src/stm32f4xx_flash.c **** 
 593:FWLIB/src/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the MER Bit */
 594:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_MER);
 595:FWLIB/src/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F412xG || STM32F413_4
 596:FWLIB/src/stm32f4xx_flash.c **** 
 597:FWLIB/src/stm32f4xx_flash.c ****   }   
 598:FWLIB/src/stm32f4xx_flash.c ****   /* Return the Erase Status */
 599:FWLIB/src/stm32f4xx_flash.c ****   return status;
 600:FWLIB/src/stm32f4xx_flash.c **** }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 17


 601:FWLIB/src/stm32f4xx_flash.c **** 
 602:FWLIB/src/stm32f4xx_flash.c **** /**
 603:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Erases all FLASH Sectors in Bank 1.
 604:FWLIB/src/stm32f4xx_flash.c ****   *
 605:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
 606:FWLIB/src/stm32f4xx_flash.c ****   *      
 607:FWLIB/src/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 608:FWLIB/src/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one. 
 609:FWLIB/src/stm32f4xx_flash.c ****   *  
 610:FWLIB/src/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 611:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 612:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 613:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 614:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 615:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 616:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 617:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 618:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 619:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 620:FWLIB/src/stm32f4xx_flash.c ****   *       
 621:FWLIB/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 622:FWLIB/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 623:FWLIB/src/stm32f4xx_flash.c ****   */
 624:FWLIB/src/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseAllBank1Sectors(uint8_t VoltageRange)
 625:FWLIB/src/stm32f4xx_flash.c **** {
 626:FWLIB/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 627:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 628:FWLIB/src/stm32f4xx_flash.c ****   
 629:FWLIB/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 630:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 631:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 632:FWLIB/src/stm32f4xx_flash.c ****   
 633:FWLIB/src/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 634:FWLIB/src/stm32f4xx_flash.c ****   {
 635:FWLIB/src/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 636:FWLIB/src/stm32f4xx_flash.c ****   }
 637:FWLIB/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 638:FWLIB/src/stm32f4xx_flash.c ****   {
 639:FWLIB/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 640:FWLIB/src/stm32f4xx_flash.c ****   }
 641:FWLIB/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 642:FWLIB/src/stm32f4xx_flash.c ****   {
 643:FWLIB/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 644:FWLIB/src/stm32f4xx_flash.c ****   }
 645:FWLIB/src/stm32f4xx_flash.c ****   else
 646:FWLIB/src/stm32f4xx_flash.c ****   {
 647:FWLIB/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 648:FWLIB/src/stm32f4xx_flash.c ****   }  
 649:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 650:FWLIB/src/stm32f4xx_flash.c ****   {
 651:FWLIB/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase all sectors */
 652:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR &= CR_PSIZE_MASK;
 653:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 654:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER1;
 655:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 656:FWLIB/src/stm32f4xx_flash.c ****     
 657:FWLIB/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 18


 658:FWLIB/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 659:FWLIB/src/stm32f4xx_flash.c **** 
 660:FWLIB/src/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the MER Bit */
 661:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_MER1);
 662:FWLIB/src/stm32f4xx_flash.c **** 
 663:FWLIB/src/stm32f4xx_flash.c ****   }   
 664:FWLIB/src/stm32f4xx_flash.c ****   /* Return the Erase Status */
 665:FWLIB/src/stm32f4xx_flash.c ****   return status;
 666:FWLIB/src/stm32f4xx_flash.c **** }
 667:FWLIB/src/stm32f4xx_flash.c **** 
 668:FWLIB/src/stm32f4xx_flash.c **** 
 669:FWLIB/src/stm32f4xx_flash.c **** /**
 670:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Erases all FLASH Sectors in Bank 2.
 671:FWLIB/src/stm32f4xx_flash.c ****   *
 672:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
 673:FWLIB/src/stm32f4xx_flash.c ****   *     
 674:FWLIB/src/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 675:FWLIB/src/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 676:FWLIB/src/stm32f4xx_flash.c ****   *     
 677:FWLIB/src/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 678:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 679:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 680:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 681:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 682:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 683:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 684:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 685:FWLIB/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 686:FWLIB/src/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 687:FWLIB/src/stm32f4xx_flash.c ****   *       
 688:FWLIB/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 689:FWLIB/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 690:FWLIB/src/stm32f4xx_flash.c ****   */
 691:FWLIB/src/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseAllBank2Sectors(uint8_t VoltageRange)
 692:FWLIB/src/stm32f4xx_flash.c **** {
 693:FWLIB/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 694:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 695:FWLIB/src/stm32f4xx_flash.c ****   
 696:FWLIB/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 697:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 698:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 699:FWLIB/src/stm32f4xx_flash.c ****   
 700:FWLIB/src/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 701:FWLIB/src/stm32f4xx_flash.c ****   {
 702:FWLIB/src/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 703:FWLIB/src/stm32f4xx_flash.c ****   }
 704:FWLIB/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 705:FWLIB/src/stm32f4xx_flash.c ****   {
 706:FWLIB/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 707:FWLIB/src/stm32f4xx_flash.c ****   }
 708:FWLIB/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 709:FWLIB/src/stm32f4xx_flash.c ****   {
 710:FWLIB/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 711:FWLIB/src/stm32f4xx_flash.c ****   }
 712:FWLIB/src/stm32f4xx_flash.c ****   else
 713:FWLIB/src/stm32f4xx_flash.c ****   {
 714:FWLIB/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 19


 715:FWLIB/src/stm32f4xx_flash.c ****   }  
 716:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 717:FWLIB/src/stm32f4xx_flash.c ****   {
 718:FWLIB/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase all sectors */
 719:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR &= CR_PSIZE_MASK;
 720:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 721:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER2;
 722:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 723:FWLIB/src/stm32f4xx_flash.c ****     
 724:FWLIB/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 725:FWLIB/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 726:FWLIB/src/stm32f4xx_flash.c **** 
 727:FWLIB/src/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the MER Bit */
 728:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_MER2);
 729:FWLIB/src/stm32f4xx_flash.c **** 
 730:FWLIB/src/stm32f4xx_flash.c ****   }   
 731:FWLIB/src/stm32f4xx_flash.c ****   /* Return the Erase Status */
 732:FWLIB/src/stm32f4xx_flash.c ****   return status;
 733:FWLIB/src/stm32f4xx_flash.c **** }
 734:FWLIB/src/stm32f4xx_flash.c **** 
 735:FWLIB/src/stm32f4xx_flash.c **** /**
 736:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Programs a double word (64-bit) at a specified address.
 737:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from
 738:FWLIB/src/stm32f4xx_flash.c ****   *         2.7V to 3.6V and an External Vpp is present.
 739:FWLIB/src/stm32f4xx_flash.c ****   *
 740:FWLIB/src/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 741:FWLIB/src/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 742:FWLIB/src/stm32f4xx_flash.c ****   *  
 743:FWLIB/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 744:FWLIB/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 745:FWLIB/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 746:FWLIB/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 747:FWLIB/src/stm32f4xx_flash.c ****   */
 748:FWLIB/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramDoubleWord(uint32_t Address, uint64_t Data)
 749:FWLIB/src/stm32f4xx_flash.c **** {
 750:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 751:FWLIB/src/stm32f4xx_flash.c **** 
 752:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
 753:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 754:FWLIB/src/stm32f4xx_flash.c **** 
 755:FWLIB/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 756:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 757:FWLIB/src/stm32f4xx_flash.c ****   
 758:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 759:FWLIB/src/stm32f4xx_flash.c ****   {
 760:FWLIB/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 761:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 762:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 763:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 764:FWLIB/src/stm32f4xx_flash.c ****   
 765:FWLIB/src/stm32f4xx_flash.c ****     *(__IO uint64_t*)Address = Data;
 766:FWLIB/src/stm32f4xx_flash.c ****         
 767:FWLIB/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 768:FWLIB/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 769:FWLIB/src/stm32f4xx_flash.c **** 
 770:FWLIB/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 771:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 20


 772:FWLIB/src/stm32f4xx_flash.c ****   } 
 773:FWLIB/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 774:FWLIB/src/stm32f4xx_flash.c ****   return status;
 775:FWLIB/src/stm32f4xx_flash.c **** }
 776:FWLIB/src/stm32f4xx_flash.c **** 
 777:FWLIB/src/stm32f4xx_flash.c **** /**
 778:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Programs a word (32-bit) at a specified address.
 779:FWLIB/src/stm32f4xx_flash.c ****   *
 780:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from 2.7V to 3.6V. 
 781:FWLIB/src/stm32f4xx_flash.c ****   *
 782:FWLIB/src/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 783:FWLIB/src/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 784:FWLIB/src/stm32f4xx_flash.c ****   *  
 785:FWLIB/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 786:FWLIB/src/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 787:FWLIB/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 788:FWLIB/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 789:FWLIB/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 790:FWLIB/src/stm32f4xx_flash.c ****   */
 791:FWLIB/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
 792:FWLIB/src/stm32f4xx_flash.c **** {
 793:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 794:FWLIB/src/stm32f4xx_flash.c **** 
 795:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
 796:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 797:FWLIB/src/stm32f4xx_flash.c **** 
 798:FWLIB/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 799:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 800:FWLIB/src/stm32f4xx_flash.c ****   
 801:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 802:FWLIB/src/stm32f4xx_flash.c ****   {
 803:FWLIB/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 804:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 805:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_WORD;
 806:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 807:FWLIB/src/stm32f4xx_flash.c ****   
 808:FWLIB/src/stm32f4xx_flash.c ****     *(__IO uint32_t*)Address = Data;
 809:FWLIB/src/stm32f4xx_flash.c ****         
 810:FWLIB/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 811:FWLIB/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 812:FWLIB/src/stm32f4xx_flash.c **** 
 813:FWLIB/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 814:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 815:FWLIB/src/stm32f4xx_flash.c ****   } 
 816:FWLIB/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 817:FWLIB/src/stm32f4xx_flash.c ****   return status;
 818:FWLIB/src/stm32f4xx_flash.c **** }
 819:FWLIB/src/stm32f4xx_flash.c **** 
 820:FWLIB/src/stm32f4xx_flash.c **** /**
 821:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Programs a half word (16-bit) at a specified address. 
 822:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from 2.1V to 3.6V. 
 823:FWLIB/src/stm32f4xx_flash.c ****   *
 824:FWLIB/src/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 825:FWLIB/src/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 826:FWLIB/src/stm32f4xx_flash.c ****   * 
 827:FWLIB/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 828:FWLIB/src/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 21


 829:FWLIB/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 830:FWLIB/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 831:FWLIB/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 832:FWLIB/src/stm32f4xx_flash.c ****   */
 833:FWLIB/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
 834:FWLIB/src/stm32f4xx_flash.c **** {
 835:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 836:FWLIB/src/stm32f4xx_flash.c **** 
 837:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
 838:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 839:FWLIB/src/stm32f4xx_flash.c **** 
 840:FWLIB/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 841:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 842:FWLIB/src/stm32f4xx_flash.c ****   
 843:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 844:FWLIB/src/stm32f4xx_flash.c ****   {
 845:FWLIB/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 846:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 847:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 848:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 849:FWLIB/src/stm32f4xx_flash.c ****   
 850:FWLIB/src/stm32f4xx_flash.c ****     *(__IO uint16_t*)Address = Data;
 851:FWLIB/src/stm32f4xx_flash.c ****         
 852:FWLIB/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 853:FWLIB/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 854:FWLIB/src/stm32f4xx_flash.c **** 
 855:FWLIB/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 856:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 857:FWLIB/src/stm32f4xx_flash.c ****   } 
 858:FWLIB/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 859:FWLIB/src/stm32f4xx_flash.c ****   return status;
 860:FWLIB/src/stm32f4xx_flash.c **** }
 861:FWLIB/src/stm32f4xx_flash.c **** 
 862:FWLIB/src/stm32f4xx_flash.c **** /**
 863:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Programs a byte (8-bit) at a specified address.
 864:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function can be used within all the device supply voltage ranges.  
 865:FWLIB/src/stm32f4xx_flash.c ****   *
 866:FWLIB/src/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 867:FWLIB/src/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 868:FWLIB/src/stm32f4xx_flash.c ****   * 
 869:FWLIB/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 870:FWLIB/src/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 871:FWLIB/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 872:FWLIB/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 873:FWLIB/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 874:FWLIB/src/stm32f4xx_flash.c ****   */
 875:FWLIB/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramByte(uint32_t Address, uint8_t Data)
 876:FWLIB/src/stm32f4xx_flash.c **** {
 877:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 878:FWLIB/src/stm32f4xx_flash.c **** 
 879:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
 880:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 881:FWLIB/src/stm32f4xx_flash.c **** 
 882:FWLIB/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 883:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 884:FWLIB/src/stm32f4xx_flash.c ****   
 885:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 22


 886:FWLIB/src/stm32f4xx_flash.c ****   {
 887:FWLIB/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 888:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 889:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_BYTE;
 890:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 891:FWLIB/src/stm32f4xx_flash.c ****   
 892:FWLIB/src/stm32f4xx_flash.c ****     *(__IO uint8_t*)Address = Data;
 893:FWLIB/src/stm32f4xx_flash.c ****         
 894:FWLIB/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 895:FWLIB/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 896:FWLIB/src/stm32f4xx_flash.c **** 
 897:FWLIB/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 898:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 899:FWLIB/src/stm32f4xx_flash.c ****   } 
 900:FWLIB/src/stm32f4xx_flash.c **** 
 901:FWLIB/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 902:FWLIB/src/stm32f4xx_flash.c ****   return status;
 903:FWLIB/src/stm32f4xx_flash.c **** }
 904:FWLIB/src/stm32f4xx_flash.c **** 
 905:FWLIB/src/stm32f4xx_flash.c **** /**
 906:FWLIB/src/stm32f4xx_flash.c ****   * @}
 907:FWLIB/src/stm32f4xx_flash.c ****   */
 908:FWLIB/src/stm32f4xx_flash.c **** 
 909:FWLIB/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group3 Option Bytes Programming functions
 910:FWLIB/src/stm32f4xx_flash.c ****  *  @brief   Option Bytes Programming functions 
 911:FWLIB/src/stm32f4xx_flash.c ****  *
 912:FWLIB/src/stm32f4xx_flash.c **** @verbatim   
 913:FWLIB/src/stm32f4xx_flash.c ****  ===============================================================================
 914:FWLIB/src/stm32f4xx_flash.c ****                 ##### Option Bytes Programming functions #####
 915:FWLIB/src/stm32f4xx_flash.c ****  ===============================================================================  
 916:FWLIB/src/stm32f4xx_flash.c ****     [..]
 917:FWLIB/src/stm32f4xx_flash.c ****       This group includes the following functions:
 918:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_OB_Unlock(void)
 919:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_OB_Lock(void)
 920:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState)
 921:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_OB_WRP1Config(uint32_t OB_WRP, FunctionalState NewState)  
 922:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_OB_PCROPSelectionConfig(uint8_t OB_PCROPSelect)
 923:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_OB_PCROPConfig(uint32_t OB_PCROP, FunctionalState NewState)
 924:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_OB_PCROP1Config(uint32_t OB_PCROP, FunctionalState NewState) 
 925:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_OB_RDPConfig(uint8_t OB_RDP)
 926:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)
 927:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_OB_BORConfig(uint8_t OB_BOR)
 928:FWLIB/src/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_ProgramOTP(uint32_t Address, uint32_t Data)
 929:FWLIB/src/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_OB_Launch(void)
 930:FWLIB/src/stm32f4xx_flash.c ****       (+) uint32_t FLASH_OB_GetUser(void)
 931:FWLIB/src/stm32f4xx_flash.c ****       (+) uint8_t FLASH_OB_GetWRP(void)
 932:FWLIB/src/stm32f4xx_flash.c ****       (+) uint8_t FLASH_OB_GetWRP1(void)
 933:FWLIB/src/stm32f4xx_flash.c ****       (+) uint8_t FLASH_OB_GetPCROP(void)
 934:FWLIB/src/stm32f4xx_flash.c ****       (+) uint8_t FLASH_OB_GetPCROP1(void)
 935:FWLIB/src/stm32f4xx_flash.c ****       (+) uint8_t FLASH_OB_GetRDP(void)
 936:FWLIB/src/stm32f4xx_flash.c ****       (+) uint8_t FLASH_OB_GetBOR(void)
 937:FWLIB/src/stm32f4xx_flash.c ****     [..]  
 938:FWLIB/src/stm32f4xx_flash.c ****       The following function can be used only for STM32F42xxx/43xxx devices. 
 939:FWLIB/src/stm32f4xx_flash.c ****       (+) void FLASH_OB_BootConfig(uint8_t OB_BOOT)
 940:FWLIB/src/stm32f4xx_flash.c ****     [..]   
 941:FWLIB/src/stm32f4xx_flash.c ****      Any operation of erase or program should follow these steps:
 942:FWLIB/src/stm32f4xx_flash.c ****       (#) Call the FLASH_OB_Unlock() function to enable the FLASH option control 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 23


 943:FWLIB/src/stm32f4xx_flash.c ****           register access
 944:FWLIB/src/stm32f4xx_flash.c **** 
 945:FWLIB/src/stm32f4xx_flash.c ****       (#) Call one or several functions to program the desired Option Bytes:
 946:FWLIB/src/stm32f4xx_flash.c ****         (++) void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState) 
 947:FWLIB/src/stm32f4xx_flash.c ****              => to Enable/Disable the desired sector write protection
 948:FWLIB/src/stm32f4xx_flash.c ****         (++) void FLASH_OB_RDPConfig(uint8_t OB_RDP) => to set the desired read 
 949:FWLIB/src/stm32f4xx_flash.c ****              Protection Level
 950:FWLIB/src/stm32f4xx_flash.c ****         (++) void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY) 
 951:FWLIB/src/stm32f4xx_flash.c ****              => to configure the user Option Bytes.
 952:FWLIB/src/stm32f4xx_flash.c ****         (++) void FLASH_OB_BORConfig(uint8_t OB_BOR) => to set the BOR Level 			 
 953:FWLIB/src/stm32f4xx_flash.c **** 
 954:FWLIB/src/stm32f4xx_flash.c ****       (#) Once all needed Option Bytes to be programmed are correctly written, 
 955:FWLIB/src/stm32f4xx_flash.c ****           call the FLASH_OB_Launch() function to launch the Option Bytes 
 956:FWLIB/src/stm32f4xx_flash.c ****           programming process.
 957:FWLIB/src/stm32f4xx_flash.c ****      
 958:FWLIB/src/stm32f4xx_flash.c ****       -@- When changing the IWDG mode from HW to SW or from SW to HW, a system 
 959:FWLIB/src/stm32f4xx_flash.c ****           reset is needed to make the change effective.  
 960:FWLIB/src/stm32f4xx_flash.c **** 
 961:FWLIB/src/stm32f4xx_flash.c ****       (#) Call the FLASH_OB_Lock() function to disable the FLASH option control 
 962:FWLIB/src/stm32f4xx_flash.c ****           register access (recommended to protect the Option Bytes against 
 963:FWLIB/src/stm32f4xx_flash.c ****           possible unwanted operations)
 964:FWLIB/src/stm32f4xx_flash.c ****     
 965:FWLIB/src/stm32f4xx_flash.c **** @endverbatim
 966:FWLIB/src/stm32f4xx_flash.c ****   * @{
 967:FWLIB/src/stm32f4xx_flash.c ****   */
 968:FWLIB/src/stm32f4xx_flash.c **** 
 969:FWLIB/src/stm32f4xx_flash.c **** /**
 970:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Unlocks the FLASH Option Control Registers access.
 971:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
 972:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
 973:FWLIB/src/stm32f4xx_flash.c ****   */
 974:FWLIB/src/stm32f4xx_flash.c **** void FLASH_OB_Unlock(void)
 975:FWLIB/src/stm32f4xx_flash.c **** {
 326              		.loc 1 975 1 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 976:FWLIB/src/stm32f4xx_flash.c ****   if((FLASH->OPTCR & FLASH_OPTCR_OPTLOCK) != RESET)
 331              		.loc 1 976 3 view .LVU56
 332              		.loc 1 976 12 is_stmt 0 view .LVU57
 333 0000 054B     		ldr	r3, .L35
 334 0002 5B69     		ldr	r3, [r3, #20]
 335              		.loc 1 976 5 view .LVU58
 336 0004 13F0010F 		tst	r3, #1
 337 0008 05D0     		beq	.L33
 977:FWLIB/src/stm32f4xx_flash.c ****   {
 978:FWLIB/src/stm32f4xx_flash.c ****     /* Authorizes the Option Byte register programming */
 979:FWLIB/src/stm32f4xx_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY1;
 338              		.loc 1 979 5 is_stmt 1 view .LVU59
 339              		.loc 1 979 20 is_stmt 0 view .LVU60
 340 000a 034B     		ldr	r3, .L35
 341 000c 034A     		ldr	r2, .L35+4
 342 000e 9A60     		str	r2, [r3, #8]
 980:FWLIB/src/stm32f4xx_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY2;
 343              		.loc 1 980 5 is_stmt 1 view .LVU61
 344              		.loc 1 980 20 is_stmt 0 view .LVU62
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 24


 345 0010 02F14432 		add	r2, r2, #1145324612
 346 0014 9A60     		str	r2, [r3, #8]
 347              	.L33:
 981:FWLIB/src/stm32f4xx_flash.c ****   }  
 982:FWLIB/src/stm32f4xx_flash.c **** }
 348              		.loc 1 982 1 view .LVU63
 349 0016 7047     		bx	lr
 350              	.L36:
 351              		.align	2
 352              	.L35:
 353 0018 003C0240 		.word	1073888256
 354 001c 3B2A1908 		.word	135866939
 355              		.cfi_endproc
 356              	.LFE139:
 358              		.section	.text.FLASH_OB_Lock,"ax",%progbits
 359              		.align	1
 360              		.global	FLASH_OB_Lock
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	FLASH_OB_Lock:
 367              	.LFB140:
 983:FWLIB/src/stm32f4xx_flash.c **** 
 984:FWLIB/src/stm32f4xx_flash.c **** /**
 985:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Locks the FLASH Option Control Registers access.
 986:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
 987:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
 988:FWLIB/src/stm32f4xx_flash.c ****   */
 989:FWLIB/src/stm32f4xx_flash.c **** void FLASH_OB_Lock(void)
 990:FWLIB/src/stm32f4xx_flash.c **** {
 368              		.loc 1 990 1 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 991:FWLIB/src/stm32f4xx_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 992:FWLIB/src/stm32f4xx_flash.c ****   FLASH->OPTCR |= FLASH_OPTCR_OPTLOCK;
 373              		.loc 1 992 3 view .LVU65
 374              		.loc 1 992 16 is_stmt 0 view .LVU66
 375 0000 024A     		ldr	r2, .L38
 376 0002 5369     		ldr	r3, [r2, #20]
 377 0004 43F00103 		orr	r3, r3, #1
 378 0008 5361     		str	r3, [r2, #20]
 993:FWLIB/src/stm32f4xx_flash.c **** }
 379              		.loc 1 993 1 view .LVU67
 380 000a 7047     		bx	lr
 381              	.L39:
 382              		.align	2
 383              	.L38:
 384 000c 003C0240 		.word	1073888256
 385              		.cfi_endproc
 386              	.LFE140:
 388              		.section	.text.FLASH_OB_PCROPSelectionConfig,"ax",%progbits
 389              		.align	1
 390              		.global	FLASH_OB_PCROPSelectionConfig
 391              		.syntax unified
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 25


 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	FLASH_OB_PCROPSelectionConfig:
 397              	.LVL5:
 398              	.LFB143:
 994:FWLIB/src/stm32f4xx_flash.c **** 
 995:FWLIB/src/stm32f4xx_flash.c **** /**
 996:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the write protection of the desired sectors, for the first
 997:FWLIB/src/stm32f4xx_flash.c ****   *         1 Mb of the Flash  
 998:FWLIB/src/stm32f4xx_flash.c ****   *
 999:FWLIB/src/stm32f4xx_flash.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
1000:FWLIB/src/stm32f4xx_flash.c ****   *         it is not possible to program or erase the flash sector i if CortexM4  
1001:FWLIB/src/stm32f4xx_flash.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
1002:FWLIB/src/stm32f4xx_flash.c ****   * @note   Active value of nWRPi bits is inverted when PCROP mode is active (SPRMOD =1).   
1003:FWLIB/src/stm32f4xx_flash.c ****   * 
1004:FWLIB/src/stm32f4xx_flash.c ****   * @param  OB_WRP: specifies the sector(s) to be write protected or unprotected.
1005:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1006:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_WRP: A value between OB_WRP_Sector0 and OB_WRP_Sector11                     
1007:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_WRP_Sector_All
1008:FWLIB/src/stm32f4xx_flash.c ****   * @param  Newstate: new state of the Write Protection.
1009:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be: ENABLE or DISABLE.
1010:FWLIB/src/stm32f4xx_flash.c ****   * @retval None  
1011:FWLIB/src/stm32f4xx_flash.c ****   */
1012:FWLIB/src/stm32f4xx_flash.c **** void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState)
1013:FWLIB/src/stm32f4xx_flash.c **** { 
1014:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1015:FWLIB/src/stm32f4xx_flash.c ****   
1016:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
1017:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_WRP(OB_WRP));
1018:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1019:FWLIB/src/stm32f4xx_flash.c ****     
1020:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1021:FWLIB/src/stm32f4xx_flash.c **** 
1022:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
1023:FWLIB/src/stm32f4xx_flash.c ****   { 
1024:FWLIB/src/stm32f4xx_flash.c ****     if(NewState != DISABLE)
1025:FWLIB/src/stm32f4xx_flash.c ****     {
1026:FWLIB/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~OB_WRP);
1027:FWLIB/src/stm32f4xx_flash.c ****     }
1028:FWLIB/src/stm32f4xx_flash.c ****     else
1029:FWLIB/src/stm32f4xx_flash.c ****     {
1030:FWLIB/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)OB_WRP;
1031:FWLIB/src/stm32f4xx_flash.c ****     }
1032:FWLIB/src/stm32f4xx_flash.c ****   }
1033:FWLIB/src/stm32f4xx_flash.c **** }
1034:FWLIB/src/stm32f4xx_flash.c **** 
1035:FWLIB/src/stm32f4xx_flash.c **** /**
1036:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the write protection of the desired sectors, for the second
1037:FWLIB/src/stm32f4xx_flash.c ****   *         1 Mb of the Flash  
1038:FWLIB/src/stm32f4xx_flash.c ****   *           
1039:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
1040:FWLIB/src/stm32f4xx_flash.c ****   *   
1041:FWLIB/src/stm32f4xx_flash.c ****   * @note   When the memory read out protection is selected (RDP level = 1), 
1042:FWLIB/src/stm32f4xx_flash.c ****   *         it is not possible to program or erase the flash sector i if CortexM4  
1043:FWLIB/src/stm32f4xx_flash.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
1044:FWLIB/src/stm32f4xx_flash.c ****   * @note   Active value of nWRPi bits is inverted when PCROP mode is active (SPRMOD =1).      
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 26


1045:FWLIB/src/stm32f4xx_flash.c ****   * 
1046:FWLIB/src/stm32f4xx_flash.c ****   * @param  OB_WRP: specifies the sector(s) to be write protected or unprotected.
1047:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1048:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_WRP: A value between OB_WRP_Sector12 and OB_WRP_Sector23
1049:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_WRP_Sector_All                        
1050:FWLIB/src/stm32f4xx_flash.c ****   * @param  Newstate: new state of the Write Protection.
1051:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be: ENABLE or DISABLE.
1052:FWLIB/src/stm32f4xx_flash.c ****   * @retval None  
1053:FWLIB/src/stm32f4xx_flash.c ****   */
1054:FWLIB/src/stm32f4xx_flash.c **** void FLASH_OB_WRP1Config(uint32_t OB_WRP, FunctionalState NewState)
1055:FWLIB/src/stm32f4xx_flash.c **** { 
1056:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1057:FWLIB/src/stm32f4xx_flash.c ****   
1058:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
1059:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_WRP(OB_WRP));
1060:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1061:FWLIB/src/stm32f4xx_flash.c ****     
1062:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1063:FWLIB/src/stm32f4xx_flash.c **** 
1064:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
1065:FWLIB/src/stm32f4xx_flash.c ****   { 
1066:FWLIB/src/stm32f4xx_flash.c ****     if(NewState != DISABLE)
1067:FWLIB/src/stm32f4xx_flash.c ****     {
1068:FWLIB/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS &= (~OB_WRP);
1069:FWLIB/src/stm32f4xx_flash.c ****     }
1070:FWLIB/src/stm32f4xx_flash.c ****     else
1071:FWLIB/src/stm32f4xx_flash.c ****     {
1072:FWLIB/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS |= (uint16_t)OB_WRP;
1073:FWLIB/src/stm32f4xx_flash.c ****     }
1074:FWLIB/src/stm32f4xx_flash.c ****   }
1075:FWLIB/src/stm32f4xx_flash.c **** }
1076:FWLIB/src/stm32f4xx_flash.c **** 
1077:FWLIB/src/stm32f4xx_flash.c **** /**
1078:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Select the Protection Mode (SPRMOD). 
1079:FWLIB/src/stm32f4xx_flash.c ****   * 
1080:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx and STM32F401xx/411xE devices.    
1081:FWLIB/src/stm32f4xx_flash.c ****   * 
1082:FWLIB/src/stm32f4xx_flash.c ****   * @note   After PCROP activation, Option Byte modification is not possible. 
1083:FWLIB/src/stm32f4xx_flash.c ****   *         Exception made for the global Read Out Protection modification level (level1 to level0)
1084:FWLIB/src/stm32f4xx_flash.c ****   * @note   Once SPRMOD bit is active unprotection of a protected sector is not possible 
1085:FWLIB/src/stm32f4xx_flash.c ****   *   
1086:FWLIB/src/stm32f4xx_flash.c ****   * @note   Read a protected sector will set RDERR Flag and write a protected sector will set WRPER
1087:FWLIB/src/stm32f4xx_flash.c ****   *   
1088:FWLIB/src/stm32f4xx_flash.c ****   * @note   Some Precautions should be taken when activating the PCROP feature :
1089:FWLIB/src/stm32f4xx_flash.c ****   *         The active value of nWRPi bits is inverted when PCROP mode is active, this means if SPR
1090:FWLIB/src/stm32f4xx_flash.c ****   *         and WRPi = 1 (default value), then the user sector i is read/write protected.
1091:FWLIB/src/stm32f4xx_flash.c ****   *         In order to avoid activation of PCROP Mode for undesired sectors, please follow the
1092:FWLIB/src/stm32f4xx_flash.c ****   *         below safety sequence :       
1093:FWLIB/src/stm32f4xx_flash.c ****   *         - Disable PCROP for all Sectors using FLASH_OB_PCROPConfig(OB_PCROP_Sector_All, DISABLE
1094:FWLIB/src/stm32f4xx_flash.c ****   *           for Bank1 or FLASH_OB_PCROP1Config(OB_PCROP_Sector_All, DISABLE) function for Bank2  
1095:FWLIB/src/stm32f4xx_flash.c ****   *         - Enable PCROP for the desired Sector i using FLASH_OB_PCROPConfig(Sector i, ENABLE) fu
1096:FWLIB/src/stm32f4xx_flash.c ****   *         - Activate the PCROP Mode FLASH_OB_PCROPSelectionConfig() function. 
1097:FWLIB/src/stm32f4xx_flash.c ****   * 
1098:FWLIB/src/stm32f4xx_flash.c ****   * @param  OB_PCROP:  Select the Protection Mode of nWPRi bits 
1099:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1100:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_PcROP_Disable: nWRPi control the write protection of respective user sectors
1101:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_PcROP_Enable: nWRPi control the  read&write protection (PCROP) of respective
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 27


1102:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
1103:FWLIB/src/stm32f4xx_flash.c ****   */
1104:FWLIB/src/stm32f4xx_flash.c **** void FLASH_OB_PCROPSelectionConfig(uint8_t OB_PcROP)
1105:FWLIB/src/stm32f4xx_flash.c **** {  
 399              		.loc 1 1105 1 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
1106:FWLIB/src/stm32f4xx_flash.c ****   uint8_t optiontmp = 0xFF;
 404              		.loc 1 1106 3 view .LVU69
1107:FWLIB/src/stm32f4xx_flash.c ****       
1108:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
1109:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_PCROP_SELECT(OB_PcROP));
 405              		.loc 1 1109 3 view .LVU70
1110:FWLIB/src/stm32f4xx_flash.c ****   
1111:FWLIB/src/stm32f4xx_flash.c ****   /* Mask SPRMOD bit */
1112:FWLIB/src/stm32f4xx_flash.c ****   optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE3_ADDRESS) & (uint8_t)0x7F); 
 406              		.loc 1 1112 3 view .LVU71
 407              		.loc 1 1112 65 is_stmt 0 view .LVU72
 408 0000 034A     		ldr	r2, .L41
 409 0002 D37D     		ldrb	r3, [r2, #23]	@ zero_extendqisi2
 410              		.loc 1 1112 13 view .LVU73
 411 0004 03F07F03 		and	r3, r3, #127
 412              	.LVL6:
1113:FWLIB/src/stm32f4xx_flash.c ****   /* Update Option Byte */
1114:FWLIB/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE3_ADDRESS = (uint8_t)(OB_PcROP | optiontmp); 
 413              		.loc 1 1114 3 is_stmt 1 view .LVU74
 414              		.loc 1 1114 42 is_stmt 0 view .LVU75
 415 0008 0343     		orrs	r3, r3, r0
 416              	.LVL7:
 417              		.loc 1 1114 40 view .LVU76
 418 000a D375     		strb	r3, [r2, #23]
1115:FWLIB/src/stm32f4xx_flash.c ****     
1116:FWLIB/src/stm32f4xx_flash.c **** }
 419              		.loc 1 1116 1 view .LVU77
 420 000c 7047     		bx	lr
 421              	.L42:
 422 000e 00BF     		.align	2
 423              	.L41:
 424 0010 003C0240 		.word	1073888256
 425              		.cfi_endproc
 426              	.LFE143:
 428              		.section	.text.FLASH_OB_BootConfig,"ax",%progbits
 429              		.align	1
 430              		.global	FLASH_OB_BootConfig
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 434              		.fpu fpv4-sp-d16
 436              	FLASH_OB_BootConfig:
 437              	.LVL8:
 438              	.LFB148:
1117:FWLIB/src/stm32f4xx_flash.c **** 
1118:FWLIB/src/stm32f4xx_flash.c **** /**
1119:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the read/write protection (PCROP) of the desired 
1120:FWLIB/src/stm32f4xx_flash.c ****   *         sectors, for the first 1 MB of the Flash.
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 28


1121:FWLIB/src/stm32f4xx_flash.c ****   *           
1122:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx , STM32F401xx/411xE 
1123:FWLIB/src/stm32f4xx_flash.c ****   *         STM32F412xG and STM32F413_423xx devices.
1124:FWLIB/src/stm32f4xx_flash.c ****   *   
1125:FWLIB/src/stm32f4xx_flash.c ****   * @param  OB_PCROP: specifies the sector(s) to be read/write protected or unprotected.
1126:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1127:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_PCROP: A value between OB_PCROP_Sector0 and OB_PCROP_Sector11 for 
1128:FWLIB/src/stm32f4xx_flash.c ****   *                           STM32F42xxx/43xxx devices and between OB_PCROP_Sector0 and 
1129:FWLIB/src/stm32f4xx_flash.c ****   *                           OB_PCROP_Sector5 for STM32F401xx/411xE devices.
1130:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_PCROP_Sector_All
1131:FWLIB/src/stm32f4xx_flash.c ****   * @param  Newstate: new state of the Write Protection.
1132:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be: ENABLE or DISABLE.
1133:FWLIB/src/stm32f4xx_flash.c ****   * @retval None  
1134:FWLIB/src/stm32f4xx_flash.c ****   */
1135:FWLIB/src/stm32f4xx_flash.c **** void FLASH_OB_PCROPConfig(uint32_t OB_PCROP, FunctionalState NewState)
1136:FWLIB/src/stm32f4xx_flash.c **** { 
1137:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1138:FWLIB/src/stm32f4xx_flash.c ****   
1139:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
1140:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_PCROP(OB_PCROP));
1141:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1142:FWLIB/src/stm32f4xx_flash.c ****     
1143:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1144:FWLIB/src/stm32f4xx_flash.c **** 
1145:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
1146:FWLIB/src/stm32f4xx_flash.c ****   { 
1147:FWLIB/src/stm32f4xx_flash.c ****     if(NewState != DISABLE)
1148:FWLIB/src/stm32f4xx_flash.c ****     {
1149:FWLIB/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)OB_PCROP;    
1150:FWLIB/src/stm32f4xx_flash.c ****     }
1151:FWLIB/src/stm32f4xx_flash.c ****     else
1152:FWLIB/src/stm32f4xx_flash.c ****     {
1153:FWLIB/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~OB_PCROP);
1154:FWLIB/src/stm32f4xx_flash.c ****     }
1155:FWLIB/src/stm32f4xx_flash.c ****   }
1156:FWLIB/src/stm32f4xx_flash.c **** }
1157:FWLIB/src/stm32f4xx_flash.c **** 
1158:FWLIB/src/stm32f4xx_flash.c **** /**
1159:FWLIB/src/stm32f4xx_flash.c ****    * @brief Enables or disables the read/write protection (PCROP) of the desired 
1160:FWLIB/src/stm32f4xx_flash.c ****   *         sectors
1161:FWLIB/src/stm32f4xx_flash.c ****   *           
1162:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
1163:FWLIB/src/stm32f4xx_flash.c ****   *   
1164:FWLIB/src/stm32f4xx_flash.c ****   * @param  OB_PCROP: specifies the sector(s) to be read/write protected or unprotected.
1165:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1166:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_PCROP: A value between OB_PCROP_Sector12 and OB_PCROP_Sector23 
1167:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_PCROP_Sector_All
1168:FWLIB/src/stm32f4xx_flash.c ****   * @param  Newstate: new state of the Write Protection.
1169:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be: ENABLE or DISABLE.
1170:FWLIB/src/stm32f4xx_flash.c ****   * @retval None  
1171:FWLIB/src/stm32f4xx_flash.c ****   */
1172:FWLIB/src/stm32f4xx_flash.c **** void FLASH_OB_PCROP1Config(uint32_t OB_PCROP, FunctionalState NewState)
1173:FWLIB/src/stm32f4xx_flash.c **** { 
1174:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1175:FWLIB/src/stm32f4xx_flash.c ****   
1176:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
1177:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_PCROP(OB_PCROP));
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 29


1178:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1179:FWLIB/src/stm32f4xx_flash.c ****     
1180:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1181:FWLIB/src/stm32f4xx_flash.c **** 
1182:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
1183:FWLIB/src/stm32f4xx_flash.c ****   { 
1184:FWLIB/src/stm32f4xx_flash.c ****     if(NewState != DISABLE)
1185:FWLIB/src/stm32f4xx_flash.c ****     {
1186:FWLIB/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS |= (uint16_t)OB_PCROP;
1187:FWLIB/src/stm32f4xx_flash.c ****     }
1188:FWLIB/src/stm32f4xx_flash.c ****     else
1189:FWLIB/src/stm32f4xx_flash.c ****     {
1190:FWLIB/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS &= (~OB_PCROP);
1191:FWLIB/src/stm32f4xx_flash.c ****     }
1192:FWLIB/src/stm32f4xx_flash.c ****   }
1193:FWLIB/src/stm32f4xx_flash.c **** }
1194:FWLIB/src/stm32f4xx_flash.c **** 
1195:FWLIB/src/stm32f4xx_flash.c **** 
1196:FWLIB/src/stm32f4xx_flash.c **** /**
1197:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Sets the read protection level.
1198:FWLIB/src/stm32f4xx_flash.c ****   * @param  OB_RDP: specifies the read protection level.
1199:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1200:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_0: No protection
1201:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_1: Read protection of the memory
1202:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_2: Full chip protection
1203:FWLIB/src/stm32f4xx_flash.c ****   *   
1204:FWLIB/src/stm32f4xx_flash.c ****   * /!\ Warning /!\ When enabling OB_RDP level 2 it's no more possible to go back to level 1 or 0
1205:FWLIB/src/stm32f4xx_flash.c ****   *    
1206:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
1207:FWLIB/src/stm32f4xx_flash.c ****   */
1208:FWLIB/src/stm32f4xx_flash.c **** void FLASH_OB_RDPConfig(uint8_t OB_RDP)
1209:FWLIB/src/stm32f4xx_flash.c **** {
1210:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1211:FWLIB/src/stm32f4xx_flash.c **** 
1212:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
1213:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_RDP(OB_RDP));
1214:FWLIB/src/stm32f4xx_flash.c **** 
1215:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1216:FWLIB/src/stm32f4xx_flash.c **** 
1217:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
1218:FWLIB/src/stm32f4xx_flash.c ****   {
1219:FWLIB/src/stm32f4xx_flash.c ****     *(__IO uint8_t*)OPTCR_BYTE1_ADDRESS = OB_RDP;
1220:FWLIB/src/stm32f4xx_flash.c **** 
1221:FWLIB/src/stm32f4xx_flash.c ****   }
1222:FWLIB/src/stm32f4xx_flash.c **** }
1223:FWLIB/src/stm32f4xx_flash.c **** 
1224:FWLIB/src/stm32f4xx_flash.c **** /**
1225:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Programs the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.    
1226:FWLIB/src/stm32f4xx_flash.c ****   * @param  OB_IWDG: Selects the IWDG mode
1227:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1228:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_IWDG_SW: Software IWDG selected
1229:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_IWDG_HW: Hardware IWDG selected
1230:FWLIB/src/stm32f4xx_flash.c ****   * @param  OB_STOP: Reset event when entering STOP mode.
1231:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter  can be one of the following values:
1232:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_STOP_NoRST: No reset generated when entering in STOP
1233:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_STOP_RST: Reset generated when entering in STOP
1234:FWLIB/src/stm32f4xx_flash.c ****   * @param  OB_STDBY: Reset event when entering Standby mode.
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 30


1235:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter  can be one of the following values:
1236:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_STDBY_NoRST: No reset generated when entering in STANDBY
1237:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_STDBY_RST: Reset generated when entering in STANDBY
1238:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
1239:FWLIB/src/stm32f4xx_flash.c ****   */
1240:FWLIB/src/stm32f4xx_flash.c **** void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)
1241:FWLIB/src/stm32f4xx_flash.c **** {
1242:FWLIB/src/stm32f4xx_flash.c ****   uint8_t optiontmp = 0xFF;
1243:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE; 
1244:FWLIB/src/stm32f4xx_flash.c **** 
1245:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
1246:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_IWDG_SOURCE(OB_IWDG));
1247:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_STOP_SOURCE(OB_STOP));
1248:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));
1249:FWLIB/src/stm32f4xx_flash.c **** 
1250:FWLIB/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
1251:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1252:FWLIB/src/stm32f4xx_flash.c ****   
1253:FWLIB/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
1254:FWLIB/src/stm32f4xx_flash.c ****   { 
1255:FWLIB/src/stm32f4xx_flash.c **** #if defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM32F469_479xx)
1256:FWLIB/src/stm32f4xx_flash.c ****     /* Mask OPTLOCK, OPTSTRT, BOR_LEV and BFB2 bits */
1257:FWLIB/src/stm32f4xx_flash.c ****     optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE0_ADDRESS) & (uint8_t)0x1F);
1258:FWLIB/src/stm32f4xx_flash.c **** #endif /* STM32F427_437xx ||  STM32F429_439xx ||  STM32F469_479xx */
1259:FWLIB/src/stm32f4xx_flash.c **** 
1260:FWLIB/src/stm32f4xx_flash.c **** #if defined(STM32F40_41xxx) || defined(STM32F401xx) || defined(STM32F410xx) || defined(STM32F411xE)
1261:FWLIB/src/stm32f4xx_flash.c ****     /* Mask OPTLOCK, OPTSTRT and BOR_LEV bits */
1262:FWLIB/src/stm32f4xx_flash.c ****     optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0F); 
1263:FWLIB/src/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F446xx */ 
1264:FWLIB/src/stm32f4xx_flash.c **** 
1265:FWLIB/src/stm32f4xx_flash.c ****     /* Update User Option Byte */
1266:FWLIB/src/stm32f4xx_flash.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS = OB_IWDG | (uint8_t)(OB_STDBY | (uint8_t)(OB_STOP | ((uin
1267:FWLIB/src/stm32f4xx_flash.c ****   }  
1268:FWLIB/src/stm32f4xx_flash.c **** }
1269:FWLIB/src/stm32f4xx_flash.c **** 
1270:FWLIB/src/stm32f4xx_flash.c **** /**
1271:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Configure the Dual Bank Boot.
1272:FWLIB/src/stm32f4xx_flash.c ****   *   
1273:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
1274:FWLIB/src/stm32f4xx_flash.c ****   *      
1275:FWLIB/src/stm32f4xx_flash.c ****   * @param  OB_BOOT: specifies the Dual Bank Boot Option byte.
1276:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1277:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_Dual_BootEnabled: Dual Bank Boot Enable
1278:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_Dual_BootDisabled: Dual Bank Boot Disabled
1279:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
1280:FWLIB/src/stm32f4xx_flash.c ****   */
1281:FWLIB/src/stm32f4xx_flash.c **** void FLASH_OB_BootConfig(uint8_t OB_BOOT)
1282:FWLIB/src/stm32f4xx_flash.c **** {
 439              		.loc 1 1282 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
1283:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
1284:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_BOOT(OB_BOOT));
 444              		.loc 1 1284 3 view .LVU79
1285:FWLIB/src/stm32f4xx_flash.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 31


1286:FWLIB/src/stm32f4xx_flash.c ****   /* Set Dual Bank Boot */
1287:FWLIB/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BFB2);
 445              		.loc 1 1287 3 view .LVU80
 446              		.loc 1 1287 40 is_stmt 0 view .LVU81
 447 0000 044B     		ldr	r3, .L44
 448 0002 197D     		ldrb	r1, [r3, #20]	@ zero_extendqisi2
 449 0004 01F0EF01 		and	r1, r1, #239
 450 0008 1975     		strb	r1, [r3, #20]
1288:FWLIB/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= OB_BOOT;
 451              		.loc 1 1288 3 is_stmt 1 view .LVU82
 452              		.loc 1 1288 40 is_stmt 0 view .LVU83
 453 000a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 454 000c 0243     		orrs	r2, r2, r0
 455 000e 1A75     		strb	r2, [r3, #20]
1289:FWLIB/src/stm32f4xx_flash.c **** 
1290:FWLIB/src/stm32f4xx_flash.c **** }
 456              		.loc 1 1290 1 view .LVU84
 457 0010 7047     		bx	lr
 458              	.L45:
 459 0012 00BF     		.align	2
 460              	.L44:
 461 0014 003C0240 		.word	1073888256
 462              		.cfi_endproc
 463              	.LFE148:
 465              		.section	.text.FLASH_OB_BORConfig,"ax",%progbits
 466              		.align	1
 467              		.global	FLASH_OB_BORConfig
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu fpv4-sp-d16
 473              	FLASH_OB_BORConfig:
 474              	.LVL9:
 475              	.LFB149:
1291:FWLIB/src/stm32f4xx_flash.c **** 
1292:FWLIB/src/stm32f4xx_flash.c **** /**
1293:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Sets the BOR Level. 
1294:FWLIB/src/stm32f4xx_flash.c ****   * @param  OB_BOR: specifies the Option Bytes BOR Reset Level.
1295:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1296:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
1297:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
1298:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
1299:FWLIB/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_OFF: Supply voltage ranges from 1.62 to 2.1 V
1300:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
1301:FWLIB/src/stm32f4xx_flash.c ****   */
1302:FWLIB/src/stm32f4xx_flash.c **** void FLASH_OB_BORConfig(uint8_t OB_BOR)
1303:FWLIB/src/stm32f4xx_flash.c **** {
 476              		.loc 1 1303 1 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              		@ link register save eliminated.
1304:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
1305:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_BOR(OB_BOR));
 481              		.loc 1 1305 3 view .LVU86
1306:FWLIB/src/stm32f4xx_flash.c **** 
1307:FWLIB/src/stm32f4xx_flash.c ****   /* Set the BOR Level */
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 32


1308:FWLIB/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BOR_LEV);
 482              		.loc 1 1308 3 view .LVU87
 483              		.loc 1 1308 40 is_stmt 0 view .LVU88
 484 0000 044B     		ldr	r3, .L47
 485 0002 197D     		ldrb	r1, [r3, #20]	@ zero_extendqisi2
 486 0004 01F0F301 		and	r1, r1, #243
 487 0008 1975     		strb	r1, [r3, #20]
1309:FWLIB/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= OB_BOR;
 488              		.loc 1 1309 3 is_stmt 1 view .LVU89
 489              		.loc 1 1309 40 is_stmt 0 view .LVU90
 490 000a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 491 000c 0243     		orrs	r2, r2, r0
 492 000e 1A75     		strb	r2, [r3, #20]
1310:FWLIB/src/stm32f4xx_flash.c **** 
1311:FWLIB/src/stm32f4xx_flash.c **** }
 493              		.loc 1 1311 1 view .LVU91
 494 0010 7047     		bx	lr
 495              	.L48:
 496 0012 00BF     		.align	2
 497              	.L47:
 498 0014 003C0240 		.word	1073888256
 499              		.cfi_endproc
 500              	.LFE149:
 502              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 503              		.align	1
 504              		.global	FLASH_OB_GetUser
 505              		.syntax unified
 506              		.thumb
 507              		.thumb_func
 508              		.fpu fpv4-sp-d16
 510              	FLASH_OB_GetUser:
 511              	.LFB151:
1312:FWLIB/src/stm32f4xx_flash.c **** 
1313:FWLIB/src/stm32f4xx_flash.c **** /**
1314:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Launch the option byte loading.
1315:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
1316:FWLIB/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
1317:FWLIB/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
1318:FWLIB/src/stm32f4xx_flash.c ****   */
1319:FWLIB/src/stm32f4xx_flash.c **** FLASH_Status FLASH_OB_Launch(void)
1320:FWLIB/src/stm32f4xx_flash.c **** {
1321:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1322:FWLIB/src/stm32f4xx_flash.c **** 
1323:FWLIB/src/stm32f4xx_flash.c ****   /* Set the OPTSTRT bit in OPTCR register */
1324:FWLIB/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= FLASH_OPTCR_OPTSTRT;
1325:FWLIB/src/stm32f4xx_flash.c **** 
1326:FWLIB/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
1327:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1328:FWLIB/src/stm32f4xx_flash.c **** 
1329:FWLIB/src/stm32f4xx_flash.c ****   return status;
1330:FWLIB/src/stm32f4xx_flash.c **** }
1331:FWLIB/src/stm32f4xx_flash.c **** 
1332:FWLIB/src/stm32f4xx_flash.c **** /**
1333:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH User Option Bytes values.
1334:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
1335:FWLIB/src/stm32f4xx_flash.c ****   * @retval The FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1)
1336:FWLIB/src/stm32f4xx_flash.c ****   *         and RST_STDBY(Bit2).
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 33


1337:FWLIB/src/stm32f4xx_flash.c ****   */
1338:FWLIB/src/stm32f4xx_flash.c **** uint8_t FLASH_OB_GetUser(void)
1339:FWLIB/src/stm32f4xx_flash.c **** {
 512              		.loc 1 1339 1 is_stmt 1 view -0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
1340:FWLIB/src/stm32f4xx_flash.c ****   /* Return the User Option Byte */
1341:FWLIB/src/stm32f4xx_flash.c ****   return (uint8_t)(FLASH->OPTCR >> 5);
 517              		.loc 1 1341 3 view .LVU93
 518              		.loc 1 1341 25 is_stmt 0 view .LVU94
 519 0000 024B     		ldr	r3, .L50
 520 0002 5869     		ldr	r0, [r3, #20]
1342:FWLIB/src/stm32f4xx_flash.c **** }
 521              		.loc 1 1342 1 view .LVU95
 522 0004 C0F34710 		ubfx	r0, r0, #5, #8
 523 0008 7047     		bx	lr
 524              	.L51:
 525 000a 00BF     		.align	2
 526              	.L50:
 527 000c 003C0240 		.word	1073888256
 528              		.cfi_endproc
 529              	.LFE151:
 531              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 532              		.align	1
 533              		.global	FLASH_OB_GetWRP
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu fpv4-sp-d16
 539              	FLASH_OB_GetWRP:
 540              	.LFB152:
1343:FWLIB/src/stm32f4xx_flash.c **** 
1344:FWLIB/src/stm32f4xx_flash.c **** /**
1345:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Write Protection Option Bytes value.
1346:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
1347:FWLIB/src/stm32f4xx_flash.c ****   * @retval The FLASH Write Protection  Option Bytes value
1348:FWLIB/src/stm32f4xx_flash.c ****   */
1349:FWLIB/src/stm32f4xx_flash.c **** uint16_t FLASH_OB_GetWRP(void)
1350:FWLIB/src/stm32f4xx_flash.c **** {
 541              		.loc 1 1350 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		@ link register save eliminated.
1351:FWLIB/src/stm32f4xx_flash.c ****   /* Return the FLASH write protection Register value */
1352:FWLIB/src/stm32f4xx_flash.c ****   return (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 546              		.loc 1 1352 3 view .LVU97
 547              		.loc 1 1352 11 is_stmt 0 view .LVU98
 548 0000 014B     		ldr	r3, .L53
 549 0002 D88A     		ldrh	r0, [r3, #22]
1353:FWLIB/src/stm32f4xx_flash.c **** }
 550              		.loc 1 1353 1 view .LVU99
 551 0004 80B2     		uxth	r0, r0
 552 0006 7047     		bx	lr
 553              	.L54:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 34


 554              		.align	2
 555              	.L53:
 556 0008 003C0240 		.word	1073888256
 557              		.cfi_endproc
 558              	.LFE152:
 560              		.section	.text.FLASH_OB_GetWRP1,"ax",%progbits
 561              		.align	1
 562              		.global	FLASH_OB_GetWRP1
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 566              		.fpu fpv4-sp-d16
 568              	FLASH_OB_GetWRP1:
 569              	.LFB153:
1354:FWLIB/src/stm32f4xx_flash.c **** 
1355:FWLIB/src/stm32f4xx_flash.c **** /**
1356:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Write Protection Option Bytes value.
1357:FWLIB/src/stm32f4xx_flash.c ****   *   
1358:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
1359:FWLIB/src/stm32f4xx_flash.c ****   *   
1360:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
1361:FWLIB/src/stm32f4xx_flash.c ****   * @retval The FLASH Write Protection  Option Bytes value
1362:FWLIB/src/stm32f4xx_flash.c ****   */
1363:FWLIB/src/stm32f4xx_flash.c **** uint16_t FLASH_OB_GetWRP1(void)
1364:FWLIB/src/stm32f4xx_flash.c **** {
 570              		.loc 1 1364 1 is_stmt 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		@ link register save eliminated.
1365:FWLIB/src/stm32f4xx_flash.c ****   /* Return the FLASH write protection Register value */
1366:FWLIB/src/stm32f4xx_flash.c ****   return (*(__IO uint16_t *)(OPTCR1_BYTE2_ADDRESS));
 575              		.loc 1 1366 3 view .LVU101
 576              		.loc 1 1366 11 is_stmt 0 view .LVU102
 577 0000 014B     		ldr	r3, .L56
 578 0002 588B     		ldrh	r0, [r3, #26]
1367:FWLIB/src/stm32f4xx_flash.c **** }
 579              		.loc 1 1367 1 view .LVU103
 580 0004 80B2     		uxth	r0, r0
 581 0006 7047     		bx	lr
 582              	.L57:
 583              		.align	2
 584              	.L56:
 585 0008 003C0240 		.word	1073888256
 586              		.cfi_endproc
 587              	.LFE153:
 589              		.section	.text.FLASH_OB_GetPCROP,"ax",%progbits
 590              		.align	1
 591              		.global	FLASH_OB_GetPCROP
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu fpv4-sp-d16
 597              	FLASH_OB_GetPCROP:
 598              	.LFB154:
1368:FWLIB/src/stm32f4xx_flash.c **** 
1369:FWLIB/src/stm32f4xx_flash.c **** /**
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 35


1370:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH PC Read/Write Protection Option Bytes value.
1371:FWLIB/src/stm32f4xx_flash.c ****   *   
1372:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices and STM32F401xx/411xE devi
1373:FWLIB/src/stm32f4xx_flash.c ****   *   
1374:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
1375:FWLIB/src/stm32f4xx_flash.c ****   * @retval The FLASH PC Read/Write Protection Option Bytes value
1376:FWLIB/src/stm32f4xx_flash.c ****   */
1377:FWLIB/src/stm32f4xx_flash.c **** uint16_t FLASH_OB_GetPCROP(void)
1378:FWLIB/src/stm32f4xx_flash.c **** {
 599              		.loc 1 1378 1 is_stmt 1 view -0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              		@ link register save eliminated.
1379:FWLIB/src/stm32f4xx_flash.c ****   /* Return the FLASH PC Read/write protection Register value */
1380:FWLIB/src/stm32f4xx_flash.c ****   return (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 604              		.loc 1 1380 3 view .LVU105
 605              		.loc 1 1380 11 is_stmt 0 view .LVU106
 606 0000 014B     		ldr	r3, .L59
 607 0002 D88A     		ldrh	r0, [r3, #22]
1381:FWLIB/src/stm32f4xx_flash.c **** }
 608              		.loc 1 1381 1 view .LVU107
 609 0004 80B2     		uxth	r0, r0
 610 0006 7047     		bx	lr
 611              	.L60:
 612              		.align	2
 613              	.L59:
 614 0008 003C0240 		.word	1073888256
 615              		.cfi_endproc
 616              	.LFE154:
 618              		.section	.text.FLASH_OB_GetPCROP1,"ax",%progbits
 619              		.align	1
 620              		.global	FLASH_OB_GetPCROP1
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 624              		.fpu fpv4-sp-d16
 626              	FLASH_OB_GetPCROP1:
 627              	.LFB155:
1382:FWLIB/src/stm32f4xx_flash.c **** 
1383:FWLIB/src/stm32f4xx_flash.c **** /**
1384:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH PC Read/Write Protection Option Bytes value.
1385:FWLIB/src/stm32f4xx_flash.c ****   *   
1386:FWLIB/src/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices. 
1387:FWLIB/src/stm32f4xx_flash.c ****   *     
1388:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
1389:FWLIB/src/stm32f4xx_flash.c ****   * @retval The FLASH PC Read/Write Protection Option Bytes value
1390:FWLIB/src/stm32f4xx_flash.c ****   */
1391:FWLIB/src/stm32f4xx_flash.c **** uint16_t FLASH_OB_GetPCROP1(void)
1392:FWLIB/src/stm32f4xx_flash.c **** {
 628              		.loc 1 1392 1 is_stmt 1 view -0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
1393:FWLIB/src/stm32f4xx_flash.c ****   /* Return the FLASH write protection Register value */
1394:FWLIB/src/stm32f4xx_flash.c ****   return (*(__IO uint16_t *)(OPTCR1_BYTE2_ADDRESS));
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 36


 633              		.loc 1 1394 3 view .LVU109
 634              		.loc 1 1394 11 is_stmt 0 view .LVU110
 635 0000 014B     		ldr	r3, .L62
 636 0002 588B     		ldrh	r0, [r3, #26]
1395:FWLIB/src/stm32f4xx_flash.c **** }
 637              		.loc 1 1395 1 view .LVU111
 638 0004 80B2     		uxth	r0, r0
 639 0006 7047     		bx	lr
 640              	.L63:
 641              		.align	2
 642              	.L62:
 643 0008 003C0240 		.word	1073888256
 644              		.cfi_endproc
 645              	.LFE155:
 647              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 648              		.align	1
 649              		.global	FLASH_OB_GetRDP
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 653              		.fpu fpv4-sp-d16
 655              	FLASH_OB_GetRDP:
 656              	.LFB156:
1396:FWLIB/src/stm32f4xx_flash.c **** 
1397:FWLIB/src/stm32f4xx_flash.c **** /**
1398:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Read Protection level.
1399:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
1400:FWLIB/src/stm32f4xx_flash.c ****   * @retval FLASH ReadOut Protection Status:
1401:FWLIB/src/stm32f4xx_flash.c ****   *           - SET, when OB_RDP_Level_1 or OB_RDP_Level_2 is set
1402:FWLIB/src/stm32f4xx_flash.c ****   *           - RESET, when OB_RDP_Level_0 is set
1403:FWLIB/src/stm32f4xx_flash.c ****   */
1404:FWLIB/src/stm32f4xx_flash.c **** FlagStatus FLASH_OB_GetRDP(void)
1405:FWLIB/src/stm32f4xx_flash.c **** {
 657              		.loc 1 1405 1 is_stmt 1 view -0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              		@ link register save eliminated.
1406:FWLIB/src/stm32f4xx_flash.c ****   FlagStatus readstatus = RESET;
 662              		.loc 1 1406 3 view .LVU113
 663              	.LVL10:
1407:FWLIB/src/stm32f4xx_flash.c **** 
1408:FWLIB/src/stm32f4xx_flash.c ****   if ((*(__IO uint8_t*)(OPTCR_BYTE1_ADDRESS) != (uint8_t)OB_RDP_Level_0))
 664              		.loc 1 1408 3 view .LVU114
 665              		.loc 1 1408 8 is_stmt 0 view .LVU115
 666 0000 044B     		ldr	r3, .L67
 667 0002 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 668 0004 DBB2     		uxtb	r3, r3
 669              		.loc 1 1408 6 view .LVU116
 670 0006 AA2B     		cmp	r3, #170
 671 0008 01D0     		beq	.L66
1409:FWLIB/src/stm32f4xx_flash.c ****   {
1410:FWLIB/src/stm32f4xx_flash.c ****     readstatus = SET;
 672              		.loc 1 1410 16 view .LVU117
 673 000a 0120     		movs	r0, #1
 674 000c 7047     		bx	lr
 675              	.L66:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 37


1411:FWLIB/src/stm32f4xx_flash.c ****   }
1412:FWLIB/src/stm32f4xx_flash.c ****   else
1413:FWLIB/src/stm32f4xx_flash.c ****   {
1414:FWLIB/src/stm32f4xx_flash.c ****     readstatus = RESET;
 676              		.loc 1 1414 16 view .LVU118
 677 000e 0020     		movs	r0, #0
 678              	.LVL11:
1415:FWLIB/src/stm32f4xx_flash.c ****   }
1416:FWLIB/src/stm32f4xx_flash.c ****   return readstatus;
 679              		.loc 1 1416 3 is_stmt 1 view .LVU119
1417:FWLIB/src/stm32f4xx_flash.c **** }
 680              		.loc 1 1417 1 is_stmt 0 view .LVU120
 681 0010 7047     		bx	lr
 682              	.L68:
 683 0012 00BF     		.align	2
 684              	.L67:
 685 0014 003C0240 		.word	1073888256
 686              		.cfi_endproc
 687              	.LFE156:
 689              		.section	.text.FLASH_OB_GetBOR,"ax",%progbits
 690              		.align	1
 691              		.global	FLASH_OB_GetBOR
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	FLASH_OB_GetBOR:
 698              	.LFB157:
1418:FWLIB/src/stm32f4xx_flash.c **** 
1419:FWLIB/src/stm32f4xx_flash.c **** /**
1420:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH BOR level.
1421:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
1422:FWLIB/src/stm32f4xx_flash.c ****   * @retval The FLASH BOR level:
1423:FWLIB/src/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
1424:FWLIB/src/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
1425:FWLIB/src/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
1426:FWLIB/src/stm32f4xx_flash.c ****   *           - OB_BOR_OFF   : Supply voltage ranges from 1.62 to 2.1 V  
1427:FWLIB/src/stm32f4xx_flash.c ****   */
1428:FWLIB/src/stm32f4xx_flash.c **** uint8_t FLASH_OB_GetBOR(void)
1429:FWLIB/src/stm32f4xx_flash.c **** {
 699              		.loc 1 1429 1 is_stmt 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		@ link register save eliminated.
1430:FWLIB/src/stm32f4xx_flash.c ****   /* Return the FLASH BOR level */
1431:FWLIB/src/stm32f4xx_flash.c ****   return (uint8_t)(*(__IO uint8_t *)(OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0C);
 704              		.loc 1 1431 3 view .LVU122
 705              		.loc 1 1431 10 is_stmt 0 view .LVU123
 706 0000 024B     		ldr	r3, .L70
 707 0002 187D     		ldrb	r0, [r3, #20]	@ zero_extendqisi2
1432:FWLIB/src/stm32f4xx_flash.c **** }
 708              		.loc 1 1432 1 view .LVU124
 709 0004 00F00C00 		and	r0, r0, #12
 710 0008 7047     		bx	lr
 711              	.L71:
 712 000a 00BF     		.align	2
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 38


 713              	.L70:
 714 000c 003C0240 		.word	1073888256
 715              		.cfi_endproc
 716              	.LFE157:
 718              		.section	.text.FLASH_ITConfig,"ax",%progbits
 719              		.align	1
 720              		.global	FLASH_ITConfig
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu fpv4-sp-d16
 726              	FLASH_ITConfig:
 727              	.LVL12:
 728              	.LFB158:
1433:FWLIB/src/stm32f4xx_flash.c **** 
1434:FWLIB/src/stm32f4xx_flash.c **** /**
1435:FWLIB/src/stm32f4xx_flash.c ****   * @}
1436:FWLIB/src/stm32f4xx_flash.c ****   */
1437:FWLIB/src/stm32f4xx_flash.c **** 
1438:FWLIB/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group4 Interrupts and flags management functions
1439:FWLIB/src/stm32f4xx_flash.c ****  *  @brief   Interrupts and flags management functions
1440:FWLIB/src/stm32f4xx_flash.c ****  *
1441:FWLIB/src/stm32f4xx_flash.c **** @verbatim   
1442:FWLIB/src/stm32f4xx_flash.c ****  ===============================================================================
1443:FWLIB/src/stm32f4xx_flash.c ****               ##### Interrupts and flags management functions #####
1444:FWLIB/src/stm32f4xx_flash.c ****  ===============================================================================  
1445:FWLIB/src/stm32f4xx_flash.c **** @endverbatim
1446:FWLIB/src/stm32f4xx_flash.c ****   * @{
1447:FWLIB/src/stm32f4xx_flash.c ****   */
1448:FWLIB/src/stm32f4xx_flash.c **** 
1449:FWLIB/src/stm32f4xx_flash.c **** /**
1450:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the specified FLASH interrupts.
1451:FWLIB/src/stm32f4xx_flash.c ****   * @param  FLASH_IT: specifies the FLASH interrupt sources to be enabled or disabled.
1452:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be any combination of the following values:
1453:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_IT_ERR: FLASH Error Interrupt
1454:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_IT_EOP: FLASH end of operation Interrupt
1455:FWLIB/src/stm32f4xx_flash.c ****   * @retval None 
1456:FWLIB/src/stm32f4xx_flash.c ****   */
1457:FWLIB/src/stm32f4xx_flash.c **** void FLASH_ITConfig(uint32_t FLASH_IT, FunctionalState NewState)
1458:FWLIB/src/stm32f4xx_flash.c **** {
 729              		.loc 1 1458 1 is_stmt 1 view -0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 733              		@ link register save eliminated.
1459:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
1460:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_IT(FLASH_IT)); 
 734              		.loc 1 1460 3 view .LVU126
1461:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 735              		.loc 1 1461 3 view .LVU127
1462:FWLIB/src/stm32f4xx_flash.c **** 
1463:FWLIB/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 736              		.loc 1 1463 3 view .LVU128
 737              		.loc 1 1463 5 is_stmt 0 view .LVU129
 738 0000 21B1     		cbz	r1, .L73
1464:FWLIB/src/stm32f4xx_flash.c ****   {
1465:FWLIB/src/stm32f4xx_flash.c ****     /* Enable the interrupt sources */
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 39


1466:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_IT;
 739              		.loc 1 1466 5 is_stmt 1 view .LVU130
 740              		.loc 1 1466 15 is_stmt 0 view .LVU131
 741 0002 054A     		ldr	r2, .L75
 742 0004 1369     		ldr	r3, [r2, #16]
 743 0006 1843     		orrs	r0, r0, r3
 744              	.LVL13:
 745              		.loc 1 1466 15 view .LVU132
 746 0008 1061     		str	r0, [r2, #16]
 747 000a 7047     		bx	lr
 748              	.LVL14:
 749              	.L73:
1467:FWLIB/src/stm32f4xx_flash.c ****   }
1468:FWLIB/src/stm32f4xx_flash.c ****   else
1469:FWLIB/src/stm32f4xx_flash.c ****   {
1470:FWLIB/src/stm32f4xx_flash.c ****     /* Disable the interrupt sources */
1471:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= ~(uint32_t)FLASH_IT;
 750              		.loc 1 1471 5 is_stmt 1 view .LVU133
 751              		.loc 1 1471 15 is_stmt 0 view .LVU134
 752 000c 024A     		ldr	r2, .L75
 753 000e 1369     		ldr	r3, [r2, #16]
 754 0010 23EA0000 		bic	r0, r3, r0
 755              	.LVL15:
 756              		.loc 1 1471 15 view .LVU135
 757 0014 1061     		str	r0, [r2, #16]
1472:FWLIB/src/stm32f4xx_flash.c ****   }
1473:FWLIB/src/stm32f4xx_flash.c **** }
 758              		.loc 1 1473 1 view .LVU136
 759 0016 7047     		bx	lr
 760              	.L76:
 761              		.align	2
 762              	.L75:
 763 0018 003C0240 		.word	1073888256
 764              		.cfi_endproc
 765              	.LFE158:
 767              		.section	.text.FLASH_GetFlagStatus,"ax",%progbits
 768              		.align	1
 769              		.global	FLASH_GetFlagStatus
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	FLASH_GetFlagStatus:
 776              	.LVL16:
 777              	.LFB159:
1474:FWLIB/src/stm32f4xx_flash.c **** 
1475:FWLIB/src/stm32f4xx_flash.c **** /**
1476:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Checks whether the specified FLASH flag is set or not.
1477:FWLIB/src/stm32f4xx_flash.c ****   * @param  FLASH_FLAG: specifies the FLASH flag to check.
1478:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1479:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_EOP: FLASH End of Operation flag 
1480:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_OPERR: FLASH operation Error flag 
1481:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_WRPERR: FLASH Write protected error flag 
1482:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGAERR: FLASH Programming Alignment error flag
1483:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGPERR: FLASH Programming Parallelism error flag
1484:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGSERR: FLASH Programming Sequence error flag
1485:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_RDERR: FLASH (PCROP) Read Protection error flag (STM32F42xx/43xxx an
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 40


1486:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_BSY: FLASH Busy flag
1487:FWLIB/src/stm32f4xx_flash.c ****   * @retval The new state of FLASH_FLAG (SET or RESET).
1488:FWLIB/src/stm32f4xx_flash.c ****   */
1489:FWLIB/src/stm32f4xx_flash.c **** FlagStatus FLASH_GetFlagStatus(uint32_t FLASH_FLAG)
1490:FWLIB/src/stm32f4xx_flash.c **** {
 778              		.loc 1 1490 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		@ link register save eliminated.
1491:FWLIB/src/stm32f4xx_flash.c ****   FlagStatus bitstatus = RESET;
 783              		.loc 1 1491 3 view .LVU138
1492:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
1493:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_GET_FLAG(FLASH_FLAG));
 784              		.loc 1 1493 3 view .LVU139
1494:FWLIB/src/stm32f4xx_flash.c **** 
1495:FWLIB/src/stm32f4xx_flash.c ****   if((FLASH->SR & FLASH_FLAG) != (uint32_t)RESET)
 785              		.loc 1 1495 3 view .LVU140
 786              		.loc 1 1495 12 is_stmt 0 view .LVU141
 787 0000 034B     		ldr	r3, .L80
 788 0002 DB68     		ldr	r3, [r3, #12]
 789              		.loc 1 1495 5 view .LVU142
 790 0004 0342     		tst	r3, r0
 791 0006 01D0     		beq	.L79
1496:FWLIB/src/stm32f4xx_flash.c ****   {
1497:FWLIB/src/stm32f4xx_flash.c ****     bitstatus = SET;
 792              		.loc 1 1497 15 view .LVU143
 793 0008 0120     		movs	r0, #1
 794              	.LVL17:
 795              		.loc 1 1497 15 view .LVU144
 796 000a 7047     		bx	lr
 797              	.LVL18:
 798              	.L79:
1498:FWLIB/src/stm32f4xx_flash.c ****   }
1499:FWLIB/src/stm32f4xx_flash.c ****   else
1500:FWLIB/src/stm32f4xx_flash.c ****   {
1501:FWLIB/src/stm32f4xx_flash.c ****     bitstatus = RESET;
 799              		.loc 1 1501 15 view .LVU145
 800 000c 0020     		movs	r0, #0
 801              	.LVL19:
1502:FWLIB/src/stm32f4xx_flash.c ****   }
1503:FWLIB/src/stm32f4xx_flash.c ****   /* Return the new state of FLASH_FLAG (SET or RESET) */
1504:FWLIB/src/stm32f4xx_flash.c ****   return bitstatus; 
 802              		.loc 1 1504 3 is_stmt 1 view .LVU146
1505:FWLIB/src/stm32f4xx_flash.c **** }
 803              		.loc 1 1505 1 is_stmt 0 view .LVU147
 804 000e 7047     		bx	lr
 805              	.L81:
 806              		.align	2
 807              	.L80:
 808 0010 003C0240 		.word	1073888256
 809              		.cfi_endproc
 810              	.LFE159:
 812              		.section	.text.FLASH_ClearFlag,"ax",%progbits
 813              		.align	1
 814              		.global	FLASH_ClearFlag
 815              		.syntax unified
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 41


 816              		.thumb
 817              		.thumb_func
 818              		.fpu fpv4-sp-d16
 820              	FLASH_ClearFlag:
 821              	.LVL20:
 822              	.LFB160:
1506:FWLIB/src/stm32f4xx_flash.c **** 
1507:FWLIB/src/stm32f4xx_flash.c **** /**
1508:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Clears the FLASH's pending flags.
1509:FWLIB/src/stm32f4xx_flash.c ****   * @param  FLASH_FLAG: specifies the FLASH flags to clear.
1510:FWLIB/src/stm32f4xx_flash.c ****   *          This parameter can be any combination of the following values:
1511:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_EOP: FLASH End of Operation flag 
1512:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_OPERR: FLASH operation Error flag 
1513:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_WRPERR: FLASH Write protected error flag 
1514:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGAERR: FLASH Programming Alignment error flag 
1515:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGPERR: FLASH Programming Parallelism error flag
1516:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGSERR: FLASH Programming Sequence error flag
1517:FWLIB/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_RDERR: FLASH Read Protection error flag (STM32F42xx/43xxx and STM32F
1518:FWLIB/src/stm32f4xx_flash.c ****   * @retval None
1519:FWLIB/src/stm32f4xx_flash.c ****   */
1520:FWLIB/src/stm32f4xx_flash.c **** void FLASH_ClearFlag(uint32_t FLASH_FLAG)
1521:FWLIB/src/stm32f4xx_flash.c **** {
 823              		.loc 1 1521 1 is_stmt 1 view -0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
1522:FWLIB/src/stm32f4xx_flash.c ****   /* Check the parameters */
1523:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_CLEAR_FLAG(FLASH_FLAG));
 828              		.loc 1 1523 3 view .LVU149
1524:FWLIB/src/stm32f4xx_flash.c ****   
1525:FWLIB/src/stm32f4xx_flash.c ****   /* Clear the flags */
1526:FWLIB/src/stm32f4xx_flash.c ****   FLASH->SR = FLASH_FLAG;
 829              		.loc 1 1526 3 view .LVU150
 830              		.loc 1 1526 13 is_stmt 0 view .LVU151
 831 0000 014B     		ldr	r3, .L83
 832 0002 D860     		str	r0, [r3, #12]
1527:FWLIB/src/stm32f4xx_flash.c **** }
 833              		.loc 1 1527 1 view .LVU152
 834 0004 7047     		bx	lr
 835              	.L84:
 836 0006 00BF     		.align	2
 837              	.L83:
 838 0008 003C0240 		.word	1073888256
 839              		.cfi_endproc
 840              	.LFE160:
 842              		.section	.text.FLASH_GetStatus,"ax",%progbits
 843              		.align	1
 844              		.global	FLASH_GetStatus
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 848              		.fpu fpv4-sp-d16
 850              	FLASH_GetStatus:
 851              	.LFB161:
1528:FWLIB/src/stm32f4xx_flash.c **** 
1529:FWLIB/src/stm32f4xx_flash.c **** /**
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 42


1530:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Status.
1531:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
1532:FWLIB/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
1533:FWLIB/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_RD, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
1534:FWLIB/src/stm32f4xx_flash.c ****   */
1535:FWLIB/src/stm32f4xx_flash.c **** FLASH_Status FLASH_GetStatus(void)
1536:FWLIB/src/stm32f4xx_flash.c **** {
 852              		.loc 1 1536 1 is_stmt 1 view -0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		@ link register save eliminated.
1537:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status flashstatus = FLASH_COMPLETE;
 857              		.loc 1 1537 3 view .LVU154
 858              	.LVL21:
1538:FWLIB/src/stm32f4xx_flash.c ****   
1539:FWLIB/src/stm32f4xx_flash.c ****   if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
 859              		.loc 1 1539 3 view .LVU155
 860              		.loc 1 1539 12 is_stmt 0 view .LVU156
 861 0000 124B     		ldr	r3, .L92
 862 0002 DB68     		ldr	r3, [r3, #12]
 863              		.loc 1 1539 5 view .LVU157
 864 0004 13F4803F 		tst	r3, #65536
 865 0008 15D1     		bne	.L87
1540:FWLIB/src/stm32f4xx_flash.c ****   {
1541:FWLIB/src/stm32f4xx_flash.c ****     flashstatus = FLASH_BUSY;
1542:FWLIB/src/stm32f4xx_flash.c ****   }
1543:FWLIB/src/stm32f4xx_flash.c ****   else 
1544:FWLIB/src/stm32f4xx_flash.c ****   {  
1545:FWLIB/src/stm32f4xx_flash.c ****     if((FLASH->SR & FLASH_FLAG_WRPERR) != (uint32_t)0x00)
 866              		.loc 1 1545 5 is_stmt 1 view .LVU158
 867              		.loc 1 1545 14 is_stmt 0 view .LVU159
 868 000a 104B     		ldr	r3, .L92
 869 000c DB68     		ldr	r3, [r3, #12]
 870              		.loc 1 1545 7 view .LVU160
 871 000e 13F0100F 		tst	r3, #16
 872 0012 12D1     		bne	.L88
1546:FWLIB/src/stm32f4xx_flash.c ****     { 
1547:FWLIB/src/stm32f4xx_flash.c ****       flashstatus = FLASH_ERROR_WRP;
1548:FWLIB/src/stm32f4xx_flash.c ****     }
1549:FWLIB/src/stm32f4xx_flash.c ****     else
1550:FWLIB/src/stm32f4xx_flash.c ****     {
1551:FWLIB/src/stm32f4xx_flash.c ****       if((FLASH->SR & FLASH_FLAG_RDERR) != (uint32_t)0x00)
 873              		.loc 1 1551 7 is_stmt 1 view .LVU161
 874              		.loc 1 1551 16 is_stmt 0 view .LVU162
 875 0014 0D4B     		ldr	r3, .L92
 876 0016 DB68     		ldr	r3, [r3, #12]
 877              		.loc 1 1551 9 view .LVU163
 878 0018 13F4807F 		tst	r3, #256
 879 001c 0FD1     		bne	.L89
1552:FWLIB/src/stm32f4xx_flash.c ****       { 
1553:FWLIB/src/stm32f4xx_flash.c ****         flashstatus = FLASH_ERROR_RD;
1554:FWLIB/src/stm32f4xx_flash.c ****       } 
1555:FWLIB/src/stm32f4xx_flash.c ****       else 
1556:FWLIB/src/stm32f4xx_flash.c ****       {
1557:FWLIB/src/stm32f4xx_flash.c ****         if((FLASH->SR & (uint32_t)0xE0) != (uint32_t)0x00)
 880              		.loc 1 1557 9 is_stmt 1 view .LVU164
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 43


 881              		.loc 1 1557 18 is_stmt 0 view .LVU165
 882 001e 0B4B     		ldr	r3, .L92
 883 0020 DB68     		ldr	r3, [r3, #12]
 884              		.loc 1 1557 11 view .LVU166
 885 0022 13F0E00F 		tst	r3, #224
 886 0026 0CD1     		bne	.L90
1558:FWLIB/src/stm32f4xx_flash.c ****         {
1559:FWLIB/src/stm32f4xx_flash.c ****           flashstatus = FLASH_ERROR_PROGRAM; 
1560:FWLIB/src/stm32f4xx_flash.c ****         }
1561:FWLIB/src/stm32f4xx_flash.c ****         else
1562:FWLIB/src/stm32f4xx_flash.c ****         {
1563:FWLIB/src/stm32f4xx_flash.c ****           if((FLASH->SR & FLASH_FLAG_OPERR) != (uint32_t)0x00)
 887              		.loc 1 1563 11 is_stmt 1 view .LVU167
 888              		.loc 1 1563 20 is_stmt 0 view .LVU168
 889 0028 084B     		ldr	r3, .L92
 890 002a DB68     		ldr	r3, [r3, #12]
 891              		.loc 1 1563 13 view .LVU169
 892 002c 13F0020F 		tst	r3, #2
 893 0030 09D0     		beq	.L91
1564:FWLIB/src/stm32f4xx_flash.c ****           {
1565:FWLIB/src/stm32f4xx_flash.c ****             flashstatus = FLASH_ERROR_OPERATION;
 894              		.loc 1 1565 25 view .LVU170
 895 0032 0820     		movs	r0, #8
 896 0034 7047     		bx	lr
 897              	.L87:
1541:FWLIB/src/stm32f4xx_flash.c ****   }
 898              		.loc 1 1541 17 view .LVU171
 899 0036 0120     		movs	r0, #1
 900 0038 7047     		bx	lr
 901              	.L88:
1547:FWLIB/src/stm32f4xx_flash.c ****     }
 902              		.loc 1 1547 19 view .LVU172
 903 003a 0620     		movs	r0, #6
 904 003c 7047     		bx	lr
 905              	.L89:
1553:FWLIB/src/stm32f4xx_flash.c ****       } 
 906              		.loc 1 1553 21 view .LVU173
 907 003e 0220     		movs	r0, #2
 908 0040 7047     		bx	lr
 909              	.L90:
1559:FWLIB/src/stm32f4xx_flash.c ****         }
 910              		.loc 1 1559 23 view .LVU174
 911 0042 0720     		movs	r0, #7
 912 0044 7047     		bx	lr
 913              	.L91:
1566:FWLIB/src/stm32f4xx_flash.c ****           }
1567:FWLIB/src/stm32f4xx_flash.c ****           else
1568:FWLIB/src/stm32f4xx_flash.c ****           {
1569:FWLIB/src/stm32f4xx_flash.c ****             flashstatus = FLASH_COMPLETE;
 914              		.loc 1 1569 25 view .LVU175
 915 0046 0920     		movs	r0, #9
 916              	.LVL22:
1570:FWLIB/src/stm32f4xx_flash.c ****           }
1571:FWLIB/src/stm32f4xx_flash.c ****         }
1572:FWLIB/src/stm32f4xx_flash.c ****       }
1573:FWLIB/src/stm32f4xx_flash.c ****     }
1574:FWLIB/src/stm32f4xx_flash.c ****   }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 44


1575:FWLIB/src/stm32f4xx_flash.c ****   /* Return the FLASH Status */
1576:FWLIB/src/stm32f4xx_flash.c ****   return flashstatus;
 917              		.loc 1 1576 3 is_stmt 1 view .LVU176
1577:FWLIB/src/stm32f4xx_flash.c **** }
 918              		.loc 1 1577 1 is_stmt 0 view .LVU177
 919 0048 7047     		bx	lr
 920              	.L93:
 921 004a 00BF     		.align	2
 922              	.L92:
 923 004c 003C0240 		.word	1073888256
 924              		.cfi_endproc
 925              	.LFE161:
 927              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 928              		.align	1
 929              		.global	FLASH_WaitForLastOperation
 930              		.syntax unified
 931              		.thumb
 932              		.thumb_func
 933              		.fpu fpv4-sp-d16
 935              	FLASH_WaitForLastOperation:
 936              	.LFB162:
1578:FWLIB/src/stm32f4xx_flash.c **** 
1579:FWLIB/src/stm32f4xx_flash.c **** /**
1580:FWLIB/src/stm32f4xx_flash.c ****   * @brief  Waits for a FLASH operation to complete.
1581:FWLIB/src/stm32f4xx_flash.c ****   * @param  None
1582:FWLIB/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
1583:FWLIB/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
1584:FWLIB/src/stm32f4xx_flash.c ****   */
1585:FWLIB/src/stm32f4xx_flash.c **** FLASH_Status FLASH_WaitForLastOperation(void)
1586:FWLIB/src/stm32f4xx_flash.c **** { 
 937              		.loc 1 1586 1 is_stmt 1 view -0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 8
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941 0000 00B5     		push	{lr}
 942              	.LCFI0:
 943              		.cfi_def_cfa_offset 4
 944              		.cfi_offset 14, -4
 945 0002 83B0     		sub	sp, sp, #12
 946              	.LCFI1:
 947              		.cfi_def_cfa_offset 16
1587:FWLIB/src/stm32f4xx_flash.c ****   __IO FLASH_Status status = FLASH_COMPLETE;
 948              		.loc 1 1587 3 view .LVU179
 949              		.loc 1 1587 21 is_stmt 0 view .LVU180
 950 0004 0923     		movs	r3, #9
 951 0006 8DF80730 		strb	r3, [sp, #7]
1588:FWLIB/src/stm32f4xx_flash.c ****    
1589:FWLIB/src/stm32f4xx_flash.c ****   /* Check for the FLASH Status */
1590:FWLIB/src/stm32f4xx_flash.c ****   status = FLASH_GetStatus();
 952              		.loc 1 1590 3 is_stmt 1 view .LVU181
 953              		.loc 1 1590 12 is_stmt 0 view .LVU182
 954 000a FFF7FEFF 		bl	FLASH_GetStatus
 955              	.LVL23:
 956              		.loc 1 1590 10 view .LVU183
 957 000e 8DF80700 		strb	r0, [sp, #7]
1591:FWLIB/src/stm32f4xx_flash.c **** 
1592:FWLIB/src/stm32f4xx_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 45


1593:FWLIB/src/stm32f4xx_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
1594:FWLIB/src/stm32f4xx_flash.c ****      flag will be set */
1595:FWLIB/src/stm32f4xx_flash.c ****   while(status == FLASH_BUSY)
 958              		.loc 1 1595 3 is_stmt 1 view .LVU184
 959              		.loc 1 1595 8 is_stmt 0 view .LVU185
 960 0012 03E0     		b	.L95
 961              	.L96:
1596:FWLIB/src/stm32f4xx_flash.c ****   {
1597:FWLIB/src/stm32f4xx_flash.c ****     status = FLASH_GetStatus();
 962              		.loc 1 1597 5 is_stmt 1 view .LVU186
 963              		.loc 1 1597 14 is_stmt 0 view .LVU187
 964 0014 FFF7FEFF 		bl	FLASH_GetStatus
 965              	.LVL24:
 966              		.loc 1 1597 12 view .LVU188
 967 0018 8DF80700 		strb	r0, [sp, #7]
 968              	.L95:
1595:FWLIB/src/stm32f4xx_flash.c ****   {
 969              		.loc 1 1595 8 is_stmt 1 view .LVU189
1595:FWLIB/src/stm32f4xx_flash.c ****   {
 970              		.loc 1 1595 16 is_stmt 0 view .LVU190
 971 001c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 972 0020 DBB2     		uxtb	r3, r3
1595:FWLIB/src/stm32f4xx_flash.c ****   {
 973              		.loc 1 1595 8 view .LVU191
 974 0022 012B     		cmp	r3, #1
 975 0024 F6D0     		beq	.L96
1598:FWLIB/src/stm32f4xx_flash.c ****   }
1599:FWLIB/src/stm32f4xx_flash.c ****   /* Return the operation status */
1600:FWLIB/src/stm32f4xx_flash.c ****   return status;
 976              		.loc 1 1600 3 is_stmt 1 view .LVU192
 977              		.loc 1 1600 10 is_stmt 0 view .LVU193
 978 0026 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
1601:FWLIB/src/stm32f4xx_flash.c **** }
 979              		.loc 1 1601 1 view .LVU194
 980 002a 03B0     		add	sp, sp, #12
 981              	.LCFI2:
 982              		.cfi_def_cfa_offset 4
 983              		@ sp needed
 984 002c 5DF804FB 		ldr	pc, [sp], #4
 985              		.cfi_endproc
 986              	.LFE162:
 988              		.section	.text.FLASH_EraseSector,"ax",%progbits
 989              		.align	1
 990              		.global	FLASH_EraseSector
 991              		.syntax unified
 992              		.thumb
 993              		.thumb_func
 994              		.fpu fpv4-sp-d16
 996              	FLASH_EraseSector:
 997              	.LVL25:
 998              	.LFB131:
 476:FWLIB/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 999              		.loc 1 476 1 is_stmt 1 view -0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 0
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 476:FWLIB/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 46


 1003              		.loc 1 476 1 is_stmt 0 view .LVU196
 1004 0000 70B5     		push	{r4, r5, r6, lr}
 1005              	.LCFI3:
 1006              		.cfi_def_cfa_offset 16
 1007              		.cfi_offset 4, -16
 1008              		.cfi_offset 5, -12
 1009              		.cfi_offset 6, -8
 1010              		.cfi_offset 14, -4
 1011 0002 0446     		mov	r4, r0
 477:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1012              		.loc 1 477 3 is_stmt 1 view .LVU197
 1013              	.LVL26:
 478:FWLIB/src/stm32f4xx_flash.c **** 
 1014              		.loc 1 478 3 view .LVU198
 481:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1015              		.loc 1 481 3 view .LVU199
 482:FWLIB/src/stm32f4xx_flash.c ****   
 1016              		.loc 1 482 3 view .LVU200
 484:FWLIB/src/stm32f4xx_flash.c ****   {
 1017              		.loc 1 484 3 view .LVU201
 484:FWLIB/src/stm32f4xx_flash.c ****   {
 1018              		.loc 1 484 5 is_stmt 0 view .LVU202
 1019 0004 49B1     		cbz	r1, .L101
 488:FWLIB/src/stm32f4xx_flash.c ****   {
 1020              		.loc 1 488 8 is_stmt 1 view .LVU203
 488:FWLIB/src/stm32f4xx_flash.c ****   {
 1021              		.loc 1 488 10 is_stmt 0 view .LVU204
 1022 0006 0129     		cmp	r1, #1
 1023 0008 0DD0     		beq	.L102
 492:FWLIB/src/stm32f4xx_flash.c ****   {
 1024              		.loc 1 492 8 is_stmt 1 view .LVU205
 492:FWLIB/src/stm32f4xx_flash.c ****   {
 1025              		.loc 1 492 10 is_stmt 0 view .LVU206
 1026 000a 0229     		cmp	r1, #2
 1027 000c 02D0     		beq	.L105
 498:FWLIB/src/stm32f4xx_flash.c ****   }
 1028              		.loc 1 498 15 view .LVU207
 1029 000e 4FF44076 		mov	r6, #768
 1030 0012 03E0     		b	.L99
 1031              	.L105:
 494:FWLIB/src/stm32f4xx_flash.c ****   }
 1032              		.loc 1 494 15 view .LVU208
 1033 0014 4FF40076 		mov	r6, #512
 1034 0018 00E0     		b	.L99
 1035              	.L101:
 486:FWLIB/src/stm32f4xx_flash.c ****   }
 1036              		.loc 1 486 16 view .LVU209
 1037 001a 0026     		movs	r6, #0
 1038              	.L99:
 1039              	.LVL27:
 501:FWLIB/src/stm32f4xx_flash.c ****   
 1040              		.loc 1 501 3 is_stmt 1 view .LVU210
 501:FWLIB/src/stm32f4xx_flash.c ****   
 1041              		.loc 1 501 12 is_stmt 0 view .LVU211
 1042 001c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1043              	.LVL28:
 503:FWLIB/src/stm32f4xx_flash.c ****   { 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 47


 1044              		.loc 1 503 3 is_stmt 1 view .LVU212
 503:FWLIB/src/stm32f4xx_flash.c ****   { 
 1045              		.loc 1 503 5 is_stmt 0 view .LVU213
 1046 0020 0928     		cmp	r0, #9
 1047 0022 03D0     		beq	.L106
 1048              	.LVL29:
 1049              	.L100:
 520:FWLIB/src/stm32f4xx_flash.c **** }
 1050              		.loc 1 520 3 is_stmt 1 view .LVU214
 521:FWLIB/src/stm32f4xx_flash.c **** 
 1051              		.loc 1 521 1 is_stmt 0 view .LVU215
 1052 0024 70BD     		pop	{r4, r5, r6, pc}
 1053              	.LVL30:
 1054              	.L102:
 490:FWLIB/src/stm32f4xx_flash.c ****   }
 1055              		.loc 1 490 15 view .LVU216
 1056 0026 4FF48076 		mov	r6, #256
 1057 002a F7E7     		b	.L99
 1058              	.LVL31:
 1059              	.L106:
 506:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 1060              		.loc 1 506 5 is_stmt 1 view .LVU217
 506:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 1061              		.loc 1 506 15 is_stmt 0 view .LVU218
 1062 002c 0F4D     		ldr	r5, .L107
 1063 002e 2B69     		ldr	r3, [r5, #16]
 1064 0030 23F44073 		bic	r3, r3, #768
 1065 0034 2B61     		str	r3, [r5, #16]
 507:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK;
 1066              		.loc 1 507 5 is_stmt 1 view .LVU219
 507:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK;
 1067              		.loc 1 507 15 is_stmt 0 view .LVU220
 1068 0036 2B69     		ldr	r3, [r5, #16]
 1069 0038 1E43     		orrs	r6, r6, r3
 1070              	.LVL32:
 507:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK;
 1071              		.loc 1 507 15 view .LVU221
 1072 003a 2E61     		str	r6, [r5, #16]
 508:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 1073              		.loc 1 508 5 is_stmt 1 view .LVU222
 508:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 1074              		.loc 1 508 15 is_stmt 0 view .LVU223
 1075 003c 2B69     		ldr	r3, [r5, #16]
 1076 003e 23F0F803 		bic	r3, r3, #248
 1077 0042 2B61     		str	r3, [r5, #16]
 509:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 1078              		.loc 1 509 5 is_stmt 1 view .LVU224
 509:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 1079              		.loc 1 509 15 is_stmt 0 view .LVU225
 1080 0044 2869     		ldr	r0, [r5, #16]
 1081              	.LVL33:
 509:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 1082              		.loc 1 509 15 view .LVU226
 1083 0046 2043     		orrs	r0, r0, r4
 1084 0048 40F00200 		orr	r0, r0, #2
 1085 004c 2861     		str	r0, [r5, #16]
 510:FWLIB/src/stm32f4xx_flash.c ****     
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 48


 1086              		.loc 1 510 5 is_stmt 1 view .LVU227
 510:FWLIB/src/stm32f4xx_flash.c ****     
 1087              		.loc 1 510 15 is_stmt 0 view .LVU228
 1088 004e 2B69     		ldr	r3, [r5, #16]
 1089 0050 43F48033 		orr	r3, r3, #65536
 1090 0054 2B61     		str	r3, [r5, #16]
 513:FWLIB/src/stm32f4xx_flash.c ****     
 1091              		.loc 1 513 5 is_stmt 1 view .LVU229
 513:FWLIB/src/stm32f4xx_flash.c ****     
 1092              		.loc 1 513 14 is_stmt 0 view .LVU230
 1093 0056 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1094              	.LVL34:
 516:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK; 
 1095              		.loc 1 516 5 is_stmt 1 view .LVU231
 516:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK; 
 1096              		.loc 1 516 15 is_stmt 0 view .LVU232
 1097 005a 2B69     		ldr	r3, [r5, #16]
 1098 005c 23F00203 		bic	r3, r3, #2
 1099 0060 2B61     		str	r3, [r5, #16]
 517:FWLIB/src/stm32f4xx_flash.c ****   }
 1100              		.loc 1 517 5 is_stmt 1 view .LVU233
 517:FWLIB/src/stm32f4xx_flash.c ****   }
 1101              		.loc 1 517 15 is_stmt 0 view .LVU234
 1102 0062 2B69     		ldr	r3, [r5, #16]
 1103 0064 23F0F803 		bic	r3, r3, #248
 1104 0068 2B61     		str	r3, [r5, #16]
 1105 006a DBE7     		b	.L100
 1106              	.L108:
 1107              		.align	2
 1108              	.L107:
 1109 006c 003C0240 		.word	1073888256
 1110              		.cfi_endproc
 1111              	.LFE131:
 1113              		.section	.text.FLASH_EraseAllSectors,"ax",%progbits
 1114              		.align	1
 1115              		.global	FLASH_EraseAllSectors
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1119              		.fpu fpv4-sp-d16
 1121              	FLASH_EraseAllSectors:
 1122              	.LVL35:
 1123              	.LFB132:
 544:FWLIB/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1124              		.loc 1 544 1 is_stmt 1 view -0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 544:FWLIB/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1128              		.loc 1 544 1 is_stmt 0 view .LVU236
 1129 0000 10B5     		push	{r4, lr}
 1130              	.LCFI4:
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 4, -8
 1133              		.cfi_offset 14, -4
 1134 0002 0446     		mov	r4, r0
 545:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 49


 1135              		.loc 1 545 3 is_stmt 1 view .LVU237
 1136              	.LVL36:
 546:FWLIB/src/stm32f4xx_flash.c ****   
 1137              		.loc 1 546 3 view .LVU238
 549:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1138              		.loc 1 549 3 view .LVU239
 549:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1139              		.loc 1 549 12 is_stmt 0 view .LVU240
 1140 0004 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1141              	.LVL37:
 550:FWLIB/src/stm32f4xx_flash.c ****   
 1142              		.loc 1 550 3 is_stmt 1 view .LVU241
 552:FWLIB/src/stm32f4xx_flash.c ****   {
 1143              		.loc 1 552 3 view .LVU242
 552:FWLIB/src/stm32f4xx_flash.c ****   {
 1144              		.loc 1 552 5 is_stmt 0 view .LVU243
 1145 0008 4CB1     		cbz	r4, .L112
 556:FWLIB/src/stm32f4xx_flash.c ****   {
 1146              		.loc 1 556 8 is_stmt 1 view .LVU244
 556:FWLIB/src/stm32f4xx_flash.c ****   {
 1147              		.loc 1 556 10 is_stmt 0 view .LVU245
 1148 000a 012C     		cmp	r4, #1
 1149 000c 0BD0     		beq	.L113
 560:FWLIB/src/stm32f4xx_flash.c ****   {
 1150              		.loc 1 560 8 is_stmt 1 view .LVU246
 560:FWLIB/src/stm32f4xx_flash.c ****   {
 1151              		.loc 1 560 10 is_stmt 0 view .LVU247
 1152 000e 022C     		cmp	r4, #2
 1153 0010 02D0     		beq	.L116
 566:FWLIB/src/stm32f4xx_flash.c ****   }  
 1154              		.loc 1 566 15 view .LVU248
 1155 0012 4FF44073 		mov	r3, #768
 1156 0016 03E0     		b	.L110
 1157              	.L116:
 562:FWLIB/src/stm32f4xx_flash.c ****   }
 1158              		.loc 1 562 15 view .LVU249
 1159 0018 4FF40073 		mov	r3, #512
 1160 001c 00E0     		b	.L110
 1161              	.L112:
 554:FWLIB/src/stm32f4xx_flash.c ****   }
 1162              		.loc 1 554 16 view .LVU250
 1163 001e 0023     		movs	r3, #0
 1164              	.L110:
 1165              	.LVL38:
 568:FWLIB/src/stm32f4xx_flash.c ****   {
 1166              		.loc 1 568 3 is_stmt 1 view .LVU251
 568:FWLIB/src/stm32f4xx_flash.c ****   {
 1167              		.loc 1 568 5 is_stmt 0 view .LVU252
 1168 0020 0928     		cmp	r0, #9
 1169 0022 03D0     		beq	.L117
 1170              	.LVL39:
 1171              	.L111:
 599:FWLIB/src/stm32f4xx_flash.c **** }
 1172              		.loc 1 599 3 is_stmt 1 view .LVU253
 600:FWLIB/src/stm32f4xx_flash.c **** 
 1173              		.loc 1 600 1 is_stmt 0 view .LVU254
 1174 0024 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 50


 1175              	.LVL40:
 1176              	.L113:
 558:FWLIB/src/stm32f4xx_flash.c ****   }
 1177              		.loc 1 558 15 view .LVU255
 1178 0026 4FF48073 		mov	r3, #256
 1179 002a F9E7     		b	.L110
 1180              	.LVL41:
 1181              	.L117:
 585:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 1182              		.loc 1 585 5 is_stmt 1 view .LVU256
 585:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 1183              		.loc 1 585 15 is_stmt 0 view .LVU257
 1184 002c 0B4C     		ldr	r4, .L118
 1185 002e 2269     		ldr	r2, [r4, #16]
 1186 0030 22F44072 		bic	r2, r2, #768
 1187 0034 2261     		str	r2, [r4, #16]
 586:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_MER;
 1188              		.loc 1 586 5 is_stmt 1 view .LVU258
 586:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_MER;
 1189              		.loc 1 586 15 is_stmt 0 view .LVU259
 1190 0036 2269     		ldr	r2, [r4, #16]
 1191 0038 1343     		orrs	r3, r3, r2
 1192              	.LVL42:
 586:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_MER;
 1193              		.loc 1 586 15 view .LVU260
 1194 003a 2361     		str	r3, [r4, #16]
 587:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 1195              		.loc 1 587 5 is_stmt 1 view .LVU261
 587:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 1196              		.loc 1 587 15 is_stmt 0 view .LVU262
 1197 003c 2369     		ldr	r3, [r4, #16]
 1198 003e 43F00403 		orr	r3, r3, #4
 1199 0042 2361     		str	r3, [r4, #16]
 588:FWLIB/src/stm32f4xx_flash.c ****     
 1200              		.loc 1 588 5 is_stmt 1 view .LVU263
 588:FWLIB/src/stm32f4xx_flash.c ****     
 1201              		.loc 1 588 15 is_stmt 0 view .LVU264
 1202 0044 2369     		ldr	r3, [r4, #16]
 1203 0046 43F48033 		orr	r3, r3, #65536
 1204 004a 2361     		str	r3, [r4, #16]
 591:FWLIB/src/stm32f4xx_flash.c **** 
 1205              		.loc 1 591 5 is_stmt 1 view .LVU265
 591:FWLIB/src/stm32f4xx_flash.c **** 
 1206              		.loc 1 591 14 is_stmt 0 view .LVU266
 1207 004c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1208              	.LVL43:
 594:FWLIB/src/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F412xG || STM32F413_4
 1209              		.loc 1 594 5 is_stmt 1 view .LVU267
 594:FWLIB/src/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F412xG || STM32F413_4
 1210              		.loc 1 594 15 is_stmt 0 view .LVU268
 1211 0050 2369     		ldr	r3, [r4, #16]
 1212 0052 23F00403 		bic	r3, r3, #4
 1213 0056 2361     		str	r3, [r4, #16]
 1214 0058 E4E7     		b	.L111
 1215              	.L119:
 1216 005a 00BF     		.align	2
 1217              	.L118:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 51


 1218 005c 003C0240 		.word	1073888256
 1219              		.cfi_endproc
 1220              	.LFE132:
 1222              		.section	.text.FLASH_EraseAllBank1Sectors,"ax",%progbits
 1223              		.align	1
 1224              		.global	FLASH_EraseAllBank1Sectors
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1228              		.fpu fpv4-sp-d16
 1230              	FLASH_EraseAllBank1Sectors:
 1231              	.LVL44:
 1232              	.LFB133:
 625:FWLIB/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1233              		.loc 1 625 1 is_stmt 1 view -0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 0, uses_anonymous_args = 0
 625:FWLIB/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1237              		.loc 1 625 1 is_stmt 0 view .LVU270
 1238 0000 10B5     		push	{r4, lr}
 1239              	.LCFI5:
 1240              		.cfi_def_cfa_offset 8
 1241              		.cfi_offset 4, -8
 1242              		.cfi_offset 14, -4
 1243 0002 0446     		mov	r4, r0
 626:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1244              		.loc 1 626 3 is_stmt 1 view .LVU271
 1245              	.LVL45:
 627:FWLIB/src/stm32f4xx_flash.c ****   
 1246              		.loc 1 627 3 view .LVU272
 630:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1247              		.loc 1 630 3 view .LVU273
 630:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1248              		.loc 1 630 12 is_stmt 0 view .LVU274
 1249 0004 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1250              	.LVL46:
 631:FWLIB/src/stm32f4xx_flash.c ****   
 1251              		.loc 1 631 3 is_stmt 1 view .LVU275
 633:FWLIB/src/stm32f4xx_flash.c ****   {
 1252              		.loc 1 633 3 view .LVU276
 633:FWLIB/src/stm32f4xx_flash.c ****   {
 1253              		.loc 1 633 5 is_stmt 0 view .LVU277
 1254 0008 4CB1     		cbz	r4, .L123
 637:FWLIB/src/stm32f4xx_flash.c ****   {
 1255              		.loc 1 637 8 is_stmt 1 view .LVU278
 637:FWLIB/src/stm32f4xx_flash.c ****   {
 1256              		.loc 1 637 10 is_stmt 0 view .LVU279
 1257 000a 012C     		cmp	r4, #1
 1258 000c 0BD0     		beq	.L124
 641:FWLIB/src/stm32f4xx_flash.c ****   {
 1259              		.loc 1 641 8 is_stmt 1 view .LVU280
 641:FWLIB/src/stm32f4xx_flash.c ****   {
 1260              		.loc 1 641 10 is_stmt 0 view .LVU281
 1261 000e 022C     		cmp	r4, #2
 1262 0010 02D0     		beq	.L127
 647:FWLIB/src/stm32f4xx_flash.c ****   }  
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 52


 1263              		.loc 1 647 15 view .LVU282
 1264 0012 4FF44073 		mov	r3, #768
 1265 0016 03E0     		b	.L121
 1266              	.L127:
 643:FWLIB/src/stm32f4xx_flash.c ****   }
 1267              		.loc 1 643 15 view .LVU283
 1268 0018 4FF40073 		mov	r3, #512
 1269 001c 00E0     		b	.L121
 1270              	.L123:
 635:FWLIB/src/stm32f4xx_flash.c ****   }
 1271              		.loc 1 635 16 view .LVU284
 1272 001e 0023     		movs	r3, #0
 1273              	.L121:
 1274              	.LVL47:
 649:FWLIB/src/stm32f4xx_flash.c ****   {
 1275              		.loc 1 649 3 is_stmt 1 view .LVU285
 649:FWLIB/src/stm32f4xx_flash.c ****   {
 1276              		.loc 1 649 5 is_stmt 0 view .LVU286
 1277 0020 0928     		cmp	r0, #9
 1278 0022 03D0     		beq	.L128
 1279              	.LVL48:
 1280              	.L122:
 665:FWLIB/src/stm32f4xx_flash.c **** }
 1281              		.loc 1 665 3 is_stmt 1 view .LVU287
 666:FWLIB/src/stm32f4xx_flash.c **** 
 1282              		.loc 1 666 1 is_stmt 0 view .LVU288
 1283 0024 10BD     		pop	{r4, pc}
 1284              	.LVL49:
 1285              	.L124:
 639:FWLIB/src/stm32f4xx_flash.c ****   }
 1286              		.loc 1 639 15 view .LVU289
 1287 0026 4FF48073 		mov	r3, #256
 1288 002a F9E7     		b	.L121
 1289              	.LVL50:
 1290              	.L128:
 652:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 1291              		.loc 1 652 6 is_stmt 1 view .LVU290
 652:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 1292              		.loc 1 652 16 is_stmt 0 view .LVU291
 1293 002c 0B4C     		ldr	r4, .L129
 1294 002e 2269     		ldr	r2, [r4, #16]
 1295 0030 22F44072 		bic	r2, r2, #768
 1296 0034 2261     		str	r2, [r4, #16]
 653:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER1;
 1297              		.loc 1 653 6 is_stmt 1 view .LVU292
 653:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER1;
 1298              		.loc 1 653 16 is_stmt 0 view .LVU293
 1299 0036 2269     		ldr	r2, [r4, #16]
 1300 0038 1343     		orrs	r3, r3, r2
 1301              	.LVL51:
 653:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER1;
 1302              		.loc 1 653 16 view .LVU294
 1303 003a 2361     		str	r3, [r4, #16]
 654:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 1304              		.loc 1 654 6 is_stmt 1 view .LVU295
 654:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 1305              		.loc 1 654 16 is_stmt 0 view .LVU296
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 53


 1306 003c 2369     		ldr	r3, [r4, #16]
 1307 003e 43F00403 		orr	r3, r3, #4
 1308 0042 2361     		str	r3, [r4, #16]
 655:FWLIB/src/stm32f4xx_flash.c ****     
 1309              		.loc 1 655 6 is_stmt 1 view .LVU297
 655:FWLIB/src/stm32f4xx_flash.c ****     
 1310              		.loc 1 655 16 is_stmt 0 view .LVU298
 1311 0044 2369     		ldr	r3, [r4, #16]
 1312 0046 43F48033 		orr	r3, r3, #65536
 1313 004a 2361     		str	r3, [r4, #16]
 658:FWLIB/src/stm32f4xx_flash.c **** 
 1314              		.loc 1 658 5 is_stmt 1 view .LVU299
 658:FWLIB/src/stm32f4xx_flash.c **** 
 1315              		.loc 1 658 14 is_stmt 0 view .LVU300
 1316 004c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1317              	.LVL52:
 661:FWLIB/src/stm32f4xx_flash.c **** 
 1318              		.loc 1 661 5 is_stmt 1 view .LVU301
 661:FWLIB/src/stm32f4xx_flash.c **** 
 1319              		.loc 1 661 15 is_stmt 0 view .LVU302
 1320 0050 2369     		ldr	r3, [r4, #16]
 1321 0052 23F00403 		bic	r3, r3, #4
 1322 0056 2361     		str	r3, [r4, #16]
 1323 0058 E4E7     		b	.L122
 1324              	.L130:
 1325 005a 00BF     		.align	2
 1326              	.L129:
 1327 005c 003C0240 		.word	1073888256
 1328              		.cfi_endproc
 1329              	.LFE133:
 1331              		.section	.text.FLASH_EraseAllBank2Sectors,"ax",%progbits
 1332              		.align	1
 1333              		.global	FLASH_EraseAllBank2Sectors
 1334              		.syntax unified
 1335              		.thumb
 1336              		.thumb_func
 1337              		.fpu fpv4-sp-d16
 1339              	FLASH_EraseAllBank2Sectors:
 1340              	.LVL53:
 1341              	.LFB134:
 692:FWLIB/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1342              		.loc 1 692 1 is_stmt 1 view -0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 0
 1345              		@ frame_needed = 0, uses_anonymous_args = 0
 692:FWLIB/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1346              		.loc 1 692 1 is_stmt 0 view .LVU304
 1347 0000 10B5     		push	{r4, lr}
 1348              	.LCFI6:
 1349              		.cfi_def_cfa_offset 8
 1350              		.cfi_offset 4, -8
 1351              		.cfi_offset 14, -4
 1352 0002 0446     		mov	r4, r0
 693:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1353              		.loc 1 693 3 is_stmt 1 view .LVU305
 1354              	.LVL54:
 694:FWLIB/src/stm32f4xx_flash.c ****   
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 54


 1355              		.loc 1 694 3 view .LVU306
 697:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1356              		.loc 1 697 3 view .LVU307
 697:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1357              		.loc 1 697 12 is_stmt 0 view .LVU308
 1358 0004 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1359              	.LVL55:
 698:FWLIB/src/stm32f4xx_flash.c ****   
 1360              		.loc 1 698 3 is_stmt 1 view .LVU309
 700:FWLIB/src/stm32f4xx_flash.c ****   {
 1361              		.loc 1 700 3 view .LVU310
 700:FWLIB/src/stm32f4xx_flash.c ****   {
 1362              		.loc 1 700 5 is_stmt 0 view .LVU311
 1363 0008 4CB1     		cbz	r4, .L134
 704:FWLIB/src/stm32f4xx_flash.c ****   {
 1364              		.loc 1 704 8 is_stmt 1 view .LVU312
 704:FWLIB/src/stm32f4xx_flash.c ****   {
 1365              		.loc 1 704 10 is_stmt 0 view .LVU313
 1366 000a 012C     		cmp	r4, #1
 1367 000c 0BD0     		beq	.L135
 708:FWLIB/src/stm32f4xx_flash.c ****   {
 1368              		.loc 1 708 8 is_stmt 1 view .LVU314
 708:FWLIB/src/stm32f4xx_flash.c ****   {
 1369              		.loc 1 708 10 is_stmt 0 view .LVU315
 1370 000e 022C     		cmp	r4, #2
 1371 0010 02D0     		beq	.L138
 714:FWLIB/src/stm32f4xx_flash.c ****   }  
 1372              		.loc 1 714 15 view .LVU316
 1373 0012 4FF44073 		mov	r3, #768
 1374 0016 03E0     		b	.L132
 1375              	.L138:
 710:FWLIB/src/stm32f4xx_flash.c ****   }
 1376              		.loc 1 710 15 view .LVU317
 1377 0018 4FF40073 		mov	r3, #512
 1378 001c 00E0     		b	.L132
 1379              	.L134:
 702:FWLIB/src/stm32f4xx_flash.c ****   }
 1380              		.loc 1 702 16 view .LVU318
 1381 001e 0023     		movs	r3, #0
 1382              	.L132:
 1383              	.LVL56:
 716:FWLIB/src/stm32f4xx_flash.c ****   {
 1384              		.loc 1 716 3 is_stmt 1 view .LVU319
 716:FWLIB/src/stm32f4xx_flash.c ****   {
 1385              		.loc 1 716 5 is_stmt 0 view .LVU320
 1386 0020 0928     		cmp	r0, #9
 1387 0022 03D0     		beq	.L139
 1388              	.LVL57:
 1389              	.L133:
 732:FWLIB/src/stm32f4xx_flash.c **** }
 1390              		.loc 1 732 3 is_stmt 1 view .LVU321
 733:FWLIB/src/stm32f4xx_flash.c **** 
 1391              		.loc 1 733 1 is_stmt 0 view .LVU322
 1392 0024 10BD     		pop	{r4, pc}
 1393              	.LVL58:
 1394              	.L135:
 706:FWLIB/src/stm32f4xx_flash.c ****   }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 55


 1395              		.loc 1 706 15 view .LVU323
 1396 0026 4FF48073 		mov	r3, #256
 1397 002a F9E7     		b	.L132
 1398              	.LVL59:
 1399              	.L139:
 719:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 1400              		.loc 1 719 6 is_stmt 1 view .LVU324
 719:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 1401              		.loc 1 719 16 is_stmt 0 view .LVU325
 1402 002c 0B4C     		ldr	r4, .L140
 1403 002e 2269     		ldr	r2, [r4, #16]
 1404 0030 22F44072 		bic	r2, r2, #768
 1405 0034 2261     		str	r2, [r4, #16]
 720:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER2;
 1406              		.loc 1 720 6 is_stmt 1 view .LVU326
 720:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER2;
 1407              		.loc 1 720 16 is_stmt 0 view .LVU327
 1408 0036 2269     		ldr	r2, [r4, #16]
 1409 0038 1343     		orrs	r3, r3, r2
 1410              	.LVL60:
 720:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER2;
 1411              		.loc 1 720 16 view .LVU328
 1412 003a 2361     		str	r3, [r4, #16]
 721:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 1413              		.loc 1 721 6 is_stmt 1 view .LVU329
 721:FWLIB/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 1414              		.loc 1 721 16 is_stmt 0 view .LVU330
 1415 003c 2369     		ldr	r3, [r4, #16]
 1416 003e 43F40043 		orr	r3, r3, #32768
 1417 0042 2361     		str	r3, [r4, #16]
 722:FWLIB/src/stm32f4xx_flash.c ****     
 1418              		.loc 1 722 6 is_stmt 1 view .LVU331
 722:FWLIB/src/stm32f4xx_flash.c ****     
 1419              		.loc 1 722 16 is_stmt 0 view .LVU332
 1420 0044 2369     		ldr	r3, [r4, #16]
 1421 0046 43F48033 		orr	r3, r3, #65536
 1422 004a 2361     		str	r3, [r4, #16]
 725:FWLIB/src/stm32f4xx_flash.c **** 
 1423              		.loc 1 725 5 is_stmt 1 view .LVU333
 725:FWLIB/src/stm32f4xx_flash.c **** 
 1424              		.loc 1 725 14 is_stmt 0 view .LVU334
 1425 004c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1426              	.LVL61:
 728:FWLIB/src/stm32f4xx_flash.c **** 
 1427              		.loc 1 728 5 is_stmt 1 view .LVU335
 728:FWLIB/src/stm32f4xx_flash.c **** 
 1428              		.loc 1 728 15 is_stmt 0 view .LVU336
 1429 0050 2369     		ldr	r3, [r4, #16]
 1430 0052 23F40043 		bic	r3, r3, #32768
 1431 0056 2361     		str	r3, [r4, #16]
 1432 0058 E4E7     		b	.L133
 1433              	.L141:
 1434 005a 00BF     		.align	2
 1435              	.L140:
 1436 005c 003C0240 		.word	1073888256
 1437              		.cfi_endproc
 1438              	.LFE134:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 56


 1440              		.section	.text.FLASH_ProgramDoubleWord,"ax",%progbits
 1441              		.align	1
 1442              		.global	FLASH_ProgramDoubleWord
 1443              		.syntax unified
 1444              		.thumb
 1445              		.thumb_func
 1446              		.fpu fpv4-sp-d16
 1448              	FLASH_ProgramDoubleWord:
 1449              	.LVL62:
 1450              	.LFB135:
 749:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1451              		.loc 1 749 1 is_stmt 1 view -0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 0
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
 749:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1455              		.loc 1 749 1 is_stmt 0 view .LVU338
 1456 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1457              	.LCFI7:
 1458              		.cfi_def_cfa_offset 24
 1459              		.cfi_offset 3, -24
 1460              		.cfi_offset 4, -20
 1461              		.cfi_offset 5, -16
 1462              		.cfi_offset 6, -12
 1463              		.cfi_offset 7, -8
 1464              		.cfi_offset 14, -4
 1465 0002 0646     		mov	r6, r0
 1466 0004 1446     		mov	r4, r2
 1467 0006 1D46     		mov	r5, r3
 750:FWLIB/src/stm32f4xx_flash.c **** 
 1468              		.loc 1 750 3 is_stmt 1 view .LVU339
 1469              	.LVL63:
 753:FWLIB/src/stm32f4xx_flash.c **** 
 1470              		.loc 1 753 3 view .LVU340
 756:FWLIB/src/stm32f4xx_flash.c ****   
 1471              		.loc 1 756 3 view .LVU341
 756:FWLIB/src/stm32f4xx_flash.c ****   
 1472              		.loc 1 756 12 is_stmt 0 view .LVU342
 1473 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1474              	.LVL64:
 758:FWLIB/src/stm32f4xx_flash.c ****   {
 1475              		.loc 1 758 3 is_stmt 1 view .LVU343
 758:FWLIB/src/stm32f4xx_flash.c ****   {
 1476              		.loc 1 758 5 is_stmt 0 view .LVU344
 1477 000c 0928     		cmp	r0, #9
 1478 000e 00D0     		beq	.L145
 1479              	.L143:
 774:FWLIB/src/stm32f4xx_flash.c **** }
 1480              		.loc 1 774 3 is_stmt 1 view .LVU345
 775:FWLIB/src/stm32f4xx_flash.c **** 
 1481              		.loc 1 775 1 is_stmt 0 view .LVU346
 1482 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1483              	.LVL65:
 1484              	.L145:
 761:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 1485              		.loc 1 761 5 is_stmt 1 view .LVU347
 761:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 57


 1486              		.loc 1 761 15 is_stmt 0 view .LVU348
 1487 0012 0B4F     		ldr	r7, .L146
 1488 0014 3B69     		ldr	r3, [r7, #16]
 1489 0016 23F44073 		bic	r3, r3, #768
 1490 001a 3B61     		str	r3, [r7, #16]
 762:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1491              		.loc 1 762 5 is_stmt 1 view .LVU349
 762:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1492              		.loc 1 762 15 is_stmt 0 view .LVU350
 1493 001c 3B69     		ldr	r3, [r7, #16]
 1494 001e 43F44073 		orr	r3, r3, #768
 1495 0022 3B61     		str	r3, [r7, #16]
 763:FWLIB/src/stm32f4xx_flash.c ****   
 1496              		.loc 1 763 5 is_stmt 1 view .LVU351
 763:FWLIB/src/stm32f4xx_flash.c ****   
 1497              		.loc 1 763 15 is_stmt 0 view .LVU352
 1498 0024 3B69     		ldr	r3, [r7, #16]
 1499 0026 43F00103 		orr	r3, r3, #1
 1500 002a 3B61     		str	r3, [r7, #16]
 765:FWLIB/src/stm32f4xx_flash.c ****         
 1501              		.loc 1 765 5 is_stmt 1 view .LVU353
 765:FWLIB/src/stm32f4xx_flash.c ****         
 1502              		.loc 1 765 30 is_stmt 0 view .LVU354
 1503 002c C6E90045 		strd	r4, [r6]
 768:FWLIB/src/stm32f4xx_flash.c **** 
 1504              		.loc 1 768 5 is_stmt 1 view .LVU355
 768:FWLIB/src/stm32f4xx_flash.c **** 
 1505              		.loc 1 768 14 is_stmt 0 view .LVU356
 1506 0030 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1507              	.LVL66:
 771:FWLIB/src/stm32f4xx_flash.c ****   } 
 1508              		.loc 1 771 5 is_stmt 1 view .LVU357
 771:FWLIB/src/stm32f4xx_flash.c ****   } 
 1509              		.loc 1 771 15 is_stmt 0 view .LVU358
 1510 0034 3B69     		ldr	r3, [r7, #16]
 1511 0036 23F00103 		bic	r3, r3, #1
 1512 003a 3B61     		str	r3, [r7, #16]
 1513 003c E8E7     		b	.L143
 1514              	.L147:
 1515 003e 00BF     		.align	2
 1516              	.L146:
 1517 0040 003C0240 		.word	1073888256
 1518              		.cfi_endproc
 1519              	.LFE135:
 1521              		.section	.text.FLASH_ProgramWord,"ax",%progbits
 1522              		.align	1
 1523              		.global	FLASH_ProgramWord
 1524              		.syntax unified
 1525              		.thumb
 1526              		.thumb_func
 1527              		.fpu fpv4-sp-d16
 1529              	FLASH_ProgramWord:
 1530              	.LVL67:
 1531              	.LFB136:
 792:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1532              		.loc 1 792 1 is_stmt 1 view -0
 1533              		.cfi_startproc
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 58


 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 792:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1536              		.loc 1 792 1 is_stmt 0 view .LVU360
 1537 0000 70B5     		push	{r4, r5, r6, lr}
 1538              	.LCFI8:
 1539              		.cfi_def_cfa_offset 16
 1540              		.cfi_offset 4, -16
 1541              		.cfi_offset 5, -12
 1542              		.cfi_offset 6, -8
 1543              		.cfi_offset 14, -4
 1544 0002 0546     		mov	r5, r0
 1545 0004 0C46     		mov	r4, r1
 793:FWLIB/src/stm32f4xx_flash.c **** 
 1546              		.loc 1 793 3 is_stmt 1 view .LVU361
 1547              	.LVL68:
 796:FWLIB/src/stm32f4xx_flash.c **** 
 1548              		.loc 1 796 3 view .LVU362
 799:FWLIB/src/stm32f4xx_flash.c ****   
 1549              		.loc 1 799 3 view .LVU363
 799:FWLIB/src/stm32f4xx_flash.c ****   
 1550              		.loc 1 799 12 is_stmt 0 view .LVU364
 1551 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1552              	.LVL69:
 801:FWLIB/src/stm32f4xx_flash.c ****   {
 1553              		.loc 1 801 3 is_stmt 1 view .LVU365
 801:FWLIB/src/stm32f4xx_flash.c ****   {
 1554              		.loc 1 801 5 is_stmt 0 view .LVU366
 1555 000a 0928     		cmp	r0, #9
 1556 000c 00D0     		beq	.L151
 1557              	.L149:
 817:FWLIB/src/stm32f4xx_flash.c **** }
 1558              		.loc 1 817 3 is_stmt 1 view .LVU367
 818:FWLIB/src/stm32f4xx_flash.c **** 
 1559              		.loc 1 818 1 is_stmt 0 view .LVU368
 1560 000e 70BD     		pop	{r4, r5, r6, pc}
 1561              	.LVL70:
 1562              	.L151:
 804:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_WORD;
 1563              		.loc 1 804 5 is_stmt 1 view .LVU369
 804:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_WORD;
 1564              		.loc 1 804 15 is_stmt 0 view .LVU370
 1565 0010 0A4E     		ldr	r6, .L152
 1566 0012 3369     		ldr	r3, [r6, #16]
 1567 0014 23F44073 		bic	r3, r3, #768
 1568 0018 3361     		str	r3, [r6, #16]
 805:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1569              		.loc 1 805 5 is_stmt 1 view .LVU371
 805:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1570              		.loc 1 805 15 is_stmt 0 view .LVU372
 1571 001a 3369     		ldr	r3, [r6, #16]
 1572 001c 43F40073 		orr	r3, r3, #512
 1573 0020 3361     		str	r3, [r6, #16]
 806:FWLIB/src/stm32f4xx_flash.c ****   
 1574              		.loc 1 806 5 is_stmt 1 view .LVU373
 806:FWLIB/src/stm32f4xx_flash.c ****   
 1575              		.loc 1 806 15 is_stmt 0 view .LVU374
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 59


 1576 0022 3369     		ldr	r3, [r6, #16]
 1577 0024 43F00103 		orr	r3, r3, #1
 1578 0028 3361     		str	r3, [r6, #16]
 808:FWLIB/src/stm32f4xx_flash.c ****         
 1579              		.loc 1 808 5 is_stmt 1 view .LVU375
 808:FWLIB/src/stm32f4xx_flash.c ****         
 1580              		.loc 1 808 30 is_stmt 0 view .LVU376
 1581 002a 2C60     		str	r4, [r5]
 811:FWLIB/src/stm32f4xx_flash.c **** 
 1582              		.loc 1 811 5 is_stmt 1 view .LVU377
 811:FWLIB/src/stm32f4xx_flash.c **** 
 1583              		.loc 1 811 14 is_stmt 0 view .LVU378
 1584 002c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1585              	.LVL71:
 814:FWLIB/src/stm32f4xx_flash.c ****   } 
 1586              		.loc 1 814 5 is_stmt 1 view .LVU379
 814:FWLIB/src/stm32f4xx_flash.c ****   } 
 1587              		.loc 1 814 15 is_stmt 0 view .LVU380
 1588 0030 3369     		ldr	r3, [r6, #16]
 1589 0032 23F00103 		bic	r3, r3, #1
 1590 0036 3361     		str	r3, [r6, #16]
 1591 0038 E9E7     		b	.L149
 1592              	.L153:
 1593 003a 00BF     		.align	2
 1594              	.L152:
 1595 003c 003C0240 		.word	1073888256
 1596              		.cfi_endproc
 1597              	.LFE136:
 1599              		.section	.text.FLASH_ProgramHalfWord,"ax",%progbits
 1600              		.align	1
 1601              		.global	FLASH_ProgramHalfWord
 1602              		.syntax unified
 1603              		.thumb
 1604              		.thumb_func
 1605              		.fpu fpv4-sp-d16
 1607              	FLASH_ProgramHalfWord:
 1608              	.LVL72:
 1609              	.LFB137:
 834:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1610              		.loc 1 834 1 is_stmt 1 view -0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 0
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 834:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1614              		.loc 1 834 1 is_stmt 0 view .LVU382
 1615 0000 70B5     		push	{r4, r5, r6, lr}
 1616              	.LCFI9:
 1617              		.cfi_def_cfa_offset 16
 1618              		.cfi_offset 4, -16
 1619              		.cfi_offset 5, -12
 1620              		.cfi_offset 6, -8
 1621              		.cfi_offset 14, -4
 1622 0002 0546     		mov	r5, r0
 1623 0004 0C46     		mov	r4, r1
 835:FWLIB/src/stm32f4xx_flash.c **** 
 1624              		.loc 1 835 3 is_stmt 1 view .LVU383
 1625              	.LVL73:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 60


 838:FWLIB/src/stm32f4xx_flash.c **** 
 1626              		.loc 1 838 3 view .LVU384
 841:FWLIB/src/stm32f4xx_flash.c ****   
 1627              		.loc 1 841 3 view .LVU385
 841:FWLIB/src/stm32f4xx_flash.c ****   
 1628              		.loc 1 841 12 is_stmt 0 view .LVU386
 1629 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1630              	.LVL74:
 843:FWLIB/src/stm32f4xx_flash.c ****   {
 1631              		.loc 1 843 3 is_stmt 1 view .LVU387
 843:FWLIB/src/stm32f4xx_flash.c ****   {
 1632              		.loc 1 843 5 is_stmt 0 view .LVU388
 1633 000a 0928     		cmp	r0, #9
 1634 000c 00D0     		beq	.L157
 1635              	.L155:
 859:FWLIB/src/stm32f4xx_flash.c **** }
 1636              		.loc 1 859 3 is_stmt 1 view .LVU389
 860:FWLIB/src/stm32f4xx_flash.c **** 
 1637              		.loc 1 860 1 is_stmt 0 view .LVU390
 1638 000e 70BD     		pop	{r4, r5, r6, pc}
 1639              	.LVL75:
 1640              	.L157:
 846:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 1641              		.loc 1 846 5 is_stmt 1 view .LVU391
 846:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 1642              		.loc 1 846 15 is_stmt 0 view .LVU392
 1643 0010 0A4E     		ldr	r6, .L158
 1644 0012 3369     		ldr	r3, [r6, #16]
 1645 0014 23F44073 		bic	r3, r3, #768
 1646 0018 3361     		str	r3, [r6, #16]
 847:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1647              		.loc 1 847 5 is_stmt 1 view .LVU393
 847:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1648              		.loc 1 847 15 is_stmt 0 view .LVU394
 1649 001a 3369     		ldr	r3, [r6, #16]
 1650 001c 43F48073 		orr	r3, r3, #256
 1651 0020 3361     		str	r3, [r6, #16]
 848:FWLIB/src/stm32f4xx_flash.c ****   
 1652              		.loc 1 848 5 is_stmt 1 view .LVU395
 848:FWLIB/src/stm32f4xx_flash.c ****   
 1653              		.loc 1 848 15 is_stmt 0 view .LVU396
 1654 0022 3369     		ldr	r3, [r6, #16]
 1655 0024 43F00103 		orr	r3, r3, #1
 1656 0028 3361     		str	r3, [r6, #16]
 850:FWLIB/src/stm32f4xx_flash.c ****         
 1657              		.loc 1 850 5 is_stmt 1 view .LVU397
 850:FWLIB/src/stm32f4xx_flash.c ****         
 1658              		.loc 1 850 30 is_stmt 0 view .LVU398
 1659 002a 2C80     		strh	r4, [r5]	@ movhi
 853:FWLIB/src/stm32f4xx_flash.c **** 
 1660              		.loc 1 853 5 is_stmt 1 view .LVU399
 853:FWLIB/src/stm32f4xx_flash.c **** 
 1661              		.loc 1 853 14 is_stmt 0 view .LVU400
 1662 002c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1663              	.LVL76:
 856:FWLIB/src/stm32f4xx_flash.c ****   } 
 1664              		.loc 1 856 5 is_stmt 1 view .LVU401
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 61


 856:FWLIB/src/stm32f4xx_flash.c ****   } 
 1665              		.loc 1 856 15 is_stmt 0 view .LVU402
 1666 0030 3369     		ldr	r3, [r6, #16]
 1667 0032 23F00103 		bic	r3, r3, #1
 1668 0036 3361     		str	r3, [r6, #16]
 1669 0038 E9E7     		b	.L155
 1670              	.L159:
 1671 003a 00BF     		.align	2
 1672              	.L158:
 1673 003c 003C0240 		.word	1073888256
 1674              		.cfi_endproc
 1675              	.LFE137:
 1677              		.section	.text.FLASH_ProgramByte,"ax",%progbits
 1678              		.align	1
 1679              		.global	FLASH_ProgramByte
 1680              		.syntax unified
 1681              		.thumb
 1682              		.thumb_func
 1683              		.fpu fpv4-sp-d16
 1685              	FLASH_ProgramByte:
 1686              	.LVL77:
 1687              	.LFB138:
 876:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1688              		.loc 1 876 1 is_stmt 1 view -0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 0, uses_anonymous_args = 0
 876:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1692              		.loc 1 876 1 is_stmt 0 view .LVU404
 1693 0000 70B5     		push	{r4, r5, r6, lr}
 1694              	.LCFI10:
 1695              		.cfi_def_cfa_offset 16
 1696              		.cfi_offset 4, -16
 1697              		.cfi_offset 5, -12
 1698              		.cfi_offset 6, -8
 1699              		.cfi_offset 14, -4
 1700 0002 0546     		mov	r5, r0
 1701 0004 0C46     		mov	r4, r1
 877:FWLIB/src/stm32f4xx_flash.c **** 
 1702              		.loc 1 877 3 is_stmt 1 view .LVU405
 1703              	.LVL78:
 880:FWLIB/src/stm32f4xx_flash.c **** 
 1704              		.loc 1 880 3 view .LVU406
 883:FWLIB/src/stm32f4xx_flash.c ****   
 1705              		.loc 1 883 3 view .LVU407
 883:FWLIB/src/stm32f4xx_flash.c ****   
 1706              		.loc 1 883 12 is_stmt 0 view .LVU408
 1707 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1708              	.LVL79:
 885:FWLIB/src/stm32f4xx_flash.c ****   {
 1709              		.loc 1 885 3 is_stmt 1 view .LVU409
 885:FWLIB/src/stm32f4xx_flash.c ****   {
 1710              		.loc 1 885 5 is_stmt 0 view .LVU410
 1711 000a 0928     		cmp	r0, #9
 1712 000c 00D0     		beq	.L163
 1713              	.L161:
 902:FWLIB/src/stm32f4xx_flash.c **** }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 62


 1714              		.loc 1 902 3 is_stmt 1 view .LVU411
 903:FWLIB/src/stm32f4xx_flash.c **** 
 1715              		.loc 1 903 1 is_stmt 0 view .LVU412
 1716 000e 70BD     		pop	{r4, r5, r6, pc}
 1717              	.LVL80:
 1718              	.L163:
 888:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_BYTE;
 1719              		.loc 1 888 5 is_stmt 1 view .LVU413
 888:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_BYTE;
 1720              		.loc 1 888 15 is_stmt 0 view .LVU414
 1721 0010 094E     		ldr	r6, .L164
 1722 0012 3369     		ldr	r3, [r6, #16]
 1723 0014 23F44073 		bic	r3, r3, #768
 1724 0018 3361     		str	r3, [r6, #16]
 889:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1725              		.loc 1 889 5 is_stmt 1 view .LVU415
 889:FWLIB/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1726              		.loc 1 889 15 is_stmt 0 view .LVU416
 1727 001a 3369     		ldr	r3, [r6, #16]
 1728 001c 3361     		str	r3, [r6, #16]
 890:FWLIB/src/stm32f4xx_flash.c ****   
 1729              		.loc 1 890 5 is_stmt 1 view .LVU417
 890:FWLIB/src/stm32f4xx_flash.c ****   
 1730              		.loc 1 890 15 is_stmt 0 view .LVU418
 1731 001e 3369     		ldr	r3, [r6, #16]
 1732 0020 43F00103 		orr	r3, r3, #1
 1733 0024 3361     		str	r3, [r6, #16]
 892:FWLIB/src/stm32f4xx_flash.c ****         
 1734              		.loc 1 892 5 is_stmt 1 view .LVU419
 892:FWLIB/src/stm32f4xx_flash.c ****         
 1735              		.loc 1 892 29 is_stmt 0 view .LVU420
 1736 0026 2C70     		strb	r4, [r5]
 895:FWLIB/src/stm32f4xx_flash.c **** 
 1737              		.loc 1 895 5 is_stmt 1 view .LVU421
 895:FWLIB/src/stm32f4xx_flash.c **** 
 1738              		.loc 1 895 14 is_stmt 0 view .LVU422
 1739 0028 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1740              	.LVL81:
 898:FWLIB/src/stm32f4xx_flash.c ****   } 
 1741              		.loc 1 898 5 is_stmt 1 view .LVU423
 898:FWLIB/src/stm32f4xx_flash.c ****   } 
 1742              		.loc 1 898 15 is_stmt 0 view .LVU424
 1743 002c 3369     		ldr	r3, [r6, #16]
 1744 002e 23F00103 		bic	r3, r3, #1
 1745 0032 3361     		str	r3, [r6, #16]
 1746 0034 EBE7     		b	.L161
 1747              	.L165:
 1748 0036 00BF     		.align	2
 1749              	.L164:
 1750 0038 003C0240 		.word	1073888256
 1751              		.cfi_endproc
 1752              	.LFE138:
 1754              		.section	.text.FLASH_OB_WRPConfig,"ax",%progbits
 1755              		.align	1
 1756              		.global	FLASH_OB_WRPConfig
 1757              		.syntax unified
 1758              		.thumb
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 63


 1759              		.thumb_func
 1760              		.fpu fpv4-sp-d16
 1762              	FLASH_OB_WRPConfig:
 1763              	.LVL82:
 1764              	.LFB141:
1013:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1765              		.loc 1 1013 1 is_stmt 1 view -0
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 0
 1768              		@ frame_needed = 0, uses_anonymous_args = 0
1013:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1769              		.loc 1 1013 1 is_stmt 0 view .LVU426
 1770 0000 38B5     		push	{r3, r4, r5, lr}
 1771              	.LCFI11:
 1772              		.cfi_def_cfa_offset 16
 1773              		.cfi_offset 3, -16
 1774              		.cfi_offset 4, -12
 1775              		.cfi_offset 5, -8
 1776              		.cfi_offset 14, -4
 1777 0002 0546     		mov	r5, r0
 1778 0004 0C46     		mov	r4, r1
1014:FWLIB/src/stm32f4xx_flash.c ****   
 1779              		.loc 1 1014 3 is_stmt 1 view .LVU427
 1780              	.LVL83:
1017:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1781              		.loc 1 1017 3 view .LVU428
1018:FWLIB/src/stm32f4xx_flash.c ****     
 1782              		.loc 1 1018 3 view .LVU429
1020:FWLIB/src/stm32f4xx_flash.c **** 
 1783              		.loc 1 1020 3 view .LVU430
1020:FWLIB/src/stm32f4xx_flash.c **** 
 1784              		.loc 1 1020 12 is_stmt 0 view .LVU431
 1785 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1786              	.LVL84:
1022:FWLIB/src/stm32f4xx_flash.c ****   { 
 1787              		.loc 1 1022 3 is_stmt 1 view .LVU432
1022:FWLIB/src/stm32f4xx_flash.c ****   { 
 1788              		.loc 1 1022 5 is_stmt 0 view .LVU433
 1789 000a 0928     		cmp	r0, #9
 1790 000c 00D0     		beq	.L170
 1791              	.LVL85:
 1792              	.L166:
1033:FWLIB/src/stm32f4xx_flash.c **** 
 1793              		.loc 1 1033 1 view .LVU434
 1794 000e 38BD     		pop	{r3, r4, r5, pc}
 1795              	.LVL86:
 1796              	.L170:
1024:FWLIB/src/stm32f4xx_flash.c ****     {
 1797              		.loc 1 1024 5 is_stmt 1 view .LVU435
1024:FWLIB/src/stm32f4xx_flash.c ****     {
 1798              		.loc 1 1024 7 is_stmt 0 view .LVU436
 1799 0010 34B1     		cbz	r4, .L168
1026:FWLIB/src/stm32f4xx_flash.c ****     }
 1800              		.loc 1 1026 7 is_stmt 1 view .LVU437
1026:FWLIB/src/stm32f4xx_flash.c ****     }
 1801              		.loc 1 1026 44 is_stmt 0 view .LVU438
 1802 0012 074B     		ldr	r3, .L171
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 64


 1803 0014 D88A     		ldrh	r0, [r3, #22]
 1804              	.LVL87:
1026:FWLIB/src/stm32f4xx_flash.c ****     }
 1805              		.loc 1 1026 44 view .LVU439
 1806 0016 80B2     		uxth	r0, r0
 1807 0018 20EA0500 		bic	r0, r0, r5
 1808 001c D882     		strh	r0, [r3, #22]	@ movhi
 1809 001e F6E7     		b	.L166
 1810              	.LVL88:
 1811              	.L168:
1030:FWLIB/src/stm32f4xx_flash.c ****     }
 1812              		.loc 1 1030 7 is_stmt 1 view .LVU440
1030:FWLIB/src/stm32f4xx_flash.c ****     }
 1813              		.loc 1 1030 44 is_stmt 0 view .LVU441
 1814 0020 034A     		ldr	r2, .L171
 1815 0022 D08A     		ldrh	r0, [r2, #22]
 1816              	.LVL89:
1030:FWLIB/src/stm32f4xx_flash.c ****     }
 1817              		.loc 1 1030 44 view .LVU442
 1818 0024 83B2     		uxth	r3, r0
1030:FWLIB/src/stm32f4xx_flash.c ****     }
 1819              		.loc 1 1030 47 view .LVU443
 1820 0026 A8B2     		uxth	r0, r5
1030:FWLIB/src/stm32f4xx_flash.c ****     }
 1821              		.loc 1 1030 44 view .LVU444
 1822 0028 1843     		orrs	r0, r0, r3
 1823 002a D082     		strh	r0, [r2, #22]	@ movhi
1033:FWLIB/src/stm32f4xx_flash.c **** 
 1824              		.loc 1 1033 1 view .LVU445
 1825 002c EFE7     		b	.L166
 1826              	.L172:
 1827 002e 00BF     		.align	2
 1828              	.L171:
 1829 0030 003C0240 		.word	1073888256
 1830              		.cfi_endproc
 1831              	.LFE141:
 1833              		.section	.text.FLASH_OB_WRP1Config,"ax",%progbits
 1834              		.align	1
 1835              		.global	FLASH_OB_WRP1Config
 1836              		.syntax unified
 1837              		.thumb
 1838              		.thumb_func
 1839              		.fpu fpv4-sp-d16
 1841              	FLASH_OB_WRP1Config:
 1842              	.LVL90:
 1843              	.LFB142:
1055:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1844              		.loc 1 1055 1 is_stmt 1 view -0
 1845              		.cfi_startproc
 1846              		@ args = 0, pretend = 0, frame = 0
 1847              		@ frame_needed = 0, uses_anonymous_args = 0
1055:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1848              		.loc 1 1055 1 is_stmt 0 view .LVU447
 1849 0000 38B5     		push	{r3, r4, r5, lr}
 1850              	.LCFI12:
 1851              		.cfi_def_cfa_offset 16
 1852              		.cfi_offset 3, -16
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 65


 1853              		.cfi_offset 4, -12
 1854              		.cfi_offset 5, -8
 1855              		.cfi_offset 14, -4
 1856 0002 0546     		mov	r5, r0
 1857 0004 0C46     		mov	r4, r1
1056:FWLIB/src/stm32f4xx_flash.c ****   
 1858              		.loc 1 1056 3 is_stmt 1 view .LVU448
 1859              	.LVL91:
1059:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1860              		.loc 1 1059 3 view .LVU449
1060:FWLIB/src/stm32f4xx_flash.c ****     
 1861              		.loc 1 1060 3 view .LVU450
1062:FWLIB/src/stm32f4xx_flash.c **** 
 1862              		.loc 1 1062 3 view .LVU451
1062:FWLIB/src/stm32f4xx_flash.c **** 
 1863              		.loc 1 1062 12 is_stmt 0 view .LVU452
 1864 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1865              	.LVL92:
1064:FWLIB/src/stm32f4xx_flash.c ****   { 
 1866              		.loc 1 1064 3 is_stmt 1 view .LVU453
1064:FWLIB/src/stm32f4xx_flash.c ****   { 
 1867              		.loc 1 1064 5 is_stmt 0 view .LVU454
 1868 000a 0928     		cmp	r0, #9
 1869 000c 00D0     		beq	.L177
 1870              	.LVL93:
 1871              	.L173:
1075:FWLIB/src/stm32f4xx_flash.c **** 
 1872              		.loc 1 1075 1 view .LVU455
 1873 000e 38BD     		pop	{r3, r4, r5, pc}
 1874              	.LVL94:
 1875              	.L177:
1066:FWLIB/src/stm32f4xx_flash.c ****     {
 1876              		.loc 1 1066 5 is_stmt 1 view .LVU456
1066:FWLIB/src/stm32f4xx_flash.c ****     {
 1877              		.loc 1 1066 7 is_stmt 0 view .LVU457
 1878 0010 34B1     		cbz	r4, .L175
1068:FWLIB/src/stm32f4xx_flash.c ****     }
 1879              		.loc 1 1068 7 is_stmt 1 view .LVU458
1068:FWLIB/src/stm32f4xx_flash.c ****     }
 1880              		.loc 1 1068 45 is_stmt 0 view .LVU459
 1881 0012 074B     		ldr	r3, .L178
 1882 0014 588B     		ldrh	r0, [r3, #26]
 1883              	.LVL95:
1068:FWLIB/src/stm32f4xx_flash.c ****     }
 1884              		.loc 1 1068 45 view .LVU460
 1885 0016 80B2     		uxth	r0, r0
 1886 0018 20EA0500 		bic	r0, r0, r5
 1887 001c 5883     		strh	r0, [r3, #26]	@ movhi
 1888 001e F6E7     		b	.L173
 1889              	.LVL96:
 1890              	.L175:
1072:FWLIB/src/stm32f4xx_flash.c ****     }
 1891              		.loc 1 1072 7 is_stmt 1 view .LVU461
1072:FWLIB/src/stm32f4xx_flash.c ****     }
 1892              		.loc 1 1072 45 is_stmt 0 view .LVU462
 1893 0020 034A     		ldr	r2, .L178
 1894 0022 508B     		ldrh	r0, [r2, #26]
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 66


 1895              	.LVL97:
1072:FWLIB/src/stm32f4xx_flash.c ****     }
 1896              		.loc 1 1072 45 view .LVU463
 1897 0024 83B2     		uxth	r3, r0
1072:FWLIB/src/stm32f4xx_flash.c ****     }
 1898              		.loc 1 1072 48 view .LVU464
 1899 0026 A8B2     		uxth	r0, r5
1072:FWLIB/src/stm32f4xx_flash.c ****     }
 1900              		.loc 1 1072 45 view .LVU465
 1901 0028 1843     		orrs	r0, r0, r3
 1902 002a 5083     		strh	r0, [r2, #26]	@ movhi
1075:FWLIB/src/stm32f4xx_flash.c **** 
 1903              		.loc 1 1075 1 view .LVU466
 1904 002c EFE7     		b	.L173
 1905              	.L179:
 1906 002e 00BF     		.align	2
 1907              	.L178:
 1908 0030 003C0240 		.word	1073888256
 1909              		.cfi_endproc
 1910              	.LFE142:
 1912              		.section	.text.FLASH_OB_PCROPConfig,"ax",%progbits
 1913              		.align	1
 1914              		.global	FLASH_OB_PCROPConfig
 1915              		.syntax unified
 1916              		.thumb
 1917              		.thumb_func
 1918              		.fpu fpv4-sp-d16
 1920              	FLASH_OB_PCROPConfig:
 1921              	.LVL98:
 1922              	.LFB144:
1136:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1923              		.loc 1 1136 1 is_stmt 1 view -0
 1924              		.cfi_startproc
 1925              		@ args = 0, pretend = 0, frame = 0
 1926              		@ frame_needed = 0, uses_anonymous_args = 0
1136:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1927              		.loc 1 1136 1 is_stmt 0 view .LVU468
 1928 0000 38B5     		push	{r3, r4, r5, lr}
 1929              	.LCFI13:
 1930              		.cfi_def_cfa_offset 16
 1931              		.cfi_offset 3, -16
 1932              		.cfi_offset 4, -12
 1933              		.cfi_offset 5, -8
 1934              		.cfi_offset 14, -4
 1935 0002 0546     		mov	r5, r0
 1936 0004 0C46     		mov	r4, r1
1137:FWLIB/src/stm32f4xx_flash.c ****   
 1937              		.loc 1 1137 3 is_stmt 1 view .LVU469
 1938              	.LVL99:
1140:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1939              		.loc 1 1140 3 view .LVU470
1141:FWLIB/src/stm32f4xx_flash.c ****     
 1940              		.loc 1 1141 3 view .LVU471
1143:FWLIB/src/stm32f4xx_flash.c **** 
 1941              		.loc 1 1143 3 view .LVU472
1143:FWLIB/src/stm32f4xx_flash.c **** 
 1942              		.loc 1 1143 12 is_stmt 0 view .LVU473
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 67


 1943 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1944              	.LVL100:
1145:FWLIB/src/stm32f4xx_flash.c ****   { 
 1945              		.loc 1 1145 3 is_stmt 1 view .LVU474
1145:FWLIB/src/stm32f4xx_flash.c ****   { 
 1946              		.loc 1 1145 5 is_stmt 0 view .LVU475
 1947 000a 0928     		cmp	r0, #9
 1948 000c 00D0     		beq	.L184
 1949              	.LVL101:
 1950              	.L180:
1156:FWLIB/src/stm32f4xx_flash.c **** 
 1951              		.loc 1 1156 1 view .LVU476
 1952 000e 38BD     		pop	{r3, r4, r5, pc}
 1953              	.LVL102:
 1954              	.L184:
1147:FWLIB/src/stm32f4xx_flash.c ****     {
 1955              		.loc 1 1147 5 is_stmt 1 view .LVU477
1147:FWLIB/src/stm32f4xx_flash.c ****     {
 1956              		.loc 1 1147 7 is_stmt 0 view .LVU478
 1957 0010 34B1     		cbz	r4, .L182
1149:FWLIB/src/stm32f4xx_flash.c ****     }
 1958              		.loc 1 1149 7 is_stmt 1 view .LVU479
1149:FWLIB/src/stm32f4xx_flash.c ****     }
 1959              		.loc 1 1149 44 is_stmt 0 view .LVU480
 1960 0012 074A     		ldr	r2, .L185
 1961 0014 D08A     		ldrh	r0, [r2, #22]
 1962              	.LVL103:
1149:FWLIB/src/stm32f4xx_flash.c ****     }
 1963              		.loc 1 1149 44 view .LVU481
 1964 0016 83B2     		uxth	r3, r0
1149:FWLIB/src/stm32f4xx_flash.c ****     }
 1965              		.loc 1 1149 47 view .LVU482
 1966 0018 A8B2     		uxth	r0, r5
1149:FWLIB/src/stm32f4xx_flash.c ****     }
 1967              		.loc 1 1149 44 view .LVU483
 1968 001a 1843     		orrs	r0, r0, r3
 1969 001c D082     		strh	r0, [r2, #22]	@ movhi
 1970 001e F6E7     		b	.L180
 1971              	.LVL104:
 1972              	.L182:
1153:FWLIB/src/stm32f4xx_flash.c ****     }
 1973              		.loc 1 1153 7 is_stmt 1 view .LVU484
1153:FWLIB/src/stm32f4xx_flash.c ****     }
 1974              		.loc 1 1153 44 is_stmt 0 view .LVU485
 1975 0020 034B     		ldr	r3, .L185
 1976 0022 D88A     		ldrh	r0, [r3, #22]
 1977              	.LVL105:
1153:FWLIB/src/stm32f4xx_flash.c ****     }
 1978              		.loc 1 1153 44 view .LVU486
 1979 0024 80B2     		uxth	r0, r0
 1980 0026 20EA0500 		bic	r0, r0, r5
 1981 002a D882     		strh	r0, [r3, #22]	@ movhi
1156:FWLIB/src/stm32f4xx_flash.c **** 
 1982              		.loc 1 1156 1 view .LVU487
 1983 002c EFE7     		b	.L180
 1984              	.L186:
 1985 002e 00BF     		.align	2
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 68


 1986              	.L185:
 1987 0030 003C0240 		.word	1073888256
 1988              		.cfi_endproc
 1989              	.LFE144:
 1991              		.section	.text.FLASH_OB_PCROP1Config,"ax",%progbits
 1992              		.align	1
 1993              		.global	FLASH_OB_PCROP1Config
 1994              		.syntax unified
 1995              		.thumb
 1996              		.thumb_func
 1997              		.fpu fpv4-sp-d16
 1999              	FLASH_OB_PCROP1Config:
 2000              	.LVL106:
 2001              	.LFB145:
1173:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 2002              		.loc 1 1173 1 is_stmt 1 view -0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 0
 2005              		@ frame_needed = 0, uses_anonymous_args = 0
1173:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 2006              		.loc 1 1173 1 is_stmt 0 view .LVU489
 2007 0000 38B5     		push	{r3, r4, r5, lr}
 2008              	.LCFI14:
 2009              		.cfi_def_cfa_offset 16
 2010              		.cfi_offset 3, -16
 2011              		.cfi_offset 4, -12
 2012              		.cfi_offset 5, -8
 2013              		.cfi_offset 14, -4
 2014 0002 0546     		mov	r5, r0
 2015 0004 0C46     		mov	r4, r1
1174:FWLIB/src/stm32f4xx_flash.c ****   
 2016              		.loc 1 1174 3 is_stmt 1 view .LVU490
 2017              	.LVL107:
1177:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2018              		.loc 1 1177 3 view .LVU491
1178:FWLIB/src/stm32f4xx_flash.c ****     
 2019              		.loc 1 1178 3 view .LVU492
1180:FWLIB/src/stm32f4xx_flash.c **** 
 2020              		.loc 1 1180 3 view .LVU493
1180:FWLIB/src/stm32f4xx_flash.c **** 
 2021              		.loc 1 1180 12 is_stmt 0 view .LVU494
 2022 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2023              	.LVL108:
1182:FWLIB/src/stm32f4xx_flash.c ****   { 
 2024              		.loc 1 1182 3 is_stmt 1 view .LVU495
1182:FWLIB/src/stm32f4xx_flash.c ****   { 
 2025              		.loc 1 1182 5 is_stmt 0 view .LVU496
 2026 000a 0928     		cmp	r0, #9
 2027 000c 00D0     		beq	.L191
 2028              	.LVL109:
 2029              	.L187:
1193:FWLIB/src/stm32f4xx_flash.c **** 
 2030              		.loc 1 1193 1 view .LVU497
 2031 000e 38BD     		pop	{r3, r4, r5, pc}
 2032              	.LVL110:
 2033              	.L191:
1184:FWLIB/src/stm32f4xx_flash.c ****     {
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 69


 2034              		.loc 1 1184 5 is_stmt 1 view .LVU498
1184:FWLIB/src/stm32f4xx_flash.c ****     {
 2035              		.loc 1 1184 7 is_stmt 0 view .LVU499
 2036 0010 34B1     		cbz	r4, .L189
1186:FWLIB/src/stm32f4xx_flash.c ****     }
 2037              		.loc 1 1186 7 is_stmt 1 view .LVU500
1186:FWLIB/src/stm32f4xx_flash.c ****     }
 2038              		.loc 1 1186 45 is_stmt 0 view .LVU501
 2039 0012 074A     		ldr	r2, .L192
 2040 0014 508B     		ldrh	r0, [r2, #26]
 2041              	.LVL111:
1186:FWLIB/src/stm32f4xx_flash.c ****     }
 2042              		.loc 1 1186 45 view .LVU502
 2043 0016 83B2     		uxth	r3, r0
1186:FWLIB/src/stm32f4xx_flash.c ****     }
 2044              		.loc 1 1186 48 view .LVU503
 2045 0018 A8B2     		uxth	r0, r5
1186:FWLIB/src/stm32f4xx_flash.c ****     }
 2046              		.loc 1 1186 45 view .LVU504
 2047 001a 1843     		orrs	r0, r0, r3
 2048 001c 5083     		strh	r0, [r2, #26]	@ movhi
 2049 001e F6E7     		b	.L187
 2050              	.LVL112:
 2051              	.L189:
1190:FWLIB/src/stm32f4xx_flash.c ****     }
 2052              		.loc 1 1190 7 is_stmt 1 view .LVU505
1190:FWLIB/src/stm32f4xx_flash.c ****     }
 2053              		.loc 1 1190 45 is_stmt 0 view .LVU506
 2054 0020 034B     		ldr	r3, .L192
 2055 0022 588B     		ldrh	r0, [r3, #26]
 2056              	.LVL113:
1190:FWLIB/src/stm32f4xx_flash.c ****     }
 2057              		.loc 1 1190 45 view .LVU507
 2058 0024 80B2     		uxth	r0, r0
 2059 0026 20EA0500 		bic	r0, r0, r5
 2060 002a 5883     		strh	r0, [r3, #26]	@ movhi
1193:FWLIB/src/stm32f4xx_flash.c **** 
 2061              		.loc 1 1193 1 view .LVU508
 2062 002c EFE7     		b	.L187
 2063              	.L193:
 2064 002e 00BF     		.align	2
 2065              	.L192:
 2066 0030 003C0240 		.word	1073888256
 2067              		.cfi_endproc
 2068              	.LFE145:
 2070              		.section	.text.FLASH_OB_RDPConfig,"ax",%progbits
 2071              		.align	1
 2072              		.global	FLASH_OB_RDPConfig
 2073              		.syntax unified
 2074              		.thumb
 2075              		.thumb_func
 2076              		.fpu fpv4-sp-d16
 2078              	FLASH_OB_RDPConfig:
 2079              	.LVL114:
 2080              	.LFB146:
1209:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 2081              		.loc 1 1209 1 is_stmt 1 view -0
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 70


 2082              		.cfi_startproc
 2083              		@ args = 0, pretend = 0, frame = 0
 2084              		@ frame_needed = 0, uses_anonymous_args = 0
1209:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 2085              		.loc 1 1209 1 is_stmt 0 view .LVU510
 2086 0000 10B5     		push	{r4, lr}
 2087              	.LCFI15:
 2088              		.cfi_def_cfa_offset 8
 2089              		.cfi_offset 4, -8
 2090              		.cfi_offset 14, -4
 2091 0002 0446     		mov	r4, r0
1210:FWLIB/src/stm32f4xx_flash.c **** 
 2092              		.loc 1 1210 3 is_stmt 1 view .LVU511
 2093              	.LVL115:
1213:FWLIB/src/stm32f4xx_flash.c **** 
 2094              		.loc 1 1213 3 view .LVU512
1215:FWLIB/src/stm32f4xx_flash.c **** 
 2095              		.loc 1 1215 3 view .LVU513
1215:FWLIB/src/stm32f4xx_flash.c **** 
 2096              		.loc 1 1215 12 is_stmt 0 view .LVU514
 2097 0004 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2098              	.LVL116:
1217:FWLIB/src/stm32f4xx_flash.c ****   {
 2099              		.loc 1 1217 3 is_stmt 1 view .LVU515
1217:FWLIB/src/stm32f4xx_flash.c ****   {
 2100              		.loc 1 1217 5 is_stmt 0 view .LVU516
 2101 0008 0928     		cmp	r0, #9
 2102 000a 00D0     		beq	.L197
 2103              	.L194:
1222:FWLIB/src/stm32f4xx_flash.c **** 
 2104              		.loc 1 1222 1 view .LVU517
 2105 000c 10BD     		pop	{r4, pc}
 2106              	.L197:
1219:FWLIB/src/stm32f4xx_flash.c **** 
 2107              		.loc 1 1219 5 is_stmt 1 view .LVU518
1219:FWLIB/src/stm32f4xx_flash.c **** 
 2108              		.loc 1 1219 41 is_stmt 0 view .LVU519
 2109 000e 014B     		ldr	r3, .L198
 2110 0010 5C75     		strb	r4, [r3, #21]
1222:FWLIB/src/stm32f4xx_flash.c **** 
 2111              		.loc 1 1222 1 view .LVU520
 2112 0012 FBE7     		b	.L194
 2113              	.L199:
 2114              		.align	2
 2115              	.L198:
 2116 0014 003C0240 		.word	1073888256
 2117              		.cfi_endproc
 2118              	.LFE146:
 2120              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 2121              		.align	1
 2122              		.global	FLASH_OB_UserConfig
 2123              		.syntax unified
 2124              		.thumb
 2125              		.thumb_func
 2126              		.fpu fpv4-sp-d16
 2128              	FLASH_OB_UserConfig:
 2129              	.LVL117:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 71


 2130              	.LFB147:
1241:FWLIB/src/stm32f4xx_flash.c ****   uint8_t optiontmp = 0xFF;
 2131              		.loc 1 1241 1 is_stmt 1 view -0
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 0
 2134              		@ frame_needed = 0, uses_anonymous_args = 0
1241:FWLIB/src/stm32f4xx_flash.c ****   uint8_t optiontmp = 0xFF;
 2135              		.loc 1 1241 1 is_stmt 0 view .LVU522
 2136 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2137              	.LCFI16:
 2138              		.cfi_def_cfa_offset 24
 2139              		.cfi_offset 3, -24
 2140              		.cfi_offset 4, -20
 2141              		.cfi_offset 5, -16
 2142              		.cfi_offset 6, -12
 2143              		.cfi_offset 7, -8
 2144              		.cfi_offset 14, -4
 2145 0002 0446     		mov	r4, r0
 2146 0004 0E46     		mov	r6, r1
 2147 0006 1546     		mov	r5, r2
1242:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE; 
 2148              		.loc 1 1242 3 is_stmt 1 view .LVU523
 2149              	.LVL118:
1243:FWLIB/src/stm32f4xx_flash.c **** 
 2150              		.loc 1 1243 3 view .LVU524
1246:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_STOP_SOURCE(OB_STOP));
 2151              		.loc 1 1246 3 view .LVU525
1247:FWLIB/src/stm32f4xx_flash.c ****   assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));
 2152              		.loc 1 1247 3 view .LVU526
1248:FWLIB/src/stm32f4xx_flash.c **** 
 2153              		.loc 1 1248 3 view .LVU527
1251:FWLIB/src/stm32f4xx_flash.c ****   
 2154              		.loc 1 1251 3 view .LVU528
1251:FWLIB/src/stm32f4xx_flash.c ****   
 2155              		.loc 1 1251 12 is_stmt 0 view .LVU529
 2156 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2157              	.LVL119:
1253:FWLIB/src/stm32f4xx_flash.c ****   { 
 2158              		.loc 1 1253 3 is_stmt 1 view .LVU530
1253:FWLIB/src/stm32f4xx_flash.c ****   { 
 2159              		.loc 1 1253 5 is_stmt 0 view .LVU531
 2160 000c 0928     		cmp	r0, #9
 2161 000e 00D0     		beq	.L203
 2162              	.LVL120:
 2163              	.L200:
1268:FWLIB/src/stm32f4xx_flash.c **** 
 2164              		.loc 1 1268 1 view .LVU532
 2165 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2166              	.LVL121:
 2167              	.L203:
1262:FWLIB/src/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F446xx */ 
 2168              		.loc 1 1262 5 is_stmt 1 view .LVU533
1262:FWLIB/src/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F446xx */ 
 2169              		.loc 1 1262 67 is_stmt 0 view .LVU534
 2170 0012 064F     		ldr	r7, .L204
 2171 0014 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
1262:FWLIB/src/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F446xx */ 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 72


 2172              		.loc 1 1262 15 view .LVU535
 2173 0016 03F00F03 		and	r3, r3, #15
 2174              	.LVL122:
1266:FWLIB/src/stm32f4xx_flash.c ****   }  
 2175              		.loc 1 1266 5 is_stmt 1 view .LVU536
1266:FWLIB/src/stm32f4xx_flash.c ****   }  
 2176              		.loc 1 1266 75 is_stmt 0 view .LVU537
 2177 001a 43EA0601 		orr	r1, r3, r6
1266:FWLIB/src/stm32f4xx_flash.c ****   }  
 2178              		.loc 1 1266 54 view .LVU538
 2179 001e 41EA0502 		orr	r2, r1, r5
1266:FWLIB/src/stm32f4xx_flash.c ****   }  
 2180              		.loc 1 1266 42 view .LVU539
 2181 0022 42EA0400 		orr	r0, r2, r4
 2182              	.LVL123:
1266:FWLIB/src/stm32f4xx_flash.c ****   }  
 2183              		.loc 1 1266 42 view .LVU540
 2184 0026 3875     		strb	r0, [r7, #20]
1268:FWLIB/src/stm32f4xx_flash.c **** 
 2185              		.loc 1 1268 1 view .LVU541
 2186 0028 F2E7     		b	.L200
 2187              	.L205:
 2188 002a 00BF     		.align	2
 2189              	.L204:
 2190 002c 003C0240 		.word	1073888256
 2191              		.cfi_endproc
 2192              	.LFE147:
 2194              		.section	.text.FLASH_OB_Launch,"ax",%progbits
 2195              		.align	1
 2196              		.global	FLASH_OB_Launch
 2197              		.syntax unified
 2198              		.thumb
 2199              		.thumb_func
 2200              		.fpu fpv4-sp-d16
 2202              	FLASH_OB_Launch:
 2203              	.LFB150:
1320:FWLIB/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 2204              		.loc 1 1320 1 is_stmt 1 view -0
 2205              		.cfi_startproc
 2206              		@ args = 0, pretend = 0, frame = 0
 2207              		@ frame_needed = 0, uses_anonymous_args = 0
 2208 0000 08B5     		push	{r3, lr}
 2209              	.LCFI17:
 2210              		.cfi_def_cfa_offset 8
 2211              		.cfi_offset 3, -8
 2212              		.cfi_offset 14, -4
1321:FWLIB/src/stm32f4xx_flash.c **** 
 2213              		.loc 1 1321 3 view .LVU543
 2214              	.LVL124:
1324:FWLIB/src/stm32f4xx_flash.c **** 
 2215              		.loc 1 1324 3 view .LVU544
1324:FWLIB/src/stm32f4xx_flash.c **** 
 2216              		.loc 1 1324 40 is_stmt 0 view .LVU545
 2217 0002 044A     		ldr	r2, .L208
 2218 0004 137D     		ldrb	r3, [r2, #20]	@ zero_extendqisi2
 2219 0006 43F00203 		orr	r3, r3, #2
 2220 000a 1375     		strb	r3, [r2, #20]
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 73


1327:FWLIB/src/stm32f4xx_flash.c **** 
 2221              		.loc 1 1327 3 is_stmt 1 view .LVU546
1327:FWLIB/src/stm32f4xx_flash.c **** 
 2222              		.loc 1 1327 12 is_stmt 0 view .LVU547
 2223 000c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2224              	.LVL125:
1329:FWLIB/src/stm32f4xx_flash.c **** }
 2225              		.loc 1 1329 3 is_stmt 1 view .LVU548
1330:FWLIB/src/stm32f4xx_flash.c **** 
 2226              		.loc 1 1330 1 is_stmt 0 view .LVU549
 2227 0010 08BD     		pop	{r3, pc}
 2228              	.L209:
 2229 0012 00BF     		.align	2
 2230              	.L208:
 2231 0014 003C0240 		.word	1073888256
 2232              		.cfi_endproc
 2233              	.LFE150:
 2235              		.text
 2236              	.Letext0:
 2237              		.file 2 "/usr/local/arm-none-eabi-gcc/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/mac
 2238              		.file 3 "/usr/local/arm-none-eabi-gcc/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys
 2239              		.file 4 "USER/stm32f4xx.h"
 2240              		.file 5 "FWLIB/inc/stm32f4xx_flash.h"
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 74


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_flash.c
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:18     .text.FLASH_SetLatency:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:26     .text.FLASH_SetLatency:0000000000000000 FLASH_SetLatency
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:48     .text.FLASH_SetLatency:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:53     .text.FLASH_PrefetchBufferCmd:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:60     .text.FLASH_PrefetchBufferCmd:0000000000000000 FLASH_PrefetchBufferCmd
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:91     .text.FLASH_PrefetchBufferCmd:000000000000001c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:96     .text.FLASH_InstructionCacheCmd:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:103    .text.FLASH_InstructionCacheCmd:0000000000000000 FLASH_InstructionCacheCmd
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:134    .text.FLASH_InstructionCacheCmd:000000000000001c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:139    .text.FLASH_DataCacheCmd:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:146    .text.FLASH_DataCacheCmd:0000000000000000 FLASH_DataCacheCmd
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:177    .text.FLASH_DataCacheCmd:000000000000001c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:182    .text.FLASH_InstructionCacheReset:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:189    .text.FLASH_InstructionCacheReset:0000000000000000 FLASH_InstructionCacheReset
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:207    .text.FLASH_InstructionCacheReset:000000000000000c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:212    .text.FLASH_DataCacheReset:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:219    .text.FLASH_DataCacheReset:0000000000000000 FLASH_DataCacheReset
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:237    .text.FLASH_DataCacheReset:000000000000000c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:242    .text.FLASH_Unlock:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:249    .text.FLASH_Unlock:0000000000000000 FLASH_Unlock
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:281    .text.FLASH_Unlock:0000000000000018 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:287    .text.FLASH_Lock:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:294    .text.FLASH_Lock:0000000000000000 FLASH_Lock
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:312    .text.FLASH_Lock:000000000000000c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:317    .text.FLASH_OB_Unlock:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:324    .text.FLASH_OB_Unlock:0000000000000000 FLASH_OB_Unlock
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:353    .text.FLASH_OB_Unlock:0000000000000018 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:359    .text.FLASH_OB_Lock:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:366    .text.FLASH_OB_Lock:0000000000000000 FLASH_OB_Lock
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:384    .text.FLASH_OB_Lock:000000000000000c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:389    .text.FLASH_OB_PCROPSelectionConfig:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:396    .text.FLASH_OB_PCROPSelectionConfig:0000000000000000 FLASH_OB_PCROPSelectionConfig
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:424    .text.FLASH_OB_PCROPSelectionConfig:0000000000000010 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:429    .text.FLASH_OB_BootConfig:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:436    .text.FLASH_OB_BootConfig:0000000000000000 FLASH_OB_BootConfig
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:461    .text.FLASH_OB_BootConfig:0000000000000014 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:466    .text.FLASH_OB_BORConfig:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:473    .text.FLASH_OB_BORConfig:0000000000000000 FLASH_OB_BORConfig
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:498    .text.FLASH_OB_BORConfig:0000000000000014 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:503    .text.FLASH_OB_GetUser:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:510    .text.FLASH_OB_GetUser:0000000000000000 FLASH_OB_GetUser
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:527    .text.FLASH_OB_GetUser:000000000000000c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:532    .text.FLASH_OB_GetWRP:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:539    .text.FLASH_OB_GetWRP:0000000000000000 FLASH_OB_GetWRP
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:556    .text.FLASH_OB_GetWRP:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:561    .text.FLASH_OB_GetWRP1:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:568    .text.FLASH_OB_GetWRP1:0000000000000000 FLASH_OB_GetWRP1
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:585    .text.FLASH_OB_GetWRP1:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:590    .text.FLASH_OB_GetPCROP:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:597    .text.FLASH_OB_GetPCROP:0000000000000000 FLASH_OB_GetPCROP
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:614    .text.FLASH_OB_GetPCROP:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:619    .text.FLASH_OB_GetPCROP1:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:626    .text.FLASH_OB_GetPCROP1:0000000000000000 FLASH_OB_GetPCROP1
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:643    .text.FLASH_OB_GetPCROP1:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:648    .text.FLASH_OB_GetRDP:0000000000000000 $t
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 75


/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:655    .text.FLASH_OB_GetRDP:0000000000000000 FLASH_OB_GetRDP
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:685    .text.FLASH_OB_GetRDP:0000000000000014 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:690    .text.FLASH_OB_GetBOR:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:697    .text.FLASH_OB_GetBOR:0000000000000000 FLASH_OB_GetBOR
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:714    .text.FLASH_OB_GetBOR:000000000000000c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:719    .text.FLASH_ITConfig:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:726    .text.FLASH_ITConfig:0000000000000000 FLASH_ITConfig
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:763    .text.FLASH_ITConfig:0000000000000018 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:768    .text.FLASH_GetFlagStatus:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:775    .text.FLASH_GetFlagStatus:0000000000000000 FLASH_GetFlagStatus
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:808    .text.FLASH_GetFlagStatus:0000000000000010 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:813    .text.FLASH_ClearFlag:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:820    .text.FLASH_ClearFlag:0000000000000000 FLASH_ClearFlag
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:838    .text.FLASH_ClearFlag:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:843    .text.FLASH_GetStatus:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:850    .text.FLASH_GetStatus:0000000000000000 FLASH_GetStatus
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:923    .text.FLASH_GetStatus:000000000000004c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:928    .text.FLASH_WaitForLastOperation:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:935    .text.FLASH_WaitForLastOperation:0000000000000000 FLASH_WaitForLastOperation
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:989    .text.FLASH_EraseSector:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:996    .text.FLASH_EraseSector:0000000000000000 FLASH_EraseSector
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1109   .text.FLASH_EraseSector:000000000000006c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1114   .text.FLASH_EraseAllSectors:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1121   .text.FLASH_EraseAllSectors:0000000000000000 FLASH_EraseAllSectors
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1218   .text.FLASH_EraseAllSectors:000000000000005c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1223   .text.FLASH_EraseAllBank1Sectors:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1230   .text.FLASH_EraseAllBank1Sectors:0000000000000000 FLASH_EraseAllBank1Sectors
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1327   .text.FLASH_EraseAllBank1Sectors:000000000000005c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1332   .text.FLASH_EraseAllBank2Sectors:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1339   .text.FLASH_EraseAllBank2Sectors:0000000000000000 FLASH_EraseAllBank2Sectors
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1436   .text.FLASH_EraseAllBank2Sectors:000000000000005c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1441   .text.FLASH_ProgramDoubleWord:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1448   .text.FLASH_ProgramDoubleWord:0000000000000000 FLASH_ProgramDoubleWord
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1517   .text.FLASH_ProgramDoubleWord:0000000000000040 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1522   .text.FLASH_ProgramWord:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1529   .text.FLASH_ProgramWord:0000000000000000 FLASH_ProgramWord
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1595   .text.FLASH_ProgramWord:000000000000003c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1600   .text.FLASH_ProgramHalfWord:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1607   .text.FLASH_ProgramHalfWord:0000000000000000 FLASH_ProgramHalfWord
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1673   .text.FLASH_ProgramHalfWord:000000000000003c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1678   .text.FLASH_ProgramByte:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1685   .text.FLASH_ProgramByte:0000000000000000 FLASH_ProgramByte
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1750   .text.FLASH_ProgramByte:0000000000000038 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1755   .text.FLASH_OB_WRPConfig:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1762   .text.FLASH_OB_WRPConfig:0000000000000000 FLASH_OB_WRPConfig
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1829   .text.FLASH_OB_WRPConfig:0000000000000030 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1834   .text.FLASH_OB_WRP1Config:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1841   .text.FLASH_OB_WRP1Config:0000000000000000 FLASH_OB_WRP1Config
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1908   .text.FLASH_OB_WRP1Config:0000000000000030 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1913   .text.FLASH_OB_PCROPConfig:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1920   .text.FLASH_OB_PCROPConfig:0000000000000000 FLASH_OB_PCROPConfig
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1987   .text.FLASH_OB_PCROPConfig:0000000000000030 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1992   .text.FLASH_OB_PCROP1Config:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:1999   .text.FLASH_OB_PCROP1Config:0000000000000000 FLASH_OB_PCROP1Config
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:2066   .text.FLASH_OB_PCROP1Config:0000000000000030 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:2071   .text.FLASH_OB_RDPConfig:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:2078   .text.FLASH_OB_RDPConfig:0000000000000000 FLASH_OB_RDPConfig
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s 			page 76


/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:2116   .text.FLASH_OB_RDPConfig:0000000000000014 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:2121   .text.FLASH_OB_UserConfig:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:2128   .text.FLASH_OB_UserConfig:0000000000000000 FLASH_OB_UserConfig
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:2190   .text.FLASH_OB_UserConfig:000000000000002c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:2195   .text.FLASH_OB_Launch:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:2202   .text.FLASH_OB_Launch:0000000000000000 FLASH_OB_Launch
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccouvo66.s:2231   .text.FLASH_OB_Launch:0000000000000014 $d

NO UNDEFINED SYMBOLS
