ARM GAS  /tmp/ccx60mvJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"periph_flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Flash_ReadFromADDR,"ax",%progbits
  18              		.align	1
  19              		.global	Flash_ReadFromADDR
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Flash_ReadFromADDR:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "Bsp/periph_flash.c"
   1:Bsp/periph_flash.c **** #include "periph_flash.h"
   2:Bsp/periph_flash.c **** 
   3:Bsp/periph_flash.c **** u32 Flash_ReadFromADDR(u32 faddr)
   4:Bsp/periph_flash.c **** {
  30              		.loc 1 4 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
   5:Bsp/periph_flash.c ****   return *(vu32*)faddr;
  35              		.loc 1 5 3 view .LVU1
  36              		.loc 1 5 10 is_stmt 0 view .LVU2
  37 0000 0068     		ldr	r0, [r0]
  38              	.LVL1:
   6:Bsp/periph_flash.c **** }
  39              		.loc 1 6 1 view .LVU3
  40 0002 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE123:
  44              		.section	.text.FLASH_ReadBuff,"ax",%progbits
  45              		.align	1
  46              		.global	FLASH_ReadBuff
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv4-sp-d16
  52              	FLASH_ReadBuff:
  53              	.LVL2:
  54              	.LFB124:
ARM GAS  /tmp/ccx60mvJ.s 			page 2


   7:Bsp/periph_flash.c **** 
   8:Bsp/periph_flash.c **** void FLASH_ReadBuff(u32 ReadAddr,u32 *pBuffer,u32 NumToRead)
   9:Bsp/periph_flash.c **** {
  55              		.loc 1 9 1 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		.loc 1 9 1 is_stmt 0 view .LVU5
  60 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 24
  63              		.cfi_offset 3, -24
  64              		.cfi_offset 4, -20
  65              		.cfi_offset 5, -16
  66              		.cfi_offset 6, -12
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 0546     		mov	r5, r0
  70 0004 0F46     		mov	r7, r1
  71 0006 1646     		mov	r6, r2
  10:Bsp/periph_flash.c ****   u32 i;
  72              		.loc 1 10 3 is_stmt 1 view .LVU6
  11:Bsp/periph_flash.c ****   for(i = 0; i < NumToRead; i++)
  73              		.loc 1 11 3 view .LVU7
  74              	.LVL3:
  75              		.loc 1 11 9 is_stmt 0 view .LVU8
  76 0008 0024     		movs	r4, #0
  77              	.LVL4:
  78              	.L3:
  79              		.loc 1 11 3 discriminator 1 view .LVU9
  80 000a B442     		cmp	r4, r6
  81 000c 07D2     		bcs	.L6
  12:Bsp/periph_flash.c ****   {
  13:Bsp/periph_flash.c ****     pBuffer[i] = Flash_ReadFromADDR(ReadAddr);
  82              		.loc 1 13 5 is_stmt 1 discriminator 3 view .LVU10
  83              		.loc 1 13 18 is_stmt 0 discriminator 3 view .LVU11
  84 000e 2846     		mov	r0, r5
  85 0010 FFF7FEFF 		bl	Flash_ReadFromADDR
  86              	.LVL5:
  87              		.loc 1 13 16 discriminator 3 view .LVU12
  88 0014 47F82400 		str	r0, [r7, r4, lsl #2]
  14:Bsp/periph_flash.c ****     ReadAddr += SIZE;
  89              		.loc 1 14 5 is_stmt 1 discriminator 3 view .LVU13
  90              		.loc 1 14 14 is_stmt 0 discriminator 3 view .LVU14
  91 0018 0435     		adds	r5, r5, #4
  92              	.LVL6:
  11:Bsp/periph_flash.c ****   for(i = 0; i < NumToRead; i++)
  93              		.loc 1 11 30 discriminator 3 view .LVU15
  94 001a 0134     		adds	r4, r4, #1
  95              	.LVL7:
  11:Bsp/periph_flash.c ****   for(i = 0; i < NumToRead; i++)
  96              		.loc 1 11 30 discriminator 3 view .LVU16
  97 001c F5E7     		b	.L3
  98              	.L6:
  15:Bsp/periph_flash.c ****   }
  16:Bsp/periph_flash.c **** }
  99              		.loc 1 16 1 view .LVU17
ARM GAS  /tmp/ccx60mvJ.s 			page 3


 100 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 101              		.loc 1 16 1 view .LVU18
 102              		.cfi_endproc
 103              	.LFE124:
 105              		.section	.text.FLASH_GetFlashSector,"ax",%progbits
 106              		.align	1
 107              		.global	FLASH_GetFlashSector
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 111              		.fpu fpv4-sp-d16
 113              	FLASH_GetFlashSector:
 114              	.LVL8:
 115              	.LFB125:
  17:Bsp/periph_flash.c **** 
  18:Bsp/periph_flash.c **** u8 FLASH_GetFlashSector(u32 addr)
  19:Bsp/periph_flash.c **** {
 116              		.loc 1 19 1 is_stmt 1 view -0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
  20:Bsp/periph_flash.c ****   if(addr<ADDR_FLASH_SECTOR_1)	return FLASH_Sector_0;
 121              		.loc 1 20 3 view .LVU20
 122              		.loc 1 20 5 is_stmt 0 view .LVU21
 123 0000 154B     		ldr	r3, .L16
 124 0002 9842     		cmp	r0, r3
 125 0004 19D9     		bls	.L9
  21:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_2)	return FLASH_Sector_1;
 126              		.loc 1 21 8 is_stmt 1 view .LVU22
 127              		.loc 1 21 10 is_stmt 0 view .LVU23
 128 0006 03F58043 		add	r3, r3, #16384
 129 000a 9842     		cmp	r0, r3
 130 000c 17D9     		bls	.L10
  22:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_3)	return FLASH_Sector_2;
 131              		.loc 1 22 8 is_stmt 1 view .LVU24
 132              		.loc 1 22 10 is_stmt 0 view .LVU25
 133 000e 03F58043 		add	r3, r3, #16384
 134 0012 9842     		cmp	r0, r3
 135 0014 15D9     		bls	.L11
  23:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_4)	return FLASH_Sector_3;
 136              		.loc 1 23 8 is_stmt 1 view .LVU26
 137              		.loc 1 23 10 is_stmt 0 view .LVU27
 138 0016 03F58043 		add	r3, r3, #16384
 139 001a 9842     		cmp	r0, r3
 140 001c 13D9     		bls	.L12
  24:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_5)	return FLASH_Sector_4;
 141              		.loc 1 24 8 is_stmt 1 view .LVU28
 142              		.loc 1 24 10 is_stmt 0 view .LVU29
 143 001e 03F58033 		add	r3, r3, #65536
 144 0022 9842     		cmp	r0, r3
 145 0024 11D9     		bls	.L13
  25:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_6)	return FLASH_Sector_5;
 146              		.loc 1 25 8 is_stmt 1 view .LVU30
 147              		.loc 1 25 10 is_stmt 0 view .LVU31
 148 0026 03F50033 		add	r3, r3, #131072
 149 002a 9842     		cmp	r0, r3
ARM GAS  /tmp/ccx60mvJ.s 			page 4


 150 002c 0FD9     		bls	.L14
  26:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_7)	return FLASH_Sector_6;
 151              		.loc 1 26 8 is_stmt 1 view .LVU32
 152              		.loc 1 26 10 is_stmt 0 view .LVU33
 153 002e 03F50033 		add	r3, r3, #131072
 154 0032 9842     		cmp	r0, r3
 155 0034 0DD9     		bls	.L15
  27:Bsp/periph_flash.c ****   return FLASH_Sector_7;
 156              		.loc 1 27 10 view .LVU34
 157 0036 3820     		movs	r0, #56
 158              	.LVL9:
 159              		.loc 1 27 10 view .LVU35
 160 0038 7047     		bx	lr
 161              	.LVL10:
 162              	.L9:
  20:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_2)	return FLASH_Sector_1;
 163              		.loc 1 20 39 view .LVU36
 164 003a 0020     		movs	r0, #0
 165              	.LVL11:
  20:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_2)	return FLASH_Sector_1;
 166              		.loc 1 20 39 view .LVU37
 167 003c 7047     		bx	lr
 168              	.LVL12:
 169              	.L10:
  21:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_3)	return FLASH_Sector_2;
 170              		.loc 1 21 44 view .LVU38
 171 003e 0820     		movs	r0, #8
 172              	.LVL13:
  21:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_3)	return FLASH_Sector_2;
 173              		.loc 1 21 44 view .LVU39
 174 0040 7047     		bx	lr
 175              	.LVL14:
 176              	.L11:
  22:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_4)	return FLASH_Sector_3;
 177              		.loc 1 22 44 view .LVU40
 178 0042 1020     		movs	r0, #16
 179              	.LVL15:
  22:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_4)	return FLASH_Sector_3;
 180              		.loc 1 22 44 view .LVU41
 181 0044 7047     		bx	lr
 182              	.LVL16:
 183              	.L12:
  23:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_5)	return FLASH_Sector_4;
 184              		.loc 1 23 44 view .LVU42
 185 0046 1820     		movs	r0, #24
 186              	.LVL17:
  23:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_5)	return FLASH_Sector_4;
 187              		.loc 1 23 44 view .LVU43
 188 0048 7047     		bx	lr
 189              	.LVL18:
 190              	.L13:
  24:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_6)	return FLASH_Sector_5;
 191              		.loc 1 24 44 view .LVU44
 192 004a 2020     		movs	r0, #32
 193              	.LVL19:
  24:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_6)	return FLASH_Sector_5;
 194              		.loc 1 24 44 view .LVU45
ARM GAS  /tmp/ccx60mvJ.s 			page 5


 195 004c 7047     		bx	lr
 196              	.LVL20:
 197              	.L14:
  25:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_7)	return FLASH_Sector_6;
 198              		.loc 1 25 44 view .LVU46
 199 004e 2820     		movs	r0, #40
 200              	.LVL21:
  25:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_7)	return FLASH_Sector_6;
 201              		.loc 1 25 44 view .LVU47
 202 0050 7047     		bx	lr
 203              	.LVL22:
 204              	.L15:
  26:Bsp/periph_flash.c ****   return FLASH_Sector_7;
 205              		.loc 1 26 44 view .LVU48
 206 0052 3020     		movs	r0, #48
 207              	.LVL23:
  28:Bsp/periph_flash.c **** }
 208              		.loc 1 28 1 view .LVU49
 209 0054 7047     		bx	lr
 210              	.L17:
 211 0056 00BF     		.align	2
 212              	.L16:
 213 0058 FF3F0008 		.word	134234111
 214              		.cfi_endproc
 215              	.LFE125:
 217              		.section	.text.FLASH_Write,"ax",%progbits
 218              		.align	1
 219              		.global	FLASH_Write
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv4-sp-d16
 225              	FLASH_Write:
 226              	.LVL24:
 227              	.LFB126:
  29:Bsp/periph_flash.c **** 
  30:Bsp/periph_flash.c **** void FLASH_Write(u32 WriteAddr,u32 *pBuffer,u32 NumToWrite)
  31:Bsp/periph_flash.c **** {
 228              		.loc 1 31 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
  32:Bsp/periph_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 232              		.loc 1 32 3 view .LVU51
  33:Bsp/periph_flash.c ****   u32 addrx = 0;
 233              		.loc 1 33 3 view .LVU52
  34:Bsp/periph_flash.c ****   u32 endaddr = 0;
 234              		.loc 1 34 3 view .LVU53
  35:Bsp/periph_flash.c **** 
  36:Bsp/periph_flash.c ****   if(WriteAddr < STM32_FLASH_BASE || WriteAddr % SIZE) return;
 235              		.loc 1 36 3 view .LVU54
 236              		.loc 1 36 5 is_stmt 0 view .LVU55
 237 0000 B0F1006F 		cmp	r0, #134217728
 238 0004 3ED3     		bcc	.L31
  31:Bsp/periph_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 239              		.loc 1 31 1 discriminator 2 view .LVU56
 240 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  /tmp/ccx60mvJ.s 			page 6


 241              	.LCFI1:
 242              		.cfi_def_cfa_offset 24
 243              		.cfi_offset 4, -24
 244              		.cfi_offset 5, -20
 245              		.cfi_offset 6, -16
 246              		.cfi_offset 7, -12
 247              		.cfi_offset 8, -8
 248              		.cfi_offset 14, -4
 249 000a 0446     		mov	r4, r0
 250 000c 0E46     		mov	r6, r1
 251 000e 1746     		mov	r7, r2
 252              		.loc 1 36 35 discriminator 2 view .LVU57
 253 0010 10F0030F 		tst	r0, #3
 254 0014 01D0     		beq	.L34
 255              	.LVL25:
 256              	.L18:
  37:Bsp/periph_flash.c **** 
  38:Bsp/periph_flash.c ****   FLASH_Unlock();                                  
  39:Bsp/periph_flash.c ****   FLASH_DataCacheCmd(DISABLE);                     
  40:Bsp/periph_flash.c **** 
  41:Bsp/periph_flash.c ****   addrx = WriteAddr;                                  
  42:Bsp/periph_flash.c ****   endaddr = WriteAddr + NumToWrite * SIZE;                   
  43:Bsp/periph_flash.c **** 
  44:Bsp/periph_flash.c ****   if(addrx < 0X1FFF0000)                              
  45:Bsp/periph_flash.c ****   {
  46:Bsp/periph_flash.c ****     while(addrx < endaddr)                            
  47:Bsp/periph_flash.c ****     {
  48:Bsp/periph_flash.c ****       if(Flash_ReadFromADDR(addrx) != 0XFFFFFFFF)      
  49:Bsp/periph_flash.c ****       {
  50:Bsp/periph_flash.c ****         status=FLASH_EraseSector(FLASH_GetFlashSector(addrx), VoltageRange_3);
  51:Bsp/periph_flash.c **** 
  52:Bsp/periph_flash.c ****         if(status!=FLASH_COMPLETE)break;            
  53:Bsp/periph_flash.c ****       }
  54:Bsp/periph_flash.c ****       else addrx += SIZE;
  55:Bsp/periph_flash.c ****     }
  56:Bsp/periph_flash.c ****   }
  57:Bsp/periph_flash.c ****   if(status == FLASH_COMPLETE)
  58:Bsp/periph_flash.c ****   {
  59:Bsp/periph_flash.c ****     while(WriteAddr < endaddr)
  60:Bsp/periph_flash.c ****     {
  61:Bsp/periph_flash.c ****       if(FLASH_ProgramWord(WriteAddr, *pBuffer) != FLASH_COMPLETE)
  62:Bsp/periph_flash.c ****       {
  63:Bsp/periph_flash.c ****         break;
  64:Bsp/periph_flash.c ****       }
  65:Bsp/periph_flash.c **** 
  66:Bsp/periph_flash.c ****       WriteAddr += SIZE;
  67:Bsp/periph_flash.c ****       pBuffer++;
  68:Bsp/periph_flash.c ****     }
  69:Bsp/periph_flash.c ****   }
  70:Bsp/periph_flash.c **** 
  71:Bsp/periph_flash.c ****   FLASH_DataCacheCmd(ENABLE);
  72:Bsp/periph_flash.c ****   FLASH_Lock();
  73:Bsp/periph_flash.c **** }
 257              		.loc 1 73 1 view .LVU58
 258 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 259              	.LVL26:
 260              	.L34:
ARM GAS  /tmp/ccx60mvJ.s 			page 7


  38:Bsp/periph_flash.c ****   FLASH_DataCacheCmd(DISABLE);                     
 261              		.loc 1 38 3 is_stmt 1 view .LVU59
 262 001a FFF7FEFF 		bl	FLASH_Unlock
 263              	.LVL27:
  39:Bsp/periph_flash.c **** 
 264              		.loc 1 39 3 view .LVU60
 265 001e 0020     		movs	r0, #0
 266 0020 FFF7FEFF 		bl	FLASH_DataCacheCmd
 267              	.LVL28:
  41:Bsp/periph_flash.c ****   endaddr = WriteAddr + NumToWrite * SIZE;                   
 268              		.loc 1 41 3 view .LVU61
  42:Bsp/periph_flash.c **** 
 269              		.loc 1 42 3 view .LVU62
  42:Bsp/periph_flash.c **** 
 270              		.loc 1 42 11 is_stmt 0 view .LVU63
 271 0024 04EB8707 		add	r7, r4, r7, lsl #2
 272              	.LVL29:
  44:Bsp/periph_flash.c ****   {
 273              		.loc 1 44 3 is_stmt 1 view .LVU64
  44:Bsp/periph_flash.c ****   {
 274              		.loc 1 44 5 is_stmt 0 view .LVU65
 275 0028 174B     		ldr	r3, .L36
 276 002a 9C42     		cmp	r4, r3
 277 002c 1DD9     		bls	.L29
 278              	.LVL30:
 279              	.L21:
  59:Bsp/periph_flash.c ****     {
 280              		.loc 1 59 10 view .LVU66
 281 002e BC42     		cmp	r4, r7
 282 0030 22D2     		bcs	.L27
  61:Bsp/periph_flash.c ****       {
 283              		.loc 1 61 7 is_stmt 1 view .LVU67
  61:Bsp/periph_flash.c ****       {
 284              		.loc 1 61 10 is_stmt 0 view .LVU68
 285 0032 3168     		ldr	r1, [r6]
 286 0034 2046     		mov	r0, r4
 287 0036 FFF7FEFF 		bl	FLASH_ProgramWord
 288              	.LVL31:
  61:Bsp/periph_flash.c ****       {
 289              		.loc 1 61 9 view .LVU69
 290 003a 0928     		cmp	r0, #9
 291 003c 1CD1     		bne	.L27
  66:Bsp/periph_flash.c ****       pBuffer++;
 292              		.loc 1 66 7 is_stmt 1 view .LVU70
  66:Bsp/periph_flash.c ****       pBuffer++;
 293              		.loc 1 66 17 is_stmt 0 view .LVU71
 294 003e 0434     		adds	r4, r4, #4
 295              	.LVL32:
  67:Bsp/periph_flash.c ****     }
 296              		.loc 1 67 7 is_stmt 1 view .LVU72
  67:Bsp/periph_flash.c ****     }
 297              		.loc 1 67 14 is_stmt 0 view .LVU73
 298 0040 0436     		adds	r6, r6, #4
 299              	.LVL33:
  67:Bsp/periph_flash.c ****     }
 300              		.loc 1 67 14 view .LVU74
 301 0042 F4E7     		b	.L21
ARM GAS  /tmp/ccx60mvJ.s 			page 8


 302              	.LVL34:
 303              	.L35:
  50:Bsp/periph_flash.c **** 
 304              		.loc 1 50 9 is_stmt 1 view .LVU75
  50:Bsp/periph_flash.c **** 
 305              		.loc 1 50 34 is_stmt 0 view .LVU76
 306 0044 2846     		mov	r0, r5
 307 0046 FFF7FEFF 		bl	FLASH_GetFlashSector
 308              	.LVL35:
  50:Bsp/periph_flash.c **** 
 309              		.loc 1 50 16 view .LVU77
 310 004a 0221     		movs	r1, #2
 311 004c FFF7FEFF 		bl	FLASH_EraseSector
 312              	.LVL36:
 313 0050 8046     		mov	r8, r0
 314              	.LVL37:
  52:Bsp/periph_flash.c ****       }
 315              		.loc 1 52 9 is_stmt 1 view .LVU78
  52:Bsp/periph_flash.c ****       }
 316              		.loc 1 52 11 is_stmt 0 view .LVU79
 317 0052 0928     		cmp	r0, #9
 318 0054 0DD1     		bne	.L23
 319              	.LVL38:
 320              	.L20:
  46:Bsp/periph_flash.c ****     {
 321              		.loc 1 46 10 view .LVU80
 322 0056 BD42     		cmp	r5, r7
 323 0058 0BD2     		bcs	.L23
  48:Bsp/periph_flash.c ****       {
 324              		.loc 1 48 7 is_stmt 1 view .LVU81
  48:Bsp/periph_flash.c ****       {
 325              		.loc 1 48 10 is_stmt 0 view .LVU82
 326 005a 2846     		mov	r0, r5
 327 005c FFF7FEFF 		bl	Flash_ReadFromADDR
 328              	.LVL39:
  48:Bsp/periph_flash.c ****       {
 329              		.loc 1 48 9 view .LVU83
 330 0060 B0F1FF3F 		cmp	r0, #-1
 331 0064 EED1     		bne	.L35
  54:Bsp/periph_flash.c ****     }
 332              		.loc 1 54 12 is_stmt 1 view .LVU84
  54:Bsp/periph_flash.c ****     }
 333              		.loc 1 54 18 is_stmt 0 view .LVU85
 334 0066 0435     		adds	r5, r5, #4
 335              	.LVL40:
  54:Bsp/periph_flash.c ****     }
 336              		.loc 1 54 18 view .LVU86
 337 0068 F5E7     		b	.L20
 338              	.LVL41:
 339              	.L29:
  41:Bsp/periph_flash.c ****   endaddr = WriteAddr + NumToWrite * SIZE;                   
 340              		.loc 1 41 9 view .LVU87
 341 006a 2546     		mov	r5, r4
  32:Bsp/periph_flash.c ****   u32 addrx = 0;
 342              		.loc 1 32 16 view .LVU88
 343 006c 4FF00908 		mov	r8, #9
 344 0070 F1E7     		b	.L20
ARM GAS  /tmp/ccx60mvJ.s 			page 9


 345              	.LVL42:
 346              	.L23:
  57:Bsp/periph_flash.c ****   {
 347              		.loc 1 57 3 is_stmt 1 view .LVU89
  57:Bsp/periph_flash.c ****   {
 348              		.loc 1 57 5 is_stmt 0 view .LVU90
 349 0072 B8F1090F 		cmp	r8, #9
 350 0076 DAD0     		beq	.L21
 351              	.LVL43:
 352              	.L27:
  71:Bsp/periph_flash.c ****   FLASH_Lock();
 353              		.loc 1 71 3 is_stmt 1 view .LVU91
 354 0078 0120     		movs	r0, #1
 355 007a FFF7FEFF 		bl	FLASH_DataCacheCmd
 356              	.LVL44:
  72:Bsp/periph_flash.c **** }
 357              		.loc 1 72 3 view .LVU92
 358 007e FFF7FEFF 		bl	FLASH_Lock
 359              	.LVL45:
 360 0082 C8E7     		b	.L18
 361              	.LVL46:
 362              	.L31:
 363              	.LCFI2:
 364              		.cfi_def_cfa_offset 0
 365              		.cfi_restore 4
 366              		.cfi_restore 5
 367              		.cfi_restore 6
 368              		.cfi_restore 7
 369              		.cfi_restore 8
 370              		.cfi_restore 14
  72:Bsp/periph_flash.c **** }
 371              		.loc 1 72 3 is_stmt 0 view .LVU93
 372 0084 7047     		bx	lr
 373              	.L37:
 374 0086 00BF     		.align	2
 375              	.L36:
 376 0088 FFFFFE1F 		.word	536805375
 377              		.cfi_endproc
 378              	.LFE126:
 380              		.section	.text.FLASH_ERASE_PAGE,"ax",%progbits
 381              		.align	1
 382              		.global	FLASH_ERASE_PAGE
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 386              		.fpu fpv4-sp-d16
 388              	FLASH_ERASE_PAGE:
 389              	.LVL47:
 390              	.LFB127:
  74:Bsp/periph_flash.c **** 
  75:Bsp/periph_flash.c **** FLASH_Status FLASH_ERASE_PAGE(u32 ERA_ADDR,uint32_t data_size)
  76:Bsp/periph_flash.c **** {
 391              		.loc 1 76 1 is_stmt 1 view -0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		.loc 1 76 1 is_stmt 0 view .LVU95
ARM GAS  /tmp/ccx60mvJ.s 			page 10


 396 0000 70B5     		push	{r4, r5, r6, lr}
 397              	.LCFI3:
 398              		.cfi_def_cfa_offset 16
 399              		.cfi_offset 4, -16
 400              		.cfi_offset 5, -12
 401              		.cfi_offset 6, -8
 402              		.cfi_offset 14, -4
 403 0002 0446     		mov	r4, r0
 404 0004 0D46     		mov	r5, r1
 405 0006 0026     		movs	r6, #0
  77:Bsp/periph_flash.c **** 	FLASH_Status status;
 406              		.loc 1 77 2 is_stmt 1 view .LVU96
  78:Bsp/periph_flash.c **** 	u32 addrx = 0;
 407              		.loc 1 78 2 view .LVU97
 408              	.LVL48:
  79:Bsp/periph_flash.c ****   u32 endaddr = 0;
 409              		.loc 1 79 3 view .LVU98
  80:Bsp/periph_flash.c **** 	
  81:Bsp/periph_flash.c **** 	FLASH_Unlock();                                  
 410              		.loc 1 81 2 view .LVU99
 411 0008 FFF7FEFF 		bl	FLASH_Unlock
 412              	.LVL49:
  82:Bsp/periph_flash.c ****   FLASH_DataCacheCmd(DISABLE);                     
 413              		.loc 1 82 3 view .LVU100
 414 000c 3046     		mov	r0, r6
 415 000e FFF7FEFF 		bl	FLASH_DataCacheCmd
 416              	.LVL50:
  83:Bsp/periph_flash.c **** 
  84:Bsp/periph_flash.c ****   addrx = ERA_ADDR;                                  
 417              		.loc 1 84 3 view .LVU101
  85:Bsp/periph_flash.c ****   endaddr = ERA_ADDR + data_size * SIZE;                   
 418              		.loc 1 85 3 view .LVU102
 419              		.loc 1 85 11 is_stmt 0 view .LVU103
 420 0012 04EB8505 		add	r5, r4, r5, lsl #2
 421              	.LVL51:
  86:Bsp/periph_flash.c **** 
  87:Bsp/periph_flash.c ****   if(addrx < 0X1FFF0000)                              
 422              		.loc 1 87 3 is_stmt 1 view .LVU104
 423              		.loc 1 87 5 is_stmt 0 view .LVU105
 424 0016 0D4B     		ldr	r3, .L46
 425 0018 9C42     		cmp	r4, r3
 426 001a 0CD9     		bls	.L39
 427              	.LVL52:
 428              	.L40:
  88:Bsp/periph_flash.c ****   {
  89:Bsp/periph_flash.c ****     while(addrx < endaddr)                            
  90:Bsp/periph_flash.c ****     {
  91:Bsp/periph_flash.c ****       if(Flash_ReadFromADDR(addrx) != 0XFFFFFFFF)      
  92:Bsp/periph_flash.c ****       {
  93:Bsp/periph_flash.c ****         status=FLASH_EraseSector(FLASH_GetFlashSector(addrx), VoltageRange_3);
  94:Bsp/periph_flash.c **** 
  95:Bsp/periph_flash.c ****         if(status!=FLASH_COMPLETE)break;            
  96:Bsp/periph_flash.c ****       }
  97:Bsp/periph_flash.c ****       else addrx += SIZE;
  98:Bsp/periph_flash.c ****     }
  99:Bsp/periph_flash.c ****   }
 100:Bsp/periph_flash.c **** 
ARM GAS  /tmp/ccx60mvJ.s 			page 11


 101:Bsp/periph_flash.c **** 	FLASH_Lock();                                  
 429              		.loc 1 101 2 is_stmt 1 view .LVU106
 430 001c FFF7FEFF 		bl	FLASH_Lock
 431              	.LVL53:
 102:Bsp/periph_flash.c **** 
 103:Bsp/periph_flash.c **** 	return status;
 432              		.loc 1 103 2 view .LVU107
 104:Bsp/periph_flash.c **** }
 433              		.loc 1 104 1 is_stmt 0 view .LVU108
 434 0020 3046     		mov	r0, r6
 435 0022 70BD     		pop	{r4, r5, r6, pc}
 436              	.LVL54:
 437              	.L45:
  93:Bsp/periph_flash.c **** 
 438              		.loc 1 93 9 is_stmt 1 view .LVU109
  93:Bsp/periph_flash.c **** 
 439              		.loc 1 93 34 is_stmt 0 view .LVU110
 440 0024 2046     		mov	r0, r4
 441 0026 FFF7FEFF 		bl	FLASH_GetFlashSector
 442              	.LVL55:
  93:Bsp/periph_flash.c **** 
 443              		.loc 1 93 16 view .LVU111
 444 002a 0221     		movs	r1, #2
 445 002c FFF7FEFF 		bl	FLASH_EraseSector
 446              	.LVL56:
 447 0030 0646     		mov	r6, r0
 448              	.LVL57:
  95:Bsp/periph_flash.c ****       }
 449              		.loc 1 95 9 is_stmt 1 view .LVU112
  95:Bsp/periph_flash.c ****       }
 450              		.loc 1 95 11 is_stmt 0 view .LVU113
 451 0032 0928     		cmp	r0, #9
 452 0034 F2D1     		bne	.L40
 453              	.LVL58:
 454              	.L39:
  89:Bsp/periph_flash.c ****     {
 455              		.loc 1 89 10 view .LVU114
 456 0036 AC42     		cmp	r4, r5
 457 0038 F0D2     		bcs	.L40
  91:Bsp/periph_flash.c ****       {
 458              		.loc 1 91 7 is_stmt 1 view .LVU115
  91:Bsp/periph_flash.c ****       {
 459              		.loc 1 91 10 is_stmt 0 view .LVU116
 460 003a 2046     		mov	r0, r4
 461 003c FFF7FEFF 		bl	Flash_ReadFromADDR
 462              	.LVL59:
  91:Bsp/periph_flash.c ****       {
 463              		.loc 1 91 9 view .LVU117
 464 0040 B0F1FF3F 		cmp	r0, #-1
 465 0044 EED1     		bne	.L45
  97:Bsp/periph_flash.c ****     }
 466              		.loc 1 97 12 is_stmt 1 view .LVU118
  97:Bsp/periph_flash.c ****     }
 467              		.loc 1 97 18 is_stmt 0 view .LVU119
 468 0046 0434     		adds	r4, r4, #4
 469              	.LVL60:
  97:Bsp/periph_flash.c ****     }
ARM GAS  /tmp/ccx60mvJ.s 			page 12


 470              		.loc 1 97 18 view .LVU120
 471 0048 F5E7     		b	.L39
 472              	.L47:
 473 004a 00BF     		.align	2
 474              	.L46:
 475 004c FFFFFE1F 		.word	536805375
 476              		.cfi_endproc
 477              	.LFE127:
 479              		.text
 480              	.Letext0:
 481              		.file 2 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 482              		.file 3 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 483              		.file 4 "F4_CORE/core_cm4.h"
 484              		.file 5 "USER/system_stm32f4xx.h"
 485              		.file 6 "USER/stm32f4xx.h"
 486              		.file 7 "FWLIB/inc/stm32f4xx_flash.h"
ARM GAS  /tmp/ccx60mvJ.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 periph_flash.c
     /tmp/ccx60mvJ.s:18     .text.Flash_ReadFromADDR:0000000000000000 $t
     /tmp/ccx60mvJ.s:26     .text.Flash_ReadFromADDR:0000000000000000 Flash_ReadFromADDR
     /tmp/ccx60mvJ.s:45     .text.FLASH_ReadBuff:0000000000000000 $t
     /tmp/ccx60mvJ.s:52     .text.FLASH_ReadBuff:0000000000000000 FLASH_ReadBuff
     /tmp/ccx60mvJ.s:106    .text.FLASH_GetFlashSector:0000000000000000 $t
     /tmp/ccx60mvJ.s:113    .text.FLASH_GetFlashSector:0000000000000000 FLASH_GetFlashSector
     /tmp/ccx60mvJ.s:213    .text.FLASH_GetFlashSector:0000000000000058 $d
     /tmp/ccx60mvJ.s:218    .text.FLASH_Write:0000000000000000 $t
     /tmp/ccx60mvJ.s:225    .text.FLASH_Write:0000000000000000 FLASH_Write
     /tmp/ccx60mvJ.s:376    .text.FLASH_Write:0000000000000088 $d
     /tmp/ccx60mvJ.s:381    .text.FLASH_ERASE_PAGE:0000000000000000 $t
     /tmp/ccx60mvJ.s:388    .text.FLASH_ERASE_PAGE:0000000000000000 FLASH_ERASE_PAGE
     /tmp/ccx60mvJ.s:475    .text.FLASH_ERASE_PAGE:000000000000004c $d

UNDEFINED SYMBOLS
FLASH_Unlock
FLASH_DataCacheCmd
FLASH_ProgramWord
FLASH_EraseSector
FLASH_Lock
