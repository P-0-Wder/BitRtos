ARM GAS  /tmp/ccOJqEay.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"periph_flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Flash_ReadFromADDR,"ax",%progbits
  18              		.align	1
  19              		.global	Flash_ReadFromADDR
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Flash_ReadFromADDR:
  26              	.LFB123:
  27              		.file 1 "Bsp/periph_flash.c"
   1:Bsp/periph_flash.c **** #include "periph_flash.h"
   2:Bsp/periph_flash.c **** 
   3:Bsp/periph_flash.c **** u32 Flash_ReadFromADDR(u32 faddr)
   4:Bsp/periph_flash.c **** {
  28              		.loc 1 4 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
   5:Bsp/periph_flash.c ****   return *(vu32*)faddr;
  34              		.loc 1 5 0
  35 0000 0068     		ldr	r0, [r0]
  36              	.LVL1:
   6:Bsp/periph_flash.c **** }
  37              		.loc 1 6 0
  38 0002 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE123:
  42              		.section	.text.FLASH_ReadBuff,"ax",%progbits
  43              		.align	1
  44              		.global	FLASH_ReadBuff
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu fpv4-sp-d16
  50              	FLASH_ReadBuff:
  51              	.LFB124:
   7:Bsp/periph_flash.c **** 
   8:Bsp/periph_flash.c **** void FLASH_ReadBuff(u32 ReadAddr,u32 *pBuffer,u32 NumToRead)
   9:Bsp/periph_flash.c **** {
ARM GAS  /tmp/ccOJqEay.s 			page 2


  52              		.loc 1 9 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              	.LVL2:
  57 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 24
  60              		.cfi_offset 3, -24
  61              		.cfi_offset 4, -20
  62              		.cfi_offset 5, -16
  63              		.cfi_offset 6, -12
  64              		.cfi_offset 7, -8
  65              		.cfi_offset 14, -4
  66 0002 0546     		mov	r5, r0
  67 0004 0F46     		mov	r7, r1
  68 0006 1646     		mov	r6, r2
  69              	.LVL3:
  10:Bsp/periph_flash.c ****   u32 i;
  11:Bsp/periph_flash.c ****   for(i = 0; i < NumToRead; i++)
  70              		.loc 1 11 0
  71 0008 0024     		movs	r4, #0
  72 000a 06E0     		b	.L3
  73              	.LVL4:
  74              	.L4:
  12:Bsp/periph_flash.c ****   {
  13:Bsp/periph_flash.c ****     pBuffer[i] = Flash_ReadFromADDR(ReadAddr);
  75              		.loc 1 13 0 discriminator 3
  76 000c 2846     		mov	r0, r5
  77 000e FFF7FEFF 		bl	Flash_ReadFromADDR
  78              	.LVL5:
  79 0012 47F82400 		str	r0, [r7, r4, lsl #2]
  14:Bsp/periph_flash.c ****     ReadAddr += SIZE;
  80              		.loc 1 14 0 discriminator 3
  81 0016 0435     		adds	r5, r5, #4
  82              	.LVL6:
  11:Bsp/periph_flash.c ****   {
  83              		.loc 1 11 0 discriminator 3
  84 0018 0134     		adds	r4, r4, #1
  85              	.LVL7:
  86              	.L3:
  11:Bsp/periph_flash.c ****   {
  87              		.loc 1 11 0 is_stmt 0 discriminator 1
  88 001a B442     		cmp	r4, r6
  89 001c F6D3     		bcc	.L4
  15:Bsp/periph_flash.c ****   }
  16:Bsp/periph_flash.c **** }
  90              		.loc 1 16 0 is_stmt 1
  91 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  92              		.cfi_endproc
  93              	.LFE124:
  95              		.section	.text.FLASH_GetFlashSector,"ax",%progbits
  96              		.align	1
  97              		.global	FLASH_GetFlashSector
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
ARM GAS  /tmp/ccOJqEay.s 			page 3


 101              		.fpu fpv4-sp-d16
 103              	FLASH_GetFlashSector:
 104              	.LFB125:
  17:Bsp/periph_flash.c **** 
  18:Bsp/periph_flash.c **** u8 FLASH_GetFlashSector(u32 addr)
  19:Bsp/periph_flash.c **** {
 105              		.loc 1 19 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.LVL8:
  20:Bsp/periph_flash.c ****   if(addr<ADDR_FLASH_SECTOR_1)	return FLASH_Sector_0;
 111              		.loc 1 20 0
 112 0000 154B     		ldr	r3, .L20
 113 0002 9842     		cmp	r0, r3
 114 0004 23D9     		bls	.L8
  21:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_2)	return FLASH_Sector_1;
 115              		.loc 1 21 0
 116 0006 03F58043 		add	r3, r3, #16384
 117 000a 9842     		cmp	r0, r3
 118 000c 01D8     		bhi	.L15
 119 000e 0820     		movs	r0, #8
 120              	.LVL9:
 121 0010 7047     		bx	lr
 122              	.LVL10:
 123              	.L15:
  22:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_3)	return FLASH_Sector_2;
 124              		.loc 1 22 0
 125 0012 03F58043 		add	r3, r3, #16384
 126 0016 9842     		cmp	r0, r3
 127 0018 01D8     		bhi	.L16
 128 001a 1020     		movs	r0, #16
 129              	.LVL11:
 130 001c 7047     		bx	lr
 131              	.LVL12:
 132              	.L16:
  23:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_4)	return FLASH_Sector_3;
 133              		.loc 1 23 0
 134 001e 03F58043 		add	r3, r3, #16384
 135 0022 9842     		cmp	r0, r3
 136 0024 01D8     		bhi	.L17
 137 0026 1820     		movs	r0, #24
 138              	.LVL13:
 139 0028 7047     		bx	lr
 140              	.LVL14:
 141              	.L17:
  24:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_5)	return FLASH_Sector_4;
 142              		.loc 1 24 0
 143 002a 03F58033 		add	r3, r3, #65536
 144 002e 9842     		cmp	r0, r3
 145 0030 01D8     		bhi	.L18
 146 0032 2020     		movs	r0, #32
 147              	.LVL15:
 148 0034 7047     		bx	lr
 149              	.LVL16:
 150              	.L18:
ARM GAS  /tmp/ccOJqEay.s 			page 4


  25:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_6)	return FLASH_Sector_5;
 151              		.loc 1 25 0
 152 0036 03F50033 		add	r3, r3, #131072
 153 003a 9842     		cmp	r0, r3
 154 003c 01D8     		bhi	.L19
 155 003e 2820     		movs	r0, #40
 156              	.LVL17:
 157 0040 7047     		bx	lr
 158              	.LVL18:
 159              	.L19:
  26:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_7)	return FLASH_Sector_6;
 160              		.loc 1 26 0
 161 0042 03F50033 		add	r3, r3, #131072
 162 0046 9842     		cmp	r0, r3
 163 0048 03D8     		bhi	.L14
 164 004a 3020     		movs	r0, #48
 165              	.LVL19:
 166 004c 7047     		bx	lr
 167              	.LVL20:
 168              	.L8:
  20:Bsp/periph_flash.c ****   else if(addr<ADDR_FLASH_SECTOR_2)	return FLASH_Sector_1;
 169              		.loc 1 20 0
 170 004e 0020     		movs	r0, #0
 171              	.LVL21:
 172 0050 7047     		bx	lr
 173              	.LVL22:
 174              	.L14:
  27:Bsp/periph_flash.c ****   return FLASH_Sector_7;
 175              		.loc 1 27 0
 176 0052 3820     		movs	r0, #56
 177              	.LVL23:
  28:Bsp/periph_flash.c **** }
 178              		.loc 1 28 0
 179 0054 7047     		bx	lr
 180              	.L21:
 181 0056 00BF     		.align	2
 182              	.L20:
 183 0058 FF3F0008 		.word	134234111
 184              		.cfi_endproc
 185              	.LFE125:
 187              		.section	.text.FLASH_Write,"ax",%progbits
 188              		.align	1
 189              		.global	FLASH_Write
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu fpv4-sp-d16
 195              	FLASH_Write:
 196              	.LFB126:
  29:Bsp/periph_flash.c **** 
  30:Bsp/periph_flash.c **** void FLASH_Write(u32 WriteAddr,u32 *pBuffer,u32 NumToWrite)
  31:Bsp/periph_flash.c **** {
 197              		.loc 1 31 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              	.LVL24:
ARM GAS  /tmp/ccOJqEay.s 			page 5


  32:Bsp/periph_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
  33:Bsp/periph_flash.c ****   u32 addrx = 0;
  34:Bsp/periph_flash.c ****   u32 endaddr = 0;
  35:Bsp/periph_flash.c **** 
  36:Bsp/periph_flash.c ****   if(WriteAddr < STM32_FLASH_BASE || WriteAddr % SIZE) return;
 202              		.loc 1 36 0
 203 0000 B0F1006F 		cmp	r0, #134217728
 204 0004 40D3     		bcc	.L34
  31:Bsp/periph_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 205              		.loc 1 31 0 discriminator 1
 206 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 207              	.LCFI1:
 208              		.cfi_def_cfa_offset 24
 209              		.cfi_offset 4, -24
 210              		.cfi_offset 5, -20
 211              		.cfi_offset 6, -16
 212              		.cfi_offset 7, -12
 213              		.cfi_offset 8, -8
 214              		.cfi_offset 14, -4
 215 000a 0546     		mov	r5, r0
 216 000c 0F46     		mov	r7, r1
 217 000e 1646     		mov	r6, r2
 218              		.loc 1 36 0 discriminator 1
 219 0010 10F0030F 		tst	r0, #3
 220 0014 01D0     		beq	.L37
 221              	.LVL25:
 222              	.L22:
 223 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 224              	.LVL26:
 225              	.L37:
  37:Bsp/periph_flash.c **** 
  38:Bsp/periph_flash.c ****   FLASH_Unlock();                                  
 226              		.loc 1 38 0
 227 001a FFF7FEFF 		bl	FLASH_Unlock
 228              	.LVL27:
  39:Bsp/periph_flash.c ****   FLASH_DataCacheCmd(DISABLE);                     
 229              		.loc 1 39 0
 230 001e 0020     		movs	r0, #0
 231 0020 FFF7FEFF 		bl	FLASH_DataCacheCmd
 232              	.LVL28:
  40:Bsp/periph_flash.c **** 
  41:Bsp/periph_flash.c ****   addrx = WriteAddr;                                  
  42:Bsp/periph_flash.c ****   endaddr = WriteAddr + NumToWrite * SIZE;                   
 233              		.loc 1 42 0
 234 0024 05EB8606 		add	r6, r5, r6, lsl #2
 235              	.LVL29:
  43:Bsp/periph_flash.c **** 
  44:Bsp/periph_flash.c ****   if(addrx < 0X1FFF0000)                              
 236              		.loc 1 44 0
 237 0028 184B     		ldr	r3, .L38
 238 002a 9D42     		cmp	r5, r3
 239 002c 1DD9     		bls	.L32
  32:Bsp/periph_flash.c ****   u32 addrx = 0;
 240              		.loc 1 32 0
 241 002e 4FF00908 		mov	r8, #9
 242              	.LVL30:
 243              	.L25:
ARM GAS  /tmp/ccOJqEay.s 			page 6


  45:Bsp/periph_flash.c ****   {
  46:Bsp/periph_flash.c ****     while(addrx < endaddr)                            
  47:Bsp/periph_flash.c ****     {
  48:Bsp/periph_flash.c ****       if(Flash_ReadFromADDR(addrx) != 0XFFFFFFFF)      
  49:Bsp/periph_flash.c ****       {
  50:Bsp/periph_flash.c ****         status=FLASH_EraseSector(FLASH_GetFlashSector(addrx), VoltageRange_3);
  51:Bsp/periph_flash.c **** 
  52:Bsp/periph_flash.c ****         if(status!=FLASH_COMPLETE)break;            
  53:Bsp/periph_flash.c ****       }
  54:Bsp/periph_flash.c ****       else addrx += SIZE;
  55:Bsp/periph_flash.c ****     }
  56:Bsp/periph_flash.c ****   }
  57:Bsp/periph_flash.c ****   if(status == FLASH_COMPLETE)
 244              		.loc 1 57 0
 245 0032 B8F1090F 		cmp	r8, #9
 246 0036 1CD0     		beq	.L29
 247              	.L30:
  58:Bsp/periph_flash.c ****   {
  59:Bsp/periph_flash.c ****     while(WriteAddr < endaddr)
  60:Bsp/periph_flash.c ****     {
  61:Bsp/periph_flash.c ****       if(FLASH_ProgramWord(WriteAddr, *pBuffer) != FLASH_COMPLETE)
  62:Bsp/periph_flash.c ****       {
  63:Bsp/periph_flash.c ****         break;
  64:Bsp/periph_flash.c ****       }
  65:Bsp/periph_flash.c **** 
  66:Bsp/periph_flash.c ****       WriteAddr += SIZE;
  67:Bsp/periph_flash.c ****       pBuffer++;
  68:Bsp/periph_flash.c ****     }
  69:Bsp/periph_flash.c ****   }
  70:Bsp/periph_flash.c **** 
  71:Bsp/periph_flash.c ****   FLASH_DataCacheCmd(ENABLE);
 248              		.loc 1 71 0
 249 0038 0120     		movs	r0, #1
 250 003a FFF7FEFF 		bl	FLASH_DataCacheCmd
 251              	.LVL31:
  72:Bsp/periph_flash.c ****   FLASH_Lock();
 252              		.loc 1 72 0
 253 003e FFF7FEFF 		bl	FLASH_Lock
 254              	.LVL32:
 255 0042 E8E7     		b	.L22
 256              	.LVL33:
 257              	.L26:
  54:Bsp/periph_flash.c ****     }
 258              		.loc 1 54 0
 259 0044 0434     		adds	r4, r4, #4
 260              	.LVL34:
 261              	.L24:
  46:Bsp/periph_flash.c ****     {
 262              		.loc 1 46 0
 263 0046 B442     		cmp	r4, r6
 264 0048 F3D2     		bcs	.L25
  48:Bsp/periph_flash.c ****       {
 265              		.loc 1 48 0
 266 004a 2046     		mov	r0, r4
 267 004c FFF7FEFF 		bl	Flash_ReadFromADDR
 268              	.LVL35:
 269 0050 B0F1FF3F 		cmp	r0, #-1
ARM GAS  /tmp/ccOJqEay.s 			page 7


 270 0054 F6D0     		beq	.L26
  50:Bsp/periph_flash.c **** 
 271              		.loc 1 50 0
 272 0056 2046     		mov	r0, r4
 273 0058 FFF7FEFF 		bl	FLASH_GetFlashSector
 274              	.LVL36:
 275 005c 0221     		movs	r1, #2
 276 005e FFF7FEFF 		bl	FLASH_EraseSector
 277              	.LVL37:
 278 0062 8046     		mov	r8, r0
 279              	.LVL38:
  52:Bsp/periph_flash.c ****       }
 280              		.loc 1 52 0
 281 0064 0928     		cmp	r0, #9
 282 0066 EED0     		beq	.L24
 283 0068 E3E7     		b	.L25
 284              	.LVL39:
 285              	.L32:
 286 006a 2C46     		mov	r4, r5
 287 006c 4FF00908 		mov	r8, #9
 288 0070 E9E7     		b	.L24
 289              	.LVL40:
 290              	.L29:
  59:Bsp/periph_flash.c ****     {
 291              		.loc 1 59 0
 292 0072 B542     		cmp	r5, r6
 293 0074 E0D2     		bcs	.L30
  61:Bsp/periph_flash.c ****       {
 294              		.loc 1 61 0
 295 0076 3968     		ldr	r1, [r7]
 296 0078 2846     		mov	r0, r5
 297 007a FFF7FEFF 		bl	FLASH_ProgramWord
 298              	.LVL41:
 299 007e 0928     		cmp	r0, #9
 300 0080 DAD1     		bne	.L30
  66:Bsp/periph_flash.c ****       pBuffer++;
 301              		.loc 1 66 0
 302 0082 0435     		adds	r5, r5, #4
 303              	.LVL42:
  67:Bsp/periph_flash.c ****     }
 304              		.loc 1 67 0
 305 0084 0437     		adds	r7, r7, #4
 306              	.LVL43:
 307 0086 F4E7     		b	.L29
 308              	.LVL44:
 309              	.L34:
 310              	.LCFI2:
 311              		.cfi_def_cfa_offset 0
 312              		.cfi_restore 4
 313              		.cfi_restore 5
 314              		.cfi_restore 6
 315              		.cfi_restore 7
 316              		.cfi_restore 8
 317              		.cfi_restore 14
 318 0088 7047     		bx	lr
 319              	.L39:
 320 008a 00BF     		.align	2
ARM GAS  /tmp/ccOJqEay.s 			page 8


 321              	.L38:
 322 008c FFFFFE1F 		.word	536805375
 323              		.cfi_endproc
 324              	.LFE126:
 326              		.section	.text.FLASH_ERASE_PAGE,"ax",%progbits
 327              		.align	1
 328              		.global	FLASH_ERASE_PAGE
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu fpv4-sp-d16
 334              	FLASH_ERASE_PAGE:
 335              	.LFB127:
  73:Bsp/periph_flash.c **** }
  74:Bsp/periph_flash.c **** 
  75:Bsp/periph_flash.c **** FLASH_Status FLASH_ERASE_PAGE(u32 ERA_ADDR,uint32_t data_size)
  76:Bsp/periph_flash.c **** {
 336              		.loc 1 76 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              	.LVL45:
 341 0000 70B5     		push	{r4, r5, r6, lr}
 342              	.LCFI3:
 343              		.cfi_def_cfa_offset 16
 344              		.cfi_offset 4, -16
 345              		.cfi_offset 5, -12
 346              		.cfi_offset 6, -8
 347              		.cfi_offset 14, -4
 348 0002 0446     		mov	r4, r0
 349 0004 0D46     		mov	r5, r1
 350              	.LVL46:
  77:Bsp/periph_flash.c **** 	FLASH_Status status;
  78:Bsp/periph_flash.c **** 	u32 addrx = 0;
  79:Bsp/periph_flash.c ****   u32 endaddr = 0;
  80:Bsp/periph_flash.c **** 	
  81:Bsp/periph_flash.c **** 	FLASH_Unlock();                                  
 351              		.loc 1 81 0
 352 0006 FFF7FEFF 		bl	FLASH_Unlock
 353              	.LVL47:
  82:Bsp/periph_flash.c ****   FLASH_DataCacheCmd(DISABLE);                     
 354              		.loc 1 82 0
 355 000a 0020     		movs	r0, #0
 356 000c FFF7FEFF 		bl	FLASH_DataCacheCmd
 357              	.LVL48:
  83:Bsp/periph_flash.c **** 
  84:Bsp/periph_flash.c ****   addrx = ERA_ADDR;                                  
  85:Bsp/periph_flash.c ****   endaddr = ERA_ADDR + data_size * SIZE;                   
 358              		.loc 1 85 0
 359 0010 04EB8505 		add	r5, r4, r5, lsl #2
 360              	.LVL49:
  86:Bsp/periph_flash.c **** 
  87:Bsp/periph_flash.c ****   if(addrx < 0X1FFF0000)                              
 361              		.loc 1 87 0
 362 0014 0D4B     		ldr	r3, .L48
 363 0016 9C42     		cmp	r4, r3
 364 0018 05D9     		bls	.L41
ARM GAS  /tmp/ccOJqEay.s 			page 9


 365 001a 0026     		movs	r6, #0
 366              	.LVL50:
 367              	.L42:
  88:Bsp/periph_flash.c ****   {
  89:Bsp/periph_flash.c ****     while(addrx < endaddr)                            
  90:Bsp/periph_flash.c ****     {
  91:Bsp/periph_flash.c ****       if(Flash_ReadFromADDR(addrx) != 0XFFFFFFFF)      
  92:Bsp/periph_flash.c ****       {
  93:Bsp/periph_flash.c ****         status=FLASH_EraseSector(FLASH_GetFlashSector(addrx), VoltageRange_3);
  94:Bsp/periph_flash.c **** 
  95:Bsp/periph_flash.c ****         if(status!=FLASH_COMPLETE)break;            
  96:Bsp/periph_flash.c ****       }
  97:Bsp/periph_flash.c ****       else addrx += SIZE;
  98:Bsp/periph_flash.c ****     }
  99:Bsp/periph_flash.c ****   }
 100:Bsp/periph_flash.c **** 
 101:Bsp/periph_flash.c **** 	FLASH_Lock();                                  
 368              		.loc 1 101 0
 369 001c FFF7FEFF 		bl	FLASH_Lock
 370              	.LVL51:
 102:Bsp/periph_flash.c **** 
 103:Bsp/periph_flash.c **** 	return status;
 104:Bsp/periph_flash.c **** }
 371              		.loc 1 104 0
 372 0020 3046     		mov	r0, r6
 373 0022 70BD     		pop	{r4, r5, r6, pc}
 374              	.LVL52:
 375              	.L43:
  97:Bsp/periph_flash.c ****     }
 376              		.loc 1 97 0
 377 0024 0434     		adds	r4, r4, #4
 378              	.LVL53:
 379              	.L41:
  89:Bsp/periph_flash.c ****     {
 380              		.loc 1 89 0
 381 0026 AC42     		cmp	r4, r5
 382 0028 F8D2     		bcs	.L42
  91:Bsp/periph_flash.c ****       {
 383              		.loc 1 91 0
 384 002a 2046     		mov	r0, r4
 385 002c FFF7FEFF 		bl	Flash_ReadFromADDR
 386              	.LVL54:
 387 0030 B0F1FF3F 		cmp	r0, #-1
 388 0034 F6D0     		beq	.L43
  93:Bsp/periph_flash.c **** 
 389              		.loc 1 93 0
 390 0036 2046     		mov	r0, r4
 391 0038 FFF7FEFF 		bl	FLASH_GetFlashSector
 392              	.LVL55:
 393 003c 0221     		movs	r1, #2
 394 003e FFF7FEFF 		bl	FLASH_EraseSector
 395              	.LVL56:
 396 0042 0646     		mov	r6, r0
 397              	.LVL57:
  95:Bsp/periph_flash.c ****       }
 398              		.loc 1 95 0
 399 0044 0928     		cmp	r0, #9
ARM GAS  /tmp/ccOJqEay.s 			page 10


 400 0046 EED0     		beq	.L41
 401 0048 E8E7     		b	.L42
 402              	.L49:
 403 004a 00BF     		.align	2
 404              	.L48:
 405 004c FFFFFE1F 		.word	536805375
 406              		.cfi_endproc
 407              	.LFE127:
 409              		.text
 410              	.Letext0:
 411              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 412              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 413              		.file 4 "F4_CORE/core_cm4.h"
 414              		.file 5 "USER/system_stm32f4xx.h"
 415              		.file 6 "USER/stm32f4xx.h"
 416              		.file 7 "FWLIB/inc/stm32f4xx_flash.h"
ARM GAS  /tmp/ccOJqEay.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 periph_flash.c
     /tmp/ccOJqEay.s:18     .text.Flash_ReadFromADDR:0000000000000000 $t
     /tmp/ccOJqEay.s:25     .text.Flash_ReadFromADDR:0000000000000000 Flash_ReadFromADDR
     /tmp/ccOJqEay.s:43     .text.FLASH_ReadBuff:0000000000000000 $t
     /tmp/ccOJqEay.s:50     .text.FLASH_ReadBuff:0000000000000000 FLASH_ReadBuff
     /tmp/ccOJqEay.s:96     .text.FLASH_GetFlashSector:0000000000000000 $t
     /tmp/ccOJqEay.s:103    .text.FLASH_GetFlashSector:0000000000000000 FLASH_GetFlashSector
     /tmp/ccOJqEay.s:183    .text.FLASH_GetFlashSector:0000000000000058 $d
     /tmp/ccOJqEay.s:188    .text.FLASH_Write:0000000000000000 $t
     /tmp/ccOJqEay.s:195    .text.FLASH_Write:0000000000000000 FLASH_Write
     /tmp/ccOJqEay.s:322    .text.FLASH_Write:000000000000008c $d
     /tmp/ccOJqEay.s:327    .text.FLASH_ERASE_PAGE:0000000000000000 $t
     /tmp/ccOJqEay.s:334    .text.FLASH_ERASE_PAGE:0000000000000000 FLASH_ERASE_PAGE
     /tmp/ccOJqEay.s:405    .text.FLASH_ERASE_PAGE:000000000000004c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
FLASH_Unlock
FLASH_DataCacheCmd
FLASH_Lock
FLASH_EraseSector
FLASH_ProgramWord
