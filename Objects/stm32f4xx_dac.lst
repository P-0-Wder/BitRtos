ARM GAS  /tmp/cc6oDA5T.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_dac.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.DAC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	DAC_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	DAC_DeInit:
  27              	.LFB123:
  28              		.file 1 "FWLIB/src/stm32f4xx_dac.c"
   1:FWLIB/src/stm32f4xx_dac.c **** /**
   2:FWLIB/src/stm32f4xx_dac.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_dac.c ****   * @file    stm32f4xx_dac.c
   4:FWLIB/src/stm32f4xx_dac.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_dac.c ****   * @version V1.8.0
   6:FWLIB/src/stm32f4xx_dac.c ****   * @date    04-November-2016
   7:FWLIB/src/stm32f4xx_dac.c ****    * @brief   This file provides firmware functions to manage the following 
   8:FWLIB/src/stm32f4xx_dac.c ****   *          functionalities of the Digital-to-Analog Converter (DAC) peripheral: 
   9:FWLIB/src/stm32f4xx_dac.c ****   *           + DAC channels configuration: trigger, output buffer, data format
  10:FWLIB/src/stm32f4xx_dac.c ****   *           + DMA management      
  11:FWLIB/src/stm32f4xx_dac.c ****   *           + Interrupts and flags management
  12:FWLIB/src/stm32f4xx_dac.c ****   *
  13:FWLIB/src/stm32f4xx_dac.c ****  @verbatim      
  14:FWLIB/src/stm32f4xx_dac.c ****  ===============================================================================
  15:FWLIB/src/stm32f4xx_dac.c ****                       ##### DAC Peripheral features #####
  16:FWLIB/src/stm32f4xx_dac.c ****  ===============================================================================
  17:FWLIB/src/stm32f4xx_dac.c ****     [..]        
  18:FWLIB/src/stm32f4xx_dac.c ****       *** DAC Channels ***
  19:FWLIB/src/stm32f4xx_dac.c ****       ====================  
  20:FWLIB/src/stm32f4xx_dac.c ****     [..]  
  21:FWLIB/src/stm32f4xx_dac.c ****     The device integrates two 12-bit Digital Analog Converters that can 
  22:FWLIB/src/stm32f4xx_dac.c ****     be used independently or simultaneously (dual mode):
  23:FWLIB/src/stm32f4xx_dac.c ****       (#) DAC channel1 with DAC_OUT1 (PA4) as output
  24:FWLIB/src/stm32f4xx_dac.c ****       (#) DAC channel2 with DAC_OUT2 (PA5) as output
  25:FWLIB/src/stm32f4xx_dac.c ****   
  26:FWLIB/src/stm32f4xx_dac.c ****       *** DAC Triggers ***
  27:FWLIB/src/stm32f4xx_dac.c ****       ====================
  28:FWLIB/src/stm32f4xx_dac.c ****     [..]
  29:FWLIB/src/stm32f4xx_dac.c ****     Digital to Analog conversion can be non-triggered using DAC_Trigger_None
  30:FWLIB/src/stm32f4xx_dac.c ****     and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register 
ARM GAS  /tmp/cc6oDA5T.s 			page 2


  31:FWLIB/src/stm32f4xx_dac.c ****     using DAC_SetChannel1Data() / DAC_SetChannel2Data() functions.
  32:FWLIB/src/stm32f4xx_dac.c ****     [..] 
  33:FWLIB/src/stm32f4xx_dac.c ****     Digital to Analog conversion can be triggered by:
  34:FWLIB/src/stm32f4xx_dac.c ****       (#) External event: EXTI Line 9 (any GPIOx_Pin9) using DAC_Trigger_Ext_IT9.
  35:FWLIB/src/stm32f4xx_dac.c ****           The used pin (GPIOx_Pin9) must be configured in input mode.
  36:FWLIB/src/stm32f4xx_dac.c ****   
  37:FWLIB/src/stm32f4xx_dac.c ****       (#) Timers TRGO: TIM2, TIM4, TIM5, TIM6, TIM7 and TIM8 
  38:FWLIB/src/stm32f4xx_dac.c ****           (DAC_Trigger_T2_TRGO, DAC_Trigger_T4_TRGO...)
  39:FWLIB/src/stm32f4xx_dac.c ****           The timer TRGO event should be selected using TIM_SelectOutputTrigger()
  40:FWLIB/src/stm32f4xx_dac.c ****   
  41:FWLIB/src/stm32f4xx_dac.c ****       (#) Software using DAC_Trigger_Software
  42:FWLIB/src/stm32f4xx_dac.c ****   
  43:FWLIB/src/stm32f4xx_dac.c ****       *** DAC Buffer mode feature ***
  44:FWLIB/src/stm32f4xx_dac.c ****       =============================== 
  45:FWLIB/src/stm32f4xx_dac.c ****       [..] 
  46:FWLIB/src/stm32f4xx_dac.c ****       Each DAC channel integrates an output buffer that can be used to 
  47:FWLIB/src/stm32f4xx_dac.c ****       reduce the output impedance, and to drive external loads directly
  48:FWLIB/src/stm32f4xx_dac.c ****       without having to add an external operational amplifier.
  49:FWLIB/src/stm32f4xx_dac.c ****       To enable, the output buffer use  
  50:FWLIB/src/stm32f4xx_dac.c ****       DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
  51:FWLIB/src/stm32f4xx_dac.c ****       [..]           
  52:FWLIB/src/stm32f4xx_dac.c ****       (@) Refer to the device datasheet for more details about output 
  53:FWLIB/src/stm32f4xx_dac.c ****           impedance value with and without output buffer.
  54:FWLIB/src/stm32f4xx_dac.c ****             
  55:FWLIB/src/stm32f4xx_dac.c ****        *** DAC wave generation feature ***
  56:FWLIB/src/stm32f4xx_dac.c ****        =================================== 
  57:FWLIB/src/stm32f4xx_dac.c ****        [..]     
  58:FWLIB/src/stm32f4xx_dac.c ****        Both DAC channels can be used to generate
  59:FWLIB/src/stm32f4xx_dac.c ****          (#) Noise wave using DAC_WaveGeneration_Noise
  60:FWLIB/src/stm32f4xx_dac.c ****          (#) Triangle wave using DAC_WaveGeneration_Triangle
  61:FWLIB/src/stm32f4xx_dac.c ****           
  62:FWLIB/src/stm32f4xx_dac.c ****           -@-  Wave generation can be disabled using DAC_WaveGeneration_None
  63:FWLIB/src/stm32f4xx_dac.c ****   
  64:FWLIB/src/stm32f4xx_dac.c ****        *** DAC data format ***
  65:FWLIB/src/stm32f4xx_dac.c ****        =======================
  66:FWLIB/src/stm32f4xx_dac.c ****        [..]   
  67:FWLIB/src/stm32f4xx_dac.c ****        The DAC data format can be:
  68:FWLIB/src/stm32f4xx_dac.c ****          (#) 8-bit right alignment using DAC_Align_8b_R
  69:FWLIB/src/stm32f4xx_dac.c ****          (#) 12-bit left alignment using DAC_Align_12b_L
  70:FWLIB/src/stm32f4xx_dac.c ****          (#) 12-bit right alignment using DAC_Align_12b_R
  71:FWLIB/src/stm32f4xx_dac.c ****   
  72:FWLIB/src/stm32f4xx_dac.c ****        *** DAC data value to voltage correspondence ***  
  73:FWLIB/src/stm32f4xx_dac.c ****        ================================================ 
  74:FWLIB/src/stm32f4xx_dac.c ****        [..] 
  75:FWLIB/src/stm32f4xx_dac.c ****        The analog output voltage on each DAC channel pin is determined
  76:FWLIB/src/stm32f4xx_dac.c ****        by the following equation: 
  77:FWLIB/src/stm32f4xx_dac.c ****        DAC_OUTx = VREF+ * DOR / 4095
  78:FWLIB/src/stm32f4xx_dac.c ****        with  DOR is the Data Output Register
  79:FWLIB/src/stm32f4xx_dac.c ****           VEF+ is the input voltage reference (refer to the device datasheet)
  80:FWLIB/src/stm32f4xx_dac.c ****         e.g. To set DAC_OUT1 to 0.7V, use
  81:FWLIB/src/stm32f4xx_dac.c ****           DAC_SetChannel1Data(DAC_Align_12b_R, 868);
  82:FWLIB/src/stm32f4xx_dac.c ****           Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  83:FWLIB/src/stm32f4xx_dac.c ****   
  84:FWLIB/src/stm32f4xx_dac.c ****        *** DMA requests  ***
  85:FWLIB/src/stm32f4xx_dac.c ****        =====================
  86:FWLIB/src/stm32f4xx_dac.c ****        [..]    
  87:FWLIB/src/stm32f4xx_dac.c ****        A DMA1 request can be generated when an external trigger (but not
ARM GAS  /tmp/cc6oDA5T.s 			page 3


  88:FWLIB/src/stm32f4xx_dac.c ****        a software trigger) occurs if DMA1 requests are enabled using
  89:FWLIB/src/stm32f4xx_dac.c ****        DAC_DMACmd()
  90:FWLIB/src/stm32f4xx_dac.c ****        [..]
  91:FWLIB/src/stm32f4xx_dac.c ****        DMA1 requests are mapped as following:
  92:FWLIB/src/stm32f4xx_dac.c ****          (#) DAC channel1 : mapped on DMA1 Stream5 channel7 which must be 
  93:FWLIB/src/stm32f4xx_dac.c ****              already configured
  94:FWLIB/src/stm32f4xx_dac.c ****          (#) DAC channel2 : mapped on DMA1 Stream6 channel7 which must be 
  95:FWLIB/src/stm32f4xx_dac.c ****              already configured
  96:FWLIB/src/stm32f4xx_dac.c ****   
  97:FWLIB/src/stm32f4xx_dac.c ****       
  98:FWLIB/src/stm32f4xx_dac.c ****                       ##### How to use this driver #####
  99:FWLIB/src/stm32f4xx_dac.c ****  ===============================================================================
 100:FWLIB/src/stm32f4xx_dac.c ****     [..]          
 101:FWLIB/src/stm32f4xx_dac.c ****       (+) DAC APB clock must be enabled to get write access to DAC
 102:FWLIB/src/stm32f4xx_dac.c ****           registers using
 103:FWLIB/src/stm32f4xx_dac.c ****           RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE)
 104:FWLIB/src/stm32f4xx_dac.c ****       (+) Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
 105:FWLIB/src/stm32f4xx_dac.c ****       (+) Configure the DAC channel using DAC_Init() function
 106:FWLIB/src/stm32f4xx_dac.c ****       (+) Enable the DAC channel using DAC_Cmd() function
 107:FWLIB/src/stm32f4xx_dac.c ****    
 108:FWLIB/src/stm32f4xx_dac.c ****  @endverbatim    
 109:FWLIB/src/stm32f4xx_dac.c ****   ******************************************************************************
 110:FWLIB/src/stm32f4xx_dac.c ****   * @attention
 111:FWLIB/src/stm32f4xx_dac.c ****   *
 112:FWLIB/src/stm32f4xx_dac.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
 113:FWLIB/src/stm32f4xx_dac.c ****   *
 114:FWLIB/src/stm32f4xx_dac.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 115:FWLIB/src/stm32f4xx_dac.c ****   * You may not use this file except in compliance with the License.
 116:FWLIB/src/stm32f4xx_dac.c ****   * You may obtain a copy of the License at:
 117:FWLIB/src/stm32f4xx_dac.c ****   *
 118:FWLIB/src/stm32f4xx_dac.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 119:FWLIB/src/stm32f4xx_dac.c ****   *
 120:FWLIB/src/stm32f4xx_dac.c ****   * Unless required by applicable law or agreed to in writing, software 
 121:FWLIB/src/stm32f4xx_dac.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 122:FWLIB/src/stm32f4xx_dac.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 123:FWLIB/src/stm32f4xx_dac.c ****   * See the License for the specific language governing permissions and
 124:FWLIB/src/stm32f4xx_dac.c ****   * limitations under the License.
 125:FWLIB/src/stm32f4xx_dac.c ****   *
 126:FWLIB/src/stm32f4xx_dac.c ****   ******************************************************************************  
 127:FWLIB/src/stm32f4xx_dac.c ****   */ 
 128:FWLIB/src/stm32f4xx_dac.c **** 
 129:FWLIB/src/stm32f4xx_dac.c **** 
 130:FWLIB/src/stm32f4xx_dac.c **** /* Includes ------------------------------------------------------------------*/
 131:FWLIB/src/stm32f4xx_dac.c **** #include "stm32f4xx_dac.h"
 132:FWLIB/src/stm32f4xx_dac.c **** #include "stm32f4xx_rcc.h"
 133:FWLIB/src/stm32f4xx_dac.c **** 
 134:FWLIB/src/stm32f4xx_dac.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 135:FWLIB/src/stm32f4xx_dac.c ****   * @{
 136:FWLIB/src/stm32f4xx_dac.c ****   */
 137:FWLIB/src/stm32f4xx_dac.c **** 
 138:FWLIB/src/stm32f4xx_dac.c **** /** @defgroup DAC 
 139:FWLIB/src/stm32f4xx_dac.c ****   * @brief DAC driver modules
 140:FWLIB/src/stm32f4xx_dac.c ****   * @{
 141:FWLIB/src/stm32f4xx_dac.c ****   */ 
 142:FWLIB/src/stm32f4xx_dac.c **** 
 143:FWLIB/src/stm32f4xx_dac.c **** /* Private typedef -----------------------------------------------------------*/
 144:FWLIB/src/stm32f4xx_dac.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/cc6oDA5T.s 			page 4


 145:FWLIB/src/stm32f4xx_dac.c **** 
 146:FWLIB/src/stm32f4xx_dac.c **** /* CR register Mask */
 147:FWLIB/src/stm32f4xx_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
 148:FWLIB/src/stm32f4xx_dac.c **** 
 149:FWLIB/src/stm32f4xx_dac.c **** /* DAC Dual Channels SWTRIG masks */
 150:FWLIB/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
 151:FWLIB/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
 152:FWLIB/src/stm32f4xx_dac.c **** 
 153:FWLIB/src/stm32f4xx_dac.c **** /* DHR registers offsets */
 154:FWLIB/src/stm32f4xx_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
 155:FWLIB/src/stm32f4xx_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
 156:FWLIB/src/stm32f4xx_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
 157:FWLIB/src/stm32f4xx_dac.c **** 
 158:FWLIB/src/stm32f4xx_dac.c **** /* DOR register offset */
 159:FWLIB/src/stm32f4xx_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
 160:FWLIB/src/stm32f4xx_dac.c **** 
 161:FWLIB/src/stm32f4xx_dac.c **** /* Private macro -------------------------------------------------------------*/
 162:FWLIB/src/stm32f4xx_dac.c **** /* Private variables ---------------------------------------------------------*/
 163:FWLIB/src/stm32f4xx_dac.c **** /* Private function prototypes -----------------------------------------------*/
 164:FWLIB/src/stm32f4xx_dac.c **** /* Private functions ---------------------------------------------------------*/
 165:FWLIB/src/stm32f4xx_dac.c **** 
 166:FWLIB/src/stm32f4xx_dac.c **** /** @defgroup DAC_Private_Functions
 167:FWLIB/src/stm32f4xx_dac.c ****   * @{
 168:FWLIB/src/stm32f4xx_dac.c ****   */
 169:FWLIB/src/stm32f4xx_dac.c **** 
 170:FWLIB/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group1 DAC channels configuration
 171:FWLIB/src/stm32f4xx_dac.c ****  *  @brief   DAC channels configuration: trigger, output buffer, data format 
 172:FWLIB/src/stm32f4xx_dac.c ****  *
 173:FWLIB/src/stm32f4xx_dac.c **** @verbatim   
 174:FWLIB/src/stm32f4xx_dac.c ****  ===============================================================================
 175:FWLIB/src/stm32f4xx_dac.c ****    ##### DAC channels configuration: trigger, output buffer, data format #####
 176:FWLIB/src/stm32f4xx_dac.c ****  ===============================================================================  
 177:FWLIB/src/stm32f4xx_dac.c **** 
 178:FWLIB/src/stm32f4xx_dac.c **** @endverbatim
 179:FWLIB/src/stm32f4xx_dac.c ****   * @{
 180:FWLIB/src/stm32f4xx_dac.c ****   */
 181:FWLIB/src/stm32f4xx_dac.c **** 
 182:FWLIB/src/stm32f4xx_dac.c **** /**
 183:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
 184:FWLIB/src/stm32f4xx_dac.c ****   * @param  None
 185:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 186:FWLIB/src/stm32f4xx_dac.c ****   */
 187:FWLIB/src/stm32f4xx_dac.c **** void DAC_DeInit(void)
 188:FWLIB/src/stm32f4xx_dac.c **** {
  29              		.loc 1 188 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 189:FWLIB/src/stm32f4xx_dac.c ****   /* Enable DAC reset state */
 190:FWLIB/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
  38              		.loc 1 190 3 view .LVU1
  39 0002 0121     		movs	r1, #1
ARM GAS  /tmp/cc6oDA5T.s 			page 5


  40 0004 4FF00050 		mov	r0, #536870912
  41 0008 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  42              	.LVL0:
 191:FWLIB/src/stm32f4xx_dac.c ****   /* Release DAC from reset state */
 192:FWLIB/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
  43              		.loc 1 192 3 view .LVU2
  44 000c 0021     		movs	r1, #0
  45 000e 4FF00050 		mov	r0, #536870912
  46 0012 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  47              	.LVL1:
 193:FWLIB/src/stm32f4xx_dac.c **** }
  48              		.loc 1 193 1 is_stmt 0 view .LVU3
  49 0016 08BD     		pop	{r3, pc}
  50              		.cfi_endproc
  51              	.LFE123:
  53              		.section	.text.DAC_Init,"ax",%progbits
  54              		.align	1
  55              		.global	DAC_Init
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	DAC_Init:
  62              	.LVL2:
  63              	.LFB124:
 194:FWLIB/src/stm32f4xx_dac.c **** 
 195:FWLIB/src/stm32f4xx_dac.c **** /**
 196:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified parameters
 197:FWLIB/src/stm32f4xx_dac.c ****   *         in the DAC_InitStruct.
 198:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 199:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 200:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 201:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 202:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
 203:FWLIB/src/stm32f4xx_dac.c ****   *         the configuration information for the  specified DAC channel.
 204:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 205:FWLIB/src/stm32f4xx_dac.c ****   */
 206:FWLIB/src/stm32f4xx_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 207:FWLIB/src/stm32f4xx_dac.c **** {
  64              		.loc 1 207 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              		.loc 1 207 1 is_stmt 0 view .LVU5
  70 0000 30B4     		push	{r4, r5}
  71              	.LCFI1:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 5, -4
 208:FWLIB/src/stm32f4xx_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
  75              		.loc 1 208 3 is_stmt 1 view .LVU6
  76              	.LVL3:
 209:FWLIB/src/stm32f4xx_dac.c **** 
 210:FWLIB/src/stm32f4xx_dac.c ****   /* Check the DAC parameters */
 211:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
  77              		.loc 1 211 3 view .LVU7
ARM GAS  /tmp/cc6oDA5T.s 			page 6


 212:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
  78              		.loc 1 212 3 view .LVU8
 213:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
  79              		.loc 1 213 3 view .LVU9
 214:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
  80              		.loc 1 214 3 view .LVU10
 215:FWLIB/src/stm32f4xx_dac.c **** 
 216:FWLIB/src/stm32f4xx_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 217:FWLIB/src/stm32f4xx_dac.c ****   /* Get the DAC CR value */
 218:FWLIB/src/stm32f4xx_dac.c ****   tmpreg1 = DAC->CR;
  81              		.loc 1 218 3 view .LVU11
  82              		.loc 1 218 11 is_stmt 0 view .LVU12
  83 0002 094C     		ldr	r4, .L5
  84 0004 2268     		ldr	r2, [r4]
  85              	.LVL4:
 219:FWLIB/src/stm32f4xx_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 220:FWLIB/src/stm32f4xx_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
  86              		.loc 1 220 3 is_stmt 1 view .LVU13
  87              		.loc 1 220 30 is_stmt 0 view .LVU14
  88 0006 40F6FE73 		movw	r3, #4094
  89 000a 8340     		lsls	r3, r3, r0
  90              		.loc 1 220 11 view .LVU15
  91 000c 22EA0302 		bic	r2, r2, r3
  92              	.LVL5:
 221:FWLIB/src/stm32f4xx_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, 
 222:FWLIB/src/stm32f4xx_dac.c ****      wave generation, mask/amplitude for wave generation */
 223:FWLIB/src/stm32f4xx_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 224:FWLIB/src/stm32f4xx_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 225:FWLIB/src/stm32f4xx_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 226:FWLIB/src/stm32f4xx_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 227:FWLIB/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
  93              		.loc 1 227 3 is_stmt 1 view .LVU16
  94              		.loc 1 227 28 is_stmt 0 view .LVU17
  95 0010 0B68     		ldr	r3, [r1]
  96              		.loc 1 227 58 view .LVU18
  97 0012 4D68     		ldr	r5, [r1, #4]
  98              		.loc 1 227 42 view .LVU19
  99 0014 2B43     		orrs	r3, r3, r5
 228:FWLIB/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
 100              		.loc 1 228 28 view .LVU20
 101 0016 8D68     		ldr	r5, [r1, #8]
 227:FWLIB/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
 102              		.loc 1 227 79 view .LVU21
 103 0018 2B43     		orrs	r3, r3, r5
 229:FWLIB/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_OutputBuffer);
 104              		.loc 1 229 28 view .LVU22
 105 001a C968     		ldr	r1, [r1, #12]
 106              	.LVL6:
 227:FWLIB/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
 107              		.loc 1 227 11 view .LVU23
 108 001c 0B43     		orrs	r3, r3, r1
 109              	.LVL7:
 230:FWLIB/src/stm32f4xx_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 231:FWLIB/src/stm32f4xx_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
 110              		.loc 1 231 3 is_stmt 1 view .LVU24
 111              		.loc 1 231 22 is_stmt 0 view .LVU25
 112 001e 8340     		lsls	r3, r3, r0
ARM GAS  /tmp/cc6oDA5T.s 			page 7


 113              	.LVL8:
 114              		.loc 1 231 11 view .LVU26
 115 0020 1343     		orrs	r3, r3, r2
 116              	.LVL9:
 232:FWLIB/src/stm32f4xx_dac.c ****   /* Write to DAC CR */
 233:FWLIB/src/stm32f4xx_dac.c ****   DAC->CR = tmpreg1;
 117              		.loc 1 233 3 is_stmt 1 view .LVU27
 118              		.loc 1 233 11 is_stmt 0 view .LVU28
 119 0022 2360     		str	r3, [r4]
 120              	.LVL10:
 234:FWLIB/src/stm32f4xx_dac.c **** }
 121              		.loc 1 234 1 view .LVU29
 122 0024 30BC     		pop	{r4, r5}
 123              	.LCFI2:
 124              		.cfi_restore 5
 125              		.cfi_restore 4
 126              		.cfi_def_cfa_offset 0
 127 0026 7047     		bx	lr
 128              	.L6:
 129              		.align	2
 130              	.L5:
 131 0028 00740040 		.word	1073771520
 132              		.cfi_endproc
 133              	.LFE124:
 135              		.section	.text.DAC_StructInit,"ax",%progbits
 136              		.align	1
 137              		.global	DAC_StructInit
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	DAC_StructInit:
 144              	.LVL11:
 145              	.LFB125:
 235:FWLIB/src/stm32f4xx_dac.c **** 
 236:FWLIB/src/stm32f4xx_dac.c **** /**
 237:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 238:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
 239:FWLIB/src/stm32f4xx_dac.c ****   *         be initialized.
 240:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 241:FWLIB/src/stm32f4xx_dac.c ****   */
 242:FWLIB/src/stm32f4xx_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 243:FWLIB/src/stm32f4xx_dac.c **** {
 146              		.loc 1 243 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 244:FWLIB/src/stm32f4xx_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 245:FWLIB/src/stm32f4xx_dac.c ****   /* Initialize the DAC_Trigger member */
 246:FWLIB/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 151              		.loc 1 246 3 view .LVU31
 152              		.loc 1 246 31 is_stmt 0 view .LVU32
 153 0000 0023     		movs	r3, #0
 154 0002 0360     		str	r3, [r0]
 247:FWLIB/src/stm32f4xx_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 248:FWLIB/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
ARM GAS  /tmp/cc6oDA5T.s 			page 8


 155              		.loc 1 248 3 is_stmt 1 view .LVU33
 156              		.loc 1 248 38 is_stmt 0 view .LVU34
 157 0004 4360     		str	r3, [r0, #4]
 249:FWLIB/src/stm32f4xx_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 250:FWLIB/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 158              		.loc 1 250 3 is_stmt 1 view .LVU35
 159              		.loc 1 250 52 is_stmt 0 view .LVU36
 160 0006 8360     		str	r3, [r0, #8]
 251:FWLIB/src/stm32f4xx_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 252:FWLIB/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 161              		.loc 1 252 3 is_stmt 1 view .LVU37
 162              		.loc 1 252 36 is_stmt 0 view .LVU38
 163 0008 C360     		str	r3, [r0, #12]
 253:FWLIB/src/stm32f4xx_dac.c **** }
 164              		.loc 1 253 1 view .LVU39
 165 000a 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE125:
 169              		.section	.text.DAC_Cmd,"ax",%progbits
 170              		.align	1
 171              		.global	DAC_Cmd
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	DAC_Cmd:
 178              	.LVL12:
 179              	.LFB126:
 254:FWLIB/src/stm32f4xx_dac.c **** 
 255:FWLIB/src/stm32f4xx_dac.c **** /**
 256:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 257:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 258:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 259:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 260:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 261:FWLIB/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channel. 
 262:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 263:FWLIB/src/stm32f4xx_dac.c ****   * @note   When the DAC channel is enabled the trigger source can no more be modified.
 264:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 265:FWLIB/src/stm32f4xx_dac.c ****   */
 266:FWLIB/src/stm32f4xx_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 267:FWLIB/src/stm32f4xx_dac.c **** {
 180              		.loc 1 267 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 268:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 269:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 185              		.loc 1 269 3 view .LVU41
 270:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 186              		.loc 1 270 3 view .LVU42
 271:FWLIB/src/stm32f4xx_dac.c **** 
 272:FWLIB/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 187              		.loc 1 272 3 view .LVU43
 188              		.loc 1 272 6 is_stmt 0 view .LVU44
 189 0000 31B1     		cbz	r1, .L9
ARM GAS  /tmp/cc6oDA5T.s 			page 9


 273:FWLIB/src/stm32f4xx_dac.c ****   {
 274:FWLIB/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel */
 275:FWLIB/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 190              		.loc 1 275 5 is_stmt 1 view .LVU45
 191              		.loc 1 275 13 is_stmt 0 view .LVU46
 192 0002 074B     		ldr	r3, .L11
 193 0004 1968     		ldr	r1, [r3]
 194              	.LVL13:
 195              		.loc 1 275 28 view .LVU47
 196 0006 0122     		movs	r2, #1
 197 0008 8240     		lsls	r2, r2, r0
 198              		.loc 1 275 13 view .LVU48
 199 000a 1143     		orrs	r1, r1, r2
 200 000c 1960     		str	r1, [r3]
 201 000e 7047     		bx	lr
 202              	.LVL14:
 203              	.L9:
 276:FWLIB/src/stm32f4xx_dac.c ****   }
 277:FWLIB/src/stm32f4xx_dac.c ****   else
 278:FWLIB/src/stm32f4xx_dac.c ****   {
 279:FWLIB/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel */
 280:FWLIB/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_EN1 << DAC_Channel));
 204              		.loc 1 280 5 is_stmt 1 view .LVU49
 205              		.loc 1 280 13 is_stmt 0 view .LVU50
 206 0010 0349     		ldr	r1, .L11
 207              	.LVL15:
 208              		.loc 1 280 13 view .LVU51
 209 0012 0B68     		ldr	r3, [r1]
 210              		.loc 1 280 30 view .LVU52
 211 0014 0122     		movs	r2, #1
 212 0016 8240     		lsls	r2, r2, r0
 213              		.loc 1 280 13 view .LVU53
 214 0018 23EA0203 		bic	r3, r3, r2
 215 001c 0B60     		str	r3, [r1]
 281:FWLIB/src/stm32f4xx_dac.c ****   }
 282:FWLIB/src/stm32f4xx_dac.c **** }
 216              		.loc 1 282 1 view .LVU54
 217 001e 7047     		bx	lr
 218              	.L12:
 219              		.align	2
 220              	.L11:
 221 0020 00740040 		.word	1073771520
 222              		.cfi_endproc
 223              	.LFE126:
 225              		.section	.text.DAC_SoftwareTriggerCmd,"ax",%progbits
 226              		.align	1
 227              		.global	DAC_SoftwareTriggerCmd
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv4-sp-d16
 233              	DAC_SoftwareTriggerCmd:
 234              	.LVL16:
 235              	.LFB127:
 283:FWLIB/src/stm32f4xx_dac.c **** 
 284:FWLIB/src/stm32f4xx_dac.c **** /**
 285:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
ARM GAS  /tmp/cc6oDA5T.s 			page 10


 286:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 287:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 288:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 289:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 290:FWLIB/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 291:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 292:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 293:FWLIB/src/stm32f4xx_dac.c ****   */
 294:FWLIB/src/stm32f4xx_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 295:FWLIB/src/stm32f4xx_dac.c **** {
 236              		.loc 1 295 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 296:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 297:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 241              		.loc 1 297 3 view .LVU56
 298:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 242              		.loc 1 298 3 view .LVU57
 299:FWLIB/src/stm32f4xx_dac.c **** 
 300:FWLIB/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 243              		.loc 1 300 3 view .LVU58
 244              		.loc 1 300 6 is_stmt 0 view .LVU59
 245 0000 41B1     		cbz	r1, .L14
 301:FWLIB/src/stm32f4xx_dac.c ****   {
 302:FWLIB/src/stm32f4xx_dac.c ****     /* Enable software trigger for the selected DAC channel */
 303:FWLIB/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 246              		.loc 1 303 5 is_stmt 1 view .LVU60
 247              		.loc 1 303 18 is_stmt 0 view .LVU61
 248 0002 0949     		ldr	r1, .L16
 249              	.LVL17:
 250              		.loc 1 303 18 view .LVU62
 251 0004 4B68     		ldr	r3, [r1, #4]
 252              		.loc 1 303 67 view .LVU63
 253 0006 0009     		lsrs	r0, r0, #4
 254              	.LVL18:
 255              		.loc 1 303 51 view .LVU64
 256 0008 0122     		movs	r2, #1
 257 000a 02FA00F0 		lsl	r0, r2, r0
 258              		.loc 1 303 18 view .LVU65
 259 000e 0343     		orrs	r3, r3, r0
 260 0010 4B60     		str	r3, [r1, #4]
 261 0012 7047     		bx	lr
 262              	.LVL19:
 263              	.L14:
 304:FWLIB/src/stm32f4xx_dac.c ****   }
 305:FWLIB/src/stm32f4xx_dac.c ****   else
 306:FWLIB/src/stm32f4xx_dac.c ****   {
 307:FWLIB/src/stm32f4xx_dac.c ****     /* Disable software trigger for the selected DAC channel */
 308:FWLIB/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 264              		.loc 1 308 5 is_stmt 1 view .LVU66
 265              		.loc 1 308 18 is_stmt 0 view .LVU67
 266 0014 0449     		ldr	r1, .L16
 267              	.LVL20:
 268              		.loc 1 308 18 view .LVU68
 269 0016 4B68     		ldr	r3, [r1, #4]
ARM GAS  /tmp/cc6oDA5T.s 			page 11


 270              		.loc 1 308 69 view .LVU69
 271 0018 0009     		lsrs	r0, r0, #4
 272              	.LVL21:
 273              		.loc 1 308 53 view .LVU70
 274 001a 0122     		movs	r2, #1
 275 001c 02FA00F0 		lsl	r0, r2, r0
 276              		.loc 1 308 18 view .LVU71
 277 0020 23EA0003 		bic	r3, r3, r0
 278 0024 4B60     		str	r3, [r1, #4]
 309:FWLIB/src/stm32f4xx_dac.c ****   }
 310:FWLIB/src/stm32f4xx_dac.c **** }
 279              		.loc 1 310 1 view .LVU72
 280 0026 7047     		bx	lr
 281              	.L17:
 282              		.align	2
 283              	.L16:
 284 0028 00740040 		.word	1073771520
 285              		.cfi_endproc
 286              	.LFE127:
 288              		.section	.text.DAC_DualSoftwareTriggerCmd,"ax",%progbits
 289              		.align	1
 290              		.global	DAC_DualSoftwareTriggerCmd
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv4-sp-d16
 296              	DAC_DualSoftwareTriggerCmd:
 297              	.LVL22:
 298              	.LFB128:
 311:FWLIB/src/stm32f4xx_dac.c **** 
 312:FWLIB/src/stm32f4xx_dac.c **** /**
 313:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software triggers.
 314:FWLIB/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 315:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 316:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 317:FWLIB/src/stm32f4xx_dac.c ****   */
 318:FWLIB/src/stm32f4xx_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 319:FWLIB/src/stm32f4xx_dac.c **** {
 299              		.loc 1 319 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 320:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 321:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 304              		.loc 1 321 3 view .LVU74
 322:FWLIB/src/stm32f4xx_dac.c **** 
 323:FWLIB/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 305              		.loc 1 323 3 view .LVU75
 306              		.loc 1 323 6 is_stmt 0 view .LVU76
 307 0000 28B1     		cbz	r0, .L19
 324:FWLIB/src/stm32f4xx_dac.c ****   {
 325:FWLIB/src/stm32f4xx_dac.c ****     /* Enable software trigger for both DAC channels */
 326:FWLIB/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET;
 308              		.loc 1 326 5 is_stmt 1 view .LVU77
 309              		.loc 1 326 18 is_stmt 0 view .LVU78
 310 0002 064A     		ldr	r2, .L21
ARM GAS  /tmp/cc6oDA5T.s 			page 12


 311 0004 5368     		ldr	r3, [r2, #4]
 312 0006 43F00303 		orr	r3, r3, #3
 313 000a 5360     		str	r3, [r2, #4]
 314 000c 7047     		bx	lr
 315              	.L19:
 327:FWLIB/src/stm32f4xx_dac.c ****   }
 328:FWLIB/src/stm32f4xx_dac.c ****   else
 329:FWLIB/src/stm32f4xx_dac.c ****   {
 330:FWLIB/src/stm32f4xx_dac.c ****     /* Disable software trigger for both DAC channels */
 331:FWLIB/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 316              		.loc 1 331 5 is_stmt 1 view .LVU79
 317              		.loc 1 331 18 is_stmt 0 view .LVU80
 318 000e 034A     		ldr	r2, .L21
 319 0010 5368     		ldr	r3, [r2, #4]
 320 0012 23F00303 		bic	r3, r3, #3
 321 0016 5360     		str	r3, [r2, #4]
 332:FWLIB/src/stm32f4xx_dac.c ****   }
 333:FWLIB/src/stm32f4xx_dac.c **** }
 322              		.loc 1 333 1 view .LVU81
 323 0018 7047     		bx	lr
 324              	.L22:
 325 001a 00BF     		.align	2
 326              	.L21:
 327 001c 00740040 		.word	1073771520
 328              		.cfi_endproc
 329              	.LFE128:
 331              		.section	.text.DAC_WaveGenerationCmd,"ax",%progbits
 332              		.align	1
 333              		.global	DAC_WaveGenerationCmd
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu fpv4-sp-d16
 339              	DAC_WaveGenerationCmd:
 340              	.LVL23:
 341              	.LFB129:
 334:FWLIB/src/stm32f4xx_dac.c **** 
 335:FWLIB/src/stm32f4xx_dac.c **** /**
 336:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 337:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 338:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 339:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 340:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 341:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Wave: specifies the wave type to enable or disable.
 342:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 343:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Noise: noise wave generation
 344:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Triangle: triangle wave generation
 345:FWLIB/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 346:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.  
 347:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 348:FWLIB/src/stm32f4xx_dac.c ****   */
 349:FWLIB/src/stm32f4xx_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 350:FWLIB/src/stm32f4xx_dac.c **** {
 342              		.loc 1 350 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc6oDA5T.s 			page 13


 346              		@ link register save eliminated.
 351:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 352:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 347              		.loc 1 352 3 view .LVU83
 353:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 348              		.loc 1 353 3 view .LVU84
 354:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 349              		.loc 1 354 3 view .LVU85
 355:FWLIB/src/stm32f4xx_dac.c **** 
 356:FWLIB/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 350              		.loc 1 356 3 view .LVU86
 351              		.loc 1 356 6 is_stmt 0 view .LVU87
 352 0000 2AB1     		cbz	r2, .L24
 357:FWLIB/src/stm32f4xx_dac.c ****   {
 358:FWLIB/src/stm32f4xx_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 359:FWLIB/src/stm32f4xx_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 353              		.loc 1 359 5 is_stmt 1 view .LVU88
 354              		.loc 1 359 13 is_stmt 0 view .LVU89
 355 0002 064A     		ldr	r2, .L26
 356              	.LVL24:
 357              		.loc 1 359 13 view .LVU90
 358 0004 1368     		ldr	r3, [r2]
 359              		.loc 1 359 25 view .LVU91
 360 0006 8140     		lsls	r1, r1, r0
 361              	.LVL25:
 362              		.loc 1 359 13 view .LVU92
 363 0008 1943     		orrs	r1, r1, r3
 364 000a 1160     		str	r1, [r2]
 365 000c 7047     		bx	lr
 366              	.LVL26:
 367              	.L24:
 360:FWLIB/src/stm32f4xx_dac.c ****   }
 361:FWLIB/src/stm32f4xx_dac.c ****   else
 362:FWLIB/src/stm32f4xx_dac.c ****   {
 363:FWLIB/src/stm32f4xx_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 364:FWLIB/src/stm32f4xx_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 368              		.loc 1 364 5 is_stmt 1 view .LVU93
 369              		.loc 1 364 13 is_stmt 0 view .LVU94
 370 000e 034A     		ldr	r2, .L26
 371              	.LVL27:
 372              		.loc 1 364 13 view .LVU95
 373 0010 1368     		ldr	r3, [r2]
 374              		.loc 1 364 27 view .LVU96
 375 0012 8140     		lsls	r1, r1, r0
 376              	.LVL28:
 377              		.loc 1 364 13 view .LVU97
 378 0014 23EA0101 		bic	r1, r3, r1
 379 0018 1160     		str	r1, [r2]
 365:FWLIB/src/stm32f4xx_dac.c ****   }
 366:FWLIB/src/stm32f4xx_dac.c **** }
 380              		.loc 1 366 1 view .LVU98
 381 001a 7047     		bx	lr
 382              	.L27:
 383              		.align	2
 384              	.L26:
 385 001c 00740040 		.word	1073771520
 386              		.cfi_endproc
ARM GAS  /tmp/cc6oDA5T.s 			page 14


 387              	.LFE129:
 389              		.section	.text.DAC_SetChannel1Data,"ax",%progbits
 390              		.align	1
 391              		.global	DAC_SetChannel1Data
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 395              		.fpu fpv4-sp-d16
 397              	DAC_SetChannel1Data:
 398              	.LVL29:
 399              	.LFB130:
 367:FWLIB/src/stm32f4xx_dac.c **** 
 368:FWLIB/src/stm32f4xx_dac.c **** /**
 369:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 370:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 371:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 372:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 373:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 374:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 375:FWLIB/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 376:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 377:FWLIB/src/stm32f4xx_dac.c ****   */
 378:FWLIB/src/stm32f4xx_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 379:FWLIB/src/stm32f4xx_dac.c **** {  
 400              		.loc 1 379 1 is_stmt 1 view -0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 8
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 405              		.loc 1 379 1 is_stmt 0 view .LVU100
 406 0000 82B0     		sub	sp, sp, #8
 407              	.LCFI3:
 408              		.cfi_def_cfa_offset 8
 380:FWLIB/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 409              		.loc 1 380 3 is_stmt 1 view .LVU101
 410              		.loc 1 380 17 is_stmt 0 view .LVU102
 411 0002 0023     		movs	r3, #0
 412 0004 0193     		str	r3, [sp, #4]
 381:FWLIB/src/stm32f4xx_dac.c ****   
 382:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 383:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 413              		.loc 1 383 3 is_stmt 1 view .LVU103
 384:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 414              		.loc 1 384 3 view .LVU104
 385:FWLIB/src/stm32f4xx_dac.c ****   
 386:FWLIB/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 415              		.loc 1 386 3 view .LVU105
 416              		.loc 1 386 7 is_stmt 0 view .LVU106
 417 0006 054B     		ldr	r3, .L30
 418 0008 0193     		str	r3, [sp, #4]
 387:FWLIB/src/stm32f4xx_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 419              		.loc 1 387 3 is_stmt 1 view .LVU107
 420              		.loc 1 387 7 is_stmt 0 view .LVU108
 421 000a 019B     		ldr	r3, [sp, #4]
 422 000c 1844     		add	r0, r0, r3
 423              	.LVL30:
 424              		.loc 1 387 7 view .LVU109
ARM GAS  /tmp/cc6oDA5T.s 			page 15


 425 000e 0830     		adds	r0, r0, #8
 426 0010 0190     		str	r0, [sp, #4]
 388:FWLIB/src/stm32f4xx_dac.c **** 
 389:FWLIB/src/stm32f4xx_dac.c ****   /* Set the DAC channel1 selected data holding register */
 390:FWLIB/src/stm32f4xx_dac.c ****   *(__IO uint32_t *) tmp = Data;
 427              		.loc 1 390 3 is_stmt 1 view .LVU110
 428              		.loc 1 390 4 is_stmt 0 view .LVU111
 429 0012 019B     		ldr	r3, [sp, #4]
 430              		.loc 1 390 26 view .LVU112
 431 0014 1960     		str	r1, [r3]
 391:FWLIB/src/stm32f4xx_dac.c **** }
 432              		.loc 1 391 1 view .LVU113
 433 0016 02B0     		add	sp, sp, #8
 434              	.LCFI4:
 435              		.cfi_def_cfa_offset 0
 436              		@ sp needed
 437 0018 7047     		bx	lr
 438              	.L31:
 439 001a 00BF     		.align	2
 440              	.L30:
 441 001c 00740040 		.word	1073771520
 442              		.cfi_endproc
 443              	.LFE130:
 445              		.section	.text.DAC_SetChannel2Data,"ax",%progbits
 446              		.align	1
 447              		.global	DAC_SetChannel2Data
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu fpv4-sp-d16
 453              	DAC_SetChannel2Data:
 454              	.LVL31:
 455              	.LFB131:
 392:FWLIB/src/stm32f4xx_dac.c **** 
 393:FWLIB/src/stm32f4xx_dac.c **** /**
 394:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 395:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 396:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 397:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 398:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 399:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 400:FWLIB/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 401:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 402:FWLIB/src/stm32f4xx_dac.c ****   */
 403:FWLIB/src/stm32f4xx_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 404:FWLIB/src/stm32f4xx_dac.c **** {
 456              		.loc 1 404 1 is_stmt 1 view -0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 8
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461              		.loc 1 404 1 is_stmt 0 view .LVU115
 462 0000 82B0     		sub	sp, sp, #8
 463              	.LCFI5:
 464              		.cfi_def_cfa_offset 8
 405:FWLIB/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 465              		.loc 1 405 3 is_stmt 1 view .LVU116
ARM GAS  /tmp/cc6oDA5T.s 			page 16


 466              		.loc 1 405 17 is_stmt 0 view .LVU117
 467 0002 0023     		movs	r3, #0
 468 0004 0193     		str	r3, [sp, #4]
 406:FWLIB/src/stm32f4xx_dac.c **** 
 407:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 408:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 469              		.loc 1 408 3 is_stmt 1 view .LVU118
 409:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 470              		.loc 1 409 3 view .LVU119
 410:FWLIB/src/stm32f4xx_dac.c ****   
 411:FWLIB/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 471              		.loc 1 411 3 view .LVU120
 472              		.loc 1 411 7 is_stmt 0 view .LVU121
 473 0006 054B     		ldr	r3, .L34
 474 0008 0193     		str	r3, [sp, #4]
 412:FWLIB/src/stm32f4xx_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 475              		.loc 1 412 3 is_stmt 1 view .LVU122
 476              		.loc 1 412 7 is_stmt 0 view .LVU123
 477 000a 019B     		ldr	r3, [sp, #4]
 478 000c 1844     		add	r0, r0, r3
 479              	.LVL32:
 480              		.loc 1 412 7 view .LVU124
 481 000e 1430     		adds	r0, r0, #20
 482 0010 0190     		str	r0, [sp, #4]
 413:FWLIB/src/stm32f4xx_dac.c **** 
 414:FWLIB/src/stm32f4xx_dac.c ****   /* Set the DAC channel2 selected data holding register */
 415:FWLIB/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = Data;
 483              		.loc 1 415 3 is_stmt 1 view .LVU125
 484              		.loc 1 415 4 is_stmt 0 view .LVU126
 485 0012 019B     		ldr	r3, [sp, #4]
 486              		.loc 1 415 25 view .LVU127
 487 0014 1960     		str	r1, [r3]
 416:FWLIB/src/stm32f4xx_dac.c **** }
 488              		.loc 1 416 1 view .LVU128
 489 0016 02B0     		add	sp, sp, #8
 490              	.LCFI6:
 491              		.cfi_def_cfa_offset 0
 492              		@ sp needed
 493 0018 7047     		bx	lr
 494              	.L35:
 495 001a 00BF     		.align	2
 496              	.L34:
 497 001c 00740040 		.word	1073771520
 498              		.cfi_endproc
 499              	.LFE131:
 501              		.section	.text.DAC_SetDualChannelData,"ax",%progbits
 502              		.align	1
 503              		.global	DAC_SetDualChannelData
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 507              		.fpu fpv4-sp-d16
 509              	DAC_SetDualChannelData:
 510              	.LVL33:
 511              	.LFB132:
 417:FWLIB/src/stm32f4xx_dac.c **** 
 418:FWLIB/src/stm32f4xx_dac.c **** /**
ARM GAS  /tmp/cc6oDA5T.s 			page 17


 419:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for dual channel DAC.
 420:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 421:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 422:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 423:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 424:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 425:FWLIB/src/stm32f4xx_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data holding register.
 426:FWLIB/src/stm32f4xx_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data  holding register.
 427:FWLIB/src/stm32f4xx_dac.c ****   * @note   In dual mode, a unique register access is required to write in both
 428:FWLIB/src/stm32f4xx_dac.c ****   *          DAC channels at the same time.
 429:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 430:FWLIB/src/stm32f4xx_dac.c ****   */
 431:FWLIB/src/stm32f4xx_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 432:FWLIB/src/stm32f4xx_dac.c **** {
 512              		.loc 1 432 1 is_stmt 1 view -0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 433:FWLIB/src/stm32f4xx_dac.c ****   uint32_t data = 0, tmp = 0;
 517              		.loc 1 433 3 view .LVU130
 434:FWLIB/src/stm32f4xx_dac.c ****   
 435:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 436:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 518              		.loc 1 436 3 view .LVU131
 437:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 519              		.loc 1 437 3 view .LVU132
 438:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 520              		.loc 1 438 3 view .LVU133
 439:FWLIB/src/stm32f4xx_dac.c ****   
 440:FWLIB/src/stm32f4xx_dac.c ****   /* Calculate and set dual DAC data holding register value */
 441:FWLIB/src/stm32f4xx_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 521              		.loc 1 441 3 view .LVU134
 522              		.loc 1 441 6 is_stmt 0 view .LVU135
 523 0000 0828     		cmp	r0, #8
 524 0002 04D0     		beq	.L39
 442:FWLIB/src/stm32f4xx_dac.c ****   {
 443:FWLIB/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 444:FWLIB/src/stm32f4xx_dac.c ****   }
 445:FWLIB/src/stm32f4xx_dac.c ****   else
 446:FWLIB/src/stm32f4xx_dac.c ****   {
 447:FWLIB/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 525              		.loc 1 447 5 is_stmt 1 view .LVU136
 526              		.loc 1 447 10 is_stmt 0 view .LVU137
 527 0004 42EA0142 		orr	r2, r2, r1, lsl #16
 528              	.LVL34:
 529              	.L38:
 448:FWLIB/src/stm32f4xx_dac.c ****   }
 449:FWLIB/src/stm32f4xx_dac.c ****   
 450:FWLIB/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 530              		.loc 1 450 3 is_stmt 1 view .LVU138
 451:FWLIB/src/stm32f4xx_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 531              		.loc 1 451 3 view .LVU139
 532              		.loc 1 451 7 is_stmt 0 view .LVU140
 533 0008 024B     		ldr	r3, .L40
 534              	.LVL35:
 452:FWLIB/src/stm32f4xx_dac.c **** 
ARM GAS  /tmp/cc6oDA5T.s 			page 18


 453:FWLIB/src/stm32f4xx_dac.c ****   /* Set the dual DAC selected data holding register */
 454:FWLIB/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = data;
 535              		.loc 1 454 3 is_stmt 1 view .LVU141
 536              		.loc 1 454 25 is_stmt 0 view .LVU142
 537 000a C250     		str	r2, [r0, r3]
 455:FWLIB/src/stm32f4xx_dac.c **** }
 538              		.loc 1 455 1 view .LVU143
 539 000c 7047     		bx	lr
 540              	.LVL36:
 541              	.L39:
 443:FWLIB/src/stm32f4xx_dac.c ****   }
 542              		.loc 1 443 5 is_stmt 1 view .LVU144
 443:FWLIB/src/stm32f4xx_dac.c ****   }
 543              		.loc 1 443 10 is_stmt 0 view .LVU145
 544 000e 42EA0122 		orr	r2, r2, r1, lsl #8
 545              	.LVL37:
 443:FWLIB/src/stm32f4xx_dac.c ****   }
 546              		.loc 1 443 10 view .LVU146
 547 0012 F9E7     		b	.L38
 548              	.L41:
 549              		.align	2
 550              	.L40:
 551 0014 20740040 		.word	1073771552
 552              		.cfi_endproc
 553              	.LFE132:
 555              		.section	.text.DAC_GetDataOutputValue,"ax",%progbits
 556              		.align	1
 557              		.global	DAC_GetDataOutputValue
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu fpv4-sp-d16
 563              	DAC_GetDataOutputValue:
 564              	.LVL38:
 565              	.LFB133:
 456:FWLIB/src/stm32f4xx_dac.c **** 
 457:FWLIB/src/stm32f4xx_dac.c **** /**
 458:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 459:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 460:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 461:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 462:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 463:FWLIB/src/stm32f4xx_dac.c ****   * @retval The selected DAC channel data output value.
 464:FWLIB/src/stm32f4xx_dac.c ****   */
 465:FWLIB/src/stm32f4xx_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 466:FWLIB/src/stm32f4xx_dac.c **** {
 566              		.loc 1 466 1 is_stmt 1 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 8
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 571              		.loc 1 466 1 is_stmt 0 view .LVU148
 572 0000 82B0     		sub	sp, sp, #8
 573              	.LCFI7:
 574              		.cfi_def_cfa_offset 8
 467:FWLIB/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 575              		.loc 1 467 3 is_stmt 1 view .LVU149
ARM GAS  /tmp/cc6oDA5T.s 			page 19


 576              		.loc 1 467 17 is_stmt 0 view .LVU150
 577 0002 0023     		movs	r3, #0
 578 0004 0193     		str	r3, [sp, #4]
 468:FWLIB/src/stm32f4xx_dac.c ****   
 469:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 470:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 579              		.loc 1 470 3 is_stmt 1 view .LVU151
 471:FWLIB/src/stm32f4xx_dac.c ****   
 472:FWLIB/src/stm32f4xx_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 580              		.loc 1 472 3 view .LVU152
 581              		.loc 1 472 7 is_stmt 0 view .LVU153
 582 0006 064B     		ldr	r3, .L44
 583 0008 0193     		str	r3, [sp, #4]
 473:FWLIB/src/stm32f4xx_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 584              		.loc 1 473 3 is_stmt 1 view .LVU154
 585              		.loc 1 473 7 is_stmt 0 view .LVU155
 586 000a 019B     		ldr	r3, [sp, #4]
 587 000c 03EB9000 		add	r0, r3, r0, lsr #2
 588              	.LVL39:
 589              		.loc 1 473 7 view .LVU156
 590 0010 2C30     		adds	r0, r0, #44
 591 0012 0190     		str	r0, [sp, #4]
 474:FWLIB/src/stm32f4xx_dac.c ****   
 475:FWLIB/src/stm32f4xx_dac.c ****   /* Returns the DAC channel data output register value */
 476:FWLIB/src/stm32f4xx_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 592              		.loc 1 476 3 is_stmt 1 view .LVU157
 593              		.loc 1 476 23 is_stmt 0 view .LVU158
 594 0014 019B     		ldr	r3, [sp, #4]
 595              		.loc 1 476 22 view .LVU159
 596 0016 1868     		ldr	r0, [r3]
 477:FWLIB/src/stm32f4xx_dac.c **** }
 597              		.loc 1 477 1 view .LVU160
 598 0018 80B2     		uxth	r0, r0
 599 001a 02B0     		add	sp, sp, #8
 600              	.LCFI8:
 601              		.cfi_def_cfa_offset 0
 602              		@ sp needed
 603 001c 7047     		bx	lr
 604              	.L45:
 605 001e 00BF     		.align	2
 606              	.L44:
 607 0020 00740040 		.word	1073771520
 608              		.cfi_endproc
 609              	.LFE133:
 611              		.section	.text.DAC_DMACmd,"ax",%progbits
 612              		.align	1
 613              		.global	DAC_DMACmd
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 617              		.fpu fpv4-sp-d16
 619              	DAC_DMACmd:
 620              	.LVL40:
 621              	.LFB134:
 478:FWLIB/src/stm32f4xx_dac.c **** /**
 479:FWLIB/src/stm32f4xx_dac.c ****   * @}
 480:FWLIB/src/stm32f4xx_dac.c ****   */
ARM GAS  /tmp/cc6oDA5T.s 			page 20


 481:FWLIB/src/stm32f4xx_dac.c **** 
 482:FWLIB/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group2 DMA management functions
 483:FWLIB/src/stm32f4xx_dac.c ****  *  @brief   DMA management functions
 484:FWLIB/src/stm32f4xx_dac.c ****  *
 485:FWLIB/src/stm32f4xx_dac.c **** @verbatim   
 486:FWLIB/src/stm32f4xx_dac.c ****  ===============================================================================
 487:FWLIB/src/stm32f4xx_dac.c ****                        ##### DMA management functions #####
 488:FWLIB/src/stm32f4xx_dac.c ****  ===============================================================================  
 489:FWLIB/src/stm32f4xx_dac.c **** 
 490:FWLIB/src/stm32f4xx_dac.c **** @endverbatim
 491:FWLIB/src/stm32f4xx_dac.c ****   * @{
 492:FWLIB/src/stm32f4xx_dac.c ****   */
 493:FWLIB/src/stm32f4xx_dac.c **** 
 494:FWLIB/src/stm32f4xx_dac.c **** /**
 495:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 496:FWLIB/src/stm32f4xx_dac.c ****   * @note   When enabled DMA1 is generated when an external trigger (EXTI Line9,
 497:FWLIB/src/stm32f4xx_dac.c ****   *         TIM2, TIM4, TIM5, TIM6, TIM7 or TIM8  but not a software trigger) occurs.
 498:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 499:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 500:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 501:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 502:FWLIB/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 503:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 504:FWLIB/src/stm32f4xx_dac.c ****   * @note   The DAC channel1 is mapped on DMA1 Stream 5 channel7 which must be
 505:FWLIB/src/stm32f4xx_dac.c ****   *          already configured.
 506:FWLIB/src/stm32f4xx_dac.c ****   * @note   The DAC channel2 is mapped on DMA1 Stream 6 channel7 which must be
 507:FWLIB/src/stm32f4xx_dac.c ****   *          already configured.    
 508:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 509:FWLIB/src/stm32f4xx_dac.c ****   */
 510:FWLIB/src/stm32f4xx_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 511:FWLIB/src/stm32f4xx_dac.c **** {
 622              		.loc 1 511 1 is_stmt 1 view -0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 512:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 513:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 627              		.loc 1 513 3 view .LVU162
 514:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 628              		.loc 1 514 3 view .LVU163
 515:FWLIB/src/stm32f4xx_dac.c **** 
 516:FWLIB/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 629              		.loc 1 516 3 view .LVU164
 630              		.loc 1 516 6 is_stmt 0 view .LVU165
 631 0000 39B1     		cbz	r1, .L47
 517:FWLIB/src/stm32f4xx_dac.c ****   {
 518:FWLIB/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel DMA request */
 519:FWLIB/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 632              		.loc 1 519 5 is_stmt 1 view .LVU166
 633              		.loc 1 519 13 is_stmt 0 view .LVU167
 634 0002 084B     		ldr	r3, .L49
 635 0004 1968     		ldr	r1, [r3]
 636              	.LVL41:
 637              		.loc 1 519 31 view .LVU168
 638 0006 4FF48052 		mov	r2, #4096
 639 000a 8240     		lsls	r2, r2, r0
ARM GAS  /tmp/cc6oDA5T.s 			page 21


 640              		.loc 1 519 13 view .LVU169
 641 000c 1143     		orrs	r1, r1, r2
 642 000e 1960     		str	r1, [r3]
 643 0010 7047     		bx	lr
 644              	.LVL42:
 645              	.L47:
 520:FWLIB/src/stm32f4xx_dac.c ****   }
 521:FWLIB/src/stm32f4xx_dac.c ****   else
 522:FWLIB/src/stm32f4xx_dac.c ****   {
 523:FWLIB/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel DMA request */
 524:FWLIB/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_DMAEN1 << DAC_Channel));
 646              		.loc 1 524 5 is_stmt 1 view .LVU170
 647              		.loc 1 524 13 is_stmt 0 view .LVU171
 648 0012 0449     		ldr	r1, .L49
 649              	.LVL43:
 650              		.loc 1 524 13 view .LVU172
 651 0014 0B68     		ldr	r3, [r1]
 652              		.loc 1 524 33 view .LVU173
 653 0016 4FF48052 		mov	r2, #4096
 654 001a 8240     		lsls	r2, r2, r0
 655              		.loc 1 524 13 view .LVU174
 656 001c 23EA0203 		bic	r3, r3, r2
 657 0020 0B60     		str	r3, [r1]
 525:FWLIB/src/stm32f4xx_dac.c ****   }
 526:FWLIB/src/stm32f4xx_dac.c **** }
 658              		.loc 1 526 1 view .LVU175
 659 0022 7047     		bx	lr
 660              	.L50:
 661              		.align	2
 662              	.L49:
 663 0024 00740040 		.word	1073771520
 664              		.cfi_endproc
 665              	.LFE134:
 667              		.section	.text.DAC_ITConfig,"ax",%progbits
 668              		.align	1
 669              		.global	DAC_ITConfig
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 673              		.fpu fpv4-sp-d16
 675              	DAC_ITConfig:
 676              	.LVL44:
 677              	.LFB135:
 527:FWLIB/src/stm32f4xx_dac.c **** /**
 528:FWLIB/src/stm32f4xx_dac.c ****   * @}
 529:FWLIB/src/stm32f4xx_dac.c ****   */
 530:FWLIB/src/stm32f4xx_dac.c **** 
 531:FWLIB/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group3 Interrupts and flags management functions
 532:FWLIB/src/stm32f4xx_dac.c ****  *  @brief   Interrupts and flags management functions
 533:FWLIB/src/stm32f4xx_dac.c ****  *
 534:FWLIB/src/stm32f4xx_dac.c **** @verbatim   
 535:FWLIB/src/stm32f4xx_dac.c ****  ===============================================================================
 536:FWLIB/src/stm32f4xx_dac.c ****              ##### Interrupts and flags management functions #####
 537:FWLIB/src/stm32f4xx_dac.c ****  ===============================================================================  
 538:FWLIB/src/stm32f4xx_dac.c **** 
 539:FWLIB/src/stm32f4xx_dac.c **** @endverbatim
 540:FWLIB/src/stm32f4xx_dac.c ****   * @{
ARM GAS  /tmp/cc6oDA5T.s 			page 22


 541:FWLIB/src/stm32f4xx_dac.c ****   */
 542:FWLIB/src/stm32f4xx_dac.c **** 
 543:FWLIB/src/stm32f4xx_dac.c **** /**
 544:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 545:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 546:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 547:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 548:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 549:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 550:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 551:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 552:FWLIB/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 553:FWLIB/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 554:FWLIB/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 555:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 556:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 557:FWLIB/src/stm32f4xx_dac.c ****   */ 
 558:FWLIB/src/stm32f4xx_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 559:FWLIB/src/stm32f4xx_dac.c **** {
 678              		.loc 1 559 1 is_stmt 1 view -0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 682              		@ link register save eliminated.
 560:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 561:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 683              		.loc 1 561 3 view .LVU177
 562:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 684              		.loc 1 562 3 view .LVU178
 563:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 685              		.loc 1 563 3 view .LVU179
 564:FWLIB/src/stm32f4xx_dac.c **** 
 565:FWLIB/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 686              		.loc 1 565 3 view .LVU180
 687              		.loc 1 565 6 is_stmt 0 view .LVU181
 688 0000 2AB1     		cbz	r2, .L52
 566:FWLIB/src/stm32f4xx_dac.c ****   {
 567:FWLIB/src/stm32f4xx_dac.c ****     /* Enable the selected DAC interrupts */
 568:FWLIB/src/stm32f4xx_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 689              		.loc 1 568 5 is_stmt 1 view .LVU182
 690              		.loc 1 568 13 is_stmt 0 view .LVU183
 691 0002 064A     		ldr	r2, .L54
 692              	.LVL45:
 693              		.loc 1 568 13 view .LVU184
 694 0004 1368     		ldr	r3, [r2]
 695              		.loc 1 568 25 view .LVU185
 696 0006 8140     		lsls	r1, r1, r0
 697              	.LVL46:
 698              		.loc 1 568 13 view .LVU186
 699 0008 1943     		orrs	r1, r1, r3
 700 000a 1160     		str	r1, [r2]
 701 000c 7047     		bx	lr
 702              	.LVL47:
 703              	.L52:
 569:FWLIB/src/stm32f4xx_dac.c ****   }
 570:FWLIB/src/stm32f4xx_dac.c ****   else
 571:FWLIB/src/stm32f4xx_dac.c ****   {
ARM GAS  /tmp/cc6oDA5T.s 			page 23


 572:FWLIB/src/stm32f4xx_dac.c ****     /* Disable the selected DAC interrupts */
 573:FWLIB/src/stm32f4xx_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 704              		.loc 1 573 5 is_stmt 1 view .LVU187
 705              		.loc 1 573 13 is_stmt 0 view .LVU188
 706 000e 034A     		ldr	r2, .L54
 707              	.LVL48:
 708              		.loc 1 573 13 view .LVU189
 709 0010 1368     		ldr	r3, [r2]
 710              		.loc 1 573 36 view .LVU190
 711 0012 8140     		lsls	r1, r1, r0
 712              	.LVL49:
 713              		.loc 1 573 13 view .LVU191
 714 0014 23EA0101 		bic	r1, r3, r1
 715 0018 1160     		str	r1, [r2]
 574:FWLIB/src/stm32f4xx_dac.c ****   }
 575:FWLIB/src/stm32f4xx_dac.c **** }
 716              		.loc 1 575 1 view .LVU192
 717 001a 7047     		bx	lr
 718              	.L55:
 719              		.align	2
 720              	.L54:
 721 001c 00740040 		.word	1073771520
 722              		.cfi_endproc
 723              	.LFE135:
 725              		.section	.text.DAC_GetFlagStatus,"ax",%progbits
 726              		.align	1
 727              		.global	DAC_GetFlagStatus
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 731              		.fpu fpv4-sp-d16
 733              	DAC_GetFlagStatus:
 734              	.LVL50:
 735              	.LFB136:
 576:FWLIB/src/stm32f4xx_dac.c **** 
 577:FWLIB/src/stm32f4xx_dac.c **** /**
 578:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 579:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 580:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 581:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 582:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 583:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 584:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be only of the following value:
 585:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag
 586:FWLIB/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 587:FWLIB/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 588:FWLIB/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 589:FWLIB/src/stm32f4xx_dac.c ****   */
 590:FWLIB/src/stm32f4xx_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 591:FWLIB/src/stm32f4xx_dac.c **** {
 736              		.loc 1 591 1 is_stmt 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 592:FWLIB/src/stm32f4xx_dac.c ****   FlagStatus bitstatus = RESET;
 741              		.loc 1 592 3 view .LVU194
ARM GAS  /tmp/cc6oDA5T.s 			page 24


 593:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 594:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 742              		.loc 1 594 3 view .LVU195
 595:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 743              		.loc 1 595 3 view .LVU196
 596:FWLIB/src/stm32f4xx_dac.c **** 
 597:FWLIB/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC flag */
 598:FWLIB/src/stm32f4xx_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 744              		.loc 1 598 3 view .LVU197
 745              		.loc 1 598 11 is_stmt 0 view .LVU198
 746 0000 044B     		ldr	r3, .L59
 747 0002 5B6B     		ldr	r3, [r3, #52]
 748              		.loc 1 598 28 view .LVU199
 749 0004 8140     		lsls	r1, r1, r0
 750              	.LVL51:
 751              		.loc 1 598 6 view .LVU200
 752 0006 0B42     		tst	r3, r1
 753 0008 01D0     		beq	.L58
 599:FWLIB/src/stm32f4xx_dac.c ****   {
 600:FWLIB/src/stm32f4xx_dac.c ****     /* DAC_FLAG is set */
 601:FWLIB/src/stm32f4xx_dac.c ****     bitstatus = SET;
 754              		.loc 1 601 15 view .LVU201
 755 000a 0120     		movs	r0, #1
 756              	.LVL52:
 757              		.loc 1 601 15 view .LVU202
 758 000c 7047     		bx	lr
 759              	.LVL53:
 760              	.L58:
 602:FWLIB/src/stm32f4xx_dac.c ****   }
 603:FWLIB/src/stm32f4xx_dac.c ****   else
 604:FWLIB/src/stm32f4xx_dac.c ****   {
 605:FWLIB/src/stm32f4xx_dac.c ****     /* DAC_FLAG is reset */
 606:FWLIB/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 761              		.loc 1 606 15 view .LVU203
 762 000e 0020     		movs	r0, #0
 763              	.LVL54:
 607:FWLIB/src/stm32f4xx_dac.c ****   }
 608:FWLIB/src/stm32f4xx_dac.c ****   /* Return the DAC_FLAG status */
 609:FWLIB/src/stm32f4xx_dac.c ****   return  bitstatus;
 764              		.loc 1 609 3 is_stmt 1 view .LVU204
 610:FWLIB/src/stm32f4xx_dac.c **** }
 765              		.loc 1 610 1 is_stmt 0 view .LVU205
 766 0010 7047     		bx	lr
 767              	.L60:
 768 0012 00BF     		.align	2
 769              	.L59:
 770 0014 00740040 		.word	1073771520
 771              		.cfi_endproc
 772              	.LFE136:
 774              		.section	.text.DAC_ClearFlag,"ax",%progbits
 775              		.align	1
 776              		.global	DAC_ClearFlag
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 780              		.fpu fpv4-sp-d16
 782              	DAC_ClearFlag:
ARM GAS  /tmp/cc6oDA5T.s 			page 25


 783              	.LVL55:
 784              	.LFB137:
 611:FWLIB/src/stm32f4xx_dac.c **** 
 612:FWLIB/src/stm32f4xx_dac.c **** /**
 613:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's pending flags.
 614:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 615:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 616:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 617:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 618:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 619:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be of the following value:
 620:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag 
 621:FWLIB/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 622:FWLIB/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 623:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 624:FWLIB/src/stm32f4xx_dac.c ****   */
 625:FWLIB/src/stm32f4xx_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 626:FWLIB/src/stm32f4xx_dac.c **** {
 785              		.loc 1 626 1 is_stmt 1 view -0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              		@ link register save eliminated.
 627:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 628:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 790              		.loc 1 628 3 view .LVU207
 629:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 791              		.loc 1 629 3 view .LVU208
 630:FWLIB/src/stm32f4xx_dac.c **** 
 631:FWLIB/src/stm32f4xx_dac.c ****   /* Clear the selected DAC flags */
 632:FWLIB/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 792              		.loc 1 632 3 view .LVU209
 793              		.loc 1 632 23 is_stmt 0 view .LVU210
 794 0000 8140     		lsls	r1, r1, r0
 795              	.LVL56:
 796              		.loc 1 632 11 view .LVU211
 797 0002 014B     		ldr	r3, .L62
 798 0004 5963     		str	r1, [r3, #52]
 633:FWLIB/src/stm32f4xx_dac.c **** }
 799              		.loc 1 633 1 view .LVU212
 800 0006 7047     		bx	lr
 801              	.L63:
 802              		.align	2
 803              	.L62:
 804 0008 00740040 		.word	1073771520
 805              		.cfi_endproc
 806              	.LFE137:
 808              		.section	.text.DAC_GetITStatus,"ax",%progbits
 809              		.align	1
 810              		.global	DAC_GetITStatus
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu fpv4-sp-d16
 816              	DAC_GetITStatus:
 817              	.LVL57:
 818              	.LFB138:
ARM GAS  /tmp/cc6oDA5T.s 			page 26


 634:FWLIB/src/stm32f4xx_dac.c **** 
 635:FWLIB/src/stm32f4xx_dac.c **** /**
 636:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 637:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 638:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 639:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 640:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 641:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 642:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 643:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 644:FWLIB/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 645:FWLIB/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 646:FWLIB/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 647:FWLIB/src/stm32f4xx_dac.c ****   */
 648:FWLIB/src/stm32f4xx_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 649:FWLIB/src/stm32f4xx_dac.c **** {
 819              		.loc 1 649 1 is_stmt 1 view -0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823              		@ link register save eliminated.
 650:FWLIB/src/stm32f4xx_dac.c ****   ITStatus bitstatus = RESET;
 824              		.loc 1 650 3 view .LVU214
 651:FWLIB/src/stm32f4xx_dac.c ****   uint32_t enablestatus = 0;
 825              		.loc 1 651 3 view .LVU215
 652:FWLIB/src/stm32f4xx_dac.c ****   
 653:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 654:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 826              		.loc 1 654 3 view .LVU216
 655:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 827              		.loc 1 655 3 view .LVU217
 656:FWLIB/src/stm32f4xx_dac.c **** 
 657:FWLIB/src/stm32f4xx_dac.c ****   /* Get the DAC_IT enable bit status */
 658:FWLIB/src/stm32f4xx_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 828              		.loc 1 658 3 view .LVU218
 829              		.loc 1 658 22 is_stmt 0 view .LVU219
 830 0000 064A     		ldr	r2, .L68
 831 0002 1368     		ldr	r3, [r2]
 832              		.loc 1 658 37 view .LVU220
 833 0004 8140     		lsls	r1, r1, r0
 834              	.LVL58:
 835              		.loc 1 658 16 view .LVU221
 836 0006 0B40     		ands	r3, r3, r1
 837              	.LVL59:
 659:FWLIB/src/stm32f4xx_dac.c ****   
 660:FWLIB/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC interrupt */
 661:FWLIB/src/stm32f4xx_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 838              		.loc 1 661 3 is_stmt 1 view .LVU222
 839              		.loc 1 661 12 is_stmt 0 view .LVU223
 840 0008 526B     		ldr	r2, [r2, #52]
 841              		.loc 1 661 6 view .LVU224
 842 000a 1142     		tst	r1, r2
 843 000c 02D0     		beq	.L66
 844              		.loc 1 661 64 discriminator 1 view .LVU225
 845 000e 1BB9     		cbnz	r3, .L67
 662:FWLIB/src/stm32f4xx_dac.c ****   {
 663:FWLIB/src/stm32f4xx_dac.c ****     /* DAC_IT is set */
ARM GAS  /tmp/cc6oDA5T.s 			page 27


 664:FWLIB/src/stm32f4xx_dac.c ****     bitstatus = SET;
 665:FWLIB/src/stm32f4xx_dac.c ****   }
 666:FWLIB/src/stm32f4xx_dac.c ****   else
 667:FWLIB/src/stm32f4xx_dac.c ****   {
 668:FWLIB/src/stm32f4xx_dac.c ****     /* DAC_IT is reset */
 669:FWLIB/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 846              		.loc 1 669 15 view .LVU226
 847 0010 0020     		movs	r0, #0
 848              	.LVL60:
 849              		.loc 1 669 15 view .LVU227
 850 0012 7047     		bx	lr
 851              	.LVL61:
 852              	.L66:
 853              		.loc 1 669 15 view .LVU228
 854 0014 0020     		movs	r0, #0
 855              	.LVL62:
 856              		.loc 1 669 15 view .LVU229
 857 0016 7047     		bx	lr
 858              	.LVL63:
 859              	.L67:
 664:FWLIB/src/stm32f4xx_dac.c ****   }
 860              		.loc 1 664 15 view .LVU230
 861 0018 0120     		movs	r0, #1
 862              	.LVL64:
 670:FWLIB/src/stm32f4xx_dac.c ****   }
 671:FWLIB/src/stm32f4xx_dac.c ****   /* Return the DAC_IT status */
 672:FWLIB/src/stm32f4xx_dac.c ****   return  bitstatus;
 863              		.loc 1 672 3 is_stmt 1 view .LVU231
 673:FWLIB/src/stm32f4xx_dac.c **** }
 864              		.loc 1 673 1 is_stmt 0 view .LVU232
 865 001a 7047     		bx	lr
 866              	.L69:
 867              		.align	2
 868              	.L68:
 869 001c 00740040 		.word	1073771520
 870              		.cfi_endproc
 871              	.LFE138:
 873              		.section	.text.DAC_ClearITPendingBit,"ax",%progbits
 874              		.align	1
 875              		.global	DAC_ClearITPendingBit
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 879              		.fpu fpv4-sp-d16
 881              	DAC_ClearITPendingBit:
 882              	.LVL65:
 883              	.LFB139:
 674:FWLIB/src/stm32f4xx_dac.c **** 
 675:FWLIB/src/stm32f4xx_dac.c **** /**
 676:FWLIB/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's interrupt pending bits.
 677:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 678:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 679:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 680:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 681:FWLIB/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 682:FWLIB/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 683:FWLIB/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
ARM GAS  /tmp/cc6oDA5T.s 			page 28


 684:FWLIB/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 685:FWLIB/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 686:FWLIB/src/stm32f4xx_dac.c ****   * @retval None
 687:FWLIB/src/stm32f4xx_dac.c ****   */
 688:FWLIB/src/stm32f4xx_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 689:FWLIB/src/stm32f4xx_dac.c **** {
 884              		.loc 1 689 1 is_stmt 1 view -0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              		@ link register save eliminated.
 690:FWLIB/src/stm32f4xx_dac.c ****   /* Check the parameters */
 691:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 889              		.loc 1 691 3 view .LVU234
 692:FWLIB/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 890              		.loc 1 692 3 view .LVU235
 693:FWLIB/src/stm32f4xx_dac.c **** 
 694:FWLIB/src/stm32f4xx_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 695:FWLIB/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 891              		.loc 1 695 3 view .LVU236
 892              		.loc 1 695 21 is_stmt 0 view .LVU237
 893 0000 8140     		lsls	r1, r1, r0
 894              	.LVL66:
 895              		.loc 1 695 11 view .LVU238
 896 0002 014B     		ldr	r3, .L71
 897 0004 5963     		str	r1, [r3, #52]
 696:FWLIB/src/stm32f4xx_dac.c **** }
 898              		.loc 1 696 1 view .LVU239
 899 0006 7047     		bx	lr
 900              	.L72:
 901              		.align	2
 902              	.L71:
 903 0008 00740040 		.word	1073771520
 904              		.cfi_endproc
 905              	.LFE139:
 907              		.text
 908              	.Letext0:
 909              		.file 2 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 910              		.file 3 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 911              		.file 4 "F4_CORE/core_cm4.h"
 912              		.file 5 "USER/system_stm32f4xx.h"
 913              		.file 6 "USER/stm32f4xx.h"
 914              		.file 7 "FWLIB/inc/stm32f4xx_dac.h"
 915              		.file 8 "FWLIB/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/cc6oDA5T.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_dac.c
     /tmp/cc6oDA5T.s:18     .text.DAC_DeInit:0000000000000000 $t
     /tmp/cc6oDA5T.s:26     .text.DAC_DeInit:0000000000000000 DAC_DeInit
     /tmp/cc6oDA5T.s:54     .text.DAC_Init:0000000000000000 $t
     /tmp/cc6oDA5T.s:61     .text.DAC_Init:0000000000000000 DAC_Init
     /tmp/cc6oDA5T.s:131    .text.DAC_Init:0000000000000028 $d
     /tmp/cc6oDA5T.s:136    .text.DAC_StructInit:0000000000000000 $t
     /tmp/cc6oDA5T.s:143    .text.DAC_StructInit:0000000000000000 DAC_StructInit
     /tmp/cc6oDA5T.s:170    .text.DAC_Cmd:0000000000000000 $t
     /tmp/cc6oDA5T.s:177    .text.DAC_Cmd:0000000000000000 DAC_Cmd
     /tmp/cc6oDA5T.s:221    .text.DAC_Cmd:0000000000000020 $d
     /tmp/cc6oDA5T.s:226    .text.DAC_SoftwareTriggerCmd:0000000000000000 $t
     /tmp/cc6oDA5T.s:233    .text.DAC_SoftwareTriggerCmd:0000000000000000 DAC_SoftwareTriggerCmd
     /tmp/cc6oDA5T.s:284    .text.DAC_SoftwareTriggerCmd:0000000000000028 $d
     /tmp/cc6oDA5T.s:289    .text.DAC_DualSoftwareTriggerCmd:0000000000000000 $t
     /tmp/cc6oDA5T.s:296    .text.DAC_DualSoftwareTriggerCmd:0000000000000000 DAC_DualSoftwareTriggerCmd
     /tmp/cc6oDA5T.s:327    .text.DAC_DualSoftwareTriggerCmd:000000000000001c $d
     /tmp/cc6oDA5T.s:332    .text.DAC_WaveGenerationCmd:0000000000000000 $t
     /tmp/cc6oDA5T.s:339    .text.DAC_WaveGenerationCmd:0000000000000000 DAC_WaveGenerationCmd
     /tmp/cc6oDA5T.s:385    .text.DAC_WaveGenerationCmd:000000000000001c $d
     /tmp/cc6oDA5T.s:390    .text.DAC_SetChannel1Data:0000000000000000 $t
     /tmp/cc6oDA5T.s:397    .text.DAC_SetChannel1Data:0000000000000000 DAC_SetChannel1Data
     /tmp/cc6oDA5T.s:441    .text.DAC_SetChannel1Data:000000000000001c $d
     /tmp/cc6oDA5T.s:446    .text.DAC_SetChannel2Data:0000000000000000 $t
     /tmp/cc6oDA5T.s:453    .text.DAC_SetChannel2Data:0000000000000000 DAC_SetChannel2Data
     /tmp/cc6oDA5T.s:497    .text.DAC_SetChannel2Data:000000000000001c $d
     /tmp/cc6oDA5T.s:502    .text.DAC_SetDualChannelData:0000000000000000 $t
     /tmp/cc6oDA5T.s:509    .text.DAC_SetDualChannelData:0000000000000000 DAC_SetDualChannelData
     /tmp/cc6oDA5T.s:551    .text.DAC_SetDualChannelData:0000000000000014 $d
     /tmp/cc6oDA5T.s:556    .text.DAC_GetDataOutputValue:0000000000000000 $t
     /tmp/cc6oDA5T.s:563    .text.DAC_GetDataOutputValue:0000000000000000 DAC_GetDataOutputValue
     /tmp/cc6oDA5T.s:607    .text.DAC_GetDataOutputValue:0000000000000020 $d
     /tmp/cc6oDA5T.s:612    .text.DAC_DMACmd:0000000000000000 $t
     /tmp/cc6oDA5T.s:619    .text.DAC_DMACmd:0000000000000000 DAC_DMACmd
     /tmp/cc6oDA5T.s:663    .text.DAC_DMACmd:0000000000000024 $d
     /tmp/cc6oDA5T.s:668    .text.DAC_ITConfig:0000000000000000 $t
     /tmp/cc6oDA5T.s:675    .text.DAC_ITConfig:0000000000000000 DAC_ITConfig
     /tmp/cc6oDA5T.s:721    .text.DAC_ITConfig:000000000000001c $d
     /tmp/cc6oDA5T.s:726    .text.DAC_GetFlagStatus:0000000000000000 $t
     /tmp/cc6oDA5T.s:733    .text.DAC_GetFlagStatus:0000000000000000 DAC_GetFlagStatus
     /tmp/cc6oDA5T.s:770    .text.DAC_GetFlagStatus:0000000000000014 $d
     /tmp/cc6oDA5T.s:775    .text.DAC_ClearFlag:0000000000000000 $t
     /tmp/cc6oDA5T.s:782    .text.DAC_ClearFlag:0000000000000000 DAC_ClearFlag
     /tmp/cc6oDA5T.s:804    .text.DAC_ClearFlag:0000000000000008 $d
     /tmp/cc6oDA5T.s:809    .text.DAC_GetITStatus:0000000000000000 $t
     /tmp/cc6oDA5T.s:816    .text.DAC_GetITStatus:0000000000000000 DAC_GetITStatus
     /tmp/cc6oDA5T.s:869    .text.DAC_GetITStatus:000000000000001c $d
     /tmp/cc6oDA5T.s:874    .text.DAC_ClearITPendingBit:0000000000000000 $t
     /tmp/cc6oDA5T.s:881    .text.DAC_ClearITPendingBit:0000000000000000 DAC_ClearITPendingBit
     /tmp/cc6oDA5T.s:903    .text.DAC_ClearITPendingBit:0000000000000008 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
