ARM GAS  /tmp/cch81du2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"periph_serial_irq.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USART1_IRQHandler,"ax",%progbits
  18              		.align	1
  19              		.global	USART1_IRQHandler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	USART1_IRQHandler:
  26              	.LFB123:
  27              		.file 1 "Bsp/periph_serial_irq.c"
   1:Bsp/periph_serial_irq.c **** #include "periph_serial_irq.h"
   2:Bsp/periph_serial_irq.c **** #include "periph_serial.h"
   3:Bsp/periph_serial_irq.c **** #include "periph_gpio.h"
   4:Bsp/periph_serial_irq.c **** #include "periph_dma.h"
   5:Bsp/periph_serial_irq.c **** #include "string.h"
   6:Bsp/periph_serial_irq.c **** #include "stm32f4xx_usart.h"
   7:Bsp/periph_serial_irq.c **** #include "stm32f4xx_dma.h"
   8:Bsp/periph_serial_irq.c **** 
   9:Bsp/periph_serial_irq.c **** extern uint8_t Serial_TX_Buff[Serial_Port_Sum][SERIAL_MAX_RECLEN];
  10:Bsp/periph_serial_irq.c **** extern uint8_t Serial_RX_Buff[Serial_Port_Sum][SERIAL_MAX_RECLEN];
  11:Bsp/periph_serial_irq.c **** 
  12:Bsp/periph_serial_irq.c **** void USART1_IRQHandler(void)
  13:Bsp/periph_serial_irq.c **** {
  28              		.loc 1 13 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  14:Bsp/periph_serial_irq.c **** 	uint8_t rec;
  15:Bsp/periph_serial_irq.c **** 	static u8 rec_len = 0;
  16:Bsp/periph_serial_irq.c **** 	static u8 rec_enable = 0;
  17:Bsp/periph_serial_irq.c **** 
  18:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART1, USART_IT_RXNE) != RESET)
  39              		.loc 1 18 0
  40 0002 40F22551 		movw	r1, #1317
ARM GAS  /tmp/cch81du2.s 			page 2


  41 0006 2648     		ldr	r0, .L9
  42 0008 FFF7FEFF 		bl	USART_GetITStatus
  43              	.LVL0:
  44 000c 30B9     		cbnz	r0, .L7
  45              	.L2:
  19:Bsp/periph_serial_irq.c **** 	{
  20:Bsp/periph_serial_irq.c **** 		if (Serial_Get_IRQ_RxCallback(Serial_1) != NULL)
  21:Bsp/periph_serial_irq.c **** 		{
  22:Bsp/periph_serial_irq.c **** 			Serial_Get_IRQ_RxCallback(Serial_1)((uint8_t)USART_ReceiveData(USART1), 1);
  23:Bsp/periph_serial_irq.c **** 		}
  24:Bsp/periph_serial_irq.c **** 
  25:Bsp/periph_serial_irq.c **** 		USART_ClearITPendingBit(USART1, USART_IT_RXNE);
  26:Bsp/periph_serial_irq.c **** 	}
  27:Bsp/periph_serial_irq.c **** 
  28:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART1, USART_IT_IDLE) != RESET)
  46              		.loc 1 28 0
  47 000e 40F22441 		movw	r1, #1060
  48 0012 2348     		ldr	r0, .L9
  49 0014 FFF7FEFF 		bl	USART_GetITStatus
  50              	.LVL1:
  51 0018 A0B9     		cbnz	r0, .L8
  52              	.L1:
  53 001a 38BD     		pop	{r3, r4, r5, pc}
  54              	.L7:
  20:Bsp/periph_serial_irq.c **** 		{
  55              		.loc 1 20 0
  56 001c 0020     		movs	r0, #0
  57 001e FFF7FEFF 		bl	Serial_Get_IRQ_RxCallback
  58              	.LVL2:
  59 0022 48B1     		cbz	r0, .L3
  22:Bsp/periph_serial_irq.c **** 		}
  60              		.loc 1 22 0
  61 0024 0020     		movs	r0, #0
  62 0026 FFF7FEFF 		bl	Serial_Get_IRQ_RxCallback
  63              	.LVL3:
  64 002a 0446     		mov	r4, r0
  65 002c 1C48     		ldr	r0, .L9
  66 002e FFF7FEFF 		bl	USART_ReceiveData
  67              	.LVL4:
  68 0032 0121     		movs	r1, #1
  69 0034 C0B2     		uxtb	r0, r0
  70 0036 A047     		blx	r4
  71              	.LVL5:
  72              	.L3:
  25:Bsp/periph_serial_irq.c **** 	}
  73              		.loc 1 25 0
  74 0038 40F22551 		movw	r1, #1317
  75 003c 1848     		ldr	r0, .L9
  76 003e FFF7FEFF 		bl	USART_ClearITPendingBit
  77              	.LVL6:
  78 0042 E4E7     		b	.L2
  79              	.L8:
  29:Bsp/periph_serial_irq.c **** 	{
  30:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial1_DMA_RX_Stream, DISABLE);
  80              		.loc 1 30 0
  81 0044 174C     		ldr	r4, .L9+4
  82 0046 0021     		movs	r1, #0
ARM GAS  /tmp/cch81du2.s 			page 3


  83 0048 2046     		mov	r0, r4
  84 004a FFF7FEFF 		bl	DMA_Cmd
  85              	.LVL7:
  31:Bsp/periph_serial_irq.c **** 
  32:Bsp/periph_serial_irq.c **** 		rec = USART1->DR;
  86              		.loc 1 32 0
  87 004e 144B     		ldr	r3, .L9
  88 0050 9A88     		ldrh	r2, [r3, #4]
  89              	.LVL8:
  33:Bsp/periph_serial_irq.c **** 		rec = USART1->SR;
  90              		.loc 1 33 0
  91 0052 1B88     		ldrh	r3, [r3]
  34:Bsp/periph_serial_irq.c **** 
  35:Bsp/periph_serial_irq.c **** 		rec = SERIAL_MAX_RECLEN - DMA_GetCurrDataCounter(Serial1_DMA_RX_Stream);
  92              		.loc 1 35 0
  93 0054 2046     		mov	r0, r4
  94 0056 FFF7FEFF 		bl	DMA_GetCurrDataCounter
  95              	.LVL9:
  96 005a C0B2     		uxtb	r0, r0
  97 005c 4042     		negs	r0, r0
  98 005e C4B2     		uxtb	r4, r0
  99              	.LVL10:
  36:Bsp/periph_serial_irq.c **** 
  37:Bsp/periph_serial_irq.c **** 		if (Serial_Get_IRQ_RxCallback(Serial_1) != NULL)
 100              		.loc 1 37 0
 101 0060 0020     		movs	r0, #0
 102 0062 FFF7FEFF 		bl	Serial_Get_IRQ_RxCallback
 103              	.LVL11:
 104 0066 30B1     		cbz	r0, .L5
  38:Bsp/periph_serial_irq.c **** 		{
  39:Bsp/periph_serial_irq.c **** 			Serial_Get_IRQ_RxCallback(Serial_1)(Serial_RX_Buff[Serial_1], rec);
 105              		.loc 1 39 0
 106 0068 0020     		movs	r0, #0
 107 006a FFF7FEFF 		bl	Serial_Get_IRQ_RxCallback
 108              	.LVL12:
 109 006e 0346     		mov	r3, r0
 110 0070 2146     		mov	r1, r4
 111 0072 0D48     		ldr	r0, .L9+8
 112 0074 9847     		blx	r3
 113              	.LVL13:
 114              	.L5:
  40:Bsp/periph_serial_irq.c **** 		}
  41:Bsp/periph_serial_irq.c **** 
  42:Bsp/periph_serial_irq.c **** 		memset(Serial_RX_Buff[Serial_1], NULL, SERIAL_MAX_RECLEN);
 115              		.loc 1 42 0
 116 0076 4FF40075 		mov	r5, #512
 117 007a 2A46     		mov	r2, r5
 118 007c 0021     		movs	r1, #0
 119 007e 0A48     		ldr	r0, .L9+8
 120 0080 FFF7FEFF 		bl	memset
 121              	.LVL14:
  43:Bsp/periph_serial_irq.c **** 
  44:Bsp/periph_serial_irq.c **** 		DMA_ClearFlag(Serial1_DMA_RX_Stream, DMA_FLAG_TCIF5);
 122              		.loc 1 44 0
 123 0084 074C     		ldr	r4, .L9+4
 124              	.LVL15:
 125 0086 0949     		ldr	r1, .L9+12
ARM GAS  /tmp/cch81du2.s 			page 4


 126 0088 2046     		mov	r0, r4
 127 008a FFF7FEFF 		bl	DMA_ClearFlag
 128              	.LVL16:
  45:Bsp/periph_serial_irq.c **** 		DMA_SetCurrDataCounter(Serial1_DMA_RX_Stream, SERIAL_MAX_RECLEN);
 129              		.loc 1 45 0
 130 008e 2946     		mov	r1, r5
 131 0090 2046     		mov	r0, r4
 132 0092 FFF7FEFF 		bl	DMA_SetCurrDataCounter
 133              	.LVL17:
  46:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial1_DMA_RX_Stream, ENABLE);
 134              		.loc 1 46 0
 135 0096 0121     		movs	r1, #1
 136 0098 2046     		mov	r0, r4
 137 009a FFF7FEFF 		bl	DMA_Cmd
 138              	.LVL18:
  47:Bsp/periph_serial_irq.c **** 	}
  48:Bsp/periph_serial_irq.c **** }
 139              		.loc 1 48 0
 140 009e BCE7     		b	.L1
 141              	.L10:
 142              		.align	2
 143              	.L9:
 144 00a0 00100140 		.word	1073811456
 145 00a4 88640240 		.word	1073898632
 146 00a8 00000000 		.word	Serial_RX_Buff
 147 00ac 00080020 		.word	536872960
 148              		.cfi_endproc
 149              	.LFE123:
 151              		.section	.text.USART2_IRQHandler,"ax",%progbits
 152              		.align	1
 153              		.global	USART2_IRQHandler
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	USART2_IRQHandler:
 160              	.LFB124:
  49:Bsp/periph_serial_irq.c **** 
  50:Bsp/periph_serial_irq.c **** void USART2_IRQHandler(void)
  51:Bsp/periph_serial_irq.c **** {
 161              		.loc 1 51 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 38B5     		push	{r3, r4, r5, lr}
 166              	.LCFI1:
 167              		.cfi_def_cfa_offset 16
 168              		.cfi_offset 3, -16
 169              		.cfi_offset 4, -12
 170              		.cfi_offset 5, -8
 171              		.cfi_offset 14, -4
  52:Bsp/periph_serial_irq.c **** 	uint8_t rec;
  53:Bsp/periph_serial_irq.c **** 
  54:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART2, USART_IT_RXNE) != RESET)
 172              		.loc 1 54 0
 173 0002 40F22551 		movw	r1, #1317
 174 0006 2648     		ldr	r0, .L19
ARM GAS  /tmp/cch81du2.s 			page 5


 175 0008 FFF7FEFF 		bl	USART_GetITStatus
 176              	.LVL19:
 177 000c 30B9     		cbnz	r0, .L17
 178              	.L12:
  55:Bsp/periph_serial_irq.c **** 	{
  56:Bsp/periph_serial_irq.c **** 		if (Serial_Get_IRQ_RxCallback(Serial_2) != NULL)
  57:Bsp/periph_serial_irq.c **** 		{
  58:Bsp/periph_serial_irq.c **** 			Serial_Get_IRQ_RxCallback(Serial_2)((uint8_t)USART_ReceiveData(USART2), 1);
  59:Bsp/periph_serial_irq.c **** 		}
  60:Bsp/periph_serial_irq.c **** 
  61:Bsp/periph_serial_irq.c **** 		USART_ClearITPendingBit(USART2, USART_IT_RXNE);
  62:Bsp/periph_serial_irq.c **** 	}
  63:Bsp/periph_serial_irq.c **** 
  64:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART2, USART_IT_IDLE) != RESET)
 179              		.loc 1 64 0
 180 000e 40F22441 		movw	r1, #1060
 181 0012 2348     		ldr	r0, .L19
 182 0014 FFF7FEFF 		bl	USART_GetITStatus
 183              	.LVL20:
 184 0018 A0B9     		cbnz	r0, .L18
 185              	.L11:
 186 001a 38BD     		pop	{r3, r4, r5, pc}
 187              	.L17:
  56:Bsp/periph_serial_irq.c **** 		{
 188              		.loc 1 56 0
 189 001c 0120     		movs	r0, #1
 190 001e FFF7FEFF 		bl	Serial_Get_IRQ_RxCallback
 191              	.LVL21:
 192 0022 48B1     		cbz	r0, .L13
  58:Bsp/periph_serial_irq.c **** 		}
 193              		.loc 1 58 0
 194 0024 0120     		movs	r0, #1
 195 0026 FFF7FEFF 		bl	Serial_Get_IRQ_RxCallback
 196              	.LVL22:
 197 002a 0446     		mov	r4, r0
 198 002c 1C48     		ldr	r0, .L19
 199 002e FFF7FEFF 		bl	USART_ReceiveData
 200              	.LVL23:
 201 0032 0121     		movs	r1, #1
 202 0034 C0B2     		uxtb	r0, r0
 203 0036 A047     		blx	r4
 204              	.LVL24:
 205              	.L13:
  61:Bsp/periph_serial_irq.c **** 	}
 206              		.loc 1 61 0
 207 0038 40F22551 		movw	r1, #1317
 208 003c 1848     		ldr	r0, .L19
 209 003e FFF7FEFF 		bl	USART_ClearITPendingBit
 210              	.LVL25:
 211 0042 E4E7     		b	.L12
 212              	.L18:
  65:Bsp/periph_serial_irq.c **** 	{
  66:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial2_DMA_RX_Stream, DISABLE);
 213              		.loc 1 66 0
 214 0044 174C     		ldr	r4, .L19+4
 215 0046 0021     		movs	r1, #0
 216 0048 2046     		mov	r0, r4
ARM GAS  /tmp/cch81du2.s 			page 6


 217 004a FFF7FEFF 		bl	DMA_Cmd
 218              	.LVL26:
  67:Bsp/periph_serial_irq.c **** 
  68:Bsp/periph_serial_irq.c **** 		rec = USART2->DR;
 219              		.loc 1 68 0
 220 004e 144B     		ldr	r3, .L19
 221 0050 9A88     		ldrh	r2, [r3, #4]
 222              	.LVL27:
  69:Bsp/periph_serial_irq.c **** 		rec = USART2->SR;
 223              		.loc 1 69 0
 224 0052 1B88     		ldrh	r3, [r3]
  70:Bsp/periph_serial_irq.c **** 
  71:Bsp/periph_serial_irq.c **** 		rec = SERIAL_MAX_RECLEN - DMA_GetCurrDataCounter(Serial2_DMA_RX_Stream);
 225              		.loc 1 71 0
 226 0054 2046     		mov	r0, r4
 227 0056 FFF7FEFF 		bl	DMA_GetCurrDataCounter
 228              	.LVL28:
 229 005a C0B2     		uxtb	r0, r0
 230 005c 4042     		negs	r0, r0
 231 005e C4B2     		uxtb	r4, r0
 232              	.LVL29:
  72:Bsp/periph_serial_irq.c **** 
  73:Bsp/periph_serial_irq.c **** 		if (Serial_Get_IRQ_RxCallback(Serial_2) != NULL)
 233              		.loc 1 73 0
 234 0060 0120     		movs	r0, #1
 235 0062 FFF7FEFF 		bl	Serial_Get_IRQ_RxCallback
 236              	.LVL30:
 237 0066 30B1     		cbz	r0, .L15
  74:Bsp/periph_serial_irq.c **** 		{
  75:Bsp/periph_serial_irq.c **** 			Serial_Get_IRQ_RxCallback(Serial_2)(Serial_RX_Buff[Serial_2], rec);
 238              		.loc 1 75 0
 239 0068 0120     		movs	r0, #1
 240 006a FFF7FEFF 		bl	Serial_Get_IRQ_RxCallback
 241              	.LVL31:
 242 006e 0346     		mov	r3, r0
 243 0070 2146     		mov	r1, r4
 244 0072 0D48     		ldr	r0, .L19+8
 245 0074 9847     		blx	r3
 246              	.LVL32:
 247              	.L15:
  76:Bsp/periph_serial_irq.c **** 		}
  77:Bsp/periph_serial_irq.c **** 
  78:Bsp/periph_serial_irq.c **** 		memset(Serial_RX_Buff[Serial_2], NULL, SERIAL_MAX_RECLEN);
 248              		.loc 1 78 0
 249 0076 4FF40075 		mov	r5, #512
 250 007a 2A46     		mov	r2, r5
 251 007c 0021     		movs	r1, #0
 252 007e 0A48     		ldr	r0, .L19+8
 253 0080 FFF7FEFF 		bl	memset
 254              	.LVL33:
  79:Bsp/periph_serial_irq.c **** 
  80:Bsp/periph_serial_irq.c **** 		DMA_ClearFlag(Serial2_DMA_RX_Stream, DMA_FLAG_TCIF5);
 255              		.loc 1 80 0
 256 0084 074C     		ldr	r4, .L19+4
 257              	.LVL34:
 258 0086 0949     		ldr	r1, .L19+12
 259 0088 2046     		mov	r0, r4
ARM GAS  /tmp/cch81du2.s 			page 7


 260 008a FFF7FEFF 		bl	DMA_ClearFlag
 261              	.LVL35:
  81:Bsp/periph_serial_irq.c **** 		DMA_SetCurrDataCounter(Serial2_DMA_RX_Stream, SERIAL_MAX_RECLEN);
 262              		.loc 1 81 0
 263 008e 2946     		mov	r1, r5
 264 0090 2046     		mov	r0, r4
 265 0092 FFF7FEFF 		bl	DMA_SetCurrDataCounter
 266              	.LVL36:
  82:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial2_DMA_RX_Stream, ENABLE);
 267              		.loc 1 82 0
 268 0096 0121     		movs	r1, #1
 269 0098 2046     		mov	r0, r4
 270 009a FFF7FEFF 		bl	DMA_Cmd
 271              	.LVL37:
  83:Bsp/periph_serial_irq.c **** 	}
  84:Bsp/periph_serial_irq.c **** }
 272              		.loc 1 84 0
 273 009e BCE7     		b	.L11
 274              	.L20:
 275              		.align	2
 276              	.L19:
 277 00a0 00440040 		.word	1073759232
 278 00a4 88600240 		.word	1073897608
 279 00a8 00020000 		.word	Serial_RX_Buff+512
 280 00ac 00080020 		.word	536872960
 281              		.cfi_endproc
 282              	.LFE124:
 284              		.section	.text.USART3_IRQHandler,"ax",%progbits
 285              		.align	1
 286              		.global	USART3_IRQHandler
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 290              		.fpu fpv4-sp-d16
 292              	USART3_IRQHandler:
 293              	.LFB125:
  85:Bsp/periph_serial_irq.c **** 
  86:Bsp/periph_serial_irq.c **** void USART3_IRQHandler(void)
  87:Bsp/periph_serial_irq.c **** {
 294              		.loc 1 87 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298 0000 10B5     		push	{r4, lr}
 299              	.LCFI2:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 4, -8
 302              		.cfi_offset 14, -4
  88:Bsp/periph_serial_irq.c **** 	uint8_t rec;
  89:Bsp/periph_serial_irq.c **** 
  90:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART3, USART_IT_RXNE) != RESET)
 303              		.loc 1 90 0
 304 0002 40F22551 		movw	r1, #1317
 305 0006 1C48     		ldr	r0, .L28
 306 0008 FFF7FEFF 		bl	USART_GetITStatus
 307              	.LVL38:
 308 000c 30B9     		cbnz	r0, .L26
ARM GAS  /tmp/cch81du2.s 			page 8


 309              	.L22:
  91:Bsp/periph_serial_irq.c **** 	{
  92:Bsp/periph_serial_irq.c **** 		if (Serial_Get_IRQ_RxCallback(Serial_3) != NULL)
  93:Bsp/periph_serial_irq.c **** 		{
  94:Bsp/periph_serial_irq.c **** 			Serial_Get_IRQ_RxCallback(Serial_3)((uint8_t)USART_ReceiveData(USART3), 1);
  95:Bsp/periph_serial_irq.c **** 		}
  96:Bsp/periph_serial_irq.c **** 
  97:Bsp/periph_serial_irq.c **** 		USART_ClearITPendingBit(USART3, USART_IT_RXNE);
  98:Bsp/periph_serial_irq.c **** 	}
  99:Bsp/periph_serial_irq.c **** 
 100:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART3, USART_IT_IDLE) != RESET)
 310              		.loc 1 100 0
 311 000e 40F22441 		movw	r1, #1060
 312 0012 1948     		ldr	r0, .L28
 313 0014 FFF7FEFF 		bl	USART_GetITStatus
 314              	.LVL39:
 315 0018 A0B9     		cbnz	r0, .L27
 316              	.L21:
 317 001a 10BD     		pop	{r4, pc}
 318              	.L26:
  92:Bsp/periph_serial_irq.c **** 		{
 319              		.loc 1 92 0
 320 001c 0220     		movs	r0, #2
 321 001e FFF7FEFF 		bl	Serial_Get_IRQ_RxCallback
 322              	.LVL40:
 323 0022 48B1     		cbz	r0, .L23
  94:Bsp/periph_serial_irq.c **** 		}
 324              		.loc 1 94 0
 325 0024 0220     		movs	r0, #2
 326 0026 FFF7FEFF 		bl	Serial_Get_IRQ_RxCallback
 327              	.LVL41:
 328 002a 0446     		mov	r4, r0
 329 002c 1248     		ldr	r0, .L28
 330 002e FFF7FEFF 		bl	USART_ReceiveData
 331              	.LVL42:
 332 0032 0121     		movs	r1, #1
 333 0034 C0B2     		uxtb	r0, r0
 334 0036 A047     		blx	r4
 335              	.LVL43:
 336              	.L23:
  97:Bsp/periph_serial_irq.c **** 	}
 337              		.loc 1 97 0
 338 0038 40F22551 		movw	r1, #1317
 339 003c 0E48     		ldr	r0, .L28
 340 003e FFF7FEFF 		bl	USART_ClearITPendingBit
 341              	.LVL44:
 342 0042 E4E7     		b	.L22
 343              	.L27:
 101:Bsp/periph_serial_irq.c **** 	{
 102:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial3_DMA_RX_Stream, DISABLE);
 344              		.loc 1 102 0
 345 0044 0D4C     		ldr	r4, .L28+4
 346 0046 0021     		movs	r1, #0
 347 0048 2046     		mov	r0, r4
 348 004a FFF7FEFF 		bl	DMA_Cmd
 349              	.LVL45:
 103:Bsp/periph_serial_irq.c **** 
ARM GAS  /tmp/cch81du2.s 			page 9


 104:Bsp/periph_serial_irq.c **** 		rec = USART3->DR;
 350              		.loc 1 104 0
 351 004e 0A4B     		ldr	r3, .L28
 352 0050 9A88     		ldrh	r2, [r3, #4]
 353              	.LVL46:
 105:Bsp/periph_serial_irq.c **** 		rec = USART3->SR;
 354              		.loc 1 105 0
 355 0052 1B88     		ldrh	r3, [r3]
 106:Bsp/periph_serial_irq.c **** 
 107:Bsp/periph_serial_irq.c **** 		rec = DMA_GetCurrDataCounter(Serial3_DMA_RX_Stream);
 356              		.loc 1 107 0
 357 0054 2046     		mov	r0, r4
 358 0056 FFF7FEFF 		bl	DMA_GetCurrDataCounter
 359              	.LVL47:
 108:Bsp/periph_serial_irq.c **** 		DMA_ClearFlag(Serial3_DMA_RX_Stream, DMA_FLAG_TCIF1);
 360              		.loc 1 108 0
 361 005a 0949     		ldr	r1, .L28+8
 362 005c 2046     		mov	r0, r4
 363 005e FFF7FEFF 		bl	DMA_ClearFlag
 364              	.LVL48:
 109:Bsp/periph_serial_irq.c **** 		DMA_SetCurrDataCounter(Serial3_DMA_RX_Stream, SERIAL_MAX_RECLEN);
 365              		.loc 1 109 0
 366 0062 4FF40071 		mov	r1, #512
 367 0066 2046     		mov	r0, r4
 368 0068 FFF7FEFF 		bl	DMA_SetCurrDataCounter
 369              	.LVL49:
 110:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial3_DMA_RX_Stream, ENABLE);
 370              		.loc 1 110 0
 371 006c 0121     		movs	r1, #1
 372 006e 2046     		mov	r0, r4
 373 0070 FFF7FEFF 		bl	DMA_Cmd
 374              	.LVL50:
 111:Bsp/periph_serial_irq.c **** 	}
 112:Bsp/periph_serial_irq.c **** }
 375              		.loc 1 112 0
 376 0074 D1E7     		b	.L21
 377              	.L29:
 378 0076 00BF     		.align	2
 379              	.L28:
 380 0078 00480040 		.word	1073760256
 381 007c 28600240 		.word	1073897512
 382 0080 00080010 		.word	268437504
 383              		.cfi_endproc
 384              	.LFE125:
 386              		.section	.text.USART6_IRQHandler,"ax",%progbits
 387              		.align	1
 388              		.global	USART6_IRQHandler
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu fpv4-sp-d16
 394              	USART6_IRQHandler:
 395              	.LFB126:
 113:Bsp/periph_serial_irq.c **** 
 114:Bsp/periph_serial_irq.c **** void USART6_IRQHandler(void)
 115:Bsp/periph_serial_irq.c **** {
 396              		.loc 1 115 0
ARM GAS  /tmp/cch81du2.s 			page 10


 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 10B5     		push	{r4, lr}
 401              	.LCFI3:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 4, -8
 404              		.cfi_offset 14, -4
 116:Bsp/periph_serial_irq.c **** 	uint8_t rec;
 117:Bsp/periph_serial_irq.c **** 
 118:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART6, USART_IT_RXNE) != RESET)
 405              		.loc 1 118 0
 406 0002 40F22551 		movw	r1, #1317
 407 0006 1C48     		ldr	r0, .L37
 408 0008 FFF7FEFF 		bl	USART_GetITStatus
 409              	.LVL51:
 410 000c 30B9     		cbnz	r0, .L35
 411              	.L31:
 119:Bsp/periph_serial_irq.c **** 	{
 120:Bsp/periph_serial_irq.c **** 		if (Serial_Get_IRQ_RxCallback(Serial_6) != NULL)
 121:Bsp/periph_serial_irq.c **** 		{
 122:Bsp/periph_serial_irq.c **** 			Serial_Get_IRQ_RxCallback(Serial_6)((uint8_t)USART_ReceiveData(USART6), 1);
 123:Bsp/periph_serial_irq.c **** 		}
 124:Bsp/periph_serial_irq.c **** 
 125:Bsp/periph_serial_irq.c **** 		USART_ClearITPendingBit(USART6, USART_IT_RXNE);
 126:Bsp/periph_serial_irq.c **** 	}
 127:Bsp/periph_serial_irq.c **** 
 128:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART6, USART_IT_IDLE) != RESET)
 412              		.loc 1 128 0
 413 000e 40F22441 		movw	r1, #1060
 414 0012 1948     		ldr	r0, .L37
 415 0014 FFF7FEFF 		bl	USART_GetITStatus
 416              	.LVL52:
 417 0018 A0B9     		cbnz	r0, .L36
 418              	.L30:
 419 001a 10BD     		pop	{r4, pc}
 420              	.L35:
 120:Bsp/periph_serial_irq.c **** 		{
 421              		.loc 1 120 0
 422 001c 0320     		movs	r0, #3
 423 001e FFF7FEFF 		bl	Serial_Get_IRQ_RxCallback
 424              	.LVL53:
 425 0022 48B1     		cbz	r0, .L32
 122:Bsp/periph_serial_irq.c **** 		}
 426              		.loc 1 122 0
 427 0024 0320     		movs	r0, #3
 428 0026 FFF7FEFF 		bl	Serial_Get_IRQ_RxCallback
 429              	.LVL54:
 430 002a 0446     		mov	r4, r0
 431 002c 1248     		ldr	r0, .L37
 432 002e FFF7FEFF 		bl	USART_ReceiveData
 433              	.LVL55:
 434 0032 0121     		movs	r1, #1
 435 0034 C0B2     		uxtb	r0, r0
 436 0036 A047     		blx	r4
 437              	.LVL56:
 438              	.L32:
ARM GAS  /tmp/cch81du2.s 			page 11


 125:Bsp/periph_serial_irq.c **** 	}
 439              		.loc 1 125 0
 440 0038 40F22551 		movw	r1, #1317
 441 003c 0E48     		ldr	r0, .L37
 442 003e FFF7FEFF 		bl	USART_ClearITPendingBit
 443              	.LVL57:
 444 0042 E4E7     		b	.L31
 445              	.L36:
 129:Bsp/periph_serial_irq.c **** 	{
 130:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial6_DMA_RX_Stream, DISABLE);
 446              		.loc 1 130 0
 447 0044 0D4C     		ldr	r4, .L37+4
 448 0046 0021     		movs	r1, #0
 449 0048 2046     		mov	r0, r4
 450 004a FFF7FEFF 		bl	DMA_Cmd
 451              	.LVL58:
 131:Bsp/periph_serial_irq.c **** 
 132:Bsp/periph_serial_irq.c **** 		rec = USART6->DR;
 452              		.loc 1 132 0
 453 004e 0A4B     		ldr	r3, .L37
 454 0050 9A88     		ldrh	r2, [r3, #4]
 455              	.LVL59:
 133:Bsp/periph_serial_irq.c **** 		rec = USART6->SR;
 456              		.loc 1 133 0
 457 0052 1B88     		ldrh	r3, [r3]
 134:Bsp/periph_serial_irq.c **** 
 135:Bsp/periph_serial_irq.c **** 		rec = DMA_GetCurrDataCounter(Serial6_DMA_RX_Stream);
 458              		.loc 1 135 0
 459 0054 2046     		mov	r0, r4
 460 0056 FFF7FEFF 		bl	DMA_GetCurrDataCounter
 461              	.LVL60:
 136:Bsp/periph_serial_irq.c **** 		DMA_ClearFlag(Serial6_DMA_RX_Stream, DMA_FLAG_TCIF1);
 462              		.loc 1 136 0
 463 005a 0949     		ldr	r1, .L37+8
 464 005c 2046     		mov	r0, r4
 465 005e FFF7FEFF 		bl	DMA_ClearFlag
 466              	.LVL61:
 137:Bsp/periph_serial_irq.c **** 		DMA_SetCurrDataCounter(Serial6_DMA_RX_Stream, SERIAL_MAX_RECLEN);
 467              		.loc 1 137 0
 468 0062 4FF40071 		mov	r1, #512
 469 0066 2046     		mov	r0, r4
 470 0068 FFF7FEFF 		bl	DMA_SetCurrDataCounter
 471              	.LVL62:
 138:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial6_DMA_RX_Stream, ENABLE);
 472              		.loc 1 138 0
 473 006c 0121     		movs	r1, #1
 474 006e 2046     		mov	r0, r4
 475 0070 FFF7FEFF 		bl	DMA_Cmd
 476              	.LVL63:
 139:Bsp/periph_serial_irq.c **** 	}
 140:Bsp/periph_serial_irq.c **** }
 477              		.loc 1 140 0
 478 0074 D1E7     		b	.L30
 479              	.L38:
 480 0076 00BF     		.align	2
 481              	.L37:
 482 0078 00140140 		.word	1073812480
ARM GAS  /tmp/cch81du2.s 			page 12


 483 007c 28640240 		.word	1073898536
 484 0080 00080010 		.word	268437504
 485              		.cfi_endproc
 486              	.LFE126:
 488              		.text
 489              	.Letext0:
 490              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 491              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 492              		.file 4 "F4_CORE/core_cm4.h"
 493              		.file 5 "USER/system_stm32f4xx.h"
 494              		.file 6 "USER/stm32f4xx.h"
 495              		.file 7 "/usr/include/newlib/sys/lock.h"
 496              		.file 8 "/usr/include/newlib/sys/_types.h"
 497              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 498              		.file 10 "/usr/include/newlib/sys/reent.h"
 499              		.file 11 "Bsp/periph_serial.h"
 500              		.file 12 "FWLIB/inc/stm32f4xx_usart.h"
 501              		.file 13 "FWLIB/inc/stm32f4xx_dma.h"
ARM GAS  /tmp/cch81du2.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 periph_serial_irq.c
     /tmp/cch81du2.s:18     .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/cch81du2.s:25     .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/cch81du2.s:144    .text.USART1_IRQHandler:00000000000000a0 $d
     /tmp/cch81du2.s:152    .text.USART2_IRQHandler:0000000000000000 $t
     /tmp/cch81du2.s:159    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
     /tmp/cch81du2.s:277    .text.USART2_IRQHandler:00000000000000a0 $d
     /tmp/cch81du2.s:285    .text.USART3_IRQHandler:0000000000000000 $t
     /tmp/cch81du2.s:292    .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
     /tmp/cch81du2.s:380    .text.USART3_IRQHandler:0000000000000078 $d
     /tmp/cch81du2.s:387    .text.USART6_IRQHandler:0000000000000000 $t
     /tmp/cch81du2.s:394    .text.USART6_IRQHandler:0000000000000000 USART6_IRQHandler
     /tmp/cch81du2.s:482    .text.USART6_IRQHandler:0000000000000078 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
USART_GetITStatus
Serial_Get_IRQ_RxCallback
USART_ReceiveData
USART_ClearITPendingBit
DMA_Cmd
DMA_GetCurrDataCounter
memset
DMA_ClearFlag
DMA_SetCurrDataCounter
Serial_RX_Buff
