ARM GAS  C:\Users\why\AppData\Local\Temp\ccefh9Jo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"periph_serial_irq.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.USART1_IRQHandler,"ax",%progbits
  22              		.align	2
  23              		.global	USART1_IRQHandler
  24              		.thumb
  25              		.thumb_func
  27              	USART1_IRQHandler:
  28              	.LFB123:
  29              		.file 1 "Bsp/periph_serial_irq.c"
   1:Bsp/periph_serial_irq.c **** #include "periph_serial_irq.h"
   2:Bsp/periph_serial_irq.c **** #include "periph_serial.h"
   3:Bsp/periph_serial_irq.c **** #include "periph_gpio.h"
   4:Bsp/periph_serial_irq.c **** #include "periph_dma.h"
   5:Bsp/periph_serial_irq.c **** #include "string.h"
   6:Bsp/periph_serial_irq.c **** #include "stm32f4xx_usart.h"
   7:Bsp/periph_serial_irq.c **** #include "stm32f4xx_dma.h"
   8:Bsp/periph_serial_irq.c **** #include "shell.h"
   9:Bsp/periph_serial_irq.c **** #include "shell_port.h"
  10:Bsp/periph_serial_irq.c **** 
  11:Bsp/periph_serial_irq.c **** #define PCK_MAX 256
  12:Bsp/periph_serial_irq.c **** uint8_t shell_recv;
  13:Bsp/periph_serial_irq.c **** void USART1_IRQHandler(void)
  14:Bsp/periph_serial_irq.c **** {
  30              		.loc 1 14 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 10B5     		push	{r4, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  15:Bsp/periph_serial_irq.c **** 	uint8_t rec;
  16:Bsp/periph_serial_irq.c **** 	static u8 rec_len = 0;
  17:Bsp/periph_serial_irq.c **** 	static u8 rec_enable = 0;
  18:Bsp/periph_serial_irq.c **** 
  19:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART1, USART_IT_TXE) == RESET)
  39              		.loc 1 19 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccefh9Jo.s 			page 2


  40 0002 40F22771 		movw	r1, #1831
  41 0006 2048     		ldr	r0, .L6
  42 0008 FFF7FEFF 		bl	USART_GetITStatus
  43              	.LVL0:
  44 000c 40B9     		cbnz	r0, .L2
  20:Bsp/periph_serial_irq.c **** 	{
  21:Bsp/periph_serial_irq.c **** 		USART_ITConfig(USART1, USART_IT_TC, DISABLE);
  45              		.loc 1 21 0
  46 000e 0022     		movs	r2, #0
  47 0010 40F22661 		movw	r1, #1574
  48 0014 00F18040 		add	r0, r0, #1073741824
  49 0018 00F58830 		add	r0, r0, #69632
  50 001c FFF7FEFF 		bl	USART_ITConfig
  51              	.LVL1:
  52              	.L2:
  22:Bsp/periph_serial_irq.c **** 	}
  23:Bsp/periph_serial_irq.c **** 
  24:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART1, USART_IT_RXNE) != RESET)
  53              		.loc 1 24 0
  54 0020 40F22551 		movw	r1, #1317
  55 0024 1848     		ldr	r0, .L6
  56 0026 FFF7FEFF 		bl	USART_GetITStatus
  57              	.LVL2:
  58 002a 40B1     		cbz	r0, .L3
  25:Bsp/periph_serial_irq.c **** 	{
  26:Bsp/periph_serial_irq.c **** 		rec = USART_ReceiveData(USART1);
  59              		.loc 1 26 0
  60 002c 164C     		ldr	r4, .L6
  61 002e 2046     		mov	r0, r4
  62 0030 FFF7FEFF 		bl	USART_ReceiveData
  63              	.LVL3:
  27:Bsp/periph_serial_irq.c **** 
  28:Bsp/periph_serial_irq.c **** 		USART_ClearITPendingBit(USART1, USART_IT_RXNE);
  64              		.loc 1 28 0
  65 0034 40F22551 		movw	r1, #1317
  66 0038 2046     		mov	r0, r4
  67 003a FFF7FEFF 		bl	USART_ClearITPendingBit
  68              	.LVL4:
  69              	.L3:
  29:Bsp/periph_serial_irq.c **** 	}
  30:Bsp/periph_serial_irq.c **** 
  31:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART1, USART_IT_IDLE) != RESET)
  70              		.loc 1 31 0
  71 003e 40F22441 		movw	r1, #1060
  72 0042 1148     		ldr	r0, .L6
  73 0044 FFF7FEFF 		bl	USART_GetITStatus
  74              	.LVL5:
  75 0048 E0B1     		cbz	r0, .L1
  32:Bsp/periph_serial_irq.c **** 	{
  33:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial1_DMA_RX_Stream, DISABLE);
  76              		.loc 1 33 0
  77 004a 104C     		ldr	r4, .L6+4
  78 004c 0021     		movs	r1, #0
  79 004e 2046     		mov	r0, r4
  80 0050 FFF7FEFF 		bl	DMA_Cmd
  81              	.LVL6:
  34:Bsp/periph_serial_irq.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccefh9Jo.s 			page 3


  35:Bsp/periph_serial_irq.c **** 		rec = USART1->DR;
  82              		.loc 1 35 0
  83 0054 0C4B     		ldr	r3, .L6
  84 0056 9A88     		ldrh	r2, [r3, #4]
  85              	.LVL7:
  36:Bsp/periph_serial_irq.c **** 		rec = USART1->SR;
  86              		.loc 1 36 0
  87 0058 1B88     		ldrh	r3, [r3]
  37:Bsp/periph_serial_irq.c **** 
  38:Bsp/periph_serial_irq.c **** 		rec = DMA_GetCurrDataCounter(Serial1_DMA_RX_Stream);
  88              		.loc 1 38 0
  89 005a 2046     		mov	r0, r4
  90 005c FFF7FEFF 		bl	DMA_GetCurrDataCounter
  91              	.LVL8:
  39:Bsp/periph_serial_irq.c **** 		shellHandler(&shell, shell_recv);
  92              		.loc 1 39 0
  93 0060 0B4B     		ldr	r3, .L6+8
  94 0062 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  95 0064 0B48     		ldr	r0, .L6+12
  96 0066 FFF7FEFF 		bl	shellHandler
  97              	.LVL9:
  40:Bsp/periph_serial_irq.c **** 		DMA_ClearFlag(Serial1_DMA_RX_Stream, DMA_FLAG_TCIF5);
  98              		.loc 1 40 0
  99 006a 0B49     		ldr	r1, .L6+16
 100 006c 2046     		mov	r0, r4
 101 006e FFF7FEFF 		bl	DMA_ClearFlag
 102              	.LVL10:
  41:Bsp/periph_serial_irq.c **** 		DMA_SetCurrDataCounter(Serial1_DMA_RX_Stream, PCK_MAX);
 103              		.loc 1 41 0
 104 0072 4FF48071 		mov	r1, #256
 105 0076 2046     		mov	r0, r4
 106 0078 FFF7FEFF 		bl	DMA_SetCurrDataCounter
 107              	.LVL11:
  42:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial1_DMA_RX_Stream, ENABLE);
 108              		.loc 1 42 0
 109 007c 0121     		movs	r1, #1
 110 007e 2046     		mov	r0, r4
 111 0080 FFF7FEFF 		bl	DMA_Cmd
 112              	.LVL12:
 113              	.L1:
 114 0084 10BD     		pop	{r4, pc}
 115              	.L7:
 116 0086 00BF     		.align	2
 117              	.L6:
 118 0088 00100140 		.word	1073811456
 119 008c 88640240 		.word	1073898632
 120 0090 00000000 		.word	shell_recv
 121 0094 00000000 		.word	shell
 122 0098 00080020 		.word	536872960
 123              		.cfi_endproc
 124              	.LFE123:
 126              		.section	.text.USART2_IRQHandler,"ax",%progbits
 127              		.align	2
 128              		.global	USART2_IRQHandler
 129              		.thumb
 130              		.thumb_func
 132              	USART2_IRQHandler:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccefh9Jo.s 			page 4


 133              	.LFB124:
  43:Bsp/periph_serial_irq.c **** 	}
  44:Bsp/periph_serial_irq.c **** }
  45:Bsp/periph_serial_irq.c **** 
  46:Bsp/periph_serial_irq.c **** void USART2_IRQHandler(void)
  47:Bsp/periph_serial_irq.c **** {
 134              		.loc 1 47 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138 0000 10B5     		push	{r4, lr}
 139              	.LCFI1:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 4, -8
 142              		.cfi_offset 14, -4
  48:Bsp/periph_serial_irq.c **** 	uint8_t rec;
  49:Bsp/periph_serial_irq.c **** 
  50:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART2, USART_IT_TXE) == RESET)
 143              		.loc 1 50 0
 144 0002 40F22771 		movw	r1, #1831
 145 0006 1E48     		ldr	r0, .L13
 146 0008 FFF7FEFF 		bl	USART_GetITStatus
 147              	.LVL13:
 148 000c 28B9     		cbnz	r0, .L9
  51:Bsp/periph_serial_irq.c **** 	{
  52:Bsp/periph_serial_irq.c **** 		USART_ITConfig(USART2, USART_IT_TC, DISABLE);
 149              		.loc 1 52 0
 150 000e 0022     		movs	r2, #0
 151 0010 40F22661 		movw	r1, #1574
 152 0014 1A48     		ldr	r0, .L13
 153 0016 FFF7FEFF 		bl	USART_ITConfig
 154              	.LVL14:
 155              	.L9:
  53:Bsp/periph_serial_irq.c **** 	}
  54:Bsp/periph_serial_irq.c **** 
  55:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART2, USART_IT_RXNE) != RESET)
 156              		.loc 1 55 0
 157 001a 40F22551 		movw	r1, #1317
 158 001e 1848     		ldr	r0, .L13
 159 0020 FFF7FEFF 		bl	USART_GetITStatus
 160              	.LVL15:
 161 0024 60B1     		cbz	r0, .L10
  56:Bsp/periph_serial_irq.c **** 	{
  57:Bsp/periph_serial_irq.c **** 		rec = USART_ReceiveData(USART2);
 162              		.loc 1 57 0
 163 0026 164C     		ldr	r4, .L13
 164 0028 2046     		mov	r0, r4
 165 002a FFF7FEFF 		bl	USART_ReceiveData
 166              	.LVL16:
  58:Bsp/periph_serial_irq.c **** 		USART_SendData(USART2, rec);
 167              		.loc 1 58 0
 168 002e C1B2     		uxtb	r1, r0
 169 0030 2046     		mov	r0, r4
 170              	.LVL17:
 171 0032 FFF7FEFF 		bl	USART_SendData
 172              	.LVL18:
  59:Bsp/periph_serial_irq.c **** 		USART_ClearITPendingBit(USART2, USART_IT_RXNE);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccefh9Jo.s 			page 5


 173              		.loc 1 59 0
 174 0036 40F22551 		movw	r1, #1317
 175 003a 2046     		mov	r0, r4
 176 003c FFF7FEFF 		bl	USART_ClearITPendingBit
 177              	.LVL19:
 178              	.L10:
  60:Bsp/periph_serial_irq.c **** 	}
  61:Bsp/periph_serial_irq.c **** 
  62:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART2, USART_IT_IDLE) != RESET)
 179              		.loc 1 62 0
 180 0040 40F22441 		movw	r1, #1060
 181 0044 0E48     		ldr	r0, .L13
 182 0046 FFF7FEFF 		bl	USART_GetITStatus
 183              	.LVL20:
 184 004a B8B1     		cbz	r0, .L8
  63:Bsp/periph_serial_irq.c **** 	{
  64:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial2_DMA_RX_Stream, DISABLE);
 185              		.loc 1 64 0
 186 004c 0D4C     		ldr	r4, .L13+4
 187 004e 0021     		movs	r1, #0
 188 0050 2046     		mov	r0, r4
 189 0052 FFF7FEFF 		bl	DMA_Cmd
 190              	.LVL21:
  65:Bsp/periph_serial_irq.c **** 
  66:Bsp/periph_serial_irq.c **** 		rec = USART2->DR;
 191              		.loc 1 66 0
 192 0056 0A4B     		ldr	r3, .L13
 193 0058 9A88     		ldrh	r2, [r3, #4]
  67:Bsp/periph_serial_irq.c **** 		rec = USART2->SR;
 194              		.loc 1 67 0
 195 005a 1B88     		ldrh	r3, [r3]
  68:Bsp/periph_serial_irq.c **** 
  69:Bsp/periph_serial_irq.c **** 		rec = DMA_GetCurrDataCounter(Serial2_DMA_RX_Stream);
 196              		.loc 1 69 0
 197 005c 2046     		mov	r0, r4
 198 005e FFF7FEFF 		bl	DMA_GetCurrDataCounter
 199              	.LVL22:
  70:Bsp/periph_serial_irq.c **** 		DMA_ClearFlag(Serial2_DMA_RX_Stream, DMA_FLAG_TCIF5);
 200              		.loc 1 70 0
 201 0062 0949     		ldr	r1, .L13+8
 202 0064 2046     		mov	r0, r4
 203 0066 FFF7FEFF 		bl	DMA_ClearFlag
 204              	.LVL23:
  71:Bsp/periph_serial_irq.c **** 		DMA_SetCurrDataCounter(Serial2_DMA_RX_Stream, PCK_MAX);
 205              		.loc 1 71 0
 206 006a 4FF48071 		mov	r1, #256
 207 006e 2046     		mov	r0, r4
 208 0070 FFF7FEFF 		bl	DMA_SetCurrDataCounter
 209              	.LVL24:
  72:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial2_DMA_RX_Stream, ENABLE);
 210              		.loc 1 72 0
 211 0074 0121     		movs	r1, #1
 212 0076 2046     		mov	r0, r4
 213 0078 FFF7FEFF 		bl	DMA_Cmd
 214              	.LVL25:
 215              	.L8:
 216 007c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\why\AppData\Local\Temp\ccefh9Jo.s 			page 6


 217              	.L14:
 218 007e 00BF     		.align	2
 219              	.L13:
 220 0080 00440040 		.word	1073759232
 221 0084 88600240 		.word	1073897608
 222 0088 00080020 		.word	536872960
 223              		.cfi_endproc
 224              	.LFE124:
 226              		.section	.text.USART3_IRQHandler,"ax",%progbits
 227              		.align	2
 228              		.global	USART3_IRQHandler
 229              		.thumb
 230              		.thumb_func
 232              	USART3_IRQHandler:
 233              	.LFB125:
  73:Bsp/periph_serial_irq.c **** 	}
  74:Bsp/periph_serial_irq.c **** }
  75:Bsp/periph_serial_irq.c **** 
  76:Bsp/periph_serial_irq.c **** void USART3_IRQHandler(void)
  77:Bsp/periph_serial_irq.c **** {
 234              		.loc 1 77 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 10B5     		push	{r4, lr}
 239              	.LCFI2:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 4, -8
 242              		.cfi_offset 14, -4
  78:Bsp/periph_serial_irq.c **** 	uint8_t rec;
  79:Bsp/periph_serial_irq.c **** 
  80:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART3, USART_IT_TXE) == RESET)
 243              		.loc 1 80 0
 244 0002 40F22771 		movw	r1, #1831
 245 0006 1E48     		ldr	r0, .L20
 246 0008 FFF7FEFF 		bl	USART_GetITStatus
 247              	.LVL26:
 248 000c 28B9     		cbnz	r0, .L16
  81:Bsp/periph_serial_irq.c **** 	{
  82:Bsp/periph_serial_irq.c **** 		USART_ITConfig(USART3, USART_IT_TC, DISABLE);
 249              		.loc 1 82 0
 250 000e 0022     		movs	r2, #0
 251 0010 40F22661 		movw	r1, #1574
 252 0014 1A48     		ldr	r0, .L20
 253 0016 FFF7FEFF 		bl	USART_ITConfig
 254              	.LVL27:
 255              	.L16:
  83:Bsp/periph_serial_irq.c **** 	}
  84:Bsp/periph_serial_irq.c **** 
  85:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART3, USART_IT_RXNE) != RESET)
 256              		.loc 1 85 0
 257 001a 40F22551 		movw	r1, #1317
 258 001e 1848     		ldr	r0, .L20
 259 0020 FFF7FEFF 		bl	USART_GetITStatus
 260              	.LVL28:
 261 0024 60B1     		cbz	r0, .L17
  86:Bsp/periph_serial_irq.c **** 	{
ARM GAS  C:\Users\why\AppData\Local\Temp\ccefh9Jo.s 			page 7


  87:Bsp/periph_serial_irq.c **** 		rec = USART_ReceiveData(USART3);
 262              		.loc 1 87 0
 263 0026 164C     		ldr	r4, .L20
 264 0028 2046     		mov	r0, r4
 265 002a FFF7FEFF 		bl	USART_ReceiveData
 266              	.LVL29:
  88:Bsp/periph_serial_irq.c **** 		USART_SendData(USART3, rec);
 267              		.loc 1 88 0
 268 002e C1B2     		uxtb	r1, r0
 269 0030 2046     		mov	r0, r4
 270              	.LVL30:
 271 0032 FFF7FEFF 		bl	USART_SendData
 272              	.LVL31:
  89:Bsp/periph_serial_irq.c **** 		USART_ClearITPendingBit(USART3, USART_IT_RXNE);
 273              		.loc 1 89 0
 274 0036 40F22551 		movw	r1, #1317
 275 003a 2046     		mov	r0, r4
 276 003c FFF7FEFF 		bl	USART_ClearITPendingBit
 277              	.LVL32:
 278              	.L17:
  90:Bsp/periph_serial_irq.c **** 	}
  91:Bsp/periph_serial_irq.c **** 
  92:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART3, USART_IT_IDLE) != RESET)
 279              		.loc 1 92 0
 280 0040 40F22441 		movw	r1, #1060
 281 0044 0E48     		ldr	r0, .L20
 282 0046 FFF7FEFF 		bl	USART_GetITStatus
 283              	.LVL33:
 284 004a B8B1     		cbz	r0, .L15
  93:Bsp/periph_serial_irq.c **** 	{
  94:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial3_DMA_RX_Stream, DISABLE);
 285              		.loc 1 94 0
 286 004c 0D4C     		ldr	r4, .L20+4
 287 004e 0021     		movs	r1, #0
 288 0050 2046     		mov	r0, r4
 289 0052 FFF7FEFF 		bl	DMA_Cmd
 290              	.LVL34:
  95:Bsp/periph_serial_irq.c **** 
  96:Bsp/periph_serial_irq.c **** 		rec = USART3->DR;
 291              		.loc 1 96 0
 292 0056 0A4B     		ldr	r3, .L20
 293 0058 9A88     		ldrh	r2, [r3, #4]
  97:Bsp/periph_serial_irq.c **** 		rec = USART3->SR;
 294              		.loc 1 97 0
 295 005a 1B88     		ldrh	r3, [r3]
  98:Bsp/periph_serial_irq.c **** 
  99:Bsp/periph_serial_irq.c **** 		rec = DMA_GetCurrDataCounter(Serial3_DMA_RX_Stream);
 296              		.loc 1 99 0
 297 005c 2046     		mov	r0, r4
 298 005e FFF7FEFF 		bl	DMA_GetCurrDataCounter
 299              	.LVL35:
 100:Bsp/periph_serial_irq.c **** 		DMA_ClearFlag(Serial3_DMA_RX_Stream, DMA_FLAG_TCIF1);
 300              		.loc 1 100 0
 301 0062 0949     		ldr	r1, .L20+8
 302 0064 2046     		mov	r0, r4
 303 0066 FFF7FEFF 		bl	DMA_ClearFlag
 304              	.LVL36:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccefh9Jo.s 			page 8


 101:Bsp/periph_serial_irq.c **** 		DMA_SetCurrDataCounter(Serial3_DMA_RX_Stream, PCK_MAX);
 305              		.loc 1 101 0
 306 006a 4FF48071 		mov	r1, #256
 307 006e 2046     		mov	r0, r4
 308 0070 FFF7FEFF 		bl	DMA_SetCurrDataCounter
 309              	.LVL37:
 102:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial3_DMA_RX_Stream, ENABLE);
 310              		.loc 1 102 0
 311 0074 0121     		movs	r1, #1
 312 0076 2046     		mov	r0, r4
 313 0078 FFF7FEFF 		bl	DMA_Cmd
 314              	.LVL38:
 315              	.L15:
 316 007c 10BD     		pop	{r4, pc}
 317              	.L21:
 318 007e 00BF     		.align	2
 319              	.L20:
 320 0080 00480040 		.word	1073760256
 321 0084 28600240 		.word	1073897512
 322 0088 00080010 		.word	268437504
 323              		.cfi_endproc
 324              	.LFE125:
 326              		.section	.text.USART6_IRQHandler,"ax",%progbits
 327              		.align	2
 328              		.global	USART6_IRQHandler
 329              		.thumb
 330              		.thumb_func
 332              	USART6_IRQHandler:
 333              	.LFB126:
 103:Bsp/periph_serial_irq.c **** 	}
 104:Bsp/periph_serial_irq.c **** }
 105:Bsp/periph_serial_irq.c **** 
 106:Bsp/periph_serial_irq.c **** void USART6_IRQHandler(void)
 107:Bsp/periph_serial_irq.c **** {
 334              		.loc 1 107 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0000 10B5     		push	{r4, lr}
 339              	.LCFI3:
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 4, -8
 342              		.cfi_offset 14, -4
 108:Bsp/periph_serial_irq.c **** 	uint8_t rec;
 109:Bsp/periph_serial_irq.c **** 
 110:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART6, USART_IT_TXE) == RESET)
 343              		.loc 1 110 0
 344 0002 40F22771 		movw	r1, #1831
 345 0006 1E48     		ldr	r0, .L27
 346 0008 FFF7FEFF 		bl	USART_GetITStatus
 347              	.LVL39:
 348 000c 28B9     		cbnz	r0, .L23
 111:Bsp/periph_serial_irq.c **** 	{
 112:Bsp/periph_serial_irq.c **** 		USART_ITConfig(USART6, USART_IT_TC, DISABLE);
 349              		.loc 1 112 0
 350 000e 0022     		movs	r2, #0
 351 0010 40F22661 		movw	r1, #1574
ARM GAS  C:\Users\why\AppData\Local\Temp\ccefh9Jo.s 			page 9


 352 0014 1A48     		ldr	r0, .L27
 353 0016 FFF7FEFF 		bl	USART_ITConfig
 354              	.LVL40:
 355              	.L23:
 113:Bsp/periph_serial_irq.c **** 	}
 114:Bsp/periph_serial_irq.c **** 
 115:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART6, USART_IT_RXNE) != RESET)
 356              		.loc 1 115 0
 357 001a 40F22551 		movw	r1, #1317
 358 001e 1848     		ldr	r0, .L27
 359 0020 FFF7FEFF 		bl	USART_GetITStatus
 360              	.LVL41:
 361 0024 60B1     		cbz	r0, .L24
 116:Bsp/periph_serial_irq.c **** 	{
 117:Bsp/periph_serial_irq.c **** 		rec = USART_ReceiveData(USART6);
 362              		.loc 1 117 0
 363 0026 164C     		ldr	r4, .L27
 364 0028 2046     		mov	r0, r4
 365 002a FFF7FEFF 		bl	USART_ReceiveData
 366              	.LVL42:
 118:Bsp/periph_serial_irq.c **** 		USART_SendData(USART6, rec);
 367              		.loc 1 118 0
 368 002e C1B2     		uxtb	r1, r0
 369 0030 2046     		mov	r0, r4
 370              	.LVL43:
 371 0032 FFF7FEFF 		bl	USART_SendData
 372              	.LVL44:
 119:Bsp/periph_serial_irq.c **** 		USART_ClearITPendingBit(USART6, USART_IT_RXNE);
 373              		.loc 1 119 0
 374 0036 40F22551 		movw	r1, #1317
 375 003a 2046     		mov	r0, r4
 376 003c FFF7FEFF 		bl	USART_ClearITPendingBit
 377              	.LVL45:
 378              	.L24:
 120:Bsp/periph_serial_irq.c **** 	}
 121:Bsp/periph_serial_irq.c **** 
 122:Bsp/periph_serial_irq.c **** 	if (USART_GetITStatus(USART6, USART_IT_IDLE) != RESET)
 379              		.loc 1 122 0
 380 0040 40F22441 		movw	r1, #1060
 381 0044 0E48     		ldr	r0, .L27
 382 0046 FFF7FEFF 		bl	USART_GetITStatus
 383              	.LVL46:
 384 004a B8B1     		cbz	r0, .L22
 123:Bsp/periph_serial_irq.c **** 	{
 124:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial6_DMA_RX_Stream, DISABLE);
 385              		.loc 1 124 0
 386 004c 0D4C     		ldr	r4, .L27+4
 387 004e 0021     		movs	r1, #0
 388 0050 2046     		mov	r0, r4
 389 0052 FFF7FEFF 		bl	DMA_Cmd
 390              	.LVL47:
 125:Bsp/periph_serial_irq.c **** 
 126:Bsp/periph_serial_irq.c **** 		rec = USART6->DR;
 391              		.loc 1 126 0
 392 0056 0A4B     		ldr	r3, .L27
 393 0058 9A88     		ldrh	r2, [r3, #4]
 127:Bsp/periph_serial_irq.c **** 		rec = USART6->SR;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccefh9Jo.s 			page 10


 394              		.loc 1 127 0
 395 005a 1B88     		ldrh	r3, [r3]
 128:Bsp/periph_serial_irq.c **** 
 129:Bsp/periph_serial_irq.c **** 		rec = DMA_GetCurrDataCounter(Serial6_DMA_RX_Stream);
 396              		.loc 1 129 0
 397 005c 2046     		mov	r0, r4
 398 005e FFF7FEFF 		bl	DMA_GetCurrDataCounter
 399              	.LVL48:
 130:Bsp/periph_serial_irq.c **** 		DMA_ClearFlag(Serial6_DMA_RX_Stream, DMA_FLAG_TCIF1);
 400              		.loc 1 130 0
 401 0062 0949     		ldr	r1, .L27+8
 402 0064 2046     		mov	r0, r4
 403 0066 FFF7FEFF 		bl	DMA_ClearFlag
 404              	.LVL49:
 131:Bsp/periph_serial_irq.c **** 		DMA_SetCurrDataCounter(Serial6_DMA_RX_Stream, PCK_MAX);
 405              		.loc 1 131 0
 406 006a 4FF48071 		mov	r1, #256
 407 006e 2046     		mov	r0, r4
 408 0070 FFF7FEFF 		bl	DMA_SetCurrDataCounter
 409              	.LVL50:
 132:Bsp/periph_serial_irq.c **** 		DMA_Cmd(Serial6_DMA_RX_Stream, ENABLE);
 410              		.loc 1 132 0
 411 0074 0121     		movs	r1, #1
 412 0076 2046     		mov	r0, r4
 413 0078 FFF7FEFF 		bl	DMA_Cmd
 414              	.LVL51:
 415              	.L22:
 416 007c 10BD     		pop	{r4, pc}
 417              	.L28:
 418 007e 00BF     		.align	2
 419              	.L27:
 420 0080 00140140 		.word	1073812480
 421 0084 28640240 		.word	1073898536
 422 0088 00080010 		.word	268437504
 423              		.cfi_endproc
 424              	.LFE126:
 426              		.comm	shell_recv,1,1
 427              		.text
 428              	.Letext0:
 429              		.file 2 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_types.h"
 430              		.file 3 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 431              		.file 4 "USER/stm32f4xx.h"
 432              		.file 5 "Dsp/letter_shell/shell.h"
 433              		.file 6 "F4_CORE/core_cm4.h"
 434              		.file 7 "Dsp/letter_shell/shell_port.h"
 435              		.file 8 "FWLIB/inc/stm32f4xx_usart.h"
 436              		.file 9 "FWLIB/inc/stm32f4xx_dma.h"
ARM GAS  C:\Users\why\AppData\Local\Temp\ccefh9Jo.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 periph_serial_irq.c
C:\Users\why\AppData\Local\Temp\ccefh9Jo.s:22     .text.USART1_IRQHandler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccefh9Jo.s:27     .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\why\AppData\Local\Temp\ccefh9Jo.s:118    .text.USART1_IRQHandler:00000088 $d
                            *COM*:00000001 shell_recv
C:\Users\why\AppData\Local\Temp\ccefh9Jo.s:127    .text.USART2_IRQHandler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccefh9Jo.s:132    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\why\AppData\Local\Temp\ccefh9Jo.s:220    .text.USART2_IRQHandler:00000080 $d
C:\Users\why\AppData\Local\Temp\ccefh9Jo.s:227    .text.USART3_IRQHandler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccefh9Jo.s:232    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
C:\Users\why\AppData\Local\Temp\ccefh9Jo.s:320    .text.USART3_IRQHandler:00000080 $d
C:\Users\why\AppData\Local\Temp\ccefh9Jo.s:327    .text.USART6_IRQHandler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccefh9Jo.s:332    .text.USART6_IRQHandler:00000000 USART6_IRQHandler
C:\Users\why\AppData\Local\Temp\ccefh9Jo.s:420    .text.USART6_IRQHandler:00000080 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
USART_GetITStatus
USART_ITConfig
USART_ReceiveData
USART_ClearITPendingBit
DMA_Cmd
DMA_GetCurrDataCounter
shellHandler
DMA_ClearFlag
DMA_SetCurrDataCounter
shell
USART_SendData
