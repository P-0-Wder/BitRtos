ARM GAS  /tmp/ccses48D.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.TI1_Config,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	TI1_Config:
  25              	.LFB211:
  26              		.file 1 "FWLIB/src/stm32f4xx_tim.c"
   1:FWLIB/src/stm32f4xx_tim.c **** /**
   2:FWLIB/src/stm32f4xx_tim.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_tim.c ****   * @file    stm32f4xx_tim.c
   4:FWLIB/src/stm32f4xx_tim.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_tim.c ****   * @version V1.8.0
   6:FWLIB/src/stm32f4xx_tim.c ****   * @date    04-November-2016
   7:FWLIB/src/stm32f4xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:FWLIB/src/stm32f4xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:FWLIB/src/stm32f4xx_tim.c ****   *            + TimeBase management
  10:FWLIB/src/stm32f4xx_tim.c ****   *            + Output Compare management
  11:FWLIB/src/stm32f4xx_tim.c ****   *            + Input Capture management
  12:FWLIB/src/stm32f4xx_tim.c ****   *            + Advanced-control timers (TIM1 and TIM8) specific features  
  13:FWLIB/src/stm32f4xx_tim.c ****   *            + Interrupts, DMA and flags management
  14:FWLIB/src/stm32f4xx_tim.c ****   *            + Clocks management
  15:FWLIB/src/stm32f4xx_tim.c ****   *            + Synchronization management
  16:FWLIB/src/stm32f4xx_tim.c ****   *            + Specific interface management
  17:FWLIB/src/stm32f4xx_tim.c ****   *            + Specific remapping management      
  18:FWLIB/src/stm32f4xx_tim.c ****   *              
  19:FWLIB/src/stm32f4xx_tim.c ****   @verbatim   
  20:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
  21:FWLIB/src/stm32f4xx_tim.c ****                    #####  How to use this driver #####
  22:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
  23:FWLIB/src/stm32f4xx_tim.c ****     [..]
  24:FWLIB/src/stm32f4xx_tim.c ****     This driver provides functions to configure and program the TIM 
  25:FWLIB/src/stm32f4xx_tim.c ****     of all STM32F4xx devices.
  26:FWLIB/src/stm32f4xx_tim.c ****     These functions are split in 9 groups: 
  27:FWLIB/src/stm32f4xx_tim.c ****      
  28:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM TimeBase management: this group includes all needed functions 
  29:FWLIB/src/stm32f4xx_tim.c ****           to configure the TM Timebase unit:
  30:FWLIB/src/stm32f4xx_tim.c ****         (++) Set/Get Prescaler
  31:FWLIB/src/stm32f4xx_tim.c ****         (++) Set/Get Autoreload  
  32:FWLIB/src/stm32f4xx_tim.c ****         (++) Counter modes configuration
ARM GAS  /tmp/ccses48D.s 			page 2


  33:FWLIB/src/stm32f4xx_tim.c ****         (++) Set Clock division  
  34:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the One Pulse mode
  35:FWLIB/src/stm32f4xx_tim.c ****         (++) Update Request Configuration
  36:FWLIB/src/stm32f4xx_tim.c ****         (++) Update Disable Configuration
  37:FWLIB/src/stm32f4xx_tim.c ****         (++) Auto-Preload Configuration 
  38:FWLIB/src/stm32f4xx_tim.c ****         (++) Enable/Disable the counter     
  39:FWLIB/src/stm32f4xx_tim.c ****                    
  40:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM Output Compare management: this group includes all needed 
  41:FWLIB/src/stm32f4xx_tim.c ****           functions to configure the Capture/Compare unit used in Output 
  42:FWLIB/src/stm32f4xx_tim.c ****           compare mode: 
  43:FWLIB/src/stm32f4xx_tim.c ****         (++) Configure each channel, independently, in Output Compare mode
  44:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the output compare modes
  45:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the Polarities of each channel
  46:FWLIB/src/stm32f4xx_tim.c ****         (++) Set/Get the Capture/Compare register values
  47:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the Output Compare Fast mode 
  48:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the Output Compare Forced mode  
  49:FWLIB/src/stm32f4xx_tim.c ****         (++) Output Compare-Preload Configuration 
  50:FWLIB/src/stm32f4xx_tim.c ****         (++) Clear Output Compare Reference
  51:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the OCREF Clear signal
  52:FWLIB/src/stm32f4xx_tim.c ****         (++) Enable/Disable the Capture/Compare Channels    
  53:FWLIB/src/stm32f4xx_tim.c ****                      
  54:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM Input Capture management: this group includes all needed 
  55:FWLIB/src/stm32f4xx_tim.c ****           functions to configure the Capture/Compare unit used in 
  56:FWLIB/src/stm32f4xx_tim.c ****           Input Capture mode:
  57:FWLIB/src/stm32f4xx_tim.c ****         (++) Configure each channel in input capture mode
  58:FWLIB/src/stm32f4xx_tim.c ****         (++) Configure Channel1/2 in PWM Input mode
  59:FWLIB/src/stm32f4xx_tim.c ****         (++) Set the Input Capture Prescaler
  60:FWLIB/src/stm32f4xx_tim.c ****         (++) Get the Capture/Compare values      
  61:FWLIB/src/stm32f4xx_tim.c ****                      
  62:FWLIB/src/stm32f4xx_tim.c ****       (#) Advanced-control timers (TIM1 and TIM8) specific features
  63:FWLIB/src/stm32f4xx_tim.c ****         (++) Configures the Break input, dead time, Lock level, the OSSI,
  64:FWLIB/src/stm32f4xx_tim.c ****              the OSSR State and the AOE(automatic output enable)
  65:FWLIB/src/stm32f4xx_tim.c ****         (++) Enable/Disable the TIM peripheral Main Outputs
  66:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the Commutation event
  67:FWLIB/src/stm32f4xx_tim.c ****         (++) Set/Reset the Capture Compare Preload Control bit
  68:FWLIB/src/stm32f4xx_tim.c ****                                 
  69:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM interrupts, DMA and flags management
  70:FWLIB/src/stm32f4xx_tim.c ****         (++) Enable/Disable interrupt sources
  71:FWLIB/src/stm32f4xx_tim.c ****         (++) Get flags status
  72:FWLIB/src/stm32f4xx_tim.c ****         (++) Clear flags/ Pending bits
  73:FWLIB/src/stm32f4xx_tim.c ****         (++) Enable/Disable DMA requests 
  74:FWLIB/src/stm32f4xx_tim.c ****         (++) Configure DMA burst mode
  75:FWLIB/src/stm32f4xx_tim.c ****         (++) Select CaptureCompare DMA request  
  76:FWLIB/src/stm32f4xx_tim.c ****                 
  77:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM clocks management: this group includes all needed functions 
  78:FWLIB/src/stm32f4xx_tim.c ****           to configure the clock controller unit:
  79:FWLIB/src/stm32f4xx_tim.c ****         (++) Select internal/External clock
  80:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:FWLIB/src/stm32f4xx_tim.c ****            
  82:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM synchronization management: this group includes all needed 
  83:FWLIB/src/stm32f4xx_tim.c ****           functions to configure the Synchronization unit:
  84:FWLIB/src/stm32f4xx_tim.c ****         (++) Select Input Trigger  
  85:FWLIB/src/stm32f4xx_tim.c ****         (++) Select Output Trigger  
  86:FWLIB/src/stm32f4xx_tim.c ****         (++) Select Master Slave Mode 
  87:FWLIB/src/stm32f4xx_tim.c ****         (++) ETR Configuration when used as external trigger   
  88:FWLIB/src/stm32f4xx_tim.c ****        
  89:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM specific interface management, this group includes all 
ARM GAS  /tmp/ccses48D.s 			page 3


  90:FWLIB/src/stm32f4xx_tim.c ****           needed functions to use the specific TIM interface:
  91:FWLIB/src/stm32f4xx_tim.c ****         (++) Encoder Interface Configuration
  92:FWLIB/src/stm32f4xx_tim.c ****         (++) Select Hall Sensor   
  93:FWLIB/src/stm32f4xx_tim.c ****            
  94:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM specific remapping management includes the Remapping 
  95:FWLIB/src/stm32f4xx_tim.c ****           configuration of specific timers               
  96:FWLIB/src/stm32f4xx_tim.c ****      
  97:FWLIB/src/stm32f4xx_tim.c ****   @endverbatim    
  98:FWLIB/src/stm32f4xx_tim.c ****   ******************************************************************************
  99:FWLIB/src/stm32f4xx_tim.c ****   * @attention
 100:FWLIB/src/stm32f4xx_tim.c ****   *
 101:FWLIB/src/stm32f4xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
 102:FWLIB/src/stm32f4xx_tim.c ****   *
 103:FWLIB/src/stm32f4xx_tim.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 104:FWLIB/src/stm32f4xx_tim.c ****   * You may not use this file except in compliance with the License.
 105:FWLIB/src/stm32f4xx_tim.c ****   * You may obtain a copy of the License at:
 106:FWLIB/src/stm32f4xx_tim.c ****   *
 107:FWLIB/src/stm32f4xx_tim.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 108:FWLIB/src/stm32f4xx_tim.c ****   *
 109:FWLIB/src/stm32f4xx_tim.c ****   * Unless required by applicable law or agreed to in writing, software 
 110:FWLIB/src/stm32f4xx_tim.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 111:FWLIB/src/stm32f4xx_tim.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 112:FWLIB/src/stm32f4xx_tim.c ****   * See the License for the specific language governing permissions and
 113:FWLIB/src/stm32f4xx_tim.c ****   * limitations under the License.
 114:FWLIB/src/stm32f4xx_tim.c ****   *
 115:FWLIB/src/stm32f4xx_tim.c ****   ******************************************************************************
 116:FWLIB/src/stm32f4xx_tim.c ****   */
 117:FWLIB/src/stm32f4xx_tim.c **** 
 118:FWLIB/src/stm32f4xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 119:FWLIB/src/stm32f4xx_tim.c **** #include "stm32f4xx_tim.h"
 120:FWLIB/src/stm32f4xx_tim.c **** #include "stm32f4xx_rcc.h"
 121:FWLIB/src/stm32f4xx_tim.c **** 
 122:FWLIB/src/stm32f4xx_tim.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 123:FWLIB/src/stm32f4xx_tim.c ****   * @{
 124:FWLIB/src/stm32f4xx_tim.c ****   */
 125:FWLIB/src/stm32f4xx_tim.c **** 
 126:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM 
 127:FWLIB/src/stm32f4xx_tim.c ****   * @brief TIM driver modules
 128:FWLIB/src/stm32f4xx_tim.c ****   * @{
 129:FWLIB/src/stm32f4xx_tim.c ****   */
 130:FWLIB/src/stm32f4xx_tim.c **** 
 131:FWLIB/src/stm32f4xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 132:FWLIB/src/stm32f4xx_tim.c **** /* Private define ------------------------------------------------------------*/
 133:FWLIB/src/stm32f4xx_tim.c **** 
 134:FWLIB/src/stm32f4xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 135:FWLIB/src/stm32f4xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 136:FWLIB/src/stm32f4xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 137:FWLIB/src/stm32f4xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 138:FWLIB/src/stm32f4xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 139:FWLIB/src/stm32f4xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 140:FWLIB/src/stm32f4xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 141:FWLIB/src/stm32f4xx_tim.c **** 
 142:FWLIB/src/stm32f4xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 143:FWLIB/src/stm32f4xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 144:FWLIB/src/stm32f4xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 145:FWLIB/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 146:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
ARM GAS  /tmp/ccses48D.s 			page 4


 147:FWLIB/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 148:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 149:FWLIB/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 150:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 151:FWLIB/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 152:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 153:FWLIB/src/stm32f4xx_tim.c **** 
 154:FWLIB/src/stm32f4xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 155:FWLIB/src/stm32f4xx_tim.c **** 
 156:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Private_Functions
 157:FWLIB/src/stm32f4xx_tim.c ****   * @{
 158:FWLIB/src/stm32f4xx_tim.c ****   */
 159:FWLIB/src/stm32f4xx_tim.c **** 
 160:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 161:FWLIB/src/stm32f4xx_tim.c ****  *  @brief   TimeBase management functions 
 162:FWLIB/src/stm32f4xx_tim.c ****  *
 163:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
 164:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
 165:FWLIB/src/stm32f4xx_tim.c ****                      ##### TimeBase management functions #####
 166:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
 167:FWLIB/src/stm32f4xx_tim.c ****   
 168:FWLIB/src/stm32f4xx_tim.c ****      
 169:FWLIB/src/stm32f4xx_tim.c ****             ##### TIM Driver: how to use it in Timing(Time base) Mode #####
 170:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
 171:FWLIB/src/stm32f4xx_tim.c ****     [..] 
 172:FWLIB/src/stm32f4xx_tim.c ****     To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 173:FWLIB/src/stm32f4xx_tim.c ****        
 174:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 175:FWLIB/src/stm32f4xx_tim.c ****                     
 176:FWLIB/src/stm32f4xx_tim.c ****       (#) Fill the TIM_TimeBaseInitStruct with the desired parameters.
 177:FWLIB/src/stm32f4xx_tim.c ****        
 178:FWLIB/src/stm32f4xx_tim.c ****       (#) Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 179:FWLIB/src/stm32f4xx_tim.c ****           with the corresponding configuration
 180:FWLIB/src/stm32f4xx_tim.c ****           
 181:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable the NVIC if you need to generate the update interrupt. 
 182:FWLIB/src/stm32f4xx_tim.c ****           
 183:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 184:FWLIB/src/stm32f4xx_tim.c ****        
 185:FWLIB/src/stm32f4xx_tim.c ****       (#) Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 186:FWLIB/src/stm32f4xx_tim.c ****              
 187:FWLIB/src/stm32f4xx_tim.c ****        -@- All other functions can be used separately to modify, if needed,
 188:FWLIB/src/stm32f4xx_tim.c ****            a specific feature of the Timer. 
 189:FWLIB/src/stm32f4xx_tim.c **** 
 190:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
 191:FWLIB/src/stm32f4xx_tim.c ****   * @{
 192:FWLIB/src/stm32f4xx_tim.c ****   */
 193:FWLIB/src/stm32f4xx_tim.c ****   
 194:FWLIB/src/stm32f4xx_tim.c **** /**
 195:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 196:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 197:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 198:FWLIB/src/stm32f4xx_tim.c **** 
 199:FWLIB/src/stm32f4xx_tim.c ****   */
 200:FWLIB/src/stm32f4xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 201:FWLIB/src/stm32f4xx_tim.c **** {
 202:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 203:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
ARM GAS  /tmp/ccses48D.s 			page 5


 204:FWLIB/src/stm32f4xx_tim.c ****  
 205:FWLIB/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
 206:FWLIB/src/stm32f4xx_tim.c ****   {
 207:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 208:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 209:FWLIB/src/stm32f4xx_tim.c ****   } 
 210:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
 211:FWLIB/src/stm32f4xx_tim.c ****   {     
 212:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 213:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 214:FWLIB/src/stm32f4xx_tim.c ****   }  
 215:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
 216:FWLIB/src/stm32f4xx_tim.c ****   { 
 217:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 218:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 219:FWLIB/src/stm32f4xx_tim.c ****   }  
 220:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
 221:FWLIB/src/stm32f4xx_tim.c ****   { 
 222:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 223:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 224:FWLIB/src/stm32f4xx_tim.c ****   }  
 225:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 226:FWLIB/src/stm32f4xx_tim.c ****   {      
 227:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 228:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 229:FWLIB/src/stm32f4xx_tim.c ****   }  
 230:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 231:FWLIB/src/stm32f4xx_tim.c ****   {    
 232:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 233:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 234:FWLIB/src/stm32f4xx_tim.c ****   }  
 235:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 236:FWLIB/src/stm32f4xx_tim.c ****   {      
 237:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 238:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 239:FWLIB/src/stm32f4xx_tim.c ****   }  
 240:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 241:FWLIB/src/stm32f4xx_tim.c ****   {      
 242:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 243:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 244:FWLIB/src/stm32f4xx_tim.c ****   }  
 245:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 246:FWLIB/src/stm32f4xx_tim.c ****   {      
 247:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 248:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 249:FWLIB/src/stm32f4xx_tim.c ****    }  
 250:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 251:FWLIB/src/stm32f4xx_tim.c ****   {      
 252:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 253:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 254:FWLIB/src/stm32f4xx_tim.c ****   }  
 255:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 256:FWLIB/src/stm32f4xx_tim.c ****   {     
 257:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 258:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 259:FWLIB/src/stm32f4xx_tim.c ****   }  
 260:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
ARM GAS  /tmp/ccses48D.s 			page 6


 261:FWLIB/src/stm32f4xx_tim.c ****   {      
 262:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 263:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 264:FWLIB/src/stm32f4xx_tim.c ****   }  
 265:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 266:FWLIB/src/stm32f4xx_tim.c ****   {       
 267:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 268:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 269:FWLIB/src/stm32f4xx_tim.c ****   }  
 270:FWLIB/src/stm32f4xx_tim.c ****   else
 271:FWLIB/src/stm32f4xx_tim.c ****   { 
 272:FWLIB/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 273:FWLIB/src/stm32f4xx_tim.c ****     {     
 274:FWLIB/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 275:FWLIB/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 276:FWLIB/src/stm32f4xx_tim.c ****     }   
 277:FWLIB/src/stm32f4xx_tim.c ****   }
 278:FWLIB/src/stm32f4xx_tim.c **** }
 279:FWLIB/src/stm32f4xx_tim.c **** 
 280:FWLIB/src/stm32f4xx_tim.c **** /**
 281:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 282:FWLIB/src/stm32f4xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 283:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 284:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 285:FWLIB/src/stm32f4xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 286:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 287:FWLIB/src/stm32f4xx_tim.c ****   */
 288:FWLIB/src/stm32f4xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 289:FWLIB/src/stm32f4xx_tim.c **** {
 290:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 291:FWLIB/src/stm32f4xx_tim.c **** 
 292:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 293:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 294:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 295:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 296:FWLIB/src/stm32f4xx_tim.c **** 
 297:FWLIB/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 298:FWLIB/src/stm32f4xx_tim.c **** 
 299:FWLIB/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 300:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 301:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 302:FWLIB/src/stm32f4xx_tim.c ****   {
 303:FWLIB/src/stm32f4xx_tim.c ****     /* Select the Counter Mode */
 304:FWLIB/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 305:FWLIB/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 306:FWLIB/src/stm32f4xx_tim.c ****   }
 307:FWLIB/src/stm32f4xx_tim.c ****  
 308:FWLIB/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 309:FWLIB/src/stm32f4xx_tim.c ****   {
 310:FWLIB/src/stm32f4xx_tim.c ****     /* Set the clock division */
 311:FWLIB/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 312:FWLIB/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 313:FWLIB/src/stm32f4xx_tim.c ****   }
 314:FWLIB/src/stm32f4xx_tim.c **** 
 315:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 316:FWLIB/src/stm32f4xx_tim.c **** 
 317:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Autoreload value */
ARM GAS  /tmp/ccses48D.s 			page 7


 318:FWLIB/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 319:FWLIB/src/stm32f4xx_tim.c ****  
 320:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 321:FWLIB/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 322:FWLIB/src/stm32f4xx_tim.c ****     
 323:FWLIB/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 324:FWLIB/src/stm32f4xx_tim.c ****   {
 325:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Repetition Counter value */
 326:FWLIB/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 327:FWLIB/src/stm32f4xx_tim.c ****   }
 328:FWLIB/src/stm32f4xx_tim.c **** 
 329:FWLIB/src/stm32f4xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 330:FWLIB/src/stm32f4xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediately */
 331:FWLIB/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 332:FWLIB/src/stm32f4xx_tim.c **** }
 333:FWLIB/src/stm32f4xx_tim.c **** 
 334:FWLIB/src/stm32f4xx_tim.c **** /**
 335:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 336:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 337:FWLIB/src/stm32f4xx_tim.c ****   *         structure which will be initialized.
 338:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 339:FWLIB/src/stm32f4xx_tim.c ****   */
 340:FWLIB/src/stm32f4xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 341:FWLIB/src/stm32f4xx_tim.c **** {
 342:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 343:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 344:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 345:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 346:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 347:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 348:FWLIB/src/stm32f4xx_tim.c **** }
 349:FWLIB/src/stm32f4xx_tim.c **** 
 350:FWLIB/src/stm32f4xx_tim.c **** /**
 351:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 352:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 353:FWLIB/src/stm32f4xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 354:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 355:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 356:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 357:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediately.
 358:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 359:FWLIB/src/stm32f4xx_tim.c ****   */
 360:FWLIB/src/stm32f4xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 361:FWLIB/src/stm32f4xx_tim.c **** {
 362:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 363:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 364:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 365:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 366:FWLIB/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 367:FWLIB/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 368:FWLIB/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 369:FWLIB/src/stm32f4xx_tim.c **** }
 370:FWLIB/src/stm32f4xx_tim.c **** 
 371:FWLIB/src/stm32f4xx_tim.c **** /**
 372:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 373:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 374:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
ARM GAS  /tmp/ccses48D.s 			page 8


 375:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 376:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 377:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 378:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 379:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 380:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 381:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 382:FWLIB/src/stm32f4xx_tim.c ****   */
 383:FWLIB/src/stm32f4xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 384:FWLIB/src/stm32f4xx_tim.c **** {
 385:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 386:FWLIB/src/stm32f4xx_tim.c **** 
 387:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 388:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 389:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 390:FWLIB/src/stm32f4xx_tim.c **** 
 391:FWLIB/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 392:FWLIB/src/stm32f4xx_tim.c **** 
 393:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the CMS and DIR Bits */
 394:FWLIB/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 395:FWLIB/src/stm32f4xx_tim.c **** 
 396:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Counter Mode */
 397:FWLIB/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 398:FWLIB/src/stm32f4xx_tim.c **** 
 399:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CR1 register */
 400:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 401:FWLIB/src/stm32f4xx_tim.c **** }
 402:FWLIB/src/stm32f4xx_tim.c **** 
 403:FWLIB/src/stm32f4xx_tim.c **** /**
 404:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 405:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 406:FWLIB/src/stm32f4xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 407:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 408:FWLIB/src/stm32f4xx_tim.c ****   */
 409:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 410:FWLIB/src/stm32f4xx_tim.c **** {
 411:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 412:FWLIB/src/stm32f4xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 413:FWLIB/src/stm32f4xx_tim.c **** 
 414:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Counter Register value */
 415:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 416:FWLIB/src/stm32f4xx_tim.c **** }
 417:FWLIB/src/stm32f4xx_tim.c **** 
 418:FWLIB/src/stm32f4xx_tim.c **** /**
 419:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 420:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 421:FWLIB/src/stm32f4xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 422:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 423:FWLIB/src/stm32f4xx_tim.c ****   */
 424:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 425:FWLIB/src/stm32f4xx_tim.c **** {
 426:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 427:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 428:FWLIB/src/stm32f4xx_tim.c ****   
 429:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Autoreload Register value */
 430:FWLIB/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 431:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  /tmp/ccses48D.s 			page 9


 432:FWLIB/src/stm32f4xx_tim.c **** 
 433:FWLIB/src/stm32f4xx_tim.c **** /**
 434:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 435:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 436:FWLIB/src/stm32f4xx_tim.c ****   * @retval Counter Register value
 437:FWLIB/src/stm32f4xx_tim.c ****   */
 438:FWLIB/src/stm32f4xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 439:FWLIB/src/stm32f4xx_tim.c **** {
 440:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 441:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 442:FWLIB/src/stm32f4xx_tim.c **** 
 443:FWLIB/src/stm32f4xx_tim.c ****   /* Get the Counter Register value */
 444:FWLIB/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 445:FWLIB/src/stm32f4xx_tim.c **** }
 446:FWLIB/src/stm32f4xx_tim.c **** 
 447:FWLIB/src/stm32f4xx_tim.c **** /**
 448:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 449:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 450:FWLIB/src/stm32f4xx_tim.c ****   * @retval Prescaler Register value.
 451:FWLIB/src/stm32f4xx_tim.c ****   */
 452:FWLIB/src/stm32f4xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 453:FWLIB/src/stm32f4xx_tim.c **** {
 454:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 455:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 456:FWLIB/src/stm32f4xx_tim.c **** 
 457:FWLIB/src/stm32f4xx_tim.c ****   /* Get the Prescaler Register value */
 458:FWLIB/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 459:FWLIB/src/stm32f4xx_tim.c **** }
 460:FWLIB/src/stm32f4xx_tim.c **** 
 461:FWLIB/src/stm32f4xx_tim.c **** /**
 462:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 463:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 464:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 465:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 466:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 467:FWLIB/src/stm32f4xx_tim.c ****   */
 468:FWLIB/src/stm32f4xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 469:FWLIB/src/stm32f4xx_tim.c **** {
 470:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 471:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 472:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 473:FWLIB/src/stm32f4xx_tim.c **** 
 474:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 475:FWLIB/src/stm32f4xx_tim.c ****   {
 476:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Update Disable Bit */
 477:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 478:FWLIB/src/stm32f4xx_tim.c ****   }
 479:FWLIB/src/stm32f4xx_tim.c ****   else
 480:FWLIB/src/stm32f4xx_tim.c ****   {
 481:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Update Disable Bit */
 482:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 483:FWLIB/src/stm32f4xx_tim.c ****   }
 484:FWLIB/src/stm32f4xx_tim.c **** }
 485:FWLIB/src/stm32f4xx_tim.c **** 
 486:FWLIB/src/stm32f4xx_tim.c **** /**
 487:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 488:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
ARM GAS  /tmp/ccses48D.s 			page 10


 489:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 490:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 491:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is the counter
 492:FWLIB/src/stm32f4xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 493:FWLIB/src/stm32f4xx_tim.c ****   *                 generation through the slave mode controller.
 494:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is counter overflow/underflow.
 495:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 496:FWLIB/src/stm32f4xx_tim.c ****   */
 497:FWLIB/src/stm32f4xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 498:FWLIB/src/stm32f4xx_tim.c **** {
 499:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 500:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 501:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 502:FWLIB/src/stm32f4xx_tim.c **** 
 503:FWLIB/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 504:FWLIB/src/stm32f4xx_tim.c ****   {
 505:FWLIB/src/stm32f4xx_tim.c ****     /* Set the URS Bit */
 506:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 507:FWLIB/src/stm32f4xx_tim.c ****   }
 508:FWLIB/src/stm32f4xx_tim.c ****   else
 509:FWLIB/src/stm32f4xx_tim.c ****   {
 510:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the URS Bit */
 511:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 512:FWLIB/src/stm32f4xx_tim.c ****   }
 513:FWLIB/src/stm32f4xx_tim.c **** }
 514:FWLIB/src/stm32f4xx_tim.c **** 
 515:FWLIB/src/stm32f4xx_tim.c **** /**
 516:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 517:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 518:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 519:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 520:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 521:FWLIB/src/stm32f4xx_tim.c ****   */
 522:FWLIB/src/stm32f4xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 523:FWLIB/src/stm32f4xx_tim.c **** {
 524:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 525:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 526:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 527:FWLIB/src/stm32f4xx_tim.c **** 
 528:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 529:FWLIB/src/stm32f4xx_tim.c ****   {
 530:FWLIB/src/stm32f4xx_tim.c ****     /* Set the ARR Preload Bit */
 531:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 532:FWLIB/src/stm32f4xx_tim.c ****   }
 533:FWLIB/src/stm32f4xx_tim.c ****   else
 534:FWLIB/src/stm32f4xx_tim.c ****   {
 535:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the ARR Preload Bit */
 536:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 537:FWLIB/src/stm32f4xx_tim.c ****   }
 538:FWLIB/src/stm32f4xx_tim.c **** }
 539:FWLIB/src/stm32f4xx_tim.c **** 
 540:FWLIB/src/stm32f4xx_tim.c **** /**
 541:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 542:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 543:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 544:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 545:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Single
ARM GAS  /tmp/ccses48D.s 			page 11


 546:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 547:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 548:FWLIB/src/stm32f4xx_tim.c ****   */
 549:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 550:FWLIB/src/stm32f4xx_tim.c **** {
 551:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 552:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 553:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 554:FWLIB/src/stm32f4xx_tim.c **** 
 555:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OPM Bit */
 556:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 557:FWLIB/src/stm32f4xx_tim.c **** 
 558:FWLIB/src/stm32f4xx_tim.c ****   /* Configure the OPM Mode */
 559:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 560:FWLIB/src/stm32f4xx_tim.c **** }
 561:FWLIB/src/stm32f4xx_tim.c **** 
 562:FWLIB/src/stm32f4xx_tim.c **** /**
 563:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 564:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 565:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 566:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following value:
 567:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 568:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 569:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 570:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 571:FWLIB/src/stm32f4xx_tim.c ****   */
 572:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 573:FWLIB/src/stm32f4xx_tim.c **** {
 574:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 575:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 576:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 577:FWLIB/src/stm32f4xx_tim.c **** 
 578:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the CKD Bits */
 579:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 580:FWLIB/src/stm32f4xx_tim.c **** 
 581:FWLIB/src/stm32f4xx_tim.c ****   /* Set the CKD value */
 582:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 583:FWLIB/src/stm32f4xx_tim.c **** }
 584:FWLIB/src/stm32f4xx_tim.c **** 
 585:FWLIB/src/stm32f4xx_tim.c **** /**
 586:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 587:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 588:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 589:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 590:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 591:FWLIB/src/stm32f4xx_tim.c ****   */
 592:FWLIB/src/stm32f4xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 593:FWLIB/src/stm32f4xx_tim.c **** {
 594:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 595:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 596:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 597:FWLIB/src/stm32f4xx_tim.c ****   
 598:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 599:FWLIB/src/stm32f4xx_tim.c ****   {
 600:FWLIB/src/stm32f4xx_tim.c ****     /* Enable the TIM Counter */
 601:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 602:FWLIB/src/stm32f4xx_tim.c ****   }
ARM GAS  /tmp/ccses48D.s 			page 12


 603:FWLIB/src/stm32f4xx_tim.c ****   else
 604:FWLIB/src/stm32f4xx_tim.c ****   {
 605:FWLIB/src/stm32f4xx_tim.c ****     /* Disable the TIM Counter */
 606:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 607:FWLIB/src/stm32f4xx_tim.c ****   }
 608:FWLIB/src/stm32f4xx_tim.c **** }
 609:FWLIB/src/stm32f4xx_tim.c **** /**
 610:FWLIB/src/stm32f4xx_tim.c ****   * @}
 611:FWLIB/src/stm32f4xx_tim.c ****   */
 612:FWLIB/src/stm32f4xx_tim.c **** 
 613:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 614:FWLIB/src/stm32f4xx_tim.c ****  *  @brief    Output Compare management functions 
 615:FWLIB/src/stm32f4xx_tim.c ****  *
 616:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
 617:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
 618:FWLIB/src/stm32f4xx_tim.c ****               ##### Output Compare management functions #####
 619:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
 620:FWLIB/src/stm32f4xx_tim.c ****    
 621:FWLIB/src/stm32f4xx_tim.c ****       
 622:FWLIB/src/stm32f4xx_tim.c ****         ##### TIM Driver: how to use it in Output Compare Mode #####
 623:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
 624:FWLIB/src/stm32f4xx_tim.c ****     [..] 
 625:FWLIB/src/stm32f4xx_tim.c ****     To use the Timer in Output Compare mode, the following steps are mandatory:
 626:FWLIB/src/stm32f4xx_tim.c ****        
 627:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) 
 628:FWLIB/src/stm32f4xx_tim.c ****           function
 629:FWLIB/src/stm32f4xx_tim.c ****        
 630:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the TIM pins by configuring the corresponding GPIO pins
 631:FWLIB/src/stm32f4xx_tim.c ****        
 632:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the Time base unit as described in the first part of this driver, 
 633:FWLIB/src/stm32f4xx_tim.c ****         (++) if needed, else the Timer will run with the default configuration:
 634:FWLIB/src/stm32f4xx_tim.c ****             Autoreload value = 0xFFFF
 635:FWLIB/src/stm32f4xx_tim.c ****         (++) Prescaler value = 0x0000
 636:FWLIB/src/stm32f4xx_tim.c ****         (++) Counter mode = Up counting
 637:FWLIB/src/stm32f4xx_tim.c ****         (++) Clock Division = TIM_CKD_DIV1
 638:FWLIB/src/stm32f4xx_tim.c ****           
 639:FWLIB/src/stm32f4xx_tim.c ****       (#) Fill the TIM_OCInitStruct with the desired parameters including:
 640:FWLIB/src/stm32f4xx_tim.c ****         (++) The TIM Output Compare mode: TIM_OCMode
 641:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Output State: TIM_OutputState
 642:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Pulse value: TIM_Pulse
 643:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Output Compare Polarity : TIM_OCPolarity
 644:FWLIB/src/stm32f4xx_tim.c ****        
 645:FWLIB/src/stm32f4xx_tim.c ****       (#) Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired 
 646:FWLIB/src/stm32f4xx_tim.c ****           channel with the corresponding configuration
 647:FWLIB/src/stm32f4xx_tim.c ****        
 648:FWLIB/src/stm32f4xx_tim.c ****       (#) Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 649:FWLIB/src/stm32f4xx_tim.c ****        
 650:FWLIB/src/stm32f4xx_tim.c ****       -@- All other functions can be used separately to modify, if needed,
 651:FWLIB/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
 652:FWLIB/src/stm32f4xx_tim.c ****           
 653:FWLIB/src/stm32f4xx_tim.c ****       -@- In case of PWM mode, this function is mandatory:
 654:FWLIB/src/stm32f4xx_tim.c ****           TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 655:FWLIB/src/stm32f4xx_tim.c ****               
 656:FWLIB/src/stm32f4xx_tim.c ****       -@- If the corresponding interrupt or DMA request are needed, the user should:
 657:FWLIB/src/stm32f4xx_tim.c ****         (+@) Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 658:FWLIB/src/stm32f4xx_tim.c ****         (+@) Enable the corresponding interrupt (or DMA request) using the function 
 659:FWLIB/src/stm32f4xx_tim.c ****              TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
ARM GAS  /tmp/ccses48D.s 			page 13


 660:FWLIB/src/stm32f4xx_tim.c **** 
 661:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
 662:FWLIB/src/stm32f4xx_tim.c ****   * @{
 663:FWLIB/src/stm32f4xx_tim.c ****   */
 664:FWLIB/src/stm32f4xx_tim.c **** 
 665:FWLIB/src/stm32f4xx_tim.c **** /**
 666:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 667:FWLIB/src/stm32f4xx_tim.c ****   *         the TIM_OCInitStruct.
 668:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 669:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 670:FWLIB/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 671:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 672:FWLIB/src/stm32f4xx_tim.c ****   */
 673:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 674:FWLIB/src/stm32f4xx_tim.c **** {
 675:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 676:FWLIB/src/stm32f4xx_tim.c ****    
 677:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 678:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 679:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 680:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 681:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 682:FWLIB/src/stm32f4xx_tim.c **** 
 683:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 684:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 685:FWLIB/src/stm32f4xx_tim.c ****   
 686:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 687:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 688:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 689:FWLIB/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 690:FWLIB/src/stm32f4xx_tim.c ****   
 691:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 692:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 693:FWLIB/src/stm32f4xx_tim.c ****     
 694:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 695:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 696:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 697:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 698:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 699:FWLIB/src/stm32f4xx_tim.c ****   
 700:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 701:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 702:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 703:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 704:FWLIB/src/stm32f4xx_tim.c ****   
 705:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output State */
 706:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 707:FWLIB/src/stm32f4xx_tim.c ****     
 708:FWLIB/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 709:FWLIB/src/stm32f4xx_tim.c ****   {
 710:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 711:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 712:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 713:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 714:FWLIB/src/stm32f4xx_tim.c ****     
 715:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 716:FWLIB/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
ARM GAS  /tmp/ccses48D.s 			page 14


 717:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 718:FWLIB/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 719:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 720:FWLIB/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 721:FWLIB/src/stm32f4xx_tim.c ****     
 722:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 723:FWLIB/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 724:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 725:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 726:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 727:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 728:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 729:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 730:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 731:FWLIB/src/stm32f4xx_tim.c ****   }
 732:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 733:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 734:FWLIB/src/stm32f4xx_tim.c ****   
 735:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 736:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 737:FWLIB/src/stm32f4xx_tim.c ****   
 738:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 739:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 740:FWLIB/src/stm32f4xx_tim.c ****   
 741:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 742:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 743:FWLIB/src/stm32f4xx_tim.c **** }
 744:FWLIB/src/stm32f4xx_tim.c **** 
 745:FWLIB/src/stm32f4xx_tim.c **** /**
 746:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 747:FWLIB/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 748:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 749:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
 750:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 751:FWLIB/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 752:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 753:FWLIB/src/stm32f4xx_tim.c ****   */
 754:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 755:FWLIB/src/stm32f4xx_tim.c **** {
 756:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 757:FWLIB/src/stm32f4xx_tim.c ****    
 758:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 759:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 760:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 761:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 762:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 763:FWLIB/src/stm32f4xx_tim.c **** 
 764:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 765:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 766:FWLIB/src/stm32f4xx_tim.c ****   
 767:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */  
 768:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 769:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 770:FWLIB/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 771:FWLIB/src/stm32f4xx_tim.c ****   
 772:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 773:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
ARM GAS  /tmp/ccses48D.s 			page 15


 774:FWLIB/src/stm32f4xx_tim.c ****     
 775:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 776:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 777:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 778:FWLIB/src/stm32f4xx_tim.c ****   
 779:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 780:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 781:FWLIB/src/stm32f4xx_tim.c ****   
 782:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 783:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 784:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 785:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 786:FWLIB/src/stm32f4xx_tim.c ****   
 787:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output State */
 788:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 789:FWLIB/src/stm32f4xx_tim.c ****     
 790:FWLIB/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 791:FWLIB/src/stm32f4xx_tim.c ****   {
 792:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 793:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 794:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 795:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 796:FWLIB/src/stm32f4xx_tim.c ****     
 797:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 798:FWLIB/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 799:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 800:FWLIB/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 801:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 802:FWLIB/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 803:FWLIB/src/stm32f4xx_tim.c ****     
 804:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 805:FWLIB/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 806:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 807:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 808:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 809:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 810:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 811:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 812:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 813:FWLIB/src/stm32f4xx_tim.c ****   }
 814:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 815:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 816:FWLIB/src/stm32f4xx_tim.c ****   
 817:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 818:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 819:FWLIB/src/stm32f4xx_tim.c ****   
 820:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 821:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 822:FWLIB/src/stm32f4xx_tim.c ****   
 823:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 824:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 825:FWLIB/src/stm32f4xx_tim.c **** }
 826:FWLIB/src/stm32f4xx_tim.c **** 
 827:FWLIB/src/stm32f4xx_tim.c **** /**
 828:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 829:FWLIB/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 830:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
ARM GAS  /tmp/ccses48D.s 			page 16


 831:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 832:FWLIB/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 833:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 834:FWLIB/src/stm32f4xx_tim.c ****   */
 835:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 836:FWLIB/src/stm32f4xx_tim.c **** {
 837:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 838:FWLIB/src/stm32f4xx_tim.c ****    
 839:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 840:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 841:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 842:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 843:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 844:FWLIB/src/stm32f4xx_tim.c **** 
 845:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 846:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 847:FWLIB/src/stm32f4xx_tim.c ****   
 848:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 849:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 850:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 851:FWLIB/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 852:FWLIB/src/stm32f4xx_tim.c ****   
 853:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 854:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 855:FWLIB/src/stm32f4xx_tim.c ****     
 856:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 857:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 858:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 859:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 860:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 861:FWLIB/src/stm32f4xx_tim.c ****   
 862:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 863:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 864:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 865:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 866:FWLIB/src/stm32f4xx_tim.c ****   
 867:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output State */
 868:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 869:FWLIB/src/stm32f4xx_tim.c ****     
 870:FWLIB/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 871:FWLIB/src/stm32f4xx_tim.c ****   {
 872:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 873:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 874:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 875:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 876:FWLIB/src/stm32f4xx_tim.c ****     
 877:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 878:FWLIB/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 879:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 880:FWLIB/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 881:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 882:FWLIB/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 883:FWLIB/src/stm32f4xx_tim.c ****     
 884:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 885:FWLIB/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 886:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 887:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
ARM GAS  /tmp/ccses48D.s 			page 17


 888:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 889:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 890:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 891:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 892:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 893:FWLIB/src/stm32f4xx_tim.c ****   }
 894:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 895:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 896:FWLIB/src/stm32f4xx_tim.c ****   
 897:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
 898:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 899:FWLIB/src/stm32f4xx_tim.c ****   
 900:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 901:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 902:FWLIB/src/stm32f4xx_tim.c ****   
 903:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 904:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 905:FWLIB/src/stm32f4xx_tim.c **** }
 906:FWLIB/src/stm32f4xx_tim.c **** 
 907:FWLIB/src/stm32f4xx_tim.c **** /**
 908:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 909:FWLIB/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 910:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 911:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 912:FWLIB/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 913:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 914:FWLIB/src/stm32f4xx_tim.c ****   */
 915:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 916:FWLIB/src/stm32f4xx_tim.c **** {
 917:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 918:FWLIB/src/stm32f4xx_tim.c ****    
 919:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 920:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 921:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 922:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 923:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 924:FWLIB/src/stm32f4xx_tim.c **** 
 925:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 926:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 927:FWLIB/src/stm32f4xx_tim.c ****   
 928:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 929:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 930:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 931:FWLIB/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 932:FWLIB/src/stm32f4xx_tim.c ****   
 933:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 934:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 935:FWLIB/src/stm32f4xx_tim.c ****     
 936:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 937:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 938:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 939:FWLIB/src/stm32f4xx_tim.c ****   
 940:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 941:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 942:FWLIB/src/stm32f4xx_tim.c ****   
 943:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 944:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
ARM GAS  /tmp/ccses48D.s 			page 18


 945:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 946:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 947:FWLIB/src/stm32f4xx_tim.c ****   
 948:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output State */
 949:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 950:FWLIB/src/stm32f4xx_tim.c ****   
 951:FWLIB/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 952:FWLIB/src/stm32f4xx_tim.c ****   {
 953:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 954:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare IDLE State */
 955:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 956:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 957:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 958:FWLIB/src/stm32f4xx_tim.c ****   }
 959:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 960:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 961:FWLIB/src/stm32f4xx_tim.c ****   
 962:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */  
 963:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 964:FWLIB/src/stm32f4xx_tim.c ****     
 965:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 966:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 967:FWLIB/src/stm32f4xx_tim.c ****   
 968:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 969:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 970:FWLIB/src/stm32f4xx_tim.c **** }
 971:FWLIB/src/stm32f4xx_tim.c **** 
 972:FWLIB/src/stm32f4xx_tim.c **** /**
 973:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 974:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 975:FWLIB/src/stm32f4xx_tim.c ****   *         be initialized.
 976:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 977:FWLIB/src/stm32f4xx_tim.c ****   */
 978:FWLIB/src/stm32f4xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 979:FWLIB/src/stm32f4xx_tim.c **** {
 980:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 981:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 982:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 983:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 984:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 985:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 986:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 987:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 988:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 989:FWLIB/src/stm32f4xx_tim.c **** }
 990:FWLIB/src/stm32f4xx_tim.c **** 
 991:FWLIB/src/stm32f4xx_tim.c **** /**
 992:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 993:FWLIB/src/stm32f4xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 994:FWLIB/src/stm32f4xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 995:FWLIB/src/stm32f4xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 996:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 997:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 998:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 999:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1000:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1001:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
ARM GAS  /tmp/ccses48D.s 			page 19


1002:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1003:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
1004:FWLIB/src/stm32f4xx_tim.c ****   *           This parameter can be one of the following values:
1005:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Timing
1006:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Active
1007:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1008:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1009:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1010:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1011:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1012:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1013:FWLIB/src/stm32f4xx_tim.c ****   */
1014:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1015:FWLIB/src/stm32f4xx_tim.c **** {
1016:FWLIB/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
1017:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmp1 = 0;
1018:FWLIB/src/stm32f4xx_tim.c **** 
1019:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1020:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1021:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1022:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1023:FWLIB/src/stm32f4xx_tim.c **** 
1024:FWLIB/src/stm32f4xx_tim.c ****   tmp = (uint32_t) TIMx;
1025:FWLIB/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
1026:FWLIB/src/stm32f4xx_tim.c **** 
1027:FWLIB/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
1028:FWLIB/src/stm32f4xx_tim.c **** 
1029:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1030:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
1031:FWLIB/src/stm32f4xx_tim.c **** 
1032:FWLIB/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
1033:FWLIB/src/stm32f4xx_tim.c ****   {
1034:FWLIB/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
1035:FWLIB/src/stm32f4xx_tim.c **** 
1036:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1037:FWLIB/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
1038:FWLIB/src/stm32f4xx_tim.c ****    
1039:FWLIB/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1040:FWLIB/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
1041:FWLIB/src/stm32f4xx_tim.c ****   }
1042:FWLIB/src/stm32f4xx_tim.c ****   else
1043:FWLIB/src/stm32f4xx_tim.c ****   {
1044:FWLIB/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
1045:FWLIB/src/stm32f4xx_tim.c **** 
1046:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1047:FWLIB/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
1048:FWLIB/src/stm32f4xx_tim.c ****     
1049:FWLIB/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1050:FWLIB/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
1051:FWLIB/src/stm32f4xx_tim.c ****   }
1052:FWLIB/src/stm32f4xx_tim.c **** }
1053:FWLIB/src/stm32f4xx_tim.c **** 
1054:FWLIB/src/stm32f4xx_tim.c **** /**
1055:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1056:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1057:FWLIB/src/stm32f4xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1058:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
ARM GAS  /tmp/ccses48D.s 			page 20


1059:FWLIB/src/stm32f4xx_tim.c ****   */
1060:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1061:FWLIB/src/stm32f4xx_tim.c **** {
1062:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1063:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1064:FWLIB/src/stm32f4xx_tim.c **** 
1065:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare1 Register value */
1066:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
1067:FWLIB/src/stm32f4xx_tim.c **** }
1068:FWLIB/src/stm32f4xx_tim.c **** 
1069:FWLIB/src/stm32f4xx_tim.c **** /**
1070:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1071:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1072:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1073:FWLIB/src/stm32f4xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1074:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1075:FWLIB/src/stm32f4xx_tim.c ****   */
1076:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1077:FWLIB/src/stm32f4xx_tim.c **** {
1078:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1079:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1080:FWLIB/src/stm32f4xx_tim.c **** 
1081:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare2 Register value */
1082:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
1083:FWLIB/src/stm32f4xx_tim.c **** }
1084:FWLIB/src/stm32f4xx_tim.c **** 
1085:FWLIB/src/stm32f4xx_tim.c **** /**
1086:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1087:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1088:FWLIB/src/stm32f4xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1089:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1090:FWLIB/src/stm32f4xx_tim.c ****   */
1091:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1092:FWLIB/src/stm32f4xx_tim.c **** {
1093:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1094:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1095:FWLIB/src/stm32f4xx_tim.c **** 
1096:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare3 Register value */
1097:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
1098:FWLIB/src/stm32f4xx_tim.c **** }
1099:FWLIB/src/stm32f4xx_tim.c **** 
1100:FWLIB/src/stm32f4xx_tim.c **** /**
1101:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1102:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1103:FWLIB/src/stm32f4xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1104:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1105:FWLIB/src/stm32f4xx_tim.c ****   */
1106:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1107:FWLIB/src/stm32f4xx_tim.c **** {
1108:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1109:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1110:FWLIB/src/stm32f4xx_tim.c **** 
1111:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare4 Register value */
1112:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
1113:FWLIB/src/stm32f4xx_tim.c **** }
1114:FWLIB/src/stm32f4xx_tim.c **** 
1115:FWLIB/src/stm32f4xx_tim.c **** /**
ARM GAS  /tmp/ccses48D.s 			page 21


1116:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1117:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1118:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1119:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1120:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1121:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1122:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1123:FWLIB/src/stm32f4xx_tim.c ****   */
1124:FWLIB/src/stm32f4xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1125:FWLIB/src/stm32f4xx_tim.c **** {
1126:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1127:FWLIB/src/stm32f4xx_tim.c **** 
1128:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1129:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1130:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1131:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1132:FWLIB/src/stm32f4xx_tim.c **** 
1133:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1134:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
1135:FWLIB/src/stm32f4xx_tim.c **** 
1136:FWLIB/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1137:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
1138:FWLIB/src/stm32f4xx_tim.c **** 
1139:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1140:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1141:FWLIB/src/stm32f4xx_tim.c **** }
1142:FWLIB/src/stm32f4xx_tim.c **** 
1143:FWLIB/src/stm32f4xx_tim.c **** /**
1144:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1145:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1146:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1147:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1148:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1149:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1150:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1151:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1152:FWLIB/src/stm32f4xx_tim.c ****   */
1153:FWLIB/src/stm32f4xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1154:FWLIB/src/stm32f4xx_tim.c **** {
1155:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1156:FWLIB/src/stm32f4xx_tim.c **** 
1157:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1158:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1159:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1160:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1161:FWLIB/src/stm32f4xx_tim.c **** 
1162:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1163:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
1164:FWLIB/src/stm32f4xx_tim.c **** 
1165:FWLIB/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1166:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
1167:FWLIB/src/stm32f4xx_tim.c **** 
1168:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1169:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1170:FWLIB/src/stm32f4xx_tim.c **** }
1171:FWLIB/src/stm32f4xx_tim.c **** 
1172:FWLIB/src/stm32f4xx_tim.c **** /**
ARM GAS  /tmp/ccses48D.s 			page 22


1173:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1174:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1175:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1176:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1177:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1178:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1179:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1180:FWLIB/src/stm32f4xx_tim.c ****   */
1181:FWLIB/src/stm32f4xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1182:FWLIB/src/stm32f4xx_tim.c **** {
1183:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1184:FWLIB/src/stm32f4xx_tim.c **** 
1185:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1186:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1187:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1188:FWLIB/src/stm32f4xx_tim.c **** 
1189:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1190:FWLIB/src/stm32f4xx_tim.c **** 
1191:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1192:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
1193:FWLIB/src/stm32f4xx_tim.c **** 
1194:FWLIB/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1195:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
1196:FWLIB/src/stm32f4xx_tim.c **** 
1197:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1198:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1199:FWLIB/src/stm32f4xx_tim.c **** }
1200:FWLIB/src/stm32f4xx_tim.c **** 
1201:FWLIB/src/stm32f4xx_tim.c **** /**
1202:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1203:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1204:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1205:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1206:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1207:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1208:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1209:FWLIB/src/stm32f4xx_tim.c ****   */
1210:FWLIB/src/stm32f4xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1211:FWLIB/src/stm32f4xx_tim.c **** {
1212:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1213:FWLIB/src/stm32f4xx_tim.c **** 
1214:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1215:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1216:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1217:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1218:FWLIB/src/stm32f4xx_tim.c **** 
1219:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1220:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
1221:FWLIB/src/stm32f4xx_tim.c **** 
1222:FWLIB/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1223:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
1224:FWLIB/src/stm32f4xx_tim.c **** 
1225:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1226:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1227:FWLIB/src/stm32f4xx_tim.c **** }
1228:FWLIB/src/stm32f4xx_tim.c **** 
1229:FWLIB/src/stm32f4xx_tim.c **** /**
ARM GAS  /tmp/ccses48D.s 			page 23


1230:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1231:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1232:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1233:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1234:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1235:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1236:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1237:FWLIB/src/stm32f4xx_tim.c ****   */
1238:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1239:FWLIB/src/stm32f4xx_tim.c **** {
1240:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1241:FWLIB/src/stm32f4xx_tim.c **** 
1242:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1243:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1244:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1245:FWLIB/src/stm32f4xx_tim.c **** 
1246:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1247:FWLIB/src/stm32f4xx_tim.c **** 
1248:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC1PE Bit */
1249:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
1250:FWLIB/src/stm32f4xx_tim.c **** 
1251:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1252:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
1253:FWLIB/src/stm32f4xx_tim.c **** 
1254:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1255:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1256:FWLIB/src/stm32f4xx_tim.c **** }
1257:FWLIB/src/stm32f4xx_tim.c **** 
1258:FWLIB/src/stm32f4xx_tim.c **** /**
1259:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1260:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1261:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1262:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1263:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1264:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1265:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1266:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1267:FWLIB/src/stm32f4xx_tim.c ****   */
1268:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1269:FWLIB/src/stm32f4xx_tim.c **** {
1270:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1271:FWLIB/src/stm32f4xx_tim.c **** 
1272:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1273:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1274:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1275:FWLIB/src/stm32f4xx_tim.c **** 
1276:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1277:FWLIB/src/stm32f4xx_tim.c **** 
1278:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC2PE Bit */
1279:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
1280:FWLIB/src/stm32f4xx_tim.c **** 
1281:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1282:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
1283:FWLIB/src/stm32f4xx_tim.c **** 
1284:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1285:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1286:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  /tmp/ccses48D.s 			page 24


1287:FWLIB/src/stm32f4xx_tim.c **** 
1288:FWLIB/src/stm32f4xx_tim.c **** /**
1289:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1290:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1291:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1292:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1293:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1294:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1295:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1296:FWLIB/src/stm32f4xx_tim.c ****   */
1297:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1298:FWLIB/src/stm32f4xx_tim.c **** {
1299:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1300:FWLIB/src/stm32f4xx_tim.c **** 
1301:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1302:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1303:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1304:FWLIB/src/stm32f4xx_tim.c **** 
1305:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1306:FWLIB/src/stm32f4xx_tim.c **** 
1307:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC3PE Bit */
1308:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
1309:FWLIB/src/stm32f4xx_tim.c **** 
1310:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1311:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
1312:FWLIB/src/stm32f4xx_tim.c **** 
1313:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1314:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1315:FWLIB/src/stm32f4xx_tim.c **** }
1316:FWLIB/src/stm32f4xx_tim.c **** 
1317:FWLIB/src/stm32f4xx_tim.c **** /**
1318:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1319:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1320:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1321:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1322:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1323:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1324:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1325:FWLIB/src/stm32f4xx_tim.c ****   */
1326:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1327:FWLIB/src/stm32f4xx_tim.c **** {
1328:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1329:FWLIB/src/stm32f4xx_tim.c **** 
1330:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1331:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1332:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1333:FWLIB/src/stm32f4xx_tim.c **** 
1334:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1335:FWLIB/src/stm32f4xx_tim.c **** 
1336:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC4PE Bit */
1337:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
1338:FWLIB/src/stm32f4xx_tim.c **** 
1339:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1340:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
1341:FWLIB/src/stm32f4xx_tim.c **** 
1342:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1343:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
ARM GAS  /tmp/ccses48D.s 			page 25


1344:FWLIB/src/stm32f4xx_tim.c **** }
1345:FWLIB/src/stm32f4xx_tim.c **** 
1346:FWLIB/src/stm32f4xx_tim.c **** /**
1347:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1348:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1349:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1350:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1351:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1352:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1353:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1354:FWLIB/src/stm32f4xx_tim.c ****   */
1355:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1356:FWLIB/src/stm32f4xx_tim.c **** {
1357:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1358:FWLIB/src/stm32f4xx_tim.c **** 
1359:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1360:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1361:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1362:FWLIB/src/stm32f4xx_tim.c **** 
1363:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1364:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1365:FWLIB/src/stm32f4xx_tim.c **** 
1366:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC1FE Bit */
1367:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
1368:FWLIB/src/stm32f4xx_tim.c **** 
1369:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1370:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
1371:FWLIB/src/stm32f4xx_tim.c **** 
1372:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1373:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1374:FWLIB/src/stm32f4xx_tim.c **** }
1375:FWLIB/src/stm32f4xx_tim.c **** 
1376:FWLIB/src/stm32f4xx_tim.c **** /**
1377:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1378:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1379:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1380:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1381:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1382:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1383:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1384:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1385:FWLIB/src/stm32f4xx_tim.c ****   */
1386:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1387:FWLIB/src/stm32f4xx_tim.c **** {
1388:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1389:FWLIB/src/stm32f4xx_tim.c **** 
1390:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1391:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1392:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1393:FWLIB/src/stm32f4xx_tim.c **** 
1394:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1395:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1396:FWLIB/src/stm32f4xx_tim.c **** 
1397:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC2FE Bit */
1398:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
1399:FWLIB/src/stm32f4xx_tim.c **** 
1400:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
ARM GAS  /tmp/ccses48D.s 			page 26


1401:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
1402:FWLIB/src/stm32f4xx_tim.c **** 
1403:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1404:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1405:FWLIB/src/stm32f4xx_tim.c **** }
1406:FWLIB/src/stm32f4xx_tim.c **** 
1407:FWLIB/src/stm32f4xx_tim.c **** /**
1408:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1409:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1410:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1411:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1412:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1413:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1414:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1415:FWLIB/src/stm32f4xx_tim.c ****   */
1416:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1417:FWLIB/src/stm32f4xx_tim.c **** {
1418:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1419:FWLIB/src/stm32f4xx_tim.c ****   
1420:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1421:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1422:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1423:FWLIB/src/stm32f4xx_tim.c **** 
1424:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1425:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1426:FWLIB/src/stm32f4xx_tim.c **** 
1427:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC3FE Bit */
1428:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
1429:FWLIB/src/stm32f4xx_tim.c **** 
1430:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1431:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
1432:FWLIB/src/stm32f4xx_tim.c **** 
1433:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1434:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1435:FWLIB/src/stm32f4xx_tim.c **** }
1436:FWLIB/src/stm32f4xx_tim.c **** 
1437:FWLIB/src/stm32f4xx_tim.c **** /**
1438:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1439:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1440:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1441:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1442:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1443:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1444:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1445:FWLIB/src/stm32f4xx_tim.c ****   */
1446:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1447:FWLIB/src/stm32f4xx_tim.c **** {
1448:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1449:FWLIB/src/stm32f4xx_tim.c **** 
1450:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1451:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1452:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1453:FWLIB/src/stm32f4xx_tim.c **** 
1454:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1455:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1456:FWLIB/src/stm32f4xx_tim.c **** 
1457:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC4FE Bit */
ARM GAS  /tmp/ccses48D.s 			page 27


1458:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
1459:FWLIB/src/stm32f4xx_tim.c **** 
1460:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1461:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
1462:FWLIB/src/stm32f4xx_tim.c **** 
1463:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1464:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1465:FWLIB/src/stm32f4xx_tim.c **** }
1466:FWLIB/src/stm32f4xx_tim.c **** 
1467:FWLIB/src/stm32f4xx_tim.c **** /**
1468:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1469:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1470:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1471:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1472:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1473:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1474:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1475:FWLIB/src/stm32f4xx_tim.c ****   */
1476:FWLIB/src/stm32f4xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1477:FWLIB/src/stm32f4xx_tim.c **** {
1478:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1479:FWLIB/src/stm32f4xx_tim.c **** 
1480:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1481:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1482:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1483:FWLIB/src/stm32f4xx_tim.c **** 
1484:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1485:FWLIB/src/stm32f4xx_tim.c **** 
1486:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC1CE Bit */
1487:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
1488:FWLIB/src/stm32f4xx_tim.c **** 
1489:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1490:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
1491:FWLIB/src/stm32f4xx_tim.c **** 
1492:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1493:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1494:FWLIB/src/stm32f4xx_tim.c **** }
1495:FWLIB/src/stm32f4xx_tim.c **** 
1496:FWLIB/src/stm32f4xx_tim.c **** /**
1497:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1498:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1499:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1500:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1501:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1502:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1503:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1504:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1505:FWLIB/src/stm32f4xx_tim.c ****   */
1506:FWLIB/src/stm32f4xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1507:FWLIB/src/stm32f4xx_tim.c **** {
1508:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1509:FWLIB/src/stm32f4xx_tim.c **** 
1510:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1511:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1512:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1513:FWLIB/src/stm32f4xx_tim.c **** 
1514:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
ARM GAS  /tmp/ccses48D.s 			page 28


1515:FWLIB/src/stm32f4xx_tim.c **** 
1516:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC2CE Bit */
1517:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
1518:FWLIB/src/stm32f4xx_tim.c **** 
1519:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1520:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
1521:FWLIB/src/stm32f4xx_tim.c **** 
1522:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1523:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1524:FWLIB/src/stm32f4xx_tim.c **** }
1525:FWLIB/src/stm32f4xx_tim.c **** 
1526:FWLIB/src/stm32f4xx_tim.c **** /**
1527:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1528:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1529:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1530:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1531:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1532:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1533:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1534:FWLIB/src/stm32f4xx_tim.c ****   */
1535:FWLIB/src/stm32f4xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1536:FWLIB/src/stm32f4xx_tim.c **** {
1537:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1538:FWLIB/src/stm32f4xx_tim.c **** 
1539:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1540:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1541:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1542:FWLIB/src/stm32f4xx_tim.c **** 
1543:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1544:FWLIB/src/stm32f4xx_tim.c **** 
1545:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC3CE Bit */
1546:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
1547:FWLIB/src/stm32f4xx_tim.c **** 
1548:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1549:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
1550:FWLIB/src/stm32f4xx_tim.c **** 
1551:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1552:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1553:FWLIB/src/stm32f4xx_tim.c **** }
1554:FWLIB/src/stm32f4xx_tim.c **** 
1555:FWLIB/src/stm32f4xx_tim.c **** /**
1556:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1557:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1558:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1559:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1560:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1561:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1562:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1563:FWLIB/src/stm32f4xx_tim.c ****   */
1564:FWLIB/src/stm32f4xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1565:FWLIB/src/stm32f4xx_tim.c **** {
1566:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1567:FWLIB/src/stm32f4xx_tim.c **** 
1568:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1569:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1570:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1571:FWLIB/src/stm32f4xx_tim.c **** 
ARM GAS  /tmp/ccses48D.s 			page 29


1572:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1573:FWLIB/src/stm32f4xx_tim.c **** 
1574:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC4CE Bit */
1575:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
1576:FWLIB/src/stm32f4xx_tim.c **** 
1577:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1578:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
1579:FWLIB/src/stm32f4xx_tim.c **** 
1580:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1581:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1582:FWLIB/src/stm32f4xx_tim.c **** }
1583:FWLIB/src/stm32f4xx_tim.c **** 
1584:FWLIB/src/stm32f4xx_tim.c **** /**
1585:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1586:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1587:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1588:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1589:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1590:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1591:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1592:FWLIB/src/stm32f4xx_tim.c ****   */
1593:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1594:FWLIB/src/stm32f4xx_tim.c **** {
1595:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1596:FWLIB/src/stm32f4xx_tim.c **** 
1597:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1598:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1599:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1600:FWLIB/src/stm32f4xx_tim.c **** 
1601:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1602:FWLIB/src/stm32f4xx_tim.c **** 
1603:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1P Bit */
1604:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
1605:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
1606:FWLIB/src/stm32f4xx_tim.c **** 
1607:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1608:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1609:FWLIB/src/stm32f4xx_tim.c **** }
1610:FWLIB/src/stm32f4xx_tim.c **** 
1611:FWLIB/src/stm32f4xx_tim.c **** /**
1612:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1613:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1614:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1615:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1616:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1617:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1618:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1619:FWLIB/src/stm32f4xx_tim.c ****   */
1620:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1621:FWLIB/src/stm32f4xx_tim.c **** {
1622:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1623:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1624:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1625:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1626:FWLIB/src/stm32f4xx_tim.c ****    
1627:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1628:FWLIB/src/stm32f4xx_tim.c **** 
ARM GAS  /tmp/ccses48D.s 			page 30


1629:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1630:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
1631:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
1632:FWLIB/src/stm32f4xx_tim.c **** 
1633:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1634:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1635:FWLIB/src/stm32f4xx_tim.c **** }
1636:FWLIB/src/stm32f4xx_tim.c **** 
1637:FWLIB/src/stm32f4xx_tim.c **** /**
1638:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1639:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1640:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1641:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1642:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1643:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1644:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1645:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1646:FWLIB/src/stm32f4xx_tim.c ****   */
1647:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1648:FWLIB/src/stm32f4xx_tim.c **** {
1649:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1650:FWLIB/src/stm32f4xx_tim.c **** 
1651:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1652:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1653:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1654:FWLIB/src/stm32f4xx_tim.c **** 
1655:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1656:FWLIB/src/stm32f4xx_tim.c **** 
1657:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2P Bit */
1658:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
1659:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
1660:FWLIB/src/stm32f4xx_tim.c **** 
1661:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1662:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1663:FWLIB/src/stm32f4xx_tim.c **** }
1664:FWLIB/src/stm32f4xx_tim.c **** 
1665:FWLIB/src/stm32f4xx_tim.c **** /**
1666:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1667:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1668:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1669:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1670:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1671:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1672:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1673:FWLIB/src/stm32f4xx_tim.c ****   */
1674:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1675:FWLIB/src/stm32f4xx_tim.c **** {
1676:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1677:FWLIB/src/stm32f4xx_tim.c **** 
1678:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1679:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1680:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1681:FWLIB/src/stm32f4xx_tim.c ****   
1682:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1683:FWLIB/src/stm32f4xx_tim.c **** 
1684:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1685:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
ARM GAS  /tmp/ccses48D.s 			page 31


1686:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
1687:FWLIB/src/stm32f4xx_tim.c **** 
1688:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1689:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1690:FWLIB/src/stm32f4xx_tim.c **** }
1691:FWLIB/src/stm32f4xx_tim.c **** 
1692:FWLIB/src/stm32f4xx_tim.c **** /**
1693:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1694:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1695:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1696:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1697:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1698:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1699:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1700:FWLIB/src/stm32f4xx_tim.c ****   */
1701:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1702:FWLIB/src/stm32f4xx_tim.c **** {
1703:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1704:FWLIB/src/stm32f4xx_tim.c **** 
1705:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1706:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1707:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1708:FWLIB/src/stm32f4xx_tim.c **** 
1709:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1710:FWLIB/src/stm32f4xx_tim.c **** 
1711:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3P Bit */
1712:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
1713:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
1714:FWLIB/src/stm32f4xx_tim.c **** 
1715:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1716:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1717:FWLIB/src/stm32f4xx_tim.c **** }
1718:FWLIB/src/stm32f4xx_tim.c **** 
1719:FWLIB/src/stm32f4xx_tim.c **** /**
1720:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1721:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1722:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1723:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1724:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1725:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1726:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1727:FWLIB/src/stm32f4xx_tim.c ****   */
1728:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1729:FWLIB/src/stm32f4xx_tim.c **** {
1730:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1731:FWLIB/src/stm32f4xx_tim.c ****  
1732:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1733:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1734:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1735:FWLIB/src/stm32f4xx_tim.c ****     
1736:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1737:FWLIB/src/stm32f4xx_tim.c **** 
1738:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1739:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
1740:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
1741:FWLIB/src/stm32f4xx_tim.c **** 
1742:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
ARM GAS  /tmp/ccses48D.s 			page 32


1743:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1744:FWLIB/src/stm32f4xx_tim.c **** }
1745:FWLIB/src/stm32f4xx_tim.c **** 
1746:FWLIB/src/stm32f4xx_tim.c **** /**
1747:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1748:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1749:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1750:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1751:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1752:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1753:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1754:FWLIB/src/stm32f4xx_tim.c ****   */
1755:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1756:FWLIB/src/stm32f4xx_tim.c **** {
1757:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1758:FWLIB/src/stm32f4xx_tim.c **** 
1759:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1760:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1761:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1762:FWLIB/src/stm32f4xx_tim.c **** 
1763:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1764:FWLIB/src/stm32f4xx_tim.c **** 
1765:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC4P Bit */
1766:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
1767:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
1768:FWLIB/src/stm32f4xx_tim.c **** 
1769:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1770:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1771:FWLIB/src/stm32f4xx_tim.c **** }
1772:FWLIB/src/stm32f4xx_tim.c **** 
1773:FWLIB/src/stm32f4xx_tim.c **** /**
1774:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1775:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1776:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1777:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1778:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1779:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1780:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1781:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1782:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1783:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1784:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1785:FWLIB/src/stm32f4xx_tim.c ****   */
1786:FWLIB/src/stm32f4xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1787:FWLIB/src/stm32f4xx_tim.c **** {
1788:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
1789:FWLIB/src/stm32f4xx_tim.c **** 
1790:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1791:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1792:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1793:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1794:FWLIB/src/stm32f4xx_tim.c **** 
1795:FWLIB/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
1796:FWLIB/src/stm32f4xx_tim.c **** 
1797:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the CCxE Bit */
1798:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
1799:FWLIB/src/stm32f4xx_tim.c **** 
ARM GAS  /tmp/ccses48D.s 			page 33


1800:FWLIB/src/stm32f4xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1801:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
1802:FWLIB/src/stm32f4xx_tim.c **** }
1803:FWLIB/src/stm32f4xx_tim.c **** 
1804:FWLIB/src/stm32f4xx_tim.c **** /**
1805:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1806:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1807:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1808:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1809:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1810:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1811:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1812:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1813:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1814:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1815:FWLIB/src/stm32f4xx_tim.c ****   */
1816:FWLIB/src/stm32f4xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1817:FWLIB/src/stm32f4xx_tim.c **** {
1818:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
1819:FWLIB/src/stm32f4xx_tim.c **** 
1820:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1821:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1822:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1823:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1824:FWLIB/src/stm32f4xx_tim.c **** 
1825:FWLIB/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
1826:FWLIB/src/stm32f4xx_tim.c **** 
1827:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the CCxNE Bit */
1828:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
1829:FWLIB/src/stm32f4xx_tim.c **** 
1830:FWLIB/src/stm32f4xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1831:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
1832:FWLIB/src/stm32f4xx_tim.c **** }
1833:FWLIB/src/stm32f4xx_tim.c **** /**
1834:FWLIB/src/stm32f4xx_tim.c ****   * @}
1835:FWLIB/src/stm32f4xx_tim.c ****   */
1836:FWLIB/src/stm32f4xx_tim.c **** 
1837:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1838:FWLIB/src/stm32f4xx_tim.c ****  *  @brief    Input Capture management functions 
1839:FWLIB/src/stm32f4xx_tim.c ****  *
1840:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
1841:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
1842:FWLIB/src/stm32f4xx_tim.c ****                   ##### Input Capture management functions #####
1843:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
1844:FWLIB/src/stm32f4xx_tim.c ****          
1845:FWLIB/src/stm32f4xx_tim.c ****             ##### TIM Driver: how to use it in Input Capture Mode #####
1846:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
1847:FWLIB/src/stm32f4xx_tim.c ****     [..]    
1848:FWLIB/src/stm32f4xx_tim.c ****     To use the Timer in Input Capture mode, the following steps are mandatory:
1849:FWLIB/src/stm32f4xx_tim.c ****        
1850:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) 
1851:FWLIB/src/stm32f4xx_tim.c ****           function
1852:FWLIB/src/stm32f4xx_tim.c ****        
1853:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the TIM pins by configuring the corresponding GPIO pins
1854:FWLIB/src/stm32f4xx_tim.c ****        
1855:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the Time base unit as described in the first part of this driver,
1856:FWLIB/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
ARM GAS  /tmp/ccses48D.s 			page 34


1857:FWLIB/src/stm32f4xx_tim.c ****         (++) Autoreload value = 0xFFFF
1858:FWLIB/src/stm32f4xx_tim.c ****         (++) Prescaler value = 0x0000
1859:FWLIB/src/stm32f4xx_tim.c ****         (++) Counter mode = Up counting
1860:FWLIB/src/stm32f4xx_tim.c ****         (++) Clock Division = TIM_CKD_DIV1
1861:FWLIB/src/stm32f4xx_tim.c ****           
1862:FWLIB/src/stm32f4xx_tim.c ****       (#) Fill the TIM_ICInitStruct with the desired parameters including:
1863:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Channel: TIM_Channel
1864:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Input Capture polarity: TIM_ICPolarity
1865:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Input Capture selection: TIM_ICSelection
1866:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Input Capture Prescaler: TIM_ICPrescaler
1867:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Input Capture filter value: TIM_ICFilter
1868:FWLIB/src/stm32f4xx_tim.c ****        
1869:FWLIB/src/stm32f4xx_tim.c ****       (#) Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel 
1870:FWLIB/src/stm32f4xx_tim.c ****           with the corresponding configuration and to measure only frequency 
1871:FWLIB/src/stm32f4xx_tim.c ****           or duty cycle of the input signal, or, Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) 
1872:FWLIB/src/stm32f4xx_tim.c ****           to configure the desired channels with the corresponding configuration 
1873:FWLIB/src/stm32f4xx_tim.c ****           and to measure the frequency and the duty cycle of the input signal
1874:FWLIB/src/stm32f4xx_tim.c ****           
1875:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable the NVIC or the DMA to read the measured frequency. 
1876:FWLIB/src/stm32f4xx_tim.c ****           
1877:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable the corresponding interrupt (or DMA request) to read the Captured 
1878:FWLIB/src/stm32f4xx_tim.c ****           value, using the function TIM_ITConfig(TIMx, TIM_IT_CCx) 
1879:FWLIB/src/stm32f4xx_tim.c ****           (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1880:FWLIB/src/stm32f4xx_tim.c ****        
1881:FWLIB/src/stm32f4xx_tim.c ****       (#) Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1882:FWLIB/src/stm32f4xx_tim.c ****        
1883:FWLIB/src/stm32f4xx_tim.c ****       (#) Use TIM_GetCapturex(TIMx); to read the captured value.
1884:FWLIB/src/stm32f4xx_tim.c ****        
1885:FWLIB/src/stm32f4xx_tim.c ****       -@- All other functions can be used separately to modify, if needed,
1886:FWLIB/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
1887:FWLIB/src/stm32f4xx_tim.c **** 
1888:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
1889:FWLIB/src/stm32f4xx_tim.c ****   * @{
1890:FWLIB/src/stm32f4xx_tim.c ****   */
1891:FWLIB/src/stm32f4xx_tim.c **** 
1892:FWLIB/src/stm32f4xx_tim.c **** /**
1893:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1894:FWLIB/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct.
1895:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1896:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1897:FWLIB/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1898:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1899:FWLIB/src/stm32f4xx_tim.c ****   */
1900:FWLIB/src/stm32f4xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1901:FWLIB/src/stm32f4xx_tim.c **** {
1902:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1903:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1904:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1905:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1906:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1907:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1908:FWLIB/src/stm32f4xx_tim.c ****   
1909:FWLIB/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
1910:FWLIB/src/stm32f4xx_tim.c ****   {
1911:FWLIB/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1912:FWLIB/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
1913:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
ARM GAS  /tmp/ccses48D.s 			page 35


1914:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1915:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1916:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1917:FWLIB/src/stm32f4xx_tim.c ****   }
1918:FWLIB/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
1919:FWLIB/src/stm32f4xx_tim.c ****   {
1920:FWLIB/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1921:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1922:FWLIB/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
1923:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1924:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1925:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1926:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1927:FWLIB/src/stm32f4xx_tim.c ****   }
1928:FWLIB/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
1929:FWLIB/src/stm32f4xx_tim.c ****   {
1930:FWLIB/src/stm32f4xx_tim.c ****     /* TI3 Configuration */
1931:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1932:FWLIB/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
1933:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1934:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1935:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1936:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1937:FWLIB/src/stm32f4xx_tim.c ****   }
1938:FWLIB/src/stm32f4xx_tim.c ****   else
1939:FWLIB/src/stm32f4xx_tim.c ****   {
1940:FWLIB/src/stm32f4xx_tim.c ****     /* TI4 Configuration */
1941:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1942:FWLIB/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
1943:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1944:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1945:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1946:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1947:FWLIB/src/stm32f4xx_tim.c ****   }
1948:FWLIB/src/stm32f4xx_tim.c **** }
1949:FWLIB/src/stm32f4xx_tim.c **** 
1950:FWLIB/src/stm32f4xx_tim.c **** /**
1951:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1952:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1953:FWLIB/src/stm32f4xx_tim.c ****   *         be initialized.
1954:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1955:FWLIB/src/stm32f4xx_tim.c ****   */
1956:FWLIB/src/stm32f4xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1957:FWLIB/src/stm32f4xx_tim.c **** {
1958:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
1959:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
1960:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
1961:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
1962:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
1963:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
1964:FWLIB/src/stm32f4xx_tim.c **** }
1965:FWLIB/src/stm32f4xx_tim.c **** 
1966:FWLIB/src/stm32f4xx_tim.c **** /**
1967:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1968:FWLIB/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1969:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1970:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
ARM GAS  /tmp/ccses48D.s 			page 36


1971:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1972:FWLIB/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1973:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1974:FWLIB/src/stm32f4xx_tim.c ****   */
1975:FWLIB/src/stm32f4xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1976:FWLIB/src/stm32f4xx_tim.c **** {
1977:FWLIB/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
1978:FWLIB/src/stm32f4xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
1979:FWLIB/src/stm32f4xx_tim.c **** 
1980:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1981:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1982:FWLIB/src/stm32f4xx_tim.c **** 
1983:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Opposite Input Polarity */
1984:FWLIB/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
1985:FWLIB/src/stm32f4xx_tim.c ****   {
1986:FWLIB/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
1987:FWLIB/src/stm32f4xx_tim.c ****   }
1988:FWLIB/src/stm32f4xx_tim.c ****   else
1989:FWLIB/src/stm32f4xx_tim.c ****   {
1990:FWLIB/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
1991:FWLIB/src/stm32f4xx_tim.c ****   }
1992:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Opposite Input */
1993:FWLIB/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
1994:FWLIB/src/stm32f4xx_tim.c ****   {
1995:FWLIB/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
1996:FWLIB/src/stm32f4xx_tim.c ****   }
1997:FWLIB/src/stm32f4xx_tim.c ****   else
1998:FWLIB/src/stm32f4xx_tim.c ****   {
1999:FWLIB/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
2000:FWLIB/src/stm32f4xx_tim.c ****   }
2001:FWLIB/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
2002:FWLIB/src/stm32f4xx_tim.c ****   {
2003:FWLIB/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2004:FWLIB/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
2005:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
2006:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2007:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2008:FWLIB/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2009:FWLIB/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
2010:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2011:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2012:FWLIB/src/stm32f4xx_tim.c ****   }
2013:FWLIB/src/stm32f4xx_tim.c ****   else
2014:FWLIB/src/stm32f4xx_tim.c ****   { 
2015:FWLIB/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2016:FWLIB/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
2017:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
2018:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2019:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2020:FWLIB/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2021:FWLIB/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
2022:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2023:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2024:FWLIB/src/stm32f4xx_tim.c ****   }
2025:FWLIB/src/stm32f4xx_tim.c **** }
2026:FWLIB/src/stm32f4xx_tim.c **** 
2027:FWLIB/src/stm32f4xx_tim.c **** /**
ARM GAS  /tmp/ccses48D.s 			page 37


2028:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2029:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2030:FWLIB/src/stm32f4xx_tim.c ****   * @retval Capture Compare 1 Register value.
2031:FWLIB/src/stm32f4xx_tim.c ****   */
2032:FWLIB/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2033:FWLIB/src/stm32f4xx_tim.c **** {
2034:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2035:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2036:FWLIB/src/stm32f4xx_tim.c **** 
2037:FWLIB/src/stm32f4xx_tim.c ****   /* Get the Capture 1 Register value */
2038:FWLIB/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
2039:FWLIB/src/stm32f4xx_tim.c **** }
2040:FWLIB/src/stm32f4xx_tim.c **** 
2041:FWLIB/src/stm32f4xx_tim.c **** /**
2042:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2043:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2044:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
2045:FWLIB/src/stm32f4xx_tim.c ****   * @retval Capture Compare 2 Register value.
2046:FWLIB/src/stm32f4xx_tim.c ****   */
2047:FWLIB/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2048:FWLIB/src/stm32f4xx_tim.c **** {
2049:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2050:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2051:FWLIB/src/stm32f4xx_tim.c **** 
2052:FWLIB/src/stm32f4xx_tim.c ****   /* Get the Capture 2 Register value */
2053:FWLIB/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
2054:FWLIB/src/stm32f4xx_tim.c **** }
2055:FWLIB/src/stm32f4xx_tim.c **** 
2056:FWLIB/src/stm32f4xx_tim.c **** /**
2057:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2058:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2059:FWLIB/src/stm32f4xx_tim.c ****   * @retval Capture Compare 3 Register value.
2060:FWLIB/src/stm32f4xx_tim.c ****   */
2061:FWLIB/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2062:FWLIB/src/stm32f4xx_tim.c **** {
2063:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2064:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2065:FWLIB/src/stm32f4xx_tim.c **** 
2066:FWLIB/src/stm32f4xx_tim.c ****   /* Get the Capture 3 Register value */
2067:FWLIB/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
2068:FWLIB/src/stm32f4xx_tim.c **** }
2069:FWLIB/src/stm32f4xx_tim.c **** 
2070:FWLIB/src/stm32f4xx_tim.c **** /**
2071:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2072:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2073:FWLIB/src/stm32f4xx_tim.c ****   * @retval Capture Compare 4 Register value.
2074:FWLIB/src/stm32f4xx_tim.c ****   */
2075:FWLIB/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2076:FWLIB/src/stm32f4xx_tim.c **** {
2077:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2078:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2079:FWLIB/src/stm32f4xx_tim.c **** 
2080:FWLIB/src/stm32f4xx_tim.c ****   /* Get the Capture 4 Register value */
2081:FWLIB/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
2082:FWLIB/src/stm32f4xx_tim.c **** }
2083:FWLIB/src/stm32f4xx_tim.c **** 
2084:FWLIB/src/stm32f4xx_tim.c **** /**
ARM GAS  /tmp/ccses48D.s 			page 38


2085:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2086:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2087:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2088:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2089:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2090:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2091:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2092:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2093:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2094:FWLIB/src/stm32f4xx_tim.c ****   */
2095:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2096:FWLIB/src/stm32f4xx_tim.c **** {
2097:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2098:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2099:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2100:FWLIB/src/stm32f4xx_tim.c **** 
2101:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the IC1PSC Bits */
2102:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
2103:FWLIB/src/stm32f4xx_tim.c **** 
2104:FWLIB/src/stm32f4xx_tim.c ****   /* Set the IC1PSC value */
2105:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
2106:FWLIB/src/stm32f4xx_tim.c **** }
2107:FWLIB/src/stm32f4xx_tim.c **** 
2108:FWLIB/src/stm32f4xx_tim.c **** /**
2109:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2110:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2111:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
2112:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2113:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2114:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2115:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2116:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2117:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2118:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2119:FWLIB/src/stm32f4xx_tim.c ****   */
2120:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2121:FWLIB/src/stm32f4xx_tim.c **** {
2122:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2123:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2124:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2125:FWLIB/src/stm32f4xx_tim.c **** 
2126:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the IC2PSC Bits */
2127:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
2128:FWLIB/src/stm32f4xx_tim.c **** 
2129:FWLIB/src/stm32f4xx_tim.c ****   /* Set the IC2PSC value */
2130:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
2131:FWLIB/src/stm32f4xx_tim.c **** }
2132:FWLIB/src/stm32f4xx_tim.c **** 
2133:FWLIB/src/stm32f4xx_tim.c **** /**
2134:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2135:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2136:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2137:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2138:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2139:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2140:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2141:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
ARM GAS  /tmp/ccses48D.s 			page 39


2142:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2143:FWLIB/src/stm32f4xx_tim.c ****   */
2144:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2145:FWLIB/src/stm32f4xx_tim.c **** {
2146:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2147:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2148:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2149:FWLIB/src/stm32f4xx_tim.c **** 
2150:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the IC3PSC Bits */
2151:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
2152:FWLIB/src/stm32f4xx_tim.c **** 
2153:FWLIB/src/stm32f4xx_tim.c ****   /* Set the IC3PSC value */
2154:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
2155:FWLIB/src/stm32f4xx_tim.c **** }
2156:FWLIB/src/stm32f4xx_tim.c **** 
2157:FWLIB/src/stm32f4xx_tim.c **** /**
2158:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2159:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2160:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2161:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2162:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2163:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2164:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2165:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2166:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2167:FWLIB/src/stm32f4xx_tim.c ****   */
2168:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2169:FWLIB/src/stm32f4xx_tim.c **** {  
2170:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2171:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2172:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2173:FWLIB/src/stm32f4xx_tim.c **** 
2174:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the IC4PSC Bits */
2175:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
2176:FWLIB/src/stm32f4xx_tim.c **** 
2177:FWLIB/src/stm32f4xx_tim.c ****   /* Set the IC4PSC value */
2178:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
2179:FWLIB/src/stm32f4xx_tim.c **** }
2180:FWLIB/src/stm32f4xx_tim.c **** /**
2181:FWLIB/src/stm32f4xx_tim.c ****   * @}
2182:FWLIB/src/stm32f4xx_tim.c ****   */
2183:FWLIB/src/stm32f4xx_tim.c **** 
2184:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2185:FWLIB/src/stm32f4xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2186:FWLIB/src/stm32f4xx_tim.c ****  *
2187:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
2188:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
2189:FWLIB/src/stm32f4xx_tim.c ****       ##### Advanced-control timers (TIM1 and TIM8) specific features #####
2190:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
2191:FWLIB/src/stm32f4xx_tim.c ****         
2192:FWLIB/src/stm32f4xx_tim.c ****              ##### TIM Driver: how to use the Break feature #####
2193:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
2194:FWLIB/src/stm32f4xx_tim.c ****     [..] 
2195:FWLIB/src/stm32f4xx_tim.c ****     After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2196:FWLIB/src/stm32f4xx_tim.c ****                          
2197:FWLIB/src/stm32f4xx_tim.c ****       (#) Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2198:FWLIB/src/stm32f4xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
ARM GAS  /tmp/ccses48D.s 			page 40


2199:FWLIB/src/stm32f4xx_tim.c ****           AOE(automatic output enable).
2200:FWLIB/src/stm32f4xx_tim.c ****                
2201:FWLIB/src/stm32f4xx_tim.c ****       (#) Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2202:FWLIB/src/stm32f4xx_tim.c ****           
2203:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2204:FWLIB/src/stm32f4xx_tim.c ****           
2205:FWLIB/src/stm32f4xx_tim.c ****       (#) Once the break even occurs, the Timer's output signals are put in reset
2206:FWLIB/src/stm32f4xx_tim.c ****           state or in a known state (according to the configuration made in
2207:FWLIB/src/stm32f4xx_tim.c ****           TIM_BDTRConfig() function).
2208:FWLIB/src/stm32f4xx_tim.c **** 
2209:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
2210:FWLIB/src/stm32f4xx_tim.c ****   * @{
2211:FWLIB/src/stm32f4xx_tim.c ****   */
2212:FWLIB/src/stm32f4xx_tim.c **** 
2213:FWLIB/src/stm32f4xx_tim.c **** /**
2214:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2215:FWLIB/src/stm32f4xx_tim.c ****   *         and the AOE(automatic output enable).
2216:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2217:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2218:FWLIB/src/stm32f4xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2219:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2220:FWLIB/src/stm32f4xx_tim.c ****   */
2221:FWLIB/src/stm32f4xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2222:FWLIB/src/stm32f4xx_tim.c **** {
2223:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2224:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2225:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2226:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2227:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2228:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2229:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2230:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2231:FWLIB/src/stm32f4xx_tim.c **** 
2232:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2233:FWLIB/src/stm32f4xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2234:FWLIB/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
2235:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
2236:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
2237:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
2238:FWLIB/src/stm32f4xx_tim.c **** }
2239:FWLIB/src/stm32f4xx_tim.c **** 
2240:FWLIB/src/stm32f4xx_tim.c **** /**
2241:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2242:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2243:FWLIB/src/stm32f4xx_tim.c ****   *         will be initialized.
2244:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2245:FWLIB/src/stm32f4xx_tim.c ****   */
2246:FWLIB/src/stm32f4xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2247:FWLIB/src/stm32f4xx_tim.c **** {
2248:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
2249:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
2250:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
2251:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
2252:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
2253:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
2254:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
2255:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
ARM GAS  /tmp/ccses48D.s 			page 41


2256:FWLIB/src/stm32f4xx_tim.c **** }
2257:FWLIB/src/stm32f4xx_tim.c **** 
2258:FWLIB/src/stm32f4xx_tim.c **** /**
2259:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2260:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2261:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2262:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2263:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2264:FWLIB/src/stm32f4xx_tim.c ****   */
2265:FWLIB/src/stm32f4xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2266:FWLIB/src/stm32f4xx_tim.c **** {
2267:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2268:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2269:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2270:FWLIB/src/stm32f4xx_tim.c **** 
2271:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2272:FWLIB/src/stm32f4xx_tim.c ****   {
2273:FWLIB/src/stm32f4xx_tim.c ****     /* Enable the TIM Main Output */
2274:FWLIB/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
2275:FWLIB/src/stm32f4xx_tim.c ****   }
2276:FWLIB/src/stm32f4xx_tim.c ****   else
2277:FWLIB/src/stm32f4xx_tim.c ****   {
2278:FWLIB/src/stm32f4xx_tim.c ****     /* Disable the TIM Main Output */
2279:FWLIB/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
2280:FWLIB/src/stm32f4xx_tim.c ****   }  
2281:FWLIB/src/stm32f4xx_tim.c **** }
2282:FWLIB/src/stm32f4xx_tim.c **** 
2283:FWLIB/src/stm32f4xx_tim.c **** /**
2284:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2285:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2286:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2287:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2288:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2289:FWLIB/src/stm32f4xx_tim.c ****   */
2290:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2291:FWLIB/src/stm32f4xx_tim.c **** {
2292:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2293:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2294:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2295:FWLIB/src/stm32f4xx_tim.c **** 
2296:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2297:FWLIB/src/stm32f4xx_tim.c ****   {
2298:FWLIB/src/stm32f4xx_tim.c ****     /* Set the COM Bit */
2299:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
2300:FWLIB/src/stm32f4xx_tim.c ****   }
2301:FWLIB/src/stm32f4xx_tim.c ****   else
2302:FWLIB/src/stm32f4xx_tim.c ****   {
2303:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the COM Bit */
2304:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
2305:FWLIB/src/stm32f4xx_tim.c ****   }
2306:FWLIB/src/stm32f4xx_tim.c **** }
2307:FWLIB/src/stm32f4xx_tim.c **** 
2308:FWLIB/src/stm32f4xx_tim.c **** /**
2309:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2310:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2311:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2312:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
ARM GAS  /tmp/ccses48D.s 			page 42


2313:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2314:FWLIB/src/stm32f4xx_tim.c ****   */
2315:FWLIB/src/stm32f4xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2316:FWLIB/src/stm32f4xx_tim.c **** { 
2317:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2318:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2319:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2320:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2321:FWLIB/src/stm32f4xx_tim.c ****   {
2322:FWLIB/src/stm32f4xx_tim.c ****     /* Set the CCPC Bit */
2323:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
2324:FWLIB/src/stm32f4xx_tim.c ****   }
2325:FWLIB/src/stm32f4xx_tim.c ****   else
2326:FWLIB/src/stm32f4xx_tim.c ****   {
2327:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the CCPC Bit */
2328:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
2329:FWLIB/src/stm32f4xx_tim.c ****   }
2330:FWLIB/src/stm32f4xx_tim.c **** }
2331:FWLIB/src/stm32f4xx_tim.c **** /**
2332:FWLIB/src/stm32f4xx_tim.c ****   * @}
2333:FWLIB/src/stm32f4xx_tim.c ****   */
2334:FWLIB/src/stm32f4xx_tim.c **** 
2335:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2336:FWLIB/src/stm32f4xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2337:FWLIB/src/stm32f4xx_tim.c ****  *
2338:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
2339:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
2340:FWLIB/src/stm32f4xx_tim.c ****           ##### Interrupts, DMA and flags management functions #####
2341:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
2342:FWLIB/src/stm32f4xx_tim.c **** 
2343:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
2344:FWLIB/src/stm32f4xx_tim.c ****   * @{
2345:FWLIB/src/stm32f4xx_tim.c ****   */
2346:FWLIB/src/stm32f4xx_tim.c **** 
2347:FWLIB/src/stm32f4xx_tim.c **** /**
2348:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2349:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2350:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2351:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2352:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2353:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2354:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2355:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2356:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2357:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2358:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2359:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2360:FWLIB/src/stm32f4xx_tim.c ****   *  
2361:FWLIB/src/stm32f4xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2362:FWLIB/src/stm32f4xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2363:FWLIB/src/stm32f4xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2364:FWLIB/src/stm32f4xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2365:FWLIB/src/stm32f4xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2366:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2367:FWLIB/src/stm32f4xx_tim.c ****   *        
2368:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2369:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
ARM GAS  /tmp/ccses48D.s 			page 43


2370:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2371:FWLIB/src/stm32f4xx_tim.c ****   */
2372:FWLIB/src/stm32f4xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2373:FWLIB/src/stm32f4xx_tim.c **** {  
2374:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2375:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2376:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2377:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2378:FWLIB/src/stm32f4xx_tim.c ****   
2379:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2380:FWLIB/src/stm32f4xx_tim.c ****   {
2381:FWLIB/src/stm32f4xx_tim.c ****     /* Enable the Interrupt sources */
2382:FWLIB/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
2383:FWLIB/src/stm32f4xx_tim.c ****   }
2384:FWLIB/src/stm32f4xx_tim.c ****   else
2385:FWLIB/src/stm32f4xx_tim.c ****   {
2386:FWLIB/src/stm32f4xx_tim.c ****     /* Disable the Interrupt sources */
2387:FWLIB/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
2388:FWLIB/src/stm32f4xx_tim.c ****   }
2389:FWLIB/src/stm32f4xx_tim.c **** }
2390:FWLIB/src/stm32f4xx_tim.c **** 
2391:FWLIB/src/stm32f4xx_tim.c **** /**
2392:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2393:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2394:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2395:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2396:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2397:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2398:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2399:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2400:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2401:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2402:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2403:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2404:FWLIB/src/stm32f4xx_tim.c ****   * 
2405:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2406:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2407:FWLIB/src/stm32f4xx_tim.c ****   *        
2408:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2409:FWLIB/src/stm32f4xx_tim.c ****   */
2410:FWLIB/src/stm32f4xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2411:FWLIB/src/stm32f4xx_tim.c **** { 
2412:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2413:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2414:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2415:FWLIB/src/stm32f4xx_tim.c ****  
2416:FWLIB/src/stm32f4xx_tim.c ****   /* Set the event sources */
2417:FWLIB/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
2418:FWLIB/src/stm32f4xx_tim.c **** }
2419:FWLIB/src/stm32f4xx_tim.c **** 
2420:FWLIB/src/stm32f4xx_tim.c **** /**
2421:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2422:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2423:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2424:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2425:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2426:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
ARM GAS  /tmp/ccses48D.s 			page 44


2427:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2428:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2429:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2430:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2431:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2432:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2433:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2434:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2435:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2436:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2437:FWLIB/src/stm32f4xx_tim.c ****   *
2438:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2439:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2440:FWLIB/src/stm32f4xx_tim.c ****   *
2441:FWLIB/src/stm32f4xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2442:FWLIB/src/stm32f4xx_tim.c ****   */
2443:FWLIB/src/stm32f4xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2444:FWLIB/src/stm32f4xx_tim.c **** { 
2445:FWLIB/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
2446:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2447:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2448:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2449:FWLIB/src/stm32f4xx_tim.c **** 
2450:FWLIB/src/stm32f4xx_tim.c ****   
2451:FWLIB/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
2452:FWLIB/src/stm32f4xx_tim.c ****   {
2453:FWLIB/src/stm32f4xx_tim.c ****     bitstatus = SET;
2454:FWLIB/src/stm32f4xx_tim.c ****   }
2455:FWLIB/src/stm32f4xx_tim.c ****   else
2456:FWLIB/src/stm32f4xx_tim.c ****   {
2457:FWLIB/src/stm32f4xx_tim.c ****     bitstatus = RESET;
2458:FWLIB/src/stm32f4xx_tim.c ****   }
2459:FWLIB/src/stm32f4xx_tim.c ****   return bitstatus;
2460:FWLIB/src/stm32f4xx_tim.c **** }
2461:FWLIB/src/stm32f4xx_tim.c **** 
2462:FWLIB/src/stm32f4xx_tim.c **** /**
2463:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2464:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2465:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2466:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2467:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2468:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2469:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2470:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2471:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2472:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2473:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2474:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2475:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2476:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2477:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2478:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2479:FWLIB/src/stm32f4xx_tim.c ****   *
2480:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2481:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2482:FWLIB/src/stm32f4xx_tim.c ****   *    
2483:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
ARM GAS  /tmp/ccses48D.s 			page 45


2484:FWLIB/src/stm32f4xx_tim.c ****   */
2485:FWLIB/src/stm32f4xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2486:FWLIB/src/stm32f4xx_tim.c **** {  
2487:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2488:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2489:FWLIB/src/stm32f4xx_tim.c ****    
2490:FWLIB/src/stm32f4xx_tim.c ****   /* Clear the flags */
2491:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
2492:FWLIB/src/stm32f4xx_tim.c **** }
2493:FWLIB/src/stm32f4xx_tim.c **** 
2494:FWLIB/src/stm32f4xx_tim.c **** /**
2495:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2496:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2497:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2498:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2499:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2500:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2501:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2502:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2503:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2504:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2505:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2506:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2507:FWLIB/src/stm32f4xx_tim.c ****   *
2508:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2509:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2510:FWLIB/src/stm32f4xx_tim.c ****   *     
2511:FWLIB/src/stm32f4xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2512:FWLIB/src/stm32f4xx_tim.c ****   */
2513:FWLIB/src/stm32f4xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2514:FWLIB/src/stm32f4xx_tim.c **** {
2515:FWLIB/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
2516:FWLIB/src/stm32f4xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
2517:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2518:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2519:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2520:FWLIB/src/stm32f4xx_tim.c ****    
2521:FWLIB/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
2522:FWLIB/src/stm32f4xx_tim.c ****   
2523:FWLIB/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
2524:FWLIB/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
2525:FWLIB/src/stm32f4xx_tim.c ****   {
2526:FWLIB/src/stm32f4xx_tim.c ****     bitstatus = SET;
2527:FWLIB/src/stm32f4xx_tim.c ****   }
2528:FWLIB/src/stm32f4xx_tim.c ****   else
2529:FWLIB/src/stm32f4xx_tim.c ****   {
2530:FWLIB/src/stm32f4xx_tim.c ****     bitstatus = RESET;
2531:FWLIB/src/stm32f4xx_tim.c ****   }
2532:FWLIB/src/stm32f4xx_tim.c ****   return bitstatus;
2533:FWLIB/src/stm32f4xx_tim.c **** }
2534:FWLIB/src/stm32f4xx_tim.c **** 
2535:FWLIB/src/stm32f4xx_tim.c **** /**
2536:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2537:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2538:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2539:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2540:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
ARM GAS  /tmp/ccses48D.s 			page 46


2541:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2542:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2543:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2544:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2545:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2546:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2547:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2548:FWLIB/src/stm32f4xx_tim.c ****   *
2549:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2550:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2551:FWLIB/src/stm32f4xx_tim.c ****   *      
2552:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2553:FWLIB/src/stm32f4xx_tim.c ****   */
2554:FWLIB/src/stm32f4xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2555:FWLIB/src/stm32f4xx_tim.c **** {
2556:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2557:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2558:FWLIB/src/stm32f4xx_tim.c **** 
2559:FWLIB/src/stm32f4xx_tim.c ****   /* Clear the IT pending Bit */
2560:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
2561:FWLIB/src/stm32f4xx_tim.c **** }
2562:FWLIB/src/stm32f4xx_tim.c **** 
2563:FWLIB/src/stm32f4xx_tim.c **** /**
2564:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2565:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2566:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2567:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2568:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2569:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR2
2570:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2571:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DIER
2572:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM1_DMABase_SR
2573:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_EGR
2574:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2575:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2576:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCER
2577:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2578:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2579:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_ARR
2580:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_RCR
2581:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2582:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2583:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2584:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2585:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2586:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DCR
2587:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2588:FWLIB/src/stm32f4xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2589:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2590:FWLIB/src/stm32f4xx_tim.c ****   */
2591:FWLIB/src/stm32f4xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2592:FWLIB/src/stm32f4xx_tim.c **** {
2593:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2594:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2595:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2596:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2597:FWLIB/src/stm32f4xx_tim.c **** 
ARM GAS  /tmp/ccses48D.s 			page 47


2598:FWLIB/src/stm32f4xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2599:FWLIB/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
2600:FWLIB/src/stm32f4xx_tim.c **** }
2601:FWLIB/src/stm32f4xx_tim.c **** 
2602:FWLIB/src/stm32f4xx_tim.c **** /**
2603:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2604:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2605:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2606:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2607:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2608:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2609:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2610:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2611:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2612:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2613:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2614:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2615:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2616:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2617:FWLIB/src/stm32f4xx_tim.c ****   */
2618:FWLIB/src/stm32f4xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2619:FWLIB/src/stm32f4xx_tim.c **** { 
2620:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2621:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2622:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2623:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2624:FWLIB/src/stm32f4xx_tim.c ****   
2625:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2626:FWLIB/src/stm32f4xx_tim.c ****   {
2627:FWLIB/src/stm32f4xx_tim.c ****     /* Enable the DMA sources */
2628:FWLIB/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
2629:FWLIB/src/stm32f4xx_tim.c ****   }
2630:FWLIB/src/stm32f4xx_tim.c ****   else
2631:FWLIB/src/stm32f4xx_tim.c ****   {
2632:FWLIB/src/stm32f4xx_tim.c ****     /* Disable the DMA sources */
2633:FWLIB/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
2634:FWLIB/src/stm32f4xx_tim.c ****   }
2635:FWLIB/src/stm32f4xx_tim.c **** }
2636:FWLIB/src/stm32f4xx_tim.c **** 
2637:FWLIB/src/stm32f4xx_tim.c **** /**
2638:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2639:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2640:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2641:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2642:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2643:FWLIB/src/stm32f4xx_tim.c ****   */
2644:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2645:FWLIB/src/stm32f4xx_tim.c **** {
2646:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2647:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2648:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2649:FWLIB/src/stm32f4xx_tim.c **** 
2650:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2651:FWLIB/src/stm32f4xx_tim.c ****   {
2652:FWLIB/src/stm32f4xx_tim.c ****     /* Set the CCDS Bit */
2653:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
2654:FWLIB/src/stm32f4xx_tim.c ****   }
ARM GAS  /tmp/ccses48D.s 			page 48


2655:FWLIB/src/stm32f4xx_tim.c ****   else
2656:FWLIB/src/stm32f4xx_tim.c ****   {
2657:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the CCDS Bit */
2658:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
2659:FWLIB/src/stm32f4xx_tim.c ****   }
2660:FWLIB/src/stm32f4xx_tim.c **** }
2661:FWLIB/src/stm32f4xx_tim.c **** /**
2662:FWLIB/src/stm32f4xx_tim.c ****   * @}
2663:FWLIB/src/stm32f4xx_tim.c ****   */
2664:FWLIB/src/stm32f4xx_tim.c **** 
2665:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2666:FWLIB/src/stm32f4xx_tim.c ****  *  @brief    Clocks management functions
2667:FWLIB/src/stm32f4xx_tim.c ****  *
2668:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
2669:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
2670:FWLIB/src/stm32f4xx_tim.c ****                   ##### Clocks management functions #####
2671:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
2672:FWLIB/src/stm32f4xx_tim.c **** 
2673:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
2674:FWLIB/src/stm32f4xx_tim.c ****   * @{
2675:FWLIB/src/stm32f4xx_tim.c ****   */
2676:FWLIB/src/stm32f4xx_tim.c **** 
2677:FWLIB/src/stm32f4xx_tim.c **** /**
2678:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2679:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2680:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
2681:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2682:FWLIB/src/stm32f4xx_tim.c ****   */
2683:FWLIB/src/stm32f4xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2684:FWLIB/src/stm32f4xx_tim.c **** {
2685:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2686:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2687:FWLIB/src/stm32f4xx_tim.c **** 
2688:FWLIB/src/stm32f4xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2689:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
2690:FWLIB/src/stm32f4xx_tim.c **** }
2691:FWLIB/src/stm32f4xx_tim.c **** 
2692:FWLIB/src/stm32f4xx_tim.c **** /**
2693:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2694:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2695:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
2696:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2697:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2698:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2699:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2700:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2701:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2702:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2703:FWLIB/src/stm32f4xx_tim.c ****   */
2704:FWLIB/src/stm32f4xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2705:FWLIB/src/stm32f4xx_tim.c **** {
2706:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2707:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2708:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2709:FWLIB/src/stm32f4xx_tim.c **** 
2710:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Internal Trigger */
2711:FWLIB/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
ARM GAS  /tmp/ccses48D.s 			page 49


2712:FWLIB/src/stm32f4xx_tim.c **** 
2713:FWLIB/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2714:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
2715:FWLIB/src/stm32f4xx_tim.c **** }
2716:FWLIB/src/stm32f4xx_tim.c **** 
2717:FWLIB/src/stm32f4xx_tim.c **** /**
2718:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2719:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2720:FWLIB/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2721:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2722:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2723:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2724:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2725:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2726:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2727:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2728:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2729:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2730:FWLIB/src/stm32f4xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2731:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2732:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2733:FWLIB/src/stm32f4xx_tim.c ****   */
2734:FWLIB/src/stm32f4xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2735:FWLIB/src/stm32f4xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2736:FWLIB/src/stm32f4xx_tim.c **** {
2737:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2738:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2739:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2740:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2741:FWLIB/src/stm32f4xx_tim.c **** 
2742:FWLIB/src/stm32f4xx_tim.c ****   /* Configure the Timer Input Clock Source */
2743:FWLIB/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
2744:FWLIB/src/stm32f4xx_tim.c ****   {
2745:FWLIB/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
2746:FWLIB/src/stm32f4xx_tim.c ****   }
2747:FWLIB/src/stm32f4xx_tim.c ****   else
2748:FWLIB/src/stm32f4xx_tim.c ****   {
2749:FWLIB/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
2750:FWLIB/src/stm32f4xx_tim.c ****   }
2751:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Trigger source */
2752:FWLIB/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
2753:FWLIB/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2754:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
2755:FWLIB/src/stm32f4xx_tim.c **** }
2756:FWLIB/src/stm32f4xx_tim.c **** 
2757:FWLIB/src/stm32f4xx_tim.c **** /**
2758:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode1
2759:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2760:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2761:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2762:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2763:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2764:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2765:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2766:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2767:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2768:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
ARM GAS  /tmp/ccses48D.s 			page 50


2769:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2770:FWLIB/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2771:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2772:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2773:FWLIB/src/stm32f4xx_tim.c ****   */
2774:FWLIB/src/stm32f4xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2775:FWLIB/src/stm32f4xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2776:FWLIB/src/stm32f4xx_tim.c **** {
2777:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
2778:FWLIB/src/stm32f4xx_tim.c **** 
2779:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2780:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2781:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2782:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2783:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2784:FWLIB/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2785:FWLIB/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
2786:FWLIB/src/stm32f4xx_tim.c ****   
2787:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2788:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
2789:FWLIB/src/stm32f4xx_tim.c **** 
2790:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2791:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
2792:FWLIB/src/stm32f4xx_tim.c **** 
2793:FWLIB/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2794:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
2795:FWLIB/src/stm32f4xx_tim.c **** 
2796:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Trigger selection : ETRF */
2797:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
2798:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
2799:FWLIB/src/stm32f4xx_tim.c **** 
2800:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2801:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
2802:FWLIB/src/stm32f4xx_tim.c **** }
2803:FWLIB/src/stm32f4xx_tim.c **** 
2804:FWLIB/src/stm32f4xx_tim.c **** /**
2805:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode2
2806:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2807:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2808:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2809:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2810:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2811:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2812:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2813:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2814:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2815:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2816:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2817:FWLIB/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2818:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2819:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2820:FWLIB/src/stm32f4xx_tim.c ****   */
2821:FWLIB/src/stm32f4xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2822:FWLIB/src/stm32f4xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2823:FWLIB/src/stm32f4xx_tim.c **** {
2824:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2825:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
ARM GAS  /tmp/ccses48D.s 			page 51


2826:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2827:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2828:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2829:FWLIB/src/stm32f4xx_tim.c **** 
2830:FWLIB/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2831:FWLIB/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
2832:FWLIB/src/stm32f4xx_tim.c **** 
2833:FWLIB/src/stm32f4xx_tim.c ****   /* Enable the External clock mode2 */
2834:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
2835:FWLIB/src/stm32f4xx_tim.c **** }
2836:FWLIB/src/stm32f4xx_tim.c **** /**
2837:FWLIB/src/stm32f4xx_tim.c ****   * @}
2838:FWLIB/src/stm32f4xx_tim.c ****   */
2839:FWLIB/src/stm32f4xx_tim.c **** 
2840:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2841:FWLIB/src/stm32f4xx_tim.c ****  *  @brief    Synchronization management functions 
2842:FWLIB/src/stm32f4xx_tim.c ****  *
2843:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
2844:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
2845:FWLIB/src/stm32f4xx_tim.c ****                 ##### Synchronization management functions #####
2846:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
2847:FWLIB/src/stm32f4xx_tim.c ****                          
2848:FWLIB/src/stm32f4xx_tim.c ****           ##### TIM Driver: how to use it in synchronization Mode #####
2849:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
2850:FWLIB/src/stm32f4xx_tim.c ****     [..] 
2851:FWLIB/src/stm32f4xx_tim.c ****     
2852:FWLIB/src/stm32f4xx_tim.c ****     *** Case of two/several Timers ***
2853:FWLIB/src/stm32f4xx_tim.c ****     ==================================
2854:FWLIB/src/stm32f4xx_tim.c ****     [..]
2855:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the Master Timers using the following functions:
2856:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2857:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2858:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the Slave Timers using the following functions: 
2859:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2860:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2861:FWLIB/src/stm32f4xx_tim.c ****           
2862:FWLIB/src/stm32f4xx_tim.c ****     *** Case of Timers and external trigger(ETR pin) ***
2863:FWLIB/src/stm32f4xx_tim.c ****     ====================================================
2864:FWLIB/src/stm32f4xx_tim.c ****     [..]           
2865:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the External trigger using this function:
2866:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTR
2867:FWLIB/src/stm32f4xx_tim.c ****                                uint16_t ExtTRGFilter);
2868:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the Slave Timers using the following functions: 
2869:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2870:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2871:FWLIB/src/stm32f4xx_tim.c **** 
2872:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
2873:FWLIB/src/stm32f4xx_tim.c ****   * @{
2874:FWLIB/src/stm32f4xx_tim.c ****   */
2875:FWLIB/src/stm32f4xx_tim.c **** 
2876:FWLIB/src/stm32f4xx_tim.c **** /**
2877:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the Input Trigger source
2878:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2879:FWLIB/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2880:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2881:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2882:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
ARM GAS  /tmp/ccses48D.s 			page 52


2883:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2884:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2885:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2886:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2887:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2888:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2889:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2890:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2891:FWLIB/src/stm32f4xx_tim.c ****   */
2892:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2893:FWLIB/src/stm32f4xx_tim.c **** {
2894:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
2895:FWLIB/src/stm32f4xx_tim.c **** 
2896:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2897:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2898:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2899:FWLIB/src/stm32f4xx_tim.c **** 
2900:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2901:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
2902:FWLIB/src/stm32f4xx_tim.c **** 
2903:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the TS Bits */
2904:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
2905:FWLIB/src/stm32f4xx_tim.c **** 
2906:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Input Trigger source */
2907:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
2908:FWLIB/src/stm32f4xx_tim.c **** 
2909:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2910:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
2911:FWLIB/src/stm32f4xx_tim.c **** }
2912:FWLIB/src/stm32f4xx_tim.c **** 
2913:FWLIB/src/stm32f4xx_tim.c **** /**
2914:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2915:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2916:FWLIB/src/stm32f4xx_tim.c ****   *     
2917:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2918:FWLIB/src/stm32f4xx_tim.c ****   *   This parameter can be one of the following values:
2919:FWLIB/src/stm32f4xx_tim.c ****   *
2920:FWLIB/src/stm32f4xx_tim.c ****   *  - For all TIMx
2921:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2922:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2923:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2924:FWLIB/src/stm32f4xx_tim.c ****   *
2925:FWLIB/src/stm32f4xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2926:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2927:FWLIB/src/stm32f4xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2928:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2929:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2930:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2931:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2932:FWLIB/src/stm32f4xx_tim.c ****   *
2933:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2934:FWLIB/src/stm32f4xx_tim.c ****   */
2935:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2936:FWLIB/src/stm32f4xx_tim.c **** {
2937:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2938:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2939:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
ARM GAS  /tmp/ccses48D.s 			page 53


2940:FWLIB/src/stm32f4xx_tim.c **** 
2941:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the MMS Bits */
2942:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
2943:FWLIB/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
2944:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
2945:FWLIB/src/stm32f4xx_tim.c **** }
2946:FWLIB/src/stm32f4xx_tim.c **** 
2947:FWLIB/src/stm32f4xx_tim.c **** /**
2948:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2949:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2950:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2951:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2952:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2953:FWLIB/src/stm32f4xx_tim.c ****   *                                      the counter and triggers an update of the registers
2954:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2955:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2956:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2957:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2958:FWLIB/src/stm32f4xx_tim.c ****   */
2959:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2960:FWLIB/src/stm32f4xx_tim.c **** {
2961:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2962:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2963:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2964:FWLIB/src/stm32f4xx_tim.c **** 
2965:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2966:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
2967:FWLIB/src/stm32f4xx_tim.c **** 
2968:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Slave Mode */
2969:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
2970:FWLIB/src/stm32f4xx_tim.c **** }
2971:FWLIB/src/stm32f4xx_tim.c **** 
2972:FWLIB/src/stm32f4xx_tim.c **** /**
2973:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2974:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2975:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2976:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2977:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2978:FWLIB/src/stm32f4xx_tim.c ****   *                                             and its slaves (through TRGO)
2979:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2980:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2981:FWLIB/src/stm32f4xx_tim.c ****   */
2982:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2983:FWLIB/src/stm32f4xx_tim.c **** {
2984:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2985:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2986:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2987:FWLIB/src/stm32f4xx_tim.c **** 
2988:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the MSM Bit */
2989:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
2990:FWLIB/src/stm32f4xx_tim.c ****   
2991:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the MSM Bit */
2992:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
2993:FWLIB/src/stm32f4xx_tim.c **** }
2994:FWLIB/src/stm32f4xx_tim.c **** 
2995:FWLIB/src/stm32f4xx_tim.c **** /**
2996:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
ARM GAS  /tmp/ccses48D.s 			page 54


2997:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2998:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2999:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3000:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
3001:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
3002:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
3003:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
3004:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
3005:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3006:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
3007:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
3008:FWLIB/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
3009:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
3010:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3011:FWLIB/src/stm32f4xx_tim.c ****   */
3012:FWLIB/src/stm32f4xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
3013:FWLIB/src/stm32f4xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
3014:FWLIB/src/stm32f4xx_tim.c **** {
3015:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
3016:FWLIB/src/stm32f4xx_tim.c **** 
3017:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
3018:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3019:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3020:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3021:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3022:FWLIB/src/stm32f4xx_tim.c **** 
3023:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
3024:FWLIB/src/stm32f4xx_tim.c **** 
3025:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the ETR Bits */
3026:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
3027:FWLIB/src/stm32f4xx_tim.c **** 
3028:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3029:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
3030:FWLIB/src/stm32f4xx_tim.c **** 
3031:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3032:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
3033:FWLIB/src/stm32f4xx_tim.c **** }
3034:FWLIB/src/stm32f4xx_tim.c **** /**
3035:FWLIB/src/stm32f4xx_tim.c ****   * @}
3036:FWLIB/src/stm32f4xx_tim.c ****   */
3037:FWLIB/src/stm32f4xx_tim.c **** 
3038:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3039:FWLIB/src/stm32f4xx_tim.c ****  *  @brief    Specific interface management functions 
3040:FWLIB/src/stm32f4xx_tim.c ****  *
3041:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
3042:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
3043:FWLIB/src/stm32f4xx_tim.c ****             ##### Specific interface management functions #####
3044:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
3045:FWLIB/src/stm32f4xx_tim.c **** 
3046:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
3047:FWLIB/src/stm32f4xx_tim.c ****   * @{
3048:FWLIB/src/stm32f4xx_tim.c ****   */
3049:FWLIB/src/stm32f4xx_tim.c **** 
3050:FWLIB/src/stm32f4xx_tim.c **** /**
3051:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3052:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3053:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
ARM GAS  /tmp/ccses48D.s 			page 55


3054:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3055:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3056:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3057:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3058:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3059:FWLIB/src/stm32f4xx_tim.c ****   *                                       on the level of the other input.
3060:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3061:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3062:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3063:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3064:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3065:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3066:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3067:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3068:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3069:FWLIB/src/stm32f4xx_tim.c ****   */
3070:FWLIB/src/stm32f4xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3071:FWLIB/src/stm32f4xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3072:FWLIB/src/stm32f4xx_tim.c **** {
3073:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
3074:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
3075:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
3076:FWLIB/src/stm32f4xx_tim.c ****     
3077:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
3078:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3079:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3080:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3081:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3082:FWLIB/src/stm32f4xx_tim.c **** 
3083:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
3084:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
3085:FWLIB/src/stm32f4xx_tim.c **** 
3086:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3087:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
3088:FWLIB/src/stm32f4xx_tim.c **** 
3089:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
3090:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
3091:FWLIB/src/stm32f4xx_tim.c **** 
3092:FWLIB/src/stm32f4xx_tim.c ****   /* Set the encoder Mode */
3093:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
3094:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
3095:FWLIB/src/stm32f4xx_tim.c **** 
3096:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3097:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
3098:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
3099:FWLIB/src/stm32f4xx_tim.c **** 
3100:FWLIB/src/stm32f4xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3101:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
3102:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
3103:FWLIB/src/stm32f4xx_tim.c **** 
3104:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3105:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
3106:FWLIB/src/stm32f4xx_tim.c **** 
3107:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
3108:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
3109:FWLIB/src/stm32f4xx_tim.c **** 
3110:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
ARM GAS  /tmp/ccses48D.s 			page 56


3111:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
3112:FWLIB/src/stm32f4xx_tim.c **** }
3113:FWLIB/src/stm32f4xx_tim.c **** 
3114:FWLIB/src/stm32f4xx_tim.c **** /**
3115:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3116:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3117:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
3118:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3119:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3120:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3121:FWLIB/src/stm32f4xx_tim.c ****   */
3122:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3123:FWLIB/src/stm32f4xx_tim.c **** {
3124:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
3125:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3126:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3127:FWLIB/src/stm32f4xx_tim.c **** 
3128:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
3129:FWLIB/src/stm32f4xx_tim.c ****   {
3130:FWLIB/src/stm32f4xx_tim.c ****     /* Set the TI1S Bit */
3131:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
3132:FWLIB/src/stm32f4xx_tim.c ****   }
3133:FWLIB/src/stm32f4xx_tim.c ****   else
3134:FWLIB/src/stm32f4xx_tim.c ****   {
3135:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the TI1S Bit */
3136:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
3137:FWLIB/src/stm32f4xx_tim.c ****   }
3138:FWLIB/src/stm32f4xx_tim.c **** }
3139:FWLIB/src/stm32f4xx_tim.c **** /**
3140:FWLIB/src/stm32f4xx_tim.c ****   * @}
3141:FWLIB/src/stm32f4xx_tim.c ****   */
3142:FWLIB/src/stm32f4xx_tim.c **** 
3143:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3144:FWLIB/src/stm32f4xx_tim.c ****  *  @brief   Specific remapping management function
3145:FWLIB/src/stm32f4xx_tim.c ****  *
3146:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
3147:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
3148:FWLIB/src/stm32f4xx_tim.c ****               ##### Specific remapping management function #####
3149:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
3150:FWLIB/src/stm32f4xx_tim.c **** 
3151:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
3152:FWLIB/src/stm32f4xx_tim.c ****   * @{
3153:FWLIB/src/stm32f4xx_tim.c ****   */
3154:FWLIB/src/stm32f4xx_tim.c **** 
3155:FWLIB/src/stm32f4xx_tim.c **** /**
3156:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3157:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3158:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3159:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3160:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3161:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trigger output.
3162:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3163:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3164:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3165:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3166:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3167:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
ARM GAS  /tmp/ccses48D.s 			page 57


3168:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3169:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3170:FWLIB/src/stm32f4xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3171:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3172:FWLIB/src/stm32f4xx_tim.c ****   */
3173:FWLIB/src/stm32f4xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3174:FWLIB/src/stm32f4xx_tim.c **** {
3175:FWLIB/src/stm32f4xx_tim.c ****  /* Check the parameters */
3176:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3177:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3178:FWLIB/src/stm32f4xx_tim.c **** 
3179:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Timer remapping configuration */
3180:FWLIB/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
3181:FWLIB/src/stm32f4xx_tim.c **** }
3182:FWLIB/src/stm32f4xx_tim.c **** /**
3183:FWLIB/src/stm32f4xx_tim.c ****   * @}
3184:FWLIB/src/stm32f4xx_tim.c ****   */
3185:FWLIB/src/stm32f4xx_tim.c **** 
3186:FWLIB/src/stm32f4xx_tim.c **** /**
3187:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configure the TI1 as Input.
3188:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3189:FWLIB/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
3190:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3191:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3192:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3193:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3194:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3195:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3196:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3197:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3198:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3199:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3200:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3201:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3202:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3203:FWLIB/src/stm32f4xx_tim.c ****   */
3204:FWLIB/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3205:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3206:FWLIB/src/stm32f4xx_tim.c **** {
  27              		.loc 1 3206 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 30B4     		push	{r4, r5}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 5, -4
  38              	.LVL1:
3207:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
3208:FWLIB/src/stm32f4xx_tim.c **** 
3209:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3210:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
  39              		.loc 1 3210 0
  40 0002 048C     		ldrh	r4, [r0, #32]
ARM GAS  /tmp/ccses48D.s 			page 58


  41 0004 A4B2     		uxth	r4, r4
  42 0006 24F00104 		bic	r4, r4, #1
  43 000a A4B2     		uxth	r4, r4
  44 000c 0484     		strh	r4, [r0, #32]	@ movhi
3211:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
  45              		.loc 1 3211 0
  46 000e 058B     		ldrh	r5, [r0, #24]
  47 0010 ADB2     		uxth	r5, r5
  48              	.LVL2:
3212:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
  49              		.loc 1 3212 0
  50 0012 048C     		ldrh	r4, [r0, #32]
  51 0014 A4B2     		uxth	r4, r4
  52              	.LVL3:
3213:FWLIB/src/stm32f4xx_tim.c **** 
3214:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3215:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
  53              		.loc 1 3215 0
  54 0016 25F0F305 		bic	r5, r5, #243
  55              	.LVL4:
3216:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
  56              		.loc 1 3216 0
  57 001a 1B01     		lsls	r3, r3, #4
  58              	.LVL5:
  59 001c 9BB2     		uxth	r3, r3
  60 001e 1A43     		orrs	r2, r2, r3
  61              	.LVL6:
  62 0020 1543     		orrs	r5, r5, r2
  63              	.LVL7:
3217:FWLIB/src/stm32f4xx_tim.c **** 
3218:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3219:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
  64              		.loc 1 3219 0
  65 0022 24F00A04 		bic	r4, r4, #10
  66              	.LVL8:
3220:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
  67              		.loc 1 3220 0
  68 0026 0C43     		orrs	r4, r4, r1
  69              	.LVL9:
  70 0028 44F00104 		orr	r4, r4, #1
  71              	.LVL10:
3221:FWLIB/src/stm32f4xx_tim.c **** 
3222:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3223:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
  72              		.loc 1 3223 0
  73 002c 0583     		strh	r5, [r0, #24]	@ movhi
3224:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
  74              		.loc 1 3224 0
  75 002e 0484     		strh	r4, [r0, #32]	@ movhi
3225:FWLIB/src/stm32f4xx_tim.c **** }
  76              		.loc 1 3225 0
  77 0030 30BC     		pop	{r4, r5}
  78              	.LCFI1:
  79              		.cfi_restore 5
  80              		.cfi_restore 4
  81              		.cfi_def_cfa_offset 0
  82              	.LVL11:
ARM GAS  /tmp/ccses48D.s 			page 59


  83 0032 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE211:
  87              		.section	.text.TI2_Config,"ax",%progbits
  88              		.align	1
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	TI2_Config:
  95              	.LFB212:
3226:FWLIB/src/stm32f4xx_tim.c **** 
3227:FWLIB/src/stm32f4xx_tim.c **** /**
3228:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configure the TI2 as Input.
3229:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3230:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
3231:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3232:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3233:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3234:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3235:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3236:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3237:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3238:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3239:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3240:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3241:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3242:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3243:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3244:FWLIB/src/stm32f4xx_tim.c ****   */
3245:FWLIB/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3246:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3247:FWLIB/src/stm32f4xx_tim.c **** {
  96              		.loc 1 3247 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.LVL12:
 102 0000 30B4     		push	{r4, r5}
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 4, -8
 106              		.cfi_offset 5, -4
 107              	.LVL13:
3248:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
3249:FWLIB/src/stm32f4xx_tim.c **** 
3250:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3251:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 108              		.loc 1 3251 0
 109 0002 048C     		ldrh	r4, [r0, #32]
 110 0004 A4B2     		uxth	r4, r4
 111 0006 24F01004 		bic	r4, r4, #16
 112 000a A4B2     		uxth	r4, r4
 113 000c 0484     		strh	r4, [r0, #32]	@ movhi
3252:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 114              		.loc 1 3252 0
ARM GAS  /tmp/ccses48D.s 			page 60


 115 000e 058B     		ldrh	r5, [r0, #24]
 116              	.LVL14:
3253:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 117              		.loc 1 3253 0
 118 0010 048C     		ldrh	r4, [r0, #32]
 119 0012 A4B2     		uxth	r4, r4
 120              	.LVL15:
3254:FWLIB/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 121              		.loc 1 3254 0
 122 0014 0901     		lsls	r1, r1, #4
 123              	.LVL16:
 124 0016 89B2     		uxth	r1, r1
 125              	.LVL17:
3255:FWLIB/src/stm32f4xx_tim.c **** 
3256:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3257:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 126              		.loc 1 3257 0
 127 0018 25F44075 		bic	r5, r5, #768
 128              	.LVL18:
 129 001c 2D05     		lsls	r5, r5, #20
 130 001e 2D0D     		lsrs	r5, r5, #20
 131              	.LVL19:
3258:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 132              		.loc 1 3258 0
 133 0020 1B03     		lsls	r3, r3, #12
 134              	.LVL20:
 135 0022 9BB2     		uxth	r3, r3
 136 0024 1D43     		orrs	r5, r5, r3
 137              	.LVL21:
3259:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 138              		.loc 1 3259 0
 139 0026 1202     		lsls	r2, r2, #8
 140              	.LVL22:
 141 0028 92B2     		uxth	r2, r2
 142 002a 1543     		orrs	r5, r5, r2
 143              	.LVL23:
3260:FWLIB/src/stm32f4xx_tim.c **** 
3261:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3262:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 144              		.loc 1 3262 0
 145 002c 24F0A004 		bic	r4, r4, #160
 146              	.LVL24:
3263:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 147              		.loc 1 3263 0
 148 0030 0C43     		orrs	r4, r4, r1
 149              	.LVL25:
 150 0032 44F01004 		orr	r4, r4, #16
 151              	.LVL26:
3264:FWLIB/src/stm32f4xx_tim.c **** 
3265:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3266:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 152              		.loc 1 3266 0
 153 0036 0583     		strh	r5, [r0, #24]	@ movhi
3267:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 154              		.loc 1 3267 0
 155 0038 0484     		strh	r4, [r0, #32]	@ movhi
3268:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  /tmp/ccses48D.s 			page 61


 156              		.loc 1 3268 0
 157 003a 30BC     		pop	{r4, r5}
 158              	.LCFI3:
 159              		.cfi_restore 5
 160              		.cfi_restore 4
 161              		.cfi_def_cfa_offset 0
 162              	.LVL27:
 163 003c 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE212:
 167              		.section	.text.TI3_Config,"ax",%progbits
 168              		.align	1
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv4-sp-d16
 174              	TI3_Config:
 175              	.LFB213:
3269:FWLIB/src/stm32f4xx_tim.c **** 
3270:FWLIB/src/stm32f4xx_tim.c **** /**
3271:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configure the TI3 as Input.
3272:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3273:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3274:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3275:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3276:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3277:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3278:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3279:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3280:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3281:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3282:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3283:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3284:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3285:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3286:FWLIB/src/stm32f4xx_tim.c ****   */
3287:FWLIB/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3288:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3289:FWLIB/src/stm32f4xx_tim.c **** {
 176              		.loc 1 3289 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 181              	.LVL28:
 182 0000 30B4     		push	{r4, r5}
 183              	.LCFI4:
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 5, -4
 187              	.LVL29:
3290:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
3291:FWLIB/src/stm32f4xx_tim.c **** 
3292:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3293:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 188              		.loc 1 3293 0
 189 0002 048C     		ldrh	r4, [r0, #32]
ARM GAS  /tmp/ccses48D.s 			page 62


 190 0004 A4B2     		uxth	r4, r4
 191 0006 24F48074 		bic	r4, r4, #256
 192 000a A4B2     		uxth	r4, r4
 193 000c 0484     		strh	r4, [r0, #32]	@ movhi
3294:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 194              		.loc 1 3294 0
 195 000e 858B     		ldrh	r5, [r0, #28]
 196 0010 ADB2     		uxth	r5, r5
 197              	.LVL30:
3295:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 198              		.loc 1 3295 0
 199 0012 048C     		ldrh	r4, [r0, #32]
 200 0014 A4B2     		uxth	r4, r4
 201              	.LVL31:
3296:FWLIB/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 202              		.loc 1 3296 0
 203 0016 0902     		lsls	r1, r1, #8
 204              	.LVL32:
 205 0018 89B2     		uxth	r1, r1
 206              	.LVL33:
3297:FWLIB/src/stm32f4xx_tim.c **** 
3298:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3299:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 207              		.loc 1 3299 0
 208 001a 25F0F305 		bic	r5, r5, #243
 209              	.LVL34:
3300:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 210              		.loc 1 3300 0
 211 001e 1B01     		lsls	r3, r3, #4
 212              	.LVL35:
 213 0020 9BB2     		uxth	r3, r3
 214 0022 1A43     		orrs	r2, r2, r3
 215              	.LVL36:
 216 0024 1543     		orrs	r5, r5, r2
 217              	.LVL37:
3301:FWLIB/src/stm32f4xx_tim.c **** 
3302:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3303:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 218              		.loc 1 3303 0
 219 0026 24F42064 		bic	r4, r4, #2560
 220              	.LVL38:
3304:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 221              		.loc 1 3304 0
 222 002a 0C43     		orrs	r4, r4, r1
 223              	.LVL39:
 224 002c 44F48074 		orr	r4, r4, #256
 225              	.LVL40:
3305:FWLIB/src/stm32f4xx_tim.c **** 
3306:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3307:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 226              		.loc 1 3307 0
 227 0030 8583     		strh	r5, [r0, #28]	@ movhi
3308:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 228              		.loc 1 3308 0
 229 0032 0484     		strh	r4, [r0, #32]	@ movhi
3309:FWLIB/src/stm32f4xx_tim.c **** }
 230              		.loc 1 3309 0
ARM GAS  /tmp/ccses48D.s 			page 63


 231 0034 30BC     		pop	{r4, r5}
 232              	.LCFI5:
 233              		.cfi_restore 5
 234              		.cfi_restore 4
 235              		.cfi_def_cfa_offset 0
 236              	.LVL41:
 237 0036 7047     		bx	lr
 238              		.cfi_endproc
 239              	.LFE213:
 241              		.section	.text.TI4_Config,"ax",%progbits
 242              		.align	1
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.fpu fpv4-sp-d16
 248              	TI4_Config:
 249              	.LFB214:
3310:FWLIB/src/stm32f4xx_tim.c **** 
3311:FWLIB/src/stm32f4xx_tim.c **** /**
3312:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configure the TI4 as Input.
3313:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3314:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3315:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3316:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3317:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3318:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3319:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3320:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3321:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3322:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3323:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3324:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3325:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3326:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3327:FWLIB/src/stm32f4xx_tim.c ****   */
3328:FWLIB/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3329:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3330:FWLIB/src/stm32f4xx_tim.c **** {
 250              		.loc 1 3330 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255              	.LVL42:
 256 0000 30B4     		push	{r4, r5}
 257              	.LCFI6:
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 4, -8
 260              		.cfi_offset 5, -4
 261              	.LVL43:
3331:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
3332:FWLIB/src/stm32f4xx_tim.c **** 
3333:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3334:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 262              		.loc 1 3334 0
 263 0002 048C     		ldrh	r4, [r0, #32]
 264 0004 A4B2     		uxth	r4, r4
ARM GAS  /tmp/ccses48D.s 			page 64


 265 0006 24F48054 		bic	r4, r4, #4096
 266 000a A4B2     		uxth	r4, r4
 267 000c 0484     		strh	r4, [r0, #32]	@ movhi
3335:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 268              		.loc 1 3335 0
 269 000e 848B     		ldrh	r4, [r0, #28]
 270              	.LVL44:
3336:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 271              		.loc 1 3336 0
 272 0010 058C     		ldrh	r5, [r0, #32]
 273              	.LVL45:
3337:FWLIB/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 274              		.loc 1 3337 0
 275 0012 0903     		lsls	r1, r1, #12
 276              	.LVL46:
 277 0014 89B2     		uxth	r1, r1
 278              	.LVL47:
3338:FWLIB/src/stm32f4xx_tim.c **** 
3339:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3340:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 279              		.loc 1 3340 0
 280 0016 24F44074 		bic	r4, r4, #768
 281              	.LVL48:
 282 001a 2405     		lsls	r4, r4, #20
 283 001c 240D     		lsrs	r4, r4, #20
 284              	.LVL49:
3341:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 285              		.loc 1 3341 0
 286 001e 1202     		lsls	r2, r2, #8
 287              	.LVL50:
 288 0020 92B2     		uxth	r2, r2
 289 0022 1443     		orrs	r4, r4, r2
 290              	.LVL51:
3342:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 291              		.loc 1 3342 0
 292 0024 1B03     		lsls	r3, r3, #12
 293              	.LVL52:
 294 0026 9BB2     		uxth	r3, r3
 295 0028 1C43     		orrs	r4, r4, r3
 296              	.LVL53:
3343:FWLIB/src/stm32f4xx_tim.c **** 
3344:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3345:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 297              		.loc 1 3345 0
 298 002a 25F40055 		bic	r5, r5, #8192
 299              	.LVL54:
 300 002e 6D04     		lsls	r5, r5, #17
 301 0030 6D0C     		lsrs	r5, r5, #17
 302              	.LVL55:
3346:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 303              		.loc 1 3346 0
 304 0032 2943     		orrs	r1, r1, r5
 305              	.LVL56:
 306 0034 41F48051 		orr	r1, r1, #4096
 307              	.LVL57:
3347:FWLIB/src/stm32f4xx_tim.c **** 
3348:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
ARM GAS  /tmp/ccses48D.s 			page 65


3349:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 308              		.loc 1 3349 0
 309 0038 8483     		strh	r4, [r0, #28]	@ movhi
3350:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer ;
 310              		.loc 1 3350 0
 311 003a 0184     		strh	r1, [r0, #32]	@ movhi
3351:FWLIB/src/stm32f4xx_tim.c **** }
 312              		.loc 1 3351 0
 313 003c 30BC     		pop	{r4, r5}
 314              	.LCFI7:
 315              		.cfi_restore 5
 316              		.cfi_restore 4
 317              		.cfi_def_cfa_offset 0
 318              	.LVL58:
 319 003e 7047     		bx	lr
 320              		.cfi_endproc
 321              	.LFE214:
 323              		.section	.text.TIM_DeInit,"ax",%progbits
 324              		.align	1
 325              		.global	TIM_DeInit
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu fpv4-sp-d16
 331              	TIM_DeInit:
 332              	.LFB123:
 201:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 333              		.loc 1 201 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              	.LVL59:
 338 0000 08B5     		push	{r3, lr}
 339              	.LCFI8:
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 3, -8
 342              		.cfi_offset 14, -4
 205:FWLIB/src/stm32f4xx_tim.c ****   {
 343              		.loc 1 205 0
 344 0002 584B     		ldr	r3, .L39
 345 0004 9842     		cmp	r0, r3
 346 0006 27D0     		beq	.L25
 210:FWLIB/src/stm32f4xx_tim.c ****   {     
 347              		.loc 1 210 0
 348 0008 B0F1804F 		cmp	r0, #1073741824
 349 000c 2DD0     		beq	.L26
 215:FWLIB/src/stm32f4xx_tim.c ****   { 
 350              		.loc 1 215 0
 351 000e 564B     		ldr	r3, .L39+4
 352 0010 9842     		cmp	r0, r3
 353 0012 33D0     		beq	.L27
 220:FWLIB/src/stm32f4xx_tim.c ****   { 
 354              		.loc 1 220 0
 355 0014 554B     		ldr	r3, .L39+8
 356 0016 9842     		cmp	r0, r3
 357 0018 39D0     		beq	.L28
 225:FWLIB/src/stm32f4xx_tim.c ****   {      
ARM GAS  /tmp/ccses48D.s 			page 66


 358              		.loc 1 225 0
 359 001a 554B     		ldr	r3, .L39+12
 360 001c 9842     		cmp	r0, r3
 361 001e 3FD0     		beq	.L29
 230:FWLIB/src/stm32f4xx_tim.c ****   {    
 362              		.loc 1 230 0
 363 0020 544B     		ldr	r3, .L39+16
 364 0022 9842     		cmp	r0, r3
 365 0024 45D0     		beq	.L30
 235:FWLIB/src/stm32f4xx_tim.c ****   {      
 366              		.loc 1 235 0
 367 0026 544B     		ldr	r3, .L39+20
 368 0028 9842     		cmp	r0, r3
 369 002a 4BD0     		beq	.L31
 240:FWLIB/src/stm32f4xx_tim.c ****   {      
 370              		.loc 1 240 0
 371 002c 534B     		ldr	r3, .L39+24
 372 002e 9842     		cmp	r0, r3
 373 0030 51D0     		beq	.L32
 245:FWLIB/src/stm32f4xx_tim.c ****   {      
 374              		.loc 1 245 0
 375 0032 534B     		ldr	r3, .L39+28
 376 0034 9842     		cmp	r0, r3
 377 0036 57D0     		beq	.L33
 250:FWLIB/src/stm32f4xx_tim.c ****   {      
 378              		.loc 1 250 0
 379 0038 524B     		ldr	r3, .L39+32
 380 003a 9842     		cmp	r0, r3
 381 003c 5FD0     		beq	.L34
 255:FWLIB/src/stm32f4xx_tim.c ****   {     
 382              		.loc 1 255 0
 383 003e 524B     		ldr	r3, .L39+36
 384 0040 9842     		cmp	r0, r3
 385 0042 67D0     		beq	.L35
 260:FWLIB/src/stm32f4xx_tim.c ****   {      
 386              		.loc 1 260 0
 387 0044 514B     		ldr	r3, .L39+40
 388 0046 9842     		cmp	r0, r3
 389 0048 6FD0     		beq	.L36
 265:FWLIB/src/stm32f4xx_tim.c ****   {       
 390              		.loc 1 265 0
 391 004a 514B     		ldr	r3, .L39+44
 392 004c 9842     		cmp	r0, r3
 393 004e 75D0     		beq	.L37
 272:FWLIB/src/stm32f4xx_tim.c ****     {     
 394              		.loc 1 272 0
 395 0050 504B     		ldr	r3, .L39+48
 396 0052 9842     		cmp	r0, r3
 397 0054 7BD0     		beq	.L38
 398              	.LVL60:
 399              	.L9:
 400 0056 08BD     		pop	{r3, pc}
 401              	.LVL61:
 402              	.L25:
 207:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 403              		.loc 1 207 0
 404 0058 0121     		movs	r1, #1
ARM GAS  /tmp/ccses48D.s 			page 67


 405 005a 0846     		mov	r0, r1
 406              	.LVL62:
 407 005c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 408              	.LVL63:
 208:FWLIB/src/stm32f4xx_tim.c ****   } 
 409              		.loc 1 208 0
 410 0060 0021     		movs	r1, #0
 411 0062 0120     		movs	r0, #1
 412 0064 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 413              	.LVL64:
 414 0068 08BD     		pop	{r3, pc}
 415              	.LVL65:
 416              	.L26:
 212:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 417              		.loc 1 212 0
 418 006a 0121     		movs	r1, #1
 419 006c 0846     		mov	r0, r1
 420              	.LVL66:
 421 006e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 422              	.LVL67:
 213:FWLIB/src/stm32f4xx_tim.c ****   }  
 423              		.loc 1 213 0
 424 0072 0021     		movs	r1, #0
 425 0074 0120     		movs	r0, #1
 426 0076 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 427              	.LVL68:
 428 007a 08BD     		pop	{r3, pc}
 429              	.LVL69:
 430              	.L27:
 217:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 431              		.loc 1 217 0
 432 007c 0121     		movs	r1, #1
 433 007e 0220     		movs	r0, #2
 434              	.LVL70:
 435 0080 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 436              	.LVL71:
 218:FWLIB/src/stm32f4xx_tim.c ****   }  
 437              		.loc 1 218 0
 438 0084 0021     		movs	r1, #0
 439 0086 0220     		movs	r0, #2
 440 0088 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 441              	.LVL72:
 442 008c 08BD     		pop	{r3, pc}
 443              	.LVL73:
 444              	.L28:
 222:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 445              		.loc 1 222 0
 446 008e 0121     		movs	r1, #1
 447 0090 0420     		movs	r0, #4
 448              	.LVL74:
 449 0092 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 450              	.LVL75:
 223:FWLIB/src/stm32f4xx_tim.c ****   }  
 451              		.loc 1 223 0
 452 0096 0021     		movs	r1, #0
 453 0098 0420     		movs	r0, #4
 454 009a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
ARM GAS  /tmp/ccses48D.s 			page 68


 455              	.LVL76:
 456 009e 08BD     		pop	{r3, pc}
 457              	.LVL77:
 458              	.L29:
 227:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 459              		.loc 1 227 0
 460 00a0 0121     		movs	r1, #1
 461 00a2 0820     		movs	r0, #8
 462              	.LVL78:
 463 00a4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 464              	.LVL79:
 228:FWLIB/src/stm32f4xx_tim.c ****   }  
 465              		.loc 1 228 0
 466 00a8 0021     		movs	r1, #0
 467 00aa 0820     		movs	r0, #8
 468 00ac FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 469              	.LVL80:
 470 00b0 08BD     		pop	{r3, pc}
 471              	.LVL81:
 472              	.L30:
 232:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 473              		.loc 1 232 0
 474 00b2 0121     		movs	r1, #1
 475 00b4 1020     		movs	r0, #16
 476              	.LVL82:
 477 00b6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 478              	.LVL83:
 233:FWLIB/src/stm32f4xx_tim.c ****   }  
 479              		.loc 1 233 0
 480 00ba 0021     		movs	r1, #0
 481 00bc 1020     		movs	r0, #16
 482 00be FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 483              	.LVL84:
 484 00c2 08BD     		pop	{r3, pc}
 485              	.LVL85:
 486              	.L31:
 237:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 487              		.loc 1 237 0
 488 00c4 0121     		movs	r1, #1
 489 00c6 2020     		movs	r0, #32
 490              	.LVL86:
 491 00c8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 492              	.LVL87:
 238:FWLIB/src/stm32f4xx_tim.c ****   }  
 493              		.loc 1 238 0
 494 00cc 0021     		movs	r1, #0
 495 00ce 2020     		movs	r0, #32
 496 00d0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 497              	.LVL88:
 498 00d4 08BD     		pop	{r3, pc}
 499              	.LVL89:
 500              	.L32:
 242:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 501              		.loc 1 242 0
 502 00d6 0121     		movs	r1, #1
 503 00d8 0220     		movs	r0, #2
 504              	.LVL90:
ARM GAS  /tmp/ccses48D.s 			page 69


 505 00da FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 506              	.LVL91:
 243:FWLIB/src/stm32f4xx_tim.c ****   }  
 507              		.loc 1 243 0
 508 00de 0021     		movs	r1, #0
 509 00e0 0220     		movs	r0, #2
 510 00e2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 511              	.LVL92:
 512 00e6 08BD     		pop	{r3, pc}
 513              	.LVL93:
 514              	.L33:
 247:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 515              		.loc 1 247 0
 516 00e8 0121     		movs	r1, #1
 517 00ea 4FF48030 		mov	r0, #65536
 518              	.LVL94:
 519 00ee FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 520              	.LVL95:
 248:FWLIB/src/stm32f4xx_tim.c ****    }  
 521              		.loc 1 248 0
 522 00f2 0021     		movs	r1, #0
 523 00f4 4FF48030 		mov	r0, #65536
 524 00f8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 525              	.LVL96:
 526 00fc 08BD     		pop	{r3, pc}
 527              	.LVL97:
 528              	.L34:
 252:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 529              		.loc 1 252 0
 530 00fe 0121     		movs	r1, #1
 531 0100 4FF40030 		mov	r0, #131072
 532              	.LVL98:
 533 0104 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 534              	.LVL99:
 253:FWLIB/src/stm32f4xx_tim.c ****   }  
 535              		.loc 1 253 0
 536 0108 0021     		movs	r1, #0
 537 010a 4FF40030 		mov	r0, #131072
 538 010e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 539              	.LVL100:
 540 0112 08BD     		pop	{r3, pc}
 541              	.LVL101:
 542              	.L35:
 257:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 543              		.loc 1 257 0
 544 0114 0121     		movs	r1, #1
 545 0116 4FF48020 		mov	r0, #262144
 546              	.LVL102:
 547 011a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 548              	.LVL103:
 258:FWLIB/src/stm32f4xx_tim.c ****   }  
 549              		.loc 1 258 0
 550 011e 0021     		movs	r1, #0
 551 0120 4FF48020 		mov	r0, #262144
 552 0124 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 553              	.LVL104:
 554 0128 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccses48D.s 			page 70


 555              	.LVL105:
 556              	.L36:
 262:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 557              		.loc 1 262 0
 558 012a 0121     		movs	r1, #1
 559 012c 4020     		movs	r0, #64
 560              	.LVL106:
 561 012e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 562              	.LVL107:
 263:FWLIB/src/stm32f4xx_tim.c ****   }  
 563              		.loc 1 263 0
 564 0132 0021     		movs	r1, #0
 565 0134 4020     		movs	r0, #64
 566 0136 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 567              	.LVL108:
 568 013a 08BD     		pop	{r3, pc}
 569              	.LVL109:
 570              	.L37:
 267:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 571              		.loc 1 267 0
 572 013c 0121     		movs	r1, #1
 573 013e 8020     		movs	r0, #128
 574              	.LVL110:
 575 0140 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 576              	.LVL111:
 268:FWLIB/src/stm32f4xx_tim.c ****   }  
 577              		.loc 1 268 0
 578 0144 0021     		movs	r1, #0
 579 0146 8020     		movs	r0, #128
 580 0148 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 581              	.LVL112:
 582 014c 08BD     		pop	{r3, pc}
 583              	.LVL113:
 584              	.L38:
 274:FWLIB/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 585              		.loc 1 274 0
 586 014e 0121     		movs	r1, #1
 587 0150 4FF48070 		mov	r0, #256
 588              	.LVL114:
 589 0154 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 590              	.LVL115:
 275:FWLIB/src/stm32f4xx_tim.c ****     }   
 591              		.loc 1 275 0
 592 0158 0021     		movs	r1, #0
 593 015a 4FF48070 		mov	r0, #256
 594 015e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 595              	.LVL116:
 278:FWLIB/src/stm32f4xx_tim.c **** 
 596              		.loc 1 278 0
 597 0162 78E7     		b	.L9
 598              	.L40:
 599              		.align	2
 600              	.L39:
 601 0164 00000140 		.word	1073807360
 602 0168 00040040 		.word	1073742848
 603 016c 00080040 		.word	1073743872
 604 0170 000C0040 		.word	1073744896
ARM GAS  /tmp/ccses48D.s 			page 71


 605 0174 00100040 		.word	1073745920
 606 0178 00140040 		.word	1073746944
 607 017c 00040140 		.word	1073808384
 608 0180 00400140 		.word	1073823744
 609 0184 00440140 		.word	1073824768
 610 0188 00480140 		.word	1073825792
 611 018c 00180040 		.word	1073747968
 612 0190 001C0040 		.word	1073748992
 613 0194 00200040 		.word	1073750016
 614              		.cfi_endproc
 615              	.LFE123:
 617              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 618              		.align	1
 619              		.global	TIM_TimeBaseInit
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 623              		.fpu fpv4-sp-d16
 625              	TIM_TimeBaseInit:
 626              	.LFB124:
 289:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 627              		.loc 1 289 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		@ link register save eliminated.
 632              	.LVL117:
 297:FWLIB/src/stm32f4xx_tim.c **** 
 633              		.loc 1 297 0
 634 0000 0388     		ldrh	r3, [r0]
 635 0002 9BB2     		uxth	r3, r3
 636              	.LVL118:
 299:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 637              		.loc 1 299 0
 638 0004 1B4A     		ldr	r2, .L47
 639 0006 9042     		cmp	r0, r2
 640 0008 12D0     		beq	.L42
 299:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 641              		.loc 1 299 0 is_stmt 0 discriminator 1
 642 000a 02F58062 		add	r2, r2, #1024
 643 000e 9042     		cmp	r0, r2
 644 0010 0ED0     		beq	.L42
 299:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 645              		.loc 1 299 0 discriminator 2
 646 0012 B0F1804F 		cmp	r0, #1073741824
 647 0016 0BD0     		beq	.L42
 300:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 648              		.loc 1 300 0 is_stmt 1
 649 0018 A2F58032 		sub	r2, r2, #65536
 650 001c 9042     		cmp	r0, r2
 651 001e 07D0     		beq	.L42
 300:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 652              		.loc 1 300 0 is_stmt 0 discriminator 1
 653 0020 02F58062 		add	r2, r2, #1024
 654 0024 9042     		cmp	r0, r2
 655 0026 03D0     		beq	.L42
 301:FWLIB/src/stm32f4xx_tim.c ****   {
ARM GAS  /tmp/ccses48D.s 			page 72


 656              		.loc 1 301 0 is_stmt 1
 657 0028 02F58062 		add	r2, r2, #1024
 658 002c 9042     		cmp	r0, r2
 659 002e 03D1     		bne	.L43
 660              	.L42:
 304:FWLIB/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 661              		.loc 1 304 0
 662 0030 23F07003 		bic	r3, r3, #112
 663              	.LVL119:
 305:FWLIB/src/stm32f4xx_tim.c ****   }
 664              		.loc 1 305 0
 665 0034 4A88     		ldrh	r2, [r1, #2]
 666 0036 1343     		orrs	r3, r3, r2
 667              	.LVL120:
 668              	.L43:
 308:FWLIB/src/stm32f4xx_tim.c ****   {
 669              		.loc 1 308 0
 670 0038 0F4A     		ldr	r2, .L47+4
 671 003a 9042     		cmp	r0, r2
 672 003c 08D0     		beq	.L44
 308:FWLIB/src/stm32f4xx_tim.c ****   {
 673              		.loc 1 308 0 is_stmt 0 discriminator 1
 674 003e 02F58062 		add	r2, r2, #1024
 675 0042 9042     		cmp	r0, r2
 676 0044 04D0     		beq	.L44
 311:FWLIB/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 677              		.loc 1 311 0 is_stmt 1
 678 0046 23F44073 		bic	r3, r3, #768
 679              	.LVL121:
 680 004a 9BB2     		uxth	r3, r3
 681              	.LVL122:
 312:FWLIB/src/stm32f4xx_tim.c ****   }
 682              		.loc 1 312 0
 683 004c 0A89     		ldrh	r2, [r1, #8]
 684 004e 1343     		orrs	r3, r3, r2
 685              	.LVL123:
 686              	.L44:
 315:FWLIB/src/stm32f4xx_tim.c **** 
 687              		.loc 1 315 0
 688 0050 0380     		strh	r3, [r0]	@ movhi
 318:FWLIB/src/stm32f4xx_tim.c ****  
 689              		.loc 1 318 0
 690 0052 4B68     		ldr	r3, [r1, #4]
 691              	.LVL124:
 692 0054 C362     		str	r3, [r0, #44]
 693              	.LVL125:
 321:FWLIB/src/stm32f4xx_tim.c ****     
 694              		.loc 1 321 0
 695 0056 0B88     		ldrh	r3, [r1]
 696 0058 0385     		strh	r3, [r0, #40]	@ movhi
 323:FWLIB/src/stm32f4xx_tim.c ****   {
 697              		.loc 1 323 0
 698 005a 064B     		ldr	r3, .L47
 699 005c 9842     		cmp	r0, r3
 700 005e 06D0     		beq	.L45
 323:FWLIB/src/stm32f4xx_tim.c ****   {
 701              		.loc 1 323 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccses48D.s 			page 73


 702 0060 03F58063 		add	r3, r3, #1024
 703 0064 9842     		cmp	r0, r3
 704 0066 02D0     		beq	.L45
 705              	.L46:
 331:FWLIB/src/stm32f4xx_tim.c **** }
 706              		.loc 1 331 0 is_stmt 1
 707 0068 0123     		movs	r3, #1
 708 006a 8382     		strh	r3, [r0, #20]	@ movhi
 709 006c 7047     		bx	lr
 710              	.L45:
 326:FWLIB/src/stm32f4xx_tim.c ****   }
 711              		.loc 1 326 0
 712 006e 8B7A     		ldrb	r3, [r1, #10]	@ zero_extendqisi2
 713 0070 0386     		strh	r3, [r0, #48]	@ movhi
 714 0072 F9E7     		b	.L46
 715              	.L48:
 716              		.align	2
 717              	.L47:
 718 0074 00000140 		.word	1073807360
 719 0078 00100040 		.word	1073745920
 720              		.cfi_endproc
 721              	.LFE124:
 723              		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 724              		.align	1
 725              		.global	TIM_TimeBaseStructInit
 726              		.syntax unified
 727              		.thumb
 728              		.thumb_func
 729              		.fpu fpv4-sp-d16
 731              	TIM_TimeBaseStructInit:
 732              	.LFB125:
 341:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 733              		.loc 1 341 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              		@ link register save eliminated.
 738              	.LVL126:
 343:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 739              		.loc 1 343 0
 740 0000 4FF0FF33 		mov	r3, #-1
 741 0004 4360     		str	r3, [r0, #4]
 344:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 742              		.loc 1 344 0
 743 0006 0023     		movs	r3, #0
 744 0008 0380     		strh	r3, [r0]	@ movhi
 345:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 745              		.loc 1 345 0
 746 000a 0381     		strh	r3, [r0, #8]	@ movhi
 346:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 747              		.loc 1 346 0
 748 000c 4380     		strh	r3, [r0, #2]	@ movhi
 347:FWLIB/src/stm32f4xx_tim.c **** }
 749              		.loc 1 347 0
 750 000e 8372     		strb	r3, [r0, #10]
 751 0010 7047     		bx	lr
 752              		.cfi_endproc
ARM GAS  /tmp/ccses48D.s 			page 74


 753              	.LFE125:
 755              		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 756              		.align	1
 757              		.global	TIM_PrescalerConfig
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu fpv4-sp-d16
 763              	TIM_PrescalerConfig:
 764              	.LFB126:
 361:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 765              		.loc 1 361 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 770              	.LVL127:
 366:FWLIB/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 771              		.loc 1 366 0
 772 0000 0185     		strh	r1, [r0, #40]	@ movhi
 368:FWLIB/src/stm32f4xx_tim.c **** }
 773              		.loc 1 368 0
 774 0002 8282     		strh	r2, [r0, #20]	@ movhi
 775 0004 7047     		bx	lr
 776              		.cfi_endproc
 777              	.LFE126:
 779              		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 780              		.align	1
 781              		.global	TIM_CounterModeConfig
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 785              		.fpu fpv4-sp-d16
 787              	TIM_CounterModeConfig:
 788              	.LFB127:
 384:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 789              		.loc 1 384 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794              	.LVL128:
 391:FWLIB/src/stm32f4xx_tim.c **** 
 795              		.loc 1 391 0
 796 0000 0388     		ldrh	r3, [r0]
 797 0002 9BB2     		uxth	r3, r3
 798              	.LVL129:
 394:FWLIB/src/stm32f4xx_tim.c **** 
 799              		.loc 1 394 0
 800 0004 23F07003 		bic	r3, r3, #112
 801              	.LVL130:
 397:FWLIB/src/stm32f4xx_tim.c **** 
 802              		.loc 1 397 0
 803 0008 1943     		orrs	r1, r1, r3
 804              	.LVL131:
 400:FWLIB/src/stm32f4xx_tim.c **** }
 805              		.loc 1 400 0
ARM GAS  /tmp/ccses48D.s 			page 75


 806 000a 0180     		strh	r1, [r0]	@ movhi
 807 000c 7047     		bx	lr
 808              		.cfi_endproc
 809              	.LFE127:
 811              		.section	.text.TIM_SetCounter,"ax",%progbits
 812              		.align	1
 813              		.global	TIM_SetCounter
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 817              		.fpu fpv4-sp-d16
 819              	TIM_SetCounter:
 820              	.LFB128:
 410:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 821              		.loc 1 410 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825              		@ link register save eliminated.
 826              	.LVL132:
 415:FWLIB/src/stm32f4xx_tim.c **** }
 827              		.loc 1 415 0
 828 0000 4162     		str	r1, [r0, #36]
 829 0002 7047     		bx	lr
 830              		.cfi_endproc
 831              	.LFE128:
 833              		.section	.text.TIM_SetAutoreload,"ax",%progbits
 834              		.align	1
 835              		.global	TIM_SetAutoreload
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 839              		.fpu fpv4-sp-d16
 841              	TIM_SetAutoreload:
 842              	.LFB129:
 425:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 843              		.loc 1 425 0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 0
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847              		@ link register save eliminated.
 848              	.LVL133:
 430:FWLIB/src/stm32f4xx_tim.c **** }
 849              		.loc 1 430 0
 850 0000 C162     		str	r1, [r0, #44]
 851 0002 7047     		bx	lr
 852              		.cfi_endproc
 853              	.LFE129:
 855              		.section	.text.TIM_GetCounter,"ax",%progbits
 856              		.align	1
 857              		.global	TIM_GetCounter
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 861              		.fpu fpv4-sp-d16
 863              	TIM_GetCounter:
 864              	.LFB130:
ARM GAS  /tmp/ccses48D.s 			page 76


 439:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 865              		.loc 1 439 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870              	.LVL134:
 444:FWLIB/src/stm32f4xx_tim.c **** }
 871              		.loc 1 444 0
 872 0000 406A     		ldr	r0, [r0, #36]
 873              	.LVL135:
 445:FWLIB/src/stm32f4xx_tim.c **** 
 874              		.loc 1 445 0
 875 0002 7047     		bx	lr
 876              		.cfi_endproc
 877              	.LFE130:
 879              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 880              		.align	1
 881              		.global	TIM_GetPrescaler
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 885              		.fpu fpv4-sp-d16
 887              	TIM_GetPrescaler:
 888              	.LFB131:
 453:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 889              		.loc 1 453 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              		@ link register save eliminated.
 894              	.LVL136:
 458:FWLIB/src/stm32f4xx_tim.c **** }
 895              		.loc 1 458 0
 896 0000 008D     		ldrh	r0, [r0, #40]
 897              	.LVL137:
 459:FWLIB/src/stm32f4xx_tim.c **** 
 898              		.loc 1 459 0
 899 0002 80B2     		uxth	r0, r0
 900 0004 7047     		bx	lr
 901              		.cfi_endproc
 902              	.LFE131:
 904              		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 905              		.align	1
 906              		.global	TIM_UpdateDisableConfig
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 910              		.fpu fpv4-sp-d16
 912              	TIM_UpdateDisableConfig:
 913              	.LFB132:
 469:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 914              		.loc 1 469 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              		@ link register save eliminated.
ARM GAS  /tmp/ccses48D.s 			page 77


 919              	.LVL138:
 474:FWLIB/src/stm32f4xx_tim.c ****   {
 920              		.loc 1 474 0
 921 0000 31B9     		cbnz	r1, .L59
 482:FWLIB/src/stm32f4xx_tim.c ****   }
 922              		.loc 1 482 0
 923 0002 0388     		ldrh	r3, [r0]
 924 0004 9BB2     		uxth	r3, r3
 925 0006 23F00203 		bic	r3, r3, #2
 926 000a 9BB2     		uxth	r3, r3
 927 000c 0380     		strh	r3, [r0]	@ movhi
 928 000e 7047     		bx	lr
 929              	.L59:
 477:FWLIB/src/stm32f4xx_tim.c ****   }
 930              		.loc 1 477 0
 931 0010 0388     		ldrh	r3, [r0]
 932 0012 9BB2     		uxth	r3, r3
 933 0014 43F00203 		orr	r3, r3, #2
 934 0018 0380     		strh	r3, [r0]	@ movhi
 935 001a 7047     		bx	lr
 936              		.cfi_endproc
 937              	.LFE132:
 939              		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 940              		.align	1
 941              		.global	TIM_UpdateRequestConfig
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu fpv4-sp-d16
 947              	TIM_UpdateRequestConfig:
 948              	.LFB133:
 498:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 949              		.loc 1 498 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 0
 952              		@ frame_needed = 0, uses_anonymous_args = 0
 953              		@ link register save eliminated.
 954              	.LVL139:
 503:FWLIB/src/stm32f4xx_tim.c ****   {
 955              		.loc 1 503 0
 956 0000 31B9     		cbnz	r1, .L63
 511:FWLIB/src/stm32f4xx_tim.c ****   }
 957              		.loc 1 511 0
 958 0002 0388     		ldrh	r3, [r0]
 959 0004 9BB2     		uxth	r3, r3
 960 0006 23F00403 		bic	r3, r3, #4
 961 000a 9BB2     		uxth	r3, r3
 962 000c 0380     		strh	r3, [r0]	@ movhi
 963 000e 7047     		bx	lr
 964              	.L63:
 506:FWLIB/src/stm32f4xx_tim.c ****   }
 965              		.loc 1 506 0
 966 0010 0388     		ldrh	r3, [r0]
 967 0012 9BB2     		uxth	r3, r3
 968 0014 43F00403 		orr	r3, r3, #4
 969 0018 0380     		strh	r3, [r0]	@ movhi
 970 001a 7047     		bx	lr
ARM GAS  /tmp/ccses48D.s 			page 78


 971              		.cfi_endproc
 972              	.LFE133:
 974              		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 975              		.align	1
 976              		.global	TIM_ARRPreloadConfig
 977              		.syntax unified
 978              		.thumb
 979              		.thumb_func
 980              		.fpu fpv4-sp-d16
 982              	TIM_ARRPreloadConfig:
 983              	.LFB134:
 523:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 984              		.loc 1 523 0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 988              		@ link register save eliminated.
 989              	.LVL140:
 528:FWLIB/src/stm32f4xx_tim.c ****   {
 990              		.loc 1 528 0
 991 0000 31B9     		cbnz	r1, .L67
 536:FWLIB/src/stm32f4xx_tim.c ****   }
 992              		.loc 1 536 0
 993 0002 0388     		ldrh	r3, [r0]
 994 0004 9BB2     		uxth	r3, r3
 995 0006 23F08003 		bic	r3, r3, #128
 996 000a 9BB2     		uxth	r3, r3
 997 000c 0380     		strh	r3, [r0]	@ movhi
 998 000e 7047     		bx	lr
 999              	.L67:
 531:FWLIB/src/stm32f4xx_tim.c ****   }
 1000              		.loc 1 531 0
 1001 0010 0388     		ldrh	r3, [r0]
 1002 0012 9BB2     		uxth	r3, r3
 1003 0014 43F08003 		orr	r3, r3, #128
 1004 0018 0380     		strh	r3, [r0]	@ movhi
 1005 001a 7047     		bx	lr
 1006              		.cfi_endproc
 1007              	.LFE134:
 1009              		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 1010              		.align	1
 1011              		.global	TIM_SelectOnePulseMode
 1012              		.syntax unified
 1013              		.thumb
 1014              		.thumb_func
 1015              		.fpu fpv4-sp-d16
 1017              	TIM_SelectOnePulseMode:
 1018              	.LFB135:
 550:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1019              		.loc 1 550 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 1024              	.LVL141:
 556:FWLIB/src/stm32f4xx_tim.c **** 
 1025              		.loc 1 556 0
ARM GAS  /tmp/ccses48D.s 			page 79


 1026 0000 0388     		ldrh	r3, [r0]
 1027 0002 9BB2     		uxth	r3, r3
 1028 0004 23F00803 		bic	r3, r3, #8
 1029 0008 9BB2     		uxth	r3, r3
 1030 000a 0380     		strh	r3, [r0]	@ movhi
 559:FWLIB/src/stm32f4xx_tim.c **** }
 1031              		.loc 1 559 0
 1032 000c 0388     		ldrh	r3, [r0]
 1033 000e 9BB2     		uxth	r3, r3
 1034 0010 1943     		orrs	r1, r1, r3
 1035              	.LVL142:
 1036 0012 0180     		strh	r1, [r0]	@ movhi
 1037 0014 7047     		bx	lr
 1038              		.cfi_endproc
 1039              	.LFE135:
 1041              		.section	.text.TIM_SetClockDivision,"ax",%progbits
 1042              		.align	1
 1043              		.global	TIM_SetClockDivision
 1044              		.syntax unified
 1045              		.thumb
 1046              		.thumb_func
 1047              		.fpu fpv4-sp-d16
 1049              	TIM_SetClockDivision:
 1050              	.LFB136:
 573:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1051              		.loc 1 573 0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055              		@ link register save eliminated.
 1056              	.LVL143:
 579:FWLIB/src/stm32f4xx_tim.c **** 
 1057              		.loc 1 579 0
 1058 0000 0388     		ldrh	r3, [r0]
 1059 0002 9BB2     		uxth	r3, r3
 1060 0004 23F44073 		bic	r3, r3, #768
 1061 0008 9BB2     		uxth	r3, r3
 1062 000a 0380     		strh	r3, [r0]	@ movhi
 582:FWLIB/src/stm32f4xx_tim.c **** }
 1063              		.loc 1 582 0
 1064 000c 0388     		ldrh	r3, [r0]
 1065 000e 9BB2     		uxth	r3, r3
 1066 0010 1943     		orrs	r1, r1, r3
 1067              	.LVL144:
 1068 0012 0180     		strh	r1, [r0]	@ movhi
 1069 0014 7047     		bx	lr
 1070              		.cfi_endproc
 1071              	.LFE136:
 1073              		.section	.text.TIM_Cmd,"ax",%progbits
 1074              		.align	1
 1075              		.global	TIM_Cmd
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu fpv4-sp-d16
 1081              	TIM_Cmd:
 1082              	.LFB137:
ARM GAS  /tmp/ccses48D.s 			page 80


 593:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1083              		.loc 1 593 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
 1088              	.LVL145:
 598:FWLIB/src/stm32f4xx_tim.c ****   {
 1089              		.loc 1 598 0
 1090 0000 31B9     		cbnz	r1, .L73
 606:FWLIB/src/stm32f4xx_tim.c ****   }
 1091              		.loc 1 606 0
 1092 0002 0388     		ldrh	r3, [r0]
 1093 0004 9BB2     		uxth	r3, r3
 1094 0006 23F00103 		bic	r3, r3, #1
 1095 000a 9BB2     		uxth	r3, r3
 1096 000c 0380     		strh	r3, [r0]	@ movhi
 1097 000e 7047     		bx	lr
 1098              	.L73:
 601:FWLIB/src/stm32f4xx_tim.c ****   }
 1099              		.loc 1 601 0
 1100 0010 0388     		ldrh	r3, [r0]
 1101 0012 9BB2     		uxth	r3, r3
 1102 0014 43F00103 		orr	r3, r3, #1
 1103 0018 0380     		strh	r3, [r0]	@ movhi
 1104 001a 7047     		bx	lr
 1105              		.cfi_endproc
 1106              	.LFE137:
 1108              		.section	.text.TIM_OC1Init,"ax",%progbits
 1109              		.align	1
 1110              		.global	TIM_OC1Init
 1111              		.syntax unified
 1112              		.thumb
 1113              		.thumb_func
 1114              		.fpu fpv4-sp-d16
 1116              	TIM_OC1Init:
 1117              	.LFB138:
 674:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1118              		.loc 1 674 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              		@ link register save eliminated.
 1123              	.LVL146:
 1124 0000 30B4     		push	{r4, r5}
 1125              	.LCFI9:
 1126              		.cfi_def_cfa_offset 8
 1127              		.cfi_offset 4, -8
 1128              		.cfi_offset 5, -4
 1129              	.LVL147:
 684:FWLIB/src/stm32f4xx_tim.c ****   
 1130              		.loc 1 684 0
 1131 0002 038C     		ldrh	r3, [r0, #32]
 1132 0004 9BB2     		uxth	r3, r3
 1133 0006 23F00103 		bic	r3, r3, #1
 1134 000a 9BB2     		uxth	r3, r3
 1135 000c 0384     		strh	r3, [r0, #32]	@ movhi
ARM GAS  /tmp/ccses48D.s 			page 81


 687:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 1136              		.loc 1 687 0
 1137 000e 038C     		ldrh	r3, [r0, #32]
 1138 0010 9BB2     		uxth	r3, r3
 1139              	.LVL148:
 689:FWLIB/src/stm32f4xx_tim.c ****   
 1140              		.loc 1 689 0
 1141 0012 8488     		ldrh	r4, [r0, #4]
 1142 0014 A4B2     		uxth	r4, r4
 1143              	.LVL149:
 692:FWLIB/src/stm32f4xx_tim.c ****     
 1144              		.loc 1 692 0
 1145 0016 028B     		ldrh	r2, [r0, #24]
 1146 0018 92B2     		uxth	r2, r2
 1147              	.LVL150:
 696:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 1148              		.loc 1 696 0
 1149 001a 22F07302 		bic	r2, r2, #115
 1150              	.LVL151:
 698:FWLIB/src/stm32f4xx_tim.c ****   
 1151              		.loc 1 698 0
 1152 001e 0D88     		ldrh	r5, [r1]
 1153 0020 2A43     		orrs	r2, r2, r5
 1154              	.LVL152:
 701:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 1155              		.loc 1 701 0
 1156 0022 23F00203 		bic	r3, r3, #2
 1157              	.LVL153:
 703:FWLIB/src/stm32f4xx_tim.c ****   
 1158              		.loc 1 703 0
 1159 0026 8D89     		ldrh	r5, [r1, #12]
 1160 0028 2B43     		orrs	r3, r3, r5
 1161              	.LVL154:
 706:FWLIB/src/stm32f4xx_tim.c ****     
 1162              		.loc 1 706 0
 1163 002a 4D88     		ldrh	r5, [r1, #2]
 1164 002c 2B43     		orrs	r3, r3, r5
 1165              	.LVL155:
 708:FWLIB/src/stm32f4xx_tim.c ****   {
 1166              		.loc 1 708 0
 1167 002e 0E4D     		ldr	r5, .L78
 1168 0030 A842     		cmp	r0, r5
 1169 0032 0AD0     		beq	.L75
 708:FWLIB/src/stm32f4xx_tim.c ****   {
 1170              		.loc 1 708 0 is_stmt 0 discriminator 1
 1171 0034 05F58065 		add	r5, r5, #1024
 1172 0038 A842     		cmp	r0, r5
 1173 003a 06D0     		beq	.L75
 1174              	.L76:
 733:FWLIB/src/stm32f4xx_tim.c ****   
 1175              		.loc 1 733 0 is_stmt 1
 1176 003c 8480     		strh	r4, [r0, #4]	@ movhi
 736:FWLIB/src/stm32f4xx_tim.c ****   
 1177              		.loc 1 736 0
 1178 003e 0283     		strh	r2, [r0, #24]	@ movhi
 739:FWLIB/src/stm32f4xx_tim.c ****   
 1179              		.loc 1 739 0
ARM GAS  /tmp/ccses48D.s 			page 82


 1180 0040 8A68     		ldr	r2, [r1, #8]
 1181              	.LVL156:
 1182 0042 4263     		str	r2, [r0, #52]
 1183              	.LVL157:
 742:FWLIB/src/stm32f4xx_tim.c **** }
 1184              		.loc 1 742 0
 1185 0044 0384     		strh	r3, [r0, #32]	@ movhi
 743:FWLIB/src/stm32f4xx_tim.c **** 
 1186              		.loc 1 743 0
 1187 0046 30BC     		pop	{r4, r5}
 1188              	.LCFI10:
 1189              		.cfi_remember_state
 1190              		.cfi_restore 5
 1191              		.cfi_restore 4
 1192              		.cfi_def_cfa_offset 0
 1193              	.LVL158:
 1194 0048 7047     		bx	lr
 1195              	.LVL159:
 1196              	.L75:
 1197              	.LCFI11:
 1198              		.cfi_restore_state
 716:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 1199              		.loc 1 716 0
 1200 004a 23F00803 		bic	r3, r3, #8
 1201              	.LVL160:
 718:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 1202              		.loc 1 718 0
 1203 004e CD89     		ldrh	r5, [r1, #14]
 1204 0050 2B43     		orrs	r3, r3, r5
 1205              	.LVL161:
 720:FWLIB/src/stm32f4xx_tim.c ****     
 1206              		.loc 1 720 0
 1207 0052 23F00403 		bic	r3, r3, #4
 1208              	.LVL162:
 723:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1209              		.loc 1 723 0
 1210 0056 8D88     		ldrh	r5, [r1, #4]
 1211 0058 2B43     		orrs	r3, r3, r5
 1212              	.LVL163:
 726:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 1213              		.loc 1 726 0
 1214 005a 24F44074 		bic	r4, r4, #768
 1215              	.LVL164:
 728:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 1216              		.loc 1 728 0
 1217 005e 0D8A     		ldrh	r5, [r1, #16]
 1218 0060 2C43     		orrs	r4, r4, r5
 1219              	.LVL165:
 730:FWLIB/src/stm32f4xx_tim.c ****   }
 1220              		.loc 1 730 0
 1221 0062 4D8A     		ldrh	r5, [r1, #18]
 1222 0064 2C43     		orrs	r4, r4, r5
 1223              	.LVL166:
 1224 0066 E9E7     		b	.L76
 1225              	.L79:
 1226              		.align	2
 1227              	.L78:
ARM GAS  /tmp/ccses48D.s 			page 83


 1228 0068 00000140 		.word	1073807360
 1229              		.cfi_endproc
 1230              	.LFE138:
 1232              		.section	.text.TIM_OC2Init,"ax",%progbits
 1233              		.align	1
 1234              		.global	TIM_OC2Init
 1235              		.syntax unified
 1236              		.thumb
 1237              		.thumb_func
 1238              		.fpu fpv4-sp-d16
 1240              	TIM_OC2Init:
 1241              	.LFB139:
 755:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1242              		.loc 1 755 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 1246              		@ link register save eliminated.
 1247              	.LVL167:
 1248 0000 30B4     		push	{r4, r5}
 1249              	.LCFI12:
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 4, -8
 1252              		.cfi_offset 5, -4
 1253              	.LVL168:
 765:FWLIB/src/stm32f4xx_tim.c ****   
 1254              		.loc 1 765 0
 1255 0002 038C     		ldrh	r3, [r0, #32]
 1256 0004 9BB2     		uxth	r3, r3
 1257 0006 23F01003 		bic	r3, r3, #16
 1258 000a 9BB2     		uxth	r3, r3
 1259 000c 0384     		strh	r3, [r0, #32]	@ movhi
 768:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 1260              		.loc 1 768 0
 1261 000e 038C     		ldrh	r3, [r0, #32]
 1262 0010 9BB2     		uxth	r3, r3
 1263              	.LVL169:
 770:FWLIB/src/stm32f4xx_tim.c ****   
 1264              		.loc 1 770 0
 1265 0012 8588     		ldrh	r5, [r0, #4]
 1266 0014 ADB2     		uxth	r5, r5
 1267              	.LVL170:
 773:FWLIB/src/stm32f4xx_tim.c ****     
 1268              		.loc 1 773 0
 1269 0016 028B     		ldrh	r2, [r0, #24]
 1270 0018 92B2     		uxth	r2, r2
 1271              	.LVL171:
 777:FWLIB/src/stm32f4xx_tim.c ****   
 1272              		.loc 1 777 0
 1273 001a 22F4E644 		bic	r4, r2, #29440
 1274              	.LVL172:
 780:FWLIB/src/stm32f4xx_tim.c ****   
 1275              		.loc 1 780 0
 1276 001e 0A88     		ldrh	r2, [r1]
 1277 0020 1202     		lsls	r2, r2, #8
 1278 0022 92B2     		uxth	r2, r2
 1279 0024 2243     		orrs	r2, r2, r4
ARM GAS  /tmp/ccses48D.s 			page 84


 1280              	.LVL173:
 783:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 1281              		.loc 1 783 0
 1282 0026 23F02003 		bic	r3, r3, #32
 1283              	.LVL174:
 785:FWLIB/src/stm32f4xx_tim.c ****   
 1284              		.loc 1 785 0
 1285 002a 8C89     		ldrh	r4, [r1, #12]
 1286 002c 2401     		lsls	r4, r4, #4
 1287 002e A4B2     		uxth	r4, r4
 1288 0030 2343     		orrs	r3, r3, r4
 1289              	.LVL175:
 788:FWLIB/src/stm32f4xx_tim.c ****     
 1290              		.loc 1 788 0
 1291 0032 4C88     		ldrh	r4, [r1, #2]
 1292 0034 2401     		lsls	r4, r4, #4
 1293 0036 A4B2     		uxth	r4, r4
 1294 0038 2343     		orrs	r3, r3, r4
 1295              	.LVL176:
 790:FWLIB/src/stm32f4xx_tim.c ****   {
 1296              		.loc 1 790 0
 1297 003a 124C     		ldr	r4, .L84
 1298 003c A042     		cmp	r0, r4
 1299 003e 0AD0     		beq	.L81
 790:FWLIB/src/stm32f4xx_tim.c ****   {
 1300              		.loc 1 790 0 is_stmt 0 discriminator 1
 1301 0040 04F58064 		add	r4, r4, #1024
 1302 0044 A042     		cmp	r0, r4
 1303 0046 06D0     		beq	.L81
 1304              	.L82:
 815:FWLIB/src/stm32f4xx_tim.c ****   
 1305              		.loc 1 815 0 is_stmt 1
 1306 0048 8580     		strh	r5, [r0, #4]	@ movhi
 818:FWLIB/src/stm32f4xx_tim.c ****   
 1307              		.loc 1 818 0
 1308 004a 0283     		strh	r2, [r0, #24]	@ movhi
 821:FWLIB/src/stm32f4xx_tim.c ****   
 1309              		.loc 1 821 0
 1310 004c 8A68     		ldr	r2, [r1, #8]
 1311              	.LVL177:
 1312 004e 8263     		str	r2, [r0, #56]
 1313              	.LVL178:
 824:FWLIB/src/stm32f4xx_tim.c **** }
 1314              		.loc 1 824 0
 1315 0050 0384     		strh	r3, [r0, #32]	@ movhi
 825:FWLIB/src/stm32f4xx_tim.c **** 
 1316              		.loc 1 825 0
 1317 0052 30BC     		pop	{r4, r5}
 1318              	.LCFI13:
 1319              		.cfi_remember_state
 1320              		.cfi_restore 5
 1321              		.cfi_restore 4
 1322              		.cfi_def_cfa_offset 0
 1323              	.LVL179:
 1324 0054 7047     		bx	lr
 1325              	.LVL180:
 1326              	.L81:
ARM GAS  /tmp/ccses48D.s 			page 85


 1327              	.LCFI14:
 1328              		.cfi_restore_state
 798:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 1329              		.loc 1 798 0
 1330 0056 23F08003 		bic	r3, r3, #128
 1331              	.LVL181:
 800:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 1332              		.loc 1 800 0
 1333 005a CC89     		ldrh	r4, [r1, #14]
 1334 005c 2401     		lsls	r4, r4, #4
 1335 005e A4B2     		uxth	r4, r4
 1336 0060 2343     		orrs	r3, r3, r4
 1337              	.LVL182:
 802:FWLIB/src/stm32f4xx_tim.c ****     
 1338              		.loc 1 802 0
 1339 0062 23F04004 		bic	r4, r3, #64
 1340              	.LVL183:
 805:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1341              		.loc 1 805 0
 1342 0066 8B88     		ldrh	r3, [r1, #4]
 1343 0068 1B01     		lsls	r3, r3, #4
 1344 006a 9BB2     		uxth	r3, r3
 1345 006c 2343     		orrs	r3, r3, r4
 1346              	.LVL184:
 808:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 1347              		.loc 1 808 0
 1348 006e 25F44065 		bic	r5, r5, #3072
 1349              	.LVL185:
 810:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 1350              		.loc 1 810 0
 1351 0072 0C8A     		ldrh	r4, [r1, #16]
 1352 0074 A400     		lsls	r4, r4, #2
 1353 0076 A4B2     		uxth	r4, r4
 1354 0078 2543     		orrs	r5, r5, r4
 1355              	.LVL186:
 812:FWLIB/src/stm32f4xx_tim.c ****   }
 1356              		.loc 1 812 0
 1357 007a 4C8A     		ldrh	r4, [r1, #18]
 1358 007c A400     		lsls	r4, r4, #2
 1359 007e A4B2     		uxth	r4, r4
 1360 0080 2543     		orrs	r5, r5, r4
 1361              	.LVL187:
 1362 0082 E1E7     		b	.L82
 1363              	.L85:
 1364              		.align	2
 1365              	.L84:
 1366 0084 00000140 		.word	1073807360
 1367              		.cfi_endproc
 1368              	.LFE139:
 1370              		.section	.text.TIM_OC3Init,"ax",%progbits
 1371              		.align	1
 1372              		.global	TIM_OC3Init
 1373              		.syntax unified
 1374              		.thumb
 1375              		.thumb_func
 1376              		.fpu fpv4-sp-d16
 1378              	TIM_OC3Init:
ARM GAS  /tmp/ccses48D.s 			page 86


 1379              	.LFB140:
 836:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1380              		.loc 1 836 0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 0
 1383              		@ frame_needed = 0, uses_anonymous_args = 0
 1384              		@ link register save eliminated.
 1385              	.LVL188:
 1386 0000 30B4     		push	{r4, r5}
 1387              	.LCFI15:
 1388              		.cfi_def_cfa_offset 8
 1389              		.cfi_offset 4, -8
 1390              		.cfi_offset 5, -4
 1391              	.LVL189:
 846:FWLIB/src/stm32f4xx_tim.c ****   
 1392              		.loc 1 846 0
 1393 0002 038C     		ldrh	r3, [r0, #32]
 1394 0004 9BB2     		uxth	r3, r3
 1395 0006 23F48073 		bic	r3, r3, #256
 1396 000a 9BB2     		uxth	r3, r3
 1397 000c 0384     		strh	r3, [r0, #32]	@ movhi
 849:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 1398              		.loc 1 849 0
 1399 000e 038C     		ldrh	r3, [r0, #32]
 1400 0010 9BB2     		uxth	r3, r3
 1401              	.LVL190:
 851:FWLIB/src/stm32f4xx_tim.c ****   
 1402              		.loc 1 851 0
 1403 0012 8588     		ldrh	r5, [r0, #4]
 1404 0014 ADB2     		uxth	r5, r5
 1405              	.LVL191:
 854:FWLIB/src/stm32f4xx_tim.c ****     
 1406              		.loc 1 854 0
 1407 0016 828B     		ldrh	r2, [r0, #28]
 1408 0018 92B2     		uxth	r2, r2
 1409              	.LVL192:
 858:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 1410              		.loc 1 858 0
 1411 001a 22F07302 		bic	r2, r2, #115
 1412              	.LVL193:
 860:FWLIB/src/stm32f4xx_tim.c ****   
 1413              		.loc 1 860 0
 1414 001e 0C88     		ldrh	r4, [r1]
 1415 0020 2243     		orrs	r2, r2, r4
 1416              	.LVL194:
 863:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 1417              		.loc 1 863 0
 1418 0022 23F40073 		bic	r3, r3, #512
 1419              	.LVL195:
 865:FWLIB/src/stm32f4xx_tim.c ****   
 1420              		.loc 1 865 0
 1421 0026 8C89     		ldrh	r4, [r1, #12]
 1422 0028 2402     		lsls	r4, r4, #8
 1423 002a A4B2     		uxth	r4, r4
 1424 002c 2343     		orrs	r3, r3, r4
 1425              	.LVL196:
 868:FWLIB/src/stm32f4xx_tim.c ****     
ARM GAS  /tmp/ccses48D.s 			page 87


 1426              		.loc 1 868 0
 1427 002e 4C88     		ldrh	r4, [r1, #2]
 1428 0030 2402     		lsls	r4, r4, #8
 1429 0032 A4B2     		uxth	r4, r4
 1430 0034 2343     		orrs	r3, r3, r4
 1431              	.LVL197:
 870:FWLIB/src/stm32f4xx_tim.c ****   {
 1432              		.loc 1 870 0
 1433 0036 124C     		ldr	r4, .L90
 1434 0038 A042     		cmp	r0, r4
 1435 003a 0AD0     		beq	.L87
 870:FWLIB/src/stm32f4xx_tim.c ****   {
 1436              		.loc 1 870 0 is_stmt 0 discriminator 1
 1437 003c 04F58064 		add	r4, r4, #1024
 1438 0040 A042     		cmp	r0, r4
 1439 0042 06D0     		beq	.L87
 1440              	.L88:
 895:FWLIB/src/stm32f4xx_tim.c ****   
 1441              		.loc 1 895 0 is_stmt 1
 1442 0044 8580     		strh	r5, [r0, #4]	@ movhi
 898:FWLIB/src/stm32f4xx_tim.c ****   
 1443              		.loc 1 898 0
 1444 0046 8283     		strh	r2, [r0, #28]	@ movhi
 901:FWLIB/src/stm32f4xx_tim.c ****   
 1445              		.loc 1 901 0
 1446 0048 8A68     		ldr	r2, [r1, #8]
 1447              	.LVL198:
 1448 004a C263     		str	r2, [r0, #60]
 1449              	.LVL199:
 904:FWLIB/src/stm32f4xx_tim.c **** }
 1450              		.loc 1 904 0
 1451 004c 0384     		strh	r3, [r0, #32]	@ movhi
 905:FWLIB/src/stm32f4xx_tim.c **** 
 1452              		.loc 1 905 0
 1453 004e 30BC     		pop	{r4, r5}
 1454              	.LCFI16:
 1455              		.cfi_remember_state
 1456              		.cfi_restore 5
 1457              		.cfi_restore 4
 1458              		.cfi_def_cfa_offset 0
 1459              	.LVL200:
 1460 0050 7047     		bx	lr
 1461              	.LVL201:
 1462              	.L87:
 1463              	.LCFI17:
 1464              		.cfi_restore_state
 878:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 1465              		.loc 1 878 0
 1466 0052 23F40063 		bic	r3, r3, #2048
 1467              	.LVL202:
 880:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 1468              		.loc 1 880 0
 1469 0056 CC89     		ldrh	r4, [r1, #14]
 1470 0058 2402     		lsls	r4, r4, #8
 1471 005a A4B2     		uxth	r4, r4
 1472 005c 2343     		orrs	r3, r3, r4
 1473              	.LVL203:
ARM GAS  /tmp/ccses48D.s 			page 88


 882:FWLIB/src/stm32f4xx_tim.c ****     
 1474              		.loc 1 882 0
 1475 005e 23F48064 		bic	r4, r3, #1024
 1476              	.LVL204:
 885:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1477              		.loc 1 885 0
 1478 0062 8B88     		ldrh	r3, [r1, #4]
 1479 0064 1B02     		lsls	r3, r3, #8
 1480 0066 9BB2     		uxth	r3, r3
 1481 0068 2343     		orrs	r3, r3, r4
 1482              	.LVL205:
 888:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 1483              		.loc 1 888 0
 1484 006a 25F44055 		bic	r5, r5, #12288
 1485              	.LVL206:
 890:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 1486              		.loc 1 890 0
 1487 006e 0C8A     		ldrh	r4, [r1, #16]
 1488 0070 2401     		lsls	r4, r4, #4
 1489 0072 A4B2     		uxth	r4, r4
 1490 0074 2543     		orrs	r5, r5, r4
 1491              	.LVL207:
 892:FWLIB/src/stm32f4xx_tim.c ****   }
 1492              		.loc 1 892 0
 1493 0076 4C8A     		ldrh	r4, [r1, #18]
 1494 0078 2401     		lsls	r4, r4, #4
 1495 007a A4B2     		uxth	r4, r4
 1496 007c 2543     		orrs	r5, r5, r4
 1497              	.LVL208:
 1498 007e E1E7     		b	.L88
 1499              	.L91:
 1500              		.align	2
 1501              	.L90:
 1502 0080 00000140 		.word	1073807360
 1503              		.cfi_endproc
 1504              	.LFE140:
 1506              		.section	.text.TIM_OC4Init,"ax",%progbits
 1507              		.align	1
 1508              		.global	TIM_OC4Init
 1509              		.syntax unified
 1510              		.thumb
 1511              		.thumb_func
 1512              		.fpu fpv4-sp-d16
 1514              	TIM_OC4Init:
 1515              	.LFB141:
 916:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1516              		.loc 1 916 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              		@ link register save eliminated.
 1521              	.LVL209:
 1522 0000 30B4     		push	{r4, r5}
 1523              	.LCFI18:
 1524              		.cfi_def_cfa_offset 8
 1525              		.cfi_offset 4, -8
 1526              		.cfi_offset 5, -4
ARM GAS  /tmp/ccses48D.s 			page 89


 1527              	.LVL210:
 926:FWLIB/src/stm32f4xx_tim.c ****   
 1528              		.loc 1 926 0
 1529 0002 038C     		ldrh	r3, [r0, #32]
 1530 0004 9BB2     		uxth	r3, r3
 1531 0006 23F48053 		bic	r3, r3, #4096
 1532 000a 9BB2     		uxth	r3, r3
 1533 000c 0384     		strh	r3, [r0, #32]	@ movhi
 929:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 1534              		.loc 1 929 0
 1535 000e 038C     		ldrh	r3, [r0, #32]
 1536 0010 9BB2     		uxth	r3, r3
 1537              	.LVL211:
 931:FWLIB/src/stm32f4xx_tim.c ****   
 1538              		.loc 1 931 0
 1539 0012 8588     		ldrh	r5, [r0, #4]
 1540 0014 ADB2     		uxth	r5, r5
 1541              	.LVL212:
 934:FWLIB/src/stm32f4xx_tim.c ****     
 1542              		.loc 1 934 0
 1543 0016 828B     		ldrh	r2, [r0, #28]
 1544 0018 92B2     		uxth	r2, r2
 1545              	.LVL213:
 938:FWLIB/src/stm32f4xx_tim.c ****   
 1546              		.loc 1 938 0
 1547 001a 22F4E644 		bic	r4, r2, #29440
 1548              	.LVL214:
 941:FWLIB/src/stm32f4xx_tim.c ****   
 1549              		.loc 1 941 0
 1550 001e 0A88     		ldrh	r2, [r1]
 1551 0020 1202     		lsls	r2, r2, #8
 1552 0022 92B2     		uxth	r2, r2
 1553 0024 2243     		orrs	r2, r2, r4
 1554              	.LVL215:
 944:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 1555              		.loc 1 944 0
 1556 0026 23F40053 		bic	r3, r3, #8192
 1557              	.LVL216:
 946:FWLIB/src/stm32f4xx_tim.c ****   
 1558              		.loc 1 946 0
 1559 002a 8C89     		ldrh	r4, [r1, #12]
 1560 002c 2403     		lsls	r4, r4, #12
 1561 002e A4B2     		uxth	r4, r4
 1562 0030 2343     		orrs	r3, r3, r4
 1563              	.LVL217:
 949:FWLIB/src/stm32f4xx_tim.c ****   
 1564              		.loc 1 949 0
 1565 0032 4C88     		ldrh	r4, [r1, #2]
 1566 0034 2403     		lsls	r4, r4, #12
 1567 0036 A4B2     		uxth	r4, r4
 1568 0038 2343     		orrs	r3, r3, r4
 1569              	.LVL218:
 951:FWLIB/src/stm32f4xx_tim.c ****   {
 1570              		.loc 1 951 0
 1571 003a 0A4C     		ldr	r4, .L96
 1572 003c A042     		cmp	r0, r4
 1573 003e 0AD0     		beq	.L93
ARM GAS  /tmp/ccses48D.s 			page 90


 951:FWLIB/src/stm32f4xx_tim.c ****   {
 1574              		.loc 1 951 0 is_stmt 0 discriminator 1
 1575 0040 04F58064 		add	r4, r4, #1024
 1576 0044 A042     		cmp	r0, r4
 1577 0046 06D0     		beq	.L93
 1578              	.L94:
 960:FWLIB/src/stm32f4xx_tim.c ****   
 1579              		.loc 1 960 0 is_stmt 1
 1580 0048 8580     		strh	r5, [r0, #4]	@ movhi
 963:FWLIB/src/stm32f4xx_tim.c ****     
 1581              		.loc 1 963 0
 1582 004a 8283     		strh	r2, [r0, #28]	@ movhi
 966:FWLIB/src/stm32f4xx_tim.c ****   
 1583              		.loc 1 966 0
 1584 004c 8A68     		ldr	r2, [r1, #8]
 1585              	.LVL219:
 1586 004e 0264     		str	r2, [r0, #64]
 1587              	.LVL220:
 969:FWLIB/src/stm32f4xx_tim.c **** }
 1588              		.loc 1 969 0
 1589 0050 0384     		strh	r3, [r0, #32]	@ movhi
 970:FWLIB/src/stm32f4xx_tim.c **** 
 1590              		.loc 1 970 0
 1591 0052 30BC     		pop	{r4, r5}
 1592              	.LCFI19:
 1593              		.cfi_remember_state
 1594              		.cfi_restore 5
 1595              		.cfi_restore 4
 1596              		.cfi_def_cfa_offset 0
 1597              	.LVL221:
 1598 0054 7047     		bx	lr
 1599              	.LVL222:
 1600              	.L93:
 1601              	.LCFI20:
 1602              		.cfi_restore_state
 955:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 1603              		.loc 1 955 0
 1604 0056 25F48045 		bic	r5, r5, #16384
 1605              	.LVL223:
 957:FWLIB/src/stm32f4xx_tim.c ****   }
 1606              		.loc 1 957 0
 1607 005a 0C8A     		ldrh	r4, [r1, #16]
 1608 005c A401     		lsls	r4, r4, #6
 1609 005e A4B2     		uxth	r4, r4
 1610 0060 2543     		orrs	r5, r5, r4
 1611              	.LVL224:
 1612 0062 F1E7     		b	.L94
 1613              	.L97:
 1614              		.align	2
 1615              	.L96:
 1616 0064 00000140 		.word	1073807360
 1617              		.cfi_endproc
 1618              	.LFE141:
 1620              		.section	.text.TIM_OCStructInit,"ax",%progbits
 1621              		.align	1
 1622              		.global	TIM_OCStructInit
 1623              		.syntax unified
ARM GAS  /tmp/ccses48D.s 			page 91


 1624              		.thumb
 1625              		.thumb_func
 1626              		.fpu fpv4-sp-d16
 1628              	TIM_OCStructInit:
 1629              	.LFB142:
 979:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 1630              		.loc 1 979 0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 0
 1633              		@ frame_needed = 0, uses_anonymous_args = 0
 1634              		@ link register save eliminated.
 1635              	.LVL225:
 981:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1636              		.loc 1 981 0
 1637 0000 0023     		movs	r3, #0
 1638 0002 0380     		strh	r3, [r0]	@ movhi
 982:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1639              		.loc 1 982 0
 1640 0004 4380     		strh	r3, [r0, #2]	@ movhi
 983:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 1641              		.loc 1 983 0
 1642 0006 8380     		strh	r3, [r0, #4]	@ movhi
 984:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1643              		.loc 1 984 0
 1644 0008 8360     		str	r3, [r0, #8]
 985:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1645              		.loc 1 985 0
 1646 000a 8381     		strh	r3, [r0, #12]	@ movhi
 986:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1647              		.loc 1 986 0
 1648 000c C381     		strh	r3, [r0, #14]	@ movhi
 987:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1649              		.loc 1 987 0
 1650 000e 0382     		strh	r3, [r0, #16]	@ movhi
 988:FWLIB/src/stm32f4xx_tim.c **** }
 1651              		.loc 1 988 0
 1652 0010 4382     		strh	r3, [r0, #18]	@ movhi
 1653 0012 7047     		bx	lr
 1654              		.cfi_endproc
 1655              	.LFE142:
 1657              		.section	.text.TIM_SelectOCxM,"ax",%progbits
 1658              		.align	1
 1659              		.global	TIM_SelectOCxM
 1660              		.syntax unified
 1661              		.thumb
 1662              		.thumb_func
 1663              		.fpu fpv4-sp-d16
 1665              	TIM_SelectOCxM:
 1666              	.LFB143:
1015:FWLIB/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
 1667              		.loc 1 1015 0
 1668              		.cfi_startproc
 1669              		@ args = 0, pretend = 0, frame = 0
 1670              		@ frame_needed = 0, uses_anonymous_args = 0
 1671              		@ link register save eliminated.
 1672              	.LVL226:
 1673 0000 30B4     		push	{r4, r5}
ARM GAS  /tmp/ccses48D.s 			page 92


 1674              	.LCFI21:
 1675              		.cfi_def_cfa_offset 8
 1676              		.cfi_offset 4, -8
 1677              		.cfi_offset 5, -4
 1678              	.LVL227:
1025:FWLIB/src/stm32f4xx_tim.c **** 
 1679              		.loc 1 1025 0
 1680 0002 00F11804 		add	r4, r0, #24
 1681              	.LVL228:
1027:FWLIB/src/stm32f4xx_tim.c **** 
 1682              		.loc 1 1027 0
 1683 0006 0123     		movs	r3, #1
 1684 0008 8B40     		lsls	r3, r3, r1
 1685 000a 9BB2     		uxth	r3, r3
 1686              	.LVL229:
1030:FWLIB/src/stm32f4xx_tim.c **** 
 1687              		.loc 1 1030 0
 1688 000c 058C     		ldrh	r5, [r0, #32]
 1689 000e DB43     		mvns	r3, r3
 1690              	.LVL230:
 1691 0010 9BB2     		uxth	r3, r3
 1692              	.LVL231:
 1693 0012 2B40     		ands	r3, r3, r5
 1694 0014 0384     		strh	r3, [r0, #32]	@ movhi
1032:FWLIB/src/stm32f4xx_tim.c ****   {
 1695              		.loc 1 1032 0
 1696 0016 81B1     		cbz	r1, .L100
1032:FWLIB/src/stm32f4xx_tim.c ****   {
 1697              		.loc 1 1032 0 is_stmt 0 discriminator 1
 1698 0018 0829     		cmp	r1, #8
 1699 001a 0ED0     		beq	.L100
1044:FWLIB/src/stm32f4xx_tim.c **** 
 1700              		.loc 1 1044 0 is_stmt 1
 1701 001c 0439     		subs	r1, r1, #4
 1702              	.LVL232:
 1703 001e C1F34E01 		ubfx	r1, r1, #1, #15
 1704              	.LVL233:
1047:FWLIB/src/stm32f4xx_tim.c ****     
 1705              		.loc 1 1047 0
 1706 0022 6358     		ldr	r3, [r4, r1]
 1707 0024 23F4E043 		bic	r3, r3, #28672
 1708 0028 1B04     		lsls	r3, r3, #16
 1709 002a 1B0C     		lsrs	r3, r3, #16
 1710 002c 6350     		str	r3, [r4, r1]
1050:FWLIB/src/stm32f4xx_tim.c ****   }
 1711              		.loc 1 1050 0
 1712 002e 6358     		ldr	r3, [r4, r1]
 1713 0030 1202     		lsls	r2, r2, #8
 1714              	.LVL234:
 1715 0032 92B2     		uxth	r2, r2
 1716 0034 1A43     		orrs	r2, r2, r3
 1717 0036 6250     		str	r2, [r4, r1]
1052:FWLIB/src/stm32f4xx_tim.c **** 
 1718              		.loc 1 1052 0
 1719 0038 09E0     		b	.L99
 1720              	.LVL235:
 1721              	.L100:
ARM GAS  /tmp/ccses48D.s 			page 93


1034:FWLIB/src/stm32f4xx_tim.c **** 
 1722              		.loc 1 1034 0
 1723 003a 4908     		lsrs	r1, r1, #1
 1724              	.LVL236:
1037:FWLIB/src/stm32f4xx_tim.c ****    
 1725              		.loc 1 1037 0
 1726 003c 6358     		ldr	r3, [r4, r1]
 1727 003e 23F07003 		bic	r3, r3, #112
 1728 0042 1B04     		lsls	r3, r3, #16
 1729 0044 1B0C     		lsrs	r3, r3, #16
 1730 0046 6350     		str	r3, [r4, r1]
1040:FWLIB/src/stm32f4xx_tim.c ****   }
 1731              		.loc 1 1040 0
 1732 0048 6358     		ldr	r3, [r4, r1]
 1733 004a 1A43     		orrs	r2, r2, r3
 1734              	.LVL237:
 1735 004c 6250     		str	r2, [r4, r1]
 1736              	.LVL238:
 1737              	.L99:
1052:FWLIB/src/stm32f4xx_tim.c **** 
 1738              		.loc 1 1052 0
 1739 004e 30BC     		pop	{r4, r5}
 1740              	.LCFI22:
 1741              		.cfi_restore 5
 1742              		.cfi_restore 4
 1743              		.cfi_def_cfa_offset 0
 1744 0050 7047     		bx	lr
 1745              		.cfi_endproc
 1746              	.LFE143:
 1748              		.section	.text.TIM_SetCompare1,"ax",%progbits
 1749              		.align	1
 1750              		.global	TIM_SetCompare1
 1751              		.syntax unified
 1752              		.thumb
 1753              		.thumb_func
 1754              		.fpu fpv4-sp-d16
 1756              	TIM_SetCompare1:
 1757              	.LFB144:
1061:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1758              		.loc 1 1061 0
 1759              		.cfi_startproc
 1760              		@ args = 0, pretend = 0, frame = 0
 1761              		@ frame_needed = 0, uses_anonymous_args = 0
 1762              		@ link register save eliminated.
 1763              	.LVL239:
1066:FWLIB/src/stm32f4xx_tim.c **** }
 1764              		.loc 1 1066 0
 1765 0000 4163     		str	r1, [r0, #52]
 1766 0002 7047     		bx	lr
 1767              		.cfi_endproc
 1768              	.LFE144:
 1770              		.section	.text.TIM_SetCompare2,"ax",%progbits
 1771              		.align	1
 1772              		.global	TIM_SetCompare2
 1773              		.syntax unified
 1774              		.thumb
 1775              		.thumb_func
ARM GAS  /tmp/ccses48D.s 			page 94


 1776              		.fpu fpv4-sp-d16
 1778              	TIM_SetCompare2:
 1779              	.LFB145:
1077:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1780              		.loc 1 1077 0
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 0
 1783              		@ frame_needed = 0, uses_anonymous_args = 0
 1784              		@ link register save eliminated.
 1785              	.LVL240:
1082:FWLIB/src/stm32f4xx_tim.c **** }
 1786              		.loc 1 1082 0
 1787 0000 8163     		str	r1, [r0, #56]
 1788 0002 7047     		bx	lr
 1789              		.cfi_endproc
 1790              	.LFE145:
 1792              		.section	.text.TIM_SetCompare3,"ax",%progbits
 1793              		.align	1
 1794              		.global	TIM_SetCompare3
 1795              		.syntax unified
 1796              		.thumb
 1797              		.thumb_func
 1798              		.fpu fpv4-sp-d16
 1800              	TIM_SetCompare3:
 1801              	.LFB146:
1092:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1802              		.loc 1 1092 0
 1803              		.cfi_startproc
 1804              		@ args = 0, pretend = 0, frame = 0
 1805              		@ frame_needed = 0, uses_anonymous_args = 0
 1806              		@ link register save eliminated.
 1807              	.LVL241:
1097:FWLIB/src/stm32f4xx_tim.c **** }
 1808              		.loc 1 1097 0
 1809 0000 C163     		str	r1, [r0, #60]
 1810 0002 7047     		bx	lr
 1811              		.cfi_endproc
 1812              	.LFE146:
 1814              		.section	.text.TIM_SetCompare4,"ax",%progbits
 1815              		.align	1
 1816              		.global	TIM_SetCompare4
 1817              		.syntax unified
 1818              		.thumb
 1819              		.thumb_func
 1820              		.fpu fpv4-sp-d16
 1822              	TIM_SetCompare4:
 1823              	.LFB147:
1107:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1824              		.loc 1 1107 0
 1825              		.cfi_startproc
 1826              		@ args = 0, pretend = 0, frame = 0
 1827              		@ frame_needed = 0, uses_anonymous_args = 0
 1828              		@ link register save eliminated.
 1829              	.LVL242:
1112:FWLIB/src/stm32f4xx_tim.c **** }
 1830              		.loc 1 1112 0
 1831 0000 0164     		str	r1, [r0, #64]
ARM GAS  /tmp/ccses48D.s 			page 95


 1832 0002 7047     		bx	lr
 1833              		.cfi_endproc
 1834              	.LFE147:
 1836              		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 1837              		.align	1
 1838              		.global	TIM_ForcedOC1Config
 1839              		.syntax unified
 1840              		.thumb
 1841              		.thumb_func
 1842              		.fpu fpv4-sp-d16
 1844              	TIM_ForcedOC1Config:
 1845              	.LFB148:
1125:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 1846              		.loc 1 1125 0
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 0
 1849              		@ frame_needed = 0, uses_anonymous_args = 0
 1850              		@ link register save eliminated.
 1851              	.LVL243:
1131:FWLIB/src/stm32f4xx_tim.c **** 
 1852              		.loc 1 1131 0
 1853 0000 038B     		ldrh	r3, [r0, #24]
 1854 0002 9BB2     		uxth	r3, r3
 1855              	.LVL244:
1134:FWLIB/src/stm32f4xx_tim.c **** 
 1856              		.loc 1 1134 0
 1857 0004 23F07003 		bic	r3, r3, #112
 1858              	.LVL245:
1137:FWLIB/src/stm32f4xx_tim.c **** 
 1859              		.loc 1 1137 0
 1860 0008 1943     		orrs	r1, r1, r3
 1861              	.LVL246:
1140:FWLIB/src/stm32f4xx_tim.c **** }
 1862              		.loc 1 1140 0
 1863 000a 0183     		strh	r1, [r0, #24]	@ movhi
 1864 000c 7047     		bx	lr
 1865              		.cfi_endproc
 1866              	.LFE148:
 1868              		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 1869              		.align	1
 1870              		.global	TIM_ForcedOC2Config
 1871              		.syntax unified
 1872              		.thumb
 1873              		.thumb_func
 1874              		.fpu fpv4-sp-d16
 1876              	TIM_ForcedOC2Config:
 1877              	.LFB149:
1154:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 1878              		.loc 1 1154 0
 1879              		.cfi_startproc
 1880              		@ args = 0, pretend = 0, frame = 0
 1881              		@ frame_needed = 0, uses_anonymous_args = 0
 1882              		@ link register save eliminated.
 1883              	.LVL247:
1160:FWLIB/src/stm32f4xx_tim.c **** 
 1884              		.loc 1 1160 0
 1885 0000 038B     		ldrh	r3, [r0, #24]
ARM GAS  /tmp/ccses48D.s 			page 96


 1886 0002 9BB2     		uxth	r3, r3
 1887              	.LVL248:
1163:FWLIB/src/stm32f4xx_tim.c **** 
 1888              		.loc 1 1163 0
 1889 0004 23F4E043 		bic	r3, r3, #28672
 1890              	.LVL249:
1166:FWLIB/src/stm32f4xx_tim.c **** 
 1891              		.loc 1 1166 0
 1892 0008 0902     		lsls	r1, r1, #8
 1893              	.LVL250:
 1894 000a 89B2     		uxth	r1, r1
 1895 000c 0B43     		orrs	r3, r3, r1
 1896              	.LVL251:
1169:FWLIB/src/stm32f4xx_tim.c **** }
 1897              		.loc 1 1169 0
 1898 000e 0383     		strh	r3, [r0, #24]	@ movhi
 1899 0010 7047     		bx	lr
 1900              		.cfi_endproc
 1901              	.LFE149:
 1903              		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 1904              		.align	1
 1905              		.global	TIM_ForcedOC3Config
 1906              		.syntax unified
 1907              		.thumb
 1908              		.thumb_func
 1909              		.fpu fpv4-sp-d16
 1911              	TIM_ForcedOC3Config:
 1912              	.LFB150:
1182:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 1913              		.loc 1 1182 0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 0
 1916              		@ frame_needed = 0, uses_anonymous_args = 0
 1917              		@ link register save eliminated.
 1918              	.LVL252:
1189:FWLIB/src/stm32f4xx_tim.c **** 
 1919              		.loc 1 1189 0
 1920 0000 838B     		ldrh	r3, [r0, #28]
 1921 0002 9BB2     		uxth	r3, r3
 1922              	.LVL253:
1192:FWLIB/src/stm32f4xx_tim.c **** 
 1923              		.loc 1 1192 0
 1924 0004 23F07003 		bic	r3, r3, #112
 1925              	.LVL254:
1195:FWLIB/src/stm32f4xx_tim.c **** 
 1926              		.loc 1 1195 0
 1927 0008 1943     		orrs	r1, r1, r3
 1928              	.LVL255:
1198:FWLIB/src/stm32f4xx_tim.c **** }
 1929              		.loc 1 1198 0
 1930 000a 8183     		strh	r1, [r0, #28]	@ movhi
 1931 000c 7047     		bx	lr
 1932              		.cfi_endproc
 1933              	.LFE150:
 1935              		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 1936              		.align	1
 1937              		.global	TIM_ForcedOC4Config
ARM GAS  /tmp/ccses48D.s 			page 97


 1938              		.syntax unified
 1939              		.thumb
 1940              		.thumb_func
 1941              		.fpu fpv4-sp-d16
 1943              	TIM_ForcedOC4Config:
 1944              	.LFB151:
1211:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 1945              		.loc 1 1211 0
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 0
 1948              		@ frame_needed = 0, uses_anonymous_args = 0
 1949              		@ link register save eliminated.
 1950              	.LVL256:
1217:FWLIB/src/stm32f4xx_tim.c **** 
 1951              		.loc 1 1217 0
 1952 0000 838B     		ldrh	r3, [r0, #28]
 1953 0002 9BB2     		uxth	r3, r3
 1954              	.LVL257:
1220:FWLIB/src/stm32f4xx_tim.c **** 
 1955              		.loc 1 1220 0
 1956 0004 23F4E043 		bic	r3, r3, #28672
 1957              	.LVL258:
1223:FWLIB/src/stm32f4xx_tim.c **** 
 1958              		.loc 1 1223 0
 1959 0008 0902     		lsls	r1, r1, #8
 1960              	.LVL259:
 1961 000a 89B2     		uxth	r1, r1
 1962 000c 0B43     		orrs	r3, r3, r1
 1963              	.LVL260:
1226:FWLIB/src/stm32f4xx_tim.c **** }
 1964              		.loc 1 1226 0
 1965 000e 8383     		strh	r3, [r0, #28]	@ movhi
 1966 0010 7047     		bx	lr
 1967              		.cfi_endproc
 1968              	.LFE151:
 1970              		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 1971              		.align	1
 1972              		.global	TIM_OC1PreloadConfig
 1973              		.syntax unified
 1974              		.thumb
 1975              		.thumb_func
 1976              		.fpu fpv4-sp-d16
 1978              	TIM_OC1PreloadConfig:
 1979              	.LFB152:
1239:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 1980              		.loc 1 1239 0
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 0
 1983              		@ frame_needed = 0, uses_anonymous_args = 0
 1984              		@ link register save eliminated.
 1985              	.LVL261:
1246:FWLIB/src/stm32f4xx_tim.c **** 
 1986              		.loc 1 1246 0
 1987 0000 038B     		ldrh	r3, [r0, #24]
 1988 0002 9BB2     		uxth	r3, r3
 1989              	.LVL262:
1249:FWLIB/src/stm32f4xx_tim.c **** 
ARM GAS  /tmp/ccses48D.s 			page 98


 1990              		.loc 1 1249 0
 1991 0004 23F00803 		bic	r3, r3, #8
 1992              	.LVL263:
1252:FWLIB/src/stm32f4xx_tim.c **** 
 1993              		.loc 1 1252 0
 1994 0008 1943     		orrs	r1, r1, r3
 1995              	.LVL264:
1255:FWLIB/src/stm32f4xx_tim.c **** }
 1996              		.loc 1 1255 0
 1997 000a 0183     		strh	r1, [r0, #24]	@ movhi
 1998 000c 7047     		bx	lr
 1999              		.cfi_endproc
 2000              	.LFE152:
 2002              		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 2003              		.align	1
 2004              		.global	TIM_OC2PreloadConfig
 2005              		.syntax unified
 2006              		.thumb
 2007              		.thumb_func
 2008              		.fpu fpv4-sp-d16
 2010              	TIM_OC2PreloadConfig:
 2011              	.LFB153:
1269:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2012              		.loc 1 1269 0
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 0
 2015              		@ frame_needed = 0, uses_anonymous_args = 0
 2016              		@ link register save eliminated.
 2017              	.LVL265:
1276:FWLIB/src/stm32f4xx_tim.c **** 
 2018              		.loc 1 1276 0
 2019 0000 038B     		ldrh	r3, [r0, #24]
 2020 0002 9BB2     		uxth	r3, r3
 2021              	.LVL266:
1279:FWLIB/src/stm32f4xx_tim.c **** 
 2022              		.loc 1 1279 0
 2023 0004 23F40063 		bic	r3, r3, #2048
 2024              	.LVL267:
1282:FWLIB/src/stm32f4xx_tim.c **** 
 2025              		.loc 1 1282 0
 2026 0008 0902     		lsls	r1, r1, #8
 2027              	.LVL268:
 2028 000a 89B2     		uxth	r1, r1
 2029 000c 0B43     		orrs	r3, r3, r1
 2030              	.LVL269:
1285:FWLIB/src/stm32f4xx_tim.c **** }
 2031              		.loc 1 1285 0
 2032 000e 0383     		strh	r3, [r0, #24]	@ movhi
 2033 0010 7047     		bx	lr
 2034              		.cfi_endproc
 2035              	.LFE153:
 2037              		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 2038              		.align	1
 2039              		.global	TIM_OC3PreloadConfig
 2040              		.syntax unified
 2041              		.thumb
 2042              		.thumb_func
ARM GAS  /tmp/ccses48D.s 			page 99


 2043              		.fpu fpv4-sp-d16
 2045              	TIM_OC3PreloadConfig:
 2046              	.LFB154:
1298:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2047              		.loc 1 1298 0
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 0
 2050              		@ frame_needed = 0, uses_anonymous_args = 0
 2051              		@ link register save eliminated.
 2052              	.LVL270:
1305:FWLIB/src/stm32f4xx_tim.c **** 
 2053              		.loc 1 1305 0
 2054 0000 838B     		ldrh	r3, [r0, #28]
 2055 0002 9BB2     		uxth	r3, r3
 2056              	.LVL271:
1308:FWLIB/src/stm32f4xx_tim.c **** 
 2057              		.loc 1 1308 0
 2058 0004 23F00803 		bic	r3, r3, #8
 2059              	.LVL272:
1311:FWLIB/src/stm32f4xx_tim.c **** 
 2060              		.loc 1 1311 0
 2061 0008 1943     		orrs	r1, r1, r3
 2062              	.LVL273:
1314:FWLIB/src/stm32f4xx_tim.c **** }
 2063              		.loc 1 1314 0
 2064 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2065 000c 7047     		bx	lr
 2066              		.cfi_endproc
 2067              	.LFE154:
 2069              		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 2070              		.align	1
 2071              		.global	TIM_OC4PreloadConfig
 2072              		.syntax unified
 2073              		.thumb
 2074              		.thumb_func
 2075              		.fpu fpv4-sp-d16
 2077              	TIM_OC4PreloadConfig:
 2078              	.LFB155:
1327:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2079              		.loc 1 1327 0
 2080              		.cfi_startproc
 2081              		@ args = 0, pretend = 0, frame = 0
 2082              		@ frame_needed = 0, uses_anonymous_args = 0
 2083              		@ link register save eliminated.
 2084              	.LVL274:
1334:FWLIB/src/stm32f4xx_tim.c **** 
 2085              		.loc 1 1334 0
 2086 0000 838B     		ldrh	r3, [r0, #28]
 2087 0002 9BB2     		uxth	r3, r3
 2088              	.LVL275:
1337:FWLIB/src/stm32f4xx_tim.c **** 
 2089              		.loc 1 1337 0
 2090 0004 23F40063 		bic	r3, r3, #2048
 2091              	.LVL276:
1340:FWLIB/src/stm32f4xx_tim.c **** 
 2092              		.loc 1 1340 0
 2093 0008 0902     		lsls	r1, r1, #8
ARM GAS  /tmp/ccses48D.s 			page 100


 2094              	.LVL277:
 2095 000a 89B2     		uxth	r1, r1
 2096 000c 0B43     		orrs	r3, r3, r1
 2097              	.LVL278:
1343:FWLIB/src/stm32f4xx_tim.c **** }
 2098              		.loc 1 1343 0
 2099 000e 8383     		strh	r3, [r0, #28]	@ movhi
 2100 0010 7047     		bx	lr
 2101              		.cfi_endproc
 2102              	.LFE155:
 2104              		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 2105              		.align	1
 2106              		.global	TIM_OC1FastConfig
 2107              		.syntax unified
 2108              		.thumb
 2109              		.thumb_func
 2110              		.fpu fpv4-sp-d16
 2112              	TIM_OC1FastConfig:
 2113              	.LFB156:
1356:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2114              		.loc 1 1356 0
 2115              		.cfi_startproc
 2116              		@ args = 0, pretend = 0, frame = 0
 2117              		@ frame_needed = 0, uses_anonymous_args = 0
 2118              		@ link register save eliminated.
 2119              	.LVL279:
1364:FWLIB/src/stm32f4xx_tim.c **** 
 2120              		.loc 1 1364 0
 2121 0000 038B     		ldrh	r3, [r0, #24]
 2122 0002 9BB2     		uxth	r3, r3
 2123              	.LVL280:
1367:FWLIB/src/stm32f4xx_tim.c **** 
 2124              		.loc 1 1367 0
 2125 0004 23F00403 		bic	r3, r3, #4
 2126              	.LVL281:
1370:FWLIB/src/stm32f4xx_tim.c **** 
 2127              		.loc 1 1370 0
 2128 0008 1943     		orrs	r1, r1, r3
 2129              	.LVL282:
1373:FWLIB/src/stm32f4xx_tim.c **** }
 2130              		.loc 1 1373 0
 2131 000a 0183     		strh	r1, [r0, #24]	@ movhi
 2132 000c 7047     		bx	lr
 2133              		.cfi_endproc
 2134              	.LFE156:
 2136              		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 2137              		.align	1
 2138              		.global	TIM_OC2FastConfig
 2139              		.syntax unified
 2140              		.thumb
 2141              		.thumb_func
 2142              		.fpu fpv4-sp-d16
 2144              	TIM_OC2FastConfig:
 2145              	.LFB157:
1387:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2146              		.loc 1 1387 0
 2147              		.cfi_startproc
ARM GAS  /tmp/ccses48D.s 			page 101


 2148              		@ args = 0, pretend = 0, frame = 0
 2149              		@ frame_needed = 0, uses_anonymous_args = 0
 2150              		@ link register save eliminated.
 2151              	.LVL283:
1395:FWLIB/src/stm32f4xx_tim.c **** 
 2152              		.loc 1 1395 0
 2153 0000 038B     		ldrh	r3, [r0, #24]
 2154 0002 9BB2     		uxth	r3, r3
 2155              	.LVL284:
1398:FWLIB/src/stm32f4xx_tim.c **** 
 2156              		.loc 1 1398 0
 2157 0004 23F48063 		bic	r3, r3, #1024
 2158              	.LVL285:
1401:FWLIB/src/stm32f4xx_tim.c **** 
 2159              		.loc 1 1401 0
 2160 0008 0902     		lsls	r1, r1, #8
 2161              	.LVL286:
 2162 000a 89B2     		uxth	r1, r1
 2163 000c 0B43     		orrs	r3, r3, r1
 2164              	.LVL287:
1404:FWLIB/src/stm32f4xx_tim.c **** }
 2165              		.loc 1 1404 0
 2166 000e 0383     		strh	r3, [r0, #24]	@ movhi
 2167 0010 7047     		bx	lr
 2168              		.cfi_endproc
 2169              	.LFE157:
 2171              		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 2172              		.align	1
 2173              		.global	TIM_OC3FastConfig
 2174              		.syntax unified
 2175              		.thumb
 2176              		.thumb_func
 2177              		.fpu fpv4-sp-d16
 2179              	TIM_OC3FastConfig:
 2180              	.LFB158:
1417:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2181              		.loc 1 1417 0
 2182              		.cfi_startproc
 2183              		@ args = 0, pretend = 0, frame = 0
 2184              		@ frame_needed = 0, uses_anonymous_args = 0
 2185              		@ link register save eliminated.
 2186              	.LVL288:
1425:FWLIB/src/stm32f4xx_tim.c **** 
 2187              		.loc 1 1425 0
 2188 0000 838B     		ldrh	r3, [r0, #28]
 2189 0002 9BB2     		uxth	r3, r3
 2190              	.LVL289:
1428:FWLIB/src/stm32f4xx_tim.c **** 
 2191              		.loc 1 1428 0
 2192 0004 23F00403 		bic	r3, r3, #4
 2193              	.LVL290:
1431:FWLIB/src/stm32f4xx_tim.c **** 
 2194              		.loc 1 1431 0
 2195 0008 1943     		orrs	r1, r1, r3
 2196              	.LVL291:
1434:FWLIB/src/stm32f4xx_tim.c **** }
 2197              		.loc 1 1434 0
ARM GAS  /tmp/ccses48D.s 			page 102


 2198 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2199 000c 7047     		bx	lr
 2200              		.cfi_endproc
 2201              	.LFE158:
 2203              		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 2204              		.align	1
 2205              		.global	TIM_OC4FastConfig
 2206              		.syntax unified
 2207              		.thumb
 2208              		.thumb_func
 2209              		.fpu fpv4-sp-d16
 2211              	TIM_OC4FastConfig:
 2212              	.LFB159:
1447:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2213              		.loc 1 1447 0
 2214              		.cfi_startproc
 2215              		@ args = 0, pretend = 0, frame = 0
 2216              		@ frame_needed = 0, uses_anonymous_args = 0
 2217              		@ link register save eliminated.
 2218              	.LVL292:
1455:FWLIB/src/stm32f4xx_tim.c **** 
 2219              		.loc 1 1455 0
 2220 0000 838B     		ldrh	r3, [r0, #28]
 2221 0002 9BB2     		uxth	r3, r3
 2222              	.LVL293:
1458:FWLIB/src/stm32f4xx_tim.c **** 
 2223              		.loc 1 1458 0
 2224 0004 23F48063 		bic	r3, r3, #1024
 2225              	.LVL294:
1461:FWLIB/src/stm32f4xx_tim.c **** 
 2226              		.loc 1 1461 0
 2227 0008 0902     		lsls	r1, r1, #8
 2228              	.LVL295:
 2229 000a 89B2     		uxth	r1, r1
 2230 000c 0B43     		orrs	r3, r3, r1
 2231              	.LVL296:
1464:FWLIB/src/stm32f4xx_tim.c **** }
 2232              		.loc 1 1464 0
 2233 000e 8383     		strh	r3, [r0, #28]	@ movhi
 2234 0010 7047     		bx	lr
 2235              		.cfi_endproc
 2236              	.LFE159:
 2238              		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 2239              		.align	1
 2240              		.global	TIM_ClearOC1Ref
 2241              		.syntax unified
 2242              		.thumb
 2243              		.thumb_func
 2244              		.fpu fpv4-sp-d16
 2246              	TIM_ClearOC1Ref:
 2247              	.LFB160:
1477:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2248              		.loc 1 1477 0
 2249              		.cfi_startproc
 2250              		@ args = 0, pretend = 0, frame = 0
 2251              		@ frame_needed = 0, uses_anonymous_args = 0
 2252              		@ link register save eliminated.
ARM GAS  /tmp/ccses48D.s 			page 103


 2253              	.LVL297:
1484:FWLIB/src/stm32f4xx_tim.c **** 
 2254              		.loc 1 1484 0
 2255 0000 038B     		ldrh	r3, [r0, #24]
 2256 0002 9BB2     		uxth	r3, r3
 2257              	.LVL298:
1487:FWLIB/src/stm32f4xx_tim.c **** 
 2258              		.loc 1 1487 0
 2259 0004 23F08003 		bic	r3, r3, #128
 2260              	.LVL299:
1490:FWLIB/src/stm32f4xx_tim.c **** 
 2261              		.loc 1 1490 0
 2262 0008 1943     		orrs	r1, r1, r3
 2263              	.LVL300:
1493:FWLIB/src/stm32f4xx_tim.c **** }
 2264              		.loc 1 1493 0
 2265 000a 0183     		strh	r1, [r0, #24]	@ movhi
 2266 000c 7047     		bx	lr
 2267              		.cfi_endproc
 2268              	.LFE160:
 2270              		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 2271              		.align	1
 2272              		.global	TIM_ClearOC2Ref
 2273              		.syntax unified
 2274              		.thumb
 2275              		.thumb_func
 2276              		.fpu fpv4-sp-d16
 2278              	TIM_ClearOC2Ref:
 2279              	.LFB161:
1507:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2280              		.loc 1 1507 0
 2281              		.cfi_startproc
 2282              		@ args = 0, pretend = 0, frame = 0
 2283              		@ frame_needed = 0, uses_anonymous_args = 0
 2284              		@ link register save eliminated.
 2285              	.LVL301:
1514:FWLIB/src/stm32f4xx_tim.c **** 
 2286              		.loc 1 1514 0
 2287 0000 038B     		ldrh	r3, [r0, #24]
 2288              	.LVL302:
1517:FWLIB/src/stm32f4xx_tim.c **** 
 2289              		.loc 1 1517 0
 2290 0002 C3F30E03 		ubfx	r3, r3, #0, #15
 2291              	.LVL303:
1520:FWLIB/src/stm32f4xx_tim.c **** 
 2292              		.loc 1 1520 0
 2293 0006 0902     		lsls	r1, r1, #8
 2294              	.LVL304:
 2295 0008 89B2     		uxth	r1, r1
 2296 000a 0B43     		orrs	r3, r3, r1
 2297              	.LVL305:
1523:FWLIB/src/stm32f4xx_tim.c **** }
 2298              		.loc 1 1523 0
 2299 000c 0383     		strh	r3, [r0, #24]	@ movhi
 2300 000e 7047     		bx	lr
 2301              		.cfi_endproc
 2302              	.LFE161:
ARM GAS  /tmp/ccses48D.s 			page 104


 2304              		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 2305              		.align	1
 2306              		.global	TIM_ClearOC3Ref
 2307              		.syntax unified
 2308              		.thumb
 2309              		.thumb_func
 2310              		.fpu fpv4-sp-d16
 2312              	TIM_ClearOC3Ref:
 2313              	.LFB162:
1536:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2314              		.loc 1 1536 0
 2315              		.cfi_startproc
 2316              		@ args = 0, pretend = 0, frame = 0
 2317              		@ frame_needed = 0, uses_anonymous_args = 0
 2318              		@ link register save eliminated.
 2319              	.LVL306:
1543:FWLIB/src/stm32f4xx_tim.c **** 
 2320              		.loc 1 1543 0
 2321 0000 838B     		ldrh	r3, [r0, #28]
 2322 0002 9BB2     		uxth	r3, r3
 2323              	.LVL307:
1546:FWLIB/src/stm32f4xx_tim.c **** 
 2324              		.loc 1 1546 0
 2325 0004 23F08003 		bic	r3, r3, #128
 2326              	.LVL308:
1549:FWLIB/src/stm32f4xx_tim.c **** 
 2327              		.loc 1 1549 0
 2328 0008 1943     		orrs	r1, r1, r3
 2329              	.LVL309:
1552:FWLIB/src/stm32f4xx_tim.c **** }
 2330              		.loc 1 1552 0
 2331 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2332 000c 7047     		bx	lr
 2333              		.cfi_endproc
 2334              	.LFE162:
 2336              		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 2337              		.align	1
 2338              		.global	TIM_ClearOC4Ref
 2339              		.syntax unified
 2340              		.thumb
 2341              		.thumb_func
 2342              		.fpu fpv4-sp-d16
 2344              	TIM_ClearOC4Ref:
 2345              	.LFB163:
1565:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2346              		.loc 1 1565 0
 2347              		.cfi_startproc
 2348              		@ args = 0, pretend = 0, frame = 0
 2349              		@ frame_needed = 0, uses_anonymous_args = 0
 2350              		@ link register save eliminated.
 2351              	.LVL310:
1572:FWLIB/src/stm32f4xx_tim.c **** 
 2352              		.loc 1 1572 0
 2353 0000 838B     		ldrh	r3, [r0, #28]
 2354              	.LVL311:
1575:FWLIB/src/stm32f4xx_tim.c **** 
 2355              		.loc 1 1575 0
ARM GAS  /tmp/ccses48D.s 			page 105


 2356 0002 C3F30E03 		ubfx	r3, r3, #0, #15
 2357              	.LVL312:
1578:FWLIB/src/stm32f4xx_tim.c **** 
 2358              		.loc 1 1578 0
 2359 0006 0902     		lsls	r1, r1, #8
 2360              	.LVL313:
 2361 0008 89B2     		uxth	r1, r1
 2362 000a 0B43     		orrs	r3, r3, r1
 2363              	.LVL314:
1581:FWLIB/src/stm32f4xx_tim.c **** }
 2364              		.loc 1 1581 0
 2365 000c 8383     		strh	r3, [r0, #28]	@ movhi
 2366 000e 7047     		bx	lr
 2367              		.cfi_endproc
 2368              	.LFE163:
 2370              		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 2371              		.align	1
 2372              		.global	TIM_OC1PolarityConfig
 2373              		.syntax unified
 2374              		.thumb
 2375              		.thumb_func
 2376              		.fpu fpv4-sp-d16
 2378              	TIM_OC1PolarityConfig:
 2379              	.LFB164:
1594:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2380              		.loc 1 1594 0
 2381              		.cfi_startproc
 2382              		@ args = 0, pretend = 0, frame = 0
 2383              		@ frame_needed = 0, uses_anonymous_args = 0
 2384              		@ link register save eliminated.
 2385              	.LVL315:
1601:FWLIB/src/stm32f4xx_tim.c **** 
 2386              		.loc 1 1601 0
 2387 0000 038C     		ldrh	r3, [r0, #32]
 2388 0002 9BB2     		uxth	r3, r3
 2389              	.LVL316:
1604:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 2390              		.loc 1 1604 0
 2391 0004 23F00203 		bic	r3, r3, #2
 2392              	.LVL317:
1605:FWLIB/src/stm32f4xx_tim.c **** 
 2393              		.loc 1 1605 0
 2394 0008 1943     		orrs	r1, r1, r3
 2395              	.LVL318:
1608:FWLIB/src/stm32f4xx_tim.c **** }
 2396              		.loc 1 1608 0
 2397 000a 0184     		strh	r1, [r0, #32]	@ movhi
 2398 000c 7047     		bx	lr
 2399              		.cfi_endproc
 2400              	.LFE164:
 2402              		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 2403              		.align	1
 2404              		.global	TIM_OC1NPolarityConfig
 2405              		.syntax unified
 2406              		.thumb
 2407              		.thumb_func
 2408              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccses48D.s 			page 106


 2410              	TIM_OC1NPolarityConfig:
 2411              	.LFB165:
1621:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2412              		.loc 1 1621 0
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 0
 2415              		@ frame_needed = 0, uses_anonymous_args = 0
 2416              		@ link register save eliminated.
 2417              	.LVL319:
1627:FWLIB/src/stm32f4xx_tim.c **** 
 2418              		.loc 1 1627 0
 2419 0000 038C     		ldrh	r3, [r0, #32]
 2420 0002 9BB2     		uxth	r3, r3
 2421              	.LVL320:
1630:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 2422              		.loc 1 1630 0
 2423 0004 23F00803 		bic	r3, r3, #8
 2424              	.LVL321:
1631:FWLIB/src/stm32f4xx_tim.c **** 
 2425              		.loc 1 1631 0
 2426 0008 1943     		orrs	r1, r1, r3
 2427              	.LVL322:
1634:FWLIB/src/stm32f4xx_tim.c **** }
 2428              		.loc 1 1634 0
 2429 000a 0184     		strh	r1, [r0, #32]	@ movhi
 2430 000c 7047     		bx	lr
 2431              		.cfi_endproc
 2432              	.LFE165:
 2434              		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 2435              		.align	1
 2436              		.global	TIM_OC2PolarityConfig
 2437              		.syntax unified
 2438              		.thumb
 2439              		.thumb_func
 2440              		.fpu fpv4-sp-d16
 2442              	TIM_OC2PolarityConfig:
 2443              	.LFB166:
1648:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2444              		.loc 1 1648 0
 2445              		.cfi_startproc
 2446              		@ args = 0, pretend = 0, frame = 0
 2447              		@ frame_needed = 0, uses_anonymous_args = 0
 2448              		@ link register save eliminated.
 2449              	.LVL323:
1655:FWLIB/src/stm32f4xx_tim.c **** 
 2450              		.loc 1 1655 0
 2451 0000 038C     		ldrh	r3, [r0, #32]
 2452 0002 9BB2     		uxth	r3, r3
 2453              	.LVL324:
1658:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 2454              		.loc 1 1658 0
 2455 0004 23F02003 		bic	r3, r3, #32
 2456              	.LVL325:
1659:FWLIB/src/stm32f4xx_tim.c **** 
 2457              		.loc 1 1659 0
 2458 0008 0901     		lsls	r1, r1, #4
 2459              	.LVL326:
ARM GAS  /tmp/ccses48D.s 			page 107


 2460 000a 89B2     		uxth	r1, r1
 2461 000c 0B43     		orrs	r3, r3, r1
 2462              	.LVL327:
1662:FWLIB/src/stm32f4xx_tim.c **** }
 2463              		.loc 1 1662 0
 2464 000e 0384     		strh	r3, [r0, #32]	@ movhi
 2465 0010 7047     		bx	lr
 2466              		.cfi_endproc
 2467              	.LFE166:
 2469              		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 2470              		.align	1
 2471              		.global	TIM_OC2NPolarityConfig
 2472              		.syntax unified
 2473              		.thumb
 2474              		.thumb_func
 2475              		.fpu fpv4-sp-d16
 2477              	TIM_OC2NPolarityConfig:
 2478              	.LFB167:
1675:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2479              		.loc 1 1675 0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 0
 2482              		@ frame_needed = 0, uses_anonymous_args = 0
 2483              		@ link register save eliminated.
 2484              	.LVL328:
1682:FWLIB/src/stm32f4xx_tim.c **** 
 2485              		.loc 1 1682 0
 2486 0000 038C     		ldrh	r3, [r0, #32]
 2487 0002 9BB2     		uxth	r3, r3
 2488              	.LVL329:
1685:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 2489              		.loc 1 1685 0
 2490 0004 23F08003 		bic	r3, r3, #128
 2491              	.LVL330:
1686:FWLIB/src/stm32f4xx_tim.c **** 
 2492              		.loc 1 1686 0
 2493 0008 0901     		lsls	r1, r1, #4
 2494              	.LVL331:
 2495 000a 89B2     		uxth	r1, r1
 2496 000c 0B43     		orrs	r3, r3, r1
 2497              	.LVL332:
1689:FWLIB/src/stm32f4xx_tim.c **** }
 2498              		.loc 1 1689 0
 2499 000e 0384     		strh	r3, [r0, #32]	@ movhi
 2500 0010 7047     		bx	lr
 2501              		.cfi_endproc
 2502              	.LFE167:
 2504              		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 2505              		.align	1
 2506              		.global	TIM_OC3PolarityConfig
 2507              		.syntax unified
 2508              		.thumb
 2509              		.thumb_func
 2510              		.fpu fpv4-sp-d16
 2512              	TIM_OC3PolarityConfig:
 2513              	.LFB168:
1702:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
ARM GAS  /tmp/ccses48D.s 			page 108


 2514              		.loc 1 1702 0
 2515              		.cfi_startproc
 2516              		@ args = 0, pretend = 0, frame = 0
 2517              		@ frame_needed = 0, uses_anonymous_args = 0
 2518              		@ link register save eliminated.
 2519              	.LVL333:
1709:FWLIB/src/stm32f4xx_tim.c **** 
 2520              		.loc 1 1709 0
 2521 0000 038C     		ldrh	r3, [r0, #32]
 2522 0002 9BB2     		uxth	r3, r3
 2523              	.LVL334:
1712:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 2524              		.loc 1 1712 0
 2525 0004 23F40073 		bic	r3, r3, #512
 2526              	.LVL335:
1713:FWLIB/src/stm32f4xx_tim.c **** 
 2527              		.loc 1 1713 0
 2528 0008 0902     		lsls	r1, r1, #8
 2529              	.LVL336:
 2530 000a 89B2     		uxth	r1, r1
 2531 000c 0B43     		orrs	r3, r3, r1
 2532              	.LVL337:
1716:FWLIB/src/stm32f4xx_tim.c **** }
 2533              		.loc 1 1716 0
 2534 000e 0384     		strh	r3, [r0, #32]	@ movhi
 2535 0010 7047     		bx	lr
 2536              		.cfi_endproc
 2537              	.LFE168:
 2539              		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 2540              		.align	1
 2541              		.global	TIM_OC3NPolarityConfig
 2542              		.syntax unified
 2543              		.thumb
 2544              		.thumb_func
 2545              		.fpu fpv4-sp-d16
 2547              	TIM_OC3NPolarityConfig:
 2548              	.LFB169:
1729:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2549              		.loc 1 1729 0
 2550              		.cfi_startproc
 2551              		@ args = 0, pretend = 0, frame = 0
 2552              		@ frame_needed = 0, uses_anonymous_args = 0
 2553              		@ link register save eliminated.
 2554              	.LVL338:
1736:FWLIB/src/stm32f4xx_tim.c **** 
 2555              		.loc 1 1736 0
 2556 0000 038C     		ldrh	r3, [r0, #32]
 2557 0002 9BB2     		uxth	r3, r3
 2558              	.LVL339:
1739:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 2559              		.loc 1 1739 0
 2560 0004 23F40063 		bic	r3, r3, #2048
 2561              	.LVL340:
1740:FWLIB/src/stm32f4xx_tim.c **** 
 2562              		.loc 1 1740 0
 2563 0008 0902     		lsls	r1, r1, #8
 2564              	.LVL341:
ARM GAS  /tmp/ccses48D.s 			page 109


 2565 000a 89B2     		uxth	r1, r1
 2566 000c 0B43     		orrs	r3, r3, r1
 2567              	.LVL342:
1743:FWLIB/src/stm32f4xx_tim.c **** }
 2568              		.loc 1 1743 0
 2569 000e 0384     		strh	r3, [r0, #32]	@ movhi
 2570 0010 7047     		bx	lr
 2571              		.cfi_endproc
 2572              	.LFE169:
 2574              		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 2575              		.align	1
 2576              		.global	TIM_OC4PolarityConfig
 2577              		.syntax unified
 2578              		.thumb
 2579              		.thumb_func
 2580              		.fpu fpv4-sp-d16
 2582              	TIM_OC4PolarityConfig:
 2583              	.LFB170:
1756:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2584              		.loc 1 1756 0
 2585              		.cfi_startproc
 2586              		@ args = 0, pretend = 0, frame = 0
 2587              		@ frame_needed = 0, uses_anonymous_args = 0
 2588              		@ link register save eliminated.
 2589              	.LVL343:
1763:FWLIB/src/stm32f4xx_tim.c **** 
 2590              		.loc 1 1763 0
 2591 0000 038C     		ldrh	r3, [r0, #32]
 2592 0002 9BB2     		uxth	r3, r3
 2593              	.LVL344:
1766:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 2594              		.loc 1 1766 0
 2595 0004 23F40053 		bic	r3, r3, #8192
 2596              	.LVL345:
1767:FWLIB/src/stm32f4xx_tim.c **** 
 2597              		.loc 1 1767 0
 2598 0008 0903     		lsls	r1, r1, #12
 2599              	.LVL346:
 2600 000a 89B2     		uxth	r1, r1
 2601 000c 0B43     		orrs	r3, r3, r1
 2602              	.LVL347:
1770:FWLIB/src/stm32f4xx_tim.c **** }
 2603              		.loc 1 1770 0
 2604 000e 0384     		strh	r3, [r0, #32]	@ movhi
 2605 0010 7047     		bx	lr
 2606              		.cfi_endproc
 2607              	.LFE170:
 2609              		.section	.text.TIM_CCxCmd,"ax",%progbits
 2610              		.align	1
 2611              		.global	TIM_CCxCmd
 2612              		.syntax unified
 2613              		.thumb
 2614              		.thumb_func
 2615              		.fpu fpv4-sp-d16
 2617              	TIM_CCxCmd:
 2618              	.LFB171:
1787:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
ARM GAS  /tmp/ccses48D.s 			page 110


 2619              		.loc 1 1787 0
 2620              		.cfi_startproc
 2621              		@ args = 0, pretend = 0, frame = 0
 2622              		@ frame_needed = 0, uses_anonymous_args = 0
 2623              		@ link register save eliminated.
 2624              	.LVL348:
 2625 0000 10B4     		push	{r4}
 2626              	.LCFI23:
 2627              		.cfi_def_cfa_offset 4
 2628              		.cfi_offset 4, -4
 2629              	.LVL349:
1795:FWLIB/src/stm32f4xx_tim.c **** 
 2630              		.loc 1 1795 0
 2631 0002 0123     		movs	r3, #1
 2632 0004 8B40     		lsls	r3, r3, r1
 2633 0006 9BB2     		uxth	r3, r3
 2634              	.LVL350:
1798:FWLIB/src/stm32f4xx_tim.c **** 
 2635              		.loc 1 1798 0
 2636 0008 048C     		ldrh	r4, [r0, #32]
 2637 000a DB43     		mvns	r3, r3
 2638              	.LVL351:
 2639 000c 9BB2     		uxth	r3, r3
 2640              	.LVL352:
 2641 000e 2340     		ands	r3, r3, r4
 2642 0010 0384     		strh	r3, [r0, #32]	@ movhi
1801:FWLIB/src/stm32f4xx_tim.c **** }
 2643              		.loc 1 1801 0
 2644 0012 038C     		ldrh	r3, [r0, #32]
 2645 0014 9BB2     		uxth	r3, r3
 2646 0016 8A40     		lsls	r2, r2, r1
 2647              	.LVL353:
 2648 0018 92B2     		uxth	r2, r2
 2649 001a 1A43     		orrs	r2, r2, r3
 2650 001c 0284     		strh	r2, [r0, #32]	@ movhi
1802:FWLIB/src/stm32f4xx_tim.c **** 
 2651              		.loc 1 1802 0
 2652 001e 5DF8044B 		ldr	r4, [sp], #4
 2653              	.LCFI24:
 2654              		.cfi_restore 4
 2655              		.cfi_def_cfa_offset 0
 2656 0022 7047     		bx	lr
 2657              		.cfi_endproc
 2658              	.LFE171:
 2660              		.section	.text.TIM_CCxNCmd,"ax",%progbits
 2661              		.align	1
 2662              		.global	TIM_CCxNCmd
 2663              		.syntax unified
 2664              		.thumb
 2665              		.thumb_func
 2666              		.fpu fpv4-sp-d16
 2668              	TIM_CCxNCmd:
 2669              	.LFB172:
1817:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 2670              		.loc 1 1817 0
 2671              		.cfi_startproc
 2672              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccses48D.s 			page 111


 2673              		@ frame_needed = 0, uses_anonymous_args = 0
 2674              		@ link register save eliminated.
 2675              	.LVL354:
 2676 0000 10B4     		push	{r4}
 2677              	.LCFI25:
 2678              		.cfi_def_cfa_offset 4
 2679              		.cfi_offset 4, -4
 2680              	.LVL355:
1825:FWLIB/src/stm32f4xx_tim.c **** 
 2681              		.loc 1 1825 0
 2682 0002 0423     		movs	r3, #4
 2683 0004 8B40     		lsls	r3, r3, r1
 2684 0006 9BB2     		uxth	r3, r3
 2685              	.LVL356:
1828:FWLIB/src/stm32f4xx_tim.c **** 
 2686              		.loc 1 1828 0
 2687 0008 048C     		ldrh	r4, [r0, #32]
 2688 000a DB43     		mvns	r3, r3
 2689              	.LVL357:
 2690 000c 9BB2     		uxth	r3, r3
 2691              	.LVL358:
 2692 000e 2340     		ands	r3, r3, r4
 2693 0010 0384     		strh	r3, [r0, #32]	@ movhi
1831:FWLIB/src/stm32f4xx_tim.c **** }
 2694              		.loc 1 1831 0
 2695 0012 038C     		ldrh	r3, [r0, #32]
 2696 0014 9BB2     		uxth	r3, r3
 2697 0016 8A40     		lsls	r2, r2, r1
 2698              	.LVL359:
 2699 0018 92B2     		uxth	r2, r2
 2700 001a 1A43     		orrs	r2, r2, r3
 2701 001c 0284     		strh	r2, [r0, #32]	@ movhi
1832:FWLIB/src/stm32f4xx_tim.c **** /**
 2702              		.loc 1 1832 0
 2703 001e 5DF8044B 		ldr	r4, [sp], #4
 2704              	.LCFI26:
 2705              		.cfi_restore 4
 2706              		.cfi_def_cfa_offset 0
 2707 0022 7047     		bx	lr
 2708              		.cfi_endproc
 2709              	.LFE172:
 2711              		.section	.text.TIM_ICStructInit,"ax",%progbits
 2712              		.align	1
 2713              		.global	TIM_ICStructInit
 2714              		.syntax unified
 2715              		.thumb
 2716              		.thumb_func
 2717              		.fpu fpv4-sp-d16
 2719              	TIM_ICStructInit:
 2720              	.LFB174:
1957:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 2721              		.loc 1 1957 0
 2722              		.cfi_startproc
 2723              		@ args = 0, pretend = 0, frame = 0
 2724              		@ frame_needed = 0, uses_anonymous_args = 0
 2725              		@ link register save eliminated.
 2726              	.LVL360:
ARM GAS  /tmp/ccses48D.s 			page 112


1959:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 2727              		.loc 1 1959 0
 2728 0000 0023     		movs	r3, #0
 2729 0002 0380     		strh	r3, [r0]	@ movhi
1960:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 2730              		.loc 1 1960 0
 2731 0004 4380     		strh	r3, [r0, #2]	@ movhi
1961:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 2732              		.loc 1 1961 0
 2733 0006 0122     		movs	r2, #1
 2734 0008 8280     		strh	r2, [r0, #4]	@ movhi
1962:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 2735              		.loc 1 1962 0
 2736 000a C380     		strh	r3, [r0, #6]	@ movhi
1963:FWLIB/src/stm32f4xx_tim.c **** }
 2737              		.loc 1 1963 0
 2738 000c 0381     		strh	r3, [r0, #8]	@ movhi
 2739 000e 7047     		bx	lr
 2740              		.cfi_endproc
 2741              	.LFE174:
 2743              		.section	.text.TIM_GetCapture1,"ax",%progbits
 2744              		.align	1
 2745              		.global	TIM_GetCapture1
 2746              		.syntax unified
 2747              		.thumb
 2748              		.thumb_func
 2749              		.fpu fpv4-sp-d16
 2751              	TIM_GetCapture1:
 2752              	.LFB176:
2033:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2753              		.loc 1 2033 0
 2754              		.cfi_startproc
 2755              		@ args = 0, pretend = 0, frame = 0
 2756              		@ frame_needed = 0, uses_anonymous_args = 0
 2757              		@ link register save eliminated.
 2758              	.LVL361:
2038:FWLIB/src/stm32f4xx_tim.c **** }
 2759              		.loc 1 2038 0
 2760 0000 406B     		ldr	r0, [r0, #52]
 2761              	.LVL362:
2039:FWLIB/src/stm32f4xx_tim.c **** 
 2762              		.loc 1 2039 0
 2763 0002 7047     		bx	lr
 2764              		.cfi_endproc
 2765              	.LFE176:
 2767              		.section	.text.TIM_GetCapture2,"ax",%progbits
 2768              		.align	1
 2769              		.global	TIM_GetCapture2
 2770              		.syntax unified
 2771              		.thumb
 2772              		.thumb_func
 2773              		.fpu fpv4-sp-d16
 2775              	TIM_GetCapture2:
 2776              	.LFB177:
2048:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2777              		.loc 1 2048 0
 2778              		.cfi_startproc
ARM GAS  /tmp/ccses48D.s 			page 113


 2779              		@ args = 0, pretend = 0, frame = 0
 2780              		@ frame_needed = 0, uses_anonymous_args = 0
 2781              		@ link register save eliminated.
 2782              	.LVL363:
2053:FWLIB/src/stm32f4xx_tim.c **** }
 2783              		.loc 1 2053 0
 2784 0000 806B     		ldr	r0, [r0, #56]
 2785              	.LVL364:
2054:FWLIB/src/stm32f4xx_tim.c **** 
 2786              		.loc 1 2054 0
 2787 0002 7047     		bx	lr
 2788              		.cfi_endproc
 2789              	.LFE177:
 2791              		.section	.text.TIM_GetCapture3,"ax",%progbits
 2792              		.align	1
 2793              		.global	TIM_GetCapture3
 2794              		.syntax unified
 2795              		.thumb
 2796              		.thumb_func
 2797              		.fpu fpv4-sp-d16
 2799              	TIM_GetCapture3:
 2800              	.LFB178:
2062:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2801              		.loc 1 2062 0
 2802              		.cfi_startproc
 2803              		@ args = 0, pretend = 0, frame = 0
 2804              		@ frame_needed = 0, uses_anonymous_args = 0
 2805              		@ link register save eliminated.
 2806              	.LVL365:
2067:FWLIB/src/stm32f4xx_tim.c **** }
 2807              		.loc 1 2067 0
 2808 0000 C06B     		ldr	r0, [r0, #60]
 2809              	.LVL366:
2068:FWLIB/src/stm32f4xx_tim.c **** 
 2810              		.loc 1 2068 0
 2811 0002 7047     		bx	lr
 2812              		.cfi_endproc
 2813              	.LFE178:
 2815              		.section	.text.TIM_GetCapture4,"ax",%progbits
 2816              		.align	1
 2817              		.global	TIM_GetCapture4
 2818              		.syntax unified
 2819              		.thumb
 2820              		.thumb_func
 2821              		.fpu fpv4-sp-d16
 2823              	TIM_GetCapture4:
 2824              	.LFB179:
2076:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2825              		.loc 1 2076 0
 2826              		.cfi_startproc
 2827              		@ args = 0, pretend = 0, frame = 0
 2828              		@ frame_needed = 0, uses_anonymous_args = 0
 2829              		@ link register save eliminated.
 2830              	.LVL367:
2081:FWLIB/src/stm32f4xx_tim.c **** }
 2831              		.loc 1 2081 0
 2832 0000 006C     		ldr	r0, [r0, #64]
ARM GAS  /tmp/ccses48D.s 			page 114


 2833              	.LVL368:
2082:FWLIB/src/stm32f4xx_tim.c **** 
 2834              		.loc 1 2082 0
 2835 0002 7047     		bx	lr
 2836              		.cfi_endproc
 2837              	.LFE179:
 2839              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 2840              		.align	1
 2841              		.global	TIM_SetIC1Prescaler
 2842              		.syntax unified
 2843              		.thumb
 2844              		.thumb_func
 2845              		.fpu fpv4-sp-d16
 2847              	TIM_SetIC1Prescaler:
 2848              	.LFB180:
2096:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2849              		.loc 1 2096 0
 2850              		.cfi_startproc
 2851              		@ args = 0, pretend = 0, frame = 0
 2852              		@ frame_needed = 0, uses_anonymous_args = 0
 2853              		@ link register save eliminated.
 2854              	.LVL369:
2102:FWLIB/src/stm32f4xx_tim.c **** 
 2855              		.loc 1 2102 0
 2856 0000 038B     		ldrh	r3, [r0, #24]
 2857 0002 9BB2     		uxth	r3, r3
 2858 0004 23F00C03 		bic	r3, r3, #12
 2859 0008 9BB2     		uxth	r3, r3
 2860 000a 0383     		strh	r3, [r0, #24]	@ movhi
2105:FWLIB/src/stm32f4xx_tim.c **** }
 2861              		.loc 1 2105 0
 2862 000c 038B     		ldrh	r3, [r0, #24]
 2863 000e 9BB2     		uxth	r3, r3
 2864 0010 1943     		orrs	r1, r1, r3
 2865              	.LVL370:
 2866 0012 0183     		strh	r1, [r0, #24]	@ movhi
 2867 0014 7047     		bx	lr
 2868              		.cfi_endproc
 2869              	.LFE180:
 2871              		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 2872              		.align	1
 2873              		.global	TIM_SetIC2Prescaler
 2874              		.syntax unified
 2875              		.thumb
 2876              		.thumb_func
 2877              		.fpu fpv4-sp-d16
 2879              	TIM_SetIC2Prescaler:
 2880              	.LFB181:
2121:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2881              		.loc 1 2121 0
 2882              		.cfi_startproc
 2883              		@ args = 0, pretend = 0, frame = 0
 2884              		@ frame_needed = 0, uses_anonymous_args = 0
 2885              		@ link register save eliminated.
 2886              	.LVL371:
2127:FWLIB/src/stm32f4xx_tim.c **** 
 2887              		.loc 1 2127 0
ARM GAS  /tmp/ccses48D.s 			page 115


 2888 0000 038B     		ldrh	r3, [r0, #24]
 2889 0002 9BB2     		uxth	r3, r3
 2890 0004 23F44063 		bic	r3, r3, #3072
 2891 0008 9BB2     		uxth	r3, r3
 2892 000a 0383     		strh	r3, [r0, #24]	@ movhi
2130:FWLIB/src/stm32f4xx_tim.c **** }
 2893              		.loc 1 2130 0
 2894 000c 038B     		ldrh	r3, [r0, #24]
 2895 000e 9BB2     		uxth	r3, r3
 2896 0010 0902     		lsls	r1, r1, #8
 2897              	.LVL372:
 2898 0012 89B2     		uxth	r1, r1
 2899 0014 0B43     		orrs	r3, r3, r1
 2900 0016 0383     		strh	r3, [r0, #24]	@ movhi
 2901 0018 7047     		bx	lr
 2902              		.cfi_endproc
 2903              	.LFE181:
 2905              		.section	.text.TIM_PWMIConfig,"ax",%progbits
 2906              		.align	1
 2907              		.global	TIM_PWMIConfig
 2908              		.syntax unified
 2909              		.thumb
 2910              		.thumb_func
 2911              		.fpu fpv4-sp-d16
 2913              	TIM_PWMIConfig:
 2914              	.LFB175:
1976:FWLIB/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 2915              		.loc 1 1976 0
 2916              		.cfi_startproc
 2917              		@ args = 0, pretend = 0, frame = 0
 2918              		@ frame_needed = 0, uses_anonymous_args = 0
 2919              	.LVL373:
 2920 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2921              	.LCFI27:
 2922              		.cfi_def_cfa_offset 24
 2923              		.cfi_offset 3, -24
 2924              		.cfi_offset 4, -20
 2925              		.cfi_offset 5, -16
 2926              		.cfi_offset 6, -12
 2927              		.cfi_offset 7, -8
 2928              		.cfi_offset 14, -4
 2929 0002 0546     		mov	r5, r0
 2930 0004 0C46     		mov	r4, r1
 2931              	.LVL374:
1984:FWLIB/src/stm32f4xx_tim.c ****   {
 2932              		.loc 1 1984 0
 2933 0006 4988     		ldrh	r1, [r1, #2]
 2934              	.LVL375:
 2935 0008 C9B9     		cbnz	r1, .L147
1986:FWLIB/src/stm32f4xx_tim.c ****   }
 2936              		.loc 1 1986 0
 2937 000a 0226     		movs	r6, #2
 2938              	.L143:
 2939              	.LVL376:
1993:FWLIB/src/stm32f4xx_tim.c ****   {
 2940              		.loc 1 1993 0
 2941 000c A288     		ldrh	r2, [r4, #4]
ARM GAS  /tmp/ccses48D.s 			page 116


 2942 000e 012A     		cmp	r2, #1
 2943 0010 17D0     		beq	.L150
1999:FWLIB/src/stm32f4xx_tim.c ****   }
 2944              		.loc 1 1999 0
 2945 0012 0127     		movs	r7, #1
 2946              	.L144:
 2947              	.LVL377:
2001:FWLIB/src/stm32f4xx_tim.c ****   {
 2948              		.loc 1 2001 0
 2949 0014 2388     		ldrh	r3, [r4]
 2950 0016 B3B1     		cbz	r3, .L151
2016:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 2951              		.loc 1 2016 0
 2952 0018 2389     		ldrh	r3, [r4, #8]
 2953 001a 2846     		mov	r0, r5
 2954              	.LVL378:
 2955 001c FFF7FEFF 		bl	TI2_Config
 2956              	.LVL379:
2019:FWLIB/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
 2957              		.loc 1 2019 0
 2958 0020 E188     		ldrh	r1, [r4, #6]
 2959 0022 2846     		mov	r0, r5
 2960 0024 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 2961              	.LVL380:
2021:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
 2962              		.loc 1 2021 0
 2963 0028 2389     		ldrh	r3, [r4, #8]
 2964 002a 3A46     		mov	r2, r7
 2965 002c 3146     		mov	r1, r6
 2966 002e 2846     		mov	r0, r5
 2967 0030 FFF7FEFF 		bl	TI1_Config
 2968              	.LVL381:
2023:FWLIB/src/stm32f4xx_tim.c ****   }
 2969              		.loc 1 2023 0
 2970 0034 E188     		ldrh	r1, [r4, #6]
 2971 0036 2846     		mov	r0, r5
 2972 0038 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 2973              	.LVL382:
 2974 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2975              	.LVL383:
 2976              	.L147:
1990:FWLIB/src/stm32f4xx_tim.c ****   }
 2977              		.loc 1 1990 0
 2978 003e 0026     		movs	r6, #0
 2979 0040 E4E7     		b	.L143
 2980              	.LVL384:
 2981              	.L150:
1995:FWLIB/src/stm32f4xx_tim.c ****   }
 2982              		.loc 1 1995 0
 2983 0042 0227     		movs	r7, #2
 2984 0044 E6E7     		b	.L144
 2985              	.LVL385:
 2986              	.L151:
2004:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 2987              		.loc 1 2004 0
 2988 0046 2389     		ldrh	r3, [r4, #8]
 2989 0048 2846     		mov	r0, r5
ARM GAS  /tmp/ccses48D.s 			page 117


 2990              	.LVL386:
 2991 004a FFF7FEFF 		bl	TI1_Config
 2992              	.LVL387:
2007:FWLIB/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
 2993              		.loc 1 2007 0
 2994 004e E188     		ldrh	r1, [r4, #6]
 2995 0050 2846     		mov	r0, r5
 2996 0052 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 2997              	.LVL388:
2009:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
 2998              		.loc 1 2009 0
 2999 0056 2389     		ldrh	r3, [r4, #8]
 3000 0058 3A46     		mov	r2, r7
 3001 005a 3146     		mov	r1, r6
 3002 005c 2846     		mov	r0, r5
 3003 005e FFF7FEFF 		bl	TI2_Config
 3004              	.LVL389:
2011:FWLIB/src/stm32f4xx_tim.c ****   }
 3005              		.loc 1 2011 0
 3006 0062 E188     		ldrh	r1, [r4, #6]
 3007 0064 2846     		mov	r0, r5
 3008 0066 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3009              	.LVL390:
 3010 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3011              		.cfi_endproc
 3012              	.LFE175:
 3014              		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 3015              		.align	1
 3016              		.global	TIM_SetIC3Prescaler
 3017              		.syntax unified
 3018              		.thumb
 3019              		.thumb_func
 3020              		.fpu fpv4-sp-d16
 3022              	TIM_SetIC3Prescaler:
 3023              	.LFB182:
2145:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3024              		.loc 1 2145 0
 3025              		.cfi_startproc
 3026              		@ args = 0, pretend = 0, frame = 0
 3027              		@ frame_needed = 0, uses_anonymous_args = 0
 3028              		@ link register save eliminated.
 3029              	.LVL391:
2151:FWLIB/src/stm32f4xx_tim.c **** 
 3030              		.loc 1 2151 0
 3031 0000 838B     		ldrh	r3, [r0, #28]
 3032 0002 9BB2     		uxth	r3, r3
 3033 0004 23F00C03 		bic	r3, r3, #12
 3034 0008 9BB2     		uxth	r3, r3
 3035 000a 8383     		strh	r3, [r0, #28]	@ movhi
2154:FWLIB/src/stm32f4xx_tim.c **** }
 3036              		.loc 1 2154 0
 3037 000c 838B     		ldrh	r3, [r0, #28]
 3038 000e 9BB2     		uxth	r3, r3
 3039 0010 1943     		orrs	r1, r1, r3
 3040              	.LVL392:
 3041 0012 8183     		strh	r1, [r0, #28]	@ movhi
 3042 0014 7047     		bx	lr
ARM GAS  /tmp/ccses48D.s 			page 118


 3043              		.cfi_endproc
 3044              	.LFE182:
 3046              		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 3047              		.align	1
 3048              		.global	TIM_SetIC4Prescaler
 3049              		.syntax unified
 3050              		.thumb
 3051              		.thumb_func
 3052              		.fpu fpv4-sp-d16
 3054              	TIM_SetIC4Prescaler:
 3055              	.LFB183:
2169:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3056              		.loc 1 2169 0
 3057              		.cfi_startproc
 3058              		@ args = 0, pretend = 0, frame = 0
 3059              		@ frame_needed = 0, uses_anonymous_args = 0
 3060              		@ link register save eliminated.
 3061              	.LVL393:
2175:FWLIB/src/stm32f4xx_tim.c **** 
 3062              		.loc 1 2175 0
 3063 0000 838B     		ldrh	r3, [r0, #28]
 3064 0002 9BB2     		uxth	r3, r3
 3065 0004 23F44063 		bic	r3, r3, #3072
 3066 0008 9BB2     		uxth	r3, r3
 3067 000a 8383     		strh	r3, [r0, #28]	@ movhi
2178:FWLIB/src/stm32f4xx_tim.c **** }
 3068              		.loc 1 2178 0
 3069 000c 838B     		ldrh	r3, [r0, #28]
 3070 000e 9BB2     		uxth	r3, r3
 3071 0010 0902     		lsls	r1, r1, #8
 3072              	.LVL394:
 3073 0012 89B2     		uxth	r1, r1
 3074 0014 0B43     		orrs	r3, r3, r1
 3075 0016 8383     		strh	r3, [r0, #28]	@ movhi
 3076 0018 7047     		bx	lr
 3077              		.cfi_endproc
 3078              	.LFE183:
 3080              		.section	.text.TIM_ICInit,"ax",%progbits
 3081              		.align	1
 3082              		.global	TIM_ICInit
 3083              		.syntax unified
 3084              		.thumb
 3085              		.thumb_func
 3086              		.fpu fpv4-sp-d16
 3088              	TIM_ICInit:
 3089              	.LFB173:
1901:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3090              		.loc 1 1901 0
 3091              		.cfi_startproc
 3092              		@ args = 0, pretend = 0, frame = 0
 3093              		@ frame_needed = 0, uses_anonymous_args = 0
 3094              	.LVL395:
 3095 0000 38B5     		push	{r3, r4, r5, lr}
 3096              	.LCFI28:
 3097              		.cfi_def_cfa_offset 16
 3098              		.cfi_offset 3, -16
 3099              		.cfi_offset 4, -12
ARM GAS  /tmp/ccses48D.s 			page 119


 3100              		.cfi_offset 5, -8
 3101              		.cfi_offset 14, -4
 3102 0002 0546     		mov	r5, r0
 3103 0004 0C46     		mov	r4, r1
1909:FWLIB/src/stm32f4xx_tim.c ****   {
 3104              		.loc 1 1909 0
 3105 0006 0B88     		ldrh	r3, [r1]
 3106 0008 6BB1     		cbz	r3, .L160
1918:FWLIB/src/stm32f4xx_tim.c ****   {
 3107              		.loc 1 1918 0
 3108 000a 042B     		cmp	r3, #4
 3109 000c 15D0     		beq	.L161
1928:FWLIB/src/stm32f4xx_tim.c ****   {
 3110              		.loc 1 1928 0
 3111 000e 082B     		cmp	r3, #8
 3112 0010 1DD0     		beq	.L162
1942:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3113              		.loc 1 1942 0
 3114 0012 0B89     		ldrh	r3, [r1, #8]
 3115 0014 8A88     		ldrh	r2, [r1, #4]
 3116 0016 4988     		ldrh	r1, [r1, #2]
 3117              	.LVL396:
 3118 0018 FFF7FEFF 		bl	TI4_Config
 3119              	.LVL397:
1946:FWLIB/src/stm32f4xx_tim.c ****   }
 3120              		.loc 1 1946 0
 3121 001c E188     		ldrh	r1, [r4, #6]
 3122 001e 2846     		mov	r0, r5
 3123 0020 FFF7FEFF 		bl	TIM_SetIC4Prescaler
 3124              	.LVL398:
 3125 0024 38BD     		pop	{r3, r4, r5, pc}
 3126              	.LVL399:
 3127              	.L160:
1912:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3128              		.loc 1 1912 0
 3129 0026 0B89     		ldrh	r3, [r1, #8]
 3130 0028 8A88     		ldrh	r2, [r1, #4]
 3131 002a 4988     		ldrh	r1, [r1, #2]
 3132              	.LVL400:
 3133 002c FFF7FEFF 		bl	TI1_Config
 3134              	.LVL401:
1916:FWLIB/src/stm32f4xx_tim.c ****   }
 3135              		.loc 1 1916 0
 3136 0030 E188     		ldrh	r1, [r4, #6]
 3137 0032 2846     		mov	r0, r5
 3138 0034 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3139              	.LVL402:
 3140 0038 38BD     		pop	{r3, r4, r5, pc}
 3141              	.LVL403:
 3142              	.L161:
1922:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3143              		.loc 1 1922 0
 3144 003a 0B89     		ldrh	r3, [r1, #8]
 3145 003c 8A88     		ldrh	r2, [r1, #4]
 3146 003e 4988     		ldrh	r1, [r1, #2]
 3147              	.LVL404:
 3148 0040 FFF7FEFF 		bl	TI2_Config
ARM GAS  /tmp/ccses48D.s 			page 120


 3149              	.LVL405:
1926:FWLIB/src/stm32f4xx_tim.c ****   }
 3150              		.loc 1 1926 0
 3151 0044 E188     		ldrh	r1, [r4, #6]
 3152 0046 2846     		mov	r0, r5
 3153 0048 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3154              	.LVL406:
 3155 004c 38BD     		pop	{r3, r4, r5, pc}
 3156              	.LVL407:
 3157              	.L162:
1932:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3158              		.loc 1 1932 0
 3159 004e 0B89     		ldrh	r3, [r1, #8]
 3160 0050 8A88     		ldrh	r2, [r1, #4]
 3161 0052 4988     		ldrh	r1, [r1, #2]
 3162              	.LVL408:
 3163 0054 FFF7FEFF 		bl	TI3_Config
 3164              	.LVL409:
1936:FWLIB/src/stm32f4xx_tim.c ****   }
 3165              		.loc 1 1936 0
 3166 0058 E188     		ldrh	r1, [r4, #6]
 3167 005a 2846     		mov	r0, r5
 3168 005c FFF7FEFF 		bl	TIM_SetIC3Prescaler
 3169              	.LVL410:
 3170 0060 38BD     		pop	{r3, r4, r5, pc}
 3171              		.cfi_endproc
 3172              	.LFE173:
 3174              		.section	.text.TIM_BDTRConfig,"ax",%progbits
 3175              		.align	1
 3176              		.global	TIM_BDTRConfig
 3177              		.syntax unified
 3178              		.thumb
 3179              		.thumb_func
 3180              		.fpu fpv4-sp-d16
 3182              	TIM_BDTRConfig:
 3183              	.LFB184:
2222:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3184              		.loc 1 2222 0
 3185              		.cfi_startproc
 3186              		@ args = 0, pretend = 0, frame = 0
 3187              		@ frame_needed = 0, uses_anonymous_args = 0
 3188              	.LVL411:
 3189 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3190              	.LCFI29:
 3191              		.cfi_def_cfa_offset 20
 3192              		.cfi_offset 4, -20
 3193              		.cfi_offset 5, -16
 3194              		.cfi_offset 6, -12
 3195              		.cfi_offset 7, -8
 3196              		.cfi_offset 14, -4
2234:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 3197              		.loc 1 2234 0
 3198 0002 0F88     		ldrh	r7, [r1]
 3199 0004 B1F802E0 		ldrh	lr, [r1, #2]
2235:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 3200              		.loc 1 2235 0
 3201 0008 8E88     		ldrh	r6, [r1, #4]
ARM GAS  /tmp/ccses48D.s 			page 121


 3202 000a CD88     		ldrh	r5, [r1, #6]
2236:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 3203              		.loc 1 2236 0
 3204 000c 0C89     		ldrh	r4, [r1, #8]
 3205 000e 4A89     		ldrh	r2, [r1, #10]
2237:FWLIB/src/stm32f4xx_tim.c **** }
 3206              		.loc 1 2237 0
 3207 0010 8B89     		ldrh	r3, [r1, #12]
2234:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 3208              		.loc 1 2234 0
 3209 0012 47EA0E01 		orr	r1, r7, lr
 3210              	.LVL412:
 3211 0016 3143     		orrs	r1, r1, r6
 3212 0018 2943     		orrs	r1, r1, r5
 3213 001a 2143     		orrs	r1, r1, r4
 3214 001c 0A43     		orrs	r2, r2, r1
 3215 001e 1343     		orrs	r3, r3, r2
 3216 0020 A0F84430 		strh	r3, [r0, #68]	@ movhi
 3217 0024 F0BD     		pop	{r4, r5, r6, r7, pc}
 3218              		.cfi_endproc
 3219              	.LFE184:
 3221              		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 3222              		.align	1
 3223              		.global	TIM_BDTRStructInit
 3224              		.syntax unified
 3225              		.thumb
 3226              		.thumb_func
 3227              		.fpu fpv4-sp-d16
 3229              	TIM_BDTRStructInit:
 3230              	.LFB185:
2247:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 3231              		.loc 1 2247 0
 3232              		.cfi_startproc
 3233              		@ args = 0, pretend = 0, frame = 0
 3234              		@ frame_needed = 0, uses_anonymous_args = 0
 3235              		@ link register save eliminated.
 3236              	.LVL413:
2249:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 3237              		.loc 1 2249 0
 3238 0000 0023     		movs	r3, #0
 3239 0002 0380     		strh	r3, [r0]	@ movhi
2250:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 3240              		.loc 1 2250 0
 3241 0004 4380     		strh	r3, [r0, #2]	@ movhi
2251:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 3242              		.loc 1 2251 0
 3243 0006 8380     		strh	r3, [r0, #4]	@ movhi
2252:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 3244              		.loc 1 2252 0
 3245 0008 C380     		strh	r3, [r0, #6]	@ movhi
2253:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 3246              		.loc 1 2253 0
 3247 000a 0381     		strh	r3, [r0, #8]	@ movhi
2254:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 3248              		.loc 1 2254 0
 3249 000c 4381     		strh	r3, [r0, #10]	@ movhi
2255:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  /tmp/ccses48D.s 			page 122


 3250              		.loc 1 2255 0
 3251 000e 8381     		strh	r3, [r0, #12]	@ movhi
 3252 0010 7047     		bx	lr
 3253              		.cfi_endproc
 3254              	.LFE185:
 3256              		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 3257              		.align	1
 3258              		.global	TIM_CtrlPWMOutputs
 3259              		.syntax unified
 3260              		.thumb
 3261              		.thumb_func
 3262              		.fpu fpv4-sp-d16
 3264              	TIM_CtrlPWMOutputs:
 3265              	.LFB186:
2266:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3266              		.loc 1 2266 0
 3267              		.cfi_startproc
 3268              		@ args = 0, pretend = 0, frame = 0
 3269              		@ frame_needed = 0, uses_anonymous_args = 0
 3270              		@ link register save eliminated.
 3271              	.LVL414:
2271:FWLIB/src/stm32f4xx_tim.c ****   {
 3272              		.loc 1 2271 0
 3273 0000 31B9     		cbnz	r1, .L169
2279:FWLIB/src/stm32f4xx_tim.c ****   }  
 3274              		.loc 1 2279 0
 3275 0002 B0F84430 		ldrh	r3, [r0, #68]
 3276 0006 C3F30E03 		ubfx	r3, r3, #0, #15
 3277 000a A0F84430 		strh	r3, [r0, #68]	@ movhi
 3278 000e 7047     		bx	lr
 3279              	.L169:
2274:FWLIB/src/stm32f4xx_tim.c ****   }
 3280              		.loc 1 2274 0
 3281 0010 B0F84430 		ldrh	r3, [r0, #68]
 3282 0014 6FEA4343 		mvn	r3, r3, lsl #17
 3283 0018 6FEA5343 		mvn	r3, r3, lsr #17
 3284 001c 9BB2     		uxth	r3, r3
 3285 001e A0F84430 		strh	r3, [r0, #68]	@ movhi
 3286 0022 7047     		bx	lr
 3287              		.cfi_endproc
 3288              	.LFE186:
 3290              		.section	.text.TIM_SelectCOM,"ax",%progbits
 3291              		.align	1
 3292              		.global	TIM_SelectCOM
 3293              		.syntax unified
 3294              		.thumb
 3295              		.thumb_func
 3296              		.fpu fpv4-sp-d16
 3298              	TIM_SelectCOM:
 3299              	.LFB187:
2291:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3300              		.loc 1 2291 0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 0
 3303              		@ frame_needed = 0, uses_anonymous_args = 0
 3304              		@ link register save eliminated.
 3305              	.LVL415:
ARM GAS  /tmp/ccses48D.s 			page 123


2296:FWLIB/src/stm32f4xx_tim.c ****   {
 3306              		.loc 1 2296 0
 3307 0000 31B9     		cbnz	r1, .L173
2304:FWLIB/src/stm32f4xx_tim.c ****   }
 3308              		.loc 1 2304 0
 3309 0002 8388     		ldrh	r3, [r0, #4]
 3310 0004 9BB2     		uxth	r3, r3
 3311 0006 23F00403 		bic	r3, r3, #4
 3312 000a 9BB2     		uxth	r3, r3
 3313 000c 8380     		strh	r3, [r0, #4]	@ movhi
 3314 000e 7047     		bx	lr
 3315              	.L173:
2299:FWLIB/src/stm32f4xx_tim.c ****   }
 3316              		.loc 1 2299 0
 3317 0010 8388     		ldrh	r3, [r0, #4]
 3318 0012 9BB2     		uxth	r3, r3
 3319 0014 43F00403 		orr	r3, r3, #4
 3320 0018 8380     		strh	r3, [r0, #4]	@ movhi
 3321 001a 7047     		bx	lr
 3322              		.cfi_endproc
 3323              	.LFE187:
 3325              		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 3326              		.align	1
 3327              		.global	TIM_CCPreloadControl
 3328              		.syntax unified
 3329              		.thumb
 3330              		.thumb_func
 3331              		.fpu fpv4-sp-d16
 3333              	TIM_CCPreloadControl:
 3334              	.LFB188:
2316:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3335              		.loc 1 2316 0
 3336              		.cfi_startproc
 3337              		@ args = 0, pretend = 0, frame = 0
 3338              		@ frame_needed = 0, uses_anonymous_args = 0
 3339              		@ link register save eliminated.
 3340              	.LVL416:
2320:FWLIB/src/stm32f4xx_tim.c ****   {
 3341              		.loc 1 2320 0
 3342 0000 31B9     		cbnz	r1, .L177
2328:FWLIB/src/stm32f4xx_tim.c ****   }
 3343              		.loc 1 2328 0
 3344 0002 8388     		ldrh	r3, [r0, #4]
 3345 0004 9BB2     		uxth	r3, r3
 3346 0006 23F00103 		bic	r3, r3, #1
 3347 000a 9BB2     		uxth	r3, r3
 3348 000c 8380     		strh	r3, [r0, #4]	@ movhi
 3349 000e 7047     		bx	lr
 3350              	.L177:
2323:FWLIB/src/stm32f4xx_tim.c ****   }
 3351              		.loc 1 2323 0
 3352 0010 8388     		ldrh	r3, [r0, #4]
 3353 0012 9BB2     		uxth	r3, r3
 3354 0014 43F00103 		orr	r3, r3, #1
 3355 0018 8380     		strh	r3, [r0, #4]	@ movhi
 3356 001a 7047     		bx	lr
 3357              		.cfi_endproc
ARM GAS  /tmp/ccses48D.s 			page 124


 3358              	.LFE188:
 3360              		.section	.text.TIM_ITConfig,"ax",%progbits
 3361              		.align	1
 3362              		.global	TIM_ITConfig
 3363              		.syntax unified
 3364              		.thumb
 3365              		.thumb_func
 3366              		.fpu fpv4-sp-d16
 3368              	TIM_ITConfig:
 3369              	.LFB189:
2373:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3370              		.loc 1 2373 0
 3371              		.cfi_startproc
 3372              		@ args = 0, pretend = 0, frame = 0
 3373              		@ frame_needed = 0, uses_anonymous_args = 0
 3374              		@ link register save eliminated.
 3375              	.LVL417:
2379:FWLIB/src/stm32f4xx_tim.c ****   {
 3376              		.loc 1 2379 0
 3377 0000 2AB9     		cbnz	r2, .L181
2387:FWLIB/src/stm32f4xx_tim.c ****   }
 3378              		.loc 1 2387 0
 3379 0002 8389     		ldrh	r3, [r0, #12]
 3380 0004 C943     		mvns	r1, r1
 3381              	.LVL418:
 3382 0006 89B2     		uxth	r1, r1
 3383 0008 1940     		ands	r1, r1, r3
 3384 000a 8181     		strh	r1, [r0, #12]	@ movhi
 3385 000c 7047     		bx	lr
 3386              	.LVL419:
 3387              	.L181:
2382:FWLIB/src/stm32f4xx_tim.c ****   }
 3388              		.loc 1 2382 0
 3389 000e 8389     		ldrh	r3, [r0, #12]
 3390 0010 9BB2     		uxth	r3, r3
 3391 0012 1943     		orrs	r1, r1, r3
 3392              	.LVL420:
 3393 0014 8181     		strh	r1, [r0, #12]	@ movhi
 3394 0016 7047     		bx	lr
 3395              		.cfi_endproc
 3396              	.LFE189:
 3398              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 3399              		.align	1
 3400              		.global	TIM_GenerateEvent
 3401              		.syntax unified
 3402              		.thumb
 3403              		.thumb_func
 3404              		.fpu fpv4-sp-d16
 3406              	TIM_GenerateEvent:
 3407              	.LFB190:
2411:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3408              		.loc 1 2411 0
 3409              		.cfi_startproc
 3410              		@ args = 0, pretend = 0, frame = 0
 3411              		@ frame_needed = 0, uses_anonymous_args = 0
 3412              		@ link register save eliminated.
 3413              	.LVL421:
ARM GAS  /tmp/ccses48D.s 			page 125


2417:FWLIB/src/stm32f4xx_tim.c **** }
 3414              		.loc 1 2417 0
 3415 0000 8182     		strh	r1, [r0, #20]	@ movhi
 3416 0002 7047     		bx	lr
 3417              		.cfi_endproc
 3418              	.LFE190:
 3420              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 3421              		.align	1
 3422              		.global	TIM_GetFlagStatus
 3423              		.syntax unified
 3424              		.thumb
 3425              		.thumb_func
 3426              		.fpu fpv4-sp-d16
 3428              	TIM_GetFlagStatus:
 3429              	.LFB191:
2444:FWLIB/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 3430              		.loc 1 2444 0
 3431              		.cfi_startproc
 3432              		@ args = 0, pretend = 0, frame = 0
 3433              		@ frame_needed = 0, uses_anonymous_args = 0
 3434              		@ link register save eliminated.
 3435              	.LVL422:
2451:FWLIB/src/stm32f4xx_tim.c ****   {
 3436              		.loc 1 2451 0
 3437 0000 038A     		ldrh	r3, [r0, #16]
 3438 0002 1942     		tst	r1, r3
 3439 0004 01D1     		bne	.L186
2457:FWLIB/src/stm32f4xx_tim.c ****   }
 3440              		.loc 1 2457 0
 3441 0006 0020     		movs	r0, #0
 3442              	.LVL423:
2460:FWLIB/src/stm32f4xx_tim.c **** 
 3443              		.loc 1 2460 0
 3444 0008 7047     		bx	lr
 3445              	.LVL424:
 3446              	.L186:
2453:FWLIB/src/stm32f4xx_tim.c ****   }
 3447              		.loc 1 2453 0
 3448 000a 0120     		movs	r0, #1
 3449              	.LVL425:
 3450 000c 7047     		bx	lr
 3451              		.cfi_endproc
 3452              	.LFE191:
 3454              		.section	.text.TIM_ClearFlag,"ax",%progbits
 3455              		.align	1
 3456              		.global	TIM_ClearFlag
 3457              		.syntax unified
 3458              		.thumb
 3459              		.thumb_func
 3460              		.fpu fpv4-sp-d16
 3462              	TIM_ClearFlag:
 3463              	.LFB192:
2486:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3464              		.loc 1 2486 0
 3465              		.cfi_startproc
 3466              		@ args = 0, pretend = 0, frame = 0
 3467              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccses48D.s 			page 126


 3468              		@ link register save eliminated.
 3469              	.LVL426:
2491:FWLIB/src/stm32f4xx_tim.c **** }
 3470              		.loc 1 2491 0
 3471 0000 C943     		mvns	r1, r1
 3472              	.LVL427:
 3473 0002 89B2     		uxth	r1, r1
 3474 0004 0182     		strh	r1, [r0, #16]	@ movhi
 3475 0006 7047     		bx	lr
 3476              		.cfi_endproc
 3477              	.LFE192:
 3479              		.section	.text.TIM_GetITStatus,"ax",%progbits
 3480              		.align	1
 3481              		.global	TIM_GetITStatus
 3482              		.syntax unified
 3483              		.thumb
 3484              		.thumb_func
 3485              		.fpu fpv4-sp-d16
 3487              	TIM_GetITStatus:
 3488              	.LFB193:
2514:FWLIB/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 3489              		.loc 1 2514 0
 3490              		.cfi_startproc
 3491              		@ args = 0, pretend = 0, frame = 0
 3492              		@ frame_needed = 0, uses_anonymous_args = 0
 3493              		@ link register save eliminated.
 3494              	.LVL428:
2521:FWLIB/src/stm32f4xx_tim.c ****   
 3495              		.loc 1 2521 0
 3496 0000 028A     		ldrh	r2, [r0, #16]
 3497              	.LVL429:
2523:FWLIB/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 3498              		.loc 1 2523 0
 3499 0002 8389     		ldrh	r3, [r0, #12]
 3500 0004 0B40     		ands	r3, r3, r1
 3501              	.LVL430:
2524:FWLIB/src/stm32f4xx_tim.c ****   {
 3502              		.loc 1 2524 0
 3503 0006 1142     		tst	r1, r2
 3504 0008 02D0     		beq	.L190
2524:FWLIB/src/stm32f4xx_tim.c ****   {
 3505              		.loc 1 2524 0 is_stmt 0 discriminator 1
 3506 000a 1BB9     		cbnz	r3, .L191
2530:FWLIB/src/stm32f4xx_tim.c ****   }
 3507              		.loc 1 2530 0 is_stmt 1
 3508 000c 0020     		movs	r0, #0
 3509              	.LVL431:
 3510 000e 7047     		bx	lr
 3511              	.LVL432:
 3512              	.L190:
 3513 0010 0020     		movs	r0, #0
 3514              	.LVL433:
 3515 0012 7047     		bx	lr
 3516              	.LVL434:
 3517              	.L191:
2526:FWLIB/src/stm32f4xx_tim.c ****   }
 3518              		.loc 1 2526 0
ARM GAS  /tmp/ccses48D.s 			page 127


 3519 0014 0120     		movs	r0, #1
 3520              	.LVL435:
2533:FWLIB/src/stm32f4xx_tim.c **** 
 3521              		.loc 1 2533 0
 3522 0016 7047     		bx	lr
 3523              		.cfi_endproc
 3524              	.LFE193:
 3526              		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 3527              		.align	1
 3528              		.global	TIM_ClearITPendingBit
 3529              		.syntax unified
 3530              		.thumb
 3531              		.thumb_func
 3532              		.fpu fpv4-sp-d16
 3534              	TIM_ClearITPendingBit:
 3535              	.LFB194:
2555:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3536              		.loc 1 2555 0
 3537              		.cfi_startproc
 3538              		@ args = 0, pretend = 0, frame = 0
 3539              		@ frame_needed = 0, uses_anonymous_args = 0
 3540              		@ link register save eliminated.
 3541              	.LVL436:
2560:FWLIB/src/stm32f4xx_tim.c **** }
 3542              		.loc 1 2560 0
 3543 0000 C943     		mvns	r1, r1
 3544              	.LVL437:
 3545 0002 89B2     		uxth	r1, r1
 3546 0004 0182     		strh	r1, [r0, #16]	@ movhi
 3547 0006 7047     		bx	lr
 3548              		.cfi_endproc
 3549              	.LFE194:
 3551              		.section	.text.TIM_DMAConfig,"ax",%progbits
 3552              		.align	1
 3553              		.global	TIM_DMAConfig
 3554              		.syntax unified
 3555              		.thumb
 3556              		.thumb_func
 3557              		.fpu fpv4-sp-d16
 3559              	TIM_DMAConfig:
 3560              	.LFB195:
2592:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3561              		.loc 1 2592 0
 3562              		.cfi_startproc
 3563              		@ args = 0, pretend = 0, frame = 0
 3564              		@ frame_needed = 0, uses_anonymous_args = 0
 3565              		@ link register save eliminated.
 3566              	.LVL438:
2599:FWLIB/src/stm32f4xx_tim.c **** }
 3567              		.loc 1 2599 0
 3568 0000 0A43     		orrs	r2, r2, r1
 3569              	.LVL439:
 3570 0002 A0F84820 		strh	r2, [r0, #72]	@ movhi
 3571 0006 7047     		bx	lr
 3572              		.cfi_endproc
 3573              	.LFE195:
 3575              		.section	.text.TIM_DMACmd,"ax",%progbits
ARM GAS  /tmp/ccses48D.s 			page 128


 3576              		.align	1
 3577              		.global	TIM_DMACmd
 3578              		.syntax unified
 3579              		.thumb
 3580              		.thumb_func
 3581              		.fpu fpv4-sp-d16
 3583              	TIM_DMACmd:
 3584              	.LFB196:
2619:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3585              		.loc 1 2619 0
 3586              		.cfi_startproc
 3587              		@ args = 0, pretend = 0, frame = 0
 3588              		@ frame_needed = 0, uses_anonymous_args = 0
 3589              		@ link register save eliminated.
 3590              	.LVL440:
2625:FWLIB/src/stm32f4xx_tim.c ****   {
 3591              		.loc 1 2625 0
 3592 0000 2AB9     		cbnz	r2, .L197
2633:FWLIB/src/stm32f4xx_tim.c ****   }
 3593              		.loc 1 2633 0
 3594 0002 8389     		ldrh	r3, [r0, #12]
 3595 0004 C943     		mvns	r1, r1
 3596              	.LVL441:
 3597 0006 89B2     		uxth	r1, r1
 3598 0008 1940     		ands	r1, r1, r3
 3599 000a 8181     		strh	r1, [r0, #12]	@ movhi
 3600 000c 7047     		bx	lr
 3601              	.LVL442:
 3602              	.L197:
2628:FWLIB/src/stm32f4xx_tim.c ****   }
 3603              		.loc 1 2628 0
 3604 000e 8389     		ldrh	r3, [r0, #12]
 3605 0010 9BB2     		uxth	r3, r3
 3606 0012 1943     		orrs	r1, r1, r3
 3607              	.LVL443:
 3608 0014 8181     		strh	r1, [r0, #12]	@ movhi
 3609 0016 7047     		bx	lr
 3610              		.cfi_endproc
 3611              	.LFE196:
 3613              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 3614              		.align	1
 3615              		.global	TIM_SelectCCDMA
 3616              		.syntax unified
 3617              		.thumb
 3618              		.thumb_func
 3619              		.fpu fpv4-sp-d16
 3621              	TIM_SelectCCDMA:
 3622              	.LFB197:
2645:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3623              		.loc 1 2645 0
 3624              		.cfi_startproc
 3625              		@ args = 0, pretend = 0, frame = 0
 3626              		@ frame_needed = 0, uses_anonymous_args = 0
 3627              		@ link register save eliminated.
 3628              	.LVL444:
2650:FWLIB/src/stm32f4xx_tim.c ****   {
 3629              		.loc 1 2650 0
ARM GAS  /tmp/ccses48D.s 			page 129


 3630 0000 31B9     		cbnz	r1, .L201
2658:FWLIB/src/stm32f4xx_tim.c ****   }
 3631              		.loc 1 2658 0
 3632 0002 8388     		ldrh	r3, [r0, #4]
 3633 0004 9BB2     		uxth	r3, r3
 3634 0006 23F00803 		bic	r3, r3, #8
 3635 000a 9BB2     		uxth	r3, r3
 3636 000c 8380     		strh	r3, [r0, #4]	@ movhi
 3637 000e 7047     		bx	lr
 3638              	.L201:
2653:FWLIB/src/stm32f4xx_tim.c ****   }
 3639              		.loc 1 2653 0
 3640 0010 8388     		ldrh	r3, [r0, #4]
 3641 0012 9BB2     		uxth	r3, r3
 3642 0014 43F00803 		orr	r3, r3, #8
 3643 0018 8380     		strh	r3, [r0, #4]	@ movhi
 3644 001a 7047     		bx	lr
 3645              		.cfi_endproc
 3646              	.LFE197:
 3648              		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 3649              		.align	1
 3650              		.global	TIM_InternalClockConfig
 3651              		.syntax unified
 3652              		.thumb
 3653              		.thumb_func
 3654              		.fpu fpv4-sp-d16
 3656              	TIM_InternalClockConfig:
 3657              	.LFB198:
2684:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3658              		.loc 1 2684 0
 3659              		.cfi_startproc
 3660              		@ args = 0, pretend = 0, frame = 0
 3661              		@ frame_needed = 0, uses_anonymous_args = 0
 3662              		@ link register save eliminated.
 3663              	.LVL445:
2689:FWLIB/src/stm32f4xx_tim.c **** }
 3664              		.loc 1 2689 0
 3665 0000 0389     		ldrh	r3, [r0, #8]
 3666 0002 9BB2     		uxth	r3, r3
 3667 0004 23F00703 		bic	r3, r3, #7
 3668 0008 9BB2     		uxth	r3, r3
 3669 000a 0381     		strh	r3, [r0, #8]	@ movhi
 3670 000c 7047     		bx	lr
 3671              		.cfi_endproc
 3672              	.LFE198:
 3674              		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 3675              		.align	1
 3676              		.global	TIM_SelectInputTrigger
 3677              		.syntax unified
 3678              		.thumb
 3679              		.thumb_func
 3680              		.fpu fpv4-sp-d16
 3682              	TIM_SelectInputTrigger:
 3683              	.LFB203:
2893:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 3684              		.loc 1 2893 0
 3685              		.cfi_startproc
ARM GAS  /tmp/ccses48D.s 			page 130


 3686              		@ args = 0, pretend = 0, frame = 0
 3687              		@ frame_needed = 0, uses_anonymous_args = 0
 3688              		@ link register save eliminated.
 3689              	.LVL446:
2901:FWLIB/src/stm32f4xx_tim.c **** 
 3690              		.loc 1 2901 0
 3691 0000 0389     		ldrh	r3, [r0, #8]
 3692 0002 9BB2     		uxth	r3, r3
 3693              	.LVL447:
2904:FWLIB/src/stm32f4xx_tim.c **** 
 3694              		.loc 1 2904 0
 3695 0004 23F07003 		bic	r3, r3, #112
 3696              	.LVL448:
2907:FWLIB/src/stm32f4xx_tim.c **** 
 3697              		.loc 1 2907 0
 3698 0008 1943     		orrs	r1, r1, r3
 3699              	.LVL449:
2910:FWLIB/src/stm32f4xx_tim.c **** }
 3700              		.loc 1 2910 0
 3701 000a 0181     		strh	r1, [r0, #8]	@ movhi
 3702 000c 7047     		bx	lr
 3703              		.cfi_endproc
 3704              	.LFE203:
 3706              		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 3707              		.align	1
 3708              		.global	TIM_ITRxExternalClockConfig
 3709              		.syntax unified
 3710              		.thumb
 3711              		.thumb_func
 3712              		.fpu fpv4-sp-d16
 3714              	TIM_ITRxExternalClockConfig:
 3715              	.LFB199:
2705:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3716              		.loc 1 2705 0
 3717              		.cfi_startproc
 3718              		@ args = 0, pretend = 0, frame = 0
 3719              		@ frame_needed = 0, uses_anonymous_args = 0
 3720              	.LVL450:
 3721 0000 10B5     		push	{r4, lr}
 3722              	.LCFI30:
 3723              		.cfi_def_cfa_offset 8
 3724              		.cfi_offset 4, -8
 3725              		.cfi_offset 14, -4
 3726 0002 0446     		mov	r4, r0
2711:FWLIB/src/stm32f4xx_tim.c **** 
 3727              		.loc 1 2711 0
 3728 0004 FFF7FEFF 		bl	TIM_SelectInputTrigger
 3729              	.LVL451:
2714:FWLIB/src/stm32f4xx_tim.c **** }
 3730              		.loc 1 2714 0
 3731 0008 2389     		ldrh	r3, [r4, #8]
 3732 000a 9BB2     		uxth	r3, r3
 3733 000c 43F00703 		orr	r3, r3, #7
 3734 0010 2381     		strh	r3, [r4, #8]	@ movhi
 3735 0012 10BD     		pop	{r4, pc}
 3736              		.cfi_endproc
 3737              	.LFE199:
ARM GAS  /tmp/ccses48D.s 			page 131


 3739              		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 3740              		.align	1
 3741              		.global	TIM_TIxExternalClockConfig
 3742              		.syntax unified
 3743              		.thumb
 3744              		.thumb_func
 3745              		.fpu fpv4-sp-d16
 3747              	TIM_TIxExternalClockConfig:
 3748              	.LFB200:
2736:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3749              		.loc 1 2736 0
 3750              		.cfi_startproc
 3751              		@ args = 0, pretend = 0, frame = 0
 3752              		@ frame_needed = 0, uses_anonymous_args = 0
 3753              	.LVL452:
 3754 0000 38B5     		push	{r3, r4, r5, lr}
 3755              	.LCFI31:
 3756              		.cfi_def_cfa_offset 16
 3757              		.cfi_offset 3, -16
 3758              		.cfi_offset 4, -12
 3759              		.cfi_offset 5, -8
 3760              		.cfi_offset 14, -4
 3761 0002 0446     		mov	r4, r0
 3762 0004 0D46     		mov	r5, r1
 3763 0006 1146     		mov	r1, r2
 3764              	.LVL453:
2743:FWLIB/src/stm32f4xx_tim.c ****   {
 3765              		.loc 1 2743 0
 3766 0008 602D     		cmp	r5, #96
 3767 000a 0CD0     		beq	.L210
2749:FWLIB/src/stm32f4xx_tim.c ****   }
 3768              		.loc 1 2749 0
 3769 000c 0122     		movs	r2, #1
 3770              	.LVL454:
 3771 000e FFF7FEFF 		bl	TI1_Config
 3772              	.LVL455:
 3773              	.L208:
2752:FWLIB/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
 3774              		.loc 1 2752 0
 3775 0012 2946     		mov	r1, r5
 3776 0014 2046     		mov	r0, r4
 3777 0016 FFF7FEFF 		bl	TIM_SelectInputTrigger
 3778              	.LVL456:
2754:FWLIB/src/stm32f4xx_tim.c **** }
 3779              		.loc 1 2754 0
 3780 001a 2389     		ldrh	r3, [r4, #8]
 3781 001c 9BB2     		uxth	r3, r3
 3782 001e 43F00703 		orr	r3, r3, #7
 3783 0022 2381     		strh	r3, [r4, #8]	@ movhi
 3784 0024 38BD     		pop	{r3, r4, r5, pc}
 3785              	.LVL457:
 3786              	.L210:
2745:FWLIB/src/stm32f4xx_tim.c ****   }
 3787              		.loc 1 2745 0
 3788 0026 0122     		movs	r2, #1
 3789              	.LVL458:
 3790 0028 FFF7FEFF 		bl	TI2_Config
ARM GAS  /tmp/ccses48D.s 			page 132


 3791              	.LVL459:
 3792 002c F1E7     		b	.L208
 3793              		.cfi_endproc
 3794              	.LFE200:
 3796              		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 3797              		.align	1
 3798              		.global	TIM_SelectOutputTrigger
 3799              		.syntax unified
 3800              		.thumb
 3801              		.thumb_func
 3802              		.fpu fpv4-sp-d16
 3804              	TIM_SelectOutputTrigger:
 3805              	.LFB204:
2936:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3806              		.loc 1 2936 0
 3807              		.cfi_startproc
 3808              		@ args = 0, pretend = 0, frame = 0
 3809              		@ frame_needed = 0, uses_anonymous_args = 0
 3810              		@ link register save eliminated.
 3811              	.LVL460:
2942:FWLIB/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
 3812              		.loc 1 2942 0
 3813 0000 8388     		ldrh	r3, [r0, #4]
 3814 0002 9BB2     		uxth	r3, r3
 3815 0004 23F07003 		bic	r3, r3, #112
 3816 0008 9BB2     		uxth	r3, r3
 3817 000a 8380     		strh	r3, [r0, #4]	@ movhi
2944:FWLIB/src/stm32f4xx_tim.c **** }
 3818              		.loc 1 2944 0
 3819 000c 8388     		ldrh	r3, [r0, #4]
 3820 000e 9BB2     		uxth	r3, r3
 3821 0010 1943     		orrs	r1, r1, r3
 3822              	.LVL461:
 3823 0012 8180     		strh	r1, [r0, #4]	@ movhi
 3824 0014 7047     		bx	lr
 3825              		.cfi_endproc
 3826              	.LFE204:
 3828              		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 3829              		.align	1
 3830              		.global	TIM_SelectSlaveMode
 3831              		.syntax unified
 3832              		.thumb
 3833              		.thumb_func
 3834              		.fpu fpv4-sp-d16
 3836              	TIM_SelectSlaveMode:
 3837              	.LFB205:
2960:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3838              		.loc 1 2960 0
 3839              		.cfi_startproc
 3840              		@ args = 0, pretend = 0, frame = 0
 3841              		@ frame_needed = 0, uses_anonymous_args = 0
 3842              		@ link register save eliminated.
 3843              	.LVL462:
2966:FWLIB/src/stm32f4xx_tim.c **** 
 3844              		.loc 1 2966 0
 3845 0000 0389     		ldrh	r3, [r0, #8]
 3846 0002 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccses48D.s 			page 133


 3847 0004 23F00703 		bic	r3, r3, #7
 3848 0008 9BB2     		uxth	r3, r3
 3849 000a 0381     		strh	r3, [r0, #8]	@ movhi
2969:FWLIB/src/stm32f4xx_tim.c **** }
 3850              		.loc 1 2969 0
 3851 000c 0389     		ldrh	r3, [r0, #8]
 3852 000e 9BB2     		uxth	r3, r3
 3853 0010 1943     		orrs	r1, r1, r3
 3854              	.LVL463:
 3855 0012 0181     		strh	r1, [r0, #8]	@ movhi
 3856 0014 7047     		bx	lr
 3857              		.cfi_endproc
 3858              	.LFE205:
 3860              		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 3861              		.align	1
 3862              		.global	TIM_SelectMasterSlaveMode
 3863              		.syntax unified
 3864              		.thumb
 3865              		.thumb_func
 3866              		.fpu fpv4-sp-d16
 3868              	TIM_SelectMasterSlaveMode:
 3869              	.LFB206:
2983:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3870              		.loc 1 2983 0
 3871              		.cfi_startproc
 3872              		@ args = 0, pretend = 0, frame = 0
 3873              		@ frame_needed = 0, uses_anonymous_args = 0
 3874              		@ link register save eliminated.
 3875              	.LVL464:
2989:FWLIB/src/stm32f4xx_tim.c ****   
 3876              		.loc 1 2989 0
 3877 0000 0389     		ldrh	r3, [r0, #8]
 3878 0002 9BB2     		uxth	r3, r3
 3879 0004 23F08003 		bic	r3, r3, #128
 3880 0008 9BB2     		uxth	r3, r3
 3881 000a 0381     		strh	r3, [r0, #8]	@ movhi
2992:FWLIB/src/stm32f4xx_tim.c **** }
 3882              		.loc 1 2992 0
 3883 000c 0389     		ldrh	r3, [r0, #8]
 3884 000e 9BB2     		uxth	r3, r3
 3885 0010 1943     		orrs	r1, r1, r3
 3886              	.LVL465:
 3887 0012 0181     		strh	r1, [r0, #8]	@ movhi
 3888 0014 7047     		bx	lr
 3889              		.cfi_endproc
 3890              	.LFE206:
 3892              		.section	.text.TIM_ETRConfig,"ax",%progbits
 3893              		.align	1
 3894              		.global	TIM_ETRConfig
 3895              		.syntax unified
 3896              		.thumb
 3897              		.thumb_func
 3898              		.fpu fpv4-sp-d16
 3900              	TIM_ETRConfig:
 3901              	.LFB207:
3014:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 3902              		.loc 1 3014 0
ARM GAS  /tmp/ccses48D.s 			page 134


 3903              		.cfi_startproc
 3904              		@ args = 0, pretend = 0, frame = 0
 3905              		@ frame_needed = 0, uses_anonymous_args = 0
 3906              		@ link register save eliminated.
 3907              	.LVL466:
 3908 0000 10B4     		push	{r4}
 3909              	.LCFI32:
 3910              		.cfi_def_cfa_offset 4
 3911              		.cfi_offset 4, -4
 3912              	.LVL467:
3023:FWLIB/src/stm32f4xx_tim.c **** 
 3913              		.loc 1 3023 0
 3914 0002 0489     		ldrh	r4, [r0, #8]
 3915              	.LVL468:
3026:FWLIB/src/stm32f4xx_tim.c **** 
 3916              		.loc 1 3026 0
 3917 0004 E4B2     		uxtb	r4, r4
 3918              	.LVL469:
3029:FWLIB/src/stm32f4xx_tim.c **** 
 3919              		.loc 1 3029 0
 3920 0006 1B02     		lsls	r3, r3, #8
 3921              	.LVL470:
 3922 0008 9BB2     		uxth	r3, r3
 3923 000a 1343     		orrs	r3, r3, r2
 3924 000c 0B43     		orrs	r3, r3, r1
 3925 000e 2343     		orrs	r3, r3, r4
 3926              	.LVL471:
3032:FWLIB/src/stm32f4xx_tim.c **** }
 3927              		.loc 1 3032 0
 3928 0010 0381     		strh	r3, [r0, #8]	@ movhi
3033:FWLIB/src/stm32f4xx_tim.c **** /**
 3929              		.loc 1 3033 0
 3930 0012 5DF8044B 		ldr	r4, [sp], #4
 3931              	.LCFI33:
 3932              		.cfi_restore 4
 3933              		.cfi_def_cfa_offset 0
 3934 0016 7047     		bx	lr
 3935              		.cfi_endproc
 3936              	.LFE207:
 3938              		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 3939              		.align	1
 3940              		.global	TIM_ETRClockMode1Config
 3941              		.syntax unified
 3942              		.thumb
 3943              		.thumb_func
 3944              		.fpu fpv4-sp-d16
 3946              	TIM_ETRClockMode1Config:
 3947              	.LFB201:
2776:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 3948              		.loc 1 2776 0
 3949              		.cfi_startproc
 3950              		@ args = 0, pretend = 0, frame = 0
 3951              		@ frame_needed = 0, uses_anonymous_args = 0
 3952              	.LVL472:
 3953 0000 10B5     		push	{r4, lr}
 3954              	.LCFI34:
 3955              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccses48D.s 			page 135


 3956              		.cfi_offset 4, -8
 3957              		.cfi_offset 14, -4
 3958 0002 0446     		mov	r4, r0
 3959              	.LVL473:
2785:FWLIB/src/stm32f4xx_tim.c ****   
 3960              		.loc 1 2785 0
 3961 0004 FFF7FEFF 		bl	TIM_ETRConfig
 3962              	.LVL474:
2788:FWLIB/src/stm32f4xx_tim.c **** 
 3963              		.loc 1 2788 0
 3964 0008 2389     		ldrh	r3, [r4, #8]
 3965 000a 9BB2     		uxth	r3, r3
 3966              	.LVL475:
2798:FWLIB/src/stm32f4xx_tim.c **** 
 3967              		.loc 1 2798 0
 3968 000c 43F07703 		orr	r3, r3, #119
 3969              	.LVL476:
2801:FWLIB/src/stm32f4xx_tim.c **** }
 3970              		.loc 1 2801 0
 3971 0010 2381     		strh	r3, [r4, #8]	@ movhi
 3972 0012 10BD     		pop	{r4, pc}
 3973              		.cfi_endproc
 3974              	.LFE201:
 3976              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 3977              		.align	1
 3978              		.global	TIM_ETRClockMode2Config
 3979              		.syntax unified
 3980              		.thumb
 3981              		.thumb_func
 3982              		.fpu fpv4-sp-d16
 3984              	TIM_ETRClockMode2Config:
 3985              	.LFB202:
2823:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3986              		.loc 1 2823 0
 3987              		.cfi_startproc
 3988              		@ args = 0, pretend = 0, frame = 0
 3989              		@ frame_needed = 0, uses_anonymous_args = 0
 3990              	.LVL477:
 3991 0000 10B5     		push	{r4, lr}
 3992              	.LCFI35:
 3993              		.cfi_def_cfa_offset 8
 3994              		.cfi_offset 4, -8
 3995              		.cfi_offset 14, -4
 3996 0002 0446     		mov	r4, r0
2831:FWLIB/src/stm32f4xx_tim.c **** 
 3997              		.loc 1 2831 0
 3998 0004 FFF7FEFF 		bl	TIM_ETRConfig
 3999              	.LVL478:
2834:FWLIB/src/stm32f4xx_tim.c **** }
 4000              		.loc 1 2834 0
 4001 0008 2389     		ldrh	r3, [r4, #8]
 4002 000a 9BB2     		uxth	r3, r3
 4003 000c 43F48043 		orr	r3, r3, #16384
 4004 0010 2381     		strh	r3, [r4, #8]	@ movhi
 4005 0012 10BD     		pop	{r4, pc}
 4006              		.cfi_endproc
 4007              	.LFE202:
ARM GAS  /tmp/ccses48D.s 			page 136


 4009              		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 4010              		.align	1
 4011              		.global	TIM_EncoderInterfaceConfig
 4012              		.syntax unified
 4013              		.thumb
 4014              		.thumb_func
 4015              		.fpu fpv4-sp-d16
 4017              	TIM_EncoderInterfaceConfig:
 4018              	.LFB208:
3072:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 4019              		.loc 1 3072 0
 4020              		.cfi_startproc
 4021              		@ args = 0, pretend = 0, frame = 0
 4022              		@ frame_needed = 0, uses_anonymous_args = 0
 4023              		@ link register save eliminated.
 4024              	.LVL479:
 4025 0000 70B4     		push	{r4, r5, r6}
 4026              	.LCFI36:
 4027              		.cfi_def_cfa_offset 12
 4028              		.cfi_offset 4, -12
 4029              		.cfi_offset 5, -8
 4030              		.cfi_offset 6, -4
 4031              	.LVL480:
3084:FWLIB/src/stm32f4xx_tim.c **** 
 4032              		.loc 1 3084 0
 4033 0002 0689     		ldrh	r6, [r0, #8]
 4034 0004 B6B2     		uxth	r6, r6
 4035              	.LVL481:
3087:FWLIB/src/stm32f4xx_tim.c **** 
 4036              		.loc 1 3087 0
 4037 0006 048B     		ldrh	r4, [r0, #24]
 4038 0008 A4B2     		uxth	r4, r4
 4039              	.LVL482:
3090:FWLIB/src/stm32f4xx_tim.c **** 
 4040              		.loc 1 3090 0
 4041 000a 058C     		ldrh	r5, [r0, #32]
 4042 000c ADB2     		uxth	r5, r5
 4043              	.LVL483:
3093:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 4044              		.loc 1 3093 0
 4045 000e 26F00706 		bic	r6, r6, #7
 4046              	.LVL484:
3094:FWLIB/src/stm32f4xx_tim.c **** 
 4047              		.loc 1 3094 0
 4048 0012 3143     		orrs	r1, r1, r6
 4049              	.LVL485:
3097:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 4050              		.loc 1 3097 0
 4051 0014 24F44074 		bic	r4, r4, #768
 4052              	.LVL486:
 4053 0018 24F00304 		bic	r4, r4, #3
 4054              	.LVL487:
3098:FWLIB/src/stm32f4xx_tim.c **** 
 4055              		.loc 1 3098 0
 4056 001c 44F48074 		orr	r4, r4, #256
 4057              	.LVL488:
 4058 0020 44F00104 		orr	r4, r4, #1
ARM GAS  /tmp/ccses48D.s 			page 137


 4059              	.LVL489:
3101:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 4060              		.loc 1 3101 0
 4061 0024 25F02205 		bic	r5, r5, #34
 4062              	.LVL490:
3102:FWLIB/src/stm32f4xx_tim.c **** 
 4063              		.loc 1 3102 0
 4064 0028 1B01     		lsls	r3, r3, #4
 4065              	.LVL491:
 4066 002a 9BB2     		uxth	r3, r3
 4067 002c 1A43     		orrs	r2, r2, r3
 4068              	.LVL492:
 4069 002e 1543     		orrs	r5, r5, r2
 4070              	.LVL493:
3105:FWLIB/src/stm32f4xx_tim.c **** 
 4071              		.loc 1 3105 0
 4072 0030 0181     		strh	r1, [r0, #8]	@ movhi
3108:FWLIB/src/stm32f4xx_tim.c **** 
 4073              		.loc 1 3108 0
 4074 0032 0483     		strh	r4, [r0, #24]	@ movhi
3111:FWLIB/src/stm32f4xx_tim.c **** }
 4075              		.loc 1 3111 0
 4076 0034 0584     		strh	r5, [r0, #32]	@ movhi
3112:FWLIB/src/stm32f4xx_tim.c **** 
 4077              		.loc 1 3112 0
 4078 0036 70BC     		pop	{r4, r5, r6}
 4079              	.LCFI37:
 4080              		.cfi_restore 6
 4081              		.cfi_restore 5
 4082              		.cfi_restore 4
 4083              		.cfi_def_cfa_offset 0
 4084              	.LVL494:
 4085 0038 7047     		bx	lr
 4086              		.cfi_endproc
 4087              	.LFE208:
 4089              		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 4090              		.align	1
 4091              		.global	TIM_SelectHallSensor
 4092              		.syntax unified
 4093              		.thumb
 4094              		.thumb_func
 4095              		.fpu fpv4-sp-d16
 4097              	TIM_SelectHallSensor:
 4098              	.LFB209:
3123:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 4099              		.loc 1 3123 0
 4100              		.cfi_startproc
 4101              		@ args = 0, pretend = 0, frame = 0
 4102              		@ frame_needed = 0, uses_anonymous_args = 0
 4103              		@ link register save eliminated.
 4104              	.LVL495:
3128:FWLIB/src/stm32f4xx_tim.c ****   {
 4105              		.loc 1 3128 0
 4106 0000 31B9     		cbnz	r1, .L225
3136:FWLIB/src/stm32f4xx_tim.c ****   }
 4107              		.loc 1 3136 0
 4108 0002 8388     		ldrh	r3, [r0, #4]
ARM GAS  /tmp/ccses48D.s 			page 138


 4109 0004 9BB2     		uxth	r3, r3
 4110 0006 23F08003 		bic	r3, r3, #128
 4111 000a 9BB2     		uxth	r3, r3
 4112 000c 8380     		strh	r3, [r0, #4]	@ movhi
 4113 000e 7047     		bx	lr
 4114              	.L225:
3131:FWLIB/src/stm32f4xx_tim.c ****   }
 4115              		.loc 1 3131 0
 4116 0010 8388     		ldrh	r3, [r0, #4]
 4117 0012 9BB2     		uxth	r3, r3
 4118 0014 43F08003 		orr	r3, r3, #128
 4119 0018 8380     		strh	r3, [r0, #4]	@ movhi
 4120 001a 7047     		bx	lr
 4121              		.cfi_endproc
 4122              	.LFE209:
 4124              		.section	.text.TIM_RemapConfig,"ax",%progbits
 4125              		.align	1
 4126              		.global	TIM_RemapConfig
 4127              		.syntax unified
 4128              		.thumb
 4129              		.thumb_func
 4130              		.fpu fpv4-sp-d16
 4132              	TIM_RemapConfig:
 4133              	.LFB210:
3174:FWLIB/src/stm32f4xx_tim.c ****  /* Check the parameters */
 4134              		.loc 1 3174 0
 4135              		.cfi_startproc
 4136              		@ args = 0, pretend = 0, frame = 0
 4137              		@ frame_needed = 0, uses_anonymous_args = 0
 4138              		@ link register save eliminated.
 4139              	.LVL496:
3180:FWLIB/src/stm32f4xx_tim.c **** }
 4140              		.loc 1 3180 0
 4141 0000 A0F85010 		strh	r1, [r0, #80]	@ movhi
 4142 0004 7047     		bx	lr
 4143              		.cfi_endproc
 4144              	.LFE210:
 4146              		.text
 4147              	.Letext0:
 4148              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4149              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 4150              		.file 4 "F4_CORE/core_cm4.h"
 4151              		.file 5 "USER/system_stm32f4xx.h"
 4152              		.file 6 "USER/stm32f4xx.h"
 4153              		.file 7 "FWLIB/inc/stm32f4xx_tim.h"
 4154              		.file 8 "FWLIB/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccses48D.s 			page 139


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_tim.c
     /tmp/ccses48D.s:18     .text.TI1_Config:0000000000000000 $t
     /tmp/ccses48D.s:24     .text.TI1_Config:0000000000000000 TI1_Config
     /tmp/ccses48D.s:88     .text.TI2_Config:0000000000000000 $t
     /tmp/ccses48D.s:94     .text.TI2_Config:0000000000000000 TI2_Config
     /tmp/ccses48D.s:168    .text.TI3_Config:0000000000000000 $t
     /tmp/ccses48D.s:174    .text.TI3_Config:0000000000000000 TI3_Config
     /tmp/ccses48D.s:242    .text.TI4_Config:0000000000000000 $t
     /tmp/ccses48D.s:248    .text.TI4_Config:0000000000000000 TI4_Config
     /tmp/ccses48D.s:324    .text.TIM_DeInit:0000000000000000 $t
     /tmp/ccses48D.s:331    .text.TIM_DeInit:0000000000000000 TIM_DeInit
     /tmp/ccses48D.s:601    .text.TIM_DeInit:0000000000000164 $d
     /tmp/ccses48D.s:618    .text.TIM_TimeBaseInit:0000000000000000 $t
     /tmp/ccses48D.s:625    .text.TIM_TimeBaseInit:0000000000000000 TIM_TimeBaseInit
     /tmp/ccses48D.s:718    .text.TIM_TimeBaseInit:0000000000000074 $d
     /tmp/ccses48D.s:724    .text.TIM_TimeBaseStructInit:0000000000000000 $t
     /tmp/ccses48D.s:731    .text.TIM_TimeBaseStructInit:0000000000000000 TIM_TimeBaseStructInit
     /tmp/ccses48D.s:756    .text.TIM_PrescalerConfig:0000000000000000 $t
     /tmp/ccses48D.s:763    .text.TIM_PrescalerConfig:0000000000000000 TIM_PrescalerConfig
     /tmp/ccses48D.s:780    .text.TIM_CounterModeConfig:0000000000000000 $t
     /tmp/ccses48D.s:787    .text.TIM_CounterModeConfig:0000000000000000 TIM_CounterModeConfig
     /tmp/ccses48D.s:812    .text.TIM_SetCounter:0000000000000000 $t
     /tmp/ccses48D.s:819    .text.TIM_SetCounter:0000000000000000 TIM_SetCounter
     /tmp/ccses48D.s:834    .text.TIM_SetAutoreload:0000000000000000 $t
     /tmp/ccses48D.s:841    .text.TIM_SetAutoreload:0000000000000000 TIM_SetAutoreload
     /tmp/ccses48D.s:856    .text.TIM_GetCounter:0000000000000000 $t
     /tmp/ccses48D.s:863    .text.TIM_GetCounter:0000000000000000 TIM_GetCounter
     /tmp/ccses48D.s:880    .text.TIM_GetPrescaler:0000000000000000 $t
     /tmp/ccses48D.s:887    .text.TIM_GetPrescaler:0000000000000000 TIM_GetPrescaler
     /tmp/ccses48D.s:905    .text.TIM_UpdateDisableConfig:0000000000000000 $t
     /tmp/ccses48D.s:912    .text.TIM_UpdateDisableConfig:0000000000000000 TIM_UpdateDisableConfig
     /tmp/ccses48D.s:940    .text.TIM_UpdateRequestConfig:0000000000000000 $t
     /tmp/ccses48D.s:947    .text.TIM_UpdateRequestConfig:0000000000000000 TIM_UpdateRequestConfig
     /tmp/ccses48D.s:975    .text.TIM_ARRPreloadConfig:0000000000000000 $t
     /tmp/ccses48D.s:982    .text.TIM_ARRPreloadConfig:0000000000000000 TIM_ARRPreloadConfig
     /tmp/ccses48D.s:1010   .text.TIM_SelectOnePulseMode:0000000000000000 $t
     /tmp/ccses48D.s:1017   .text.TIM_SelectOnePulseMode:0000000000000000 TIM_SelectOnePulseMode
     /tmp/ccses48D.s:1042   .text.TIM_SetClockDivision:0000000000000000 $t
     /tmp/ccses48D.s:1049   .text.TIM_SetClockDivision:0000000000000000 TIM_SetClockDivision
     /tmp/ccses48D.s:1074   .text.TIM_Cmd:0000000000000000 $t
     /tmp/ccses48D.s:1081   .text.TIM_Cmd:0000000000000000 TIM_Cmd
     /tmp/ccses48D.s:1109   .text.TIM_OC1Init:0000000000000000 $t
     /tmp/ccses48D.s:1116   .text.TIM_OC1Init:0000000000000000 TIM_OC1Init
     /tmp/ccses48D.s:1228   .text.TIM_OC1Init:0000000000000068 $d
     /tmp/ccses48D.s:1233   .text.TIM_OC2Init:0000000000000000 $t
     /tmp/ccses48D.s:1240   .text.TIM_OC2Init:0000000000000000 TIM_OC2Init
     /tmp/ccses48D.s:1366   .text.TIM_OC2Init:0000000000000084 $d
     /tmp/ccses48D.s:1371   .text.TIM_OC3Init:0000000000000000 $t
     /tmp/ccses48D.s:1378   .text.TIM_OC3Init:0000000000000000 TIM_OC3Init
     /tmp/ccses48D.s:1502   .text.TIM_OC3Init:0000000000000080 $d
     /tmp/ccses48D.s:1507   .text.TIM_OC4Init:0000000000000000 $t
     /tmp/ccses48D.s:1514   .text.TIM_OC4Init:0000000000000000 TIM_OC4Init
     /tmp/ccses48D.s:1616   .text.TIM_OC4Init:0000000000000064 $d
     /tmp/ccses48D.s:1621   .text.TIM_OCStructInit:0000000000000000 $t
     /tmp/ccses48D.s:1628   .text.TIM_OCStructInit:0000000000000000 TIM_OCStructInit
     /tmp/ccses48D.s:1658   .text.TIM_SelectOCxM:0000000000000000 $t
ARM GAS  /tmp/ccses48D.s 			page 140


     /tmp/ccses48D.s:1665   .text.TIM_SelectOCxM:0000000000000000 TIM_SelectOCxM
     /tmp/ccses48D.s:1749   .text.TIM_SetCompare1:0000000000000000 $t
     /tmp/ccses48D.s:1756   .text.TIM_SetCompare1:0000000000000000 TIM_SetCompare1
     /tmp/ccses48D.s:1771   .text.TIM_SetCompare2:0000000000000000 $t
     /tmp/ccses48D.s:1778   .text.TIM_SetCompare2:0000000000000000 TIM_SetCompare2
     /tmp/ccses48D.s:1793   .text.TIM_SetCompare3:0000000000000000 $t
     /tmp/ccses48D.s:1800   .text.TIM_SetCompare3:0000000000000000 TIM_SetCompare3
     /tmp/ccses48D.s:1815   .text.TIM_SetCompare4:0000000000000000 $t
     /tmp/ccses48D.s:1822   .text.TIM_SetCompare4:0000000000000000 TIM_SetCompare4
     /tmp/ccses48D.s:1837   .text.TIM_ForcedOC1Config:0000000000000000 $t
     /tmp/ccses48D.s:1844   .text.TIM_ForcedOC1Config:0000000000000000 TIM_ForcedOC1Config
     /tmp/ccses48D.s:1869   .text.TIM_ForcedOC2Config:0000000000000000 $t
     /tmp/ccses48D.s:1876   .text.TIM_ForcedOC2Config:0000000000000000 TIM_ForcedOC2Config
     /tmp/ccses48D.s:1904   .text.TIM_ForcedOC3Config:0000000000000000 $t
     /tmp/ccses48D.s:1911   .text.TIM_ForcedOC3Config:0000000000000000 TIM_ForcedOC3Config
     /tmp/ccses48D.s:1936   .text.TIM_ForcedOC4Config:0000000000000000 $t
     /tmp/ccses48D.s:1943   .text.TIM_ForcedOC4Config:0000000000000000 TIM_ForcedOC4Config
     /tmp/ccses48D.s:1971   .text.TIM_OC1PreloadConfig:0000000000000000 $t
     /tmp/ccses48D.s:1978   .text.TIM_OC1PreloadConfig:0000000000000000 TIM_OC1PreloadConfig
     /tmp/ccses48D.s:2003   .text.TIM_OC2PreloadConfig:0000000000000000 $t
     /tmp/ccses48D.s:2010   .text.TIM_OC2PreloadConfig:0000000000000000 TIM_OC2PreloadConfig
     /tmp/ccses48D.s:2038   .text.TIM_OC3PreloadConfig:0000000000000000 $t
     /tmp/ccses48D.s:2045   .text.TIM_OC3PreloadConfig:0000000000000000 TIM_OC3PreloadConfig
     /tmp/ccses48D.s:2070   .text.TIM_OC4PreloadConfig:0000000000000000 $t
     /tmp/ccses48D.s:2077   .text.TIM_OC4PreloadConfig:0000000000000000 TIM_OC4PreloadConfig
     /tmp/ccses48D.s:2105   .text.TIM_OC1FastConfig:0000000000000000 $t
     /tmp/ccses48D.s:2112   .text.TIM_OC1FastConfig:0000000000000000 TIM_OC1FastConfig
     /tmp/ccses48D.s:2137   .text.TIM_OC2FastConfig:0000000000000000 $t
     /tmp/ccses48D.s:2144   .text.TIM_OC2FastConfig:0000000000000000 TIM_OC2FastConfig
     /tmp/ccses48D.s:2172   .text.TIM_OC3FastConfig:0000000000000000 $t
     /tmp/ccses48D.s:2179   .text.TIM_OC3FastConfig:0000000000000000 TIM_OC3FastConfig
     /tmp/ccses48D.s:2204   .text.TIM_OC4FastConfig:0000000000000000 $t
     /tmp/ccses48D.s:2211   .text.TIM_OC4FastConfig:0000000000000000 TIM_OC4FastConfig
     /tmp/ccses48D.s:2239   .text.TIM_ClearOC1Ref:0000000000000000 $t
     /tmp/ccses48D.s:2246   .text.TIM_ClearOC1Ref:0000000000000000 TIM_ClearOC1Ref
     /tmp/ccses48D.s:2271   .text.TIM_ClearOC2Ref:0000000000000000 $t
     /tmp/ccses48D.s:2278   .text.TIM_ClearOC2Ref:0000000000000000 TIM_ClearOC2Ref
     /tmp/ccses48D.s:2305   .text.TIM_ClearOC3Ref:0000000000000000 $t
     /tmp/ccses48D.s:2312   .text.TIM_ClearOC3Ref:0000000000000000 TIM_ClearOC3Ref
     /tmp/ccses48D.s:2337   .text.TIM_ClearOC4Ref:0000000000000000 $t
     /tmp/ccses48D.s:2344   .text.TIM_ClearOC4Ref:0000000000000000 TIM_ClearOC4Ref
     /tmp/ccses48D.s:2371   .text.TIM_OC1PolarityConfig:0000000000000000 $t
     /tmp/ccses48D.s:2378   .text.TIM_OC1PolarityConfig:0000000000000000 TIM_OC1PolarityConfig
     /tmp/ccses48D.s:2403   .text.TIM_OC1NPolarityConfig:0000000000000000 $t
     /tmp/ccses48D.s:2410   .text.TIM_OC1NPolarityConfig:0000000000000000 TIM_OC1NPolarityConfig
     /tmp/ccses48D.s:2435   .text.TIM_OC2PolarityConfig:0000000000000000 $t
     /tmp/ccses48D.s:2442   .text.TIM_OC2PolarityConfig:0000000000000000 TIM_OC2PolarityConfig
     /tmp/ccses48D.s:2470   .text.TIM_OC2NPolarityConfig:0000000000000000 $t
     /tmp/ccses48D.s:2477   .text.TIM_OC2NPolarityConfig:0000000000000000 TIM_OC2NPolarityConfig
     /tmp/ccses48D.s:2505   .text.TIM_OC3PolarityConfig:0000000000000000 $t
     /tmp/ccses48D.s:2512   .text.TIM_OC3PolarityConfig:0000000000000000 TIM_OC3PolarityConfig
     /tmp/ccses48D.s:2540   .text.TIM_OC3NPolarityConfig:0000000000000000 $t
     /tmp/ccses48D.s:2547   .text.TIM_OC3NPolarityConfig:0000000000000000 TIM_OC3NPolarityConfig
     /tmp/ccses48D.s:2575   .text.TIM_OC4PolarityConfig:0000000000000000 $t
     /tmp/ccses48D.s:2582   .text.TIM_OC4PolarityConfig:0000000000000000 TIM_OC4PolarityConfig
     /tmp/ccses48D.s:2610   .text.TIM_CCxCmd:0000000000000000 $t
     /tmp/ccses48D.s:2617   .text.TIM_CCxCmd:0000000000000000 TIM_CCxCmd
ARM GAS  /tmp/ccses48D.s 			page 141


     /tmp/ccses48D.s:2661   .text.TIM_CCxNCmd:0000000000000000 $t
     /tmp/ccses48D.s:2668   .text.TIM_CCxNCmd:0000000000000000 TIM_CCxNCmd
     /tmp/ccses48D.s:2712   .text.TIM_ICStructInit:0000000000000000 $t
     /tmp/ccses48D.s:2719   .text.TIM_ICStructInit:0000000000000000 TIM_ICStructInit
     /tmp/ccses48D.s:2744   .text.TIM_GetCapture1:0000000000000000 $t
     /tmp/ccses48D.s:2751   .text.TIM_GetCapture1:0000000000000000 TIM_GetCapture1
     /tmp/ccses48D.s:2768   .text.TIM_GetCapture2:0000000000000000 $t
     /tmp/ccses48D.s:2775   .text.TIM_GetCapture2:0000000000000000 TIM_GetCapture2
     /tmp/ccses48D.s:2792   .text.TIM_GetCapture3:0000000000000000 $t
     /tmp/ccses48D.s:2799   .text.TIM_GetCapture3:0000000000000000 TIM_GetCapture3
     /tmp/ccses48D.s:2816   .text.TIM_GetCapture4:0000000000000000 $t
     /tmp/ccses48D.s:2823   .text.TIM_GetCapture4:0000000000000000 TIM_GetCapture4
     /tmp/ccses48D.s:2840   .text.TIM_SetIC1Prescaler:0000000000000000 $t
     /tmp/ccses48D.s:2847   .text.TIM_SetIC1Prescaler:0000000000000000 TIM_SetIC1Prescaler
     /tmp/ccses48D.s:2872   .text.TIM_SetIC2Prescaler:0000000000000000 $t
     /tmp/ccses48D.s:2879   .text.TIM_SetIC2Prescaler:0000000000000000 TIM_SetIC2Prescaler
     /tmp/ccses48D.s:2906   .text.TIM_PWMIConfig:0000000000000000 $t
     /tmp/ccses48D.s:2913   .text.TIM_PWMIConfig:0000000000000000 TIM_PWMIConfig
     /tmp/ccses48D.s:3015   .text.TIM_SetIC3Prescaler:0000000000000000 $t
     /tmp/ccses48D.s:3022   .text.TIM_SetIC3Prescaler:0000000000000000 TIM_SetIC3Prescaler
     /tmp/ccses48D.s:3047   .text.TIM_SetIC4Prescaler:0000000000000000 $t
     /tmp/ccses48D.s:3054   .text.TIM_SetIC4Prescaler:0000000000000000 TIM_SetIC4Prescaler
     /tmp/ccses48D.s:3081   .text.TIM_ICInit:0000000000000000 $t
     /tmp/ccses48D.s:3088   .text.TIM_ICInit:0000000000000000 TIM_ICInit
     /tmp/ccses48D.s:3175   .text.TIM_BDTRConfig:0000000000000000 $t
     /tmp/ccses48D.s:3182   .text.TIM_BDTRConfig:0000000000000000 TIM_BDTRConfig
     /tmp/ccses48D.s:3222   .text.TIM_BDTRStructInit:0000000000000000 $t
     /tmp/ccses48D.s:3229   .text.TIM_BDTRStructInit:0000000000000000 TIM_BDTRStructInit
     /tmp/ccses48D.s:3257   .text.TIM_CtrlPWMOutputs:0000000000000000 $t
     /tmp/ccses48D.s:3264   .text.TIM_CtrlPWMOutputs:0000000000000000 TIM_CtrlPWMOutputs
     /tmp/ccses48D.s:3291   .text.TIM_SelectCOM:0000000000000000 $t
     /tmp/ccses48D.s:3298   .text.TIM_SelectCOM:0000000000000000 TIM_SelectCOM
     /tmp/ccses48D.s:3326   .text.TIM_CCPreloadControl:0000000000000000 $t
     /tmp/ccses48D.s:3333   .text.TIM_CCPreloadControl:0000000000000000 TIM_CCPreloadControl
     /tmp/ccses48D.s:3361   .text.TIM_ITConfig:0000000000000000 $t
     /tmp/ccses48D.s:3368   .text.TIM_ITConfig:0000000000000000 TIM_ITConfig
     /tmp/ccses48D.s:3399   .text.TIM_GenerateEvent:0000000000000000 $t
     /tmp/ccses48D.s:3406   .text.TIM_GenerateEvent:0000000000000000 TIM_GenerateEvent
     /tmp/ccses48D.s:3421   .text.TIM_GetFlagStatus:0000000000000000 $t
     /tmp/ccses48D.s:3428   .text.TIM_GetFlagStatus:0000000000000000 TIM_GetFlagStatus
     /tmp/ccses48D.s:3455   .text.TIM_ClearFlag:0000000000000000 $t
     /tmp/ccses48D.s:3462   .text.TIM_ClearFlag:0000000000000000 TIM_ClearFlag
     /tmp/ccses48D.s:3480   .text.TIM_GetITStatus:0000000000000000 $t
     /tmp/ccses48D.s:3487   .text.TIM_GetITStatus:0000000000000000 TIM_GetITStatus
     /tmp/ccses48D.s:3527   .text.TIM_ClearITPendingBit:0000000000000000 $t
     /tmp/ccses48D.s:3534   .text.TIM_ClearITPendingBit:0000000000000000 TIM_ClearITPendingBit
     /tmp/ccses48D.s:3552   .text.TIM_DMAConfig:0000000000000000 $t
     /tmp/ccses48D.s:3559   .text.TIM_DMAConfig:0000000000000000 TIM_DMAConfig
     /tmp/ccses48D.s:3576   .text.TIM_DMACmd:0000000000000000 $t
     /tmp/ccses48D.s:3583   .text.TIM_DMACmd:0000000000000000 TIM_DMACmd
     /tmp/ccses48D.s:3614   .text.TIM_SelectCCDMA:0000000000000000 $t
     /tmp/ccses48D.s:3621   .text.TIM_SelectCCDMA:0000000000000000 TIM_SelectCCDMA
     /tmp/ccses48D.s:3649   .text.TIM_InternalClockConfig:0000000000000000 $t
     /tmp/ccses48D.s:3656   .text.TIM_InternalClockConfig:0000000000000000 TIM_InternalClockConfig
     /tmp/ccses48D.s:3675   .text.TIM_SelectInputTrigger:0000000000000000 $t
     /tmp/ccses48D.s:3682   .text.TIM_SelectInputTrigger:0000000000000000 TIM_SelectInputTrigger
     /tmp/ccses48D.s:3707   .text.TIM_ITRxExternalClockConfig:0000000000000000 $t
ARM GAS  /tmp/ccses48D.s 			page 142


     /tmp/ccses48D.s:3714   .text.TIM_ITRxExternalClockConfig:0000000000000000 TIM_ITRxExternalClockConfig
     /tmp/ccses48D.s:3740   .text.TIM_TIxExternalClockConfig:0000000000000000 $t
     /tmp/ccses48D.s:3747   .text.TIM_TIxExternalClockConfig:0000000000000000 TIM_TIxExternalClockConfig
     /tmp/ccses48D.s:3797   .text.TIM_SelectOutputTrigger:0000000000000000 $t
     /tmp/ccses48D.s:3804   .text.TIM_SelectOutputTrigger:0000000000000000 TIM_SelectOutputTrigger
     /tmp/ccses48D.s:3829   .text.TIM_SelectSlaveMode:0000000000000000 $t
     /tmp/ccses48D.s:3836   .text.TIM_SelectSlaveMode:0000000000000000 TIM_SelectSlaveMode
     /tmp/ccses48D.s:3861   .text.TIM_SelectMasterSlaveMode:0000000000000000 $t
     /tmp/ccses48D.s:3868   .text.TIM_SelectMasterSlaveMode:0000000000000000 TIM_SelectMasterSlaveMode
     /tmp/ccses48D.s:3893   .text.TIM_ETRConfig:0000000000000000 $t
     /tmp/ccses48D.s:3900   .text.TIM_ETRConfig:0000000000000000 TIM_ETRConfig
     /tmp/ccses48D.s:3939   .text.TIM_ETRClockMode1Config:0000000000000000 $t
     /tmp/ccses48D.s:3946   .text.TIM_ETRClockMode1Config:0000000000000000 TIM_ETRClockMode1Config
     /tmp/ccses48D.s:3977   .text.TIM_ETRClockMode2Config:0000000000000000 $t
     /tmp/ccses48D.s:3984   .text.TIM_ETRClockMode2Config:0000000000000000 TIM_ETRClockMode2Config
     /tmp/ccses48D.s:4010   .text.TIM_EncoderInterfaceConfig:0000000000000000 $t
     /tmp/ccses48D.s:4017   .text.TIM_EncoderInterfaceConfig:0000000000000000 TIM_EncoderInterfaceConfig
     /tmp/ccses48D.s:4090   .text.TIM_SelectHallSensor:0000000000000000 $t
     /tmp/ccses48D.s:4097   .text.TIM_SelectHallSensor:0000000000000000 TIM_SelectHallSensor
     /tmp/ccses48D.s:4125   .text.TIM_RemapConfig:0000000000000000 $t
     /tmp/ccses48D.s:4132   .text.TIM_RemapConfig:0000000000000000 TIM_RemapConfig
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
