ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f4xx_tim.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.TI1_Config,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	TI1_Config:
  27              	.LFB211:
  28              		.file 1 "FWLIB/src/stm32f4xx_tim.c"
   1:FWLIB/src/stm32f4xx_tim.c **** /**
   2:FWLIB/src/stm32f4xx_tim.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_tim.c ****   * @file    stm32f4xx_tim.c
   4:FWLIB/src/stm32f4xx_tim.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_tim.c ****   * @version V1.8.0
   6:FWLIB/src/stm32f4xx_tim.c ****   * @date    04-November-2016
   7:FWLIB/src/stm32f4xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:FWLIB/src/stm32f4xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:FWLIB/src/stm32f4xx_tim.c ****   *            + TimeBase management
  10:FWLIB/src/stm32f4xx_tim.c ****   *            + Output Compare management
  11:FWLIB/src/stm32f4xx_tim.c ****   *            + Input Capture management
  12:FWLIB/src/stm32f4xx_tim.c ****   *            + Advanced-control timers (TIM1 and TIM8) specific features  
  13:FWLIB/src/stm32f4xx_tim.c ****   *            + Interrupts, DMA and flags management
  14:FWLIB/src/stm32f4xx_tim.c ****   *            + Clocks management
  15:FWLIB/src/stm32f4xx_tim.c ****   *            + Synchronization management
  16:FWLIB/src/stm32f4xx_tim.c ****   *            + Specific interface management
  17:FWLIB/src/stm32f4xx_tim.c ****   *            + Specific remapping management      
  18:FWLIB/src/stm32f4xx_tim.c ****   *              
  19:FWLIB/src/stm32f4xx_tim.c ****   @verbatim   
  20:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
  21:FWLIB/src/stm32f4xx_tim.c ****                    #####  How to use this driver #####
  22:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
  23:FWLIB/src/stm32f4xx_tim.c ****     [..]
  24:FWLIB/src/stm32f4xx_tim.c ****     This driver provides functions to configure and program the TIM 
  25:FWLIB/src/stm32f4xx_tim.c ****     of all STM32F4xx devices.
  26:FWLIB/src/stm32f4xx_tim.c ****     These functions are split in 9 groups: 
  27:FWLIB/src/stm32f4xx_tim.c ****      
  28:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM TimeBase management: this group includes all needed functions 
  29:FWLIB/src/stm32f4xx_tim.c ****           to configure the TM Timebase unit:
  30:FWLIB/src/stm32f4xx_tim.c ****         (++) Set/Get Prescaler
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 2


  31:FWLIB/src/stm32f4xx_tim.c ****         (++) Set/Get Autoreload  
  32:FWLIB/src/stm32f4xx_tim.c ****         (++) Counter modes configuration
  33:FWLIB/src/stm32f4xx_tim.c ****         (++) Set Clock division  
  34:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the One Pulse mode
  35:FWLIB/src/stm32f4xx_tim.c ****         (++) Update Request Configuration
  36:FWLIB/src/stm32f4xx_tim.c ****         (++) Update Disable Configuration
  37:FWLIB/src/stm32f4xx_tim.c ****         (++) Auto-Preload Configuration 
  38:FWLIB/src/stm32f4xx_tim.c ****         (++) Enable/Disable the counter     
  39:FWLIB/src/stm32f4xx_tim.c ****                    
  40:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM Output Compare management: this group includes all needed 
  41:FWLIB/src/stm32f4xx_tim.c ****           functions to configure the Capture/Compare unit used in Output 
  42:FWLIB/src/stm32f4xx_tim.c ****           compare mode: 
  43:FWLIB/src/stm32f4xx_tim.c ****         (++) Configure each channel, independently, in Output Compare mode
  44:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the output compare modes
  45:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the Polarities of each channel
  46:FWLIB/src/stm32f4xx_tim.c ****         (++) Set/Get the Capture/Compare register values
  47:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the Output Compare Fast mode 
  48:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the Output Compare Forced mode  
  49:FWLIB/src/stm32f4xx_tim.c ****         (++) Output Compare-Preload Configuration 
  50:FWLIB/src/stm32f4xx_tim.c ****         (++) Clear Output Compare Reference
  51:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the OCREF Clear signal
  52:FWLIB/src/stm32f4xx_tim.c ****         (++) Enable/Disable the Capture/Compare Channels    
  53:FWLIB/src/stm32f4xx_tim.c ****                      
  54:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM Input Capture management: this group includes all needed 
  55:FWLIB/src/stm32f4xx_tim.c ****           functions to configure the Capture/Compare unit used in 
  56:FWLIB/src/stm32f4xx_tim.c ****           Input Capture mode:
  57:FWLIB/src/stm32f4xx_tim.c ****         (++) Configure each channel in input capture mode
  58:FWLIB/src/stm32f4xx_tim.c ****         (++) Configure Channel1/2 in PWM Input mode
  59:FWLIB/src/stm32f4xx_tim.c ****         (++) Set the Input Capture Prescaler
  60:FWLIB/src/stm32f4xx_tim.c ****         (++) Get the Capture/Compare values      
  61:FWLIB/src/stm32f4xx_tim.c ****                      
  62:FWLIB/src/stm32f4xx_tim.c ****       (#) Advanced-control timers (TIM1 and TIM8) specific features
  63:FWLIB/src/stm32f4xx_tim.c ****         (++) Configures the Break input, dead time, Lock level, the OSSI,
  64:FWLIB/src/stm32f4xx_tim.c ****              the OSSR State and the AOE(automatic output enable)
  65:FWLIB/src/stm32f4xx_tim.c ****         (++) Enable/Disable the TIM peripheral Main Outputs
  66:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the Commutation event
  67:FWLIB/src/stm32f4xx_tim.c ****         (++) Set/Reset the Capture Compare Preload Control bit
  68:FWLIB/src/stm32f4xx_tim.c ****                                 
  69:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM interrupts, DMA and flags management
  70:FWLIB/src/stm32f4xx_tim.c ****         (++) Enable/Disable interrupt sources
  71:FWLIB/src/stm32f4xx_tim.c ****         (++) Get flags status
  72:FWLIB/src/stm32f4xx_tim.c ****         (++) Clear flags/ Pending bits
  73:FWLIB/src/stm32f4xx_tim.c ****         (++) Enable/Disable DMA requests 
  74:FWLIB/src/stm32f4xx_tim.c ****         (++) Configure DMA burst mode
  75:FWLIB/src/stm32f4xx_tim.c ****         (++) Select CaptureCompare DMA request  
  76:FWLIB/src/stm32f4xx_tim.c ****                 
  77:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM clocks management: this group includes all needed functions 
  78:FWLIB/src/stm32f4xx_tim.c ****           to configure the clock controller unit:
  79:FWLIB/src/stm32f4xx_tim.c ****         (++) Select internal/External clock
  80:FWLIB/src/stm32f4xx_tim.c ****         (++) Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:FWLIB/src/stm32f4xx_tim.c ****            
  82:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM synchronization management: this group includes all needed 
  83:FWLIB/src/stm32f4xx_tim.c ****           functions to configure the Synchronization unit:
  84:FWLIB/src/stm32f4xx_tim.c ****         (++) Select Input Trigger  
  85:FWLIB/src/stm32f4xx_tim.c ****         (++) Select Output Trigger  
  86:FWLIB/src/stm32f4xx_tim.c ****         (++) Select Master Slave Mode 
  87:FWLIB/src/stm32f4xx_tim.c ****         (++) ETR Configuration when used as external trigger   
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 3


  88:FWLIB/src/stm32f4xx_tim.c ****        
  89:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM specific interface management, this group includes all 
  90:FWLIB/src/stm32f4xx_tim.c ****           needed functions to use the specific TIM interface:
  91:FWLIB/src/stm32f4xx_tim.c ****         (++) Encoder Interface Configuration
  92:FWLIB/src/stm32f4xx_tim.c ****         (++) Select Hall Sensor   
  93:FWLIB/src/stm32f4xx_tim.c ****            
  94:FWLIB/src/stm32f4xx_tim.c ****       (#) TIM specific remapping management includes the Remapping 
  95:FWLIB/src/stm32f4xx_tim.c ****           configuration of specific timers               
  96:FWLIB/src/stm32f4xx_tim.c ****      
  97:FWLIB/src/stm32f4xx_tim.c ****   @endverbatim    
  98:FWLIB/src/stm32f4xx_tim.c ****   ******************************************************************************
  99:FWLIB/src/stm32f4xx_tim.c ****   * @attention
 100:FWLIB/src/stm32f4xx_tim.c ****   *
 101:FWLIB/src/stm32f4xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
 102:FWLIB/src/stm32f4xx_tim.c ****   *
 103:FWLIB/src/stm32f4xx_tim.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 104:FWLIB/src/stm32f4xx_tim.c ****   * You may not use this file except in compliance with the License.
 105:FWLIB/src/stm32f4xx_tim.c ****   * You may obtain a copy of the License at:
 106:FWLIB/src/stm32f4xx_tim.c ****   *
 107:FWLIB/src/stm32f4xx_tim.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 108:FWLIB/src/stm32f4xx_tim.c ****   *
 109:FWLIB/src/stm32f4xx_tim.c ****   * Unless required by applicable law or agreed to in writing, software 
 110:FWLIB/src/stm32f4xx_tim.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 111:FWLIB/src/stm32f4xx_tim.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 112:FWLIB/src/stm32f4xx_tim.c ****   * See the License for the specific language governing permissions and
 113:FWLIB/src/stm32f4xx_tim.c ****   * limitations under the License.
 114:FWLIB/src/stm32f4xx_tim.c ****   *
 115:FWLIB/src/stm32f4xx_tim.c ****   ******************************************************************************
 116:FWLIB/src/stm32f4xx_tim.c ****   */
 117:FWLIB/src/stm32f4xx_tim.c **** 
 118:FWLIB/src/stm32f4xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 119:FWLIB/src/stm32f4xx_tim.c **** #include "stm32f4xx_tim.h"
 120:FWLIB/src/stm32f4xx_tim.c **** #include "stm32f4xx_rcc.h"
 121:FWLIB/src/stm32f4xx_tim.c **** 
 122:FWLIB/src/stm32f4xx_tim.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 123:FWLIB/src/stm32f4xx_tim.c ****   * @{
 124:FWLIB/src/stm32f4xx_tim.c ****   */
 125:FWLIB/src/stm32f4xx_tim.c **** 
 126:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM 
 127:FWLIB/src/stm32f4xx_tim.c ****   * @brief TIM driver modules
 128:FWLIB/src/stm32f4xx_tim.c ****   * @{
 129:FWLIB/src/stm32f4xx_tim.c ****   */
 130:FWLIB/src/stm32f4xx_tim.c **** 
 131:FWLIB/src/stm32f4xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 132:FWLIB/src/stm32f4xx_tim.c **** /* Private define ------------------------------------------------------------*/
 133:FWLIB/src/stm32f4xx_tim.c **** 
 134:FWLIB/src/stm32f4xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 135:FWLIB/src/stm32f4xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 136:FWLIB/src/stm32f4xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 137:FWLIB/src/stm32f4xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 138:FWLIB/src/stm32f4xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 139:FWLIB/src/stm32f4xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 140:FWLIB/src/stm32f4xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 141:FWLIB/src/stm32f4xx_tim.c **** 
 142:FWLIB/src/stm32f4xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 143:FWLIB/src/stm32f4xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 144:FWLIB/src/stm32f4xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 4


 145:FWLIB/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 146:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 147:FWLIB/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 148:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 149:FWLIB/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 150:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 151:FWLIB/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 152:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 153:FWLIB/src/stm32f4xx_tim.c **** 
 154:FWLIB/src/stm32f4xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 155:FWLIB/src/stm32f4xx_tim.c **** 
 156:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Private_Functions
 157:FWLIB/src/stm32f4xx_tim.c ****   * @{
 158:FWLIB/src/stm32f4xx_tim.c ****   */
 159:FWLIB/src/stm32f4xx_tim.c **** 
 160:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 161:FWLIB/src/stm32f4xx_tim.c ****  *  @brief   TimeBase management functions 
 162:FWLIB/src/stm32f4xx_tim.c ****  *
 163:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
 164:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
 165:FWLIB/src/stm32f4xx_tim.c ****                      ##### TimeBase management functions #####
 166:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
 167:FWLIB/src/stm32f4xx_tim.c ****   
 168:FWLIB/src/stm32f4xx_tim.c ****      
 169:FWLIB/src/stm32f4xx_tim.c ****             ##### TIM Driver: how to use it in Timing(Time base) Mode #####
 170:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
 171:FWLIB/src/stm32f4xx_tim.c ****     [..] 
 172:FWLIB/src/stm32f4xx_tim.c ****     To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 173:FWLIB/src/stm32f4xx_tim.c ****        
 174:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 175:FWLIB/src/stm32f4xx_tim.c ****                     
 176:FWLIB/src/stm32f4xx_tim.c ****       (#) Fill the TIM_TimeBaseInitStruct with the desired parameters.
 177:FWLIB/src/stm32f4xx_tim.c ****        
 178:FWLIB/src/stm32f4xx_tim.c ****       (#) Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 179:FWLIB/src/stm32f4xx_tim.c ****           with the corresponding configuration
 180:FWLIB/src/stm32f4xx_tim.c ****           
 181:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable the NVIC if you need to generate the update interrupt. 
 182:FWLIB/src/stm32f4xx_tim.c ****           
 183:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 184:FWLIB/src/stm32f4xx_tim.c ****        
 185:FWLIB/src/stm32f4xx_tim.c ****       (#) Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 186:FWLIB/src/stm32f4xx_tim.c ****              
 187:FWLIB/src/stm32f4xx_tim.c ****        -@- All other functions can be used separately to modify, if needed,
 188:FWLIB/src/stm32f4xx_tim.c ****            a specific feature of the Timer. 
 189:FWLIB/src/stm32f4xx_tim.c **** 
 190:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
 191:FWLIB/src/stm32f4xx_tim.c ****   * @{
 192:FWLIB/src/stm32f4xx_tim.c ****   */
 193:FWLIB/src/stm32f4xx_tim.c ****   
 194:FWLIB/src/stm32f4xx_tim.c **** /**
 195:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 196:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 197:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 198:FWLIB/src/stm32f4xx_tim.c **** 
 199:FWLIB/src/stm32f4xx_tim.c ****   */
 200:FWLIB/src/stm32f4xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 201:FWLIB/src/stm32f4xx_tim.c **** {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 5


 202:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 203:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 204:FWLIB/src/stm32f4xx_tim.c ****  
 205:FWLIB/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
 206:FWLIB/src/stm32f4xx_tim.c ****   {
 207:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 208:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 209:FWLIB/src/stm32f4xx_tim.c ****   } 
 210:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
 211:FWLIB/src/stm32f4xx_tim.c ****   {     
 212:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 213:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 214:FWLIB/src/stm32f4xx_tim.c ****   }  
 215:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
 216:FWLIB/src/stm32f4xx_tim.c ****   { 
 217:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 218:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 219:FWLIB/src/stm32f4xx_tim.c ****   }  
 220:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
 221:FWLIB/src/stm32f4xx_tim.c ****   { 
 222:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 223:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 224:FWLIB/src/stm32f4xx_tim.c ****   }  
 225:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 226:FWLIB/src/stm32f4xx_tim.c ****   {      
 227:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 228:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 229:FWLIB/src/stm32f4xx_tim.c ****   }  
 230:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 231:FWLIB/src/stm32f4xx_tim.c ****   {    
 232:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 233:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 234:FWLIB/src/stm32f4xx_tim.c ****   }  
 235:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 236:FWLIB/src/stm32f4xx_tim.c ****   {      
 237:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 238:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 239:FWLIB/src/stm32f4xx_tim.c ****   }  
 240:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 241:FWLIB/src/stm32f4xx_tim.c ****   {      
 242:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 243:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 244:FWLIB/src/stm32f4xx_tim.c ****   }  
 245:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 246:FWLIB/src/stm32f4xx_tim.c ****   {      
 247:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 248:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 249:FWLIB/src/stm32f4xx_tim.c ****    }  
 250:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 251:FWLIB/src/stm32f4xx_tim.c ****   {      
 252:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 253:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 254:FWLIB/src/stm32f4xx_tim.c ****   }  
 255:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 256:FWLIB/src/stm32f4xx_tim.c ****   {     
 257:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 258:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 6


 259:FWLIB/src/stm32f4xx_tim.c ****   }  
 260:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 261:FWLIB/src/stm32f4xx_tim.c ****   {      
 262:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 263:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 264:FWLIB/src/stm32f4xx_tim.c ****   }  
 265:FWLIB/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 266:FWLIB/src/stm32f4xx_tim.c ****   {       
 267:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 268:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 269:FWLIB/src/stm32f4xx_tim.c ****   }  
 270:FWLIB/src/stm32f4xx_tim.c ****   else
 271:FWLIB/src/stm32f4xx_tim.c ****   { 
 272:FWLIB/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 273:FWLIB/src/stm32f4xx_tim.c ****     {     
 274:FWLIB/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 275:FWLIB/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 276:FWLIB/src/stm32f4xx_tim.c ****     }   
 277:FWLIB/src/stm32f4xx_tim.c ****   }
 278:FWLIB/src/stm32f4xx_tim.c **** }
 279:FWLIB/src/stm32f4xx_tim.c **** 
 280:FWLIB/src/stm32f4xx_tim.c **** /**
 281:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 282:FWLIB/src/stm32f4xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 283:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 284:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 285:FWLIB/src/stm32f4xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 286:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 287:FWLIB/src/stm32f4xx_tim.c ****   */
 288:FWLIB/src/stm32f4xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 289:FWLIB/src/stm32f4xx_tim.c **** {
 290:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 291:FWLIB/src/stm32f4xx_tim.c **** 
 292:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 293:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 294:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 295:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 296:FWLIB/src/stm32f4xx_tim.c **** 
 297:FWLIB/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 298:FWLIB/src/stm32f4xx_tim.c **** 
 299:FWLIB/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 300:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 301:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 302:FWLIB/src/stm32f4xx_tim.c ****   {
 303:FWLIB/src/stm32f4xx_tim.c ****     /* Select the Counter Mode */
 304:FWLIB/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 305:FWLIB/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 306:FWLIB/src/stm32f4xx_tim.c ****   }
 307:FWLIB/src/stm32f4xx_tim.c ****  
 308:FWLIB/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 309:FWLIB/src/stm32f4xx_tim.c ****   {
 310:FWLIB/src/stm32f4xx_tim.c ****     /* Set the clock division */
 311:FWLIB/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 312:FWLIB/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 313:FWLIB/src/stm32f4xx_tim.c ****   }
 314:FWLIB/src/stm32f4xx_tim.c **** 
 315:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 7


 316:FWLIB/src/stm32f4xx_tim.c **** 
 317:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Autoreload value */
 318:FWLIB/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 319:FWLIB/src/stm32f4xx_tim.c ****  
 320:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 321:FWLIB/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 322:FWLIB/src/stm32f4xx_tim.c ****     
 323:FWLIB/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 324:FWLIB/src/stm32f4xx_tim.c ****   {
 325:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Repetition Counter value */
 326:FWLIB/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 327:FWLIB/src/stm32f4xx_tim.c ****   }
 328:FWLIB/src/stm32f4xx_tim.c **** 
 329:FWLIB/src/stm32f4xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 330:FWLIB/src/stm32f4xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediately */
 331:FWLIB/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 332:FWLIB/src/stm32f4xx_tim.c **** }
 333:FWLIB/src/stm32f4xx_tim.c **** 
 334:FWLIB/src/stm32f4xx_tim.c **** /**
 335:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 336:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 337:FWLIB/src/stm32f4xx_tim.c ****   *         structure which will be initialized.
 338:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 339:FWLIB/src/stm32f4xx_tim.c ****   */
 340:FWLIB/src/stm32f4xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 341:FWLIB/src/stm32f4xx_tim.c **** {
 342:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 343:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 344:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 345:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 346:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 347:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 348:FWLIB/src/stm32f4xx_tim.c **** }
 349:FWLIB/src/stm32f4xx_tim.c **** 
 350:FWLIB/src/stm32f4xx_tim.c **** /**
 351:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 352:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 353:FWLIB/src/stm32f4xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 354:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 355:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 356:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 357:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediately.
 358:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 359:FWLIB/src/stm32f4xx_tim.c ****   */
 360:FWLIB/src/stm32f4xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 361:FWLIB/src/stm32f4xx_tim.c **** {
 362:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 363:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 364:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 365:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 366:FWLIB/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 367:FWLIB/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 368:FWLIB/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 369:FWLIB/src/stm32f4xx_tim.c **** }
 370:FWLIB/src/stm32f4xx_tim.c **** 
 371:FWLIB/src/stm32f4xx_tim.c **** /**
 372:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 8


 373:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 374:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 375:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 376:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 377:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 378:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 379:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 380:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 381:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 382:FWLIB/src/stm32f4xx_tim.c ****   */
 383:FWLIB/src/stm32f4xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 384:FWLIB/src/stm32f4xx_tim.c **** {
 385:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 386:FWLIB/src/stm32f4xx_tim.c **** 
 387:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 388:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 389:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 390:FWLIB/src/stm32f4xx_tim.c **** 
 391:FWLIB/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 392:FWLIB/src/stm32f4xx_tim.c **** 
 393:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the CMS and DIR Bits */
 394:FWLIB/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 395:FWLIB/src/stm32f4xx_tim.c **** 
 396:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Counter Mode */
 397:FWLIB/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 398:FWLIB/src/stm32f4xx_tim.c **** 
 399:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CR1 register */
 400:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 401:FWLIB/src/stm32f4xx_tim.c **** }
 402:FWLIB/src/stm32f4xx_tim.c **** 
 403:FWLIB/src/stm32f4xx_tim.c **** /**
 404:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 405:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 406:FWLIB/src/stm32f4xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 407:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 408:FWLIB/src/stm32f4xx_tim.c ****   */
 409:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 410:FWLIB/src/stm32f4xx_tim.c **** {
 411:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 412:FWLIB/src/stm32f4xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 413:FWLIB/src/stm32f4xx_tim.c **** 
 414:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Counter Register value */
 415:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 416:FWLIB/src/stm32f4xx_tim.c **** }
 417:FWLIB/src/stm32f4xx_tim.c **** 
 418:FWLIB/src/stm32f4xx_tim.c **** /**
 419:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 420:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 421:FWLIB/src/stm32f4xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 422:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 423:FWLIB/src/stm32f4xx_tim.c ****   */
 424:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 425:FWLIB/src/stm32f4xx_tim.c **** {
 426:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 427:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 428:FWLIB/src/stm32f4xx_tim.c ****   
 429:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Autoreload Register value */
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 9


 430:FWLIB/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 431:FWLIB/src/stm32f4xx_tim.c **** }
 432:FWLIB/src/stm32f4xx_tim.c **** 
 433:FWLIB/src/stm32f4xx_tim.c **** /**
 434:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 435:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 436:FWLIB/src/stm32f4xx_tim.c ****   * @retval Counter Register value
 437:FWLIB/src/stm32f4xx_tim.c ****   */
 438:FWLIB/src/stm32f4xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 439:FWLIB/src/stm32f4xx_tim.c **** {
 440:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 441:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 442:FWLIB/src/stm32f4xx_tim.c **** 
 443:FWLIB/src/stm32f4xx_tim.c ****   /* Get the Counter Register value */
 444:FWLIB/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 445:FWLIB/src/stm32f4xx_tim.c **** }
 446:FWLIB/src/stm32f4xx_tim.c **** 
 447:FWLIB/src/stm32f4xx_tim.c **** /**
 448:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 449:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 450:FWLIB/src/stm32f4xx_tim.c ****   * @retval Prescaler Register value.
 451:FWLIB/src/stm32f4xx_tim.c ****   */
 452:FWLIB/src/stm32f4xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 453:FWLIB/src/stm32f4xx_tim.c **** {
 454:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 455:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 456:FWLIB/src/stm32f4xx_tim.c **** 
 457:FWLIB/src/stm32f4xx_tim.c ****   /* Get the Prescaler Register value */
 458:FWLIB/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 459:FWLIB/src/stm32f4xx_tim.c **** }
 460:FWLIB/src/stm32f4xx_tim.c **** 
 461:FWLIB/src/stm32f4xx_tim.c **** /**
 462:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 463:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 464:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 465:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 466:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 467:FWLIB/src/stm32f4xx_tim.c ****   */
 468:FWLIB/src/stm32f4xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 469:FWLIB/src/stm32f4xx_tim.c **** {
 470:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 471:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 472:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 473:FWLIB/src/stm32f4xx_tim.c **** 
 474:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 475:FWLIB/src/stm32f4xx_tim.c ****   {
 476:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Update Disable Bit */
 477:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 478:FWLIB/src/stm32f4xx_tim.c ****   }
 479:FWLIB/src/stm32f4xx_tim.c ****   else
 480:FWLIB/src/stm32f4xx_tim.c ****   {
 481:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Update Disable Bit */
 482:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 483:FWLIB/src/stm32f4xx_tim.c ****   }
 484:FWLIB/src/stm32f4xx_tim.c **** }
 485:FWLIB/src/stm32f4xx_tim.c **** 
 486:FWLIB/src/stm32f4xx_tim.c **** /**
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 10


 487:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 488:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 489:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 490:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 491:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is the counter
 492:FWLIB/src/stm32f4xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 493:FWLIB/src/stm32f4xx_tim.c ****   *                 generation through the slave mode controller.
 494:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is counter overflow/underflow.
 495:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 496:FWLIB/src/stm32f4xx_tim.c ****   */
 497:FWLIB/src/stm32f4xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 498:FWLIB/src/stm32f4xx_tim.c **** {
 499:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 500:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 501:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 502:FWLIB/src/stm32f4xx_tim.c **** 
 503:FWLIB/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 504:FWLIB/src/stm32f4xx_tim.c ****   {
 505:FWLIB/src/stm32f4xx_tim.c ****     /* Set the URS Bit */
 506:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 507:FWLIB/src/stm32f4xx_tim.c ****   }
 508:FWLIB/src/stm32f4xx_tim.c ****   else
 509:FWLIB/src/stm32f4xx_tim.c ****   {
 510:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the URS Bit */
 511:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 512:FWLIB/src/stm32f4xx_tim.c ****   }
 513:FWLIB/src/stm32f4xx_tim.c **** }
 514:FWLIB/src/stm32f4xx_tim.c **** 
 515:FWLIB/src/stm32f4xx_tim.c **** /**
 516:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 517:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 518:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 519:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 520:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 521:FWLIB/src/stm32f4xx_tim.c ****   */
 522:FWLIB/src/stm32f4xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 523:FWLIB/src/stm32f4xx_tim.c **** {
 524:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 525:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 526:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 527:FWLIB/src/stm32f4xx_tim.c **** 
 528:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 529:FWLIB/src/stm32f4xx_tim.c ****   {
 530:FWLIB/src/stm32f4xx_tim.c ****     /* Set the ARR Preload Bit */
 531:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 532:FWLIB/src/stm32f4xx_tim.c ****   }
 533:FWLIB/src/stm32f4xx_tim.c ****   else
 534:FWLIB/src/stm32f4xx_tim.c ****   {
 535:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the ARR Preload Bit */
 536:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 537:FWLIB/src/stm32f4xx_tim.c ****   }
 538:FWLIB/src/stm32f4xx_tim.c **** }
 539:FWLIB/src/stm32f4xx_tim.c **** 
 540:FWLIB/src/stm32f4xx_tim.c **** /**
 541:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 542:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 543:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 11


 544:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 545:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Single
 546:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 547:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 548:FWLIB/src/stm32f4xx_tim.c ****   */
 549:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 550:FWLIB/src/stm32f4xx_tim.c **** {
 551:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 552:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 553:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 554:FWLIB/src/stm32f4xx_tim.c **** 
 555:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OPM Bit */
 556:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 557:FWLIB/src/stm32f4xx_tim.c **** 
 558:FWLIB/src/stm32f4xx_tim.c ****   /* Configure the OPM Mode */
 559:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 560:FWLIB/src/stm32f4xx_tim.c **** }
 561:FWLIB/src/stm32f4xx_tim.c **** 
 562:FWLIB/src/stm32f4xx_tim.c **** /**
 563:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 564:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 565:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 566:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following value:
 567:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 568:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 569:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 570:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 571:FWLIB/src/stm32f4xx_tim.c ****   */
 572:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 573:FWLIB/src/stm32f4xx_tim.c **** {
 574:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 575:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 576:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 577:FWLIB/src/stm32f4xx_tim.c **** 
 578:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the CKD Bits */
 579:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 580:FWLIB/src/stm32f4xx_tim.c **** 
 581:FWLIB/src/stm32f4xx_tim.c ****   /* Set the CKD value */
 582:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 583:FWLIB/src/stm32f4xx_tim.c **** }
 584:FWLIB/src/stm32f4xx_tim.c **** 
 585:FWLIB/src/stm32f4xx_tim.c **** /**
 586:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 587:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 588:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 589:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 590:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 591:FWLIB/src/stm32f4xx_tim.c ****   */
 592:FWLIB/src/stm32f4xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 593:FWLIB/src/stm32f4xx_tim.c **** {
 594:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 595:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 596:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 597:FWLIB/src/stm32f4xx_tim.c ****   
 598:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 599:FWLIB/src/stm32f4xx_tim.c ****   {
 600:FWLIB/src/stm32f4xx_tim.c ****     /* Enable the TIM Counter */
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 12


 601:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 602:FWLIB/src/stm32f4xx_tim.c ****   }
 603:FWLIB/src/stm32f4xx_tim.c ****   else
 604:FWLIB/src/stm32f4xx_tim.c ****   {
 605:FWLIB/src/stm32f4xx_tim.c ****     /* Disable the TIM Counter */
 606:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 607:FWLIB/src/stm32f4xx_tim.c ****   }
 608:FWLIB/src/stm32f4xx_tim.c **** }
 609:FWLIB/src/stm32f4xx_tim.c **** /**
 610:FWLIB/src/stm32f4xx_tim.c ****   * @}
 611:FWLIB/src/stm32f4xx_tim.c ****   */
 612:FWLIB/src/stm32f4xx_tim.c **** 
 613:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 614:FWLIB/src/stm32f4xx_tim.c ****  *  @brief    Output Compare management functions 
 615:FWLIB/src/stm32f4xx_tim.c ****  *
 616:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
 617:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
 618:FWLIB/src/stm32f4xx_tim.c ****               ##### Output Compare management functions #####
 619:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
 620:FWLIB/src/stm32f4xx_tim.c ****    
 621:FWLIB/src/stm32f4xx_tim.c ****       
 622:FWLIB/src/stm32f4xx_tim.c ****         ##### TIM Driver: how to use it in Output Compare Mode #####
 623:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
 624:FWLIB/src/stm32f4xx_tim.c ****     [..] 
 625:FWLIB/src/stm32f4xx_tim.c ****     To use the Timer in Output Compare mode, the following steps are mandatory:
 626:FWLIB/src/stm32f4xx_tim.c ****        
 627:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) 
 628:FWLIB/src/stm32f4xx_tim.c ****           function
 629:FWLIB/src/stm32f4xx_tim.c ****        
 630:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the TIM pins by configuring the corresponding GPIO pins
 631:FWLIB/src/stm32f4xx_tim.c ****        
 632:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the Time base unit as described in the first part of this driver, 
 633:FWLIB/src/stm32f4xx_tim.c ****         (++) if needed, else the Timer will run with the default configuration:
 634:FWLIB/src/stm32f4xx_tim.c ****             Autoreload value = 0xFFFF
 635:FWLIB/src/stm32f4xx_tim.c ****         (++) Prescaler value = 0x0000
 636:FWLIB/src/stm32f4xx_tim.c ****         (++) Counter mode = Up counting
 637:FWLIB/src/stm32f4xx_tim.c ****         (++) Clock Division = TIM_CKD_DIV1
 638:FWLIB/src/stm32f4xx_tim.c ****           
 639:FWLIB/src/stm32f4xx_tim.c ****       (#) Fill the TIM_OCInitStruct with the desired parameters including:
 640:FWLIB/src/stm32f4xx_tim.c ****         (++) The TIM Output Compare mode: TIM_OCMode
 641:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Output State: TIM_OutputState
 642:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Pulse value: TIM_Pulse
 643:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Output Compare Polarity : TIM_OCPolarity
 644:FWLIB/src/stm32f4xx_tim.c ****        
 645:FWLIB/src/stm32f4xx_tim.c ****       (#) Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired 
 646:FWLIB/src/stm32f4xx_tim.c ****           channel with the corresponding configuration
 647:FWLIB/src/stm32f4xx_tim.c ****        
 648:FWLIB/src/stm32f4xx_tim.c ****       (#) Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 649:FWLIB/src/stm32f4xx_tim.c ****        
 650:FWLIB/src/stm32f4xx_tim.c ****       -@- All other functions can be used separately to modify, if needed,
 651:FWLIB/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
 652:FWLIB/src/stm32f4xx_tim.c ****           
 653:FWLIB/src/stm32f4xx_tim.c ****       -@- In case of PWM mode, this function is mandatory:
 654:FWLIB/src/stm32f4xx_tim.c ****           TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 655:FWLIB/src/stm32f4xx_tim.c ****               
 656:FWLIB/src/stm32f4xx_tim.c ****       -@- If the corresponding interrupt or DMA request are needed, the user should:
 657:FWLIB/src/stm32f4xx_tim.c ****         (+@) Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 13


 658:FWLIB/src/stm32f4xx_tim.c ****         (+@) Enable the corresponding interrupt (or DMA request) using the function 
 659:FWLIB/src/stm32f4xx_tim.c ****              TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 660:FWLIB/src/stm32f4xx_tim.c **** 
 661:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
 662:FWLIB/src/stm32f4xx_tim.c ****   * @{
 663:FWLIB/src/stm32f4xx_tim.c ****   */
 664:FWLIB/src/stm32f4xx_tim.c **** 
 665:FWLIB/src/stm32f4xx_tim.c **** /**
 666:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 667:FWLIB/src/stm32f4xx_tim.c ****   *         the TIM_OCInitStruct.
 668:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 669:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 670:FWLIB/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 671:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 672:FWLIB/src/stm32f4xx_tim.c ****   */
 673:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 674:FWLIB/src/stm32f4xx_tim.c **** {
 675:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 676:FWLIB/src/stm32f4xx_tim.c ****    
 677:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 678:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 679:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 680:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 681:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 682:FWLIB/src/stm32f4xx_tim.c **** 
 683:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 684:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 685:FWLIB/src/stm32f4xx_tim.c ****   
 686:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 687:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 688:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 689:FWLIB/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 690:FWLIB/src/stm32f4xx_tim.c ****   
 691:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 692:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 693:FWLIB/src/stm32f4xx_tim.c ****     
 694:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 695:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 696:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 697:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 698:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 699:FWLIB/src/stm32f4xx_tim.c ****   
 700:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 701:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 702:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 703:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 704:FWLIB/src/stm32f4xx_tim.c ****   
 705:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output State */
 706:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 707:FWLIB/src/stm32f4xx_tim.c ****     
 708:FWLIB/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 709:FWLIB/src/stm32f4xx_tim.c ****   {
 710:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 711:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 712:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 713:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 714:FWLIB/src/stm32f4xx_tim.c ****     
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 14


 715:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 716:FWLIB/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 717:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 718:FWLIB/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 719:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 720:FWLIB/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 721:FWLIB/src/stm32f4xx_tim.c ****     
 722:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 723:FWLIB/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 724:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 725:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 726:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 727:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 728:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 729:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 730:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 731:FWLIB/src/stm32f4xx_tim.c ****   }
 732:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 733:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 734:FWLIB/src/stm32f4xx_tim.c ****   
 735:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 736:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 737:FWLIB/src/stm32f4xx_tim.c ****   
 738:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 739:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 740:FWLIB/src/stm32f4xx_tim.c ****   
 741:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 742:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 743:FWLIB/src/stm32f4xx_tim.c **** }
 744:FWLIB/src/stm32f4xx_tim.c **** 
 745:FWLIB/src/stm32f4xx_tim.c **** /**
 746:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 747:FWLIB/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 748:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 749:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
 750:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 751:FWLIB/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 752:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 753:FWLIB/src/stm32f4xx_tim.c ****   */
 754:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 755:FWLIB/src/stm32f4xx_tim.c **** {
 756:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 757:FWLIB/src/stm32f4xx_tim.c ****    
 758:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 759:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 760:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 761:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 762:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 763:FWLIB/src/stm32f4xx_tim.c **** 
 764:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 765:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 766:FWLIB/src/stm32f4xx_tim.c ****   
 767:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */  
 768:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 769:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 770:FWLIB/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 771:FWLIB/src/stm32f4xx_tim.c ****   
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 15


 772:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 773:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 774:FWLIB/src/stm32f4xx_tim.c ****     
 775:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 776:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 777:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 778:FWLIB/src/stm32f4xx_tim.c ****   
 779:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 780:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 781:FWLIB/src/stm32f4xx_tim.c ****   
 782:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 783:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 784:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 785:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 786:FWLIB/src/stm32f4xx_tim.c ****   
 787:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output State */
 788:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 789:FWLIB/src/stm32f4xx_tim.c ****     
 790:FWLIB/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 791:FWLIB/src/stm32f4xx_tim.c ****   {
 792:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 793:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 794:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 795:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 796:FWLIB/src/stm32f4xx_tim.c ****     
 797:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 798:FWLIB/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 799:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 800:FWLIB/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 801:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 802:FWLIB/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 803:FWLIB/src/stm32f4xx_tim.c ****     
 804:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 805:FWLIB/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 806:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 807:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 808:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 809:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 810:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 811:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 812:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 813:FWLIB/src/stm32f4xx_tim.c ****   }
 814:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 815:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 816:FWLIB/src/stm32f4xx_tim.c ****   
 817:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 818:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 819:FWLIB/src/stm32f4xx_tim.c ****   
 820:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 821:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 822:FWLIB/src/stm32f4xx_tim.c ****   
 823:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 824:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 825:FWLIB/src/stm32f4xx_tim.c **** }
 826:FWLIB/src/stm32f4xx_tim.c **** 
 827:FWLIB/src/stm32f4xx_tim.c **** /**
 828:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 16


 829:FWLIB/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 830:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 831:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 832:FWLIB/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 833:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 834:FWLIB/src/stm32f4xx_tim.c ****   */
 835:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 836:FWLIB/src/stm32f4xx_tim.c **** {
 837:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 838:FWLIB/src/stm32f4xx_tim.c ****    
 839:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 840:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 841:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 842:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 843:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 844:FWLIB/src/stm32f4xx_tim.c **** 
 845:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 846:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 847:FWLIB/src/stm32f4xx_tim.c ****   
 848:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 849:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 850:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 851:FWLIB/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 852:FWLIB/src/stm32f4xx_tim.c ****   
 853:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 854:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 855:FWLIB/src/stm32f4xx_tim.c ****     
 856:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 857:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 858:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 859:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 860:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 861:FWLIB/src/stm32f4xx_tim.c ****   
 862:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 863:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 864:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 865:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 866:FWLIB/src/stm32f4xx_tim.c ****   
 867:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output State */
 868:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 869:FWLIB/src/stm32f4xx_tim.c ****     
 870:FWLIB/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 871:FWLIB/src/stm32f4xx_tim.c ****   {
 872:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 873:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 874:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 875:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 876:FWLIB/src/stm32f4xx_tim.c ****     
 877:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 878:FWLIB/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 879:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 880:FWLIB/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 881:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 882:FWLIB/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 883:FWLIB/src/stm32f4xx_tim.c ****     
 884:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 885:FWLIB/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 17


 886:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 887:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 888:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 889:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 890:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 891:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 892:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 893:FWLIB/src/stm32f4xx_tim.c ****   }
 894:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 895:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 896:FWLIB/src/stm32f4xx_tim.c ****   
 897:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
 898:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 899:FWLIB/src/stm32f4xx_tim.c ****   
 900:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 901:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 902:FWLIB/src/stm32f4xx_tim.c ****   
 903:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 904:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 905:FWLIB/src/stm32f4xx_tim.c **** }
 906:FWLIB/src/stm32f4xx_tim.c **** 
 907:FWLIB/src/stm32f4xx_tim.c **** /**
 908:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 909:FWLIB/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 910:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 911:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 912:FWLIB/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 913:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 914:FWLIB/src/stm32f4xx_tim.c ****   */
 915:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 916:FWLIB/src/stm32f4xx_tim.c **** {
 917:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 918:FWLIB/src/stm32f4xx_tim.c ****    
 919:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 920:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 921:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 922:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 923:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 924:FWLIB/src/stm32f4xx_tim.c **** 
 925:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 926:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 927:FWLIB/src/stm32f4xx_tim.c ****   
 928:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 929:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 930:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 931:FWLIB/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 932:FWLIB/src/stm32f4xx_tim.c ****   
 933:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 934:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 935:FWLIB/src/stm32f4xx_tim.c ****     
 936:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 937:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 938:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 939:FWLIB/src/stm32f4xx_tim.c ****   
 940:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 941:FWLIB/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 942:FWLIB/src/stm32f4xx_tim.c ****   
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 18


 943:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 944:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 945:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 946:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 947:FWLIB/src/stm32f4xx_tim.c ****   
 948:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output State */
 949:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 950:FWLIB/src/stm32f4xx_tim.c ****   
 951:FWLIB/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 952:FWLIB/src/stm32f4xx_tim.c ****   {
 953:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 954:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare IDLE State */
 955:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 956:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 957:FWLIB/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 958:FWLIB/src/stm32f4xx_tim.c ****   }
 959:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 960:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 961:FWLIB/src/stm32f4xx_tim.c ****   
 962:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */  
 963:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 964:FWLIB/src/stm32f4xx_tim.c ****     
 965:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 966:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 967:FWLIB/src/stm32f4xx_tim.c ****   
 968:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 969:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 970:FWLIB/src/stm32f4xx_tim.c **** }
 971:FWLIB/src/stm32f4xx_tim.c **** 
 972:FWLIB/src/stm32f4xx_tim.c **** /**
 973:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 974:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 975:FWLIB/src/stm32f4xx_tim.c ****   *         be initialized.
 976:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
 977:FWLIB/src/stm32f4xx_tim.c ****   */
 978:FWLIB/src/stm32f4xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 979:FWLIB/src/stm32f4xx_tim.c **** {
 980:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 981:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 982:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 983:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 984:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 985:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 986:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 987:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 988:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 989:FWLIB/src/stm32f4xx_tim.c **** }
 990:FWLIB/src/stm32f4xx_tim.c **** 
 991:FWLIB/src/stm32f4xx_tim.c **** /**
 992:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 993:FWLIB/src/stm32f4xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 994:FWLIB/src/stm32f4xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 995:FWLIB/src/stm32f4xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 996:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 997:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 998:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 999:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 19


1000:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1001:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1002:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1003:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
1004:FWLIB/src/stm32f4xx_tim.c ****   *           This parameter can be one of the following values:
1005:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Timing
1006:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Active
1007:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1008:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1009:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1010:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1011:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1012:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1013:FWLIB/src/stm32f4xx_tim.c ****   */
1014:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1015:FWLIB/src/stm32f4xx_tim.c **** {
1016:FWLIB/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
1017:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmp1 = 0;
1018:FWLIB/src/stm32f4xx_tim.c **** 
1019:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1020:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1021:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1022:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1023:FWLIB/src/stm32f4xx_tim.c **** 
1024:FWLIB/src/stm32f4xx_tim.c ****   tmp = (uint32_t) TIMx;
1025:FWLIB/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
1026:FWLIB/src/stm32f4xx_tim.c **** 
1027:FWLIB/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
1028:FWLIB/src/stm32f4xx_tim.c **** 
1029:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1030:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
1031:FWLIB/src/stm32f4xx_tim.c **** 
1032:FWLIB/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
1033:FWLIB/src/stm32f4xx_tim.c ****   {
1034:FWLIB/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
1035:FWLIB/src/stm32f4xx_tim.c **** 
1036:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1037:FWLIB/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
1038:FWLIB/src/stm32f4xx_tim.c ****    
1039:FWLIB/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1040:FWLIB/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
1041:FWLIB/src/stm32f4xx_tim.c ****   }
1042:FWLIB/src/stm32f4xx_tim.c ****   else
1043:FWLIB/src/stm32f4xx_tim.c ****   {
1044:FWLIB/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
1045:FWLIB/src/stm32f4xx_tim.c **** 
1046:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1047:FWLIB/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
1048:FWLIB/src/stm32f4xx_tim.c ****     
1049:FWLIB/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1050:FWLIB/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
1051:FWLIB/src/stm32f4xx_tim.c ****   }
1052:FWLIB/src/stm32f4xx_tim.c **** }
1053:FWLIB/src/stm32f4xx_tim.c **** 
1054:FWLIB/src/stm32f4xx_tim.c **** /**
1055:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1056:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 20


1057:FWLIB/src/stm32f4xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1058:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1059:FWLIB/src/stm32f4xx_tim.c ****   */
1060:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1061:FWLIB/src/stm32f4xx_tim.c **** {
1062:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1063:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1064:FWLIB/src/stm32f4xx_tim.c **** 
1065:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare1 Register value */
1066:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
1067:FWLIB/src/stm32f4xx_tim.c **** }
1068:FWLIB/src/stm32f4xx_tim.c **** 
1069:FWLIB/src/stm32f4xx_tim.c **** /**
1070:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1071:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1072:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1073:FWLIB/src/stm32f4xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1074:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1075:FWLIB/src/stm32f4xx_tim.c ****   */
1076:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1077:FWLIB/src/stm32f4xx_tim.c **** {
1078:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1079:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1080:FWLIB/src/stm32f4xx_tim.c **** 
1081:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare2 Register value */
1082:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
1083:FWLIB/src/stm32f4xx_tim.c **** }
1084:FWLIB/src/stm32f4xx_tim.c **** 
1085:FWLIB/src/stm32f4xx_tim.c **** /**
1086:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1087:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1088:FWLIB/src/stm32f4xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1089:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1090:FWLIB/src/stm32f4xx_tim.c ****   */
1091:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1092:FWLIB/src/stm32f4xx_tim.c **** {
1093:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1094:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1095:FWLIB/src/stm32f4xx_tim.c **** 
1096:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare3 Register value */
1097:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
1098:FWLIB/src/stm32f4xx_tim.c **** }
1099:FWLIB/src/stm32f4xx_tim.c **** 
1100:FWLIB/src/stm32f4xx_tim.c **** /**
1101:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1102:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1103:FWLIB/src/stm32f4xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1104:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1105:FWLIB/src/stm32f4xx_tim.c ****   */
1106:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1107:FWLIB/src/stm32f4xx_tim.c **** {
1108:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1109:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1110:FWLIB/src/stm32f4xx_tim.c **** 
1111:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Capture Compare4 Register value */
1112:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
1113:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 21


1114:FWLIB/src/stm32f4xx_tim.c **** 
1115:FWLIB/src/stm32f4xx_tim.c **** /**
1116:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1117:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1118:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1119:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1120:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1121:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1122:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1123:FWLIB/src/stm32f4xx_tim.c ****   */
1124:FWLIB/src/stm32f4xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1125:FWLIB/src/stm32f4xx_tim.c **** {
1126:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1127:FWLIB/src/stm32f4xx_tim.c **** 
1128:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1129:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1130:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1131:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1132:FWLIB/src/stm32f4xx_tim.c **** 
1133:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1134:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
1135:FWLIB/src/stm32f4xx_tim.c **** 
1136:FWLIB/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1137:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
1138:FWLIB/src/stm32f4xx_tim.c **** 
1139:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1140:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1141:FWLIB/src/stm32f4xx_tim.c **** }
1142:FWLIB/src/stm32f4xx_tim.c **** 
1143:FWLIB/src/stm32f4xx_tim.c **** /**
1144:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1145:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1146:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1147:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1148:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1149:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1150:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1151:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1152:FWLIB/src/stm32f4xx_tim.c ****   */
1153:FWLIB/src/stm32f4xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1154:FWLIB/src/stm32f4xx_tim.c **** {
1155:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1156:FWLIB/src/stm32f4xx_tim.c **** 
1157:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1158:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1159:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1160:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1161:FWLIB/src/stm32f4xx_tim.c **** 
1162:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1163:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
1164:FWLIB/src/stm32f4xx_tim.c **** 
1165:FWLIB/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1166:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
1167:FWLIB/src/stm32f4xx_tim.c **** 
1168:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1169:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1170:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 22


1171:FWLIB/src/stm32f4xx_tim.c **** 
1172:FWLIB/src/stm32f4xx_tim.c **** /**
1173:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1174:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1175:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1176:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1177:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1178:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1179:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1180:FWLIB/src/stm32f4xx_tim.c ****   */
1181:FWLIB/src/stm32f4xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1182:FWLIB/src/stm32f4xx_tim.c **** {
1183:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1184:FWLIB/src/stm32f4xx_tim.c **** 
1185:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1186:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1187:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1188:FWLIB/src/stm32f4xx_tim.c **** 
1189:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1190:FWLIB/src/stm32f4xx_tim.c **** 
1191:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1192:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
1193:FWLIB/src/stm32f4xx_tim.c **** 
1194:FWLIB/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1195:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
1196:FWLIB/src/stm32f4xx_tim.c **** 
1197:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1198:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1199:FWLIB/src/stm32f4xx_tim.c **** }
1200:FWLIB/src/stm32f4xx_tim.c **** 
1201:FWLIB/src/stm32f4xx_tim.c **** /**
1202:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1203:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1204:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1205:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1206:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1207:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1208:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1209:FWLIB/src/stm32f4xx_tim.c ****   */
1210:FWLIB/src/stm32f4xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1211:FWLIB/src/stm32f4xx_tim.c **** {
1212:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1213:FWLIB/src/stm32f4xx_tim.c **** 
1214:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1215:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1216:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1217:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1218:FWLIB/src/stm32f4xx_tim.c **** 
1219:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1220:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
1221:FWLIB/src/stm32f4xx_tim.c **** 
1222:FWLIB/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1223:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
1224:FWLIB/src/stm32f4xx_tim.c **** 
1225:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1226:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1227:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 23


1228:FWLIB/src/stm32f4xx_tim.c **** 
1229:FWLIB/src/stm32f4xx_tim.c **** /**
1230:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1231:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1232:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1233:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1234:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1235:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1236:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1237:FWLIB/src/stm32f4xx_tim.c ****   */
1238:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1239:FWLIB/src/stm32f4xx_tim.c **** {
1240:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1241:FWLIB/src/stm32f4xx_tim.c **** 
1242:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1243:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1244:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1245:FWLIB/src/stm32f4xx_tim.c **** 
1246:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1247:FWLIB/src/stm32f4xx_tim.c **** 
1248:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC1PE Bit */
1249:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
1250:FWLIB/src/stm32f4xx_tim.c **** 
1251:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1252:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
1253:FWLIB/src/stm32f4xx_tim.c **** 
1254:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1255:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1256:FWLIB/src/stm32f4xx_tim.c **** }
1257:FWLIB/src/stm32f4xx_tim.c **** 
1258:FWLIB/src/stm32f4xx_tim.c **** /**
1259:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1260:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1261:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1262:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1263:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1264:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1265:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1266:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1267:FWLIB/src/stm32f4xx_tim.c ****   */
1268:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1269:FWLIB/src/stm32f4xx_tim.c **** {
1270:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1271:FWLIB/src/stm32f4xx_tim.c **** 
1272:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1273:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1274:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1275:FWLIB/src/stm32f4xx_tim.c **** 
1276:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1277:FWLIB/src/stm32f4xx_tim.c **** 
1278:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC2PE Bit */
1279:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
1280:FWLIB/src/stm32f4xx_tim.c **** 
1281:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1282:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
1283:FWLIB/src/stm32f4xx_tim.c **** 
1284:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 24


1285:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1286:FWLIB/src/stm32f4xx_tim.c **** }
1287:FWLIB/src/stm32f4xx_tim.c **** 
1288:FWLIB/src/stm32f4xx_tim.c **** /**
1289:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1290:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1291:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1292:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1293:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1294:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1295:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1296:FWLIB/src/stm32f4xx_tim.c ****   */
1297:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1298:FWLIB/src/stm32f4xx_tim.c **** {
1299:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1300:FWLIB/src/stm32f4xx_tim.c **** 
1301:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1302:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1303:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1304:FWLIB/src/stm32f4xx_tim.c **** 
1305:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1306:FWLIB/src/stm32f4xx_tim.c **** 
1307:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC3PE Bit */
1308:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
1309:FWLIB/src/stm32f4xx_tim.c **** 
1310:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1311:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
1312:FWLIB/src/stm32f4xx_tim.c **** 
1313:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1314:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1315:FWLIB/src/stm32f4xx_tim.c **** }
1316:FWLIB/src/stm32f4xx_tim.c **** 
1317:FWLIB/src/stm32f4xx_tim.c **** /**
1318:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1319:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1320:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1321:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1322:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1323:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1324:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1325:FWLIB/src/stm32f4xx_tim.c ****   */
1326:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1327:FWLIB/src/stm32f4xx_tim.c **** {
1328:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1329:FWLIB/src/stm32f4xx_tim.c **** 
1330:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1331:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1332:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1333:FWLIB/src/stm32f4xx_tim.c **** 
1334:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1335:FWLIB/src/stm32f4xx_tim.c **** 
1336:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC4PE Bit */
1337:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
1338:FWLIB/src/stm32f4xx_tim.c **** 
1339:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1340:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
1341:FWLIB/src/stm32f4xx_tim.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 25


1342:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1343:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1344:FWLIB/src/stm32f4xx_tim.c **** }
1345:FWLIB/src/stm32f4xx_tim.c **** 
1346:FWLIB/src/stm32f4xx_tim.c **** /**
1347:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1348:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1349:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1350:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1351:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1352:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1353:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1354:FWLIB/src/stm32f4xx_tim.c ****   */
1355:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1356:FWLIB/src/stm32f4xx_tim.c **** {
1357:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1358:FWLIB/src/stm32f4xx_tim.c **** 
1359:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1360:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1361:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1362:FWLIB/src/stm32f4xx_tim.c **** 
1363:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1364:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1365:FWLIB/src/stm32f4xx_tim.c **** 
1366:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC1FE Bit */
1367:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
1368:FWLIB/src/stm32f4xx_tim.c **** 
1369:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1370:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
1371:FWLIB/src/stm32f4xx_tim.c **** 
1372:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1373:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1374:FWLIB/src/stm32f4xx_tim.c **** }
1375:FWLIB/src/stm32f4xx_tim.c **** 
1376:FWLIB/src/stm32f4xx_tim.c **** /**
1377:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1378:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1379:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1380:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1381:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1382:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1383:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1384:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1385:FWLIB/src/stm32f4xx_tim.c ****   */
1386:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1387:FWLIB/src/stm32f4xx_tim.c **** {
1388:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1389:FWLIB/src/stm32f4xx_tim.c **** 
1390:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1391:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1392:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1393:FWLIB/src/stm32f4xx_tim.c **** 
1394:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1395:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1396:FWLIB/src/stm32f4xx_tim.c **** 
1397:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC2FE Bit */
1398:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 26


1399:FWLIB/src/stm32f4xx_tim.c **** 
1400:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1401:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
1402:FWLIB/src/stm32f4xx_tim.c **** 
1403:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1404:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1405:FWLIB/src/stm32f4xx_tim.c **** }
1406:FWLIB/src/stm32f4xx_tim.c **** 
1407:FWLIB/src/stm32f4xx_tim.c **** /**
1408:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1409:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1410:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1411:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1412:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1413:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1414:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1415:FWLIB/src/stm32f4xx_tim.c ****   */
1416:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1417:FWLIB/src/stm32f4xx_tim.c **** {
1418:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1419:FWLIB/src/stm32f4xx_tim.c ****   
1420:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1421:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1422:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1423:FWLIB/src/stm32f4xx_tim.c **** 
1424:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1425:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1426:FWLIB/src/stm32f4xx_tim.c **** 
1427:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC3FE Bit */
1428:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
1429:FWLIB/src/stm32f4xx_tim.c **** 
1430:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1431:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
1432:FWLIB/src/stm32f4xx_tim.c **** 
1433:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1434:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1435:FWLIB/src/stm32f4xx_tim.c **** }
1436:FWLIB/src/stm32f4xx_tim.c **** 
1437:FWLIB/src/stm32f4xx_tim.c **** /**
1438:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1439:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1440:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1441:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1442:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1443:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1444:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1445:FWLIB/src/stm32f4xx_tim.c ****   */
1446:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1447:FWLIB/src/stm32f4xx_tim.c **** {
1448:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1449:FWLIB/src/stm32f4xx_tim.c **** 
1450:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1451:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1452:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1453:FWLIB/src/stm32f4xx_tim.c **** 
1454:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1455:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 27


1456:FWLIB/src/stm32f4xx_tim.c **** 
1457:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC4FE Bit */
1458:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
1459:FWLIB/src/stm32f4xx_tim.c **** 
1460:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1461:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
1462:FWLIB/src/stm32f4xx_tim.c **** 
1463:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1464:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1465:FWLIB/src/stm32f4xx_tim.c **** }
1466:FWLIB/src/stm32f4xx_tim.c **** 
1467:FWLIB/src/stm32f4xx_tim.c **** /**
1468:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1469:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1470:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1471:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1472:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1473:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1474:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1475:FWLIB/src/stm32f4xx_tim.c ****   */
1476:FWLIB/src/stm32f4xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1477:FWLIB/src/stm32f4xx_tim.c **** {
1478:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1479:FWLIB/src/stm32f4xx_tim.c **** 
1480:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1481:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1482:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1483:FWLIB/src/stm32f4xx_tim.c **** 
1484:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1485:FWLIB/src/stm32f4xx_tim.c **** 
1486:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC1CE Bit */
1487:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
1488:FWLIB/src/stm32f4xx_tim.c **** 
1489:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1490:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
1491:FWLIB/src/stm32f4xx_tim.c **** 
1492:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1493:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1494:FWLIB/src/stm32f4xx_tim.c **** }
1495:FWLIB/src/stm32f4xx_tim.c **** 
1496:FWLIB/src/stm32f4xx_tim.c **** /**
1497:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1498:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1499:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1500:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1501:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1502:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1503:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1504:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1505:FWLIB/src/stm32f4xx_tim.c ****   */
1506:FWLIB/src/stm32f4xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1507:FWLIB/src/stm32f4xx_tim.c **** {
1508:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1509:FWLIB/src/stm32f4xx_tim.c **** 
1510:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1511:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1512:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 28


1513:FWLIB/src/stm32f4xx_tim.c **** 
1514:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1515:FWLIB/src/stm32f4xx_tim.c **** 
1516:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC2CE Bit */
1517:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
1518:FWLIB/src/stm32f4xx_tim.c **** 
1519:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1520:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
1521:FWLIB/src/stm32f4xx_tim.c **** 
1522:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1523:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1524:FWLIB/src/stm32f4xx_tim.c **** }
1525:FWLIB/src/stm32f4xx_tim.c **** 
1526:FWLIB/src/stm32f4xx_tim.c **** /**
1527:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1528:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1529:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1530:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1531:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1532:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1533:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1534:FWLIB/src/stm32f4xx_tim.c ****   */
1535:FWLIB/src/stm32f4xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1536:FWLIB/src/stm32f4xx_tim.c **** {
1537:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1538:FWLIB/src/stm32f4xx_tim.c **** 
1539:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1540:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1541:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1542:FWLIB/src/stm32f4xx_tim.c **** 
1543:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1544:FWLIB/src/stm32f4xx_tim.c **** 
1545:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC3CE Bit */
1546:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
1547:FWLIB/src/stm32f4xx_tim.c **** 
1548:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1549:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
1550:FWLIB/src/stm32f4xx_tim.c **** 
1551:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1552:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1553:FWLIB/src/stm32f4xx_tim.c **** }
1554:FWLIB/src/stm32f4xx_tim.c **** 
1555:FWLIB/src/stm32f4xx_tim.c **** /**
1556:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1557:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1558:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1559:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1560:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1561:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1562:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1563:FWLIB/src/stm32f4xx_tim.c ****   */
1564:FWLIB/src/stm32f4xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1565:FWLIB/src/stm32f4xx_tim.c **** {
1566:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1567:FWLIB/src/stm32f4xx_tim.c **** 
1568:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1569:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 29


1570:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1571:FWLIB/src/stm32f4xx_tim.c **** 
1572:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1573:FWLIB/src/stm32f4xx_tim.c **** 
1574:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the OC4CE Bit */
1575:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
1576:FWLIB/src/stm32f4xx_tim.c **** 
1577:FWLIB/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1578:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
1579:FWLIB/src/stm32f4xx_tim.c **** 
1580:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1581:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1582:FWLIB/src/stm32f4xx_tim.c **** }
1583:FWLIB/src/stm32f4xx_tim.c **** 
1584:FWLIB/src/stm32f4xx_tim.c **** /**
1585:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1586:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1587:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1588:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1589:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1590:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1591:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1592:FWLIB/src/stm32f4xx_tim.c ****   */
1593:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1594:FWLIB/src/stm32f4xx_tim.c **** {
1595:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1596:FWLIB/src/stm32f4xx_tim.c **** 
1597:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1598:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1599:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1600:FWLIB/src/stm32f4xx_tim.c **** 
1601:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1602:FWLIB/src/stm32f4xx_tim.c **** 
1603:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1P Bit */
1604:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
1605:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
1606:FWLIB/src/stm32f4xx_tim.c **** 
1607:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1608:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1609:FWLIB/src/stm32f4xx_tim.c **** }
1610:FWLIB/src/stm32f4xx_tim.c **** 
1611:FWLIB/src/stm32f4xx_tim.c **** /**
1612:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1613:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1614:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1615:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1616:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1617:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1618:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1619:FWLIB/src/stm32f4xx_tim.c ****   */
1620:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1621:FWLIB/src/stm32f4xx_tim.c **** {
1622:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1623:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1624:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1625:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1626:FWLIB/src/stm32f4xx_tim.c ****    
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 30


1627:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1628:FWLIB/src/stm32f4xx_tim.c **** 
1629:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1630:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
1631:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
1632:FWLIB/src/stm32f4xx_tim.c **** 
1633:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1634:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1635:FWLIB/src/stm32f4xx_tim.c **** }
1636:FWLIB/src/stm32f4xx_tim.c **** 
1637:FWLIB/src/stm32f4xx_tim.c **** /**
1638:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1639:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1640:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1641:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1642:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1643:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1644:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1645:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1646:FWLIB/src/stm32f4xx_tim.c ****   */
1647:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1648:FWLIB/src/stm32f4xx_tim.c **** {
1649:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1650:FWLIB/src/stm32f4xx_tim.c **** 
1651:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1652:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1653:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1654:FWLIB/src/stm32f4xx_tim.c **** 
1655:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1656:FWLIB/src/stm32f4xx_tim.c **** 
1657:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2P Bit */
1658:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
1659:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
1660:FWLIB/src/stm32f4xx_tim.c **** 
1661:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1662:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1663:FWLIB/src/stm32f4xx_tim.c **** }
1664:FWLIB/src/stm32f4xx_tim.c **** 
1665:FWLIB/src/stm32f4xx_tim.c **** /**
1666:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1667:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1668:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1669:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1670:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1671:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1672:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1673:FWLIB/src/stm32f4xx_tim.c ****   */
1674:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1675:FWLIB/src/stm32f4xx_tim.c **** {
1676:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1677:FWLIB/src/stm32f4xx_tim.c **** 
1678:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1679:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1680:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1681:FWLIB/src/stm32f4xx_tim.c ****   
1682:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1683:FWLIB/src/stm32f4xx_tim.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 31


1684:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1685:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
1686:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
1687:FWLIB/src/stm32f4xx_tim.c **** 
1688:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1689:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1690:FWLIB/src/stm32f4xx_tim.c **** }
1691:FWLIB/src/stm32f4xx_tim.c **** 
1692:FWLIB/src/stm32f4xx_tim.c **** /**
1693:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1694:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1695:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1696:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1697:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1698:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1699:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1700:FWLIB/src/stm32f4xx_tim.c ****   */
1701:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1702:FWLIB/src/stm32f4xx_tim.c **** {
1703:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1704:FWLIB/src/stm32f4xx_tim.c **** 
1705:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1706:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1707:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1708:FWLIB/src/stm32f4xx_tim.c **** 
1709:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1710:FWLIB/src/stm32f4xx_tim.c **** 
1711:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3P Bit */
1712:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
1713:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
1714:FWLIB/src/stm32f4xx_tim.c **** 
1715:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1716:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1717:FWLIB/src/stm32f4xx_tim.c **** }
1718:FWLIB/src/stm32f4xx_tim.c **** 
1719:FWLIB/src/stm32f4xx_tim.c **** /**
1720:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1721:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1722:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1723:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1724:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1725:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1726:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1727:FWLIB/src/stm32f4xx_tim.c ****   */
1728:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1729:FWLIB/src/stm32f4xx_tim.c **** {
1730:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1731:FWLIB/src/stm32f4xx_tim.c ****  
1732:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1733:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1734:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1735:FWLIB/src/stm32f4xx_tim.c ****     
1736:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1737:FWLIB/src/stm32f4xx_tim.c **** 
1738:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1739:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
1740:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 32


1741:FWLIB/src/stm32f4xx_tim.c **** 
1742:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1743:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1744:FWLIB/src/stm32f4xx_tim.c **** }
1745:FWLIB/src/stm32f4xx_tim.c **** 
1746:FWLIB/src/stm32f4xx_tim.c **** /**
1747:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1748:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1749:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1750:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1751:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1752:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1753:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1754:FWLIB/src/stm32f4xx_tim.c ****   */
1755:FWLIB/src/stm32f4xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1756:FWLIB/src/stm32f4xx_tim.c **** {
1757:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1758:FWLIB/src/stm32f4xx_tim.c **** 
1759:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1760:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1761:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1762:FWLIB/src/stm32f4xx_tim.c **** 
1763:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1764:FWLIB/src/stm32f4xx_tim.c **** 
1765:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the CC4P Bit */
1766:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
1767:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
1768:FWLIB/src/stm32f4xx_tim.c **** 
1769:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1770:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1771:FWLIB/src/stm32f4xx_tim.c **** }
1772:FWLIB/src/stm32f4xx_tim.c **** 
1773:FWLIB/src/stm32f4xx_tim.c **** /**
1774:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1775:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1776:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1777:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1778:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1779:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1780:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1781:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1782:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1783:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1784:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1785:FWLIB/src/stm32f4xx_tim.c ****   */
1786:FWLIB/src/stm32f4xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1787:FWLIB/src/stm32f4xx_tim.c **** {
1788:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
1789:FWLIB/src/stm32f4xx_tim.c **** 
1790:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1791:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1792:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1793:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1794:FWLIB/src/stm32f4xx_tim.c **** 
1795:FWLIB/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
1796:FWLIB/src/stm32f4xx_tim.c **** 
1797:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the CCxE Bit */
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 33


1798:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
1799:FWLIB/src/stm32f4xx_tim.c **** 
1800:FWLIB/src/stm32f4xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1801:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
1802:FWLIB/src/stm32f4xx_tim.c **** }
1803:FWLIB/src/stm32f4xx_tim.c **** 
1804:FWLIB/src/stm32f4xx_tim.c **** /**
1805:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1806:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1807:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1808:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1809:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1810:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1811:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1812:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1813:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1814:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1815:FWLIB/src/stm32f4xx_tim.c ****   */
1816:FWLIB/src/stm32f4xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1817:FWLIB/src/stm32f4xx_tim.c **** {
1818:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
1819:FWLIB/src/stm32f4xx_tim.c **** 
1820:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1821:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1822:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1823:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1824:FWLIB/src/stm32f4xx_tim.c **** 
1825:FWLIB/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
1826:FWLIB/src/stm32f4xx_tim.c **** 
1827:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the CCxNE Bit */
1828:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
1829:FWLIB/src/stm32f4xx_tim.c **** 
1830:FWLIB/src/stm32f4xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1831:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
1832:FWLIB/src/stm32f4xx_tim.c **** }
1833:FWLIB/src/stm32f4xx_tim.c **** /**
1834:FWLIB/src/stm32f4xx_tim.c ****   * @}
1835:FWLIB/src/stm32f4xx_tim.c ****   */
1836:FWLIB/src/stm32f4xx_tim.c **** 
1837:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1838:FWLIB/src/stm32f4xx_tim.c ****  *  @brief    Input Capture management functions 
1839:FWLIB/src/stm32f4xx_tim.c ****  *
1840:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
1841:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
1842:FWLIB/src/stm32f4xx_tim.c ****                   ##### Input Capture management functions #####
1843:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
1844:FWLIB/src/stm32f4xx_tim.c ****          
1845:FWLIB/src/stm32f4xx_tim.c ****             ##### TIM Driver: how to use it in Input Capture Mode #####
1846:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
1847:FWLIB/src/stm32f4xx_tim.c ****     [..]    
1848:FWLIB/src/stm32f4xx_tim.c ****     To use the Timer in Input Capture mode, the following steps are mandatory:
1849:FWLIB/src/stm32f4xx_tim.c ****        
1850:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) 
1851:FWLIB/src/stm32f4xx_tim.c ****           function
1852:FWLIB/src/stm32f4xx_tim.c ****        
1853:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the TIM pins by configuring the corresponding GPIO pins
1854:FWLIB/src/stm32f4xx_tim.c ****        
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 34


1855:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the Time base unit as described in the first part of this driver,
1856:FWLIB/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1857:FWLIB/src/stm32f4xx_tim.c ****         (++) Autoreload value = 0xFFFF
1858:FWLIB/src/stm32f4xx_tim.c ****         (++) Prescaler value = 0x0000
1859:FWLIB/src/stm32f4xx_tim.c ****         (++) Counter mode = Up counting
1860:FWLIB/src/stm32f4xx_tim.c ****         (++) Clock Division = TIM_CKD_DIV1
1861:FWLIB/src/stm32f4xx_tim.c ****           
1862:FWLIB/src/stm32f4xx_tim.c ****       (#) Fill the TIM_ICInitStruct with the desired parameters including:
1863:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Channel: TIM_Channel
1864:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Input Capture polarity: TIM_ICPolarity
1865:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Input Capture selection: TIM_ICSelection
1866:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Input Capture Prescaler: TIM_ICPrescaler
1867:FWLIB/src/stm32f4xx_tim.c ****         (++) TIM Input Capture filter value: TIM_ICFilter
1868:FWLIB/src/stm32f4xx_tim.c ****        
1869:FWLIB/src/stm32f4xx_tim.c ****       (#) Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel 
1870:FWLIB/src/stm32f4xx_tim.c ****           with the corresponding configuration and to measure only frequency 
1871:FWLIB/src/stm32f4xx_tim.c ****           or duty cycle of the input signal, or, Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) 
1872:FWLIB/src/stm32f4xx_tim.c ****           to configure the desired channels with the corresponding configuration 
1873:FWLIB/src/stm32f4xx_tim.c ****           and to measure the frequency and the duty cycle of the input signal
1874:FWLIB/src/stm32f4xx_tim.c ****           
1875:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable the NVIC or the DMA to read the measured frequency. 
1876:FWLIB/src/stm32f4xx_tim.c ****           
1877:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable the corresponding interrupt (or DMA request) to read the Captured 
1878:FWLIB/src/stm32f4xx_tim.c ****           value, using the function TIM_ITConfig(TIMx, TIM_IT_CCx) 
1879:FWLIB/src/stm32f4xx_tim.c ****           (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1880:FWLIB/src/stm32f4xx_tim.c ****        
1881:FWLIB/src/stm32f4xx_tim.c ****       (#) Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1882:FWLIB/src/stm32f4xx_tim.c ****        
1883:FWLIB/src/stm32f4xx_tim.c ****       (#) Use TIM_GetCapturex(TIMx); to read the captured value.
1884:FWLIB/src/stm32f4xx_tim.c ****        
1885:FWLIB/src/stm32f4xx_tim.c ****       -@- All other functions can be used separately to modify, if needed,
1886:FWLIB/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
1887:FWLIB/src/stm32f4xx_tim.c **** 
1888:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
1889:FWLIB/src/stm32f4xx_tim.c ****   * @{
1890:FWLIB/src/stm32f4xx_tim.c ****   */
1891:FWLIB/src/stm32f4xx_tim.c **** 
1892:FWLIB/src/stm32f4xx_tim.c **** /**
1893:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1894:FWLIB/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct.
1895:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1896:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1897:FWLIB/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1898:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1899:FWLIB/src/stm32f4xx_tim.c ****   */
1900:FWLIB/src/stm32f4xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1901:FWLIB/src/stm32f4xx_tim.c **** {
1902:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1903:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1904:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1905:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1906:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1907:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1908:FWLIB/src/stm32f4xx_tim.c ****   
1909:FWLIB/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
1910:FWLIB/src/stm32f4xx_tim.c ****   {
1911:FWLIB/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 35


1912:FWLIB/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
1913:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1914:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1915:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1916:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1917:FWLIB/src/stm32f4xx_tim.c ****   }
1918:FWLIB/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
1919:FWLIB/src/stm32f4xx_tim.c ****   {
1920:FWLIB/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1921:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1922:FWLIB/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
1923:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1924:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1925:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1926:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1927:FWLIB/src/stm32f4xx_tim.c ****   }
1928:FWLIB/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
1929:FWLIB/src/stm32f4xx_tim.c ****   {
1930:FWLIB/src/stm32f4xx_tim.c ****     /* TI3 Configuration */
1931:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1932:FWLIB/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
1933:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1934:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1935:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1936:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1937:FWLIB/src/stm32f4xx_tim.c ****   }
1938:FWLIB/src/stm32f4xx_tim.c ****   else
1939:FWLIB/src/stm32f4xx_tim.c ****   {
1940:FWLIB/src/stm32f4xx_tim.c ****     /* TI4 Configuration */
1941:FWLIB/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1942:FWLIB/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
1943:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1944:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1945:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1946:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1947:FWLIB/src/stm32f4xx_tim.c ****   }
1948:FWLIB/src/stm32f4xx_tim.c **** }
1949:FWLIB/src/stm32f4xx_tim.c **** 
1950:FWLIB/src/stm32f4xx_tim.c **** /**
1951:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1952:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1953:FWLIB/src/stm32f4xx_tim.c ****   *         be initialized.
1954:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1955:FWLIB/src/stm32f4xx_tim.c ****   */
1956:FWLIB/src/stm32f4xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1957:FWLIB/src/stm32f4xx_tim.c **** {
1958:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
1959:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
1960:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
1961:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
1962:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
1963:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
1964:FWLIB/src/stm32f4xx_tim.c **** }
1965:FWLIB/src/stm32f4xx_tim.c **** 
1966:FWLIB/src/stm32f4xx_tim.c **** /**
1967:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1968:FWLIB/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 36


1969:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1970:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
1971:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1972:FWLIB/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1973:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
1974:FWLIB/src/stm32f4xx_tim.c ****   */
1975:FWLIB/src/stm32f4xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1976:FWLIB/src/stm32f4xx_tim.c **** {
1977:FWLIB/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
1978:FWLIB/src/stm32f4xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
1979:FWLIB/src/stm32f4xx_tim.c **** 
1980:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
1981:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1982:FWLIB/src/stm32f4xx_tim.c **** 
1983:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Opposite Input Polarity */
1984:FWLIB/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
1985:FWLIB/src/stm32f4xx_tim.c ****   {
1986:FWLIB/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
1987:FWLIB/src/stm32f4xx_tim.c ****   }
1988:FWLIB/src/stm32f4xx_tim.c ****   else
1989:FWLIB/src/stm32f4xx_tim.c ****   {
1990:FWLIB/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
1991:FWLIB/src/stm32f4xx_tim.c ****   }
1992:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Opposite Input */
1993:FWLIB/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
1994:FWLIB/src/stm32f4xx_tim.c ****   {
1995:FWLIB/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
1996:FWLIB/src/stm32f4xx_tim.c ****   }
1997:FWLIB/src/stm32f4xx_tim.c ****   else
1998:FWLIB/src/stm32f4xx_tim.c ****   {
1999:FWLIB/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
2000:FWLIB/src/stm32f4xx_tim.c ****   }
2001:FWLIB/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
2002:FWLIB/src/stm32f4xx_tim.c ****   {
2003:FWLIB/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2004:FWLIB/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
2005:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
2006:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2007:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2008:FWLIB/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2009:FWLIB/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
2010:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2011:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2012:FWLIB/src/stm32f4xx_tim.c ****   }
2013:FWLIB/src/stm32f4xx_tim.c ****   else
2014:FWLIB/src/stm32f4xx_tim.c ****   { 
2015:FWLIB/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2016:FWLIB/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
2017:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
2018:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2019:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2020:FWLIB/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2021:FWLIB/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
2022:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2023:FWLIB/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2024:FWLIB/src/stm32f4xx_tim.c ****   }
2025:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 37


2026:FWLIB/src/stm32f4xx_tim.c **** 
2027:FWLIB/src/stm32f4xx_tim.c **** /**
2028:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2029:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2030:FWLIB/src/stm32f4xx_tim.c ****   * @retval Capture Compare 1 Register value.
2031:FWLIB/src/stm32f4xx_tim.c ****   */
2032:FWLIB/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2033:FWLIB/src/stm32f4xx_tim.c **** {
2034:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2035:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2036:FWLIB/src/stm32f4xx_tim.c **** 
2037:FWLIB/src/stm32f4xx_tim.c ****   /* Get the Capture 1 Register value */
2038:FWLIB/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
2039:FWLIB/src/stm32f4xx_tim.c **** }
2040:FWLIB/src/stm32f4xx_tim.c **** 
2041:FWLIB/src/stm32f4xx_tim.c **** /**
2042:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2043:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2044:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
2045:FWLIB/src/stm32f4xx_tim.c ****   * @retval Capture Compare 2 Register value.
2046:FWLIB/src/stm32f4xx_tim.c ****   */
2047:FWLIB/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2048:FWLIB/src/stm32f4xx_tim.c **** {
2049:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2050:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2051:FWLIB/src/stm32f4xx_tim.c **** 
2052:FWLIB/src/stm32f4xx_tim.c ****   /* Get the Capture 2 Register value */
2053:FWLIB/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
2054:FWLIB/src/stm32f4xx_tim.c **** }
2055:FWLIB/src/stm32f4xx_tim.c **** 
2056:FWLIB/src/stm32f4xx_tim.c **** /**
2057:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2058:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2059:FWLIB/src/stm32f4xx_tim.c ****   * @retval Capture Compare 3 Register value.
2060:FWLIB/src/stm32f4xx_tim.c ****   */
2061:FWLIB/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2062:FWLIB/src/stm32f4xx_tim.c **** {
2063:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2064:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2065:FWLIB/src/stm32f4xx_tim.c **** 
2066:FWLIB/src/stm32f4xx_tim.c ****   /* Get the Capture 3 Register value */
2067:FWLIB/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
2068:FWLIB/src/stm32f4xx_tim.c **** }
2069:FWLIB/src/stm32f4xx_tim.c **** 
2070:FWLIB/src/stm32f4xx_tim.c **** /**
2071:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2072:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2073:FWLIB/src/stm32f4xx_tim.c ****   * @retval Capture Compare 4 Register value.
2074:FWLIB/src/stm32f4xx_tim.c ****   */
2075:FWLIB/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2076:FWLIB/src/stm32f4xx_tim.c **** {
2077:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2078:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2079:FWLIB/src/stm32f4xx_tim.c **** 
2080:FWLIB/src/stm32f4xx_tim.c ****   /* Get the Capture 4 Register value */
2081:FWLIB/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
2082:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 38


2083:FWLIB/src/stm32f4xx_tim.c **** 
2084:FWLIB/src/stm32f4xx_tim.c **** /**
2085:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2086:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2087:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2088:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2089:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2090:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2091:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2092:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2093:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2094:FWLIB/src/stm32f4xx_tim.c ****   */
2095:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2096:FWLIB/src/stm32f4xx_tim.c **** {
2097:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2098:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2099:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2100:FWLIB/src/stm32f4xx_tim.c **** 
2101:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the IC1PSC Bits */
2102:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
2103:FWLIB/src/stm32f4xx_tim.c **** 
2104:FWLIB/src/stm32f4xx_tim.c ****   /* Set the IC1PSC value */
2105:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
2106:FWLIB/src/stm32f4xx_tim.c **** }
2107:FWLIB/src/stm32f4xx_tim.c **** 
2108:FWLIB/src/stm32f4xx_tim.c **** /**
2109:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2110:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2111:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
2112:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2113:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2114:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2115:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2116:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2117:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2118:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2119:FWLIB/src/stm32f4xx_tim.c ****   */
2120:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2121:FWLIB/src/stm32f4xx_tim.c **** {
2122:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2123:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2124:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2125:FWLIB/src/stm32f4xx_tim.c **** 
2126:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the IC2PSC Bits */
2127:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
2128:FWLIB/src/stm32f4xx_tim.c **** 
2129:FWLIB/src/stm32f4xx_tim.c ****   /* Set the IC2PSC value */
2130:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
2131:FWLIB/src/stm32f4xx_tim.c **** }
2132:FWLIB/src/stm32f4xx_tim.c **** 
2133:FWLIB/src/stm32f4xx_tim.c **** /**
2134:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2135:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2136:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2137:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2138:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2139:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 39


2140:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2141:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2142:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2143:FWLIB/src/stm32f4xx_tim.c ****   */
2144:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2145:FWLIB/src/stm32f4xx_tim.c **** {
2146:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2147:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2148:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2149:FWLIB/src/stm32f4xx_tim.c **** 
2150:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the IC3PSC Bits */
2151:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
2152:FWLIB/src/stm32f4xx_tim.c **** 
2153:FWLIB/src/stm32f4xx_tim.c ****   /* Set the IC3PSC value */
2154:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
2155:FWLIB/src/stm32f4xx_tim.c **** }
2156:FWLIB/src/stm32f4xx_tim.c **** 
2157:FWLIB/src/stm32f4xx_tim.c **** /**
2158:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2159:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2160:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2161:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2162:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2163:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2164:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2165:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2166:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2167:FWLIB/src/stm32f4xx_tim.c ****   */
2168:FWLIB/src/stm32f4xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2169:FWLIB/src/stm32f4xx_tim.c **** {  
2170:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2171:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2172:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2173:FWLIB/src/stm32f4xx_tim.c **** 
2174:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the IC4PSC Bits */
2175:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
2176:FWLIB/src/stm32f4xx_tim.c **** 
2177:FWLIB/src/stm32f4xx_tim.c ****   /* Set the IC4PSC value */
2178:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
2179:FWLIB/src/stm32f4xx_tim.c **** }
2180:FWLIB/src/stm32f4xx_tim.c **** /**
2181:FWLIB/src/stm32f4xx_tim.c ****   * @}
2182:FWLIB/src/stm32f4xx_tim.c ****   */
2183:FWLIB/src/stm32f4xx_tim.c **** 
2184:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2185:FWLIB/src/stm32f4xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2186:FWLIB/src/stm32f4xx_tim.c ****  *
2187:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
2188:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
2189:FWLIB/src/stm32f4xx_tim.c ****       ##### Advanced-control timers (TIM1 and TIM8) specific features #####
2190:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
2191:FWLIB/src/stm32f4xx_tim.c ****         
2192:FWLIB/src/stm32f4xx_tim.c ****              ##### TIM Driver: how to use the Break feature #####
2193:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
2194:FWLIB/src/stm32f4xx_tim.c ****     [..] 
2195:FWLIB/src/stm32f4xx_tim.c ****     After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2196:FWLIB/src/stm32f4xx_tim.c ****                          
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 40


2197:FWLIB/src/stm32f4xx_tim.c ****       (#) Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2198:FWLIB/src/stm32f4xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2199:FWLIB/src/stm32f4xx_tim.c ****           AOE(automatic output enable).
2200:FWLIB/src/stm32f4xx_tim.c ****                
2201:FWLIB/src/stm32f4xx_tim.c ****       (#) Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2202:FWLIB/src/stm32f4xx_tim.c ****           
2203:FWLIB/src/stm32f4xx_tim.c ****       (#) Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2204:FWLIB/src/stm32f4xx_tim.c ****           
2205:FWLIB/src/stm32f4xx_tim.c ****       (#) Once the break even occurs, the Timer's output signals are put in reset
2206:FWLIB/src/stm32f4xx_tim.c ****           state or in a known state (according to the configuration made in
2207:FWLIB/src/stm32f4xx_tim.c ****           TIM_BDTRConfig() function).
2208:FWLIB/src/stm32f4xx_tim.c **** 
2209:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
2210:FWLIB/src/stm32f4xx_tim.c ****   * @{
2211:FWLIB/src/stm32f4xx_tim.c ****   */
2212:FWLIB/src/stm32f4xx_tim.c **** 
2213:FWLIB/src/stm32f4xx_tim.c **** /**
2214:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2215:FWLIB/src/stm32f4xx_tim.c ****   *         and the AOE(automatic output enable).
2216:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2217:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2218:FWLIB/src/stm32f4xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2219:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2220:FWLIB/src/stm32f4xx_tim.c ****   */
2221:FWLIB/src/stm32f4xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2222:FWLIB/src/stm32f4xx_tim.c **** {
2223:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2224:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2225:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2226:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2227:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2228:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2229:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2230:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2231:FWLIB/src/stm32f4xx_tim.c **** 
2232:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2233:FWLIB/src/stm32f4xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2234:FWLIB/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
2235:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
2236:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
2237:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
2238:FWLIB/src/stm32f4xx_tim.c **** }
2239:FWLIB/src/stm32f4xx_tim.c **** 
2240:FWLIB/src/stm32f4xx_tim.c **** /**
2241:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2242:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2243:FWLIB/src/stm32f4xx_tim.c ****   *         will be initialized.
2244:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2245:FWLIB/src/stm32f4xx_tim.c ****   */
2246:FWLIB/src/stm32f4xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2247:FWLIB/src/stm32f4xx_tim.c **** {
2248:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
2249:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
2250:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
2251:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
2252:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
2253:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 41


2254:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
2255:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
2256:FWLIB/src/stm32f4xx_tim.c **** }
2257:FWLIB/src/stm32f4xx_tim.c **** 
2258:FWLIB/src/stm32f4xx_tim.c **** /**
2259:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2260:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2261:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2262:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2263:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2264:FWLIB/src/stm32f4xx_tim.c ****   */
2265:FWLIB/src/stm32f4xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2266:FWLIB/src/stm32f4xx_tim.c **** {
2267:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2268:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2269:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2270:FWLIB/src/stm32f4xx_tim.c **** 
2271:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2272:FWLIB/src/stm32f4xx_tim.c ****   {
2273:FWLIB/src/stm32f4xx_tim.c ****     /* Enable the TIM Main Output */
2274:FWLIB/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
2275:FWLIB/src/stm32f4xx_tim.c ****   }
2276:FWLIB/src/stm32f4xx_tim.c ****   else
2277:FWLIB/src/stm32f4xx_tim.c ****   {
2278:FWLIB/src/stm32f4xx_tim.c ****     /* Disable the TIM Main Output */
2279:FWLIB/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
2280:FWLIB/src/stm32f4xx_tim.c ****   }  
2281:FWLIB/src/stm32f4xx_tim.c **** }
2282:FWLIB/src/stm32f4xx_tim.c **** 
2283:FWLIB/src/stm32f4xx_tim.c **** /**
2284:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2285:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2286:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2287:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2288:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2289:FWLIB/src/stm32f4xx_tim.c ****   */
2290:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2291:FWLIB/src/stm32f4xx_tim.c **** {
2292:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2293:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2294:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2295:FWLIB/src/stm32f4xx_tim.c **** 
2296:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2297:FWLIB/src/stm32f4xx_tim.c ****   {
2298:FWLIB/src/stm32f4xx_tim.c ****     /* Set the COM Bit */
2299:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
2300:FWLIB/src/stm32f4xx_tim.c ****   }
2301:FWLIB/src/stm32f4xx_tim.c ****   else
2302:FWLIB/src/stm32f4xx_tim.c ****   {
2303:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the COM Bit */
2304:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
2305:FWLIB/src/stm32f4xx_tim.c ****   }
2306:FWLIB/src/stm32f4xx_tim.c **** }
2307:FWLIB/src/stm32f4xx_tim.c **** 
2308:FWLIB/src/stm32f4xx_tim.c **** /**
2309:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2310:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 42


2311:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2312:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2313:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2314:FWLIB/src/stm32f4xx_tim.c ****   */
2315:FWLIB/src/stm32f4xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2316:FWLIB/src/stm32f4xx_tim.c **** { 
2317:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2318:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2319:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2320:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2321:FWLIB/src/stm32f4xx_tim.c ****   {
2322:FWLIB/src/stm32f4xx_tim.c ****     /* Set the CCPC Bit */
2323:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
2324:FWLIB/src/stm32f4xx_tim.c ****   }
2325:FWLIB/src/stm32f4xx_tim.c ****   else
2326:FWLIB/src/stm32f4xx_tim.c ****   {
2327:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the CCPC Bit */
2328:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
2329:FWLIB/src/stm32f4xx_tim.c ****   }
2330:FWLIB/src/stm32f4xx_tim.c **** }
2331:FWLIB/src/stm32f4xx_tim.c **** /**
2332:FWLIB/src/stm32f4xx_tim.c ****   * @}
2333:FWLIB/src/stm32f4xx_tim.c ****   */
2334:FWLIB/src/stm32f4xx_tim.c **** 
2335:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2336:FWLIB/src/stm32f4xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2337:FWLIB/src/stm32f4xx_tim.c ****  *
2338:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
2339:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
2340:FWLIB/src/stm32f4xx_tim.c ****           ##### Interrupts, DMA and flags management functions #####
2341:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
2342:FWLIB/src/stm32f4xx_tim.c **** 
2343:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
2344:FWLIB/src/stm32f4xx_tim.c ****   * @{
2345:FWLIB/src/stm32f4xx_tim.c ****   */
2346:FWLIB/src/stm32f4xx_tim.c **** 
2347:FWLIB/src/stm32f4xx_tim.c **** /**
2348:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2349:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2350:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2351:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2352:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2353:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2354:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2355:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2356:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2357:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2358:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2359:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2360:FWLIB/src/stm32f4xx_tim.c ****   *  
2361:FWLIB/src/stm32f4xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2362:FWLIB/src/stm32f4xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2363:FWLIB/src/stm32f4xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2364:FWLIB/src/stm32f4xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2365:FWLIB/src/stm32f4xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2366:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2367:FWLIB/src/stm32f4xx_tim.c ****   *        
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 43


2368:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2369:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2370:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2371:FWLIB/src/stm32f4xx_tim.c ****   */
2372:FWLIB/src/stm32f4xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2373:FWLIB/src/stm32f4xx_tim.c **** {  
2374:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2375:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2376:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2377:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2378:FWLIB/src/stm32f4xx_tim.c ****   
2379:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2380:FWLIB/src/stm32f4xx_tim.c ****   {
2381:FWLIB/src/stm32f4xx_tim.c ****     /* Enable the Interrupt sources */
2382:FWLIB/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
2383:FWLIB/src/stm32f4xx_tim.c ****   }
2384:FWLIB/src/stm32f4xx_tim.c ****   else
2385:FWLIB/src/stm32f4xx_tim.c ****   {
2386:FWLIB/src/stm32f4xx_tim.c ****     /* Disable the Interrupt sources */
2387:FWLIB/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
2388:FWLIB/src/stm32f4xx_tim.c ****   }
2389:FWLIB/src/stm32f4xx_tim.c **** }
2390:FWLIB/src/stm32f4xx_tim.c **** 
2391:FWLIB/src/stm32f4xx_tim.c **** /**
2392:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2393:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2394:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2395:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2396:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2397:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2398:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2399:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2400:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2401:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2402:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2403:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2404:FWLIB/src/stm32f4xx_tim.c ****   * 
2405:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2406:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2407:FWLIB/src/stm32f4xx_tim.c ****   *        
2408:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2409:FWLIB/src/stm32f4xx_tim.c ****   */
2410:FWLIB/src/stm32f4xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2411:FWLIB/src/stm32f4xx_tim.c **** { 
2412:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2413:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2414:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2415:FWLIB/src/stm32f4xx_tim.c ****  
2416:FWLIB/src/stm32f4xx_tim.c ****   /* Set the event sources */
2417:FWLIB/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
2418:FWLIB/src/stm32f4xx_tim.c **** }
2419:FWLIB/src/stm32f4xx_tim.c **** 
2420:FWLIB/src/stm32f4xx_tim.c **** /**
2421:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2422:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2423:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2424:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 44


2425:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2426:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2427:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2428:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2429:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2430:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2431:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2432:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2433:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2434:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2435:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2436:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2437:FWLIB/src/stm32f4xx_tim.c ****   *
2438:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2439:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2440:FWLIB/src/stm32f4xx_tim.c ****   *
2441:FWLIB/src/stm32f4xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2442:FWLIB/src/stm32f4xx_tim.c ****   */
2443:FWLIB/src/stm32f4xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2444:FWLIB/src/stm32f4xx_tim.c **** { 
2445:FWLIB/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
2446:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2447:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2448:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2449:FWLIB/src/stm32f4xx_tim.c **** 
2450:FWLIB/src/stm32f4xx_tim.c ****   
2451:FWLIB/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
2452:FWLIB/src/stm32f4xx_tim.c ****   {
2453:FWLIB/src/stm32f4xx_tim.c ****     bitstatus = SET;
2454:FWLIB/src/stm32f4xx_tim.c ****   }
2455:FWLIB/src/stm32f4xx_tim.c ****   else
2456:FWLIB/src/stm32f4xx_tim.c ****   {
2457:FWLIB/src/stm32f4xx_tim.c ****     bitstatus = RESET;
2458:FWLIB/src/stm32f4xx_tim.c ****   }
2459:FWLIB/src/stm32f4xx_tim.c ****   return bitstatus;
2460:FWLIB/src/stm32f4xx_tim.c **** }
2461:FWLIB/src/stm32f4xx_tim.c **** 
2462:FWLIB/src/stm32f4xx_tim.c **** /**
2463:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2464:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2465:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2466:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2467:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2468:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2469:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2470:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2471:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2472:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2473:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2474:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2475:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2476:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2477:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2478:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2479:FWLIB/src/stm32f4xx_tim.c ****   *
2480:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2481:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 45


2482:FWLIB/src/stm32f4xx_tim.c ****   *    
2483:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2484:FWLIB/src/stm32f4xx_tim.c ****   */
2485:FWLIB/src/stm32f4xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2486:FWLIB/src/stm32f4xx_tim.c **** {  
2487:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2488:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2489:FWLIB/src/stm32f4xx_tim.c ****    
2490:FWLIB/src/stm32f4xx_tim.c ****   /* Clear the flags */
2491:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
2492:FWLIB/src/stm32f4xx_tim.c **** }
2493:FWLIB/src/stm32f4xx_tim.c **** 
2494:FWLIB/src/stm32f4xx_tim.c **** /**
2495:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2496:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2497:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2498:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2499:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2500:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2501:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2502:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2503:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2504:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2505:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2506:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2507:FWLIB/src/stm32f4xx_tim.c ****   *
2508:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2509:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2510:FWLIB/src/stm32f4xx_tim.c ****   *     
2511:FWLIB/src/stm32f4xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2512:FWLIB/src/stm32f4xx_tim.c ****   */
2513:FWLIB/src/stm32f4xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2514:FWLIB/src/stm32f4xx_tim.c **** {
2515:FWLIB/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
2516:FWLIB/src/stm32f4xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
2517:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2518:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2519:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2520:FWLIB/src/stm32f4xx_tim.c ****    
2521:FWLIB/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
2522:FWLIB/src/stm32f4xx_tim.c ****   
2523:FWLIB/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
2524:FWLIB/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
2525:FWLIB/src/stm32f4xx_tim.c ****   {
2526:FWLIB/src/stm32f4xx_tim.c ****     bitstatus = SET;
2527:FWLIB/src/stm32f4xx_tim.c ****   }
2528:FWLIB/src/stm32f4xx_tim.c ****   else
2529:FWLIB/src/stm32f4xx_tim.c ****   {
2530:FWLIB/src/stm32f4xx_tim.c ****     bitstatus = RESET;
2531:FWLIB/src/stm32f4xx_tim.c ****   }
2532:FWLIB/src/stm32f4xx_tim.c ****   return bitstatus;
2533:FWLIB/src/stm32f4xx_tim.c **** }
2534:FWLIB/src/stm32f4xx_tim.c **** 
2535:FWLIB/src/stm32f4xx_tim.c **** /**
2536:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2537:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2538:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 46


2539:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2540:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2541:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2542:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2543:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2544:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2545:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2546:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2547:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2548:FWLIB/src/stm32f4xx_tim.c ****   *
2549:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2550:FWLIB/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2551:FWLIB/src/stm32f4xx_tim.c ****   *      
2552:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2553:FWLIB/src/stm32f4xx_tim.c ****   */
2554:FWLIB/src/stm32f4xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2555:FWLIB/src/stm32f4xx_tim.c **** {
2556:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2557:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2558:FWLIB/src/stm32f4xx_tim.c **** 
2559:FWLIB/src/stm32f4xx_tim.c ****   /* Clear the IT pending Bit */
2560:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
2561:FWLIB/src/stm32f4xx_tim.c **** }
2562:FWLIB/src/stm32f4xx_tim.c **** 
2563:FWLIB/src/stm32f4xx_tim.c **** /**
2564:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2565:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2566:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2567:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2568:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2569:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR2
2570:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2571:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DIER
2572:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM1_DMABase_SR
2573:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_EGR
2574:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2575:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2576:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCER
2577:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2578:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2579:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_ARR
2580:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_RCR
2581:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2582:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2583:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2584:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2585:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2586:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DCR
2587:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2588:FWLIB/src/stm32f4xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2589:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2590:FWLIB/src/stm32f4xx_tim.c ****   */
2591:FWLIB/src/stm32f4xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2592:FWLIB/src/stm32f4xx_tim.c **** {
2593:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2594:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2595:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 47


2596:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2597:FWLIB/src/stm32f4xx_tim.c **** 
2598:FWLIB/src/stm32f4xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2599:FWLIB/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
2600:FWLIB/src/stm32f4xx_tim.c **** }
2601:FWLIB/src/stm32f4xx_tim.c **** 
2602:FWLIB/src/stm32f4xx_tim.c **** /**
2603:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2604:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2605:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2606:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2607:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2608:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2609:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2610:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2611:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2612:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2613:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2614:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2615:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2616:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2617:FWLIB/src/stm32f4xx_tim.c ****   */
2618:FWLIB/src/stm32f4xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2619:FWLIB/src/stm32f4xx_tim.c **** { 
2620:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2621:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2622:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2623:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2624:FWLIB/src/stm32f4xx_tim.c ****   
2625:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2626:FWLIB/src/stm32f4xx_tim.c ****   {
2627:FWLIB/src/stm32f4xx_tim.c ****     /* Enable the DMA sources */
2628:FWLIB/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
2629:FWLIB/src/stm32f4xx_tim.c ****   }
2630:FWLIB/src/stm32f4xx_tim.c ****   else
2631:FWLIB/src/stm32f4xx_tim.c ****   {
2632:FWLIB/src/stm32f4xx_tim.c ****     /* Disable the DMA sources */
2633:FWLIB/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
2634:FWLIB/src/stm32f4xx_tim.c ****   }
2635:FWLIB/src/stm32f4xx_tim.c **** }
2636:FWLIB/src/stm32f4xx_tim.c **** 
2637:FWLIB/src/stm32f4xx_tim.c **** /**
2638:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2639:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2640:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2641:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2642:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2643:FWLIB/src/stm32f4xx_tim.c ****   */
2644:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2645:FWLIB/src/stm32f4xx_tim.c **** {
2646:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2647:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2648:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2649:FWLIB/src/stm32f4xx_tim.c **** 
2650:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2651:FWLIB/src/stm32f4xx_tim.c ****   {
2652:FWLIB/src/stm32f4xx_tim.c ****     /* Set the CCDS Bit */
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 48


2653:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
2654:FWLIB/src/stm32f4xx_tim.c ****   }
2655:FWLIB/src/stm32f4xx_tim.c ****   else
2656:FWLIB/src/stm32f4xx_tim.c ****   {
2657:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the CCDS Bit */
2658:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
2659:FWLIB/src/stm32f4xx_tim.c ****   }
2660:FWLIB/src/stm32f4xx_tim.c **** }
2661:FWLIB/src/stm32f4xx_tim.c **** /**
2662:FWLIB/src/stm32f4xx_tim.c ****   * @}
2663:FWLIB/src/stm32f4xx_tim.c ****   */
2664:FWLIB/src/stm32f4xx_tim.c **** 
2665:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2666:FWLIB/src/stm32f4xx_tim.c ****  *  @brief    Clocks management functions
2667:FWLIB/src/stm32f4xx_tim.c ****  *
2668:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
2669:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
2670:FWLIB/src/stm32f4xx_tim.c ****                   ##### Clocks management functions #####
2671:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
2672:FWLIB/src/stm32f4xx_tim.c **** 
2673:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
2674:FWLIB/src/stm32f4xx_tim.c ****   * @{
2675:FWLIB/src/stm32f4xx_tim.c ****   */
2676:FWLIB/src/stm32f4xx_tim.c **** 
2677:FWLIB/src/stm32f4xx_tim.c **** /**
2678:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2679:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2680:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
2681:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2682:FWLIB/src/stm32f4xx_tim.c ****   */
2683:FWLIB/src/stm32f4xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2684:FWLIB/src/stm32f4xx_tim.c **** {
2685:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2686:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2687:FWLIB/src/stm32f4xx_tim.c **** 
2688:FWLIB/src/stm32f4xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2689:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
2690:FWLIB/src/stm32f4xx_tim.c **** }
2691:FWLIB/src/stm32f4xx_tim.c **** 
2692:FWLIB/src/stm32f4xx_tim.c **** /**
2693:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2694:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2695:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
2696:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2697:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2698:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2699:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2700:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2701:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2702:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2703:FWLIB/src/stm32f4xx_tim.c ****   */
2704:FWLIB/src/stm32f4xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2705:FWLIB/src/stm32f4xx_tim.c **** {
2706:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2707:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2708:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2709:FWLIB/src/stm32f4xx_tim.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 49


2710:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Internal Trigger */
2711:FWLIB/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
2712:FWLIB/src/stm32f4xx_tim.c **** 
2713:FWLIB/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2714:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
2715:FWLIB/src/stm32f4xx_tim.c **** }
2716:FWLIB/src/stm32f4xx_tim.c **** 
2717:FWLIB/src/stm32f4xx_tim.c **** /**
2718:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2719:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2720:FWLIB/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2721:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2722:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2723:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2724:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2725:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2726:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2727:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2728:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2729:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2730:FWLIB/src/stm32f4xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2731:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2732:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2733:FWLIB/src/stm32f4xx_tim.c ****   */
2734:FWLIB/src/stm32f4xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2735:FWLIB/src/stm32f4xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2736:FWLIB/src/stm32f4xx_tim.c **** {
2737:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2738:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2739:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2740:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2741:FWLIB/src/stm32f4xx_tim.c **** 
2742:FWLIB/src/stm32f4xx_tim.c ****   /* Configure the Timer Input Clock Source */
2743:FWLIB/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
2744:FWLIB/src/stm32f4xx_tim.c ****   {
2745:FWLIB/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
2746:FWLIB/src/stm32f4xx_tim.c ****   }
2747:FWLIB/src/stm32f4xx_tim.c ****   else
2748:FWLIB/src/stm32f4xx_tim.c ****   {
2749:FWLIB/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
2750:FWLIB/src/stm32f4xx_tim.c ****   }
2751:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Trigger source */
2752:FWLIB/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
2753:FWLIB/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2754:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
2755:FWLIB/src/stm32f4xx_tim.c **** }
2756:FWLIB/src/stm32f4xx_tim.c **** 
2757:FWLIB/src/stm32f4xx_tim.c **** /**
2758:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode1
2759:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2760:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2761:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2762:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2763:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2764:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2765:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2766:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 50


2767:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2768:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2769:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2770:FWLIB/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2771:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2772:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2773:FWLIB/src/stm32f4xx_tim.c ****   */
2774:FWLIB/src/stm32f4xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2775:FWLIB/src/stm32f4xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2776:FWLIB/src/stm32f4xx_tim.c **** {
2777:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
2778:FWLIB/src/stm32f4xx_tim.c **** 
2779:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2780:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2781:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2782:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2783:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2784:FWLIB/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2785:FWLIB/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
2786:FWLIB/src/stm32f4xx_tim.c ****   
2787:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2788:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
2789:FWLIB/src/stm32f4xx_tim.c **** 
2790:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2791:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
2792:FWLIB/src/stm32f4xx_tim.c **** 
2793:FWLIB/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2794:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
2795:FWLIB/src/stm32f4xx_tim.c **** 
2796:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Trigger selection : ETRF */
2797:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
2798:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
2799:FWLIB/src/stm32f4xx_tim.c **** 
2800:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2801:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
2802:FWLIB/src/stm32f4xx_tim.c **** }
2803:FWLIB/src/stm32f4xx_tim.c **** 
2804:FWLIB/src/stm32f4xx_tim.c **** /**
2805:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode2
2806:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2807:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2808:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2809:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2810:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2811:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2812:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2813:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2814:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2815:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2816:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2817:FWLIB/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2818:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2819:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2820:FWLIB/src/stm32f4xx_tim.c ****   */
2821:FWLIB/src/stm32f4xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2822:FWLIB/src/stm32f4xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2823:FWLIB/src/stm32f4xx_tim.c **** {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 51


2824:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2825:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2826:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2827:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2828:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2829:FWLIB/src/stm32f4xx_tim.c **** 
2830:FWLIB/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2831:FWLIB/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
2832:FWLIB/src/stm32f4xx_tim.c **** 
2833:FWLIB/src/stm32f4xx_tim.c ****   /* Enable the External clock mode2 */
2834:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
2835:FWLIB/src/stm32f4xx_tim.c **** }
2836:FWLIB/src/stm32f4xx_tim.c **** /**
2837:FWLIB/src/stm32f4xx_tim.c ****   * @}
2838:FWLIB/src/stm32f4xx_tim.c ****   */
2839:FWLIB/src/stm32f4xx_tim.c **** 
2840:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2841:FWLIB/src/stm32f4xx_tim.c ****  *  @brief    Synchronization management functions 
2842:FWLIB/src/stm32f4xx_tim.c ****  *
2843:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
2844:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
2845:FWLIB/src/stm32f4xx_tim.c ****                 ##### Synchronization management functions #####
2846:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
2847:FWLIB/src/stm32f4xx_tim.c ****                          
2848:FWLIB/src/stm32f4xx_tim.c ****           ##### TIM Driver: how to use it in synchronization Mode #####
2849:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
2850:FWLIB/src/stm32f4xx_tim.c ****     [..] 
2851:FWLIB/src/stm32f4xx_tim.c ****     
2852:FWLIB/src/stm32f4xx_tim.c ****     *** Case of two/several Timers ***
2853:FWLIB/src/stm32f4xx_tim.c ****     ==================================
2854:FWLIB/src/stm32f4xx_tim.c ****     [..]
2855:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the Master Timers using the following functions:
2856:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2857:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2858:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the Slave Timers using the following functions: 
2859:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2860:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2861:FWLIB/src/stm32f4xx_tim.c ****           
2862:FWLIB/src/stm32f4xx_tim.c ****     *** Case of Timers and external trigger(ETR pin) ***
2863:FWLIB/src/stm32f4xx_tim.c ****     ====================================================
2864:FWLIB/src/stm32f4xx_tim.c ****     [..]           
2865:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the External trigger using this function:
2866:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTR
2867:FWLIB/src/stm32f4xx_tim.c ****                                uint16_t ExtTRGFilter);
2868:FWLIB/src/stm32f4xx_tim.c ****       (#) Configure the Slave Timers using the following functions: 
2869:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2870:FWLIB/src/stm32f4xx_tim.c ****         (++) void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2871:FWLIB/src/stm32f4xx_tim.c **** 
2872:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
2873:FWLIB/src/stm32f4xx_tim.c ****   * @{
2874:FWLIB/src/stm32f4xx_tim.c ****   */
2875:FWLIB/src/stm32f4xx_tim.c **** 
2876:FWLIB/src/stm32f4xx_tim.c **** /**
2877:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the Input Trigger source
2878:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2879:FWLIB/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2880:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 52


2881:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2882:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2883:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2884:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2885:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2886:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2887:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2888:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2889:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2890:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2891:FWLIB/src/stm32f4xx_tim.c ****   */
2892:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2893:FWLIB/src/stm32f4xx_tim.c **** {
2894:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
2895:FWLIB/src/stm32f4xx_tim.c **** 
2896:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2897:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2898:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2899:FWLIB/src/stm32f4xx_tim.c **** 
2900:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2901:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
2902:FWLIB/src/stm32f4xx_tim.c **** 
2903:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the TS Bits */
2904:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
2905:FWLIB/src/stm32f4xx_tim.c **** 
2906:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Input Trigger source */
2907:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
2908:FWLIB/src/stm32f4xx_tim.c **** 
2909:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2910:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
2911:FWLIB/src/stm32f4xx_tim.c **** }
2912:FWLIB/src/stm32f4xx_tim.c **** 
2913:FWLIB/src/stm32f4xx_tim.c **** /**
2914:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2915:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2916:FWLIB/src/stm32f4xx_tim.c ****   *     
2917:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2918:FWLIB/src/stm32f4xx_tim.c ****   *   This parameter can be one of the following values:
2919:FWLIB/src/stm32f4xx_tim.c ****   *
2920:FWLIB/src/stm32f4xx_tim.c ****   *  - For all TIMx
2921:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2922:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2923:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2924:FWLIB/src/stm32f4xx_tim.c ****   *
2925:FWLIB/src/stm32f4xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2926:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2927:FWLIB/src/stm32f4xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2928:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2929:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2930:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2931:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2932:FWLIB/src/stm32f4xx_tim.c ****   *
2933:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2934:FWLIB/src/stm32f4xx_tim.c ****   */
2935:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2936:FWLIB/src/stm32f4xx_tim.c **** {
2937:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 53


2938:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2939:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2940:FWLIB/src/stm32f4xx_tim.c **** 
2941:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the MMS Bits */
2942:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
2943:FWLIB/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
2944:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
2945:FWLIB/src/stm32f4xx_tim.c **** }
2946:FWLIB/src/stm32f4xx_tim.c **** 
2947:FWLIB/src/stm32f4xx_tim.c **** /**
2948:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2949:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2950:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2951:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2952:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2953:FWLIB/src/stm32f4xx_tim.c ****   *                                      the counter and triggers an update of the registers
2954:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2955:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2956:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2957:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2958:FWLIB/src/stm32f4xx_tim.c ****   */
2959:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2960:FWLIB/src/stm32f4xx_tim.c **** {
2961:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2962:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2963:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2964:FWLIB/src/stm32f4xx_tim.c **** 
2965:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2966:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
2967:FWLIB/src/stm32f4xx_tim.c **** 
2968:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Slave Mode */
2969:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
2970:FWLIB/src/stm32f4xx_tim.c **** }
2971:FWLIB/src/stm32f4xx_tim.c **** 
2972:FWLIB/src/stm32f4xx_tim.c **** /**
2973:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2974:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2975:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2976:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2977:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2978:FWLIB/src/stm32f4xx_tim.c ****   *                                             and its slaves (through TRGO)
2979:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2980:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
2981:FWLIB/src/stm32f4xx_tim.c ****   */
2982:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2983:FWLIB/src/stm32f4xx_tim.c **** {
2984:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
2985:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2986:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2987:FWLIB/src/stm32f4xx_tim.c **** 
2988:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the MSM Bit */
2989:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
2990:FWLIB/src/stm32f4xx_tim.c ****   
2991:FWLIB/src/stm32f4xx_tim.c ****   /* Set or Reset the MSM Bit */
2992:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
2993:FWLIB/src/stm32f4xx_tim.c **** }
2994:FWLIB/src/stm32f4xx_tim.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 54


2995:FWLIB/src/stm32f4xx_tim.c **** /**
2996:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2997:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2998:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2999:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3000:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
3001:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
3002:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
3003:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
3004:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
3005:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3006:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
3007:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
3008:FWLIB/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
3009:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
3010:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3011:FWLIB/src/stm32f4xx_tim.c ****   */
3012:FWLIB/src/stm32f4xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
3013:FWLIB/src/stm32f4xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
3014:FWLIB/src/stm32f4xx_tim.c **** {
3015:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
3016:FWLIB/src/stm32f4xx_tim.c **** 
3017:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
3018:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3019:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3020:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3021:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3022:FWLIB/src/stm32f4xx_tim.c **** 
3023:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
3024:FWLIB/src/stm32f4xx_tim.c **** 
3025:FWLIB/src/stm32f4xx_tim.c ****   /* Reset the ETR Bits */
3026:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
3027:FWLIB/src/stm32f4xx_tim.c **** 
3028:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3029:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
3030:FWLIB/src/stm32f4xx_tim.c **** 
3031:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3032:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
3033:FWLIB/src/stm32f4xx_tim.c **** }
3034:FWLIB/src/stm32f4xx_tim.c **** /**
3035:FWLIB/src/stm32f4xx_tim.c ****   * @}
3036:FWLIB/src/stm32f4xx_tim.c ****   */
3037:FWLIB/src/stm32f4xx_tim.c **** 
3038:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3039:FWLIB/src/stm32f4xx_tim.c ****  *  @brief    Specific interface management functions 
3040:FWLIB/src/stm32f4xx_tim.c ****  *
3041:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
3042:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
3043:FWLIB/src/stm32f4xx_tim.c ****             ##### Specific interface management functions #####
3044:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
3045:FWLIB/src/stm32f4xx_tim.c **** 
3046:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
3047:FWLIB/src/stm32f4xx_tim.c ****   * @{
3048:FWLIB/src/stm32f4xx_tim.c ****   */
3049:FWLIB/src/stm32f4xx_tim.c **** 
3050:FWLIB/src/stm32f4xx_tim.c **** /**
3051:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 55


3052:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3053:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
3054:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3055:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3056:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3057:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3058:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3059:FWLIB/src/stm32f4xx_tim.c ****   *                                       on the level of the other input.
3060:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3061:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3062:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3063:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3064:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3065:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3066:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3067:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3068:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3069:FWLIB/src/stm32f4xx_tim.c ****   */
3070:FWLIB/src/stm32f4xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3071:FWLIB/src/stm32f4xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3072:FWLIB/src/stm32f4xx_tim.c **** {
3073:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
3074:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
3075:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
3076:FWLIB/src/stm32f4xx_tim.c ****     
3077:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
3078:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3079:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3080:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3081:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3082:FWLIB/src/stm32f4xx_tim.c **** 
3083:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
3084:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
3085:FWLIB/src/stm32f4xx_tim.c **** 
3086:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3087:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
3088:FWLIB/src/stm32f4xx_tim.c **** 
3089:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
3090:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
3091:FWLIB/src/stm32f4xx_tim.c **** 
3092:FWLIB/src/stm32f4xx_tim.c ****   /* Set the encoder Mode */
3093:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
3094:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
3095:FWLIB/src/stm32f4xx_tim.c **** 
3096:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3097:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
3098:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
3099:FWLIB/src/stm32f4xx_tim.c **** 
3100:FWLIB/src/stm32f4xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3101:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
3102:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
3103:FWLIB/src/stm32f4xx_tim.c **** 
3104:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3105:FWLIB/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
3106:FWLIB/src/stm32f4xx_tim.c **** 
3107:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
3108:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 56


3109:FWLIB/src/stm32f4xx_tim.c **** 
3110:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
3111:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
3112:FWLIB/src/stm32f4xx_tim.c **** }
3113:FWLIB/src/stm32f4xx_tim.c **** 
3114:FWLIB/src/stm32f4xx_tim.c **** /**
3115:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3116:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3117:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
3118:FWLIB/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3119:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3120:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3121:FWLIB/src/stm32f4xx_tim.c ****   */
3122:FWLIB/src/stm32f4xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3123:FWLIB/src/stm32f4xx_tim.c **** {
3124:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
3125:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3126:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3127:FWLIB/src/stm32f4xx_tim.c **** 
3128:FWLIB/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
3129:FWLIB/src/stm32f4xx_tim.c ****   {
3130:FWLIB/src/stm32f4xx_tim.c ****     /* Set the TI1S Bit */
3131:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
3132:FWLIB/src/stm32f4xx_tim.c ****   }
3133:FWLIB/src/stm32f4xx_tim.c ****   else
3134:FWLIB/src/stm32f4xx_tim.c ****   {
3135:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the TI1S Bit */
3136:FWLIB/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
3137:FWLIB/src/stm32f4xx_tim.c ****   }
3138:FWLIB/src/stm32f4xx_tim.c **** }
3139:FWLIB/src/stm32f4xx_tim.c **** /**
3140:FWLIB/src/stm32f4xx_tim.c ****   * @}
3141:FWLIB/src/stm32f4xx_tim.c ****   */
3142:FWLIB/src/stm32f4xx_tim.c **** 
3143:FWLIB/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3144:FWLIB/src/stm32f4xx_tim.c ****  *  @brief   Specific remapping management function
3145:FWLIB/src/stm32f4xx_tim.c ****  *
3146:FWLIB/src/stm32f4xx_tim.c **** @verbatim   
3147:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================
3148:FWLIB/src/stm32f4xx_tim.c ****               ##### Specific remapping management function #####
3149:FWLIB/src/stm32f4xx_tim.c ****  ===============================================================================  
3150:FWLIB/src/stm32f4xx_tim.c **** 
3151:FWLIB/src/stm32f4xx_tim.c **** @endverbatim
3152:FWLIB/src/stm32f4xx_tim.c ****   * @{
3153:FWLIB/src/stm32f4xx_tim.c ****   */
3154:FWLIB/src/stm32f4xx_tim.c **** 
3155:FWLIB/src/stm32f4xx_tim.c **** /**
3156:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3157:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3158:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3159:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3160:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3161:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trigger output.
3162:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3163:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3164:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3165:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 57


3166:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3167:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3168:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3169:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3170:FWLIB/src/stm32f4xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3171:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3172:FWLIB/src/stm32f4xx_tim.c ****   */
3173:FWLIB/src/stm32f4xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3174:FWLIB/src/stm32f4xx_tim.c **** {
3175:FWLIB/src/stm32f4xx_tim.c ****  /* Check the parameters */
3176:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3177:FWLIB/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3178:FWLIB/src/stm32f4xx_tim.c **** 
3179:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Timer remapping configuration */
3180:FWLIB/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
3181:FWLIB/src/stm32f4xx_tim.c **** }
3182:FWLIB/src/stm32f4xx_tim.c **** /**
3183:FWLIB/src/stm32f4xx_tim.c ****   * @}
3184:FWLIB/src/stm32f4xx_tim.c ****   */
3185:FWLIB/src/stm32f4xx_tim.c **** 
3186:FWLIB/src/stm32f4xx_tim.c **** /**
3187:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configure the TI1 as Input.
3188:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3189:FWLIB/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
3190:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3191:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3192:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3193:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3194:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3195:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3196:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3197:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3198:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3199:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3200:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3201:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3202:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3203:FWLIB/src/stm32f4xx_tim.c ****   */
3204:FWLIB/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3205:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3206:FWLIB/src/stm32f4xx_tim.c **** {
  29              		.loc 1 3206 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35 0000 30B4     		push	{r4, r5}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 5, -4
  40              	.LVL1:
3207:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
3208:FWLIB/src/stm32f4xx_tim.c **** 
3209:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3210:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 58


  41              		.loc 1 3210 0
  42 0002 048C     		ldrh	r4, [r0, #32]
  43 0004 A4B2     		uxth	r4, r4
  44 0006 24F00104 		bic	r4, r4, #1
  45 000a A4B2     		uxth	r4, r4
  46 000c 0484     		strh	r4, [r0, #32]	@ movhi
3211:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
  47              		.loc 1 3211 0
  48 000e 058B     		ldrh	r5, [r0, #24]
  49 0010 ADB2     		uxth	r5, r5
  50              	.LVL2:
3212:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
  51              		.loc 1 3212 0
  52 0012 048C     		ldrh	r4, [r0, #32]
  53 0014 A4B2     		uxth	r4, r4
  54              	.LVL3:
3213:FWLIB/src/stm32f4xx_tim.c **** 
3214:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3215:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
  55              		.loc 1 3215 0
  56 0016 25F0F305 		bic	r5, r5, #243
  57              	.LVL4:
3216:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
  58              		.loc 1 3216 0
  59 001a 1B01     		lsls	r3, r3, #4
  60              	.LVL5:
  61 001c 9BB2     		uxth	r3, r3
  62 001e 1A43     		orrs	r2, r2, r3
  63              	.LVL6:
  64 0020 45EA0203 		orr	r3, r5, r2
  65              	.LVL7:
3217:FWLIB/src/stm32f4xx_tim.c **** 
3218:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3219:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
  66              		.loc 1 3219 0
  67 0024 24F00A04 		bic	r4, r4, #10
  68              	.LVL8:
3220:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
  69              		.loc 1 3220 0
  70 0028 2143     		orrs	r1, r1, r4
  71              	.LVL9:
  72 002a 41F00104 		orr	r4, r1, #1
  73              	.LVL10:
3221:FWLIB/src/stm32f4xx_tim.c **** 
3222:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3223:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
  74              		.loc 1 3223 0
  75 002e 0383     		strh	r3, [r0, #24]	@ movhi
3224:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
  76              		.loc 1 3224 0
  77 0030 0484     		strh	r4, [r0, #32]	@ movhi
3225:FWLIB/src/stm32f4xx_tim.c **** }
  78              		.loc 1 3225 0
  79 0032 30BC     		pop	{r4, r5}
  80              	.LCFI1:
  81              		.cfi_restore 5
  82              		.cfi_restore 4
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 59


  83              		.cfi_def_cfa_offset 0
  84              	.LVL11:
  85 0034 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE211:
  89 0036 00BF     		.section	.text.TI2_Config,"ax",%progbits
  90              		.align	2
  91              		.thumb
  92              		.thumb_func
  94              	TI2_Config:
  95              	.LFB212:
3226:FWLIB/src/stm32f4xx_tim.c **** 
3227:FWLIB/src/stm32f4xx_tim.c **** /**
3228:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configure the TI2 as Input.
3229:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3230:FWLIB/src/stm32f4xx_tim.c ****   *         peripheral.
3231:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3232:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3233:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3234:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3235:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3236:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3237:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3238:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3239:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3240:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3241:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3242:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3243:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3244:FWLIB/src/stm32f4xx_tim.c ****   */
3245:FWLIB/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3246:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3247:FWLIB/src/stm32f4xx_tim.c **** {
  96              		.loc 1 3247 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.LVL12:
 102 0000 30B4     		push	{r4, r5}
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 4, -8
 106              		.cfi_offset 5, -4
 107              	.LVL13:
3248:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
3249:FWLIB/src/stm32f4xx_tim.c **** 
3250:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3251:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 108              		.loc 1 3251 0
 109 0002 048C     		ldrh	r4, [r0, #32]
 110 0004 A4B2     		uxth	r4, r4
 111 0006 24F01004 		bic	r4, r4, #16
 112 000a A4B2     		uxth	r4, r4
 113 000c 0484     		strh	r4, [r0, #32]	@ movhi
3252:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 114              		.loc 1 3252 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 60


 115 000e 058B     		ldrh	r5, [r0, #24]
 116              	.LVL14:
3253:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 117              		.loc 1 3253 0
 118 0010 048C     		ldrh	r4, [r0, #32]
 119 0012 A4B2     		uxth	r4, r4
 120              	.LVL15:
3254:FWLIB/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 121              		.loc 1 3254 0
 122 0014 0901     		lsls	r1, r1, #4
 123              	.LVL16:
 124 0016 89B2     		uxth	r1, r1
 125              	.LVL17:
3255:FWLIB/src/stm32f4xx_tim.c **** 
3256:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3257:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 126              		.loc 1 3257 0
 127 0018 25F44075 		bic	r5, r5, #768
 128              	.LVL18:
 129 001c 2D05     		lsls	r5, r5, #20
 130 001e 2D0D     		lsrs	r5, r5, #20
 131              	.LVL19:
3258:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 132              		.loc 1 3258 0
 133 0020 1B03     		lsls	r3, r3, #12
 134              	.LVL20:
 135 0022 9BB2     		uxth	r3, r3
 136 0024 2B43     		orrs	r3, r3, r5
 137              	.LVL21:
3259:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 138              		.loc 1 3259 0
 139 0026 1202     		lsls	r2, r2, #8
 140              	.LVL22:
 141 0028 92B2     		uxth	r2, r2
 142 002a 1A43     		orrs	r2, r2, r3
 143              	.LVL23:
3260:FWLIB/src/stm32f4xx_tim.c **** 
3261:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3262:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 144              		.loc 1 3262 0
 145 002c 24F0A004 		bic	r4, r4, #160
 146              	.LVL24:
3263:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 147              		.loc 1 3263 0
 148 0030 2143     		orrs	r1, r1, r4
 149              	.LVL25:
 150 0032 41F01001 		orr	r1, r1, #16
 151              	.LVL26:
3264:FWLIB/src/stm32f4xx_tim.c **** 
3265:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3266:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 152              		.loc 1 3266 0
 153 0036 0283     		strh	r2, [r0, #24]	@ movhi
3267:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 154              		.loc 1 3267 0
 155 0038 0184     		strh	r1, [r0, #32]	@ movhi
3268:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 61


 156              		.loc 1 3268 0
 157 003a 30BC     		pop	{r4, r5}
 158              	.LCFI3:
 159              		.cfi_restore 5
 160              		.cfi_restore 4
 161              		.cfi_def_cfa_offset 0
 162 003c 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE212:
 166 003e 00BF     		.section	.text.TI3_Config,"ax",%progbits
 167              		.align	2
 168              		.thumb
 169              		.thumb_func
 171              	TI3_Config:
 172              	.LFB213:
3269:FWLIB/src/stm32f4xx_tim.c **** 
3270:FWLIB/src/stm32f4xx_tim.c **** /**
3271:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configure the TI3 as Input.
3272:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3273:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3274:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3275:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3276:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3277:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3278:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3279:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3280:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3281:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3282:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3283:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3284:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3285:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3286:FWLIB/src/stm32f4xx_tim.c ****   */
3287:FWLIB/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3288:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3289:FWLIB/src/stm32f4xx_tim.c **** {
 173              		.loc 1 3289 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL27:
 179 0000 30B4     		push	{r4, r5}
 180              	.LCFI4:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 4, -8
 183              		.cfi_offset 5, -4
 184              	.LVL28:
3290:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
3291:FWLIB/src/stm32f4xx_tim.c **** 
3292:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3293:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 185              		.loc 1 3293 0
 186 0002 048C     		ldrh	r4, [r0, #32]
 187 0004 A4B2     		uxth	r4, r4
 188 0006 24F48074 		bic	r4, r4, #256
 189 000a A4B2     		uxth	r4, r4
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 62


 190 000c 0484     		strh	r4, [r0, #32]	@ movhi
3294:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 191              		.loc 1 3294 0
 192 000e 858B     		ldrh	r5, [r0, #28]
 193 0010 ADB2     		uxth	r5, r5
 194              	.LVL29:
3295:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 195              		.loc 1 3295 0
 196 0012 048C     		ldrh	r4, [r0, #32]
 197 0014 A4B2     		uxth	r4, r4
 198              	.LVL30:
3296:FWLIB/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 199              		.loc 1 3296 0
 200 0016 0902     		lsls	r1, r1, #8
 201              	.LVL31:
 202 0018 89B2     		uxth	r1, r1
 203              	.LVL32:
3297:FWLIB/src/stm32f4xx_tim.c **** 
3298:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3299:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 204              		.loc 1 3299 0
 205 001a 25F0F305 		bic	r5, r5, #243
 206              	.LVL33:
3300:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 207              		.loc 1 3300 0
 208 001e 1B01     		lsls	r3, r3, #4
 209              	.LVL34:
 210 0020 9BB2     		uxth	r3, r3
 211 0022 1A43     		orrs	r2, r2, r3
 212              	.LVL35:
 213 0024 45EA0203 		orr	r3, r5, r2
 214              	.LVL36:
3301:FWLIB/src/stm32f4xx_tim.c **** 
3302:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3303:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 215              		.loc 1 3303 0
 216 0028 24F42064 		bic	r4, r4, #2560
 217              	.LVL37:
3304:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 218              		.loc 1 3304 0
 219 002c 2143     		orrs	r1, r1, r4
 220              	.LVL38:
 221 002e 41F48071 		orr	r1, r1, #256
 222              	.LVL39:
3305:FWLIB/src/stm32f4xx_tim.c **** 
3306:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3307:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 223              		.loc 1 3307 0
 224 0032 8383     		strh	r3, [r0, #28]	@ movhi
3308:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 225              		.loc 1 3308 0
 226 0034 0184     		strh	r1, [r0, #32]	@ movhi
3309:FWLIB/src/stm32f4xx_tim.c **** }
 227              		.loc 1 3309 0
 228 0036 30BC     		pop	{r4, r5}
 229              	.LCFI5:
 230              		.cfi_restore 5
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 63


 231              		.cfi_restore 4
 232              		.cfi_def_cfa_offset 0
 233 0038 7047     		bx	lr
 234              		.cfi_endproc
 235              	.LFE213:
 237 003a 00BF     		.section	.text.TI4_Config,"ax",%progbits
 238              		.align	2
 239              		.thumb
 240              		.thumb_func
 242              	TI4_Config:
 243              	.LFB214:
3310:FWLIB/src/stm32f4xx_tim.c **** 
3311:FWLIB/src/stm32f4xx_tim.c **** /**
3312:FWLIB/src/stm32f4xx_tim.c ****   * @brief  Configure the TI4 as Input.
3313:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3314:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3315:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3316:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3317:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3318:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3319:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3320:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3321:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3322:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3323:FWLIB/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3324:FWLIB/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3325:FWLIB/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3326:FWLIB/src/stm32f4xx_tim.c ****   * @retval None
3327:FWLIB/src/stm32f4xx_tim.c ****   */
3328:FWLIB/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3329:FWLIB/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3330:FWLIB/src/stm32f4xx_tim.c **** {
 244              		.loc 1 3330 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249              	.LVL40:
 250 0000 30B4     		push	{r4, r5}
 251              	.LCFI6:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 5, -4
 255              	.LVL41:
3331:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
3332:FWLIB/src/stm32f4xx_tim.c **** 
3333:FWLIB/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3334:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 256              		.loc 1 3334 0
 257 0002 048C     		ldrh	r4, [r0, #32]
 258 0004 A4B2     		uxth	r4, r4
 259 0006 24F48054 		bic	r4, r4, #4096
 260 000a A4B2     		uxth	r4, r4
 261 000c 0484     		strh	r4, [r0, #32]	@ movhi
3335:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 262              		.loc 1 3335 0
 263 000e 858B     		ldrh	r5, [r0, #28]
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 64


 264              	.LVL42:
3336:FWLIB/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 265              		.loc 1 3336 0
 266 0010 048C     		ldrh	r4, [r0, #32]
 267              	.LVL43:
3337:FWLIB/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 268              		.loc 1 3337 0
 269 0012 0903     		lsls	r1, r1, #12
 270              	.LVL44:
 271 0014 89B2     		uxth	r1, r1
 272              	.LVL45:
3338:FWLIB/src/stm32f4xx_tim.c **** 
3339:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3340:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 273              		.loc 1 3340 0
 274 0016 25F44075 		bic	r5, r5, #768
 275              	.LVL46:
 276 001a 2D05     		lsls	r5, r5, #20
 277 001c 2D0D     		lsrs	r5, r5, #20
 278              	.LVL47:
3341:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 279              		.loc 1 3341 0
 280 001e 1202     		lsls	r2, r2, #8
 281              	.LVL48:
 282 0020 92B2     		uxth	r2, r2
 283 0022 2A43     		orrs	r2, r2, r5
 284              	.LVL49:
3342:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 285              		.loc 1 3342 0
 286 0024 1B03     		lsls	r3, r3, #12
 287              	.LVL50:
 288 0026 9BB2     		uxth	r3, r3
 289 0028 1343     		orrs	r3, r3, r2
 290              	.LVL51:
3343:FWLIB/src/stm32f4xx_tim.c **** 
3344:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3345:FWLIB/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 291              		.loc 1 3345 0
 292 002a 24F40054 		bic	r4, r4, #8192
 293              	.LVL52:
 294 002e 6404     		lsls	r4, r4, #17
 295 0030 640C     		lsrs	r4, r4, #17
 296              	.LVL53:
3346:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 297              		.loc 1 3346 0
 298 0032 0C43     		orrs	r4, r4, r1
 299              	.LVL54:
 300 0034 44F48054 		orr	r4, r4, #4096
 301              	.LVL55:
3347:FWLIB/src/stm32f4xx_tim.c **** 
3348:FWLIB/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3349:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 302              		.loc 1 3349 0
 303 0038 8383     		strh	r3, [r0, #28]	@ movhi
3350:FWLIB/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer ;
 304              		.loc 1 3350 0
 305 003a 0484     		strh	r4, [r0, #32]	@ movhi
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 65


3351:FWLIB/src/stm32f4xx_tim.c **** }
 306              		.loc 1 3351 0
 307 003c 30BC     		pop	{r4, r5}
 308              	.LCFI7:
 309              		.cfi_restore 5
 310              		.cfi_restore 4
 311              		.cfi_def_cfa_offset 0
 312              	.LVL56:
 313 003e 7047     		bx	lr
 314              		.cfi_endproc
 315              	.LFE214:
 317              		.section	.text.TIM_DeInit,"ax",%progbits
 318              		.align	2
 319              		.global	TIM_DeInit
 320              		.thumb
 321              		.thumb_func
 323              	TIM_DeInit:
 324              	.LFB123:
 201:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 325              		.loc 1 201 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              	.LVL57:
 330 0000 08B5     		push	{r3, lr}
 331              	.LCFI8:
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 3, -8
 334              		.cfi_offset 14, -4
 205:FWLIB/src/stm32f4xx_tim.c ****   {
 335              		.loc 1 205 0
 336 0002 584B     		ldr	r3, .L25
 337 0004 9842     		cmp	r0, r3
 338 0006 08D1     		bne	.L10
 207:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 339              		.loc 1 207 0
 340 0008 0121     		movs	r1, #1
 341 000a 0846     		mov	r0, r1
 342              	.LVL58:
 343 000c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 344              	.LVL59:
 208:FWLIB/src/stm32f4xx_tim.c ****   } 
 345              		.loc 1 208 0
 346 0010 0021     		movs	r1, #0
 347 0012 0120     		movs	r0, #1
 348 0014 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 349              	.LVL60:
 350 0018 08BD     		pop	{r3, pc}
 351              	.LVL61:
 352              	.L10:
 210:FWLIB/src/stm32f4xx_tim.c ****   {     
 353              		.loc 1 210 0
 354 001a B0F1804F 		cmp	r0, #1073741824
 355 001e 08D1     		bne	.L12
 212:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 356              		.loc 1 212 0
 357 0020 0121     		movs	r1, #1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 66


 358 0022 0846     		mov	r0, r1
 359              	.LVL62:
 360 0024 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 361              	.LVL63:
 213:FWLIB/src/stm32f4xx_tim.c ****   }  
 362              		.loc 1 213 0
 363 0028 0021     		movs	r1, #0
 364 002a 0120     		movs	r0, #1
 365 002c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 366              	.LVL64:
 367 0030 08BD     		pop	{r3, pc}
 368              	.LVL65:
 369              	.L12:
 215:FWLIB/src/stm32f4xx_tim.c ****   { 
 370              		.loc 1 215 0
 371 0032 4D4B     		ldr	r3, .L25+4
 372 0034 9842     		cmp	r0, r3
 373 0036 08D1     		bne	.L13
 217:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 374              		.loc 1 217 0
 375 0038 0121     		movs	r1, #1
 376 003a 0220     		movs	r0, #2
 377              	.LVL66:
 378 003c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 379              	.LVL67:
 218:FWLIB/src/stm32f4xx_tim.c ****   }  
 380              		.loc 1 218 0
 381 0040 0021     		movs	r1, #0
 382 0042 0220     		movs	r0, #2
 383 0044 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 384              	.LVL68:
 385 0048 08BD     		pop	{r3, pc}
 386              	.LVL69:
 387              	.L13:
 220:FWLIB/src/stm32f4xx_tim.c ****   { 
 388              		.loc 1 220 0
 389 004a 484B     		ldr	r3, .L25+8
 390 004c 9842     		cmp	r0, r3
 391 004e 08D1     		bne	.L14
 222:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 392              		.loc 1 222 0
 393 0050 0121     		movs	r1, #1
 394 0052 0420     		movs	r0, #4
 395              	.LVL70:
 396 0054 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 397              	.LVL71:
 223:FWLIB/src/stm32f4xx_tim.c ****   }  
 398              		.loc 1 223 0
 399 0058 0021     		movs	r1, #0
 400 005a 0420     		movs	r0, #4
 401 005c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 402              	.LVL72:
 403 0060 08BD     		pop	{r3, pc}
 404              	.LVL73:
 405              	.L14:
 225:FWLIB/src/stm32f4xx_tim.c ****   {      
 406              		.loc 1 225 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 67


 407 0062 434B     		ldr	r3, .L25+12
 408 0064 9842     		cmp	r0, r3
 409 0066 08D1     		bne	.L15
 227:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 410              		.loc 1 227 0
 411 0068 0121     		movs	r1, #1
 412 006a 0820     		movs	r0, #8
 413              	.LVL74:
 414 006c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 415              	.LVL75:
 228:FWLIB/src/stm32f4xx_tim.c ****   }  
 416              		.loc 1 228 0
 417 0070 0021     		movs	r1, #0
 418 0072 0820     		movs	r0, #8
 419 0074 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 420              	.LVL76:
 421 0078 08BD     		pop	{r3, pc}
 422              	.LVL77:
 423              	.L15:
 230:FWLIB/src/stm32f4xx_tim.c ****   {    
 424              		.loc 1 230 0
 425 007a 3E4B     		ldr	r3, .L25+16
 426 007c 9842     		cmp	r0, r3
 427 007e 08D1     		bne	.L16
 232:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 428              		.loc 1 232 0
 429 0080 0121     		movs	r1, #1
 430 0082 1020     		movs	r0, #16
 431              	.LVL78:
 432 0084 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 433              	.LVL79:
 233:FWLIB/src/stm32f4xx_tim.c ****   }  
 434              		.loc 1 233 0
 435 0088 0021     		movs	r1, #0
 436 008a 1020     		movs	r0, #16
 437 008c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 438              	.LVL80:
 439 0090 08BD     		pop	{r3, pc}
 440              	.LVL81:
 441              	.L16:
 235:FWLIB/src/stm32f4xx_tim.c ****   {      
 442              		.loc 1 235 0
 443 0092 394B     		ldr	r3, .L25+20
 444 0094 9842     		cmp	r0, r3
 445 0096 08D1     		bne	.L17
 237:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 446              		.loc 1 237 0
 447 0098 0121     		movs	r1, #1
 448 009a 2020     		movs	r0, #32
 449              	.LVL82:
 450 009c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 451              	.LVL83:
 238:FWLIB/src/stm32f4xx_tim.c ****   }  
 452              		.loc 1 238 0
 453 00a0 0021     		movs	r1, #0
 454 00a2 2020     		movs	r0, #32
 455 00a4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 68


 456              	.LVL84:
 457 00a8 08BD     		pop	{r3, pc}
 458              	.LVL85:
 459              	.L17:
 240:FWLIB/src/stm32f4xx_tim.c ****   {      
 460              		.loc 1 240 0
 461 00aa 344B     		ldr	r3, .L25+24
 462 00ac 9842     		cmp	r0, r3
 463 00ae 08D1     		bne	.L18
 242:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 464              		.loc 1 242 0
 465 00b0 0121     		movs	r1, #1
 466 00b2 0220     		movs	r0, #2
 467              	.LVL86:
 468 00b4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 469              	.LVL87:
 243:FWLIB/src/stm32f4xx_tim.c ****   }  
 470              		.loc 1 243 0
 471 00b8 0021     		movs	r1, #0
 472 00ba 0220     		movs	r0, #2
 473 00bc FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 474              	.LVL88:
 475 00c0 08BD     		pop	{r3, pc}
 476              	.LVL89:
 477              	.L18:
 245:FWLIB/src/stm32f4xx_tim.c ****   {      
 478              		.loc 1 245 0
 479 00c2 2F4B     		ldr	r3, .L25+28
 480 00c4 9842     		cmp	r0, r3
 481 00c6 0AD1     		bne	.L19
 247:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 482              		.loc 1 247 0
 483 00c8 0121     		movs	r1, #1
 484 00ca 4FF48030 		mov	r0, #65536
 485              	.LVL90:
 486 00ce FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 487              	.LVL91:
 248:FWLIB/src/stm32f4xx_tim.c ****    }  
 488              		.loc 1 248 0
 489 00d2 0021     		movs	r1, #0
 490 00d4 4FF48030 		mov	r0, #65536
 491 00d8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 492              	.LVL92:
 493 00dc 08BD     		pop	{r3, pc}
 494              	.LVL93:
 495              	.L19:
 250:FWLIB/src/stm32f4xx_tim.c ****   {      
 496              		.loc 1 250 0
 497 00de 294B     		ldr	r3, .L25+32
 498 00e0 9842     		cmp	r0, r3
 499 00e2 0AD1     		bne	.L20
 252:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 500              		.loc 1 252 0
 501 00e4 0121     		movs	r1, #1
 502 00e6 4FF40030 		mov	r0, #131072
 503              	.LVL94:
 504 00ea FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 69


 505              	.LVL95:
 253:FWLIB/src/stm32f4xx_tim.c ****   }  
 506              		.loc 1 253 0
 507 00ee 0021     		movs	r1, #0
 508 00f0 4FF40030 		mov	r0, #131072
 509 00f4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 510              	.LVL96:
 511 00f8 08BD     		pop	{r3, pc}
 512              	.LVL97:
 513              	.L20:
 255:FWLIB/src/stm32f4xx_tim.c ****   {     
 514              		.loc 1 255 0
 515 00fa 234B     		ldr	r3, .L25+36
 516 00fc 9842     		cmp	r0, r3
 517 00fe 0AD1     		bne	.L21
 257:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 518              		.loc 1 257 0
 519 0100 0121     		movs	r1, #1
 520 0102 4FF48020 		mov	r0, #262144
 521              	.LVL98:
 522 0106 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 523              	.LVL99:
 258:FWLIB/src/stm32f4xx_tim.c ****   }  
 524              		.loc 1 258 0
 525 010a 0021     		movs	r1, #0
 526 010c 4FF48020 		mov	r0, #262144
 527 0110 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 528              	.LVL100:
 529 0114 08BD     		pop	{r3, pc}
 530              	.LVL101:
 531              	.L21:
 260:FWLIB/src/stm32f4xx_tim.c ****   {      
 532              		.loc 1 260 0
 533 0116 1D4B     		ldr	r3, .L25+40
 534 0118 9842     		cmp	r0, r3
 535 011a 08D1     		bne	.L22
 262:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 536              		.loc 1 262 0
 537 011c 0121     		movs	r1, #1
 538 011e 4020     		movs	r0, #64
 539              	.LVL102:
 540 0120 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 541              	.LVL103:
 263:FWLIB/src/stm32f4xx_tim.c ****   }  
 542              		.loc 1 263 0
 543 0124 0021     		movs	r1, #0
 544 0126 4020     		movs	r0, #64
 545 0128 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 546              	.LVL104:
 547 012c 08BD     		pop	{r3, pc}
 548              	.LVL105:
 549              	.L22:
 265:FWLIB/src/stm32f4xx_tim.c ****   {       
 550              		.loc 1 265 0
 551 012e 184B     		ldr	r3, .L25+44
 552 0130 9842     		cmp	r0, r3
 553 0132 08D1     		bne	.L23
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 70


 267:FWLIB/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 554              		.loc 1 267 0
 555 0134 0121     		movs	r1, #1
 556 0136 8020     		movs	r0, #128
 557              	.LVL106:
 558 0138 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 559              	.LVL107:
 268:FWLIB/src/stm32f4xx_tim.c ****   }  
 560              		.loc 1 268 0
 561 013c 0021     		movs	r1, #0
 562 013e 8020     		movs	r0, #128
 563 0140 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 564              	.LVL108:
 565 0144 08BD     		pop	{r3, pc}
 566              	.LVL109:
 567              	.L23:
 272:FWLIB/src/stm32f4xx_tim.c ****     {     
 568              		.loc 1 272 0
 569 0146 134B     		ldr	r3, .L25+48
 570 0148 9842     		cmp	r0, r3
 571 014a 09D1     		bne	.L9
 274:FWLIB/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 572              		.loc 1 274 0
 573 014c 0121     		movs	r1, #1
 574 014e 4FF48070 		mov	r0, #256
 575              	.LVL110:
 576 0152 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 577              	.LVL111:
 275:FWLIB/src/stm32f4xx_tim.c ****     }   
 578              		.loc 1 275 0
 579 0156 0021     		movs	r1, #0
 580 0158 4FF48070 		mov	r0, #256
 581 015c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 582              	.LVL112:
 583              	.L9:
 584 0160 08BD     		pop	{r3, pc}
 585              	.L26:
 586 0162 00BF     		.align	2
 587              	.L25:
 588 0164 00000140 		.word	1073807360
 589 0168 00040040 		.word	1073742848
 590 016c 00080040 		.word	1073743872
 591 0170 000C0040 		.word	1073744896
 592 0174 00100040 		.word	1073745920
 593 0178 00140040 		.word	1073746944
 594 017c 00040140 		.word	1073808384
 595 0180 00400140 		.word	1073823744
 596 0184 00440140 		.word	1073824768
 597 0188 00480140 		.word	1073825792
 598 018c 00180040 		.word	1073747968
 599 0190 001C0040 		.word	1073748992
 600 0194 00200040 		.word	1073750016
 601              		.cfi_endproc
 602              	.LFE123:
 604              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 605              		.align	2
 606              		.global	TIM_TimeBaseInit
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 71


 607              		.thumb
 608              		.thumb_func
 610              	TIM_TimeBaseInit:
 611              	.LFB124:
 289:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 612              		.loc 1 289 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617              	.LVL113:
 297:FWLIB/src/stm32f4xx_tim.c **** 
 618              		.loc 1 297 0
 619 0000 0388     		ldrh	r3, [r0]
 620 0002 9BB2     		uxth	r3, r3
 621              	.LVL114:
 299:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 622              		.loc 1 299 0
 623 0004 1B4A     		ldr	r2, .L33
 624 0006 9042     		cmp	r0, r2
 625 0008 12D0     		beq	.L28
 299:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 626              		.loc 1 299 0 is_stmt 0 discriminator 1
 627 000a 02F58062 		add	r2, r2, #1024
 628 000e 9042     		cmp	r0, r2
 629 0010 0ED0     		beq	.L28
 299:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 630              		.loc 1 299 0 discriminator 2
 631 0012 B0F1804F 		cmp	r0, #1073741824
 632 0016 0BD0     		beq	.L28
 300:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 633              		.loc 1 300 0 is_stmt 1
 634 0018 A2F58032 		sub	r2, r2, #65536
 635 001c 9042     		cmp	r0, r2
 636 001e 07D0     		beq	.L28
 300:FWLIB/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 637              		.loc 1 300 0 is_stmt 0 discriminator 1
 638 0020 02F58062 		add	r2, r2, #1024
 639 0024 9042     		cmp	r0, r2
 640 0026 03D0     		beq	.L28
 301:FWLIB/src/stm32f4xx_tim.c ****   {
 641              		.loc 1 301 0 is_stmt 1
 642 0028 02F58062 		add	r2, r2, #1024
 643 002c 9042     		cmp	r0, r2
 644 002e 03D1     		bne	.L29
 645              	.L28:
 304:FWLIB/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 646              		.loc 1 304 0
 647 0030 23F07003 		bic	r3, r3, #112
 648              	.LVL115:
 305:FWLIB/src/stm32f4xx_tim.c ****   }
 649              		.loc 1 305 0
 650 0034 4A88     		ldrh	r2, [r1, #2]
 651 0036 1343     		orrs	r3, r3, r2
 652              	.LVL116:
 653              	.L29:
 308:FWLIB/src/stm32f4xx_tim.c ****   {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 72


 654              		.loc 1 308 0
 655 0038 0F4A     		ldr	r2, .L33+4
 656 003a 9042     		cmp	r0, r2
 657 003c 08D0     		beq	.L30
 308:FWLIB/src/stm32f4xx_tim.c ****   {
 658              		.loc 1 308 0 is_stmt 0 discriminator 1
 659 003e 02F58062 		add	r2, r2, #1024
 660 0042 9042     		cmp	r0, r2
 661 0044 04D0     		beq	.L30
 311:FWLIB/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 662              		.loc 1 311 0 is_stmt 1
 663 0046 23F44073 		bic	r3, r3, #768
 664              	.LVL117:
 665 004a 9BB2     		uxth	r3, r3
 666              	.LVL118:
 312:FWLIB/src/stm32f4xx_tim.c ****   }
 667              		.loc 1 312 0
 668 004c 0A89     		ldrh	r2, [r1, #8]
 669 004e 1343     		orrs	r3, r3, r2
 670              	.LVL119:
 671              	.L30:
 315:FWLIB/src/stm32f4xx_tim.c **** 
 672              		.loc 1 315 0
 673 0050 0380     		strh	r3, [r0]	@ movhi
 318:FWLIB/src/stm32f4xx_tim.c ****  
 674              		.loc 1 318 0
 675 0052 4B68     		ldr	r3, [r1, #4]
 676              	.LVL120:
 677 0054 C362     		str	r3, [r0, #44]
 678              	.LVL121:
 321:FWLIB/src/stm32f4xx_tim.c ****     
 679              		.loc 1 321 0
 680 0056 0B88     		ldrh	r3, [r1]
 681 0058 0385     		strh	r3, [r0, #40]	@ movhi
 323:FWLIB/src/stm32f4xx_tim.c ****   {
 682              		.loc 1 323 0
 683 005a 064B     		ldr	r3, .L33
 684 005c 9842     		cmp	r0, r3
 685 005e 03D0     		beq	.L31
 323:FWLIB/src/stm32f4xx_tim.c ****   {
 686              		.loc 1 323 0 is_stmt 0 discriminator 1
 687 0060 03F58063 		add	r3, r3, #1024
 688 0064 9842     		cmp	r0, r3
 689 0066 01D1     		bne	.L32
 690              	.L31:
 326:FWLIB/src/stm32f4xx_tim.c ****   }
 691              		.loc 1 326 0 is_stmt 1
 692 0068 8B7A     		ldrb	r3, [r1, #10]	@ zero_extendqisi2
 693 006a 0386     		strh	r3, [r0, #48]	@ movhi
 694              	.L32:
 331:FWLIB/src/stm32f4xx_tim.c **** }
 695              		.loc 1 331 0
 696 006c 0123     		movs	r3, #1
 697 006e 8382     		strh	r3, [r0, #20]	@ movhi
 698 0070 7047     		bx	lr
 699              	.L34:
 700 0072 00BF     		.align	2
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 73


 701              	.L33:
 702 0074 00000140 		.word	1073807360
 703 0078 00100040 		.word	1073745920
 704              		.cfi_endproc
 705              	.LFE124:
 707              		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 708              		.align	2
 709              		.global	TIM_TimeBaseStructInit
 710              		.thumb
 711              		.thumb_func
 713              	TIM_TimeBaseStructInit:
 714              	.LFB125:
 341:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 715              		.loc 1 341 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL122:
 343:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 721              		.loc 1 343 0
 722 0000 4FF0FF33 		mov	r3, #-1
 723 0004 4360     		str	r3, [r0, #4]
 344:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 724              		.loc 1 344 0
 725 0006 0023     		movs	r3, #0
 726 0008 0380     		strh	r3, [r0]	@ movhi
 345:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 727              		.loc 1 345 0
 728 000a 0381     		strh	r3, [r0, #8]	@ movhi
 346:FWLIB/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 729              		.loc 1 346 0
 730 000c 4380     		strh	r3, [r0, #2]	@ movhi
 347:FWLIB/src/stm32f4xx_tim.c **** }
 731              		.loc 1 347 0
 732 000e 8372     		strb	r3, [r0, #10]
 733 0010 7047     		bx	lr
 734              		.cfi_endproc
 735              	.LFE125:
 737 0012 00BF     		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 738              		.align	2
 739              		.global	TIM_PrescalerConfig
 740              		.thumb
 741              		.thumb_func
 743              	TIM_PrescalerConfig:
 744              	.LFB126:
 361:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 745              		.loc 1 361 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              		@ link register save eliminated.
 750              	.LVL123:
 366:FWLIB/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 751              		.loc 1 366 0
 752 0000 0185     		strh	r1, [r0, #40]	@ movhi
 368:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 74


 753              		.loc 1 368 0
 754 0002 8282     		strh	r2, [r0, #20]	@ movhi
 755 0004 7047     		bx	lr
 756              		.cfi_endproc
 757              	.LFE126:
 759 0006 00BF     		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 760              		.align	2
 761              		.global	TIM_CounterModeConfig
 762              		.thumb
 763              		.thumb_func
 765              	TIM_CounterModeConfig:
 766              	.LFB127:
 384:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 767              		.loc 1 384 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 772              	.LVL124:
 391:FWLIB/src/stm32f4xx_tim.c **** 
 773              		.loc 1 391 0
 774 0000 0388     		ldrh	r3, [r0]
 775 0002 9BB2     		uxth	r3, r3
 776              	.LVL125:
 394:FWLIB/src/stm32f4xx_tim.c **** 
 777              		.loc 1 394 0
 778 0004 23F07003 		bic	r3, r3, #112
 779              	.LVL126:
 397:FWLIB/src/stm32f4xx_tim.c **** 
 780              		.loc 1 397 0
 781 0008 1943     		orrs	r1, r1, r3
 782              	.LVL127:
 400:FWLIB/src/stm32f4xx_tim.c **** }
 783              		.loc 1 400 0
 784 000a 0180     		strh	r1, [r0]	@ movhi
 785 000c 7047     		bx	lr
 786              		.cfi_endproc
 787              	.LFE127:
 789 000e 00BF     		.section	.text.TIM_SetCounter,"ax",%progbits
 790              		.align	2
 791              		.global	TIM_SetCounter
 792              		.thumb
 793              		.thumb_func
 795              	TIM_SetCounter:
 796              	.LFB128:
 410:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 797              		.loc 1 410 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LVL128:
 415:FWLIB/src/stm32f4xx_tim.c **** }
 803              		.loc 1 415 0
 804 0000 4162     		str	r1, [r0, #36]
 805 0002 7047     		bx	lr
 806              		.cfi_endproc
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 75


 807              	.LFE128:
 809              		.section	.text.TIM_SetAutoreload,"ax",%progbits
 810              		.align	2
 811              		.global	TIM_SetAutoreload
 812              		.thumb
 813              		.thumb_func
 815              	TIM_SetAutoreload:
 816              	.LFB129:
 425:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 817              		.loc 1 425 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
 822              	.LVL129:
 430:FWLIB/src/stm32f4xx_tim.c **** }
 823              		.loc 1 430 0
 824 0000 C162     		str	r1, [r0, #44]
 825 0002 7047     		bx	lr
 826              		.cfi_endproc
 827              	.LFE129:
 829              		.section	.text.TIM_GetCounter,"ax",%progbits
 830              		.align	2
 831              		.global	TIM_GetCounter
 832              		.thumb
 833              		.thumb_func
 835              	TIM_GetCounter:
 836              	.LFB130:
 439:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 837              		.loc 1 439 0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841              		@ link register save eliminated.
 842              	.LVL130:
 444:FWLIB/src/stm32f4xx_tim.c **** }
 843              		.loc 1 444 0
 844 0000 406A     		ldr	r0, [r0, #36]
 845              	.LVL131:
 445:FWLIB/src/stm32f4xx_tim.c **** 
 846              		.loc 1 445 0
 847 0002 7047     		bx	lr
 848              		.cfi_endproc
 849              	.LFE130:
 851              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 852              		.align	2
 853              		.global	TIM_GetPrescaler
 854              		.thumb
 855              		.thumb_func
 857              	TIM_GetPrescaler:
 858              	.LFB131:
 453:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 859              		.loc 1 453 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              		@ link register save eliminated.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 76


 864              	.LVL132:
 458:FWLIB/src/stm32f4xx_tim.c **** }
 865              		.loc 1 458 0
 866 0000 008D     		ldrh	r0, [r0, #40]
 867              	.LVL133:
 459:FWLIB/src/stm32f4xx_tim.c **** 
 868              		.loc 1 459 0
 869 0002 80B2     		uxth	r0, r0
 870 0004 7047     		bx	lr
 871              		.cfi_endproc
 872              	.LFE131:
 874 0006 00BF     		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 875              		.align	2
 876              		.global	TIM_UpdateDisableConfig
 877              		.thumb
 878              		.thumb_func
 880              	TIM_UpdateDisableConfig:
 881              	.LFB132:
 469:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 882              		.loc 1 469 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 887              	.LVL134:
 474:FWLIB/src/stm32f4xx_tim.c ****   {
 888              		.loc 1 474 0
 889 0000 29B1     		cbz	r1, .L43
 477:FWLIB/src/stm32f4xx_tim.c ****   }
 890              		.loc 1 477 0
 891 0002 0388     		ldrh	r3, [r0]
 892 0004 9BB2     		uxth	r3, r3
 893 0006 43F00203 		orr	r3, r3, #2
 894 000a 0380     		strh	r3, [r0]	@ movhi
 895 000c 7047     		bx	lr
 896              	.L43:
 482:FWLIB/src/stm32f4xx_tim.c ****   }
 897              		.loc 1 482 0
 898 000e 0388     		ldrh	r3, [r0]
 899 0010 9BB2     		uxth	r3, r3
 900 0012 23F00203 		bic	r3, r3, #2
 901 0016 9BB2     		uxth	r3, r3
 902 0018 0380     		strh	r3, [r0]	@ movhi
 903 001a 7047     		bx	lr
 904              		.cfi_endproc
 905              	.LFE132:
 907              		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 908              		.align	2
 909              		.global	TIM_UpdateRequestConfig
 910              		.thumb
 911              		.thumb_func
 913              	TIM_UpdateRequestConfig:
 914              	.LFB133:
 498:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 915              		.loc 1 498 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 77


 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 920              	.LVL135:
 503:FWLIB/src/stm32f4xx_tim.c ****   {
 921              		.loc 1 503 0
 922 0000 29B1     		cbz	r1, .L46
 506:FWLIB/src/stm32f4xx_tim.c ****   }
 923              		.loc 1 506 0
 924 0002 0388     		ldrh	r3, [r0]
 925 0004 9BB2     		uxth	r3, r3
 926 0006 43F00403 		orr	r3, r3, #4
 927 000a 0380     		strh	r3, [r0]	@ movhi
 928 000c 7047     		bx	lr
 929              	.L46:
 511:FWLIB/src/stm32f4xx_tim.c ****   }
 930              		.loc 1 511 0
 931 000e 0388     		ldrh	r3, [r0]
 932 0010 9BB2     		uxth	r3, r3
 933 0012 23F00403 		bic	r3, r3, #4
 934 0016 9BB2     		uxth	r3, r3
 935 0018 0380     		strh	r3, [r0]	@ movhi
 936 001a 7047     		bx	lr
 937              		.cfi_endproc
 938              	.LFE133:
 940              		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 941              		.align	2
 942              		.global	TIM_ARRPreloadConfig
 943              		.thumb
 944              		.thumb_func
 946              	TIM_ARRPreloadConfig:
 947              	.LFB134:
 523:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 948              		.loc 1 523 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952              		@ link register save eliminated.
 953              	.LVL136:
 528:FWLIB/src/stm32f4xx_tim.c ****   {
 954              		.loc 1 528 0
 955 0000 29B1     		cbz	r1, .L49
 531:FWLIB/src/stm32f4xx_tim.c ****   }
 956              		.loc 1 531 0
 957 0002 0388     		ldrh	r3, [r0]
 958 0004 9BB2     		uxth	r3, r3
 959 0006 43F08003 		orr	r3, r3, #128
 960 000a 0380     		strh	r3, [r0]	@ movhi
 961 000c 7047     		bx	lr
 962              	.L49:
 536:FWLIB/src/stm32f4xx_tim.c ****   }
 963              		.loc 1 536 0
 964 000e 0388     		ldrh	r3, [r0]
 965 0010 9BB2     		uxth	r3, r3
 966 0012 23F08003 		bic	r3, r3, #128
 967 0016 9BB2     		uxth	r3, r3
 968 0018 0380     		strh	r3, [r0]	@ movhi
 969 001a 7047     		bx	lr
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 78


 970              		.cfi_endproc
 971              	.LFE134:
 973              		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 974              		.align	2
 975              		.global	TIM_SelectOnePulseMode
 976              		.thumb
 977              		.thumb_func
 979              	TIM_SelectOnePulseMode:
 980              	.LFB135:
 550:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 981              		.loc 1 550 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              		@ link register save eliminated.
 986              	.LVL137:
 556:FWLIB/src/stm32f4xx_tim.c **** 
 987              		.loc 1 556 0
 988 0000 0388     		ldrh	r3, [r0]
 989 0002 9BB2     		uxth	r3, r3
 990 0004 23F00803 		bic	r3, r3, #8
 991 0008 9BB2     		uxth	r3, r3
 992 000a 0380     		strh	r3, [r0]	@ movhi
 559:FWLIB/src/stm32f4xx_tim.c **** }
 993              		.loc 1 559 0
 994 000c 0388     		ldrh	r3, [r0]
 995 000e 9BB2     		uxth	r3, r3
 996 0010 1943     		orrs	r1, r1, r3
 997              	.LVL138:
 998 0012 0180     		strh	r1, [r0]	@ movhi
 999 0014 7047     		bx	lr
 1000              		.cfi_endproc
 1001              	.LFE135:
 1003 0016 00BF     		.section	.text.TIM_SetClockDivision,"ax",%progbits
 1004              		.align	2
 1005              		.global	TIM_SetClockDivision
 1006              		.thumb
 1007              		.thumb_func
 1009              	TIM_SetClockDivision:
 1010              	.LFB136:
 573:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1011              		.loc 1 573 0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              		@ link register save eliminated.
 1016              	.LVL139:
 579:FWLIB/src/stm32f4xx_tim.c **** 
 1017              		.loc 1 579 0
 1018 0000 0388     		ldrh	r3, [r0]
 1019 0002 9BB2     		uxth	r3, r3
 1020 0004 23F44073 		bic	r3, r3, #768
 1021 0008 9BB2     		uxth	r3, r3
 1022 000a 0380     		strh	r3, [r0]	@ movhi
 582:FWLIB/src/stm32f4xx_tim.c **** }
 1023              		.loc 1 582 0
 1024 000c 0388     		ldrh	r3, [r0]
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 79


 1025 000e 9BB2     		uxth	r3, r3
 1026 0010 1943     		orrs	r1, r1, r3
 1027              	.LVL140:
 1028 0012 0180     		strh	r1, [r0]	@ movhi
 1029 0014 7047     		bx	lr
 1030              		.cfi_endproc
 1031              	.LFE136:
 1033 0016 00BF     		.section	.text.TIM_Cmd,"ax",%progbits
 1034              		.align	2
 1035              		.global	TIM_Cmd
 1036              		.thumb
 1037              		.thumb_func
 1039              	TIM_Cmd:
 1040              	.LFB137:
 593:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1041              		.loc 1 593 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              		@ link register save eliminated.
 1046              	.LVL141:
 598:FWLIB/src/stm32f4xx_tim.c ****   {
 1047              		.loc 1 598 0
 1048 0000 29B1     		cbz	r1, .L54
 601:FWLIB/src/stm32f4xx_tim.c ****   }
 1049              		.loc 1 601 0
 1050 0002 0388     		ldrh	r3, [r0]
 1051 0004 9BB2     		uxth	r3, r3
 1052 0006 43F00103 		orr	r3, r3, #1
 1053 000a 0380     		strh	r3, [r0]	@ movhi
 1054 000c 7047     		bx	lr
 1055              	.L54:
 606:FWLIB/src/stm32f4xx_tim.c ****   }
 1056              		.loc 1 606 0
 1057 000e 0388     		ldrh	r3, [r0]
 1058 0010 9BB2     		uxth	r3, r3
 1059 0012 23F00103 		bic	r3, r3, #1
 1060 0016 9BB2     		uxth	r3, r3
 1061 0018 0380     		strh	r3, [r0]	@ movhi
 1062 001a 7047     		bx	lr
 1063              		.cfi_endproc
 1064              	.LFE137:
 1066              		.section	.text.TIM_OC1Init,"ax",%progbits
 1067              		.align	2
 1068              		.global	TIM_OC1Init
 1069              		.thumb
 1070              		.thumb_func
 1072              	TIM_OC1Init:
 1073              	.LFB138:
 674:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1074              		.loc 1 674 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 1078              		@ link register save eliminated.
 1079              	.LVL142:
 1080 0000 30B4     		push	{r4, r5}
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 80


 1081              	.LCFI9:
 1082              		.cfi_def_cfa_offset 8
 1083              		.cfi_offset 4, -8
 1084              		.cfi_offset 5, -4
 1085              	.LVL143:
 684:FWLIB/src/stm32f4xx_tim.c ****   
 1086              		.loc 1 684 0
 1087 0002 038C     		ldrh	r3, [r0, #32]
 1088 0004 9BB2     		uxth	r3, r3
 1089 0006 23F00103 		bic	r3, r3, #1
 1090 000a 9BB2     		uxth	r3, r3
 1091 000c 0384     		strh	r3, [r0, #32]	@ movhi
 687:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 1092              		.loc 1 687 0
 1093 000e 038C     		ldrh	r3, [r0, #32]
 1094 0010 9BB2     		uxth	r3, r3
 1095              	.LVL144:
 689:FWLIB/src/stm32f4xx_tim.c ****   
 1096              		.loc 1 689 0
 1097 0012 8588     		ldrh	r5, [r0, #4]
 1098 0014 ADB2     		uxth	r5, r5
 1099              	.LVL145:
 692:FWLIB/src/stm32f4xx_tim.c ****     
 1100              		.loc 1 692 0
 1101 0016 028B     		ldrh	r2, [r0, #24]
 1102 0018 92B2     		uxth	r2, r2
 1103              	.LVL146:
 696:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 1104              		.loc 1 696 0
 1105 001a 22F07302 		bic	r2, r2, #115
 1106              	.LVL147:
 698:FWLIB/src/stm32f4xx_tim.c ****   
 1107              		.loc 1 698 0
 1108 001e 0C88     		ldrh	r4, [r1]
 1109 0020 2243     		orrs	r2, r2, r4
 1110              	.LVL148:
 701:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 1111              		.loc 1 701 0
 1112 0022 23F00203 		bic	r3, r3, #2
 1113              	.LVL149:
 703:FWLIB/src/stm32f4xx_tim.c ****   
 1114              		.loc 1 703 0
 1115 0026 8C89     		ldrh	r4, [r1, #12]
 1116 0028 2343     		orrs	r3, r3, r4
 1117              	.LVL150:
 706:FWLIB/src/stm32f4xx_tim.c ****     
 1118              		.loc 1 706 0
 1119 002a 4C88     		ldrh	r4, [r1, #2]
 1120 002c 2343     		orrs	r3, r3, r4
 1121              	.LVL151:
 708:FWLIB/src/stm32f4xx_tim.c ****   {
 1122              		.loc 1 708 0
 1123 002e 0E4C     		ldr	r4, .L60
 1124 0030 A042     		cmp	r0, r4
 1125 0032 03D0     		beq	.L57
 708:FWLIB/src/stm32f4xx_tim.c ****   {
 1126              		.loc 1 708 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 81


 1127 0034 04F58064 		add	r4, r4, #1024
 1128 0038 A042     		cmp	r0, r4
 1129 003a 0DD1     		bne	.L58
 1130              	.L57:
 716:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 1131              		.loc 1 716 0 is_stmt 1
 1132 003c 23F00803 		bic	r3, r3, #8
 1133              	.LVL152:
 718:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 1134              		.loc 1 718 0
 1135 0040 CC89     		ldrh	r4, [r1, #14]
 1136 0042 2343     		orrs	r3, r3, r4
 1137              	.LVL153:
 720:FWLIB/src/stm32f4xx_tim.c ****     
 1138              		.loc 1 720 0
 1139 0044 23F00404 		bic	r4, r3, #4
 1140              	.LVL154:
 723:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1141              		.loc 1 723 0
 1142 0048 8B88     		ldrh	r3, [r1, #4]
 1143 004a 2343     		orrs	r3, r3, r4
 1144              	.LVL155:
 726:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 1145              		.loc 1 726 0
 1146 004c 25F44075 		bic	r5, r5, #768
 1147              	.LVL156:
 728:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 1148              		.loc 1 728 0
 1149 0050 0C8A     		ldrh	r4, [r1, #16]
 1150 0052 2543     		orrs	r5, r5, r4
 1151              	.LVL157:
 730:FWLIB/src/stm32f4xx_tim.c ****   }
 1152              		.loc 1 730 0
 1153 0054 4C8A     		ldrh	r4, [r1, #18]
 1154 0056 2543     		orrs	r5, r5, r4
 1155              	.LVL158:
 1156              	.L58:
 733:FWLIB/src/stm32f4xx_tim.c ****   
 1157              		.loc 1 733 0
 1158 0058 8580     		strh	r5, [r0, #4]	@ movhi
 736:FWLIB/src/stm32f4xx_tim.c ****   
 1159              		.loc 1 736 0
 1160 005a 0283     		strh	r2, [r0, #24]	@ movhi
 739:FWLIB/src/stm32f4xx_tim.c ****   
 1161              		.loc 1 739 0
 1162 005c 8A68     		ldr	r2, [r1, #8]
 1163              	.LVL159:
 1164 005e 4263     		str	r2, [r0, #52]
 1165              	.LVL160:
 742:FWLIB/src/stm32f4xx_tim.c **** }
 1166              		.loc 1 742 0
 1167 0060 0384     		strh	r3, [r0, #32]	@ movhi
 743:FWLIB/src/stm32f4xx_tim.c **** 
 1168              		.loc 1 743 0
 1169 0062 30BC     		pop	{r4, r5}
 1170              	.LCFI10:
 1171              		.cfi_restore 5
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 82


 1172              		.cfi_restore 4
 1173              		.cfi_def_cfa_offset 0
 1174              	.LVL161:
 1175 0064 7047     		bx	lr
 1176              	.L61:
 1177 0066 00BF     		.align	2
 1178              	.L60:
 1179 0068 00000140 		.word	1073807360
 1180              		.cfi_endproc
 1181              	.LFE138:
 1183              		.section	.text.TIM_OC2Init,"ax",%progbits
 1184              		.align	2
 1185              		.global	TIM_OC2Init
 1186              		.thumb
 1187              		.thumb_func
 1189              	TIM_OC2Init:
 1190              	.LFB139:
 755:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1191              		.loc 1 755 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              		@ link register save eliminated.
 1196              	.LVL162:
 1197 0000 30B4     		push	{r4, r5}
 1198              	.LCFI11:
 1199              		.cfi_def_cfa_offset 8
 1200              		.cfi_offset 4, -8
 1201              		.cfi_offset 5, -4
 1202              	.LVL163:
 765:FWLIB/src/stm32f4xx_tim.c ****   
 1203              		.loc 1 765 0
 1204 0002 038C     		ldrh	r3, [r0, #32]
 1205 0004 9BB2     		uxth	r3, r3
 1206 0006 23F01003 		bic	r3, r3, #16
 1207 000a 9BB2     		uxth	r3, r3
 1208 000c 0384     		strh	r3, [r0, #32]	@ movhi
 768:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 1209              		.loc 1 768 0
 1210 000e 028C     		ldrh	r2, [r0, #32]
 1211 0010 92B2     		uxth	r2, r2
 1212              	.LVL164:
 770:FWLIB/src/stm32f4xx_tim.c ****   
 1213              		.loc 1 770 0
 1214 0012 8588     		ldrh	r5, [r0, #4]
 1215 0014 ADB2     		uxth	r5, r5
 1216              	.LVL165:
 773:FWLIB/src/stm32f4xx_tim.c ****     
 1217              		.loc 1 773 0
 1218 0016 048B     		ldrh	r4, [r0, #24]
 1219 0018 A4B2     		uxth	r4, r4
 1220              	.LVL166:
 777:FWLIB/src/stm32f4xx_tim.c ****   
 1221              		.loc 1 777 0
 1222 001a 24F4E644 		bic	r4, r4, #29440
 1223              	.LVL167:
 780:FWLIB/src/stm32f4xx_tim.c ****   
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 83


 1224              		.loc 1 780 0
 1225 001e 0B88     		ldrh	r3, [r1]
 1226 0020 1B02     		lsls	r3, r3, #8
 1227 0022 9BB2     		uxth	r3, r3
 1228 0024 1C43     		orrs	r4, r4, r3
 1229              	.LVL168:
 783:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 1230              		.loc 1 783 0
 1231 0026 22F02002 		bic	r2, r2, #32
 1232              	.LVL169:
 785:FWLIB/src/stm32f4xx_tim.c ****   
 1233              		.loc 1 785 0
 1234 002a 8B89     		ldrh	r3, [r1, #12]
 1235 002c 1B01     		lsls	r3, r3, #4
 1236 002e 9BB2     		uxth	r3, r3
 1237 0030 1A43     		orrs	r2, r2, r3
 1238              	.LVL170:
 788:FWLIB/src/stm32f4xx_tim.c ****     
 1239              		.loc 1 788 0
 1240 0032 4B88     		ldrh	r3, [r1, #2]
 1241 0034 1B01     		lsls	r3, r3, #4
 1242 0036 9BB2     		uxth	r3, r3
 1243 0038 1343     		orrs	r3, r3, r2
 1244              	.LVL171:
 790:FWLIB/src/stm32f4xx_tim.c ****   {
 1245              		.loc 1 790 0
 1246 003a 124A     		ldr	r2, .L66
 1247 003c 9042     		cmp	r0, r2
 1248 003e 03D0     		beq	.L63
 790:FWLIB/src/stm32f4xx_tim.c ****   {
 1249              		.loc 1 790 0 is_stmt 0 discriminator 1
 1250 0040 02F58062 		add	r2, r2, #1024
 1251 0044 9042     		cmp	r0, r2
 1252 0046 15D1     		bne	.L64
 1253              	.L63:
 798:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 1254              		.loc 1 798 0 is_stmt 1
 1255 0048 23F08003 		bic	r3, r3, #128
 1256              	.LVL172:
 800:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 1257              		.loc 1 800 0
 1258 004c CA89     		ldrh	r2, [r1, #14]
 1259 004e 1201     		lsls	r2, r2, #4
 1260 0050 92B2     		uxth	r2, r2
 1261 0052 1343     		orrs	r3, r3, r2
 1262              	.LVL173:
 802:FWLIB/src/stm32f4xx_tim.c ****     
 1263              		.loc 1 802 0
 1264 0054 23F04002 		bic	r2, r3, #64
 1265              	.LVL174:
 805:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1266              		.loc 1 805 0
 1267 0058 8B88     		ldrh	r3, [r1, #4]
 1268 005a 1B01     		lsls	r3, r3, #4
 1269 005c 9BB2     		uxth	r3, r3
 1270 005e 1343     		orrs	r3, r3, r2
 1271              	.LVL175:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 84


 808:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 1272              		.loc 1 808 0
 1273 0060 25F44065 		bic	r5, r5, #3072
 1274              	.LVL176:
 810:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 1275              		.loc 1 810 0
 1276 0064 0A8A     		ldrh	r2, [r1, #16]
 1277 0066 9200     		lsls	r2, r2, #2
 1278 0068 92B2     		uxth	r2, r2
 1279 006a 2A43     		orrs	r2, r2, r5
 1280              	.LVL177:
 812:FWLIB/src/stm32f4xx_tim.c ****   }
 1281              		.loc 1 812 0
 1282 006c 4D8A     		ldrh	r5, [r1, #18]
 1283 006e AD00     		lsls	r5, r5, #2
 1284 0070 ADB2     		uxth	r5, r5
 1285 0072 1543     		orrs	r5, r5, r2
 1286              	.LVL178:
 1287              	.L64:
 815:FWLIB/src/stm32f4xx_tim.c ****   
 1288              		.loc 1 815 0
 1289 0074 8580     		strh	r5, [r0, #4]	@ movhi
 818:FWLIB/src/stm32f4xx_tim.c ****   
 1290              		.loc 1 818 0
 1291 0076 0483     		strh	r4, [r0, #24]	@ movhi
 821:FWLIB/src/stm32f4xx_tim.c ****   
 1292              		.loc 1 821 0
 1293 0078 8A68     		ldr	r2, [r1, #8]
 1294 007a 8263     		str	r2, [r0, #56]
 824:FWLIB/src/stm32f4xx_tim.c **** }
 1295              		.loc 1 824 0
 1296 007c 0384     		strh	r3, [r0, #32]	@ movhi
 825:FWLIB/src/stm32f4xx_tim.c **** 
 1297              		.loc 1 825 0
 1298 007e 30BC     		pop	{r4, r5}
 1299              	.LCFI12:
 1300              		.cfi_restore 5
 1301              		.cfi_restore 4
 1302              		.cfi_def_cfa_offset 0
 1303              	.LVL179:
 1304 0080 7047     		bx	lr
 1305              	.L67:
 1306 0082 00BF     		.align	2
 1307              	.L66:
 1308 0084 00000140 		.word	1073807360
 1309              		.cfi_endproc
 1310              	.LFE139:
 1312              		.section	.text.TIM_OC3Init,"ax",%progbits
 1313              		.align	2
 1314              		.global	TIM_OC3Init
 1315              		.thumb
 1316              		.thumb_func
 1318              	TIM_OC3Init:
 1319              	.LFB140:
 836:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1320              		.loc 1 836 0
 1321              		.cfi_startproc
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 85


 1322              		@ args = 0, pretend = 0, frame = 0
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324              		@ link register save eliminated.
 1325              	.LVL180:
 1326 0000 30B4     		push	{r4, r5}
 1327              	.LCFI13:
 1328              		.cfi_def_cfa_offset 8
 1329              		.cfi_offset 4, -8
 1330              		.cfi_offset 5, -4
 1331              	.LVL181:
 846:FWLIB/src/stm32f4xx_tim.c ****   
 1332              		.loc 1 846 0
 1333 0002 038C     		ldrh	r3, [r0, #32]
 1334 0004 9BB2     		uxth	r3, r3
 1335 0006 23F48073 		bic	r3, r3, #256
 1336 000a 9BB2     		uxth	r3, r3
 1337 000c 0384     		strh	r3, [r0, #32]	@ movhi
 849:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 1338              		.loc 1 849 0
 1339 000e 028C     		ldrh	r2, [r0, #32]
 1340 0010 92B2     		uxth	r2, r2
 1341              	.LVL182:
 851:FWLIB/src/stm32f4xx_tim.c ****   
 1342              		.loc 1 851 0
 1343 0012 8488     		ldrh	r4, [r0, #4]
 1344 0014 A4B2     		uxth	r4, r4
 1345              	.LVL183:
 854:FWLIB/src/stm32f4xx_tim.c ****     
 1346              		.loc 1 854 0
 1347 0016 838B     		ldrh	r3, [r0, #28]
 1348 0018 9BB2     		uxth	r3, r3
 1349              	.LVL184:
 858:FWLIB/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 1350              		.loc 1 858 0
 1351 001a 23F07303 		bic	r3, r3, #115
 1352              	.LVL185:
 860:FWLIB/src/stm32f4xx_tim.c ****   
 1353              		.loc 1 860 0
 1354 001e 0D88     		ldrh	r5, [r1]
 1355 0020 1D43     		orrs	r5, r5, r3
 1356              	.LVL186:
 863:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 1357              		.loc 1 863 0
 1358 0022 22F40072 		bic	r2, r2, #512
 1359              	.LVL187:
 865:FWLIB/src/stm32f4xx_tim.c ****   
 1360              		.loc 1 865 0
 1361 0026 8B89     		ldrh	r3, [r1, #12]
 1362 0028 1B02     		lsls	r3, r3, #8
 1363 002a 9BB2     		uxth	r3, r3
 1364 002c 1A43     		orrs	r2, r2, r3
 1365              	.LVL188:
 868:FWLIB/src/stm32f4xx_tim.c ****     
 1366              		.loc 1 868 0
 1367 002e 4B88     		ldrh	r3, [r1, #2]
 1368 0030 1B02     		lsls	r3, r3, #8
 1369 0032 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 86


 1370 0034 1343     		orrs	r3, r3, r2
 1371              	.LVL189:
 870:FWLIB/src/stm32f4xx_tim.c ****   {
 1372              		.loc 1 870 0
 1373 0036 124A     		ldr	r2, .L72
 1374 0038 9042     		cmp	r0, r2
 1375 003a 03D0     		beq	.L69
 870:FWLIB/src/stm32f4xx_tim.c ****   {
 1376              		.loc 1 870 0 is_stmt 0 discriminator 1
 1377 003c 02F58062 		add	r2, r2, #1024
 1378 0040 9042     		cmp	r0, r2
 1379 0042 15D1     		bne	.L70
 1380              	.L69:
 878:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 1381              		.loc 1 878 0 is_stmt 1
 1382 0044 23F40063 		bic	r3, r3, #2048
 1383              	.LVL190:
 880:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 1384              		.loc 1 880 0
 1385 0048 CA89     		ldrh	r2, [r1, #14]
 1386 004a 1202     		lsls	r2, r2, #8
 1387 004c 92B2     		uxth	r2, r2
 1388 004e 1343     		orrs	r3, r3, r2
 1389              	.LVL191:
 882:FWLIB/src/stm32f4xx_tim.c ****     
 1390              		.loc 1 882 0
 1391 0050 23F48062 		bic	r2, r3, #1024
 1392              	.LVL192:
 885:FWLIB/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1393              		.loc 1 885 0
 1394 0054 8B88     		ldrh	r3, [r1, #4]
 1395 0056 1B02     		lsls	r3, r3, #8
 1396 0058 9BB2     		uxth	r3, r3
 1397 005a 1343     		orrs	r3, r3, r2
 1398              	.LVL193:
 888:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 1399              		.loc 1 888 0
 1400 005c 24F44054 		bic	r4, r4, #12288
 1401              	.LVL194:
 890:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 1402              		.loc 1 890 0
 1403 0060 0A8A     		ldrh	r2, [r1, #16]
 1404 0062 1201     		lsls	r2, r2, #4
 1405 0064 92B2     		uxth	r2, r2
 1406 0066 2243     		orrs	r2, r2, r4
 1407              	.LVL195:
 892:FWLIB/src/stm32f4xx_tim.c ****   }
 1408              		.loc 1 892 0
 1409 0068 4C8A     		ldrh	r4, [r1, #18]
 1410 006a 2401     		lsls	r4, r4, #4
 1411 006c A4B2     		uxth	r4, r4
 1412 006e 1443     		orrs	r4, r4, r2
 1413              	.LVL196:
 1414              	.L70:
 895:FWLIB/src/stm32f4xx_tim.c ****   
 1415              		.loc 1 895 0
 1416 0070 8480     		strh	r4, [r0, #4]	@ movhi
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 87


 898:FWLIB/src/stm32f4xx_tim.c ****   
 1417              		.loc 1 898 0
 1418 0072 8583     		strh	r5, [r0, #28]	@ movhi
 901:FWLIB/src/stm32f4xx_tim.c ****   
 1419              		.loc 1 901 0
 1420 0074 8A68     		ldr	r2, [r1, #8]
 1421 0076 C263     		str	r2, [r0, #60]
 904:FWLIB/src/stm32f4xx_tim.c **** }
 1422              		.loc 1 904 0
 1423 0078 0384     		strh	r3, [r0, #32]	@ movhi
 905:FWLIB/src/stm32f4xx_tim.c **** 
 1424              		.loc 1 905 0
 1425 007a 30BC     		pop	{r4, r5}
 1426              	.LCFI14:
 1427              		.cfi_restore 5
 1428              		.cfi_restore 4
 1429              		.cfi_def_cfa_offset 0
 1430              	.LVL197:
 1431 007c 7047     		bx	lr
 1432              	.L73:
 1433 007e 00BF     		.align	2
 1434              	.L72:
 1435 0080 00000140 		.word	1073807360
 1436              		.cfi_endproc
 1437              	.LFE140:
 1439              		.section	.text.TIM_OC4Init,"ax",%progbits
 1440              		.align	2
 1441              		.global	TIM_OC4Init
 1442              		.thumb
 1443              		.thumb_func
 1445              	TIM_OC4Init:
 1446              	.LFB141:
 916:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1447              		.loc 1 916 0
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 0
 1450              		@ frame_needed = 0, uses_anonymous_args = 0
 1451              		@ link register save eliminated.
 1452              	.LVL198:
 1453 0000 30B4     		push	{r4, r5}
 1454              	.LCFI15:
 1455              		.cfi_def_cfa_offset 8
 1456              		.cfi_offset 4, -8
 1457              		.cfi_offset 5, -4
 1458              	.LVL199:
 926:FWLIB/src/stm32f4xx_tim.c ****   
 1459              		.loc 1 926 0
 1460 0002 038C     		ldrh	r3, [r0, #32]
 1461 0004 9BB2     		uxth	r3, r3
 1462 0006 23F48053 		bic	r3, r3, #4096
 1463 000a 9BB2     		uxth	r3, r3
 1464 000c 0384     		strh	r3, [r0, #32]	@ movhi
 929:FWLIB/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 1465              		.loc 1 929 0
 1466 000e 048C     		ldrh	r4, [r0, #32]
 1467 0010 A4B2     		uxth	r4, r4
 1468              	.LVL200:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 88


 931:FWLIB/src/stm32f4xx_tim.c ****   
 1469              		.loc 1 931 0
 1470 0012 8588     		ldrh	r5, [r0, #4]
 1471 0014 ADB2     		uxth	r5, r5
 1472              	.LVL201:
 934:FWLIB/src/stm32f4xx_tim.c ****     
 1473              		.loc 1 934 0
 1474 0016 828B     		ldrh	r2, [r0, #28]
 1475 0018 92B2     		uxth	r2, r2
 1476              	.LVL202:
 938:FWLIB/src/stm32f4xx_tim.c ****   
 1477              		.loc 1 938 0
 1478 001a 22F4E642 		bic	r2, r2, #29440
 1479              	.LVL203:
 941:FWLIB/src/stm32f4xx_tim.c ****   
 1480              		.loc 1 941 0
 1481 001e 0B88     		ldrh	r3, [r1]
 1482 0020 1B02     		lsls	r3, r3, #8
 1483 0022 9BB2     		uxth	r3, r3
 1484 0024 1A43     		orrs	r2, r2, r3
 1485              	.LVL204:
 944:FWLIB/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 1486              		.loc 1 944 0
 1487 0026 24F40054 		bic	r4, r4, #8192
 1488              	.LVL205:
 946:FWLIB/src/stm32f4xx_tim.c ****   
 1489              		.loc 1 946 0
 1490 002a 8B89     		ldrh	r3, [r1, #12]
 1491 002c 1B03     		lsls	r3, r3, #12
 1492 002e 9BB2     		uxth	r3, r3
 1493 0030 1C43     		orrs	r4, r4, r3
 1494              	.LVL206:
 949:FWLIB/src/stm32f4xx_tim.c ****   
 1495              		.loc 1 949 0
 1496 0032 4B88     		ldrh	r3, [r1, #2]
 1497 0034 1B03     		lsls	r3, r3, #12
 1498 0036 9BB2     		uxth	r3, r3
 1499 0038 2343     		orrs	r3, r3, r4
 1500              	.LVL207:
 951:FWLIB/src/stm32f4xx_tim.c ****   {
 1501              		.loc 1 951 0
 1502 003a 0A4C     		ldr	r4, .L78
 1503 003c A042     		cmp	r0, r4
 1504 003e 03D0     		beq	.L75
 951:FWLIB/src/stm32f4xx_tim.c ****   {
 1505              		.loc 1 951 0 is_stmt 0 discriminator 1
 1506 0040 04F58064 		add	r4, r4, #1024
 1507 0044 A042     		cmp	r0, r4
 1508 0046 05D1     		bne	.L76
 1509              	.L75:
 955:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 1510              		.loc 1 955 0 is_stmt 1
 1511 0048 25F48045 		bic	r5, r5, #16384
 1512              	.LVL208:
 957:FWLIB/src/stm32f4xx_tim.c ****   }
 1513              		.loc 1 957 0
 1514 004c 0C8A     		ldrh	r4, [r1, #16]
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 89


 1515 004e A401     		lsls	r4, r4, #6
 1516 0050 A4B2     		uxth	r4, r4
 1517 0052 2543     		orrs	r5, r5, r4
 1518              	.LVL209:
 1519              	.L76:
 960:FWLIB/src/stm32f4xx_tim.c ****   
 1520              		.loc 1 960 0
 1521 0054 8580     		strh	r5, [r0, #4]	@ movhi
 963:FWLIB/src/stm32f4xx_tim.c ****     
 1522              		.loc 1 963 0
 1523 0056 8283     		strh	r2, [r0, #28]	@ movhi
 966:FWLIB/src/stm32f4xx_tim.c ****   
 1524              		.loc 1 966 0
 1525 0058 8A68     		ldr	r2, [r1, #8]
 1526              	.LVL210:
 1527 005a 0264     		str	r2, [r0, #64]
 1528              	.LVL211:
 969:FWLIB/src/stm32f4xx_tim.c **** }
 1529              		.loc 1 969 0
 1530 005c 0384     		strh	r3, [r0, #32]	@ movhi
 970:FWLIB/src/stm32f4xx_tim.c **** 
 1531              		.loc 1 970 0
 1532 005e 30BC     		pop	{r4, r5}
 1533              	.LCFI16:
 1534              		.cfi_restore 5
 1535              		.cfi_restore 4
 1536              		.cfi_def_cfa_offset 0
 1537              	.LVL212:
 1538 0060 7047     		bx	lr
 1539              	.L79:
 1540 0062 00BF     		.align	2
 1541              	.L78:
 1542 0064 00000140 		.word	1073807360
 1543              		.cfi_endproc
 1544              	.LFE141:
 1546              		.section	.text.TIM_OCStructInit,"ax",%progbits
 1547              		.align	2
 1548              		.global	TIM_OCStructInit
 1549              		.thumb
 1550              		.thumb_func
 1552              	TIM_OCStructInit:
 1553              	.LFB142:
 979:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 1554              		.loc 1 979 0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 0
 1557              		@ frame_needed = 0, uses_anonymous_args = 0
 1558              		@ link register save eliminated.
 1559              	.LVL213:
 981:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1560              		.loc 1 981 0
 1561 0000 0023     		movs	r3, #0
 1562 0002 0380     		strh	r3, [r0]	@ movhi
 982:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1563              		.loc 1 982 0
 1564 0004 4380     		strh	r3, [r0, #2]	@ movhi
 983:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 90


 1565              		.loc 1 983 0
 1566 0006 8380     		strh	r3, [r0, #4]	@ movhi
 984:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1567              		.loc 1 984 0
 1568 0008 8360     		str	r3, [r0, #8]
 985:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1569              		.loc 1 985 0
 1570 000a 8381     		strh	r3, [r0, #12]	@ movhi
 986:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1571              		.loc 1 986 0
 1572 000c C381     		strh	r3, [r0, #14]	@ movhi
 987:FWLIB/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1573              		.loc 1 987 0
 1574 000e 0382     		strh	r3, [r0, #16]	@ movhi
 988:FWLIB/src/stm32f4xx_tim.c **** }
 1575              		.loc 1 988 0
 1576 0010 4382     		strh	r3, [r0, #18]	@ movhi
 1577 0012 7047     		bx	lr
 1578              		.cfi_endproc
 1579              	.LFE142:
 1581              		.section	.text.TIM_SelectOCxM,"ax",%progbits
 1582              		.align	2
 1583              		.global	TIM_SelectOCxM
 1584              		.thumb
 1585              		.thumb_func
 1587              	TIM_SelectOCxM:
 1588              	.LFB143:
1015:FWLIB/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
 1589              		.loc 1 1015 0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 0
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 1593              		@ link register save eliminated.
 1594              	.LVL214:
 1595 0000 30B4     		push	{r4, r5}
 1596              	.LCFI17:
 1597              		.cfi_def_cfa_offset 8
 1598              		.cfi_offset 4, -8
 1599              		.cfi_offset 5, -4
 1600              	.LVL215:
1025:FWLIB/src/stm32f4xx_tim.c **** 
 1601              		.loc 1 1025 0
 1602 0002 00F11804 		add	r4, r0, #24
 1603              	.LVL216:
1027:FWLIB/src/stm32f4xx_tim.c **** 
 1604              		.loc 1 1027 0
 1605 0006 0123     		movs	r3, #1
 1606 0008 8B40     		lsls	r3, r3, r1
 1607 000a 9BB2     		uxth	r3, r3
 1608              	.LVL217:
1030:FWLIB/src/stm32f4xx_tim.c **** 
 1609              		.loc 1 1030 0
 1610 000c 058C     		ldrh	r5, [r0, #32]
 1611 000e DB43     		mvns	r3, r3
 1612              	.LVL218:
 1613 0010 9BB2     		uxth	r3, r3
 1614              	.LVL219:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 91


 1615 0012 2B40     		ands	r3, r3, r5
 1616 0014 0384     		strh	r3, [r0, #32]	@ movhi
1032:FWLIB/src/stm32f4xx_tim.c ****   {
 1617              		.loc 1 1032 0
 1618 0016 09B1     		cbz	r1, .L82
1032:FWLIB/src/stm32f4xx_tim.c ****   {
 1619              		.loc 1 1032 0 is_stmt 0 discriminator 1
 1620 0018 0829     		cmp	r1, #8
 1621 001a 0AD1     		bne	.L83
 1622              	.L82:
1034:FWLIB/src/stm32f4xx_tim.c **** 
 1623              		.loc 1 1034 0 is_stmt 1
 1624 001c 4908     		lsrs	r1, r1, #1
 1625              	.LVL220:
1037:FWLIB/src/stm32f4xx_tim.c ****    
 1626              		.loc 1 1037 0
 1627 001e 0B59     		ldr	r3, [r1, r4]
 1628 0020 23F07003 		bic	r3, r3, #112
 1629 0024 1B04     		lsls	r3, r3, #16
 1630 0026 1B0C     		lsrs	r3, r3, #16
 1631 0028 0B51     		str	r3, [r1, r4]
1040:FWLIB/src/stm32f4xx_tim.c ****   }
 1632              		.loc 1 1040 0
 1633 002a 0B59     		ldr	r3, [r1, r4]
 1634 002c 1A43     		orrs	r2, r2, r3
 1635              	.LVL221:
 1636 002e 0A51     		str	r2, [r1, r4]
 1637 0030 0DE0     		b	.L81
 1638              	.LVL222:
 1639              	.L83:
1044:FWLIB/src/stm32f4xx_tim.c **** 
 1640              		.loc 1 1044 0
 1641 0032 0439     		subs	r1, r1, #4
 1642              	.LVL223:
 1643 0034 C1F34E01 		ubfx	r1, r1, #1, #15
 1644              	.LVL224:
1047:FWLIB/src/stm32f4xx_tim.c ****     
 1645              		.loc 1 1047 0
 1646 0038 0B59     		ldr	r3, [r1, r4]
 1647 003a 23F4E043 		bic	r3, r3, #28672
 1648 003e 1B04     		lsls	r3, r3, #16
 1649 0040 1B0C     		lsrs	r3, r3, #16
 1650 0042 0B51     		str	r3, [r1, r4]
1050:FWLIB/src/stm32f4xx_tim.c ****   }
 1651              		.loc 1 1050 0
 1652 0044 0B59     		ldr	r3, [r1, r4]
 1653 0046 1202     		lsls	r2, r2, #8
 1654              	.LVL225:
 1655 0048 92B2     		uxth	r2, r2
 1656 004a 1A43     		orrs	r2, r2, r3
 1657 004c 0A51     		str	r2, [r1, r4]
 1658              	.LVL226:
 1659              	.L81:
1052:FWLIB/src/stm32f4xx_tim.c **** 
 1660              		.loc 1 1052 0
 1661 004e 30BC     		pop	{r4, r5}
 1662              	.LCFI18:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 92


 1663              		.cfi_restore 5
 1664              		.cfi_restore 4
 1665              		.cfi_def_cfa_offset 0
 1666 0050 7047     		bx	lr
 1667              		.cfi_endproc
 1668              	.LFE143:
 1670 0052 00BF     		.section	.text.TIM_SetCompare1,"ax",%progbits
 1671              		.align	2
 1672              		.global	TIM_SetCompare1
 1673              		.thumb
 1674              		.thumb_func
 1676              	TIM_SetCompare1:
 1677              	.LFB144:
1061:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1678              		.loc 1 1061 0
 1679              		.cfi_startproc
 1680              		@ args = 0, pretend = 0, frame = 0
 1681              		@ frame_needed = 0, uses_anonymous_args = 0
 1682              		@ link register save eliminated.
 1683              	.LVL227:
1066:FWLIB/src/stm32f4xx_tim.c **** }
 1684              		.loc 1 1066 0
 1685 0000 4163     		str	r1, [r0, #52]
 1686 0002 7047     		bx	lr
 1687              		.cfi_endproc
 1688              	.LFE144:
 1690              		.section	.text.TIM_SetCompare2,"ax",%progbits
 1691              		.align	2
 1692              		.global	TIM_SetCompare2
 1693              		.thumb
 1694              		.thumb_func
 1696              	TIM_SetCompare2:
 1697              	.LFB145:
1077:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1698              		.loc 1 1077 0
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 0
 1701              		@ frame_needed = 0, uses_anonymous_args = 0
 1702              		@ link register save eliminated.
 1703              	.LVL228:
1082:FWLIB/src/stm32f4xx_tim.c **** }
 1704              		.loc 1 1082 0
 1705 0000 8163     		str	r1, [r0, #56]
 1706 0002 7047     		bx	lr
 1707              		.cfi_endproc
 1708              	.LFE145:
 1710              		.section	.text.TIM_SetCompare3,"ax",%progbits
 1711              		.align	2
 1712              		.global	TIM_SetCompare3
 1713              		.thumb
 1714              		.thumb_func
 1716              	TIM_SetCompare3:
 1717              	.LFB146:
1092:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1718              		.loc 1 1092 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 93


 1721              		@ frame_needed = 0, uses_anonymous_args = 0
 1722              		@ link register save eliminated.
 1723              	.LVL229:
1097:FWLIB/src/stm32f4xx_tim.c **** }
 1724              		.loc 1 1097 0
 1725 0000 C163     		str	r1, [r0, #60]
 1726 0002 7047     		bx	lr
 1727              		.cfi_endproc
 1728              	.LFE146:
 1730              		.section	.text.TIM_SetCompare4,"ax",%progbits
 1731              		.align	2
 1732              		.global	TIM_SetCompare4
 1733              		.thumb
 1734              		.thumb_func
 1736              	TIM_SetCompare4:
 1737              	.LFB147:
1107:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 1738              		.loc 1 1107 0
 1739              		.cfi_startproc
 1740              		@ args = 0, pretend = 0, frame = 0
 1741              		@ frame_needed = 0, uses_anonymous_args = 0
 1742              		@ link register save eliminated.
 1743              	.LVL230:
1112:FWLIB/src/stm32f4xx_tim.c **** }
 1744              		.loc 1 1112 0
 1745 0000 0164     		str	r1, [r0, #64]
 1746 0002 7047     		bx	lr
 1747              		.cfi_endproc
 1748              	.LFE147:
 1750              		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 1751              		.align	2
 1752              		.global	TIM_ForcedOC1Config
 1753              		.thumb
 1754              		.thumb_func
 1756              	TIM_ForcedOC1Config:
 1757              	.LFB148:
1125:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 1758              		.loc 1 1125 0
 1759              		.cfi_startproc
 1760              		@ args = 0, pretend = 0, frame = 0
 1761              		@ frame_needed = 0, uses_anonymous_args = 0
 1762              		@ link register save eliminated.
 1763              	.LVL231:
1131:FWLIB/src/stm32f4xx_tim.c **** 
 1764              		.loc 1 1131 0
 1765 0000 038B     		ldrh	r3, [r0, #24]
 1766 0002 9BB2     		uxth	r3, r3
 1767              	.LVL232:
1134:FWLIB/src/stm32f4xx_tim.c **** 
 1768              		.loc 1 1134 0
 1769 0004 23F07003 		bic	r3, r3, #112
 1770              	.LVL233:
1137:FWLIB/src/stm32f4xx_tim.c **** 
 1771              		.loc 1 1137 0
 1772 0008 1943     		orrs	r1, r1, r3
 1773              	.LVL234:
1140:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 94


 1774              		.loc 1 1140 0
 1775 000a 0183     		strh	r1, [r0, #24]	@ movhi
 1776 000c 7047     		bx	lr
 1777              		.cfi_endproc
 1778              	.LFE148:
 1780 000e 00BF     		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 1781              		.align	2
 1782              		.global	TIM_ForcedOC2Config
 1783              		.thumb
 1784              		.thumb_func
 1786              	TIM_ForcedOC2Config:
 1787              	.LFB149:
1154:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 1788              		.loc 1 1154 0
 1789              		.cfi_startproc
 1790              		@ args = 0, pretend = 0, frame = 0
 1791              		@ frame_needed = 0, uses_anonymous_args = 0
 1792              		@ link register save eliminated.
 1793              	.LVL235:
1160:FWLIB/src/stm32f4xx_tim.c **** 
 1794              		.loc 1 1160 0
 1795 0000 038B     		ldrh	r3, [r0, #24]
 1796 0002 9BB2     		uxth	r3, r3
 1797              	.LVL236:
1163:FWLIB/src/stm32f4xx_tim.c **** 
 1798              		.loc 1 1163 0
 1799 0004 23F4E043 		bic	r3, r3, #28672
 1800              	.LVL237:
1166:FWLIB/src/stm32f4xx_tim.c **** 
 1801              		.loc 1 1166 0
 1802 0008 0902     		lsls	r1, r1, #8
 1803              	.LVL238:
 1804 000a 89B2     		uxth	r1, r1
 1805 000c 1943     		orrs	r1, r1, r3
 1806              	.LVL239:
1169:FWLIB/src/stm32f4xx_tim.c **** }
 1807              		.loc 1 1169 0
 1808 000e 0183     		strh	r1, [r0, #24]	@ movhi
 1809 0010 7047     		bx	lr
 1810              		.cfi_endproc
 1811              	.LFE149:
 1813 0012 00BF     		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 1814              		.align	2
 1815              		.global	TIM_ForcedOC3Config
 1816              		.thumb
 1817              		.thumb_func
 1819              	TIM_ForcedOC3Config:
 1820              	.LFB150:
1182:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 1821              		.loc 1 1182 0
 1822              		.cfi_startproc
 1823              		@ args = 0, pretend = 0, frame = 0
 1824              		@ frame_needed = 0, uses_anonymous_args = 0
 1825              		@ link register save eliminated.
 1826              	.LVL240:
1189:FWLIB/src/stm32f4xx_tim.c **** 
 1827              		.loc 1 1189 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 95


 1828 0000 838B     		ldrh	r3, [r0, #28]
 1829 0002 9BB2     		uxth	r3, r3
 1830              	.LVL241:
1192:FWLIB/src/stm32f4xx_tim.c **** 
 1831              		.loc 1 1192 0
 1832 0004 23F07003 		bic	r3, r3, #112
 1833              	.LVL242:
1195:FWLIB/src/stm32f4xx_tim.c **** 
 1834              		.loc 1 1195 0
 1835 0008 1943     		orrs	r1, r1, r3
 1836              	.LVL243:
1198:FWLIB/src/stm32f4xx_tim.c **** }
 1837              		.loc 1 1198 0
 1838 000a 8183     		strh	r1, [r0, #28]	@ movhi
 1839 000c 7047     		bx	lr
 1840              		.cfi_endproc
 1841              	.LFE150:
 1843 000e 00BF     		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 1844              		.align	2
 1845              		.global	TIM_ForcedOC4Config
 1846              		.thumb
 1847              		.thumb_func
 1849              	TIM_ForcedOC4Config:
 1850              	.LFB151:
1211:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 1851              		.loc 1 1211 0
 1852              		.cfi_startproc
 1853              		@ args = 0, pretend = 0, frame = 0
 1854              		@ frame_needed = 0, uses_anonymous_args = 0
 1855              		@ link register save eliminated.
 1856              	.LVL244:
1217:FWLIB/src/stm32f4xx_tim.c **** 
 1857              		.loc 1 1217 0
 1858 0000 838B     		ldrh	r3, [r0, #28]
 1859 0002 9BB2     		uxth	r3, r3
 1860              	.LVL245:
1220:FWLIB/src/stm32f4xx_tim.c **** 
 1861              		.loc 1 1220 0
 1862 0004 23F4E043 		bic	r3, r3, #28672
 1863              	.LVL246:
1223:FWLIB/src/stm32f4xx_tim.c **** 
 1864              		.loc 1 1223 0
 1865 0008 0902     		lsls	r1, r1, #8
 1866              	.LVL247:
 1867 000a 89B2     		uxth	r1, r1
 1868 000c 1943     		orrs	r1, r1, r3
 1869              	.LVL248:
1226:FWLIB/src/stm32f4xx_tim.c **** }
 1870              		.loc 1 1226 0
 1871 000e 8183     		strh	r1, [r0, #28]	@ movhi
 1872 0010 7047     		bx	lr
 1873              		.cfi_endproc
 1874              	.LFE151:
 1876 0012 00BF     		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 1877              		.align	2
 1878              		.global	TIM_OC1PreloadConfig
 1879              		.thumb
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 96


 1880              		.thumb_func
 1882              	TIM_OC1PreloadConfig:
 1883              	.LFB152:
1239:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 1884              		.loc 1 1239 0
 1885              		.cfi_startproc
 1886              		@ args = 0, pretend = 0, frame = 0
 1887              		@ frame_needed = 0, uses_anonymous_args = 0
 1888              		@ link register save eliminated.
 1889              	.LVL249:
1246:FWLIB/src/stm32f4xx_tim.c **** 
 1890              		.loc 1 1246 0
 1891 0000 038B     		ldrh	r3, [r0, #24]
 1892 0002 9BB2     		uxth	r3, r3
 1893              	.LVL250:
1249:FWLIB/src/stm32f4xx_tim.c **** 
 1894              		.loc 1 1249 0
 1895 0004 23F00803 		bic	r3, r3, #8
 1896              	.LVL251:
1252:FWLIB/src/stm32f4xx_tim.c **** 
 1897              		.loc 1 1252 0
 1898 0008 1943     		orrs	r1, r1, r3
 1899              	.LVL252:
1255:FWLIB/src/stm32f4xx_tim.c **** }
 1900              		.loc 1 1255 0
 1901 000a 0183     		strh	r1, [r0, #24]	@ movhi
 1902 000c 7047     		bx	lr
 1903              		.cfi_endproc
 1904              	.LFE152:
 1906 000e 00BF     		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 1907              		.align	2
 1908              		.global	TIM_OC2PreloadConfig
 1909              		.thumb
 1910              		.thumb_func
 1912              	TIM_OC2PreloadConfig:
 1913              	.LFB153:
1269:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 1914              		.loc 1 1269 0
 1915              		.cfi_startproc
 1916              		@ args = 0, pretend = 0, frame = 0
 1917              		@ frame_needed = 0, uses_anonymous_args = 0
 1918              		@ link register save eliminated.
 1919              	.LVL253:
1276:FWLIB/src/stm32f4xx_tim.c **** 
 1920              		.loc 1 1276 0
 1921 0000 038B     		ldrh	r3, [r0, #24]
 1922 0002 9BB2     		uxth	r3, r3
 1923              	.LVL254:
1279:FWLIB/src/stm32f4xx_tim.c **** 
 1924              		.loc 1 1279 0
 1925 0004 23F40063 		bic	r3, r3, #2048
 1926              	.LVL255:
1282:FWLIB/src/stm32f4xx_tim.c **** 
 1927              		.loc 1 1282 0
 1928 0008 0902     		lsls	r1, r1, #8
 1929              	.LVL256:
 1930 000a 89B2     		uxth	r1, r1
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 97


 1931 000c 1943     		orrs	r1, r1, r3
 1932              	.LVL257:
1285:FWLIB/src/stm32f4xx_tim.c **** }
 1933              		.loc 1 1285 0
 1934 000e 0183     		strh	r1, [r0, #24]	@ movhi
 1935 0010 7047     		bx	lr
 1936              		.cfi_endproc
 1937              	.LFE153:
 1939 0012 00BF     		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 1940              		.align	2
 1941              		.global	TIM_OC3PreloadConfig
 1942              		.thumb
 1943              		.thumb_func
 1945              	TIM_OC3PreloadConfig:
 1946              	.LFB154:
1298:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 1947              		.loc 1 1298 0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 0
 1950              		@ frame_needed = 0, uses_anonymous_args = 0
 1951              		@ link register save eliminated.
 1952              	.LVL258:
1305:FWLIB/src/stm32f4xx_tim.c **** 
 1953              		.loc 1 1305 0
 1954 0000 838B     		ldrh	r3, [r0, #28]
 1955 0002 9BB2     		uxth	r3, r3
 1956              	.LVL259:
1308:FWLIB/src/stm32f4xx_tim.c **** 
 1957              		.loc 1 1308 0
 1958 0004 23F00803 		bic	r3, r3, #8
 1959              	.LVL260:
1311:FWLIB/src/stm32f4xx_tim.c **** 
 1960              		.loc 1 1311 0
 1961 0008 1943     		orrs	r1, r1, r3
 1962              	.LVL261:
1314:FWLIB/src/stm32f4xx_tim.c **** }
 1963              		.loc 1 1314 0
 1964 000a 8183     		strh	r1, [r0, #28]	@ movhi
 1965 000c 7047     		bx	lr
 1966              		.cfi_endproc
 1967              	.LFE154:
 1969 000e 00BF     		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 1970              		.align	2
 1971              		.global	TIM_OC4PreloadConfig
 1972              		.thumb
 1973              		.thumb_func
 1975              	TIM_OC4PreloadConfig:
 1976              	.LFB155:
1327:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 1977              		.loc 1 1327 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 0
 1980              		@ frame_needed = 0, uses_anonymous_args = 0
 1981              		@ link register save eliminated.
 1982              	.LVL262:
1334:FWLIB/src/stm32f4xx_tim.c **** 
 1983              		.loc 1 1334 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 98


 1984 0000 838B     		ldrh	r3, [r0, #28]
 1985 0002 9BB2     		uxth	r3, r3
 1986              	.LVL263:
1337:FWLIB/src/stm32f4xx_tim.c **** 
 1987              		.loc 1 1337 0
 1988 0004 23F40063 		bic	r3, r3, #2048
 1989              	.LVL264:
1340:FWLIB/src/stm32f4xx_tim.c **** 
 1990              		.loc 1 1340 0
 1991 0008 0902     		lsls	r1, r1, #8
 1992              	.LVL265:
 1993 000a 89B2     		uxth	r1, r1
 1994 000c 1943     		orrs	r1, r1, r3
 1995              	.LVL266:
1343:FWLIB/src/stm32f4xx_tim.c **** }
 1996              		.loc 1 1343 0
 1997 000e 8183     		strh	r1, [r0, #28]	@ movhi
 1998 0010 7047     		bx	lr
 1999              		.cfi_endproc
 2000              	.LFE155:
 2002 0012 00BF     		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 2003              		.align	2
 2004              		.global	TIM_OC1FastConfig
 2005              		.thumb
 2006              		.thumb_func
 2008              	TIM_OC1FastConfig:
 2009              	.LFB156:
1356:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2010              		.loc 1 1356 0
 2011              		.cfi_startproc
 2012              		@ args = 0, pretend = 0, frame = 0
 2013              		@ frame_needed = 0, uses_anonymous_args = 0
 2014              		@ link register save eliminated.
 2015              	.LVL267:
1364:FWLIB/src/stm32f4xx_tim.c **** 
 2016              		.loc 1 1364 0
 2017 0000 038B     		ldrh	r3, [r0, #24]
 2018 0002 9BB2     		uxth	r3, r3
 2019              	.LVL268:
1367:FWLIB/src/stm32f4xx_tim.c **** 
 2020              		.loc 1 1367 0
 2021 0004 23F00403 		bic	r3, r3, #4
 2022              	.LVL269:
1370:FWLIB/src/stm32f4xx_tim.c **** 
 2023              		.loc 1 1370 0
 2024 0008 1943     		orrs	r1, r1, r3
 2025              	.LVL270:
1373:FWLIB/src/stm32f4xx_tim.c **** }
 2026              		.loc 1 1373 0
 2027 000a 0183     		strh	r1, [r0, #24]	@ movhi
 2028 000c 7047     		bx	lr
 2029              		.cfi_endproc
 2030              	.LFE156:
 2032 000e 00BF     		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 2033              		.align	2
 2034              		.global	TIM_OC2FastConfig
 2035              		.thumb
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 99


 2036              		.thumb_func
 2038              	TIM_OC2FastConfig:
 2039              	.LFB157:
1387:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2040              		.loc 1 1387 0
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 0
 2043              		@ frame_needed = 0, uses_anonymous_args = 0
 2044              		@ link register save eliminated.
 2045              	.LVL271:
1395:FWLIB/src/stm32f4xx_tim.c **** 
 2046              		.loc 1 1395 0
 2047 0000 038B     		ldrh	r3, [r0, #24]
 2048 0002 9BB2     		uxth	r3, r3
 2049              	.LVL272:
1398:FWLIB/src/stm32f4xx_tim.c **** 
 2050              		.loc 1 1398 0
 2051 0004 23F48063 		bic	r3, r3, #1024
 2052              	.LVL273:
1401:FWLIB/src/stm32f4xx_tim.c **** 
 2053              		.loc 1 1401 0
 2054 0008 0902     		lsls	r1, r1, #8
 2055              	.LVL274:
 2056 000a 89B2     		uxth	r1, r1
 2057 000c 1943     		orrs	r1, r1, r3
 2058              	.LVL275:
1404:FWLIB/src/stm32f4xx_tim.c **** }
 2059              		.loc 1 1404 0
 2060 000e 0183     		strh	r1, [r0, #24]	@ movhi
 2061 0010 7047     		bx	lr
 2062              		.cfi_endproc
 2063              	.LFE157:
 2065 0012 00BF     		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 2066              		.align	2
 2067              		.global	TIM_OC3FastConfig
 2068              		.thumb
 2069              		.thumb_func
 2071              	TIM_OC3FastConfig:
 2072              	.LFB158:
1417:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2073              		.loc 1 1417 0
 2074              		.cfi_startproc
 2075              		@ args = 0, pretend = 0, frame = 0
 2076              		@ frame_needed = 0, uses_anonymous_args = 0
 2077              		@ link register save eliminated.
 2078              	.LVL276:
1425:FWLIB/src/stm32f4xx_tim.c **** 
 2079              		.loc 1 1425 0
 2080 0000 838B     		ldrh	r3, [r0, #28]
 2081 0002 9BB2     		uxth	r3, r3
 2082              	.LVL277:
1428:FWLIB/src/stm32f4xx_tim.c **** 
 2083              		.loc 1 1428 0
 2084 0004 23F00403 		bic	r3, r3, #4
 2085              	.LVL278:
1431:FWLIB/src/stm32f4xx_tim.c **** 
 2086              		.loc 1 1431 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 100


 2087 0008 1943     		orrs	r1, r1, r3
 2088              	.LVL279:
1434:FWLIB/src/stm32f4xx_tim.c **** }
 2089              		.loc 1 1434 0
 2090 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2091 000c 7047     		bx	lr
 2092              		.cfi_endproc
 2093              	.LFE158:
 2095 000e 00BF     		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 2096              		.align	2
 2097              		.global	TIM_OC4FastConfig
 2098              		.thumb
 2099              		.thumb_func
 2101              	TIM_OC4FastConfig:
 2102              	.LFB159:
1447:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2103              		.loc 1 1447 0
 2104              		.cfi_startproc
 2105              		@ args = 0, pretend = 0, frame = 0
 2106              		@ frame_needed = 0, uses_anonymous_args = 0
 2107              		@ link register save eliminated.
 2108              	.LVL280:
1455:FWLIB/src/stm32f4xx_tim.c **** 
 2109              		.loc 1 1455 0
 2110 0000 838B     		ldrh	r3, [r0, #28]
 2111 0002 9BB2     		uxth	r3, r3
 2112              	.LVL281:
1458:FWLIB/src/stm32f4xx_tim.c **** 
 2113              		.loc 1 1458 0
 2114 0004 23F48063 		bic	r3, r3, #1024
 2115              	.LVL282:
1461:FWLIB/src/stm32f4xx_tim.c **** 
 2116              		.loc 1 1461 0
 2117 0008 0902     		lsls	r1, r1, #8
 2118              	.LVL283:
 2119 000a 89B2     		uxth	r1, r1
 2120 000c 1943     		orrs	r1, r1, r3
 2121              	.LVL284:
1464:FWLIB/src/stm32f4xx_tim.c **** }
 2122              		.loc 1 1464 0
 2123 000e 8183     		strh	r1, [r0, #28]	@ movhi
 2124 0010 7047     		bx	lr
 2125              		.cfi_endproc
 2126              	.LFE159:
 2128 0012 00BF     		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 2129              		.align	2
 2130              		.global	TIM_ClearOC1Ref
 2131              		.thumb
 2132              		.thumb_func
 2134              	TIM_ClearOC1Ref:
 2135              	.LFB160:
1477:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2136              		.loc 1 1477 0
 2137              		.cfi_startproc
 2138              		@ args = 0, pretend = 0, frame = 0
 2139              		@ frame_needed = 0, uses_anonymous_args = 0
 2140              		@ link register save eliminated.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 101


 2141              	.LVL285:
1484:FWLIB/src/stm32f4xx_tim.c **** 
 2142              		.loc 1 1484 0
 2143 0000 038B     		ldrh	r3, [r0, #24]
 2144 0002 9BB2     		uxth	r3, r3
 2145              	.LVL286:
1487:FWLIB/src/stm32f4xx_tim.c **** 
 2146              		.loc 1 1487 0
 2147 0004 23F08003 		bic	r3, r3, #128
 2148              	.LVL287:
1490:FWLIB/src/stm32f4xx_tim.c **** 
 2149              		.loc 1 1490 0
 2150 0008 1943     		orrs	r1, r1, r3
 2151              	.LVL288:
1493:FWLIB/src/stm32f4xx_tim.c **** }
 2152              		.loc 1 1493 0
 2153 000a 0183     		strh	r1, [r0, #24]	@ movhi
 2154 000c 7047     		bx	lr
 2155              		.cfi_endproc
 2156              	.LFE160:
 2158 000e 00BF     		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 2159              		.align	2
 2160              		.global	TIM_ClearOC2Ref
 2161              		.thumb
 2162              		.thumb_func
 2164              	TIM_ClearOC2Ref:
 2165              	.LFB161:
1507:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2166              		.loc 1 1507 0
 2167              		.cfi_startproc
 2168              		@ args = 0, pretend = 0, frame = 0
 2169              		@ frame_needed = 0, uses_anonymous_args = 0
 2170              		@ link register save eliminated.
 2171              	.LVL289:
1514:FWLIB/src/stm32f4xx_tim.c **** 
 2172              		.loc 1 1514 0
 2173 0000 038B     		ldrh	r3, [r0, #24]
 2174              	.LVL290:
1517:FWLIB/src/stm32f4xx_tim.c **** 
 2175              		.loc 1 1517 0
 2176 0002 C3F30E03 		ubfx	r3, r3, #0, #15
 2177              	.LVL291:
1520:FWLIB/src/stm32f4xx_tim.c **** 
 2178              		.loc 1 1520 0
 2179 0006 0902     		lsls	r1, r1, #8
 2180              	.LVL292:
 2181 0008 89B2     		uxth	r1, r1
 2182 000a 1943     		orrs	r1, r1, r3
 2183              	.LVL293:
1523:FWLIB/src/stm32f4xx_tim.c **** }
 2184              		.loc 1 1523 0
 2185 000c 0183     		strh	r1, [r0, #24]	@ movhi
 2186 000e 7047     		bx	lr
 2187              		.cfi_endproc
 2188              	.LFE161:
 2190              		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 2191              		.align	2
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 102


 2192              		.global	TIM_ClearOC3Ref
 2193              		.thumb
 2194              		.thumb_func
 2196              	TIM_ClearOC3Ref:
 2197              	.LFB162:
1536:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2198              		.loc 1 1536 0
 2199              		.cfi_startproc
 2200              		@ args = 0, pretend = 0, frame = 0
 2201              		@ frame_needed = 0, uses_anonymous_args = 0
 2202              		@ link register save eliminated.
 2203              	.LVL294:
1543:FWLIB/src/stm32f4xx_tim.c **** 
 2204              		.loc 1 1543 0
 2205 0000 838B     		ldrh	r3, [r0, #28]
 2206 0002 9BB2     		uxth	r3, r3
 2207              	.LVL295:
1546:FWLIB/src/stm32f4xx_tim.c **** 
 2208              		.loc 1 1546 0
 2209 0004 23F08003 		bic	r3, r3, #128
 2210              	.LVL296:
1549:FWLIB/src/stm32f4xx_tim.c **** 
 2211              		.loc 1 1549 0
 2212 0008 1943     		orrs	r1, r1, r3
 2213              	.LVL297:
1552:FWLIB/src/stm32f4xx_tim.c **** }
 2214              		.loc 1 1552 0
 2215 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2216 000c 7047     		bx	lr
 2217              		.cfi_endproc
 2218              	.LFE162:
 2220 000e 00BF     		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 2221              		.align	2
 2222              		.global	TIM_ClearOC4Ref
 2223              		.thumb
 2224              		.thumb_func
 2226              	TIM_ClearOC4Ref:
 2227              	.LFB163:
1565:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2228              		.loc 1 1565 0
 2229              		.cfi_startproc
 2230              		@ args = 0, pretend = 0, frame = 0
 2231              		@ frame_needed = 0, uses_anonymous_args = 0
 2232              		@ link register save eliminated.
 2233              	.LVL298:
1572:FWLIB/src/stm32f4xx_tim.c **** 
 2234              		.loc 1 1572 0
 2235 0000 838B     		ldrh	r3, [r0, #28]
 2236              	.LVL299:
1575:FWLIB/src/stm32f4xx_tim.c **** 
 2237              		.loc 1 1575 0
 2238 0002 C3F30E03 		ubfx	r3, r3, #0, #15
 2239              	.LVL300:
1578:FWLIB/src/stm32f4xx_tim.c **** 
 2240              		.loc 1 1578 0
 2241 0006 0902     		lsls	r1, r1, #8
 2242              	.LVL301:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 103


 2243 0008 89B2     		uxth	r1, r1
 2244 000a 1943     		orrs	r1, r1, r3
 2245              	.LVL302:
1581:FWLIB/src/stm32f4xx_tim.c **** }
 2246              		.loc 1 1581 0
 2247 000c 8183     		strh	r1, [r0, #28]	@ movhi
 2248 000e 7047     		bx	lr
 2249              		.cfi_endproc
 2250              	.LFE163:
 2252              		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 2253              		.align	2
 2254              		.global	TIM_OC1PolarityConfig
 2255              		.thumb
 2256              		.thumb_func
 2258              	TIM_OC1PolarityConfig:
 2259              	.LFB164:
1594:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2260              		.loc 1 1594 0
 2261              		.cfi_startproc
 2262              		@ args = 0, pretend = 0, frame = 0
 2263              		@ frame_needed = 0, uses_anonymous_args = 0
 2264              		@ link register save eliminated.
 2265              	.LVL303:
1601:FWLIB/src/stm32f4xx_tim.c **** 
 2266              		.loc 1 1601 0
 2267 0000 038C     		ldrh	r3, [r0, #32]
 2268 0002 9BB2     		uxth	r3, r3
 2269              	.LVL304:
1604:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 2270              		.loc 1 1604 0
 2271 0004 23F00203 		bic	r3, r3, #2
 2272              	.LVL305:
1605:FWLIB/src/stm32f4xx_tim.c **** 
 2273              		.loc 1 1605 0
 2274 0008 1943     		orrs	r1, r1, r3
 2275              	.LVL306:
1608:FWLIB/src/stm32f4xx_tim.c **** }
 2276              		.loc 1 1608 0
 2277 000a 0184     		strh	r1, [r0, #32]	@ movhi
 2278 000c 7047     		bx	lr
 2279              		.cfi_endproc
 2280              	.LFE164:
 2282 000e 00BF     		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 2283              		.align	2
 2284              		.global	TIM_OC1NPolarityConfig
 2285              		.thumb
 2286              		.thumb_func
 2288              	TIM_OC1NPolarityConfig:
 2289              	.LFB165:
1621:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2290              		.loc 1 1621 0
 2291              		.cfi_startproc
 2292              		@ args = 0, pretend = 0, frame = 0
 2293              		@ frame_needed = 0, uses_anonymous_args = 0
 2294              		@ link register save eliminated.
 2295              	.LVL307:
1627:FWLIB/src/stm32f4xx_tim.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 104


 2296              		.loc 1 1627 0
 2297 0000 038C     		ldrh	r3, [r0, #32]
 2298 0002 9BB2     		uxth	r3, r3
 2299              	.LVL308:
1630:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 2300              		.loc 1 1630 0
 2301 0004 23F00803 		bic	r3, r3, #8
 2302              	.LVL309:
1631:FWLIB/src/stm32f4xx_tim.c **** 
 2303              		.loc 1 1631 0
 2304 0008 1943     		orrs	r1, r1, r3
 2305              	.LVL310:
1634:FWLIB/src/stm32f4xx_tim.c **** }
 2306              		.loc 1 1634 0
 2307 000a 0184     		strh	r1, [r0, #32]	@ movhi
 2308 000c 7047     		bx	lr
 2309              		.cfi_endproc
 2310              	.LFE165:
 2312 000e 00BF     		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 2313              		.align	2
 2314              		.global	TIM_OC2PolarityConfig
 2315              		.thumb
 2316              		.thumb_func
 2318              	TIM_OC2PolarityConfig:
 2319              	.LFB166:
1648:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2320              		.loc 1 1648 0
 2321              		.cfi_startproc
 2322              		@ args = 0, pretend = 0, frame = 0
 2323              		@ frame_needed = 0, uses_anonymous_args = 0
 2324              		@ link register save eliminated.
 2325              	.LVL311:
1655:FWLIB/src/stm32f4xx_tim.c **** 
 2326              		.loc 1 1655 0
 2327 0000 038C     		ldrh	r3, [r0, #32]
 2328 0002 9BB2     		uxth	r3, r3
 2329              	.LVL312:
1658:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 2330              		.loc 1 1658 0
 2331 0004 23F02003 		bic	r3, r3, #32
 2332              	.LVL313:
1659:FWLIB/src/stm32f4xx_tim.c **** 
 2333              		.loc 1 1659 0
 2334 0008 0901     		lsls	r1, r1, #4
 2335              	.LVL314:
 2336 000a 89B2     		uxth	r1, r1
 2337 000c 1943     		orrs	r1, r1, r3
 2338              	.LVL315:
1662:FWLIB/src/stm32f4xx_tim.c **** }
 2339              		.loc 1 1662 0
 2340 000e 0184     		strh	r1, [r0, #32]	@ movhi
 2341 0010 7047     		bx	lr
 2342              		.cfi_endproc
 2343              	.LFE166:
 2345 0012 00BF     		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 2346              		.align	2
 2347              		.global	TIM_OC2NPolarityConfig
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 105


 2348              		.thumb
 2349              		.thumb_func
 2351              	TIM_OC2NPolarityConfig:
 2352              	.LFB167:
1675:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2353              		.loc 1 1675 0
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 0
 2356              		@ frame_needed = 0, uses_anonymous_args = 0
 2357              		@ link register save eliminated.
 2358              	.LVL316:
1682:FWLIB/src/stm32f4xx_tim.c **** 
 2359              		.loc 1 1682 0
 2360 0000 038C     		ldrh	r3, [r0, #32]
 2361 0002 9BB2     		uxth	r3, r3
 2362              	.LVL317:
1685:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 2363              		.loc 1 1685 0
 2364 0004 23F08003 		bic	r3, r3, #128
 2365              	.LVL318:
1686:FWLIB/src/stm32f4xx_tim.c **** 
 2366              		.loc 1 1686 0
 2367 0008 0901     		lsls	r1, r1, #4
 2368              	.LVL319:
 2369 000a 89B2     		uxth	r1, r1
 2370 000c 1943     		orrs	r1, r1, r3
 2371              	.LVL320:
1689:FWLIB/src/stm32f4xx_tim.c **** }
 2372              		.loc 1 1689 0
 2373 000e 0184     		strh	r1, [r0, #32]	@ movhi
 2374 0010 7047     		bx	lr
 2375              		.cfi_endproc
 2376              	.LFE167:
 2378 0012 00BF     		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 2379              		.align	2
 2380              		.global	TIM_OC3PolarityConfig
 2381              		.thumb
 2382              		.thumb_func
 2384              	TIM_OC3PolarityConfig:
 2385              	.LFB168:
1702:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2386              		.loc 1 1702 0
 2387              		.cfi_startproc
 2388              		@ args = 0, pretend = 0, frame = 0
 2389              		@ frame_needed = 0, uses_anonymous_args = 0
 2390              		@ link register save eliminated.
 2391              	.LVL321:
1709:FWLIB/src/stm32f4xx_tim.c **** 
 2392              		.loc 1 1709 0
 2393 0000 038C     		ldrh	r3, [r0, #32]
 2394 0002 9BB2     		uxth	r3, r3
 2395              	.LVL322:
1712:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 2396              		.loc 1 1712 0
 2397 0004 23F40073 		bic	r3, r3, #512
 2398              	.LVL323:
1713:FWLIB/src/stm32f4xx_tim.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 106


 2399              		.loc 1 1713 0
 2400 0008 0902     		lsls	r1, r1, #8
 2401              	.LVL324:
 2402 000a 89B2     		uxth	r1, r1
 2403 000c 1943     		orrs	r1, r1, r3
 2404              	.LVL325:
1716:FWLIB/src/stm32f4xx_tim.c **** }
 2405              		.loc 1 1716 0
 2406 000e 0184     		strh	r1, [r0, #32]	@ movhi
 2407 0010 7047     		bx	lr
 2408              		.cfi_endproc
 2409              	.LFE168:
 2411 0012 00BF     		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 2412              		.align	2
 2413              		.global	TIM_OC3NPolarityConfig
 2414              		.thumb
 2415              		.thumb_func
 2417              	TIM_OC3NPolarityConfig:
 2418              	.LFB169:
1729:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2419              		.loc 1 1729 0
 2420              		.cfi_startproc
 2421              		@ args = 0, pretend = 0, frame = 0
 2422              		@ frame_needed = 0, uses_anonymous_args = 0
 2423              		@ link register save eliminated.
 2424              	.LVL326:
1736:FWLIB/src/stm32f4xx_tim.c **** 
 2425              		.loc 1 1736 0
 2426 0000 038C     		ldrh	r3, [r0, #32]
 2427 0002 9BB2     		uxth	r3, r3
 2428              	.LVL327:
1739:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 2429              		.loc 1 1739 0
 2430 0004 23F40063 		bic	r3, r3, #2048
 2431              	.LVL328:
1740:FWLIB/src/stm32f4xx_tim.c **** 
 2432              		.loc 1 1740 0
 2433 0008 0902     		lsls	r1, r1, #8
 2434              	.LVL329:
 2435 000a 89B2     		uxth	r1, r1
 2436 000c 1943     		orrs	r1, r1, r3
 2437              	.LVL330:
1743:FWLIB/src/stm32f4xx_tim.c **** }
 2438              		.loc 1 1743 0
 2439 000e 0184     		strh	r1, [r0, #32]	@ movhi
 2440 0010 7047     		bx	lr
 2441              		.cfi_endproc
 2442              	.LFE169:
 2444 0012 00BF     		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 2445              		.align	2
 2446              		.global	TIM_OC4PolarityConfig
 2447              		.thumb
 2448              		.thumb_func
 2450              	TIM_OC4PolarityConfig:
 2451              	.LFB170:
1756:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2452              		.loc 1 1756 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 107


 2453              		.cfi_startproc
 2454              		@ args = 0, pretend = 0, frame = 0
 2455              		@ frame_needed = 0, uses_anonymous_args = 0
 2456              		@ link register save eliminated.
 2457              	.LVL331:
1763:FWLIB/src/stm32f4xx_tim.c **** 
 2458              		.loc 1 1763 0
 2459 0000 038C     		ldrh	r3, [r0, #32]
 2460 0002 9BB2     		uxth	r3, r3
 2461              	.LVL332:
1766:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 2462              		.loc 1 1766 0
 2463 0004 23F40053 		bic	r3, r3, #8192
 2464              	.LVL333:
1767:FWLIB/src/stm32f4xx_tim.c **** 
 2465              		.loc 1 1767 0
 2466 0008 0903     		lsls	r1, r1, #12
 2467              	.LVL334:
 2468 000a 89B2     		uxth	r1, r1
 2469 000c 1943     		orrs	r1, r1, r3
 2470              	.LVL335:
1770:FWLIB/src/stm32f4xx_tim.c **** }
 2471              		.loc 1 1770 0
 2472 000e 0184     		strh	r1, [r0, #32]	@ movhi
 2473 0010 7047     		bx	lr
 2474              		.cfi_endproc
 2475              	.LFE170:
 2477 0012 00BF     		.section	.text.TIM_CCxCmd,"ax",%progbits
 2478              		.align	2
 2479              		.global	TIM_CCxCmd
 2480              		.thumb
 2481              		.thumb_func
 2483              	TIM_CCxCmd:
 2484              	.LFB171:
1787:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 2485              		.loc 1 1787 0
 2486              		.cfi_startproc
 2487              		@ args = 0, pretend = 0, frame = 0
 2488              		@ frame_needed = 0, uses_anonymous_args = 0
 2489              		@ link register save eliminated.
 2490              	.LVL336:
 2491 0000 10B4     		push	{r4}
 2492              	.LCFI19:
 2493              		.cfi_def_cfa_offset 4
 2494              		.cfi_offset 4, -4
 2495              	.LVL337:
1795:FWLIB/src/stm32f4xx_tim.c **** 
 2496              		.loc 1 1795 0
 2497 0002 0123     		movs	r3, #1
 2498 0004 8B40     		lsls	r3, r3, r1
 2499 0006 9BB2     		uxth	r3, r3
 2500              	.LVL338:
1798:FWLIB/src/stm32f4xx_tim.c **** 
 2501              		.loc 1 1798 0
 2502 0008 048C     		ldrh	r4, [r0, #32]
 2503 000a DB43     		mvns	r3, r3
 2504              	.LVL339:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 108


 2505 000c 9BB2     		uxth	r3, r3
 2506              	.LVL340:
 2507 000e 2340     		ands	r3, r3, r4
 2508 0010 0384     		strh	r3, [r0, #32]	@ movhi
1801:FWLIB/src/stm32f4xx_tim.c **** }
 2509              		.loc 1 1801 0
 2510 0012 038C     		ldrh	r3, [r0, #32]
 2511 0014 9BB2     		uxth	r3, r3
 2512 0016 8A40     		lsls	r2, r2, r1
 2513              	.LVL341:
 2514 0018 92B2     		uxth	r2, r2
 2515 001a 1A43     		orrs	r2, r2, r3
 2516 001c 0284     		strh	r2, [r0, #32]	@ movhi
1802:FWLIB/src/stm32f4xx_tim.c **** 
 2517              		.loc 1 1802 0
 2518 001e 5DF8044B 		ldr	r4, [sp], #4
 2519              	.LCFI20:
 2520              		.cfi_restore 4
 2521              		.cfi_def_cfa_offset 0
 2522 0022 7047     		bx	lr
 2523              		.cfi_endproc
 2524              	.LFE171:
 2526              		.section	.text.TIM_CCxNCmd,"ax",%progbits
 2527              		.align	2
 2528              		.global	TIM_CCxNCmd
 2529              		.thumb
 2530              		.thumb_func
 2532              	TIM_CCxNCmd:
 2533              	.LFB172:
1817:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 2534              		.loc 1 1817 0
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 0
 2537              		@ frame_needed = 0, uses_anonymous_args = 0
 2538              		@ link register save eliminated.
 2539              	.LVL342:
 2540 0000 10B4     		push	{r4}
 2541              	.LCFI21:
 2542              		.cfi_def_cfa_offset 4
 2543              		.cfi_offset 4, -4
 2544              	.LVL343:
1825:FWLIB/src/stm32f4xx_tim.c **** 
 2545              		.loc 1 1825 0
 2546 0002 0423     		movs	r3, #4
 2547 0004 8B40     		lsls	r3, r3, r1
 2548 0006 9BB2     		uxth	r3, r3
 2549              	.LVL344:
1828:FWLIB/src/stm32f4xx_tim.c **** 
 2550              		.loc 1 1828 0
 2551 0008 048C     		ldrh	r4, [r0, #32]
 2552 000a DB43     		mvns	r3, r3
 2553              	.LVL345:
 2554 000c 9BB2     		uxth	r3, r3
 2555              	.LVL346:
 2556 000e 2340     		ands	r3, r3, r4
 2557 0010 0384     		strh	r3, [r0, #32]	@ movhi
1831:FWLIB/src/stm32f4xx_tim.c **** }
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 109


 2558              		.loc 1 1831 0
 2559 0012 038C     		ldrh	r3, [r0, #32]
 2560 0014 9BB2     		uxth	r3, r3
 2561 0016 8A40     		lsls	r2, r2, r1
 2562              	.LVL347:
 2563 0018 92B2     		uxth	r2, r2
 2564 001a 1A43     		orrs	r2, r2, r3
 2565 001c 0284     		strh	r2, [r0, #32]	@ movhi
1832:FWLIB/src/stm32f4xx_tim.c **** /**
 2566              		.loc 1 1832 0
 2567 001e 5DF8044B 		ldr	r4, [sp], #4
 2568              	.LCFI22:
 2569              		.cfi_restore 4
 2570              		.cfi_def_cfa_offset 0
 2571 0022 7047     		bx	lr
 2572              		.cfi_endproc
 2573              	.LFE172:
 2575              		.section	.text.TIM_ICStructInit,"ax",%progbits
 2576              		.align	2
 2577              		.global	TIM_ICStructInit
 2578              		.thumb
 2579              		.thumb_func
 2581              	TIM_ICStructInit:
 2582              	.LFB174:
1957:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 2583              		.loc 1 1957 0
 2584              		.cfi_startproc
 2585              		@ args = 0, pretend = 0, frame = 0
 2586              		@ frame_needed = 0, uses_anonymous_args = 0
 2587              		@ link register save eliminated.
 2588              	.LVL348:
1959:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 2589              		.loc 1 1959 0
 2590 0000 0023     		movs	r3, #0
 2591 0002 0380     		strh	r3, [r0]	@ movhi
1960:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 2592              		.loc 1 1960 0
 2593 0004 4380     		strh	r3, [r0, #2]	@ movhi
1961:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 2594              		.loc 1 1961 0
 2595 0006 0122     		movs	r2, #1
 2596 0008 8280     		strh	r2, [r0, #4]	@ movhi
1962:FWLIB/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 2597              		.loc 1 1962 0
 2598 000a C380     		strh	r3, [r0, #6]	@ movhi
1963:FWLIB/src/stm32f4xx_tim.c **** }
 2599              		.loc 1 1963 0
 2600 000c 0381     		strh	r3, [r0, #8]	@ movhi
 2601 000e 7047     		bx	lr
 2602              		.cfi_endproc
 2603              	.LFE174:
 2605              		.section	.text.TIM_GetCapture1,"ax",%progbits
 2606              		.align	2
 2607              		.global	TIM_GetCapture1
 2608              		.thumb
 2609              		.thumb_func
 2611              	TIM_GetCapture1:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 110


 2612              	.LFB176:
2033:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2613              		.loc 1 2033 0
 2614              		.cfi_startproc
 2615              		@ args = 0, pretend = 0, frame = 0
 2616              		@ frame_needed = 0, uses_anonymous_args = 0
 2617              		@ link register save eliminated.
 2618              	.LVL349:
2038:FWLIB/src/stm32f4xx_tim.c **** }
 2619              		.loc 1 2038 0
 2620 0000 406B     		ldr	r0, [r0, #52]
 2621              	.LVL350:
2039:FWLIB/src/stm32f4xx_tim.c **** 
 2622              		.loc 1 2039 0
 2623 0002 7047     		bx	lr
 2624              		.cfi_endproc
 2625              	.LFE176:
 2627              		.section	.text.TIM_GetCapture2,"ax",%progbits
 2628              		.align	2
 2629              		.global	TIM_GetCapture2
 2630              		.thumb
 2631              		.thumb_func
 2633              	TIM_GetCapture2:
 2634              	.LFB177:
2048:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2635              		.loc 1 2048 0
 2636              		.cfi_startproc
 2637              		@ args = 0, pretend = 0, frame = 0
 2638              		@ frame_needed = 0, uses_anonymous_args = 0
 2639              		@ link register save eliminated.
 2640              	.LVL351:
2053:FWLIB/src/stm32f4xx_tim.c **** }
 2641              		.loc 1 2053 0
 2642 0000 806B     		ldr	r0, [r0, #56]
 2643              	.LVL352:
2054:FWLIB/src/stm32f4xx_tim.c **** 
 2644              		.loc 1 2054 0
 2645 0002 7047     		bx	lr
 2646              		.cfi_endproc
 2647              	.LFE177:
 2649              		.section	.text.TIM_GetCapture3,"ax",%progbits
 2650              		.align	2
 2651              		.global	TIM_GetCapture3
 2652              		.thumb
 2653              		.thumb_func
 2655              	TIM_GetCapture3:
 2656              	.LFB178:
2062:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2657              		.loc 1 2062 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 0, uses_anonymous_args = 0
 2661              		@ link register save eliminated.
 2662              	.LVL353:
2067:FWLIB/src/stm32f4xx_tim.c **** }
 2663              		.loc 1 2067 0
 2664 0000 C06B     		ldr	r0, [r0, #60]
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 111


 2665              	.LVL354:
2068:FWLIB/src/stm32f4xx_tim.c **** 
 2666              		.loc 1 2068 0
 2667 0002 7047     		bx	lr
 2668              		.cfi_endproc
 2669              	.LFE178:
 2671              		.section	.text.TIM_GetCapture4,"ax",%progbits
 2672              		.align	2
 2673              		.global	TIM_GetCapture4
 2674              		.thumb
 2675              		.thumb_func
 2677              	TIM_GetCapture4:
 2678              	.LFB179:
2076:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2679              		.loc 1 2076 0
 2680              		.cfi_startproc
 2681              		@ args = 0, pretend = 0, frame = 0
 2682              		@ frame_needed = 0, uses_anonymous_args = 0
 2683              		@ link register save eliminated.
 2684              	.LVL355:
2081:FWLIB/src/stm32f4xx_tim.c **** }
 2685              		.loc 1 2081 0
 2686 0000 006C     		ldr	r0, [r0, #64]
 2687              	.LVL356:
2082:FWLIB/src/stm32f4xx_tim.c **** 
 2688              		.loc 1 2082 0
 2689 0002 7047     		bx	lr
 2690              		.cfi_endproc
 2691              	.LFE179:
 2693              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 2694              		.align	2
 2695              		.global	TIM_SetIC1Prescaler
 2696              		.thumb
 2697              		.thumb_func
 2699              	TIM_SetIC1Prescaler:
 2700              	.LFB180:
2096:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2701              		.loc 1 2096 0
 2702              		.cfi_startproc
 2703              		@ args = 0, pretend = 0, frame = 0
 2704              		@ frame_needed = 0, uses_anonymous_args = 0
 2705              		@ link register save eliminated.
 2706              	.LVL357:
2102:FWLIB/src/stm32f4xx_tim.c **** 
 2707              		.loc 1 2102 0
 2708 0000 038B     		ldrh	r3, [r0, #24]
 2709 0002 9BB2     		uxth	r3, r3
 2710 0004 23F00C03 		bic	r3, r3, #12
 2711 0008 9BB2     		uxth	r3, r3
 2712 000a 0383     		strh	r3, [r0, #24]	@ movhi
2105:FWLIB/src/stm32f4xx_tim.c **** }
 2713              		.loc 1 2105 0
 2714 000c 038B     		ldrh	r3, [r0, #24]
 2715 000e 9BB2     		uxth	r3, r3
 2716 0010 1943     		orrs	r1, r1, r3
 2717              	.LVL358:
 2718 0012 0183     		strh	r1, [r0, #24]	@ movhi
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 112


 2719 0014 7047     		bx	lr
 2720              		.cfi_endproc
 2721              	.LFE180:
 2723 0016 00BF     		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 2724              		.align	2
 2725              		.global	TIM_SetIC2Prescaler
 2726              		.thumb
 2727              		.thumb_func
 2729              	TIM_SetIC2Prescaler:
 2730              	.LFB181:
2121:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2731              		.loc 1 2121 0
 2732              		.cfi_startproc
 2733              		@ args = 0, pretend = 0, frame = 0
 2734              		@ frame_needed = 0, uses_anonymous_args = 0
 2735              		@ link register save eliminated.
 2736              	.LVL359:
2127:FWLIB/src/stm32f4xx_tim.c **** 
 2737              		.loc 1 2127 0
 2738 0000 038B     		ldrh	r3, [r0, #24]
 2739 0002 9BB2     		uxth	r3, r3
 2740 0004 23F44063 		bic	r3, r3, #3072
 2741 0008 9BB2     		uxth	r3, r3
 2742 000a 0383     		strh	r3, [r0, #24]	@ movhi
2130:FWLIB/src/stm32f4xx_tim.c **** }
 2743              		.loc 1 2130 0
 2744 000c 038B     		ldrh	r3, [r0, #24]
 2745 000e 9BB2     		uxth	r3, r3
 2746 0010 0902     		lsls	r1, r1, #8
 2747              	.LVL360:
 2748 0012 89B2     		uxth	r1, r1
 2749 0014 1943     		orrs	r1, r1, r3
 2750 0016 0183     		strh	r1, [r0, #24]	@ movhi
 2751 0018 7047     		bx	lr
 2752              		.cfi_endproc
 2753              	.LFE181:
 2755 001a 00BF     		.section	.text.TIM_PWMIConfig,"ax",%progbits
 2756              		.align	2
 2757              		.global	TIM_PWMIConfig
 2758              		.thumb
 2759              		.thumb_func
 2761              	TIM_PWMIConfig:
 2762              	.LFB175:
1976:FWLIB/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 2763              		.loc 1 1976 0
 2764              		.cfi_startproc
 2765              		@ args = 0, pretend = 0, frame = 0
 2766              		@ frame_needed = 0, uses_anonymous_args = 0
 2767              	.LVL361:
 2768 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2769              	.LCFI23:
 2770              		.cfi_def_cfa_offset 24
 2771              		.cfi_offset 3, -24
 2772              		.cfi_offset 4, -20
 2773              		.cfi_offset 5, -16
 2774              		.cfi_offset 6, -12
 2775              		.cfi_offset 7, -8
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 113


 2776              		.cfi_offset 14, -4
 2777 0002 0546     		mov	r5, r0
 2778 0004 0C46     		mov	r4, r1
 2779              	.LVL362:
1984:FWLIB/src/stm32f4xx_tim.c ****   {
 2780              		.loc 1 1984 0
 2781 0006 4988     		ldrh	r1, [r1, #2]
 2782              	.LVL363:
 2783 0008 09B9     		cbnz	r1, .L129
1986:FWLIB/src/stm32f4xx_tim.c ****   }
 2784              		.loc 1 1986 0
 2785 000a 0226     		movs	r6, #2
 2786 000c 00E0     		b	.L125
 2787              	.L129:
1990:FWLIB/src/stm32f4xx_tim.c ****   }
 2788              		.loc 1 1990 0
 2789 000e 0026     		movs	r6, #0
 2790              	.L125:
 2791              	.LVL364:
1993:FWLIB/src/stm32f4xx_tim.c ****   {
 2792              		.loc 1 1993 0
 2793 0010 A288     		ldrh	r2, [r4, #4]
 2794 0012 012A     		cmp	r2, #1
 2795 0014 01D1     		bne	.L130
1995:FWLIB/src/stm32f4xx_tim.c ****   }
 2796              		.loc 1 1995 0
 2797 0016 0227     		movs	r7, #2
 2798 0018 00E0     		b	.L126
 2799              	.L130:
1999:FWLIB/src/stm32f4xx_tim.c ****   }
 2800              		.loc 1 1999 0
 2801 001a 0127     		movs	r7, #1
 2802              	.L126:
 2803              	.LVL365:
2001:FWLIB/src/stm32f4xx_tim.c ****   {
 2804              		.loc 1 2001 0
 2805 001c 2388     		ldrh	r3, [r4]
 2806 001e 93B9     		cbnz	r3, .L127
2004:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 2807              		.loc 1 2004 0
 2808 0020 2389     		ldrh	r3, [r4, #8]
 2809 0022 2846     		mov	r0, r5
 2810              	.LVL366:
 2811 0024 FFF7FEFF 		bl	TI1_Config
 2812              	.LVL367:
2007:FWLIB/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
 2813              		.loc 1 2007 0
 2814 0028 E188     		ldrh	r1, [r4, #6]
 2815 002a 2846     		mov	r0, r5
 2816 002c FFF7FEFF 		bl	TIM_SetIC1Prescaler
 2817              	.LVL368:
2009:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
 2818              		.loc 1 2009 0
 2819 0030 2389     		ldrh	r3, [r4, #8]
 2820 0032 3A46     		mov	r2, r7
 2821 0034 3146     		mov	r1, r6
 2822 0036 2846     		mov	r0, r5
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 114


 2823 0038 FFF7FEFF 		bl	TI2_Config
 2824              	.LVL369:
2011:FWLIB/src/stm32f4xx_tim.c ****   }
 2825              		.loc 1 2011 0
 2826 003c E188     		ldrh	r1, [r4, #6]
 2827 003e 2846     		mov	r0, r5
 2828 0040 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 2829              	.LVL370:
 2830 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2831              	.LVL371:
 2832              	.L127:
2016:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 2833              		.loc 1 2016 0
 2834 0046 2389     		ldrh	r3, [r4, #8]
 2835 0048 2846     		mov	r0, r5
 2836              	.LVL372:
 2837 004a FFF7FEFF 		bl	TI2_Config
 2838              	.LVL373:
2019:FWLIB/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
 2839              		.loc 1 2019 0
 2840 004e E188     		ldrh	r1, [r4, #6]
 2841 0050 2846     		mov	r0, r5
 2842 0052 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 2843              	.LVL374:
2021:FWLIB/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
 2844              		.loc 1 2021 0
 2845 0056 2389     		ldrh	r3, [r4, #8]
 2846 0058 3A46     		mov	r2, r7
 2847 005a 3146     		mov	r1, r6
 2848 005c 2846     		mov	r0, r5
 2849 005e FFF7FEFF 		bl	TI1_Config
 2850              	.LVL375:
2023:FWLIB/src/stm32f4xx_tim.c ****   }
 2851              		.loc 1 2023 0
 2852 0062 E188     		ldrh	r1, [r4, #6]
 2853 0064 2846     		mov	r0, r5
 2854 0066 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 2855              	.LVL376:
 2856 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2857              		.cfi_endproc
 2858              	.LFE175:
 2860              		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 2861              		.align	2
 2862              		.global	TIM_SetIC3Prescaler
 2863              		.thumb
 2864              		.thumb_func
 2866              	TIM_SetIC3Prescaler:
 2867              	.LFB182:
2145:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2868              		.loc 1 2145 0
 2869              		.cfi_startproc
 2870              		@ args = 0, pretend = 0, frame = 0
 2871              		@ frame_needed = 0, uses_anonymous_args = 0
 2872              		@ link register save eliminated.
 2873              	.LVL377:
2151:FWLIB/src/stm32f4xx_tim.c **** 
 2874              		.loc 1 2151 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 115


 2875 0000 838B     		ldrh	r3, [r0, #28]
 2876 0002 9BB2     		uxth	r3, r3
 2877 0004 23F00C03 		bic	r3, r3, #12
 2878 0008 9BB2     		uxth	r3, r3
 2879 000a 8383     		strh	r3, [r0, #28]	@ movhi
2154:FWLIB/src/stm32f4xx_tim.c **** }
 2880              		.loc 1 2154 0
 2881 000c 838B     		ldrh	r3, [r0, #28]
 2882 000e 9BB2     		uxth	r3, r3
 2883 0010 1943     		orrs	r1, r1, r3
 2884              	.LVL378:
 2885 0012 8183     		strh	r1, [r0, #28]	@ movhi
 2886 0014 7047     		bx	lr
 2887              		.cfi_endproc
 2888              	.LFE182:
 2890 0016 00BF     		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 2891              		.align	2
 2892              		.global	TIM_SetIC4Prescaler
 2893              		.thumb
 2894              		.thumb_func
 2896              	TIM_SetIC4Prescaler:
 2897              	.LFB183:
2169:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2898              		.loc 1 2169 0
 2899              		.cfi_startproc
 2900              		@ args = 0, pretend = 0, frame = 0
 2901              		@ frame_needed = 0, uses_anonymous_args = 0
 2902              		@ link register save eliminated.
 2903              	.LVL379:
2175:FWLIB/src/stm32f4xx_tim.c **** 
 2904              		.loc 1 2175 0
 2905 0000 838B     		ldrh	r3, [r0, #28]
 2906 0002 9BB2     		uxth	r3, r3
 2907 0004 23F44063 		bic	r3, r3, #3072
 2908 0008 9BB2     		uxth	r3, r3
 2909 000a 8383     		strh	r3, [r0, #28]	@ movhi
2178:FWLIB/src/stm32f4xx_tim.c **** }
 2910              		.loc 1 2178 0
 2911 000c 838B     		ldrh	r3, [r0, #28]
 2912 000e 9BB2     		uxth	r3, r3
 2913 0010 0902     		lsls	r1, r1, #8
 2914              	.LVL380:
 2915 0012 89B2     		uxth	r1, r1
 2916 0014 1943     		orrs	r1, r1, r3
 2917 0016 8183     		strh	r1, [r0, #28]	@ movhi
 2918 0018 7047     		bx	lr
 2919              		.cfi_endproc
 2920              	.LFE183:
 2922 001a 00BF     		.section	.text.TIM_ICInit,"ax",%progbits
 2923              		.align	2
 2924              		.global	TIM_ICInit
 2925              		.thumb
 2926              		.thumb_func
 2928              	TIM_ICInit:
 2929              	.LFB173:
1901:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 2930              		.loc 1 1901 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 116


 2931              		.cfi_startproc
 2932              		@ args = 0, pretend = 0, frame = 0
 2933              		@ frame_needed = 0, uses_anonymous_args = 0
 2934              	.LVL381:
 2935 0000 38B5     		push	{r3, r4, r5, lr}
 2936              	.LCFI24:
 2937              		.cfi_def_cfa_offset 16
 2938              		.cfi_offset 3, -16
 2939              		.cfi_offset 4, -12
 2940              		.cfi_offset 5, -8
 2941              		.cfi_offset 14, -4
 2942 0002 0546     		mov	r5, r0
 2943 0004 0C46     		mov	r4, r1
1909:FWLIB/src/stm32f4xx_tim.c ****   {
 2944              		.loc 1 1909 0
 2945 0006 0B88     		ldrh	r3, [r1]
 2946 0008 4BB9     		cbnz	r3, .L135
1912:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 2947              		.loc 1 1912 0
 2948 000a 0B89     		ldrh	r3, [r1, #8]
 2949 000c 8A88     		ldrh	r2, [r1, #4]
 2950 000e 4988     		ldrh	r1, [r1, #2]
 2951              	.LVL382:
 2952 0010 FFF7FEFF 		bl	TI1_Config
 2953              	.LVL383:
1916:FWLIB/src/stm32f4xx_tim.c ****   }
 2954              		.loc 1 1916 0
 2955 0014 E188     		ldrh	r1, [r4, #6]
 2956 0016 2846     		mov	r0, r5
 2957 0018 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 2958              	.LVL384:
 2959 001c 38BD     		pop	{r3, r4, r5, pc}
 2960              	.LVL385:
 2961              	.L135:
1918:FWLIB/src/stm32f4xx_tim.c ****   {
 2962              		.loc 1 1918 0
 2963 001e 042B     		cmp	r3, #4
 2964 0020 09D1     		bne	.L137
1922:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 2965              		.loc 1 1922 0
 2966 0022 0B89     		ldrh	r3, [r1, #8]
 2967 0024 8A88     		ldrh	r2, [r1, #4]
 2968 0026 4988     		ldrh	r1, [r1, #2]
 2969              	.LVL386:
 2970 0028 FFF7FEFF 		bl	TI2_Config
 2971              	.LVL387:
1926:FWLIB/src/stm32f4xx_tim.c ****   }
 2972              		.loc 1 1926 0
 2973 002c E188     		ldrh	r1, [r4, #6]
 2974 002e 2846     		mov	r0, r5
 2975 0030 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 2976              	.LVL388:
 2977 0034 38BD     		pop	{r3, r4, r5, pc}
 2978              	.LVL389:
 2979              	.L137:
1928:FWLIB/src/stm32f4xx_tim.c ****   {
 2980              		.loc 1 1928 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 117


 2981 0036 082B     		cmp	r3, #8
 2982 0038 09D1     		bne	.L138
1932:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 2983              		.loc 1 1932 0
 2984 003a 0B89     		ldrh	r3, [r1, #8]
 2985 003c 8A88     		ldrh	r2, [r1, #4]
 2986 003e 4988     		ldrh	r1, [r1, #2]
 2987              	.LVL390:
 2988 0040 FFF7FEFF 		bl	TI3_Config
 2989              	.LVL391:
1936:FWLIB/src/stm32f4xx_tim.c ****   }
 2990              		.loc 1 1936 0
 2991 0044 E188     		ldrh	r1, [r4, #6]
 2992 0046 2846     		mov	r0, r5
 2993 0048 FFF7FEFF 		bl	TIM_SetIC3Prescaler
 2994              	.LVL392:
 2995 004c 38BD     		pop	{r3, r4, r5, pc}
 2996              	.LVL393:
 2997              	.L138:
1942:FWLIB/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 2998              		.loc 1 1942 0
 2999 004e 0B89     		ldrh	r3, [r1, #8]
 3000 0050 8A88     		ldrh	r2, [r1, #4]
 3001 0052 4988     		ldrh	r1, [r1, #2]
 3002              	.LVL394:
 3003 0054 FFF7FEFF 		bl	TI4_Config
 3004              	.LVL395:
1946:FWLIB/src/stm32f4xx_tim.c ****   }
 3005              		.loc 1 1946 0
 3006 0058 E188     		ldrh	r1, [r4, #6]
 3007 005a 2846     		mov	r0, r5
 3008 005c FFF7FEFF 		bl	TIM_SetIC4Prescaler
 3009              	.LVL396:
 3010 0060 38BD     		pop	{r3, r4, r5, pc}
 3011              		.cfi_endproc
 3012              	.LFE173:
 3014 0062 00BF     		.section	.text.TIM_BDTRConfig,"ax",%progbits
 3015              		.align	2
 3016              		.global	TIM_BDTRConfig
 3017              		.thumb
 3018              		.thumb_func
 3020              	TIM_BDTRConfig:
 3021              	.LFB184:
2222:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3022              		.loc 1 2222 0
 3023              		.cfi_startproc
 3024              		@ args = 0, pretend = 0, frame = 0
 3025              		@ frame_needed = 0, uses_anonymous_args = 0
 3026              	.LVL397:
 3027 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3028              	.LCFI25:
 3029              		.cfi_def_cfa_offset 20
 3030              		.cfi_offset 4, -20
 3031              		.cfi_offset 5, -16
 3032              		.cfi_offset 6, -12
 3033              		.cfi_offset 7, -8
 3034              		.cfi_offset 14, -4
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 118


2234:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 3035              		.loc 1 2234 0
 3036 0002 B1F800E0 		ldrh	lr, [r1]
 3037 0006 4C88     		ldrh	r4, [r1, #2]
2235:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 3038              		.loc 1 2235 0
 3039 0008 8A88     		ldrh	r2, [r1, #4]
 3040 000a CF88     		ldrh	r7, [r1, #6]
2236:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 3041              		.loc 1 2236 0
 3042 000c 0B89     		ldrh	r3, [r1, #8]
 3043 000e 4E89     		ldrh	r6, [r1, #10]
2237:FWLIB/src/stm32f4xx_tim.c **** }
 3044              		.loc 1 2237 0
 3045 0010 8D89     		ldrh	r5, [r1, #12]
2234:FWLIB/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 3046              		.loc 1 2234 0
 3047 0012 4EEA0401 		orr	r1, lr, r4
 3048              	.LVL398:
 3049 0016 1143     		orrs	r1, r1, r2
 3050 0018 47EA0102 		orr	r2, r7, r1
 3051 001c 1A43     		orrs	r2, r2, r3
 3052 001e 46EA0203 		orr	r3, r6, r2
 3053 0022 2B43     		orrs	r3, r3, r5
 3054 0024 A0F84430 		strh	r3, [r0, #68]	@ movhi
 3055 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 3056              		.cfi_endproc
 3057              	.LFE184:
 3059 002a 00BF     		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 3060              		.align	2
 3061              		.global	TIM_BDTRStructInit
 3062              		.thumb
 3063              		.thumb_func
 3065              	TIM_BDTRStructInit:
 3066              	.LFB185:
2247:FWLIB/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 3067              		.loc 1 2247 0
 3068              		.cfi_startproc
 3069              		@ args = 0, pretend = 0, frame = 0
 3070              		@ frame_needed = 0, uses_anonymous_args = 0
 3071              		@ link register save eliminated.
 3072              	.LVL399:
2249:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 3073              		.loc 1 2249 0
 3074 0000 0023     		movs	r3, #0
 3075 0002 0380     		strh	r3, [r0]	@ movhi
2250:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 3076              		.loc 1 2250 0
 3077 0004 4380     		strh	r3, [r0, #2]	@ movhi
2251:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 3078              		.loc 1 2251 0
 3079 0006 8380     		strh	r3, [r0, #4]	@ movhi
2252:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 3080              		.loc 1 2252 0
 3081 0008 C380     		strh	r3, [r0, #6]	@ movhi
2253:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 3082              		.loc 1 2253 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 119


 3083 000a 0381     		strh	r3, [r0, #8]	@ movhi
2254:FWLIB/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 3084              		.loc 1 2254 0
 3085 000c 4381     		strh	r3, [r0, #10]	@ movhi
2255:FWLIB/src/stm32f4xx_tim.c **** }
 3086              		.loc 1 2255 0
 3087 000e 8381     		strh	r3, [r0, #12]	@ movhi
 3088 0010 7047     		bx	lr
 3089              		.cfi_endproc
 3090              	.LFE185:
 3092 0012 00BF     		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 3093              		.align	2
 3094              		.global	TIM_CtrlPWMOutputs
 3095              		.thumb
 3096              		.thumb_func
 3098              	TIM_CtrlPWMOutputs:
 3099              	.LFB186:
2266:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3100              		.loc 1 2266 0
 3101              		.cfi_startproc
 3102              		@ args = 0, pretend = 0, frame = 0
 3103              		@ frame_needed = 0, uses_anonymous_args = 0
 3104              		@ link register save eliminated.
 3105              	.LVL400:
2271:FWLIB/src/stm32f4xx_tim.c ****   {
 3106              		.loc 1 2271 0
 3107 0000 49B1     		cbz	r1, .L144
2274:FWLIB/src/stm32f4xx_tim.c ****   }
 3108              		.loc 1 2274 0
 3109 0002 B0F84430 		ldrh	r3, [r0, #68]
 3110 0006 6FEA4343 		mvn	r3, r3, lsl #17
 3111 000a 6FEA5343 		mvn	r3, r3, lsr #17
 3112 000e 9BB2     		uxth	r3, r3
 3113 0010 A0F84430 		strh	r3, [r0, #68]	@ movhi
 3114 0014 7047     		bx	lr
 3115              	.L144:
2279:FWLIB/src/stm32f4xx_tim.c ****   }  
 3116              		.loc 1 2279 0
 3117 0016 B0F84430 		ldrh	r3, [r0, #68]
 3118 001a C3F30E03 		ubfx	r3, r3, #0, #15
 3119 001e A0F84430 		strh	r3, [r0, #68]	@ movhi
 3120 0022 7047     		bx	lr
 3121              		.cfi_endproc
 3122              	.LFE186:
 3124              		.section	.text.TIM_SelectCOM,"ax",%progbits
 3125              		.align	2
 3126              		.global	TIM_SelectCOM
 3127              		.thumb
 3128              		.thumb_func
 3130              	TIM_SelectCOM:
 3131              	.LFB187:
2291:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3132              		.loc 1 2291 0
 3133              		.cfi_startproc
 3134              		@ args = 0, pretend = 0, frame = 0
 3135              		@ frame_needed = 0, uses_anonymous_args = 0
 3136              		@ link register save eliminated.
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 120


 3137              	.LVL401:
2296:FWLIB/src/stm32f4xx_tim.c ****   {
 3138              		.loc 1 2296 0
 3139 0000 29B1     		cbz	r1, .L147
2299:FWLIB/src/stm32f4xx_tim.c ****   }
 3140              		.loc 1 2299 0
 3141 0002 8388     		ldrh	r3, [r0, #4]
 3142 0004 9BB2     		uxth	r3, r3
 3143 0006 43F00403 		orr	r3, r3, #4
 3144 000a 8380     		strh	r3, [r0, #4]	@ movhi
 3145 000c 7047     		bx	lr
 3146              	.L147:
2304:FWLIB/src/stm32f4xx_tim.c ****   }
 3147              		.loc 1 2304 0
 3148 000e 8388     		ldrh	r3, [r0, #4]
 3149 0010 9BB2     		uxth	r3, r3
 3150 0012 23F00403 		bic	r3, r3, #4
 3151 0016 9BB2     		uxth	r3, r3
 3152 0018 8380     		strh	r3, [r0, #4]	@ movhi
 3153 001a 7047     		bx	lr
 3154              		.cfi_endproc
 3155              	.LFE187:
 3157              		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 3158              		.align	2
 3159              		.global	TIM_CCPreloadControl
 3160              		.thumb
 3161              		.thumb_func
 3163              	TIM_CCPreloadControl:
 3164              	.LFB188:
2316:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3165              		.loc 1 2316 0
 3166              		.cfi_startproc
 3167              		@ args = 0, pretend = 0, frame = 0
 3168              		@ frame_needed = 0, uses_anonymous_args = 0
 3169              		@ link register save eliminated.
 3170              	.LVL402:
2320:FWLIB/src/stm32f4xx_tim.c ****   {
 3171              		.loc 1 2320 0
 3172 0000 29B1     		cbz	r1, .L150
2323:FWLIB/src/stm32f4xx_tim.c ****   }
 3173              		.loc 1 2323 0
 3174 0002 8388     		ldrh	r3, [r0, #4]
 3175 0004 9BB2     		uxth	r3, r3
 3176 0006 43F00103 		orr	r3, r3, #1
 3177 000a 8380     		strh	r3, [r0, #4]	@ movhi
 3178 000c 7047     		bx	lr
 3179              	.L150:
2328:FWLIB/src/stm32f4xx_tim.c ****   }
 3180              		.loc 1 2328 0
 3181 000e 8388     		ldrh	r3, [r0, #4]
 3182 0010 9BB2     		uxth	r3, r3
 3183 0012 23F00103 		bic	r3, r3, #1
 3184 0016 9BB2     		uxth	r3, r3
 3185 0018 8380     		strh	r3, [r0, #4]	@ movhi
 3186 001a 7047     		bx	lr
 3187              		.cfi_endproc
 3188              	.LFE188:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 121


 3190              		.section	.text.TIM_ITConfig,"ax",%progbits
 3191              		.align	2
 3192              		.global	TIM_ITConfig
 3193              		.thumb
 3194              		.thumb_func
 3196              	TIM_ITConfig:
 3197              	.LFB189:
2373:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3198              		.loc 1 2373 0
 3199              		.cfi_startproc
 3200              		@ args = 0, pretend = 0, frame = 0
 3201              		@ frame_needed = 0, uses_anonymous_args = 0
 3202              		@ link register save eliminated.
 3203              	.LVL403:
2379:FWLIB/src/stm32f4xx_tim.c ****   {
 3204              		.loc 1 2379 0
 3205 0000 22B1     		cbz	r2, .L153
2382:FWLIB/src/stm32f4xx_tim.c ****   }
 3206              		.loc 1 2382 0
 3207 0002 8389     		ldrh	r3, [r0, #12]
 3208 0004 9BB2     		uxth	r3, r3
 3209 0006 1943     		orrs	r1, r1, r3
 3210              	.LVL404:
 3211 0008 8181     		strh	r1, [r0, #12]	@ movhi
 3212 000a 7047     		bx	lr
 3213              	.LVL405:
 3214              	.L153:
2387:FWLIB/src/stm32f4xx_tim.c ****   }
 3215              		.loc 1 2387 0
 3216 000c 8389     		ldrh	r3, [r0, #12]
 3217 000e C943     		mvns	r1, r1
 3218              	.LVL406:
 3219 0010 89B2     		uxth	r1, r1
 3220 0012 1940     		ands	r1, r1, r3
 3221 0014 8181     		strh	r1, [r0, #12]	@ movhi
 3222 0016 7047     		bx	lr
 3223              		.cfi_endproc
 3224              	.LFE189:
 3226              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 3227              		.align	2
 3228              		.global	TIM_GenerateEvent
 3229              		.thumb
 3230              		.thumb_func
 3232              	TIM_GenerateEvent:
 3233              	.LFB190:
2411:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3234              		.loc 1 2411 0
 3235              		.cfi_startproc
 3236              		@ args = 0, pretend = 0, frame = 0
 3237              		@ frame_needed = 0, uses_anonymous_args = 0
 3238              		@ link register save eliminated.
 3239              	.LVL407:
2417:FWLIB/src/stm32f4xx_tim.c **** }
 3240              		.loc 1 2417 0
 3241 0000 8182     		strh	r1, [r0, #20]	@ movhi
 3242 0002 7047     		bx	lr
 3243              		.cfi_endproc
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 122


 3244              	.LFE190:
 3246              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 3247              		.align	2
 3248              		.global	TIM_GetFlagStatus
 3249              		.thumb
 3250              		.thumb_func
 3252              	TIM_GetFlagStatus:
 3253              	.LFB191:
2444:FWLIB/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 3254              		.loc 1 2444 0
 3255              		.cfi_startproc
 3256              		@ args = 0, pretend = 0, frame = 0
 3257              		@ frame_needed = 0, uses_anonymous_args = 0
 3258              		@ link register save eliminated.
 3259              	.LVL408:
2451:FWLIB/src/stm32f4xx_tim.c ****   {
 3260              		.loc 1 2451 0
 3261 0000 038A     		ldrh	r3, [r0, #16]
 3262 0002 1942     		tst	r1, r3
 3263 0004 01D0     		beq	.L158
2453:FWLIB/src/stm32f4xx_tim.c ****   }
 3264              		.loc 1 2453 0
 3265 0006 0120     		movs	r0, #1
 3266              	.LVL409:
 3267 0008 7047     		bx	lr
 3268              	.LVL410:
 3269              	.L158:
2457:FWLIB/src/stm32f4xx_tim.c ****   }
 3270              		.loc 1 2457 0
 3271 000a 0020     		movs	r0, #0
 3272              	.LVL411:
2460:FWLIB/src/stm32f4xx_tim.c **** 
 3273              		.loc 1 2460 0
 3274 000c 7047     		bx	lr
 3275              		.cfi_endproc
 3276              	.LFE191:
 3278 000e 00BF     		.section	.text.TIM_ClearFlag,"ax",%progbits
 3279              		.align	2
 3280              		.global	TIM_ClearFlag
 3281              		.thumb
 3282              		.thumb_func
 3284              	TIM_ClearFlag:
 3285              	.LFB192:
2486:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3286              		.loc 1 2486 0
 3287              		.cfi_startproc
 3288              		@ args = 0, pretend = 0, frame = 0
 3289              		@ frame_needed = 0, uses_anonymous_args = 0
 3290              		@ link register save eliminated.
 3291              	.LVL412:
2491:FWLIB/src/stm32f4xx_tim.c **** }
 3292              		.loc 1 2491 0
 3293 0000 C943     		mvns	r1, r1
 3294              	.LVL413:
 3295 0002 89B2     		uxth	r1, r1
 3296 0004 0182     		strh	r1, [r0, #16]	@ movhi
 3297 0006 7047     		bx	lr
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 123


 3298              		.cfi_endproc
 3299              	.LFE192:
 3301              		.section	.text.TIM_GetITStatus,"ax",%progbits
 3302              		.align	2
 3303              		.global	TIM_GetITStatus
 3304              		.thumb
 3305              		.thumb_func
 3307              	TIM_GetITStatus:
 3308              	.LFB193:
2514:FWLIB/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 3309              		.loc 1 2514 0
 3310              		.cfi_startproc
 3311              		@ args = 0, pretend = 0, frame = 0
 3312              		@ frame_needed = 0, uses_anonymous_args = 0
 3313              		@ link register save eliminated.
 3314              	.LVL414:
2521:FWLIB/src/stm32f4xx_tim.c ****   
 3315              		.loc 1 2521 0
 3316 0000 028A     		ldrh	r2, [r0, #16]
 3317              	.LVL415:
2523:FWLIB/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 3318              		.loc 1 2523 0
 3319 0002 8389     		ldrh	r3, [r0, #12]
 3320 0004 0B40     		ands	r3, r3, r1
 3321              	.LVL416:
2524:FWLIB/src/stm32f4xx_tim.c ****   {
 3322              		.loc 1 2524 0
 3323 0006 1142     		tst	r1, r2
 3324 0008 02D0     		beq	.L162
2524:FWLIB/src/stm32f4xx_tim.c ****   {
 3325              		.loc 1 2524 0 is_stmt 0 discriminator 1
 3326 000a 1BB9     		cbnz	r3, .L163
2530:FWLIB/src/stm32f4xx_tim.c ****   }
 3327              		.loc 1 2530 0 is_stmt 1
 3328 000c 0020     		movs	r0, #0
 3329              	.LVL417:
 3330 000e 7047     		bx	lr
 3331              	.LVL418:
 3332              	.L162:
 3333 0010 0020     		movs	r0, #0
 3334              	.LVL419:
 3335 0012 7047     		bx	lr
 3336              	.LVL420:
 3337              	.L163:
2526:FWLIB/src/stm32f4xx_tim.c ****   }
 3338              		.loc 1 2526 0
 3339 0014 0120     		movs	r0, #1
 3340              	.LVL421:
2533:FWLIB/src/stm32f4xx_tim.c **** 
 3341              		.loc 1 2533 0
 3342 0016 7047     		bx	lr
 3343              		.cfi_endproc
 3344              	.LFE193:
 3346              		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 3347              		.align	2
 3348              		.global	TIM_ClearITPendingBit
 3349              		.thumb
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 124


 3350              		.thumb_func
 3352              	TIM_ClearITPendingBit:
 3353              	.LFB194:
2555:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3354              		.loc 1 2555 0
 3355              		.cfi_startproc
 3356              		@ args = 0, pretend = 0, frame = 0
 3357              		@ frame_needed = 0, uses_anonymous_args = 0
 3358              		@ link register save eliminated.
 3359              	.LVL422:
2560:FWLIB/src/stm32f4xx_tim.c **** }
 3360              		.loc 1 2560 0
 3361 0000 C943     		mvns	r1, r1
 3362              	.LVL423:
 3363 0002 89B2     		uxth	r1, r1
 3364 0004 0182     		strh	r1, [r0, #16]	@ movhi
 3365 0006 7047     		bx	lr
 3366              		.cfi_endproc
 3367              	.LFE194:
 3369              		.section	.text.TIM_DMAConfig,"ax",%progbits
 3370              		.align	2
 3371              		.global	TIM_DMAConfig
 3372              		.thumb
 3373              		.thumb_func
 3375              	TIM_DMAConfig:
 3376              	.LFB195:
2592:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3377              		.loc 1 2592 0
 3378              		.cfi_startproc
 3379              		@ args = 0, pretend = 0, frame = 0
 3380              		@ frame_needed = 0, uses_anonymous_args = 0
 3381              		@ link register save eliminated.
 3382              	.LVL424:
2599:FWLIB/src/stm32f4xx_tim.c **** }
 3383              		.loc 1 2599 0
 3384 0000 0A43     		orrs	r2, r2, r1
 3385              	.LVL425:
 3386 0002 A0F84820 		strh	r2, [r0, #72]	@ movhi
 3387 0006 7047     		bx	lr
 3388              		.cfi_endproc
 3389              	.LFE195:
 3391              		.section	.text.TIM_DMACmd,"ax",%progbits
 3392              		.align	2
 3393              		.global	TIM_DMACmd
 3394              		.thumb
 3395              		.thumb_func
 3397              	TIM_DMACmd:
 3398              	.LFB196:
2619:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3399              		.loc 1 2619 0
 3400              		.cfi_startproc
 3401              		@ args = 0, pretend = 0, frame = 0
 3402              		@ frame_needed = 0, uses_anonymous_args = 0
 3403              		@ link register save eliminated.
 3404              	.LVL426:
2625:FWLIB/src/stm32f4xx_tim.c ****   {
 3405              		.loc 1 2625 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 125


 3406 0000 22B1     		cbz	r2, .L167
2628:FWLIB/src/stm32f4xx_tim.c ****   }
 3407              		.loc 1 2628 0
 3408 0002 8389     		ldrh	r3, [r0, #12]
 3409 0004 9BB2     		uxth	r3, r3
 3410 0006 1943     		orrs	r1, r1, r3
 3411              	.LVL427:
 3412 0008 8181     		strh	r1, [r0, #12]	@ movhi
 3413 000a 7047     		bx	lr
 3414              	.LVL428:
 3415              	.L167:
2633:FWLIB/src/stm32f4xx_tim.c ****   }
 3416              		.loc 1 2633 0
 3417 000c 8389     		ldrh	r3, [r0, #12]
 3418 000e C943     		mvns	r1, r1
 3419              	.LVL429:
 3420 0010 89B2     		uxth	r1, r1
 3421 0012 1940     		ands	r1, r1, r3
 3422 0014 8181     		strh	r1, [r0, #12]	@ movhi
 3423 0016 7047     		bx	lr
 3424              		.cfi_endproc
 3425              	.LFE196:
 3427              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 3428              		.align	2
 3429              		.global	TIM_SelectCCDMA
 3430              		.thumb
 3431              		.thumb_func
 3433              	TIM_SelectCCDMA:
 3434              	.LFB197:
2645:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3435              		.loc 1 2645 0
 3436              		.cfi_startproc
 3437              		@ args = 0, pretend = 0, frame = 0
 3438              		@ frame_needed = 0, uses_anonymous_args = 0
 3439              		@ link register save eliminated.
 3440              	.LVL430:
2650:FWLIB/src/stm32f4xx_tim.c ****   {
 3441              		.loc 1 2650 0
 3442 0000 29B1     		cbz	r1, .L170
2653:FWLIB/src/stm32f4xx_tim.c ****   }
 3443              		.loc 1 2653 0
 3444 0002 8388     		ldrh	r3, [r0, #4]
 3445 0004 9BB2     		uxth	r3, r3
 3446 0006 43F00803 		orr	r3, r3, #8
 3447 000a 8380     		strh	r3, [r0, #4]	@ movhi
 3448 000c 7047     		bx	lr
 3449              	.L170:
2658:FWLIB/src/stm32f4xx_tim.c ****   }
 3450              		.loc 1 2658 0
 3451 000e 8388     		ldrh	r3, [r0, #4]
 3452 0010 9BB2     		uxth	r3, r3
 3453 0012 23F00803 		bic	r3, r3, #8
 3454 0016 9BB2     		uxth	r3, r3
 3455 0018 8380     		strh	r3, [r0, #4]	@ movhi
 3456 001a 7047     		bx	lr
 3457              		.cfi_endproc
 3458              	.LFE197:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 126


 3460              		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 3461              		.align	2
 3462              		.global	TIM_InternalClockConfig
 3463              		.thumb
 3464              		.thumb_func
 3466              	TIM_InternalClockConfig:
 3467              	.LFB198:
2684:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3468              		.loc 1 2684 0
 3469              		.cfi_startproc
 3470              		@ args = 0, pretend = 0, frame = 0
 3471              		@ frame_needed = 0, uses_anonymous_args = 0
 3472              		@ link register save eliminated.
 3473              	.LVL431:
2689:FWLIB/src/stm32f4xx_tim.c **** }
 3474              		.loc 1 2689 0
 3475 0000 0389     		ldrh	r3, [r0, #8]
 3476 0002 9BB2     		uxth	r3, r3
 3477 0004 23F00703 		bic	r3, r3, #7
 3478 0008 9BB2     		uxth	r3, r3
 3479 000a 0381     		strh	r3, [r0, #8]	@ movhi
 3480 000c 7047     		bx	lr
 3481              		.cfi_endproc
 3482              	.LFE198:
 3484 000e 00BF     		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 3485              		.align	2
 3486              		.global	TIM_SelectInputTrigger
 3487              		.thumb
 3488              		.thumb_func
 3490              	TIM_SelectInputTrigger:
 3491              	.LFB203:
2893:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 3492              		.loc 1 2893 0
 3493              		.cfi_startproc
 3494              		@ args = 0, pretend = 0, frame = 0
 3495              		@ frame_needed = 0, uses_anonymous_args = 0
 3496              		@ link register save eliminated.
 3497              	.LVL432:
2901:FWLIB/src/stm32f4xx_tim.c **** 
 3498              		.loc 1 2901 0
 3499 0000 0389     		ldrh	r3, [r0, #8]
 3500 0002 9BB2     		uxth	r3, r3
 3501              	.LVL433:
2904:FWLIB/src/stm32f4xx_tim.c **** 
 3502              		.loc 1 2904 0
 3503 0004 23F07003 		bic	r3, r3, #112
 3504              	.LVL434:
2907:FWLIB/src/stm32f4xx_tim.c **** 
 3505              		.loc 1 2907 0
 3506 0008 1943     		orrs	r1, r1, r3
 3507              	.LVL435:
2910:FWLIB/src/stm32f4xx_tim.c **** }
 3508              		.loc 1 2910 0
 3509 000a 0181     		strh	r1, [r0, #8]	@ movhi
 3510 000c 7047     		bx	lr
 3511              		.cfi_endproc
 3512              	.LFE203:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 127


 3514 000e 00BF     		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 3515              		.align	2
 3516              		.global	TIM_ITRxExternalClockConfig
 3517              		.thumb
 3518              		.thumb_func
 3520              	TIM_ITRxExternalClockConfig:
 3521              	.LFB199:
2705:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3522              		.loc 1 2705 0
 3523              		.cfi_startproc
 3524              		@ args = 0, pretend = 0, frame = 0
 3525              		@ frame_needed = 0, uses_anonymous_args = 0
 3526              	.LVL436:
 3527 0000 10B5     		push	{r4, lr}
 3528              	.LCFI26:
 3529              		.cfi_def_cfa_offset 8
 3530              		.cfi_offset 4, -8
 3531              		.cfi_offset 14, -4
 3532 0002 0446     		mov	r4, r0
2711:FWLIB/src/stm32f4xx_tim.c **** 
 3533              		.loc 1 2711 0
 3534 0004 FFF7FEFF 		bl	TIM_SelectInputTrigger
 3535              	.LVL437:
2714:FWLIB/src/stm32f4xx_tim.c **** }
 3536              		.loc 1 2714 0
 3537 0008 2389     		ldrh	r3, [r4, #8]
 3538 000a 9BB2     		uxth	r3, r3
 3539 000c 43F00703 		orr	r3, r3, #7
 3540 0010 2381     		strh	r3, [r4, #8]	@ movhi
 3541 0012 10BD     		pop	{r4, pc}
 3542              		.cfi_endproc
 3543              	.LFE199:
 3545              		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 3546              		.align	2
 3547              		.global	TIM_TIxExternalClockConfig
 3548              		.thumb
 3549              		.thumb_func
 3551              	TIM_TIxExternalClockConfig:
 3552              	.LFB200:
2736:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3553              		.loc 1 2736 0
 3554              		.cfi_startproc
 3555              		@ args = 0, pretend = 0, frame = 0
 3556              		@ frame_needed = 0, uses_anonymous_args = 0
 3557              	.LVL438:
 3558 0000 38B5     		push	{r3, r4, r5, lr}
 3559              	.LCFI27:
 3560              		.cfi_def_cfa_offset 16
 3561              		.cfi_offset 3, -16
 3562              		.cfi_offset 4, -12
 3563              		.cfi_offset 5, -8
 3564              		.cfi_offset 14, -4
 3565 0002 0446     		mov	r4, r0
 3566 0004 0D46     		mov	r5, r1
 3567 0006 1146     		mov	r1, r2
 3568              	.LVL439:
2743:FWLIB/src/stm32f4xx_tim.c ****   {
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 128


 3569              		.loc 1 2743 0
 3570 0008 602D     		cmp	r5, #96
 3571 000a 03D1     		bne	.L177
2745:FWLIB/src/stm32f4xx_tim.c ****   }
 3572              		.loc 1 2745 0
 3573 000c 0122     		movs	r2, #1
 3574              	.LVL440:
 3575 000e FFF7FEFF 		bl	TI2_Config
 3576              	.LVL441:
 3577 0012 02E0     		b	.L178
 3578              	.LVL442:
 3579              	.L177:
2749:FWLIB/src/stm32f4xx_tim.c ****   }
 3580              		.loc 1 2749 0
 3581 0014 0122     		movs	r2, #1
 3582              	.LVL443:
 3583 0016 FFF7FEFF 		bl	TI1_Config
 3584              	.LVL444:
 3585              	.L178:
2752:FWLIB/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
 3586              		.loc 1 2752 0
 3587 001a 2946     		mov	r1, r5
 3588 001c 2046     		mov	r0, r4
 3589 001e FFF7FEFF 		bl	TIM_SelectInputTrigger
 3590              	.LVL445:
2754:FWLIB/src/stm32f4xx_tim.c **** }
 3591              		.loc 1 2754 0
 3592 0022 2389     		ldrh	r3, [r4, #8]
 3593 0024 9BB2     		uxth	r3, r3
 3594 0026 43F00703 		orr	r3, r3, #7
 3595 002a 2381     		strh	r3, [r4, #8]	@ movhi
 3596 002c 38BD     		pop	{r3, r4, r5, pc}
 3597              		.cfi_endproc
 3598              	.LFE200:
 3600 002e 00BF     		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 3601              		.align	2
 3602              		.global	TIM_SelectOutputTrigger
 3603              		.thumb
 3604              		.thumb_func
 3606              	TIM_SelectOutputTrigger:
 3607              	.LFB204:
2936:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3608              		.loc 1 2936 0
 3609              		.cfi_startproc
 3610              		@ args = 0, pretend = 0, frame = 0
 3611              		@ frame_needed = 0, uses_anonymous_args = 0
 3612              		@ link register save eliminated.
 3613              	.LVL446:
2942:FWLIB/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
 3614              		.loc 1 2942 0
 3615 0000 8388     		ldrh	r3, [r0, #4]
 3616 0002 9BB2     		uxth	r3, r3
 3617 0004 23F07003 		bic	r3, r3, #112
 3618 0008 9BB2     		uxth	r3, r3
 3619 000a 8380     		strh	r3, [r0, #4]	@ movhi
2944:FWLIB/src/stm32f4xx_tim.c **** }
 3620              		.loc 1 2944 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 129


 3621 000c 8388     		ldrh	r3, [r0, #4]
 3622 000e 9BB2     		uxth	r3, r3
 3623 0010 1943     		orrs	r1, r1, r3
 3624              	.LVL447:
 3625 0012 8180     		strh	r1, [r0, #4]	@ movhi
 3626 0014 7047     		bx	lr
 3627              		.cfi_endproc
 3628              	.LFE204:
 3630 0016 00BF     		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 3631              		.align	2
 3632              		.global	TIM_SelectSlaveMode
 3633              		.thumb
 3634              		.thumb_func
 3636              	TIM_SelectSlaveMode:
 3637              	.LFB205:
2960:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3638              		.loc 1 2960 0
 3639              		.cfi_startproc
 3640              		@ args = 0, pretend = 0, frame = 0
 3641              		@ frame_needed = 0, uses_anonymous_args = 0
 3642              		@ link register save eliminated.
 3643              	.LVL448:
2966:FWLIB/src/stm32f4xx_tim.c **** 
 3644              		.loc 1 2966 0
 3645 0000 0389     		ldrh	r3, [r0, #8]
 3646 0002 9BB2     		uxth	r3, r3
 3647 0004 23F00703 		bic	r3, r3, #7
 3648 0008 9BB2     		uxth	r3, r3
 3649 000a 0381     		strh	r3, [r0, #8]	@ movhi
2969:FWLIB/src/stm32f4xx_tim.c **** }
 3650              		.loc 1 2969 0
 3651 000c 0389     		ldrh	r3, [r0, #8]
 3652 000e 9BB2     		uxth	r3, r3
 3653 0010 1943     		orrs	r1, r1, r3
 3654              	.LVL449:
 3655 0012 0181     		strh	r1, [r0, #8]	@ movhi
 3656 0014 7047     		bx	lr
 3657              		.cfi_endproc
 3658              	.LFE205:
 3660 0016 00BF     		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 3661              		.align	2
 3662              		.global	TIM_SelectMasterSlaveMode
 3663              		.thumb
 3664              		.thumb_func
 3666              	TIM_SelectMasterSlaveMode:
 3667              	.LFB206:
2983:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3668              		.loc 1 2983 0
 3669              		.cfi_startproc
 3670              		@ args = 0, pretend = 0, frame = 0
 3671              		@ frame_needed = 0, uses_anonymous_args = 0
 3672              		@ link register save eliminated.
 3673              	.LVL450:
2989:FWLIB/src/stm32f4xx_tim.c ****   
 3674              		.loc 1 2989 0
 3675 0000 0389     		ldrh	r3, [r0, #8]
 3676 0002 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 130


 3677 0004 23F08003 		bic	r3, r3, #128
 3678 0008 9BB2     		uxth	r3, r3
 3679 000a 0381     		strh	r3, [r0, #8]	@ movhi
2992:FWLIB/src/stm32f4xx_tim.c **** }
 3680              		.loc 1 2992 0
 3681 000c 0389     		ldrh	r3, [r0, #8]
 3682 000e 9BB2     		uxth	r3, r3
 3683 0010 1943     		orrs	r1, r1, r3
 3684              	.LVL451:
 3685 0012 0181     		strh	r1, [r0, #8]	@ movhi
 3686 0014 7047     		bx	lr
 3687              		.cfi_endproc
 3688              	.LFE206:
 3690 0016 00BF     		.section	.text.TIM_ETRConfig,"ax",%progbits
 3691              		.align	2
 3692              		.global	TIM_ETRConfig
 3693              		.thumb
 3694              		.thumb_func
 3696              	TIM_ETRConfig:
 3697              	.LFB207:
3014:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 3698              		.loc 1 3014 0
 3699              		.cfi_startproc
 3700              		@ args = 0, pretend = 0, frame = 0
 3701              		@ frame_needed = 0, uses_anonymous_args = 0
 3702              		@ link register save eliminated.
 3703              	.LVL452:
 3704 0000 10B4     		push	{r4}
 3705              	.LCFI28:
 3706              		.cfi_def_cfa_offset 4
 3707              		.cfi_offset 4, -4
 3708              	.LVL453:
3023:FWLIB/src/stm32f4xx_tim.c **** 
 3709              		.loc 1 3023 0
 3710 0002 0489     		ldrh	r4, [r0, #8]
 3711              	.LVL454:
3026:FWLIB/src/stm32f4xx_tim.c **** 
 3712              		.loc 1 3026 0
 3713 0004 E4B2     		uxtb	r4, r4
 3714              	.LVL455:
3029:FWLIB/src/stm32f4xx_tim.c **** 
 3715              		.loc 1 3029 0
 3716 0006 1B02     		lsls	r3, r3, #8
 3717              	.LVL456:
 3718 0008 9BB2     		uxth	r3, r3
 3719 000a 1A43     		orrs	r2, r2, r3
 3720              	.LVL457:
 3721 000c 1143     		orrs	r1, r1, r2
 3722              	.LVL458:
 3723 000e 44EA0103 		orr	r3, r4, r1
 3724              	.LVL459:
3032:FWLIB/src/stm32f4xx_tim.c **** }
 3725              		.loc 1 3032 0
 3726 0012 0381     		strh	r3, [r0, #8]	@ movhi
3033:FWLIB/src/stm32f4xx_tim.c **** /**
 3727              		.loc 1 3033 0
 3728 0014 5DF8044B 		ldr	r4, [sp], #4
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 131


 3729              	.LCFI29:
 3730              		.cfi_restore 4
 3731              		.cfi_def_cfa_offset 0
 3732 0018 7047     		bx	lr
 3733              		.cfi_endproc
 3734              	.LFE207:
 3736 001a 00BF     		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 3737              		.align	2
 3738              		.global	TIM_ETRClockMode1Config
 3739              		.thumb
 3740              		.thumb_func
 3742              	TIM_ETRClockMode1Config:
 3743              	.LFB201:
2776:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 3744              		.loc 1 2776 0
 3745              		.cfi_startproc
 3746              		@ args = 0, pretend = 0, frame = 0
 3747              		@ frame_needed = 0, uses_anonymous_args = 0
 3748              	.LVL460:
 3749 0000 10B5     		push	{r4, lr}
 3750              	.LCFI30:
 3751              		.cfi_def_cfa_offset 8
 3752              		.cfi_offset 4, -8
 3753              		.cfi_offset 14, -4
 3754 0002 0446     		mov	r4, r0
 3755              	.LVL461:
2785:FWLIB/src/stm32f4xx_tim.c ****   
 3756              		.loc 1 2785 0
 3757 0004 FFF7FEFF 		bl	TIM_ETRConfig
 3758              	.LVL462:
2788:FWLIB/src/stm32f4xx_tim.c **** 
 3759              		.loc 1 2788 0
 3760 0008 2389     		ldrh	r3, [r4, #8]
 3761 000a 9BB2     		uxth	r3, r3
 3762              	.LVL463:
2798:FWLIB/src/stm32f4xx_tim.c **** 
 3763              		.loc 1 2798 0
 3764 000c 43F07703 		orr	r3, r3, #119
 3765              	.LVL464:
2801:FWLIB/src/stm32f4xx_tim.c **** }
 3766              		.loc 1 2801 0
 3767 0010 2381     		strh	r3, [r4, #8]	@ movhi
 3768 0012 10BD     		pop	{r4, pc}
 3769              		.cfi_endproc
 3770              	.LFE201:
 3772              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 3773              		.align	2
 3774              		.global	TIM_ETRClockMode2Config
 3775              		.thumb
 3776              		.thumb_func
 3778              	TIM_ETRClockMode2Config:
 3779              	.LFB202:
2823:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3780              		.loc 1 2823 0
 3781              		.cfi_startproc
 3782              		@ args = 0, pretend = 0, frame = 0
 3783              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 132


 3784              	.LVL465:
 3785 0000 10B5     		push	{r4, lr}
 3786              	.LCFI31:
 3787              		.cfi_def_cfa_offset 8
 3788              		.cfi_offset 4, -8
 3789              		.cfi_offset 14, -4
 3790 0002 0446     		mov	r4, r0
2831:FWLIB/src/stm32f4xx_tim.c **** 
 3791              		.loc 1 2831 0
 3792 0004 FFF7FEFF 		bl	TIM_ETRConfig
 3793              	.LVL466:
2834:FWLIB/src/stm32f4xx_tim.c **** }
 3794              		.loc 1 2834 0
 3795 0008 2389     		ldrh	r3, [r4, #8]
 3796 000a 9BB2     		uxth	r3, r3
 3797 000c 43F48043 		orr	r3, r3, #16384
 3798 0010 2381     		strh	r3, [r4, #8]	@ movhi
 3799 0012 10BD     		pop	{r4, pc}
 3800              		.cfi_endproc
 3801              	.LFE202:
 3803              		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 3804              		.align	2
 3805              		.global	TIM_EncoderInterfaceConfig
 3806              		.thumb
 3807              		.thumb_func
 3809              	TIM_EncoderInterfaceConfig:
 3810              	.LFB208:
3072:FWLIB/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 3811              		.loc 1 3072 0
 3812              		.cfi_startproc
 3813              		@ args = 0, pretend = 0, frame = 0
 3814              		@ frame_needed = 0, uses_anonymous_args = 0
 3815              		@ link register save eliminated.
 3816              	.LVL467:
 3817 0000 70B4     		push	{r4, r5, r6}
 3818              	.LCFI32:
 3819              		.cfi_def_cfa_offset 12
 3820              		.cfi_offset 4, -12
 3821              		.cfi_offset 5, -8
 3822              		.cfi_offset 6, -4
 3823              	.LVL468:
3084:FWLIB/src/stm32f4xx_tim.c **** 
 3824              		.loc 1 3084 0
 3825 0002 0589     		ldrh	r5, [r0, #8]
 3826 0004 ADB2     		uxth	r5, r5
 3827              	.LVL469:
3087:FWLIB/src/stm32f4xx_tim.c **** 
 3828              		.loc 1 3087 0
 3829 0006 048B     		ldrh	r4, [r0, #24]
 3830 0008 A4B2     		uxth	r4, r4
 3831              	.LVL470:
3090:FWLIB/src/stm32f4xx_tim.c **** 
 3832              		.loc 1 3090 0
 3833 000a 068C     		ldrh	r6, [r0, #32]
 3834 000c B6B2     		uxth	r6, r6
 3835              	.LVL471:
3093:FWLIB/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 133


 3836              		.loc 1 3093 0
 3837 000e 25F00705 		bic	r5, r5, #7
 3838              	.LVL472:
3094:FWLIB/src/stm32f4xx_tim.c **** 
 3839              		.loc 1 3094 0
 3840 0012 2943     		orrs	r1, r1, r5
 3841              	.LVL473:
3097:FWLIB/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 3842              		.loc 1 3097 0
 3843 0014 24F44074 		bic	r4, r4, #768
 3844              	.LVL474:
 3845 0018 24F00304 		bic	r4, r4, #3
 3846              	.LVL475:
3098:FWLIB/src/stm32f4xx_tim.c **** 
 3847              		.loc 1 3098 0
 3848 001c 44F48074 		orr	r4, r4, #256
 3849              	.LVL476:
 3850 0020 44F00104 		orr	r4, r4, #1
 3851              	.LVL477:
3101:FWLIB/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 3852              		.loc 1 3101 0
 3853 0024 26F02206 		bic	r6, r6, #34
 3854              	.LVL478:
3102:FWLIB/src/stm32f4xx_tim.c **** 
 3855              		.loc 1 3102 0
 3856 0028 1B01     		lsls	r3, r3, #4
 3857              	.LVL479:
 3858 002a 9BB2     		uxth	r3, r3
 3859 002c 1A43     		orrs	r2, r2, r3
 3860              	.LVL480:
 3861 002e 46EA0203 		orr	r3, r6, r2
 3862              	.LVL481:
3105:FWLIB/src/stm32f4xx_tim.c **** 
 3863              		.loc 1 3105 0
 3864 0032 0181     		strh	r1, [r0, #8]	@ movhi
3108:FWLIB/src/stm32f4xx_tim.c **** 
 3865              		.loc 1 3108 0
 3866 0034 0483     		strh	r4, [r0, #24]	@ movhi
3111:FWLIB/src/stm32f4xx_tim.c **** }
 3867              		.loc 1 3111 0
 3868 0036 0384     		strh	r3, [r0, #32]	@ movhi
3112:FWLIB/src/stm32f4xx_tim.c **** 
 3869              		.loc 1 3112 0
 3870 0038 70BC     		pop	{r4, r5, r6}
 3871              	.LCFI33:
 3872              		.cfi_restore 6
 3873              		.cfi_restore 5
 3874              		.cfi_restore 4
 3875              		.cfi_def_cfa_offset 0
 3876              	.LVL482:
 3877 003a 7047     		bx	lr
 3878              		.cfi_endproc
 3879              	.LFE208:
 3881              		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 3882              		.align	2
 3883              		.global	TIM_SelectHallSensor
 3884              		.thumb
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 134


 3885              		.thumb_func
 3887              	TIM_SelectHallSensor:
 3888              	.LFB209:
3123:FWLIB/src/stm32f4xx_tim.c ****   /* Check the parameters */
 3889              		.loc 1 3123 0
 3890              		.cfi_startproc
 3891              		@ args = 0, pretend = 0, frame = 0
 3892              		@ frame_needed = 0, uses_anonymous_args = 0
 3893              		@ link register save eliminated.
 3894              	.LVL483:
3128:FWLIB/src/stm32f4xx_tim.c ****   {
 3895              		.loc 1 3128 0
 3896 0000 29B1     		cbz	r1, .L192
3131:FWLIB/src/stm32f4xx_tim.c ****   }
 3897              		.loc 1 3131 0
 3898 0002 8388     		ldrh	r3, [r0, #4]
 3899 0004 9BB2     		uxth	r3, r3
 3900 0006 43F08003 		orr	r3, r3, #128
 3901 000a 8380     		strh	r3, [r0, #4]	@ movhi
 3902 000c 7047     		bx	lr
 3903              	.L192:
3136:FWLIB/src/stm32f4xx_tim.c ****   }
 3904              		.loc 1 3136 0
 3905 000e 8388     		ldrh	r3, [r0, #4]
 3906 0010 9BB2     		uxth	r3, r3
 3907 0012 23F08003 		bic	r3, r3, #128
 3908 0016 9BB2     		uxth	r3, r3
 3909 0018 8380     		strh	r3, [r0, #4]	@ movhi
 3910 001a 7047     		bx	lr
 3911              		.cfi_endproc
 3912              	.LFE209:
 3914              		.section	.text.TIM_RemapConfig,"ax",%progbits
 3915              		.align	2
 3916              		.global	TIM_RemapConfig
 3917              		.thumb
 3918              		.thumb_func
 3920              	TIM_RemapConfig:
 3921              	.LFB210:
3174:FWLIB/src/stm32f4xx_tim.c ****  /* Check the parameters */
 3922              		.loc 1 3174 0
 3923              		.cfi_startproc
 3924              		@ args = 0, pretend = 0, frame = 0
 3925              		@ frame_needed = 0, uses_anonymous_args = 0
 3926              		@ link register save eliminated.
 3927              	.LVL484:
3180:FWLIB/src/stm32f4xx_tim.c **** }
 3928              		.loc 1 3180 0
 3929 0000 A0F85010 		strh	r1, [r0, #80]	@ movhi
 3930 0004 7047     		bx	lr
 3931              		.cfi_endproc
 3932              	.LFE210:
 3934 0006 00BF     		.text
 3935              	.Letext0:
 3936              		.file 2 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_types.h"
 3937              		.file 3 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 3938              		.file 4 "USER/stm32f4xx.h"
 3939              		.file 5 "FWLIB/inc/stm32f4xx_tim.h"
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 135


 3940              		.file 6 "FWLIB/inc/stm32f4xx_rcc.h"
 3941              		.file 7 "F4_CORE/core_cm4.h"
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 136


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_tim.c
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:22     .text.TI1_Config:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:26     .text.TI1_Config:00000000 TI1_Config
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:90     .text.TI2_Config:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:94     .text.TI2_Config:00000000 TI2_Config
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:167    .text.TI3_Config:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:171    .text.TI3_Config:00000000 TI3_Config
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:238    .text.TI4_Config:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:242    .text.TI4_Config:00000000 TI4_Config
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:318    .text.TIM_DeInit:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:323    .text.TIM_DeInit:00000000 TIM_DeInit
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:588    .text.TIM_DeInit:00000164 $d
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:605    .text.TIM_TimeBaseInit:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:610    .text.TIM_TimeBaseInit:00000000 TIM_TimeBaseInit
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:702    .text.TIM_TimeBaseInit:00000074 $d
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:708    .text.TIM_TimeBaseStructInit:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:713    .text.TIM_TimeBaseStructInit:00000000 TIM_TimeBaseStructInit
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:738    .text.TIM_PrescalerConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:743    .text.TIM_PrescalerConfig:00000000 TIM_PrescalerConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:760    .text.TIM_CounterModeConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:765    .text.TIM_CounterModeConfig:00000000 TIM_CounterModeConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:790    .text.TIM_SetCounter:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:795    .text.TIM_SetCounter:00000000 TIM_SetCounter
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:810    .text.TIM_SetAutoreload:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:815    .text.TIM_SetAutoreload:00000000 TIM_SetAutoreload
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:830    .text.TIM_GetCounter:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:835    .text.TIM_GetCounter:00000000 TIM_GetCounter
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:852    .text.TIM_GetPrescaler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:857    .text.TIM_GetPrescaler:00000000 TIM_GetPrescaler
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:875    .text.TIM_UpdateDisableConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:880    .text.TIM_UpdateDisableConfig:00000000 TIM_UpdateDisableConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:908    .text.TIM_UpdateRequestConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:913    .text.TIM_UpdateRequestConfig:00000000 TIM_UpdateRequestConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:941    .text.TIM_ARRPreloadConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:946    .text.TIM_ARRPreloadConfig:00000000 TIM_ARRPreloadConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:974    .text.TIM_SelectOnePulseMode:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:979    .text.TIM_SelectOnePulseMode:00000000 TIM_SelectOnePulseMode
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1004   .text.TIM_SetClockDivision:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1009   .text.TIM_SetClockDivision:00000000 TIM_SetClockDivision
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1034   .text.TIM_Cmd:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1039   .text.TIM_Cmd:00000000 TIM_Cmd
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1067   .text.TIM_OC1Init:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1072   .text.TIM_OC1Init:00000000 TIM_OC1Init
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1179   .text.TIM_OC1Init:00000068 $d
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1184   .text.TIM_OC2Init:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1189   .text.TIM_OC2Init:00000000 TIM_OC2Init
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1308   .text.TIM_OC2Init:00000084 $d
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1313   .text.TIM_OC3Init:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1318   .text.TIM_OC3Init:00000000 TIM_OC3Init
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1435   .text.TIM_OC3Init:00000080 $d
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1440   .text.TIM_OC4Init:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1445   .text.TIM_OC4Init:00000000 TIM_OC4Init
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1542   .text.TIM_OC4Init:00000064 $d
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1547   .text.TIM_OCStructInit:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1552   .text.TIM_OCStructInit:00000000 TIM_OCStructInit
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1582   .text.TIM_SelectOCxM:00000000 $t
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 137


C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1587   .text.TIM_SelectOCxM:00000000 TIM_SelectOCxM
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1671   .text.TIM_SetCompare1:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1676   .text.TIM_SetCompare1:00000000 TIM_SetCompare1
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1691   .text.TIM_SetCompare2:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1696   .text.TIM_SetCompare2:00000000 TIM_SetCompare2
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1711   .text.TIM_SetCompare3:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1716   .text.TIM_SetCompare3:00000000 TIM_SetCompare3
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1731   .text.TIM_SetCompare4:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1736   .text.TIM_SetCompare4:00000000 TIM_SetCompare4
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1751   .text.TIM_ForcedOC1Config:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1756   .text.TIM_ForcedOC1Config:00000000 TIM_ForcedOC1Config
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1781   .text.TIM_ForcedOC2Config:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1786   .text.TIM_ForcedOC2Config:00000000 TIM_ForcedOC2Config
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1814   .text.TIM_ForcedOC3Config:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1819   .text.TIM_ForcedOC3Config:00000000 TIM_ForcedOC3Config
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1844   .text.TIM_ForcedOC4Config:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1849   .text.TIM_ForcedOC4Config:00000000 TIM_ForcedOC4Config
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1877   .text.TIM_OC1PreloadConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1882   .text.TIM_OC1PreloadConfig:00000000 TIM_OC1PreloadConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1907   .text.TIM_OC2PreloadConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1912   .text.TIM_OC2PreloadConfig:00000000 TIM_OC2PreloadConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1940   .text.TIM_OC3PreloadConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1945   .text.TIM_OC3PreloadConfig:00000000 TIM_OC3PreloadConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1970   .text.TIM_OC4PreloadConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:1975   .text.TIM_OC4PreloadConfig:00000000 TIM_OC4PreloadConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2003   .text.TIM_OC1FastConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2008   .text.TIM_OC1FastConfig:00000000 TIM_OC1FastConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2033   .text.TIM_OC2FastConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2038   .text.TIM_OC2FastConfig:00000000 TIM_OC2FastConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2066   .text.TIM_OC3FastConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2071   .text.TIM_OC3FastConfig:00000000 TIM_OC3FastConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2096   .text.TIM_OC4FastConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2101   .text.TIM_OC4FastConfig:00000000 TIM_OC4FastConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2129   .text.TIM_ClearOC1Ref:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2134   .text.TIM_ClearOC1Ref:00000000 TIM_ClearOC1Ref
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2159   .text.TIM_ClearOC2Ref:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2164   .text.TIM_ClearOC2Ref:00000000 TIM_ClearOC2Ref
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2191   .text.TIM_ClearOC3Ref:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2196   .text.TIM_ClearOC3Ref:00000000 TIM_ClearOC3Ref
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2221   .text.TIM_ClearOC4Ref:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2226   .text.TIM_ClearOC4Ref:00000000 TIM_ClearOC4Ref
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2253   .text.TIM_OC1PolarityConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2258   .text.TIM_OC1PolarityConfig:00000000 TIM_OC1PolarityConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2283   .text.TIM_OC1NPolarityConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2288   .text.TIM_OC1NPolarityConfig:00000000 TIM_OC1NPolarityConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2313   .text.TIM_OC2PolarityConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2318   .text.TIM_OC2PolarityConfig:00000000 TIM_OC2PolarityConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2346   .text.TIM_OC2NPolarityConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2351   .text.TIM_OC2NPolarityConfig:00000000 TIM_OC2NPolarityConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2379   .text.TIM_OC3PolarityConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2384   .text.TIM_OC3PolarityConfig:00000000 TIM_OC3PolarityConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2412   .text.TIM_OC3NPolarityConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2417   .text.TIM_OC3NPolarityConfig:00000000 TIM_OC3NPolarityConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2445   .text.TIM_OC4PolarityConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2450   .text.TIM_OC4PolarityConfig:00000000 TIM_OC4PolarityConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2478   .text.TIM_CCxCmd:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2483   .text.TIM_CCxCmd:00000000 TIM_CCxCmd
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 138


C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2527   .text.TIM_CCxNCmd:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2532   .text.TIM_CCxNCmd:00000000 TIM_CCxNCmd
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2576   .text.TIM_ICStructInit:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2581   .text.TIM_ICStructInit:00000000 TIM_ICStructInit
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2606   .text.TIM_GetCapture1:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2611   .text.TIM_GetCapture1:00000000 TIM_GetCapture1
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2628   .text.TIM_GetCapture2:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2633   .text.TIM_GetCapture2:00000000 TIM_GetCapture2
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2650   .text.TIM_GetCapture3:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2655   .text.TIM_GetCapture3:00000000 TIM_GetCapture3
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2672   .text.TIM_GetCapture4:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2677   .text.TIM_GetCapture4:00000000 TIM_GetCapture4
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2694   .text.TIM_SetIC1Prescaler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2699   .text.TIM_SetIC1Prescaler:00000000 TIM_SetIC1Prescaler
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2724   .text.TIM_SetIC2Prescaler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2729   .text.TIM_SetIC2Prescaler:00000000 TIM_SetIC2Prescaler
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2756   .text.TIM_PWMIConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2761   .text.TIM_PWMIConfig:00000000 TIM_PWMIConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2861   .text.TIM_SetIC3Prescaler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2866   .text.TIM_SetIC3Prescaler:00000000 TIM_SetIC3Prescaler
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2891   .text.TIM_SetIC4Prescaler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2896   .text.TIM_SetIC4Prescaler:00000000 TIM_SetIC4Prescaler
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2923   .text.TIM_ICInit:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:2928   .text.TIM_ICInit:00000000 TIM_ICInit
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3015   .text.TIM_BDTRConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3020   .text.TIM_BDTRConfig:00000000 TIM_BDTRConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3060   .text.TIM_BDTRStructInit:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3065   .text.TIM_BDTRStructInit:00000000 TIM_BDTRStructInit
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3093   .text.TIM_CtrlPWMOutputs:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3098   .text.TIM_CtrlPWMOutputs:00000000 TIM_CtrlPWMOutputs
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3125   .text.TIM_SelectCOM:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3130   .text.TIM_SelectCOM:00000000 TIM_SelectCOM
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3158   .text.TIM_CCPreloadControl:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3163   .text.TIM_CCPreloadControl:00000000 TIM_CCPreloadControl
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3191   .text.TIM_ITConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3196   .text.TIM_ITConfig:00000000 TIM_ITConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3227   .text.TIM_GenerateEvent:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3232   .text.TIM_GenerateEvent:00000000 TIM_GenerateEvent
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3247   .text.TIM_GetFlagStatus:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3252   .text.TIM_GetFlagStatus:00000000 TIM_GetFlagStatus
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3279   .text.TIM_ClearFlag:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3284   .text.TIM_ClearFlag:00000000 TIM_ClearFlag
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3302   .text.TIM_GetITStatus:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3307   .text.TIM_GetITStatus:00000000 TIM_GetITStatus
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3347   .text.TIM_ClearITPendingBit:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3352   .text.TIM_ClearITPendingBit:00000000 TIM_ClearITPendingBit
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3370   .text.TIM_DMAConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3375   .text.TIM_DMAConfig:00000000 TIM_DMAConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3392   .text.TIM_DMACmd:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3397   .text.TIM_DMACmd:00000000 TIM_DMACmd
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3428   .text.TIM_SelectCCDMA:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3433   .text.TIM_SelectCCDMA:00000000 TIM_SelectCCDMA
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3461   .text.TIM_InternalClockConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3466   .text.TIM_InternalClockConfig:00000000 TIM_InternalClockConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3485   .text.TIM_SelectInputTrigger:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3490   .text.TIM_SelectInputTrigger:00000000 TIM_SelectInputTrigger
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3515   .text.TIM_ITRxExternalClockConfig:00000000 $t
ARM GAS  C:\Users\why\AppData\Local\Temp\ccOdgCQI.s 			page 139


C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3520   .text.TIM_ITRxExternalClockConfig:00000000 TIM_ITRxExternalClockConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3546   .text.TIM_TIxExternalClockConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3551   .text.TIM_TIxExternalClockConfig:00000000 TIM_TIxExternalClockConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3601   .text.TIM_SelectOutputTrigger:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3606   .text.TIM_SelectOutputTrigger:00000000 TIM_SelectOutputTrigger
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3631   .text.TIM_SelectSlaveMode:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3636   .text.TIM_SelectSlaveMode:00000000 TIM_SelectSlaveMode
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3661   .text.TIM_SelectMasterSlaveMode:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3666   .text.TIM_SelectMasterSlaveMode:00000000 TIM_SelectMasterSlaveMode
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3691   .text.TIM_ETRConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3696   .text.TIM_ETRConfig:00000000 TIM_ETRConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3737   .text.TIM_ETRClockMode1Config:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3742   .text.TIM_ETRClockMode1Config:00000000 TIM_ETRClockMode1Config
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3773   .text.TIM_ETRClockMode2Config:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3778   .text.TIM_ETRClockMode2Config:00000000 TIM_ETRClockMode2Config
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3804   .text.TIM_EncoderInterfaceConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3809   .text.TIM_EncoderInterfaceConfig:00000000 TIM_EncoderInterfaceConfig
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3882   .text.TIM_SelectHallSensor:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3887   .text.TIM_SelectHallSensor:00000000 TIM_SelectHallSensor
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3915   .text.TIM_RemapConfig:00000000 $t
C:\Users\why\AppData\Local\Temp\ccOdgCQI.s:3920   .text.TIM_RemapConfig:00000000 TIM_RemapConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
