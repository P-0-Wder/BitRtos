ARM GAS  C:\Users\why\AppData\Local\Temp\cc48NkVf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"Dev_Toggle.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.Toggle_Get_2Level_Sum,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	Toggle_Get_2Level_Sum:
  27              	.LFB123:
  28              		.file 1 "Dev/Dev_Toggle.c"
   1:Dev/Dev_Toggle.c **** #include "Dev_Toggle.h"
   2:Dev/Dev_Toggle.c **** #include "drv_gpio.h"
   3:Dev/Dev_Toggle.c **** #include <string.h>
   4:Dev/Dev_Toggle.c **** 
   5:Dev/Dev_Toggle.c **** /* internal variable */
   6:Dev/Dev_Toggle.c **** static uint8_t toggle_2level_sum = 0;
   7:Dev/Dev_Toggle.c **** static uint8_t toggle_3level_sum = 0;
   8:Dev/Dev_Toggle.c **** 
   9:Dev/Dev_Toggle.c **** /* internal function */
  10:Dev/Dev_Toggle.c **** 
  11:Dev/Dev_Toggle.c **** /* external variable */
  12:Dev/Dev_Toggle.c **** static bool Toggle_Open(Toggle_Obj_TypeDef *obj, DevToggle_Type_List type, DrvGPIO_Obj_TypeDef *io)
  13:Dev/Dev_Toggle.c **** static bool Toggle_Invert(Toggle_Obj_TypeDef *obj);
  14:Dev/Dev_Toggle.c **** static DevToggle_Pos_List Toggle_Get(Toggle_Obj_TypeDef *obj);
  15:Dev/Dev_Toggle.c **** static uint8_t Toggle_Get_2Level_Sum(void);
  16:Dev/Dev_Toggle.c **** static uint8_t Toggle_Get_3Level_Sum(void);
  17:Dev/Dev_Toggle.c **** 
  18:Dev/Dev_Toggle.c **** /* external function */
  19:Dev/Dev_Toggle.c **** DevToggle_TypeDef DevToggle = {
  20:Dev/Dev_Toggle.c ****     .Open = Toggle_Open,
  21:Dev/Dev_Toggle.c ****     .Get = Toggle_Get,
  22:Dev/Dev_Toggle.c ****     .Invert = Toggle_Invert,
  23:Dev/Dev_Toggle.c ****     .get_2level_toggle_num = Toggle_Get_2Level_Sum,
  24:Dev/Dev_Toggle.c ****     .get_3level_toggle_num = Toggle_Get_3Level_Sum,
  25:Dev/Dev_Toggle.c **** };
  26:Dev/Dev_Toggle.c **** 
  27:Dev/Dev_Toggle.c **** static uint8_t Toggle_Get_2Level_Sum(void)
  28:Dev/Dev_Toggle.c **** {
  29              		.loc 1 28 0
  30              		.cfi_startproc
ARM GAS  C:\Users\why\AppData\Local\Temp\cc48NkVf.s 			page 2


  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  29:Dev/Dev_Toggle.c ****     return toggle_2level_sum;
  30:Dev/Dev_Toggle.c **** }
  34              		.loc 1 30 0
  35 0000 014B     		ldr	r3, .L2
  36 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  37 0004 7047     		bx	lr
  38              	.L3:
  39 0006 00BF     		.align	2
  40              	.L2:
  41 0008 00000000 		.word	.LANCHOR0
  42              		.cfi_endproc
  43              	.LFE123:
  45              		.section	.text.Toggle_Get_3Level_Sum,"ax",%progbits
  46              		.align	2
  47              		.thumb
  48              		.thumb_func
  50              	Toggle_Get_3Level_Sum:
  51              	.LFB124:
  31:Dev/Dev_Toggle.c **** 
  32:Dev/Dev_Toggle.c **** static uint8_t Toggle_Get_3Level_Sum(void)
  33:Dev/Dev_Toggle.c **** {
  52              		.loc 1 33 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  34:Dev/Dev_Toggle.c ****     return toggle_3level_sum;
  35:Dev/Dev_Toggle.c **** }
  57              		.loc 1 35 0
  58 0000 014B     		ldr	r3, .L5
  59 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  60 0004 7047     		bx	lr
  61              	.L6:
  62 0006 00BF     		.align	2
  63              	.L5:
  64 0008 00000000 		.word	.LANCHOR1
  65              		.cfi_endproc
  66              	.LFE124:
  68              		.section	.text.Toggle_Invert,"ax",%progbits
  69              		.align	2
  70              		.thumb
  71              		.thumb_func
  73              	Toggle_Invert:
  74              	.LFB126:
  36:Dev/Dev_Toggle.c **** 
  37:Dev/Dev_Toggle.c **** static bool Toggle_Open(Toggle_Obj_TypeDef *obj, DevToggle_Type_List type, DrvGPIO_Obj_TypeDef *io)
  38:Dev/Dev_Toggle.c **** {
  39:Dev/Dev_Toggle.c ****     if ((obj == NULL) || ((type < Toggle_2Level) || (Toggle_2Level > Toggle_3Level)))
  40:Dev/Dev_Toggle.c ****     {
  41:Dev/Dev_Toggle.c ****         obj->init_state = false;
  42:Dev/Dev_Toggle.c ****         return false;
  43:Dev/Dev_Toggle.c ****     }
  44:Dev/Dev_Toggle.c **** 
  45:Dev/Dev_Toggle.c ****     obj->level = type;
ARM GAS  C:\Users\why\AppData\Local\Temp\cc48NkVf.s 			page 3


  46:Dev/Dev_Toggle.c ****     obj->invert = false;
  47:Dev/Dev_Toggle.c **** 
  48:Dev/Dev_Toggle.c ****     memset(obj->IO_Ptr, NULL, sizeof(obj->IO_Ptr));
  49:Dev/Dev_Toggle.c **** 
  50:Dev/Dev_Toggle.c ****     /* set io data structure */
  51:Dev/Dev_Toggle.c ****     for (uint8_t i = 0; i < (uint8_t)type; i++)
  52:Dev/Dev_Toggle.c ****     {
  53:Dev/Dev_Toggle.c ****         obj->IO_Ptr[i] = &io[i];
  54:Dev/Dev_Toggle.c **** 
  55:Dev/Dev_Toggle.c ****         /* ToDo IO init */
  56:Dev/Dev_Toggle.c ****         DrvGPIO.open(&obj->IO_Ptr[i], GPIO_Input, NULL);
  57:Dev/Dev_Toggle.c ****     }
  58:Dev/Dev_Toggle.c **** 
  59:Dev/Dev_Toggle.c ****     if (type == Toggle_2Level)
  60:Dev/Dev_Toggle.c ****     {
  61:Dev/Dev_Toggle.c ****         toggle_2level_sum++;
  62:Dev/Dev_Toggle.c ****     }
  63:Dev/Dev_Toggle.c ****     else if (type == Toggle_3Level)
  64:Dev/Dev_Toggle.c ****         toggle_3level_sum++;
  65:Dev/Dev_Toggle.c **** 
  66:Dev/Dev_Toggle.c ****     obj->init_state = true;
  67:Dev/Dev_Toggle.c ****     return true;
  68:Dev/Dev_Toggle.c **** }
  69:Dev/Dev_Toggle.c **** 
  70:Dev/Dev_Toggle.c **** static bool Toggle_Invert(Toggle_Obj_TypeDef *obj)
  71:Dev/Dev_Toggle.c **** {
  75              		.loc 1 71 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.LVL0:
  72:Dev/Dev_Toggle.c ****     if ((obj == NULL) || (!obj->init_state))
  81              		.loc 1 72 0
  82 0000 0346     		mov	r3, r0
  83 0002 30B1     		cbz	r0, .L9
  84              		.loc 1 72 0 is_stmt 0 discriminator 1
  85 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  86              	.LVL1:
  87 0006 28B1     		cbz	r0, .L8
  73:Dev/Dev_Toggle.c ****         return false;
  74:Dev/Dev_Toggle.c **** 
  75:Dev/Dev_Toggle.c ****     obj->invert = !obj->invert;
  88              		.loc 1 75 0 is_stmt 1
  89 0008 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
  90 000a 82F00102 		eor	r2, r2, #1
  91 000e 9A70     		strb	r2, [r3, #2]
  76:Dev/Dev_Toggle.c **** 
  77:Dev/Dev_Toggle.c ****     return true;
  92              		.loc 1 77 0
  93 0010 7047     		bx	lr
  94              	.LVL2:
  95              	.L9:
  73:Dev/Dev_Toggle.c ****         return false;
  96              		.loc 1 73 0
  97 0012 0020     		movs	r0, #0
  98              	.LVL3:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc48NkVf.s 			page 4


  99              	.L8:
  78:Dev/Dev_Toggle.c **** }
 100              		.loc 1 78 0
 101 0014 7047     		bx	lr
 102              		.cfi_endproc
 103              	.LFE126:
 105 0016 00BF     		.section	.text.Toggle_Get,"ax",%progbits
 106              		.align	2
 107              		.thumb
 108              		.thumb_func
 110              	Toggle_Get:
 111              	.LFB127:
  79:Dev/Dev_Toggle.c **** 
  80:Dev/Dev_Toggle.c **** static DevToggle_Pos_List Toggle_Get(Toggle_Obj_TypeDef *obj)
  81:Dev/Dev_Toggle.c **** {
 112              		.loc 1 81 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              	.LVL4:
  82:Dev/Dev_Toggle.c ****     DevToggle_Pos_List val = Toggle_Err;
  83:Dev/Dev_Toggle.c ****     uint8_t io_read = 0;
  84:Dev/Dev_Toggle.c **** 
  85:Dev/Dev_Toggle.c ****     if ((obj == NULL) || (!obj->init_state))
 117              		.loc 1 85 0
 118 0000 0028     		cmp	r0, #0
 119 0002 2CD0     		beq	.L20
  81:Dev/Dev_Toggle.c ****     DevToggle_Pos_List val = Toggle_Err;
 120              		.loc 1 81 0 discriminator 1
 121 0004 70B5     		push	{r4, r5, r6, lr}
 122              	.LCFI0:
 123              		.cfi_def_cfa_offset 16
 124              		.cfi_offset 4, -16
 125              		.cfi_offset 5, -12
 126              		.cfi_offset 6, -8
 127              		.cfi_offset 14, -4
 128 0006 0546     		mov	r5, r0
 129              		.loc 1 85 0 discriminator 1
 130 0008 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 131 000a 73B9     		cbnz	r3, .L21
  86:Dev/Dev_Toggle.c ****         return Toggle_Err;
 132              		.loc 1 86 0
 133 000c 0320     		movs	r0, #3
 134              	.LVL5:
 135 000e 70BD     		pop	{r4, r5, r6, pc}
 136              	.LVL6:
 137              	.L14:
 138              	.LBB2:
  87:Dev/Dev_Toggle.c **** 
  88:Dev/Dev_Toggle.c ****     for (uint8_t i = 0; i < obj->level; i++)
  89:Dev/Dev_Toggle.c ****     {
  90:Dev/Dev_Toggle.c ****         if (DrvGPIO.get(obj) == GPIO_HIGH)
 139              		.loc 1 90 0
 140 0010 194B     		ldr	r3, .L28
 141 0012 DB68     		ldr	r3, [r3, #12]
 142 0014 2846     		mov	r0, r5
 143 0016 9847     		blx	r3
ARM GAS  C:\Users\why\AppData\Local\Temp\cc48NkVf.s 			page 5


 144              	.LVL7:
 145 0018 0228     		cmp	r0, #2
 146 001a 03D1     		bne	.L13
  91:Dev/Dev_Toggle.c ****         {
  92:Dev/Dev_Toggle.c ****             io_read |= 1 << i;
 147              		.loc 1 92 0
 148 001c 0123     		movs	r3, #1
 149 001e A340     		lsls	r3, r3, r4
 150 0020 3343     		orrs	r3, r3, r6
 151 0022 DEB2     		uxtb	r6, r3
 152              	.LVL8:
 153              	.L13:
  88:Dev/Dev_Toggle.c ****     {
 154              		.loc 1 88 0 discriminator 2
 155 0024 0134     		adds	r4, r4, #1
 156              	.LVL9:
 157 0026 E4B2     		uxtb	r4, r4
 158              	.LVL10:
 159 0028 01E0     		b	.L12
 160              	.LVL11:
 161              	.L21:
 162              	.LBE2:
 163 002a 0024     		movs	r4, #0
 164 002c 2646     		mov	r6, r4
 165              	.LVL12:
 166              	.L12:
 167              	.LBB3:
  88:Dev/Dev_Toggle.c ****     {
 168              		.loc 1 88 0 is_stmt 0 discriminator 1
 169 002e 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 170 0030 9C42     		cmp	r4, r3
 171 0032 EDD3     		bcc	.L14
 172              	.LBE3:
  93:Dev/Dev_Toggle.c ****         }
  94:Dev/Dev_Toggle.c ****     }
  95:Dev/Dev_Toggle.c **** 
  96:Dev/Dev_Toggle.c ****     switch (io_read)
 173              		.loc 1 96 0 is_stmt 1
 174 0034 032E     		cmp	r6, #3
 175 0036 11D8     		bhi	.L15
 176 0038 DFE806F0 		tbb	[pc, r6]
 177              	.L17:
 178 003c 02       		.byte	(.L16-.L17)/2
 179 003d 08       		.byte	(.L18-.L17)/2
 180 003e 0C       		.byte	(.L19-.L17)/2
 181 003f 13       		.byte	(.L22-.L17)/2
 182              		.p2align 1
 183              	.L16:
  97:Dev/Dev_Toggle.c ****     {
  98:Dev/Dev_Toggle.c ****     case 0x03:
  99:Dev/Dev_Toggle.c ****         return val;
 100:Dev/Dev_Toggle.c **** 
 101:Dev/Dev_Toggle.c ****     case 0x00:
 102:Dev/Dev_Toggle.c ****         if (obj->level == Toggle_2Level)
 184              		.loc 1 102 0
 185 0040 012B     		cmp	r3, #1
 186 0042 10D1     		bne	.L23
ARM GAS  C:\Users\why\AppData\Local\Temp\cc48NkVf.s 			page 6


 103:Dev/Dev_Toggle.c ****         {
 104:Dev/Dev_Toggle.c ****             if (!obj->invert)
 187              		.loc 1 104 0
 188 0044 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 189 0046 83B9     		cbnz	r3, .L24
 105:Dev/Dev_Toggle.c ****             {
 106:Dev/Dev_Toggle.c ****                 return Toggle_Dwn;
 190              		.loc 1 106 0
 191 0048 0120     		movs	r0, #1
 192 004a 70BD     		pop	{r4, r5, r6, pc}
 193              	.LVL13:
 194              	.L18:
 107:Dev/Dev_Toggle.c ****             }
 108:Dev/Dev_Toggle.c ****             else
 109:Dev/Dev_Toggle.c ****                 return Toggle_Up;
 110:Dev/Dev_Toggle.c ****         }
 111:Dev/Dev_Toggle.c ****         else
 112:Dev/Dev_Toggle.c ****             return Toggle_Mid;
 113:Dev/Dev_Toggle.c **** 
 114:Dev/Dev_Toggle.c ****     case 0x01:
 115:Dev/Dev_Toggle.c ****         if (!obj->invert)
 195              		.loc 1 115 0
 196 004c AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 197 004e 73B9     		cbnz	r3, .L25
 116:Dev/Dev_Toggle.c ****         {
 117:Dev/Dev_Toggle.c ****             return Toggle_Up;
 198              		.loc 1 117 0
 199 0050 0020     		movs	r0, #0
 200 0052 70BD     		pop	{r4, r5, r6, pc}
 201              	.LVL14:
 202              	.L19:
 118:Dev/Dev_Toggle.c ****         }
 119:Dev/Dev_Toggle.c ****         else
 120:Dev/Dev_Toggle.c ****             return Toggle_Dwn;
 121:Dev/Dev_Toggle.c **** 
 122:Dev/Dev_Toggle.c ****     case 0x02:
 123:Dev/Dev_Toggle.c ****         if (!obj->invert)
 203              		.loc 1 123 0
 204 0054 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 205 0056 63B9     		cbnz	r3, .L26
 124:Dev/Dev_Toggle.c ****         {
 125:Dev/Dev_Toggle.c ****             return Toggle_Dwn;
 206              		.loc 1 125 0
 207 0058 0120     		movs	r0, #1
 208 005a 70BD     		pop	{r4, r5, r6, pc}
 209              	.LVL15:
 210              	.L15:
 126:Dev/Dev_Toggle.c ****         }
 127:Dev/Dev_Toggle.c ****         else
 128:Dev/Dev_Toggle.c ****             return Toggle_Up;
 129:Dev/Dev_Toggle.c ****     }
 130:Dev/Dev_Toggle.c **** }
 211              		.loc 1 130 0
 212 005c 70BD     		pop	{r4, r5, r6, pc}
 213              	.LVL16:
 214              	.L20:
 215              	.LCFI1:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc48NkVf.s 			page 7


 216              		.cfi_def_cfa_offset 0
 217              		.cfi_restore 4
 218              		.cfi_restore 5
 219              		.cfi_restore 6
 220              		.cfi_restore 14
  86:Dev/Dev_Toggle.c **** 
 221              		.loc 1 86 0
 222 005e 0320     		movs	r0, #3
 223              	.LVL17:
 224              		.loc 1 130 0
 225 0060 7047     		bx	lr
 226              	.LVL18:
 227              	.L22:
 228              	.LCFI2:
 229              		.cfi_def_cfa_offset 16
 230              		.cfi_offset 4, -16
 231              		.cfi_offset 5, -12
 232              		.cfi_offset 6, -8
 233              		.cfi_offset 14, -4
  99:Dev/Dev_Toggle.c **** 
 234              		.loc 1 99 0
 235 0062 0320     		movs	r0, #3
 236 0064 70BD     		pop	{r4, r5, r6, pc}
 237              	.LVL19:
 238              	.L23:
 112:Dev/Dev_Toggle.c **** 
 239              		.loc 1 112 0
 240 0066 0220     		movs	r0, #2
 241 0068 70BD     		pop	{r4, r5, r6, pc}
 242              	.LVL20:
 243              	.L24:
 109:Dev/Dev_Toggle.c ****         }
 244              		.loc 1 109 0
 245 006a 0020     		movs	r0, #0
 246 006c 70BD     		pop	{r4, r5, r6, pc}
 247              	.LVL21:
 248              	.L25:
 120:Dev/Dev_Toggle.c **** 
 249              		.loc 1 120 0
 250 006e 0120     		movs	r0, #1
 251 0070 70BD     		pop	{r4, r5, r6, pc}
 252              	.LVL22:
 253              	.L26:
 128:Dev/Dev_Toggle.c ****     }
 254              		.loc 1 128 0
 255 0072 0020     		movs	r0, #0
 256              		.loc 1 130 0
 257 0074 70BD     		pop	{r4, r5, r6, pc}
 258              	.LVL23:
 259              	.L29:
 260 0076 00BF     		.align	2
 261              	.L28:
 262 0078 00000000 		.word	DrvGPIO
 263              		.cfi_endproc
 264              	.LFE127:
 266              		.section	.text.Toggle_Open,"ax",%progbits
 267              		.align	2
ARM GAS  C:\Users\why\AppData\Local\Temp\cc48NkVf.s 			page 8


 268              		.thumb
 269              		.thumb_func
 271              	Toggle_Open:
 272              	.LFB125:
  38:Dev/Dev_Toggle.c ****     if ((obj == NULL) || ((type < Toggle_2Level) || (Toggle_2Level > Toggle_3Level)))
 273              		.loc 1 38 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL24:
 278 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 279              	.LCFI3:
 280              		.cfi_def_cfa_offset 24
 281              		.cfi_offset 3, -24
 282              		.cfi_offset 4, -20
 283              		.cfi_offset 5, -16
 284              		.cfi_offset 6, -12
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
  39:Dev/Dev_Toggle.c ****     {
 287              		.loc 1 39 0
 288 0002 0546     		mov	r5, r0
 289 0004 00B1     		cbz	r0, .L31
  39:Dev/Dev_Toggle.c ****     {
 290              		.loc 1 39 0 is_stmt 0 discriminator 1
 291 0006 11B9     		cbnz	r1, .L32
 292              	.L31:
  41:Dev/Dev_Toggle.c ****         return false;
 293              		.loc 1 41 0 is_stmt 1
 294 0008 0020     		movs	r0, #0
 295              	.LVL25:
 296 000a 2870     		strb	r0, [r5]
  42:Dev/Dev_Toggle.c ****     }
 297              		.loc 1 42 0
 298 000c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 299              	.LVL26:
 300              	.L32:
 301 000e 1746     		mov	r7, r2
 302 0010 0E46     		mov	r6, r1
  45:Dev/Dev_Toggle.c ****     obj->invert = false;
 303              		.loc 1 45 0
 304 0012 6970     		strb	r1, [r5, #1]
  46:Dev/Dev_Toggle.c **** 
 305              		.loc 1 46 0
 306 0014 0024     		movs	r4, #0
 307 0016 8470     		strb	r4, [r0, #2]
  48:Dev/Dev_Toggle.c **** 
 308              		.loc 1 48 0
 309 0018 4460     		str	r4, [r0, #4]	@ unaligned
 310 001a 8460     		str	r4, [r0, #8]	@ unaligned
 311              	.LVL27:
 312              	.LBB4:
  51:Dev/Dev_Toggle.c ****     {
 313              		.loc 1 51 0
 314 001c 0CE0     		b	.L34
 315              	.LVL28:
 316              	.L35:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc48NkVf.s 			page 9


  53:Dev/Dev_Toggle.c **** 
 317              		.loc 1 53 0 discriminator 3
 318 001e 07EB0413 		add	r3, r7, r4, lsl #4
 319 0022 05EB8400 		add	r0, r5, r4, lsl #2
 320 0026 40F8043F 		str	r3, [r0, #4]!
  56:Dev/Dev_Toggle.c ****     }
 321              		.loc 1 56 0 discriminator 3
 322 002a 0C4B     		ldr	r3, .L39
 323 002c 1B68     		ldr	r3, [r3]
 324 002e 0022     		movs	r2, #0
 325 0030 0121     		movs	r1, #1
 326 0032 9847     		blx	r3
 327              	.LVL29:
  51:Dev/Dev_Toggle.c ****     {
 328              		.loc 1 51 0 discriminator 3
 329 0034 0134     		adds	r4, r4, #1
 330              	.LVL30:
 331 0036 E4B2     		uxtb	r4, r4
 332              	.LVL31:
 333              	.L34:
  51:Dev/Dev_Toggle.c ****     {
 334              		.loc 1 51 0 is_stmt 0 discriminator 1
 335 0038 B442     		cmp	r4, r6
 336 003a F0D3     		bcc	.L35
 337              	.LBE4:
  59:Dev/Dev_Toggle.c ****     {
 338              		.loc 1 59 0 is_stmt 1
 339 003c 012E     		cmp	r6, #1
 340 003e 04D1     		bne	.L36
  61:Dev/Dev_Toggle.c ****     }
 341              		.loc 1 61 0
 342 0040 074A     		ldr	r2, .L39+4
 343 0042 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 344 0044 0133     		adds	r3, r3, #1
 345 0046 1370     		strb	r3, [r2]
 346 0048 05E0     		b	.L37
 347              	.L36:
  63:Dev/Dev_Toggle.c ****         toggle_3level_sum++;
 348              		.loc 1 63 0
 349 004a 022E     		cmp	r6, #2
 350 004c 03D1     		bne	.L37
  64:Dev/Dev_Toggle.c **** 
 351              		.loc 1 64 0
 352 004e 054A     		ldr	r2, .L39+8
 353 0050 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 354 0052 0133     		adds	r3, r3, #1
 355 0054 1370     		strb	r3, [r2]
 356              	.L37:
  66:Dev/Dev_Toggle.c ****     return true;
 357              		.loc 1 66 0
 358 0056 0120     		movs	r0, #1
 359 0058 2870     		strb	r0, [r5]
  68:Dev/Dev_Toggle.c **** 
 360              		.loc 1 68 0
 361 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 362              	.LVL32:
 363              	.L40:
ARM GAS  C:\Users\why\AppData\Local\Temp\cc48NkVf.s 			page 10


 364              		.align	2
 365              	.L39:
 366 005c 00000000 		.word	DrvGPIO
 367 0060 00000000 		.word	.LANCHOR0
 368 0064 00000000 		.word	.LANCHOR1
 369              		.cfi_endproc
 370              	.LFE125:
 372              		.global	DevToggle
 373              		.section	.bss.toggle_3level_sum,"aw",%nobits
 374              		.set	.LANCHOR1,. + 0
 377              	toggle_3level_sum:
 378 0000 00       		.space	1
 379              		.section	.data.DevToggle,"aw",%progbits
 380              		.align	2
 383              	DevToggle:
 384 0000 00000000 		.word	Toggle_Open
 385 0004 00000000 		.word	Toggle_Invert
 386 0008 00000000 		.word	Toggle_Get
 387 000c 00000000 		.word	Toggle_Get_2Level_Sum
 388 0010 00000000 		.word	Toggle_Get_3Level_Sum
 389              		.section	.bss.toggle_2level_sum,"aw",%nobits
 390              		.set	.LANCHOR0,. + 0
 393              	toggle_2level_sum:
 394 0000 00       		.space	1
 395              		.text
 396              	.Letext0:
 397              		.file 2 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_types.h"
 398              		.file 3 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 399              		.file 4 "Bsp/periph_gpio.h"
 400              		.file 5 "Drv/drv_gpio.h"
 401              		.file 6 "Dev/Dev_Toggle.h"
 402              		.file 7 "F4_CORE/core_cm4.h"
ARM GAS  C:\Users\why\AppData\Local\Temp\cc48NkVf.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 Dev_Toggle.c
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:22     .text.Toggle_Get_2Level_Sum:00000000 $t
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:26     .text.Toggle_Get_2Level_Sum:00000000 Toggle_Get_2Level_Sum
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:41     .text.Toggle_Get_2Level_Sum:00000008 $d
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:46     .text.Toggle_Get_3Level_Sum:00000000 $t
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:50     .text.Toggle_Get_3Level_Sum:00000000 Toggle_Get_3Level_Sum
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:64     .text.Toggle_Get_3Level_Sum:00000008 $d
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:69     .text.Toggle_Invert:00000000 $t
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:73     .text.Toggle_Invert:00000000 Toggle_Invert
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:106    .text.Toggle_Get:00000000 $t
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:110    .text.Toggle_Get:00000000 Toggle_Get
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:178    .text.Toggle_Get:0000003c $d
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:182    .text.Toggle_Get:00000040 $t
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:262    .text.Toggle_Get:00000078 $d
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:267    .text.Toggle_Open:00000000 $t
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:271    .text.Toggle_Open:00000000 Toggle_Open
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:366    .text.Toggle_Open:0000005c $d
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:383    .data.DevToggle:00000000 DevToggle
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:377    .bss.toggle_3level_sum:00000000 toggle_3level_sum
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:378    .bss.toggle_3level_sum:00000000 $d
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:380    .data.DevToggle:00000000 $d
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:393    .bss.toggle_2level_sum:00000000 toggle_2level_sum
C:\Users\why\AppData\Local\Temp\cc48NkVf.s:394    .bss.toggle_2level_sum:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DrvGPIO
