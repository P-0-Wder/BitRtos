ARM GAS  /tmp/ccOmKp4S.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"Dev_Toggle.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Toggle_Get_2Level_Sum,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Toggle_Get_2Level_Sum:
  26              	.LFB123:
  27              		.file 1 "Dev/Dev_Toggle.c"
   1:Dev/Dev_Toggle.c **** #include "Dev_Toggle.h"
   2:Dev/Dev_Toggle.c **** #include "drv_gpio.h"
   3:Dev/Dev_Toggle.c **** #include <string.h>
   4:Dev/Dev_Toggle.c **** 
   5:Dev/Dev_Toggle.c **** /* internal variable */
   6:Dev/Dev_Toggle.c **** static uint8_t toggle_2level_sum = 0;
   7:Dev/Dev_Toggle.c **** static uint8_t toggle_3level_sum = 0;
   8:Dev/Dev_Toggle.c **** 
   9:Dev/Dev_Toggle.c **** /* internal function */
  10:Dev/Dev_Toggle.c **** 
  11:Dev/Dev_Toggle.c **** /* external variable */
  12:Dev/Dev_Toggle.c **** static bool Toggle_Open(Toggle_Obj_TypeDef *obj, DevToggle_Type_List type, DrvGPIO_Obj_TypeDef *io)
  13:Dev/Dev_Toggle.c **** static bool Toggle_Invert(Toggle_Obj_TypeDef *obj);
  14:Dev/Dev_Toggle.c **** static DevToggle_Pos_List Toggle_Get(Toggle_Obj_TypeDef *obj);
  15:Dev/Dev_Toggle.c **** static uint8_t Toggle_Get_2Level_Sum(void);
  16:Dev/Dev_Toggle.c **** static uint8_t Toggle_Get_3Level_Sum(void);
  17:Dev/Dev_Toggle.c **** 
  18:Dev/Dev_Toggle.c **** /* external function */
  19:Dev/Dev_Toggle.c **** DevToggle_TypeDef DevToggle = {
  20:Dev/Dev_Toggle.c ****     .Open = Toggle_Open,
  21:Dev/Dev_Toggle.c ****     .Get = Toggle_Get,
  22:Dev/Dev_Toggle.c ****     .Invert = Toggle_Invert,
  23:Dev/Dev_Toggle.c ****     .get_2level_toggle_num = Toggle_Get_2Level_Sum,
  24:Dev/Dev_Toggle.c ****     .get_3level_toggle_num = Toggle_Get_3Level_Sum,
  25:Dev/Dev_Toggle.c **** };
  26:Dev/Dev_Toggle.c **** 
  27:Dev/Dev_Toggle.c **** static uint8_t Toggle_Get_2Level_Sum(void)
  28:Dev/Dev_Toggle.c **** {
  28              		.loc 1 28 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccOmKp4S.s 			page 2


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  29:Dev/Dev_Toggle.c ****     return toggle_2level_sum;
  33              		.loc 1 29 5 view .LVU1
  30:Dev/Dev_Toggle.c **** }
  34              		.loc 1 30 1 is_stmt 0 view .LVU2
  35 0000 014B     		ldr	r3, .L2
  36 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  37 0004 7047     		bx	lr
  38              	.L3:
  39 0006 00BF     		.align	2
  40              	.L2:
  41 0008 00000000 		.word	.LANCHOR0
  42              		.cfi_endproc
  43              	.LFE123:
  45              		.section	.text.Toggle_Get_3Level_Sum,"ax",%progbits
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv4-sp-d16
  52              	Toggle_Get_3Level_Sum:
  53              	.LFB124:
  31:Dev/Dev_Toggle.c **** 
  32:Dev/Dev_Toggle.c **** static uint8_t Toggle_Get_3Level_Sum(void)
  33:Dev/Dev_Toggle.c **** {
  54              		.loc 1 33 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  34:Dev/Dev_Toggle.c ****     return toggle_3level_sum;
  59              		.loc 1 34 5 view .LVU4
  35:Dev/Dev_Toggle.c **** }
  60              		.loc 1 35 1 is_stmt 0 view .LVU5
  61 0000 014B     		ldr	r3, .L5
  62 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  63 0004 7047     		bx	lr
  64              	.L6:
  65 0006 00BF     		.align	2
  66              	.L5:
  67 0008 00000000 		.word	.LANCHOR1
  68              		.cfi_endproc
  69              	.LFE124:
  71              		.section	.text.Toggle_Invert,"ax",%progbits
  72              		.align	1
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv4-sp-d16
  78              	Toggle_Invert:
  79              	.LVL0:
  80              	.LFB126:
  36:Dev/Dev_Toggle.c **** 
  37:Dev/Dev_Toggle.c **** static bool Toggle_Open(Toggle_Obj_TypeDef *obj, DevToggle_Type_List type, DrvGPIO_Obj_TypeDef *io)
  38:Dev/Dev_Toggle.c **** {
  39:Dev/Dev_Toggle.c ****     if ((obj == NULL) || ((type < Toggle_2Level) || (Toggle_2Level > Toggle_3Level)))
ARM GAS  /tmp/ccOmKp4S.s 			page 3


  40:Dev/Dev_Toggle.c ****     {
  41:Dev/Dev_Toggle.c ****         obj->init_state = false;
  42:Dev/Dev_Toggle.c ****         return false;
  43:Dev/Dev_Toggle.c ****     }
  44:Dev/Dev_Toggle.c **** 
  45:Dev/Dev_Toggle.c ****     obj->level = type;
  46:Dev/Dev_Toggle.c ****     obj->invert = false;
  47:Dev/Dev_Toggle.c **** 
  48:Dev/Dev_Toggle.c ****     memset(obj->IO_Ptr, NULL, sizeof(obj->IO_Ptr));
  49:Dev/Dev_Toggle.c **** 
  50:Dev/Dev_Toggle.c ****     /* set io data structure */
  51:Dev/Dev_Toggle.c ****     for (uint8_t i = 0; i < (uint8_t)type; i++)
  52:Dev/Dev_Toggle.c ****     {
  53:Dev/Dev_Toggle.c ****         obj->IO_Ptr[i] = &io[i];
  54:Dev/Dev_Toggle.c **** 
  55:Dev/Dev_Toggle.c ****         /* ToDo IO init */
  56:Dev/Dev_Toggle.c ****         DrvGPIO.open(&obj->IO_Ptr[i], GPIO_Input, NULL);
  57:Dev/Dev_Toggle.c ****     }
  58:Dev/Dev_Toggle.c **** 
  59:Dev/Dev_Toggle.c ****     if (type == Toggle_2Level)
  60:Dev/Dev_Toggle.c ****     {
  61:Dev/Dev_Toggle.c ****         toggle_2level_sum++;
  62:Dev/Dev_Toggle.c ****     }
  63:Dev/Dev_Toggle.c ****     else if (type == Toggle_3Level)
  64:Dev/Dev_Toggle.c ****         toggle_3level_sum++;
  65:Dev/Dev_Toggle.c **** 
  66:Dev/Dev_Toggle.c ****     obj->init_state = true;
  67:Dev/Dev_Toggle.c ****     return true;
  68:Dev/Dev_Toggle.c **** }
  69:Dev/Dev_Toggle.c **** 
  70:Dev/Dev_Toggle.c **** static bool Toggle_Invert(Toggle_Obj_TypeDef *obj)
  71:Dev/Dev_Toggle.c **** {
  81              		.loc 1 71 1 is_stmt 1 view -0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  72:Dev/Dev_Toggle.c ****     if ((obj == NULL) || (!obj->init_state))
  86              		.loc 1 72 5 view .LVU7
  87              		.loc 1 72 8 is_stmt 0 view .LVU8
  88 0000 0346     		mov	r3, r0
  89 0002 30B1     		cbz	r0, .L9
  90              		.loc 1 72 31 discriminator 1 view .LVU9
  91 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  92              	.LVL1:
  93              		.loc 1 72 23 discriminator 1 view .LVU10
  94 0006 28B1     		cbz	r0, .L8
  73:Dev/Dev_Toggle.c ****         return false;
  74:Dev/Dev_Toggle.c **** 
  75:Dev/Dev_Toggle.c ****     obj->invert = !obj->invert;
  95              		.loc 1 75 5 is_stmt 1 view .LVU11
  96              		.loc 1 75 23 is_stmt 0 view .LVU12
  97 0008 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
  98              		.loc 1 75 5 view .LVU13
  99 000a 82F00102 		eor	r2, r2, #1
 100              		.loc 1 75 17 view .LVU14
 101 000e 9A70     		strb	r2, [r3, #2]
ARM GAS  /tmp/ccOmKp4S.s 			page 4


  76:Dev/Dev_Toggle.c **** 
  77:Dev/Dev_Toggle.c ****     return true;
 102              		.loc 1 77 5 is_stmt 1 view .LVU15
 103              		.loc 1 77 12 is_stmt 0 view .LVU16
 104 0010 7047     		bx	lr
 105              	.LVL2:
 106              	.L9:
  73:Dev/Dev_Toggle.c ****         return false;
 107              		.loc 1 73 16 view .LVU17
 108 0012 0020     		movs	r0, #0
 109              	.LVL3:
 110              	.L8:
  78:Dev/Dev_Toggle.c **** }
 111              		.loc 1 78 1 view .LVU18
 112 0014 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE126:
 116              		.section	.text.Toggle_Get,"ax",%progbits
 117              		.align	1
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	Toggle_Get:
 124              	.LVL4:
 125              	.LFB127:
  79:Dev/Dev_Toggle.c **** 
  80:Dev/Dev_Toggle.c **** static DevToggle_Pos_List Toggle_Get(Toggle_Obj_TypeDef *obj)
  81:Dev/Dev_Toggle.c **** {
 126              		.loc 1 81 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
  82:Dev/Dev_Toggle.c ****     DevToggle_Pos_List val = Toggle_Err;
 130              		.loc 1 82 5 view .LVU20
  83:Dev/Dev_Toggle.c ****     uint8_t io_read = 0;
 131              		.loc 1 83 5 view .LVU21
  84:Dev/Dev_Toggle.c **** 
  85:Dev/Dev_Toggle.c ****     if ((obj == NULL) || (!obj->init_state))
 132              		.loc 1 85 5 view .LVU22
 133              		.loc 1 85 8 is_stmt 0 view .LVU23
 134 0000 60B3     		cbz	r0, .L20
  81:Dev/Dev_Toggle.c ****     DevToggle_Pos_List val = Toggle_Err;
 135              		.loc 1 81 1 discriminator 1 view .LVU24
 136 0002 70B5     		push	{r4, r5, r6, lr}
 137              	.LCFI0:
 138              		.cfi_def_cfa_offset 16
 139              		.cfi_offset 4, -16
 140              		.cfi_offset 5, -12
 141              		.cfi_offset 6, -8
 142              		.cfi_offset 14, -4
 143 0004 0546     		mov	r5, r0
 144              		.loc 1 85 31 discriminator 1 view .LVU25
 145 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 146              		.loc 1 85 23 discriminator 1 view .LVU26
 147 0008 13B1     		cbz	r3, .L31
 148              	.LBB2:
ARM GAS  /tmp/ccOmKp4S.s 			page 5


  86:Dev/Dev_Toggle.c ****         return Toggle_Err;
  87:Dev/Dev_Toggle.c **** 
  88:Dev/Dev_Toggle.c ****     for (uint8_t i = 0; i < obj->level; i++)
 149              		.loc 1 88 18 view .LVU27
 150 000a 0024     		movs	r4, #0
 151              	.LBE2:
  83:Dev/Dev_Toggle.c **** 
 152              		.loc 1 83 13 view .LVU28
 153 000c 2646     		mov	r6, r4
 154 000e 03E0     		b	.L12
 155              	.L31:
  86:Dev/Dev_Toggle.c ****         return Toggle_Err;
 156              		.loc 1 86 16 view .LVU29
 157 0010 0320     		movs	r0, #3
 158              	.LVL5:
 159              	.L10:
  89:Dev/Dev_Toggle.c ****     {
  90:Dev/Dev_Toggle.c ****         if (DrvGPIO.get(obj) == GPIO_HIGH)
  91:Dev/Dev_Toggle.c ****         {
  92:Dev/Dev_Toggle.c ****             io_read |= 1 << i;
  93:Dev/Dev_Toggle.c ****         }
  94:Dev/Dev_Toggle.c ****     }
  95:Dev/Dev_Toggle.c **** 
  96:Dev/Dev_Toggle.c ****     switch (io_read)
  97:Dev/Dev_Toggle.c ****     {
  98:Dev/Dev_Toggle.c ****     case 0x03:
  99:Dev/Dev_Toggle.c ****         return val;
 100:Dev/Dev_Toggle.c **** 
 101:Dev/Dev_Toggle.c ****     case 0x00:
 102:Dev/Dev_Toggle.c ****         if (obj->level == Toggle_2Level)
 103:Dev/Dev_Toggle.c ****         {
 104:Dev/Dev_Toggle.c ****             if (!obj->invert)
 105:Dev/Dev_Toggle.c ****             {
 106:Dev/Dev_Toggle.c ****                 return Toggle_Dwn;
 107:Dev/Dev_Toggle.c ****             }
 108:Dev/Dev_Toggle.c ****             else
 109:Dev/Dev_Toggle.c ****                 return Toggle_Up;
 110:Dev/Dev_Toggle.c ****         }
 111:Dev/Dev_Toggle.c ****         else
 112:Dev/Dev_Toggle.c ****             return Toggle_Mid;
 113:Dev/Dev_Toggle.c **** 
 114:Dev/Dev_Toggle.c ****     case 0x01:
 115:Dev/Dev_Toggle.c ****         if (!obj->invert)
 116:Dev/Dev_Toggle.c ****         {
 117:Dev/Dev_Toggle.c ****             return Toggle_Up;
 118:Dev/Dev_Toggle.c ****         }
 119:Dev/Dev_Toggle.c ****         else
 120:Dev/Dev_Toggle.c ****             return Toggle_Dwn;
 121:Dev/Dev_Toggle.c **** 
 122:Dev/Dev_Toggle.c ****     case 0x02:
 123:Dev/Dev_Toggle.c ****         if (!obj->invert)
 124:Dev/Dev_Toggle.c ****         {
 125:Dev/Dev_Toggle.c ****             return Toggle_Dwn;
 126:Dev/Dev_Toggle.c ****         }
 127:Dev/Dev_Toggle.c ****         else
 128:Dev/Dev_Toggle.c ****             return Toggle_Up;
 129:Dev/Dev_Toggle.c ****     }
ARM GAS  /tmp/ccOmKp4S.s 			page 6


 130:Dev/Dev_Toggle.c **** }
 160              		.loc 1 130 1 view .LVU30
 161 0012 70BD     		pop	{r4, r5, r6, pc}
 162              	.LVL6:
 163              	.L13:
 164              	.LBB3:
  88:Dev/Dev_Toggle.c ****     {
 165              		.loc 1 88 42 discriminator 2 view .LVU31
 166 0014 0134     		adds	r4, r4, #1
 167              	.LVL7:
  88:Dev/Dev_Toggle.c ****     {
 168              		.loc 1 88 42 discriminator 2 view .LVU32
 169 0016 E4B2     		uxtb	r4, r4
 170              	.LVL8:
 171              	.L12:
  88:Dev/Dev_Toggle.c ****     {
 172              		.loc 1 88 32 discriminator 1 view .LVU33
 173 0018 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
  88:Dev/Dev_Toggle.c ****     {
 174              		.loc 1 88 5 discriminator 1 view .LVU34
 175 001a A342     		cmp	r3, r4
 176 001c 0AD9     		bls	.L32
  90:Dev/Dev_Toggle.c ****         {
 177              		.loc 1 90 9 is_stmt 1 view .LVU35
  90:Dev/Dev_Toggle.c ****         {
 178              		.loc 1 90 20 is_stmt 0 view .LVU36
 179 001e 154B     		ldr	r3, .L33
 180 0020 DB68     		ldr	r3, [r3, #12]
  90:Dev/Dev_Toggle.c ****         {
 181              		.loc 1 90 13 view .LVU37
 182 0022 2846     		mov	r0, r5
 183 0024 9847     		blx	r3
 184              	.LVL9:
  90:Dev/Dev_Toggle.c ****         {
 185              		.loc 1 90 12 view .LVU38
 186 0026 0228     		cmp	r0, #2
 187 0028 F4D1     		bne	.L13
  92:Dev/Dev_Toggle.c ****         }
 188              		.loc 1 92 13 is_stmt 1 view .LVU39
  92:Dev/Dev_Toggle.c ****         }
 189              		.loc 1 92 26 is_stmt 0 view .LVU40
 190 002a 0123     		movs	r3, #1
 191 002c A340     		lsls	r3, r3, r4
  92:Dev/Dev_Toggle.c ****         }
 192              		.loc 1 92 21 view .LVU41
 193 002e 3343     		orrs	r3, r3, r6
 194 0030 DEB2     		uxtb	r6, r3
 195              	.LVL10:
  92:Dev/Dev_Toggle.c ****         }
 196              		.loc 1 92 21 view .LVU42
 197 0032 EFE7     		b	.L13
 198              	.L32:
  92:Dev/Dev_Toggle.c ****         }
 199              		.loc 1 92 21 view .LVU43
 200              	.LBE3:
  96:Dev/Dev_Toggle.c ****     {
 201              		.loc 1 96 5 is_stmt 1 view .LVU44
ARM GAS  /tmp/ccOmKp4S.s 			page 7


 202 0034 032E     		cmp	r6, #3
 203 0036 ECD8     		bhi	.L10
 204 0038 DFE806F0 		tbb	[pc, r6]
 205              	.L16:
 206 003c 02       		.byte	(.L19-.L16)/2
 207 003d 08       		.byte	(.L18-.L16)/2
 208 003e 0C       		.byte	(.L17-.L16)/2
 209 003f 12       		.byte	(.L22-.L16)/2
 210              		.p2align 1
 211              	.L19:
 102:Dev/Dev_Toggle.c ****         {
 212              		.loc 1 102 9 view .LVU45
 102:Dev/Dev_Toggle.c ****         {
 213              		.loc 1 102 12 is_stmt 0 view .LVU46
 214 0040 012B     		cmp	r3, #1
 215 0042 0FD1     		bne	.L23
 104:Dev/Dev_Toggle.c ****             {
 216              		.loc 1 104 13 is_stmt 1 view .LVU47
 104:Dev/Dev_Toggle.c ****             {
 217              		.loc 1 104 21 is_stmt 0 view .LVU48
 218 0044 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 104:Dev/Dev_Toggle.c ****             {
 219              		.loc 1 104 16 view .LVU49
 220 0046 7BB9     		cbnz	r3, .L24
 106:Dev/Dev_Toggle.c ****             }
 221              		.loc 1 106 24 view .LVU50
 222 0048 0120     		movs	r0, #1
 223 004a E2E7     		b	.L10
 224              	.L18:
 115:Dev/Dev_Toggle.c ****         {
 225              		.loc 1 115 9 is_stmt 1 view .LVU51
 115:Dev/Dev_Toggle.c ****         {
 226              		.loc 1 115 17 is_stmt 0 view .LVU52
 227 004c AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 115:Dev/Dev_Toggle.c ****         {
 228              		.loc 1 115 12 view .LVU53
 229 004e 6BB9     		cbnz	r3, .L25
 117:Dev/Dev_Toggle.c ****         }
 230              		.loc 1 117 20 view .LVU54
 231 0050 0020     		movs	r0, #0
 232 0052 DEE7     		b	.L10
 233              	.L17:
 123:Dev/Dev_Toggle.c ****         {
 234              		.loc 1 123 9 is_stmt 1 view .LVU55
 123:Dev/Dev_Toggle.c ****         {
 235              		.loc 1 123 17 is_stmt 0 view .LVU56
 236 0054 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 123:Dev/Dev_Toggle.c ****         {
 237              		.loc 1 123 12 view .LVU57
 238 0056 5BB9     		cbnz	r3, .L26
 125:Dev/Dev_Toggle.c ****         }
 239              		.loc 1 125 20 view .LVU58
 240 0058 0120     		movs	r0, #1
 241 005a DAE7     		b	.L10
 242              	.LVL11:
 243              	.L20:
 244              	.LCFI1:
ARM GAS  /tmp/ccOmKp4S.s 			page 8


 245              		.cfi_def_cfa_offset 0
 246              		.cfi_restore 4
 247              		.cfi_restore 5
 248              		.cfi_restore 6
 249              		.cfi_restore 14
  86:Dev/Dev_Toggle.c **** 
 250              		.loc 1 86 16 view .LVU59
 251 005c 0320     		movs	r0, #3
 252              	.LVL12:
 253              		.loc 1 130 1 view .LVU60
 254 005e 7047     		bx	lr
 255              	.LVL13:
 256              	.L22:
 257              	.LCFI2:
 258              		.cfi_def_cfa_offset 16
 259              		.cfi_offset 4, -16
 260              		.cfi_offset 5, -12
 261              		.cfi_offset 6, -8
 262              		.cfi_offset 14, -4
  99:Dev/Dev_Toggle.c **** 
 263              		.loc 1 99 16 view .LVU61
 264 0060 0320     		movs	r0, #3
 265 0062 D6E7     		b	.L10
 266              	.L23:
 112:Dev/Dev_Toggle.c **** 
 267              		.loc 1 112 20 view .LVU62
 268 0064 0220     		movs	r0, #2
 269 0066 D4E7     		b	.L10
 270              	.L24:
 109:Dev/Dev_Toggle.c ****         }
 271              		.loc 1 109 24 view .LVU63
 272 0068 0020     		movs	r0, #0
 273 006a D2E7     		b	.L10
 274              	.L25:
 120:Dev/Dev_Toggle.c **** 
 275              		.loc 1 120 20 view .LVU64
 276 006c 0120     		movs	r0, #1
 277 006e D0E7     		b	.L10
 278              	.L26:
 128:Dev/Dev_Toggle.c ****     }
 279              		.loc 1 128 20 view .LVU65
 280 0070 0020     		movs	r0, #0
 281 0072 CEE7     		b	.L10
 282              	.L34:
 283              		.align	2
 284              	.L33:
 285 0074 00000000 		.word	DrvGPIO
 286              		.cfi_endproc
 287              	.LFE127:
 289              		.section	.text.Toggle_Open,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv4-sp-d16
 296              	Toggle_Open:
 297              	.LVL14:
ARM GAS  /tmp/ccOmKp4S.s 			page 9


 298              	.LFB125:
  38:Dev/Dev_Toggle.c ****     if ((obj == NULL) || ((type < Toggle_2Level) || (Toggle_2Level > Toggle_3Level)))
 299              		.loc 1 38 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
  38:Dev/Dev_Toggle.c ****     if ((obj == NULL) || ((type < Toggle_2Level) || (Toggle_2Level > Toggle_3Level)))
 303              		.loc 1 38 1 is_stmt 0 view .LVU67
 304 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 305              	.LCFI3:
 306              		.cfi_def_cfa_offset 24
 307              		.cfi_offset 3, -24
 308              		.cfi_offset 4, -20
 309              		.cfi_offset 5, -16
 310              		.cfi_offset 6, -12
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
  39:Dev/Dev_Toggle.c ****     {
 313              		.loc 1 39 5 is_stmt 1 view .LVU68
  39:Dev/Dev_Toggle.c ****     {
 314              		.loc 1 39 8 is_stmt 0 view .LVU69
 315 0002 0546     		mov	r5, r0
 316 0004 00B1     		cbz	r0, .L36
  39:Dev/Dev_Toggle.c ****     {
 317              		.loc 1 39 23 discriminator 1 view .LVU70
 318 0006 11B9     		cbnz	r1, .L37
 319              	.L36:
  41:Dev/Dev_Toggle.c ****         return false;
 320              		.loc 1 41 9 is_stmt 1 view .LVU71
  41:Dev/Dev_Toggle.c ****         return false;
 321              		.loc 1 41 25 is_stmt 0 view .LVU72
 322 0008 0020     		movs	r0, #0
 323              	.LVL15:
  41:Dev/Dev_Toggle.c ****         return false;
 324              		.loc 1 41 25 view .LVU73
 325 000a 2870     		strb	r0, [r5]
  42:Dev/Dev_Toggle.c ****     }
 326              		.loc 1 42 9 is_stmt 1 view .LVU74
 327              	.LVL16:
 328              	.L38:
  68:Dev/Dev_Toggle.c **** 
 329              		.loc 1 68 1 is_stmt 0 view .LVU75
 330 000c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 331              	.LVL17:
 332              	.L37:
  68:Dev/Dev_Toggle.c **** 
 333              		.loc 1 68 1 view .LVU76
 334 000e 1746     		mov	r7, r2
 335 0010 0E46     		mov	r6, r1
  45:Dev/Dev_Toggle.c ****     obj->invert = false;
 336              		.loc 1 45 5 is_stmt 1 view .LVU77
  45:Dev/Dev_Toggle.c ****     obj->invert = false;
 337              		.loc 1 45 16 is_stmt 0 view .LVU78
 338 0012 6970     		strb	r1, [r5, #1]
  46:Dev/Dev_Toggle.c **** 
 339              		.loc 1 46 5 is_stmt 1 view .LVU79
  46:Dev/Dev_Toggle.c **** 
ARM GAS  /tmp/ccOmKp4S.s 			page 10


 340              		.loc 1 46 17 is_stmt 0 view .LVU80
 341 0014 0024     		movs	r4, #0
 342 0016 8470     		strb	r4, [r0, #2]
  48:Dev/Dev_Toggle.c **** 
 343              		.loc 1 48 5 is_stmt 1 view .LVU81
 344 0018 4460     		str	r4, [r0, #4]	@ unaligned
 345 001a 8460     		str	r4, [r0, #8]	@ unaligned
  51:Dev/Dev_Toggle.c ****     {
 346              		.loc 1 51 5 view .LVU82
 347              	.LBB4:
  51:Dev/Dev_Toggle.c ****     {
 348              		.loc 1 51 10 view .LVU83
 349              	.LVL18:
  51:Dev/Dev_Toggle.c ****     {
 350              		.loc 1 51 5 is_stmt 0 view .LVU84
 351 001c 0CE0     		b	.L39
 352              	.LVL19:
 353              	.L40:
  53:Dev/Dev_Toggle.c **** 
 354              		.loc 1 53 9 is_stmt 1 discriminator 3 view .LVU85
  53:Dev/Dev_Toggle.c **** 
 355              		.loc 1 53 26 is_stmt 0 discriminator 3 view .LVU86
 356 001e 07EB0413 		add	r3, r7, r4, lsl #4
  53:Dev/Dev_Toggle.c **** 
 357              		.loc 1 53 24 discriminator 3 view .LVU87
 358 0022 05EB8400 		add	r0, r5, r4, lsl #2
 359 0026 40F8043F 		str	r3, [r0, #4]!
  56:Dev/Dev_Toggle.c ****     }
 360              		.loc 1 56 9 is_stmt 1 discriminator 3 view .LVU88
  56:Dev/Dev_Toggle.c ****     }
 361              		.loc 1 56 16 is_stmt 0 discriminator 3 view .LVU89
 362 002a 0D4B     		ldr	r3, .L46
 363 002c 1B68     		ldr	r3, [r3]
  56:Dev/Dev_Toggle.c ****     }
 364              		.loc 1 56 9 discriminator 3 view .LVU90
 365 002e 0022     		movs	r2, #0
 366 0030 0121     		movs	r1, #1
 367 0032 9847     		blx	r3
 368              	.LVL20:
  51:Dev/Dev_Toggle.c ****     {
 369              		.loc 1 51 45 discriminator 3 view .LVU91
 370 0034 0134     		adds	r4, r4, #1
 371              	.LVL21:
  51:Dev/Dev_Toggle.c ****     {
 372              		.loc 1 51 45 discriminator 3 view .LVU92
 373 0036 E4B2     		uxtb	r4, r4
 374              	.LVL22:
 375              	.L39:
  51:Dev/Dev_Toggle.c ****     {
 376              		.loc 1 51 5 discriminator 1 view .LVU93
 377 0038 B442     		cmp	r4, r6
 378 003a F0D3     		bcc	.L40
 379              	.LBE4:
  59:Dev/Dev_Toggle.c ****     {
 380              		.loc 1 59 5 is_stmt 1 view .LVU94
  59:Dev/Dev_Toggle.c ****     {
 381              		.loc 1 59 8 is_stmt 0 view .LVU95
ARM GAS  /tmp/ccOmKp4S.s 			page 11


 382 003c 012E     		cmp	r6, #1
 383 003e 04D0     		beq	.L44
  63:Dev/Dev_Toggle.c ****         toggle_3level_sum++;
 384              		.loc 1 63 10 is_stmt 1 view .LVU96
  63:Dev/Dev_Toggle.c ****         toggle_3level_sum++;
 385              		.loc 1 63 13 is_stmt 0 view .LVU97
 386 0040 022E     		cmp	r6, #2
 387 0042 07D0     		beq	.L45
 388              	.L42:
  66:Dev/Dev_Toggle.c ****     return true;
 389              		.loc 1 66 5 is_stmt 1 view .LVU98
  66:Dev/Dev_Toggle.c ****     return true;
 390              		.loc 1 66 21 is_stmt 0 view .LVU99
 391 0044 0120     		movs	r0, #1
 392 0046 2870     		strb	r0, [r5]
  67:Dev/Dev_Toggle.c **** }
 393              		.loc 1 67 5 is_stmt 1 view .LVU100
  67:Dev/Dev_Toggle.c **** }
 394              		.loc 1 67 12 is_stmt 0 view .LVU101
 395 0048 E0E7     		b	.L38
 396              	.L44:
  61:Dev/Dev_Toggle.c ****     }
 397              		.loc 1 61 9 is_stmt 1 view .LVU102
  61:Dev/Dev_Toggle.c ****     }
 398              		.loc 1 61 26 is_stmt 0 view .LVU103
 399 004a 064A     		ldr	r2, .L46+4
 400 004c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 401 004e 0133     		adds	r3, r3, #1
 402 0050 1370     		strb	r3, [r2]
 403 0052 F7E7     		b	.L42
 404              	.L45:
  64:Dev/Dev_Toggle.c **** 
 405              		.loc 1 64 9 is_stmt 1 view .LVU104
  64:Dev/Dev_Toggle.c **** 
 406              		.loc 1 64 26 is_stmt 0 view .LVU105
 407 0054 044A     		ldr	r2, .L46+8
 408 0056 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 409 0058 0133     		adds	r3, r3, #1
 410 005a 1370     		strb	r3, [r2]
 411 005c F2E7     		b	.L42
 412              	.L47:
 413 005e 00BF     		.align	2
 414              	.L46:
 415 0060 00000000 		.word	DrvGPIO
 416 0064 00000000 		.word	.LANCHOR0
 417 0068 00000000 		.word	.LANCHOR1
 418              		.cfi_endproc
 419              	.LFE125:
 421              		.global	DevToggle
 422              		.section	.bss.toggle_2level_sum,"aw",%nobits
 423              		.set	.LANCHOR0,. + 0
 426              	toggle_2level_sum:
 427 0000 00       		.space	1
 428              		.section	.bss.toggle_3level_sum,"aw",%nobits
 429              		.set	.LANCHOR1,. + 0
 432              	toggle_3level_sum:
 433 0000 00       		.space	1
ARM GAS  /tmp/ccOmKp4S.s 			page 12


 434              		.section	.data.DevToggle,"aw"
 435              		.align	2
 438              	DevToggle:
 439 0000 00000000 		.word	Toggle_Open
 440 0004 00000000 		.word	Toggle_Invert
 441 0008 00000000 		.word	Toggle_Get
 442 000c 00000000 		.word	Toggle_Get_2Level_Sum
 443 0010 00000000 		.word	Toggle_Get_3Level_Sum
 444              		.text
 445              	.Letext0:
 446              		.file 2 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 447              		.file 3 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 448              		.file 4 "F4_CORE/core_cm4.h"
 449              		.file 5 "USER/system_stm32f4xx.h"
 450              		.file 6 "Bsp/periph_gpio.h"
 451              		.file 7 "Drv/drv_gpio.h"
 452              		.file 8 "Dev/Dev_Toggle.h"
 453              		.file 9 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 454              		.file 10 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8
 455              		.file 11 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8
 456              		.file 12 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8
ARM GAS  /tmp/ccOmKp4S.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Dev_Toggle.c
     /tmp/ccOmKp4S.s:18     .text.Toggle_Get_2Level_Sum:0000000000000000 $t
     /tmp/ccOmKp4S.s:25     .text.Toggle_Get_2Level_Sum:0000000000000000 Toggle_Get_2Level_Sum
     /tmp/ccOmKp4S.s:41     .text.Toggle_Get_2Level_Sum:0000000000000008 $d
     /tmp/ccOmKp4S.s:46     .text.Toggle_Get_3Level_Sum:0000000000000000 $t
     /tmp/ccOmKp4S.s:52     .text.Toggle_Get_3Level_Sum:0000000000000000 Toggle_Get_3Level_Sum
     /tmp/ccOmKp4S.s:67     .text.Toggle_Get_3Level_Sum:0000000000000008 $d
     /tmp/ccOmKp4S.s:72     .text.Toggle_Invert:0000000000000000 $t
     /tmp/ccOmKp4S.s:78     .text.Toggle_Invert:0000000000000000 Toggle_Invert
     /tmp/ccOmKp4S.s:117    .text.Toggle_Get:0000000000000000 $t
     /tmp/ccOmKp4S.s:123    .text.Toggle_Get:0000000000000000 Toggle_Get
     /tmp/ccOmKp4S.s:206    .text.Toggle_Get:000000000000003c $d
     /tmp/ccOmKp4S.s:210    .text.Toggle_Get:0000000000000040 $t
     /tmp/ccOmKp4S.s:285    .text.Toggle_Get:0000000000000074 $d
     /tmp/ccOmKp4S.s:290    .text.Toggle_Open:0000000000000000 $t
     /tmp/ccOmKp4S.s:296    .text.Toggle_Open:0000000000000000 Toggle_Open
     /tmp/ccOmKp4S.s:415    .text.Toggle_Open:0000000000000060 $d
     /tmp/ccOmKp4S.s:438    .data.DevToggle:0000000000000000 DevToggle
     /tmp/ccOmKp4S.s:426    .bss.toggle_2level_sum:0000000000000000 toggle_2level_sum
     /tmp/ccOmKp4S.s:427    .bss.toggle_2level_sum:0000000000000000 $d
     /tmp/ccOmKp4S.s:432    .bss.toggle_3level_sum:0000000000000000 toggle_3level_sum
     /tmp/ccOmKp4S.s:433    .bss.toggle_3level_sum:0000000000000000 $d
     /tmp/ccOmKp4S.s:435    .data.DevToggle:0000000000000000 $d

UNDEFINED SYMBOLS
DrvGPIO
