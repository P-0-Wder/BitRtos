ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_cryp.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CRYP_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	CRYP_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	CRYP_DeInit:
  27              	.LFB123:
  28              		.file 1 "FWLIB/src/stm32f4xx_cryp.c"
   1:FWLIB/src/stm32f4xx_cryp.c **** /**
   2:FWLIB/src/stm32f4xx_cryp.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_cryp.c ****   * @file    stm32f4xx_cryp.c
   4:FWLIB/src/stm32f4xx_cryp.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_cryp.c ****   * @version V1.8.0
   6:FWLIB/src/stm32f4xx_cryp.c ****   * @date    04-November-2016
   7:FWLIB/src/stm32f4xx_cryp.c ****   * @brief   This file provides firmware functions to manage the following 
   8:FWLIB/src/stm32f4xx_cryp.c ****   *          functionalities of the  Cryptographic processor (CRYP) peripheral:
   9:FWLIB/src/stm32f4xx_cryp.c ****   *           + Initialization and Configuration functions
  10:FWLIB/src/stm32f4xx_cryp.c ****   *           + Data treatment functions 
  11:FWLIB/src/stm32f4xx_cryp.c ****   *           + Context swapping functions     
  12:FWLIB/src/stm32f4xx_cryp.c ****   *           + DMA interface function       
  13:FWLIB/src/stm32f4xx_cryp.c ****   *           + Interrupts and flags management       
  14:FWLIB/src/stm32f4xx_cryp.c ****   *
  15:FWLIB/src/stm32f4xx_cryp.c **** @verbatim
  16:FWLIB/src/stm32f4xx_cryp.c ****  ===================================================================      
  17:FWLIB/src/stm32f4xx_cryp.c ****                  ##### How to use this driver #####
  18:FWLIB/src/stm32f4xx_cryp.c ****  =================================================================== 
  19:FWLIB/src/stm32f4xx_cryp.c ****  [..]
  20:FWLIB/src/stm32f4xx_cryp.c ****    (#) Enable the CRYP controller clock using 
  21:FWLIB/src/stm32f4xx_cryp.c ****        RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  22:FWLIB/src/stm32f4xx_cryp.c ****   
  23:FWLIB/src/stm32f4xx_cryp.c ****    (#) Initialize the CRYP using CRYP_Init(), CRYP_KeyInit() and if needed 
  24:FWLIB/src/stm32f4xx_cryp.c ****        CRYP_IVInit(). 
  25:FWLIB/src/stm32f4xx_cryp.c ****   
  26:FWLIB/src/stm32f4xx_cryp.c ****    (#) Flush the IN and OUT FIFOs by using CRYP_FIFOFlush() function.
  27:FWLIB/src/stm32f4xx_cryp.c ****   
  28:FWLIB/src/stm32f4xx_cryp.c ****    (#) Enable the CRYP controller using the CRYP_Cmd() function. 
  29:FWLIB/src/stm32f4xx_cryp.c ****   
  30:FWLIB/src/stm32f4xx_cryp.c ****    (#) If using DMA for Data input and output transfer, activate the needed DMA 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 2


  31:FWLIB/src/stm32f4xx_cryp.c ****        Requests using CRYP_DMACmd() function 
  32:FWLIB/src/stm32f4xx_cryp.c ****   
  33:FWLIB/src/stm32f4xx_cryp.c ****    (#) If DMA is not used for data transfer, use CRYP_DataIn() and  CRYP_DataOut() 
  34:FWLIB/src/stm32f4xx_cryp.c ****        functions to enter data to IN FIFO and get result from OUT FIFO.
  35:FWLIB/src/stm32f4xx_cryp.c ****   
  36:FWLIB/src/stm32f4xx_cryp.c ****    (#) To control CRYP events you can use one of the following two methods:
  37:FWLIB/src/stm32f4xx_cryp.c ****        (++) Check on CRYP flags using the CRYP_GetFlagStatus() function.  
  38:FWLIB/src/stm32f4xx_cryp.c ****        (++) Use CRYP interrupts through the function CRYP_ITConfig() at 
  39:FWLIB/src/stm32f4xx_cryp.c ****             initialization phase and CRYP_GetITStatus() function into interrupt 
  40:FWLIB/src/stm32f4xx_cryp.c ****             routines in processing phase.
  41:FWLIB/src/stm32f4xx_cryp.c ****          
  42:FWLIB/src/stm32f4xx_cryp.c ****    (#) Save and restore Cryptographic processor context using CRYP_SaveContext() 
  43:FWLIB/src/stm32f4xx_cryp.c ****        and CRYP_RestoreContext() functions.     
  44:FWLIB/src/stm32f4xx_cryp.c ****   
  45:FWLIB/src/stm32f4xx_cryp.c ****   
  46:FWLIB/src/stm32f4xx_cryp.c ****  *** Procedure to perform an encryption or a decryption ***
  47:FWLIB/src/stm32f4xx_cryp.c ****  ========================================================== 
  48:FWLIB/src/stm32f4xx_cryp.c ****   
  49:FWLIB/src/stm32f4xx_cryp.c ****  *** Initialization ***
  50:FWLIB/src/stm32f4xx_cryp.c ****  ====================== 
  51:FWLIB/src/stm32f4xx_cryp.c ****  [..] 
  52:FWLIB/src/stm32f4xx_cryp.c ****    (#) Initialize the peripheral using CRYP_Init(), CRYP_KeyInit() and CRYP_IVInit 
  53:FWLIB/src/stm32f4xx_cryp.c ****        functions:
  54:FWLIB/src/stm32f4xx_cryp.c ****        (++) Configure the key size (128-, 192- or 256-bit, in the AES only) 
  55:FWLIB/src/stm32f4xx_cryp.c ****        (++) Enter the symmetric key 
  56:FWLIB/src/stm32f4xx_cryp.c ****        (++) Configure the data type
  57:FWLIB/src/stm32f4xx_cryp.c ****        (++) In case of decryption in AES-ECB or AES-CBC, you must prepare 
  58:FWLIB/src/stm32f4xx_cryp.c ****             the key: configure the key preparation mode. Then Enable the CRYP 
  59:FWLIB/src/stm32f4xx_cryp.c ****             peripheral using CRYP_Cmd() function: the BUSY flag is set. 
  60:FWLIB/src/stm32f4xx_cryp.c ****             Wait until BUSY flag is reset : the key is prepared for decryption
  61:FWLIB/src/stm32f4xx_cryp.c ****        (++) Configure the algorithm and chaining (the DES/TDES in ECB/CBC, the 
  62:FWLIB/src/stm32f4xx_cryp.c ****             AES in ECB/CBC/CTR) 
  63:FWLIB/src/stm32f4xx_cryp.c ****        (++) Configure the direction (encryption/decryption).
  64:FWLIB/src/stm32f4xx_cryp.c ****        (++) Write the initialization vectors (in CBC or CTR modes only)
  65:FWLIB/src/stm32f4xx_cryp.c ****   
  66:FWLIB/src/stm32f4xx_cryp.c ****    (#) Flush the IN and OUT FIFOs using the CRYP_FIFOFlush() function
  67:FWLIB/src/stm32f4xx_cryp.c ****   
  68:FWLIB/src/stm32f4xx_cryp.c ****   
  69:FWLIB/src/stm32f4xx_cryp.c ****   *** Basic Processing mode (polling mode) *** 
  70:FWLIB/src/stm32f4xx_cryp.c ****   ============================================  
  71:FWLIB/src/stm32f4xx_cryp.c ****   [..]
  72:FWLIB/src/stm32f4xx_cryp.c ****     (#) Enable the cryptographic processor using CRYP_Cmd() function.
  73:FWLIB/src/stm32f4xx_cryp.c ****   
  74:FWLIB/src/stm32f4xx_cryp.c ****     (#) Write the first blocks in the input FIFO (2 to 8 words) using 
  75:FWLIB/src/stm32f4xx_cryp.c ****         CRYP_DataIn() function.
  76:FWLIB/src/stm32f4xx_cryp.c ****   
  77:FWLIB/src/stm32f4xx_cryp.c ****     (#) Repeat the following sequence until the complete message has been 
  78:FWLIB/src/stm32f4xx_cryp.c ****         processed:
  79:FWLIB/src/stm32f4xx_cryp.c ****   
  80:FWLIB/src/stm32f4xx_cryp.c ****         (++) Wait for flag CRYP_FLAG_OFNE occurs (using CRYP_GetFlagStatus() 
  81:FWLIB/src/stm32f4xx_cryp.c ****             function), then read the OUT-FIFO using CRYP_DataOut() function
  82:FWLIB/src/stm32f4xx_cryp.c ****             (1 block or until the FIFO is empty)
  83:FWLIB/src/stm32f4xx_cryp.c ****   
  84:FWLIB/src/stm32f4xx_cryp.c ****          (++) Wait for flag CRYP_FLAG_IFNF occurs, (using CRYP_GetFlagStatus() 
  85:FWLIB/src/stm32f4xx_cryp.c ****             function then write the IN FIFO using CRYP_DataIn() function 
  86:FWLIB/src/stm32f4xx_cryp.c ****             (1 block or until the FIFO is full)
  87:FWLIB/src/stm32f4xx_cryp.c ****   
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 3


  88:FWLIB/src/stm32f4xx_cryp.c ****     (#) At the end of the processing, CRYP_FLAG_BUSY flag will be reset and 
  89:FWLIB/src/stm32f4xx_cryp.c ****           both FIFOs are empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is 
  90:FWLIB/src/stm32f4xx_cryp.c ****           reset). You can disable the peripheral using CRYP_Cmd() function.
  91:FWLIB/src/stm32f4xx_cryp.c ****   
  92:FWLIB/src/stm32f4xx_cryp.c ****  *** Interrupts Processing mode *** 
  93:FWLIB/src/stm32f4xx_cryp.c ****  ==================================
  94:FWLIB/src/stm32f4xx_cryp.c ****  [..] In this mode, Processing is done when the data are transferred by the 
  95:FWLIB/src/stm32f4xx_cryp.c ****       CPU during interrupts.
  96:FWLIB/src/stm32f4xx_cryp.c ****   
  97:FWLIB/src/stm32f4xx_cryp.c ****     (#) Enable the interrupts CRYP_IT_INI and CRYP_IT_OUTI using CRYP_ITConfig()
  98:FWLIB/src/stm32f4xx_cryp.c ****         function.
  99:FWLIB/src/stm32f4xx_cryp.c ****   
 100:FWLIB/src/stm32f4xx_cryp.c ****     (#) Enable the cryptographic processor using CRYP_Cmd() function.
 101:FWLIB/src/stm32f4xx_cryp.c ****   
 102:FWLIB/src/stm32f4xx_cryp.c ****     (#) In the CRYP_IT_INI interrupt handler : load the input message into the 
 103:FWLIB/src/stm32f4xx_cryp.c ****          IN FIFO using CRYP_DataIn() function . You can load 2 or 4 words at a 
 104:FWLIB/src/stm32f4xx_cryp.c ****          time, or load data until the IN FIFO is full. When the last word of
 105:FWLIB/src/stm32f4xx_cryp.c ****          the message has been entered into the IN FIFO, disable the CRYP_IT_INI 
 106:FWLIB/src/stm32f4xx_cryp.c ****          interrupt (using CRYP_ITConfig() function).
 107:FWLIB/src/stm32f4xx_cryp.c ****   
 108:FWLIB/src/stm32f4xx_cryp.c ****     (#) In the CRYP_IT_OUTI interrupt handler : read the output message from 
 109:FWLIB/src/stm32f4xx_cryp.c ****          the OUT FIFO using CRYP_DataOut() function. You can read 1 block (2 or 
 110:FWLIB/src/stm32f4xx_cryp.c ****          4 words) at a time or read data until the FIFO is empty.
 111:FWLIB/src/stm32f4xx_cryp.c ****          When the last word has been read, INIM=0, BUSY=0 and both FIFOs are 
 112:FWLIB/src/stm32f4xx_cryp.c ****          empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is reset). 
 113:FWLIB/src/stm32f4xx_cryp.c ****          You can disable the CRYP_IT_OUTI interrupt (using CRYP_ITConfig() 
 114:FWLIB/src/stm32f4xx_cryp.c ****          function) and you can disable the peripheral using CRYP_Cmd() function.
 115:FWLIB/src/stm32f4xx_cryp.c ****   
 116:FWLIB/src/stm32f4xx_cryp.c ****  *** DMA Processing mode *** 
 117:FWLIB/src/stm32f4xx_cryp.c ****  ===========================
 118:FWLIB/src/stm32f4xx_cryp.c ****  [..] In this mode, Processing is done when the DMA is used to transfer the 
 119:FWLIB/src/stm32f4xx_cryp.c ****       data from/to the memory.
 120:FWLIB/src/stm32f4xx_cryp.c ****   
 121:FWLIB/src/stm32f4xx_cryp.c ****     (#) Configure the DMA controller to transfer the input data from the 
 122:FWLIB/src/stm32f4xx_cryp.c ****          memory using DMA_Init() function. 
 123:FWLIB/src/stm32f4xx_cryp.c ****          The transfer length is the length of the message. 
 124:FWLIB/src/stm32f4xx_cryp.c ****          As message padding is not managed by the peripheral, the message 
 125:FWLIB/src/stm32f4xx_cryp.c ****          length must be an entire number of blocks. The data are transferred 
 126:FWLIB/src/stm32f4xx_cryp.c ****          in burst mode. The burst length is 4 words in the AES and 2 or 4 
 127:FWLIB/src/stm32f4xx_cryp.c ****          words in the DES/TDES. The DMA should be configured to set an 
 128:FWLIB/src/stm32f4xx_cryp.c ****          interrupt on transfer completion of the output data to indicate that 
 129:FWLIB/src/stm32f4xx_cryp.c ****          the processing is finished. 
 130:FWLIB/src/stm32f4xx_cryp.c ****          Refer to DMA peripheral driver for more details.  
 131:FWLIB/src/stm32f4xx_cryp.c ****   
 132:FWLIB/src/stm32f4xx_cryp.c ****      (#) Enable the cryptographic processor using CRYP_Cmd() function. 
 133:FWLIB/src/stm32f4xx_cryp.c ****          Enable the DMA requests CRYP_DMAReq_DataIN and CRYP_DMAReq_DataOUT 
 134:FWLIB/src/stm32f4xx_cryp.c ****          using CRYP_DMACmd() function.
 135:FWLIB/src/stm32f4xx_cryp.c ****   
 136:FWLIB/src/stm32f4xx_cryp.c ****      (#) All the transfers and processing are managed by the DMA and the 
 137:FWLIB/src/stm32f4xx_cryp.c ****          cryptographic processor. The DMA transfer complete interrupt indicates 
 138:FWLIB/src/stm32f4xx_cryp.c ****          that the processing is complete. Both FIFOs are normally empty and 
 139:FWLIB/src/stm32f4xx_cryp.c ****          CRYP_FLAG_BUSY flag is reset.
 140:FWLIB/src/stm32f4xx_cryp.c ****   
 141:FWLIB/src/stm32f4xx_cryp.c ****     @endverbatim
 142:FWLIB/src/stm32f4xx_cryp.c ****   *
 143:FWLIB/src/stm32f4xx_cryp.c ****   ******************************************************************************
 144:FWLIB/src/stm32f4xx_cryp.c ****   * @attention
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 4


 145:FWLIB/src/stm32f4xx_cryp.c ****   *
 146:FWLIB/src/stm32f4xx_cryp.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
 147:FWLIB/src/stm32f4xx_cryp.c ****   *
 148:FWLIB/src/stm32f4xx_cryp.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 149:FWLIB/src/stm32f4xx_cryp.c ****   * You may not use this file except in compliance with the License.
 150:FWLIB/src/stm32f4xx_cryp.c ****   * You may obtain a copy of the License at:
 151:FWLIB/src/stm32f4xx_cryp.c ****   *
 152:FWLIB/src/stm32f4xx_cryp.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 153:FWLIB/src/stm32f4xx_cryp.c ****   *
 154:FWLIB/src/stm32f4xx_cryp.c ****   * Unless required by applicable law or agreed to in writing, software 
 155:FWLIB/src/stm32f4xx_cryp.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 156:FWLIB/src/stm32f4xx_cryp.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 157:FWLIB/src/stm32f4xx_cryp.c ****   * See the License for the specific language governing permissions and
 158:FWLIB/src/stm32f4xx_cryp.c ****   * limitations under the License.
 159:FWLIB/src/stm32f4xx_cryp.c ****   *
 160:FWLIB/src/stm32f4xx_cryp.c ****   ******************************************************************************  
 161:FWLIB/src/stm32f4xx_cryp.c ****   */
 162:FWLIB/src/stm32f4xx_cryp.c **** 
 163:FWLIB/src/stm32f4xx_cryp.c **** /* Includes ------------------------------------------------------------------*/
 164:FWLIB/src/stm32f4xx_cryp.c **** #include "stm32f4xx_cryp.h"
 165:FWLIB/src/stm32f4xx_cryp.c **** #include "stm32f4xx_rcc.h"
 166:FWLIB/src/stm32f4xx_cryp.c **** 
 167:FWLIB/src/stm32f4xx_cryp.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 168:FWLIB/src/stm32f4xx_cryp.c ****   * @{
 169:FWLIB/src/stm32f4xx_cryp.c ****   */
 170:FWLIB/src/stm32f4xx_cryp.c **** 
 171:FWLIB/src/stm32f4xx_cryp.c **** /** @defgroup CRYP 
 172:FWLIB/src/stm32f4xx_cryp.c ****   * @brief CRYP driver modules
 173:FWLIB/src/stm32f4xx_cryp.c ****   * @{
 174:FWLIB/src/stm32f4xx_cryp.c ****   */ 
 175:FWLIB/src/stm32f4xx_cryp.c **** 
 176:FWLIB/src/stm32f4xx_cryp.c **** /* Private typedef -----------------------------------------------------------*/
 177:FWLIB/src/stm32f4xx_cryp.c **** /* Private define ------------------------------------------------------------*/
 178:FWLIB/src/stm32f4xx_cryp.c **** #define FLAG_MASK     ((uint8_t)0x20)
 179:FWLIB/src/stm32f4xx_cryp.c **** #define MAX_TIMEOUT   ((uint16_t)0xFFFF)
 180:FWLIB/src/stm32f4xx_cryp.c **** 
 181:FWLIB/src/stm32f4xx_cryp.c **** /* Private macro -------------------------------------------------------------*/
 182:FWLIB/src/stm32f4xx_cryp.c **** /* Private variables ---------------------------------------------------------*/
 183:FWLIB/src/stm32f4xx_cryp.c **** /* Private function prototypes -----------------------------------------------*/
 184:FWLIB/src/stm32f4xx_cryp.c **** /* Private functions ---------------------------------------------------------*/
 185:FWLIB/src/stm32f4xx_cryp.c **** 
 186:FWLIB/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Private_Functions
 187:FWLIB/src/stm32f4xx_cryp.c ****   * @{
 188:FWLIB/src/stm32f4xx_cryp.c ****   */ 
 189:FWLIB/src/stm32f4xx_cryp.c **** 
 190:FWLIB/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group1 Initialization and Configuration functions
 191:FWLIB/src/stm32f4xx_cryp.c ****  *  @brief    Initialization and Configuration functions 
 192:FWLIB/src/stm32f4xx_cryp.c ****  *
 193:FWLIB/src/stm32f4xx_cryp.c **** @verbatim    
 194:FWLIB/src/stm32f4xx_cryp.c ****  ===============================================================================
 195:FWLIB/src/stm32f4xx_cryp.c ****              ##### Initialization and Configuration functions #####
 196:FWLIB/src/stm32f4xx_cryp.c ****  ===============================================================================  
 197:FWLIB/src/stm32f4xx_cryp.c ****  [..] This section provides functions allowing to 
 198:FWLIB/src/stm32f4xx_cryp.c ****    (+) Initialize the cryptographic Processor using CRYP_Init() function 
 199:FWLIB/src/stm32f4xx_cryp.c ****        (++)  Encrypt or Decrypt 
 200:FWLIB/src/stm32f4xx_cryp.c ****        (++)  mode : TDES-ECB, TDES-CBC, 
 201:FWLIB/src/stm32f4xx_cryp.c ****                     DES-ECB, DES-CBC, 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 5


 202:FWLIB/src/stm32f4xx_cryp.c ****                     AES-ECB, AES-CBC, AES-CTR, AES-Key, AES-GCM, AES-CCM 
 203:FWLIB/src/stm32f4xx_cryp.c ****        (++) DataType :  32-bit data, 16-bit data, bit data or bit-string
 204:FWLIB/src/stm32f4xx_cryp.c ****        (++) Key Size (only in AES modes)
 205:FWLIB/src/stm32f4xx_cryp.c ****    (+) Configure the Encrypt or Decrypt Key using CRYP_KeyInit() function 
 206:FWLIB/src/stm32f4xx_cryp.c ****    (+) Configure the Initialization Vectors(IV) for CBC and CTR modes using 
 207:FWLIB/src/stm32f4xx_cryp.c ****        CRYP_IVInit() function.  
 208:FWLIB/src/stm32f4xx_cryp.c ****    (+) Flushes the IN and OUT FIFOs : using CRYP_FIFOFlush() function.                         
 209:FWLIB/src/stm32f4xx_cryp.c ****    (+) Enable or disable the CRYP Processor using CRYP_Cmd() function 
 210:FWLIB/src/stm32f4xx_cryp.c ****        
 211:FWLIB/src/stm32f4xx_cryp.c **** @endverbatim
 212:FWLIB/src/stm32f4xx_cryp.c ****   * @{
 213:FWLIB/src/stm32f4xx_cryp.c ****   */
 214:FWLIB/src/stm32f4xx_cryp.c **** /**
 215:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Deinitializes the CRYP peripheral registers to their default reset values
 216:FWLIB/src/stm32f4xx_cryp.c ****   * @param  None
 217:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 218:FWLIB/src/stm32f4xx_cryp.c ****   */
 219:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_DeInit(void)
 220:FWLIB/src/stm32f4xx_cryp.c **** {
  29              		.loc 1 220 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 221:FWLIB/src/stm32f4xx_cryp.c ****   /* Enable CRYP reset state */
 222:FWLIB/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, ENABLE);
  38              		.loc 1 222 3 view .LVU1
  39 0002 0121     		movs	r1, #1
  40 0004 1020     		movs	r0, #16
  41 0006 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  42              	.LVL0:
 223:FWLIB/src/stm32f4xx_cryp.c **** 
 224:FWLIB/src/stm32f4xx_cryp.c ****   /* Release CRYP from reset state */
 225:FWLIB/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, DISABLE);
  43              		.loc 1 225 3 view .LVU2
  44 000a 0021     		movs	r1, #0
  45 000c 1020     		movs	r0, #16
  46 000e FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  47              	.LVL1:
 226:FWLIB/src/stm32f4xx_cryp.c **** }
  48              		.loc 1 226 1 is_stmt 0 view .LVU3
  49 0012 08BD     		pop	{r3, pc}
  50              		.cfi_endproc
  51              	.LFE123:
  53              		.section	.text.CRYP_Init,"ax",%progbits
  54              		.align	1
  55              		.global	CRYP_Init
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	CRYP_Init:
  62              	.LVL2:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 6


  63              	.LFB124:
 227:FWLIB/src/stm32f4xx_cryp.c **** 
 228:FWLIB/src/stm32f4xx_cryp.c **** /**
 229:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP peripheral according to the specified parameters
 230:FWLIB/src/stm32f4xx_cryp.c ****   *         in the CRYP_InitStruct.
 231:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure that contains
 232:FWLIB/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP peripheral.
 233:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 234:FWLIB/src/stm32f4xx_cryp.c ****   */
 235:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct)
 236:FWLIB/src/stm32f4xx_cryp.c **** {
  64              		.loc 1 236 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 237:FWLIB/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 238:FWLIB/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGOMODE(CRYP_InitStruct->CRYP_AlgoMode));
  69              		.loc 1 238 3 view .LVU5
 239:FWLIB/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DATATYPE(CRYP_InitStruct->CRYP_DataType));
  70              		.loc 1 239 3 view .LVU6
 240:FWLIB/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGODIR(CRYP_InitStruct->CRYP_AlgoDir));
  71              		.loc 1 240 3 view .LVU7
 241:FWLIB/src/stm32f4xx_cryp.c **** 
 242:FWLIB/src/stm32f4xx_cryp.c ****   /* Select Algorithm mode*/  
 243:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGOMODE;
  72              		.loc 1 243 3 view .LVU8
  73              		.loc 1 243 12 is_stmt 0 view .LVU9
  74 0000 164B     		ldr	r3, .L5
  75 0002 1A68     		ldr	r2, [r3]
  76 0004 22F40022 		bic	r2, r2, #524288
  77 0008 22F03802 		bic	r2, r2, #56
  78 000c 1A60     		str	r2, [r3]
 244:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoMode;
  79              		.loc 1 244 3 is_stmt 1 view .LVU10
  80              		.loc 1 244 12 is_stmt 0 view .LVU11
  81 000e 1A68     		ldr	r2, [r3]
  82              		.loc 1 244 30 view .LVU12
  83 0010 4168     		ldr	r1, [r0, #4]
  84              		.loc 1 244 12 view .LVU13
  85 0012 0A43     		orrs	r2, r2, r1
  86 0014 1A60     		str	r2, [r3]
 245:FWLIB/src/stm32f4xx_cryp.c **** 
 246:FWLIB/src/stm32f4xx_cryp.c ****   /* Select dataType */ 
 247:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_DATATYPE;
  87              		.loc 1 247 3 is_stmt 1 view .LVU14
  88              		.loc 1 247 12 is_stmt 0 view .LVU15
  89 0016 1A68     		ldr	r2, [r3]
  90 0018 22F0C002 		bic	r2, r2, #192
  91 001c 1A60     		str	r2, [r3]
 248:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_DataType;
  92              		.loc 1 248 3 is_stmt 1 view .LVU16
  93              		.loc 1 248 12 is_stmt 0 view .LVU17
  94 001e 1A68     		ldr	r2, [r3]
  95              		.loc 1 248 30 view .LVU18
  96 0020 8168     		ldr	r1, [r0, #8]
  97              		.loc 1 248 12 view .LVU19
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 7


  98 0022 0A43     		orrs	r2, r2, r1
  99 0024 1A60     		str	r2, [r3]
 249:FWLIB/src/stm32f4xx_cryp.c **** 
 250:FWLIB/src/stm32f4xx_cryp.c ****   /* select Key size (used only with AES algorithm) */
 251:FWLIB/src/stm32f4xx_cryp.c ****   if ((CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_TDES_ECB) &&
 100              		.loc 1 251 3 is_stmt 1 view .LVU20
 101              		.loc 1 251 23 is_stmt 0 view .LVU21
 102 0026 4368     		ldr	r3, [r0, #4]
 103              		.loc 1 251 6 view .LVU22
 104 0028 73B1     		cbz	r3, .L4
 105              		.loc 1 251 66 discriminator 1 view .LVU23
 106 002a 082B     		cmp	r3, #8
 107 002c 0CD0     		beq	.L4
 252:FWLIB/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_TDES_CBC) &&
 108              		.loc 1 252 66 view .LVU24
 109 002e 102B     		cmp	r3, #16
 110 0030 0AD0     		beq	.L4
 253:FWLIB/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_DES_ECB) &&
 111              		.loc 1 253 65 view .LVU25
 112 0032 182B     		cmp	r3, #24
 113 0034 08D0     		beq	.L4
 254:FWLIB/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_DES_CBC))
 255:FWLIB/src/stm32f4xx_cryp.c ****   {
 256:FWLIB/src/stm32f4xx_cryp.c ****     assert_param(IS_CRYP_KEYSIZE(CRYP_InitStruct->CRYP_KeySize));
 114              		.loc 1 256 5 is_stmt 1 view .LVU26
 257:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_KEYSIZE;
 115              		.loc 1 257 5 view .LVU27
 116              		.loc 1 257 14 is_stmt 0 view .LVU28
 117 0036 094B     		ldr	r3, .L5
 118 0038 1A68     		ldr	r2, [r3]
 119 003a 22F44072 		bic	r2, r2, #768
 120 003e 1A60     		str	r2, [r3]
 258:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_InitStruct->CRYP_KeySize; /* Key size and value must be 
 121              		.loc 1 258 5 is_stmt 1 view .LVU29
 122              		.loc 1 258 14 is_stmt 0 view .LVU30
 123 0040 1A68     		ldr	r2, [r3]
 124              		.loc 1 258 32 view .LVU31
 125 0042 C168     		ldr	r1, [r0, #12]
 126              		.loc 1 258 14 view .LVU32
 127 0044 0A43     		orrs	r2, r2, r1
 128 0046 1A60     		str	r2, [r3]
 129              	.L4:
 259:FWLIB/src/stm32f4xx_cryp.c ****                                                   configured once the key has 
 260:FWLIB/src/stm32f4xx_cryp.c ****                                                   been prepared */
 261:FWLIB/src/stm32f4xx_cryp.c ****   }
 262:FWLIB/src/stm32f4xx_cryp.c **** 
 263:FWLIB/src/stm32f4xx_cryp.c ****   /* Select data Direction */ 
 264:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGODIR;
 130              		.loc 1 264 3 is_stmt 1 view .LVU33
 131              		.loc 1 264 12 is_stmt 0 view .LVU34
 132 0048 044B     		ldr	r3, .L5
 133 004a 1A68     		ldr	r2, [r3]
 134 004c 22F00402 		bic	r2, r2, #4
 135 0050 1A60     		str	r2, [r3]
 265:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
 136              		.loc 1 265 3 is_stmt 1 view .LVU35
 137              		.loc 1 265 12 is_stmt 0 view .LVU36
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 8


 138 0052 1A68     		ldr	r2, [r3]
 139              		.loc 1 265 30 view .LVU37
 140 0054 0168     		ldr	r1, [r0]
 141              		.loc 1 265 12 view .LVU38
 142 0056 0A43     		orrs	r2, r2, r1
 143 0058 1A60     		str	r2, [r3]
 266:FWLIB/src/stm32f4xx_cryp.c **** }
 144              		.loc 1 266 1 view .LVU39
 145 005a 7047     		bx	lr
 146              	.L6:
 147              		.align	2
 148              	.L5:
 149 005c 00000650 		.word	1342570496
 150              		.cfi_endproc
 151              	.LFE124:
 153              		.section	.text.CRYP_StructInit,"ax",%progbits
 154              		.align	1
 155              		.global	CRYP_StructInit
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu fpv4-sp-d16
 161              	CRYP_StructInit:
 162              	.LVL3:
 163              	.LFB125:
 267:FWLIB/src/stm32f4xx_cryp.c **** 
 268:FWLIB/src/stm32f4xx_cryp.c **** /**
 269:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_InitStruct member with its default value.
 270:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure which will
 271:FWLIB/src/stm32f4xx_cryp.c ****   *         be initialized.
 272:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 273:FWLIB/src/stm32f4xx_cryp.c ****   */
 274:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_StructInit(CRYP_InitTypeDef* CRYP_InitStruct)
 275:FWLIB/src/stm32f4xx_cryp.c **** {
 164              		.loc 1 275 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 276:FWLIB/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_AlgoDir member */
 277:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 169              		.loc 1 277 3 view .LVU41
 170              		.loc 1 277 33 is_stmt 0 view .LVU42
 171 0000 0023     		movs	r3, #0
 172 0002 0360     		str	r3, [r0]
 278:FWLIB/src/stm32f4xx_cryp.c **** 
 279:FWLIB/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_AlgoMode member */
 280:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoMode = CRYP_AlgoMode_TDES_ECB;
 173              		.loc 1 280 3 is_stmt 1 view .LVU43
 174              		.loc 1 280 34 is_stmt 0 view .LVU44
 175 0004 4360     		str	r3, [r0, #4]
 281:FWLIB/src/stm32f4xx_cryp.c **** 
 282:FWLIB/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_DataType member */
 283:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_DataType = CRYP_DataType_32b;
 176              		.loc 1 283 3 is_stmt 1 view .LVU45
 177              		.loc 1 283 34 is_stmt 0 view .LVU46
 178 0006 8360     		str	r3, [r0, #8]
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 9


 284:FWLIB/src/stm32f4xx_cryp.c ****   
 285:FWLIB/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_KeySize member */
 286:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_KeySize = CRYP_KeySize_128b;
 179              		.loc 1 286 3 is_stmt 1 view .LVU47
 180              		.loc 1 286 33 is_stmt 0 view .LVU48
 181 0008 C360     		str	r3, [r0, #12]
 287:FWLIB/src/stm32f4xx_cryp.c **** }
 182              		.loc 1 287 1 view .LVU49
 183 000a 7047     		bx	lr
 184              		.cfi_endproc
 185              	.LFE125:
 187              		.section	.text.CRYP_KeyInit,"ax",%progbits
 188              		.align	1
 189              		.global	CRYP_KeyInit
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu fpv4-sp-d16
 195              	CRYP_KeyInit:
 196              	.LVL4:
 197              	.LFB126:
 288:FWLIB/src/stm32f4xx_cryp.c **** 
 289:FWLIB/src/stm32f4xx_cryp.c **** /**
 290:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Keys according to the specified parameters in
 291:FWLIB/src/stm32f4xx_cryp.c ****   *         the CRYP_KeyInitStruct.
 292:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that
 293:FWLIB/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.
 294:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 295:FWLIB/src/stm32f4xx_cryp.c ****   */
 296:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 297:FWLIB/src/stm32f4xx_cryp.c **** {
 198              		.loc 1 297 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 298:FWLIB/src/stm32f4xx_cryp.c ****   /* Key Initialisation */
 299:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_KeyInitStruct->CRYP_Key0Left;
 203              		.loc 1 299 3 view .LVU51
 204              		.loc 1 299 34 is_stmt 0 view .LVU52
 205 0000 0268     		ldr	r2, [r0]
 206              		.loc 1 299 14 view .LVU53
 207 0002 084B     		ldr	r3, .L9
 208 0004 1A62     		str	r2, [r3, #32]
 300:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_KeyInitStruct->CRYP_Key0Right;
 209              		.loc 1 300 3 is_stmt 1 view .LVU54
 210              		.loc 1 300 34 is_stmt 0 view .LVU55
 211 0006 4268     		ldr	r2, [r0, #4]
 212              		.loc 1 300 14 view .LVU56
 213 0008 5A62     		str	r2, [r3, #36]
 301:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_KeyInitStruct->CRYP_Key1Left;
 214              		.loc 1 301 3 is_stmt 1 view .LVU57
 215              		.loc 1 301 34 is_stmt 0 view .LVU58
 216 000a 8268     		ldr	r2, [r0, #8]
 217              		.loc 1 301 14 view .LVU59
 218 000c 9A62     		str	r2, [r3, #40]
 302:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_KeyInitStruct->CRYP_Key1Right;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 10


 219              		.loc 1 302 3 is_stmt 1 view .LVU60
 220              		.loc 1 302 34 is_stmt 0 view .LVU61
 221 000e C268     		ldr	r2, [r0, #12]
 222              		.loc 1 302 14 view .LVU62
 223 0010 DA62     		str	r2, [r3, #44]
 303:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_KeyInitStruct->CRYP_Key2Left;
 224              		.loc 1 303 3 is_stmt 1 view .LVU63
 225              		.loc 1 303 34 is_stmt 0 view .LVU64
 226 0012 0269     		ldr	r2, [r0, #16]
 227              		.loc 1 303 14 view .LVU65
 228 0014 1A63     		str	r2, [r3, #48]
 304:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_KeyInitStruct->CRYP_Key2Right;
 229              		.loc 1 304 3 is_stmt 1 view .LVU66
 230              		.loc 1 304 34 is_stmt 0 view .LVU67
 231 0016 4269     		ldr	r2, [r0, #20]
 232              		.loc 1 304 14 view .LVU68
 233 0018 5A63     		str	r2, [r3, #52]
 305:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_KeyInitStruct->CRYP_Key3Left;
 234              		.loc 1 305 3 is_stmt 1 view .LVU69
 235              		.loc 1 305 34 is_stmt 0 view .LVU70
 236 001a 8269     		ldr	r2, [r0, #24]
 237              		.loc 1 305 14 view .LVU71
 238 001c 9A63     		str	r2, [r3, #56]
 306:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_KeyInitStruct->CRYP_Key3Right;
 239              		.loc 1 306 3 is_stmt 1 view .LVU72
 240              		.loc 1 306 34 is_stmt 0 view .LVU73
 241 001e C269     		ldr	r2, [r0, #28]
 242              		.loc 1 306 14 view .LVU74
 243 0020 DA63     		str	r2, [r3, #60]
 307:FWLIB/src/stm32f4xx_cryp.c **** }
 244              		.loc 1 307 1 view .LVU75
 245 0022 7047     		bx	lr
 246              	.L10:
 247              		.align	2
 248              	.L9:
 249 0024 00000650 		.word	1342570496
 250              		.cfi_endproc
 251              	.LFE126:
 253              		.section	.text.CRYP_KeyStructInit,"ax",%progbits
 254              		.align	1
 255              		.global	CRYP_KeyStructInit
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu fpv4-sp-d16
 261              	CRYP_KeyStructInit:
 262              	.LVL5:
 263              	.LFB127:
 308:FWLIB/src/stm32f4xx_cryp.c **** 
 309:FWLIB/src/stm32f4xx_cryp.c **** /**
 310:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_KeyInitStruct member with its default value.
 311:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure 
 312:FWLIB/src/stm32f4xx_cryp.c ****   *         which will be initialized.
 313:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 314:FWLIB/src/stm32f4xx_cryp.c ****   */
 315:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 316:FWLIB/src/stm32f4xx_cryp.c **** {
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 11


 264              		.loc 1 316 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 317:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Left  = 0;
 269              		.loc 1 317 3 view .LVU77
 270              		.loc 1 317 38 is_stmt 0 view .LVU78
 271 0000 0023     		movs	r3, #0
 272 0002 0360     		str	r3, [r0]
 318:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Right = 0;
 273              		.loc 1 318 3 is_stmt 1 view .LVU79
 274              		.loc 1 318 38 is_stmt 0 view .LVU80
 275 0004 4360     		str	r3, [r0, #4]
 319:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Left  = 0;
 276              		.loc 1 319 3 is_stmt 1 view .LVU81
 277              		.loc 1 319 38 is_stmt 0 view .LVU82
 278 0006 8360     		str	r3, [r0, #8]
 320:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Right = 0;
 279              		.loc 1 320 3 is_stmt 1 view .LVU83
 280              		.loc 1 320 38 is_stmt 0 view .LVU84
 281 0008 C360     		str	r3, [r0, #12]
 321:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Left  = 0;
 282              		.loc 1 321 3 is_stmt 1 view .LVU85
 283              		.loc 1 321 38 is_stmt 0 view .LVU86
 284 000a 0361     		str	r3, [r0, #16]
 322:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Right = 0;
 285              		.loc 1 322 3 is_stmt 1 view .LVU87
 286              		.loc 1 322 38 is_stmt 0 view .LVU88
 287 000c 4361     		str	r3, [r0, #20]
 323:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Left  = 0;
 288              		.loc 1 323 3 is_stmt 1 view .LVU89
 289              		.loc 1 323 38 is_stmt 0 view .LVU90
 290 000e 8361     		str	r3, [r0, #24]
 324:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Right = 0;
 291              		.loc 1 324 3 is_stmt 1 view .LVU91
 292              		.loc 1 324 38 is_stmt 0 view .LVU92
 293 0010 C361     		str	r3, [r0, #28]
 325:FWLIB/src/stm32f4xx_cryp.c **** }
 294              		.loc 1 325 1 view .LVU93
 295 0012 7047     		bx	lr
 296              		.cfi_endproc
 297              	.LFE127:
 299              		.section	.text.CRYP_IVInit,"ax",%progbits
 300              		.align	1
 301              		.global	CRYP_IVInit
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv4-sp-d16
 307              	CRYP_IVInit:
 308              	.LVL6:
 309              	.LFB128:
 326:FWLIB/src/stm32f4xx_cryp.c **** /**
 327:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Initialization Vectors(IV) according to the
 328:FWLIB/src/stm32f4xx_cryp.c ****   *         specified parameters in the CRYP_IVInitStruct.
 329:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef structure that contains
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 12


 330:FWLIB/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP Initialization Vectors(IV).
 331:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 332:FWLIB/src/stm32f4xx_cryp.c ****   */
 333:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_IVInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 334:FWLIB/src/stm32f4xx_cryp.c **** {
 310              		.loc 1 334 1 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 335:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_IVInitStruct->CRYP_IV0Left;
 315              		.loc 1 335 3 view .LVU95
 316              		.loc 1 335 34 is_stmt 0 view .LVU96
 317 0000 0268     		ldr	r2, [r0]
 318              		.loc 1 335 15 view .LVU97
 319 0002 044B     		ldr	r3, .L13
 320 0004 1A64     		str	r2, [r3, #64]
 336:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_IVInitStruct->CRYP_IV0Right;
 321              		.loc 1 336 3 is_stmt 1 view .LVU98
 322              		.loc 1 336 34 is_stmt 0 view .LVU99
 323 0006 4268     		ldr	r2, [r0, #4]
 324              		.loc 1 336 15 view .LVU100
 325 0008 5A64     		str	r2, [r3, #68]
 337:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_IVInitStruct->CRYP_IV1Left;
 326              		.loc 1 337 3 is_stmt 1 view .LVU101
 327              		.loc 1 337 34 is_stmt 0 view .LVU102
 328 000a 8268     		ldr	r2, [r0, #8]
 329              		.loc 1 337 15 view .LVU103
 330 000c 9A64     		str	r2, [r3, #72]
 338:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_IVInitStruct->CRYP_IV1Right;
 331              		.loc 1 338 3 is_stmt 1 view .LVU104
 332              		.loc 1 338 34 is_stmt 0 view .LVU105
 333 000e C268     		ldr	r2, [r0, #12]
 334              		.loc 1 338 15 view .LVU106
 335 0010 DA64     		str	r2, [r3, #76]
 339:FWLIB/src/stm32f4xx_cryp.c **** }
 336              		.loc 1 339 1 view .LVU107
 337 0012 7047     		bx	lr
 338              	.L14:
 339              		.align	2
 340              	.L13:
 341 0014 00000650 		.word	1342570496
 342              		.cfi_endproc
 343              	.LFE128:
 345              		.section	.text.CRYP_IVStructInit,"ax",%progbits
 346              		.align	1
 347              		.global	CRYP_IVStructInit
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu fpv4-sp-d16
 353              	CRYP_IVStructInit:
 354              	.LVL7:
 355              	.LFB129:
 340:FWLIB/src/stm32f4xx_cryp.c **** 
 341:FWLIB/src/stm32f4xx_cryp.c **** /**
 342:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_IVInitStruct member with its default value.
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 13


 343:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef Initialization 
 344:FWLIB/src/stm32f4xx_cryp.c ****   *         Vectors(IV) structure which will be initialized.
 345:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 346:FWLIB/src/stm32f4xx_cryp.c ****   */
 347:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_IVStructInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 348:FWLIB/src/stm32f4xx_cryp.c **** {
 356              		.loc 1 348 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 349:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Left  = 0;
 361              		.loc 1 349 3 view .LVU109
 362              		.loc 1 349 36 is_stmt 0 view .LVU110
 363 0000 0023     		movs	r3, #0
 364 0002 0360     		str	r3, [r0]
 350:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Right = 0;
 365              		.loc 1 350 3 is_stmt 1 view .LVU111
 366              		.loc 1 350 36 is_stmt 0 view .LVU112
 367 0004 4360     		str	r3, [r0, #4]
 351:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Left  = 0;
 368              		.loc 1 351 3 is_stmt 1 view .LVU113
 369              		.loc 1 351 36 is_stmt 0 view .LVU114
 370 0006 8360     		str	r3, [r0, #8]
 352:FWLIB/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Right = 0;
 371              		.loc 1 352 3 is_stmt 1 view .LVU115
 372              		.loc 1 352 36 is_stmt 0 view .LVU116
 373 0008 C360     		str	r3, [r0, #12]
 353:FWLIB/src/stm32f4xx_cryp.c **** }
 374              		.loc 1 353 1 view .LVU117
 375 000a 7047     		bx	lr
 376              		.cfi_endproc
 377              	.LFE129:
 379              		.section	.text.CRYP_PhaseConfig,"ax",%progbits
 380              		.align	1
 381              		.global	CRYP_PhaseConfig
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu fpv4-sp-d16
 387              	CRYP_PhaseConfig:
 388              	.LVL8:
 389              	.LFB130:
 354:FWLIB/src/stm32f4xx_cryp.c **** 
 355:FWLIB/src/stm32f4xx_cryp.c **** /**
 356:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Configures the AES-CCM and AES-GCM phases
 357:FWLIB/src/stm32f4xx_cryp.c ****   * @note   This function is used only with AES-CCM or AES-GCM Algorithms  
 358:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_Phase: specifies the CRYP AES-CCM and AES-GCM phase to be configured.
 359:FWLIB/src/stm32f4xx_cryp.c ****   *           This parameter can be one of the following values:
 360:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_Phase_Init: Initialization phase
 361:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_Phase_Header: Header phase
 362:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_Phase_Payload: Payload phase
 363:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_Phase_Final: Final phase 
 364:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 365:FWLIB/src/stm32f4xx_cryp.c ****   */
 366:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_PhaseConfig(uint32_t CRYP_Phase)
 367:FWLIB/src/stm32f4xx_cryp.c **** { uint32_t tempcr = 0;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 14


 390              		.loc 1 367 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              		@ link register save eliminated.
 395              		.loc 1 367 3 view .LVU119
 368:FWLIB/src/stm32f4xx_cryp.c **** 
 369:FWLIB/src/stm32f4xx_cryp.c ****   /* Check the parameter */
 370:FWLIB/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_PHASE(CRYP_Phase));
 396              		.loc 1 370 3 view .LVU120
 371:FWLIB/src/stm32f4xx_cryp.c **** 
 372:FWLIB/src/stm32f4xx_cryp.c ****   /* Get the CR register */
 373:FWLIB/src/stm32f4xx_cryp.c ****   tempcr = CRYP->CR;
 397              		.loc 1 373 3 view .LVU121
 398              		.loc 1 373 10 is_stmt 0 view .LVU122
 399 0000 034A     		ldr	r2, .L17
 400 0002 1368     		ldr	r3, [r2]
 401              	.LVL9:
 374:FWLIB/src/stm32f4xx_cryp.c ****   
 375:FWLIB/src/stm32f4xx_cryp.c ****   /* Reset the phase configuration bits: GCMP_CCMPH */
 376:FWLIB/src/stm32f4xx_cryp.c ****   tempcr &= (uint32_t)(~CRYP_CR_GCM_CCMPH);
 402              		.loc 1 376 3 is_stmt 1 view .LVU123
 403              		.loc 1 376 10 is_stmt 0 view .LVU124
 404 0004 23F44033 		bic	r3, r3, #196608
 405              	.LVL10:
 377:FWLIB/src/stm32f4xx_cryp.c ****   /* Set the selected phase */
 378:FWLIB/src/stm32f4xx_cryp.c ****   tempcr |= (uint32_t)CRYP_Phase;
 406              		.loc 1 378 3 is_stmt 1 view .LVU125
 407              		.loc 1 378 10 is_stmt 0 view .LVU126
 408 0008 0343     		orrs	r3, r3, r0
 409              	.LVL11:
 379:FWLIB/src/stm32f4xx_cryp.c **** 
 380:FWLIB/src/stm32f4xx_cryp.c ****   /* Set the CR register */ 
 381:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CR = tempcr;    
 410              		.loc 1 381 3 is_stmt 1 view .LVU127
 411              		.loc 1 381 12 is_stmt 0 view .LVU128
 412 000a 1360     		str	r3, [r2]
 382:FWLIB/src/stm32f4xx_cryp.c **** }
 413              		.loc 1 382 1 view .LVU129
 414 000c 7047     		bx	lr
 415              	.L18:
 416 000e 00BF     		.align	2
 417              	.L17:
 418 0010 00000650 		.word	1342570496
 419              		.cfi_endproc
 420              	.LFE130:
 422              		.section	.text.CRYP_FIFOFlush,"ax",%progbits
 423              		.align	1
 424              		.global	CRYP_FIFOFlush
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 428              		.fpu fpv4-sp-d16
 430              	CRYP_FIFOFlush:
 431              	.LFB131:
 383:FWLIB/src/stm32f4xx_cryp.c **** 
 384:FWLIB/src/stm32f4xx_cryp.c **** /**
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 15


 385:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Flushes the IN and OUT FIFOs (that is read and write pointers of the 
 386:FWLIB/src/stm32f4xx_cryp.c ****   *         FIFOs are reset)
 387:FWLIB/src/stm32f4xx_cryp.c ****   * @note   The FIFOs must be flushed only when BUSY flag is reset.  
 388:FWLIB/src/stm32f4xx_cryp.c ****   * @param  None
 389:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 390:FWLIB/src/stm32f4xx_cryp.c ****   */
 391:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_FIFOFlush(void)
 392:FWLIB/src/stm32f4xx_cryp.c **** {
 432              		.loc 1 392 1 is_stmt 1 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 393:FWLIB/src/stm32f4xx_cryp.c ****   /* Reset the read and write pointers of the FIFOs */
 394:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_FFLUSH;
 437              		.loc 1 394 3 view .LVU131
 438              		.loc 1 394 12 is_stmt 0 view .LVU132
 439 0000 024A     		ldr	r2, .L20
 440 0002 1368     		ldr	r3, [r2]
 441 0004 43F48043 		orr	r3, r3, #16384
 442 0008 1360     		str	r3, [r2]
 395:FWLIB/src/stm32f4xx_cryp.c **** }
 443              		.loc 1 395 1 view .LVU133
 444 000a 7047     		bx	lr
 445              	.L21:
 446              		.align	2
 447              	.L20:
 448 000c 00000650 		.word	1342570496
 449              		.cfi_endproc
 450              	.LFE131:
 452              		.section	.text.CRYP_Cmd,"ax",%progbits
 453              		.align	1
 454              		.global	CRYP_Cmd
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 458              		.fpu fpv4-sp-d16
 460              	CRYP_Cmd:
 461              	.LVL12:
 462              	.LFB132:
 396:FWLIB/src/stm32f4xx_cryp.c **** 
 397:FWLIB/src/stm32f4xx_cryp.c **** /**
 398:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP peripheral.
 399:FWLIB/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the CRYP peripheral.
 400:FWLIB/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 401:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 402:FWLIB/src/stm32f4xx_cryp.c ****   */
 403:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_Cmd(FunctionalState NewState)
 404:FWLIB/src/stm32f4xx_cryp.c **** {
 463              		.loc 1 404 1 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 405:FWLIB/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 406:FWLIB/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 468              		.loc 1 406 3 view .LVU135
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 16


 407:FWLIB/src/stm32f4xx_cryp.c **** 
 408:FWLIB/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 469              		.loc 1 408 3 view .LVU136
 470              		.loc 1 408 6 is_stmt 0 view .LVU137
 471 0000 28B1     		cbz	r0, .L23
 409:FWLIB/src/stm32f4xx_cryp.c ****   {
 410:FWLIB/src/stm32f4xx_cryp.c ****     /* Enable the Cryptographic processor */
 411:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_CR_CRYPEN;
 472              		.loc 1 411 5 is_stmt 1 view .LVU138
 473              		.loc 1 411 14 is_stmt 0 view .LVU139
 474 0002 064A     		ldr	r2, .L25
 475 0004 1368     		ldr	r3, [r2]
 476 0006 43F40043 		orr	r3, r3, #32768
 477 000a 1360     		str	r3, [r2]
 478 000c 7047     		bx	lr
 479              	.L23:
 412:FWLIB/src/stm32f4xx_cryp.c ****   }
 413:FWLIB/src/stm32f4xx_cryp.c ****   else
 414:FWLIB/src/stm32f4xx_cryp.c ****   {
 415:FWLIB/src/stm32f4xx_cryp.c ****     /* Disable the Cryptographic processor */
 416:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_CRYPEN;
 480              		.loc 1 416 5 is_stmt 1 view .LVU140
 481              		.loc 1 416 14 is_stmt 0 view .LVU141
 482 000e 034A     		ldr	r2, .L25
 483 0010 1368     		ldr	r3, [r2]
 484 0012 23F40043 		bic	r3, r3, #32768
 485 0016 1360     		str	r3, [r2]
 417:FWLIB/src/stm32f4xx_cryp.c ****   }
 418:FWLIB/src/stm32f4xx_cryp.c **** }
 486              		.loc 1 418 1 view .LVU142
 487 0018 7047     		bx	lr
 488              	.L26:
 489 001a 00BF     		.align	2
 490              	.L25:
 491 001c 00000650 		.word	1342570496
 492              		.cfi_endproc
 493              	.LFE132:
 495              		.section	.text.CRYP_DataIn,"ax",%progbits
 496              		.align	1
 497              		.global	CRYP_DataIn
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu fpv4-sp-d16
 503              	CRYP_DataIn:
 504              	.LVL13:
 505              	.LFB133:
 419:FWLIB/src/stm32f4xx_cryp.c **** /**
 420:FWLIB/src/stm32f4xx_cryp.c ****   * @}
 421:FWLIB/src/stm32f4xx_cryp.c ****   */
 422:FWLIB/src/stm32f4xx_cryp.c ****   
 423:FWLIB/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group2 CRYP Data processing functions
 424:FWLIB/src/stm32f4xx_cryp.c ****  *  @brief    CRYP Data processing functions
 425:FWLIB/src/stm32f4xx_cryp.c ****  *
 426:FWLIB/src/stm32f4xx_cryp.c **** @verbatim    
 427:FWLIB/src/stm32f4xx_cryp.c ****  ===============================================================================
 428:FWLIB/src/stm32f4xx_cryp.c ****                     ##### CRYP Data processing functions #####
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 17


 429:FWLIB/src/stm32f4xx_cryp.c ****  ===============================================================================  
 430:FWLIB/src/stm32f4xx_cryp.c ****  [..] This section provides functions allowing the encryption and decryption 
 431:FWLIB/src/stm32f4xx_cryp.c ****       operations: 
 432:FWLIB/src/stm32f4xx_cryp.c ****    (+) Enter data to be treated in the IN FIFO : using CRYP_DataIn() function.
 433:FWLIB/src/stm32f4xx_cryp.c ****    (+) Get the data result from the OUT FIFO : using CRYP_DataOut() function.
 434:FWLIB/src/stm32f4xx_cryp.c **** 
 435:FWLIB/src/stm32f4xx_cryp.c **** @endverbatim
 436:FWLIB/src/stm32f4xx_cryp.c ****   * @{
 437:FWLIB/src/stm32f4xx_cryp.c ****   */
 438:FWLIB/src/stm32f4xx_cryp.c **** 
 439:FWLIB/src/stm32f4xx_cryp.c **** /**
 440:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Writes data in the Data Input register (DIN).
 441:FWLIB/src/stm32f4xx_cryp.c ****   * @note   After the DIN register has been read once or several times, 
 442:FWLIB/src/stm32f4xx_cryp.c ****   *         the FIFO must be flushed (using CRYP_FIFOFlush() function).  
 443:FWLIB/src/stm32f4xx_cryp.c ****   * @param  Data: data to write in Data Input register
 444:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 445:FWLIB/src/stm32f4xx_cryp.c ****   */
 446:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_DataIn(uint32_t Data)
 447:FWLIB/src/stm32f4xx_cryp.c **** {
 506              		.loc 1 447 1 is_stmt 1 view -0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 448:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->DR = Data;
 511              		.loc 1 448 3 view .LVU144
 512              		.loc 1 448 12 is_stmt 0 view .LVU145
 513 0000 014B     		ldr	r3, .L28
 514 0002 9860     		str	r0, [r3, #8]
 449:FWLIB/src/stm32f4xx_cryp.c **** }
 515              		.loc 1 449 1 view .LVU146
 516 0004 7047     		bx	lr
 517              	.L29:
 518 0006 00BF     		.align	2
 519              	.L28:
 520 0008 00000650 		.word	1342570496
 521              		.cfi_endproc
 522              	.LFE133:
 524              		.section	.text.CRYP_DataOut,"ax",%progbits
 525              		.align	1
 526              		.global	CRYP_DataOut
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 530              		.fpu fpv4-sp-d16
 532              	CRYP_DataOut:
 533              	.LFB134:
 450:FWLIB/src/stm32f4xx_cryp.c **** 
 451:FWLIB/src/stm32f4xx_cryp.c **** /**
 452:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Returns the last data entered into the output FIFO.
 453:FWLIB/src/stm32f4xx_cryp.c ****   * @param  None
 454:FWLIB/src/stm32f4xx_cryp.c ****   * @retval Last data entered into the output FIFO.
 455:FWLIB/src/stm32f4xx_cryp.c ****   */
 456:FWLIB/src/stm32f4xx_cryp.c **** uint32_t CRYP_DataOut(void)
 457:FWLIB/src/stm32f4xx_cryp.c **** {
 534              		.loc 1 457 1 is_stmt 1 view -0
 535              		.cfi_startproc
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 18


 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 458:FWLIB/src/stm32f4xx_cryp.c ****   return CRYP->DOUT;
 539              		.loc 1 458 3 view .LVU148
 540              		.loc 1 458 14 is_stmt 0 view .LVU149
 541 0000 014B     		ldr	r3, .L31
 542 0002 D868     		ldr	r0, [r3, #12]
 459:FWLIB/src/stm32f4xx_cryp.c **** }
 543              		.loc 1 459 1 view .LVU150
 544 0004 7047     		bx	lr
 545              	.L32:
 546 0006 00BF     		.align	2
 547              	.L31:
 548 0008 00000650 		.word	1342570496
 549              		.cfi_endproc
 550              	.LFE134:
 552              		.section	.text.CRYP_SaveContext,"ax",%progbits
 553              		.align	1
 554              		.global	CRYP_SaveContext
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 558              		.fpu fpv4-sp-d16
 560              	CRYP_SaveContext:
 561              	.LVL14:
 562              	.LFB135:
 460:FWLIB/src/stm32f4xx_cryp.c **** /**
 461:FWLIB/src/stm32f4xx_cryp.c ****   * @}
 462:FWLIB/src/stm32f4xx_cryp.c ****   */
 463:FWLIB/src/stm32f4xx_cryp.c ****   
 464:FWLIB/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group3 Context swapping functions
 465:FWLIB/src/stm32f4xx_cryp.c ****  *  @brief   Context swapping functions
 466:FWLIB/src/stm32f4xx_cryp.c ****  *
 467:FWLIB/src/stm32f4xx_cryp.c **** @verbatim   
 468:FWLIB/src/stm32f4xx_cryp.c ****  ===============================================================================
 469:FWLIB/src/stm32f4xx_cryp.c ****                       ##### Context swapping functions #####
 470:FWLIB/src/stm32f4xx_cryp.c ****  ===============================================================================  
 471:FWLIB/src/stm32f4xx_cryp.c ****  [..] This section provides functions allowing to save and store CRYP Context
 472:FWLIB/src/stm32f4xx_cryp.c **** 
 473:FWLIB/src/stm32f4xx_cryp.c ****  [..] It is possible to interrupt an encryption/ decryption/ key generation process 
 474:FWLIB/src/stm32f4xx_cryp.c ****       to perform another processing with a higher priority, and to complete the 
 475:FWLIB/src/stm32f4xx_cryp.c ****       interrupted process later on, when the higher-priority task is complete. To do 
 476:FWLIB/src/stm32f4xx_cryp.c ****       so, the context of the interrupted task must be saved from the CRYP registers 
 477:FWLIB/src/stm32f4xx_cryp.c ****       to memory, and then be restored from memory to the CRYP registers.
 478:FWLIB/src/stm32f4xx_cryp.c ****    
 479:FWLIB/src/stm32f4xx_cryp.c ****    (#) To save the current context, use CRYP_SaveContext() function
 480:FWLIB/src/stm32f4xx_cryp.c ****    (#) To restore the saved context, use CRYP_RestoreContext() function 
 481:FWLIB/src/stm32f4xx_cryp.c **** 
 482:FWLIB/src/stm32f4xx_cryp.c **** @endverbatim
 483:FWLIB/src/stm32f4xx_cryp.c ****   * @{
 484:FWLIB/src/stm32f4xx_cryp.c ****   */
 485:FWLIB/src/stm32f4xx_cryp.c ****   
 486:FWLIB/src/stm32f4xx_cryp.c **** /**
 487:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Saves the CRYP peripheral Context. 
 488:FWLIB/src/stm32f4xx_cryp.c ****   * @note   This function stops DMA transfer before to save the context. After 
 489:FWLIB/src/stm32f4xx_cryp.c ****   *         restoring the context, you have to enable the DMA again (if the DMA
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 19


 490:FWLIB/src/stm32f4xx_cryp.c ****   *         was previously used).
 491:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextSave: pointer to a CRYP_Context structure that contains
 492:FWLIB/src/stm32f4xx_cryp.c ****   *         the repository for current context.
 493:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that 
 494:FWLIB/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.  
 495:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 496:FWLIB/src/stm32f4xx_cryp.c ****   */
 497:FWLIB/src/stm32f4xx_cryp.c **** ErrorStatus CRYP_SaveContext(CRYP_Context* CRYP_ContextSave,
 498:FWLIB/src/stm32f4xx_cryp.c ****                              CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 499:FWLIB/src/stm32f4xx_cryp.c **** {
 563              		.loc 1 499 1 is_stmt 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 8
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 568              		.loc 1 499 1 is_stmt 0 view .LVU152
 569 0000 10B4     		push	{r4}
 570              	.LCFI1:
 571              		.cfi_def_cfa_offset 4
 572              		.cfi_offset 4, -4
 573 0002 83B0     		sub	sp, sp, #12
 574              	.LCFI2:
 575              		.cfi_def_cfa_offset 16
 500:FWLIB/src/stm32f4xx_cryp.c ****   __IO uint32_t timeout = 0;
 576              		.loc 1 500 3 is_stmt 1 view .LVU153
 577              		.loc 1 500 17 is_stmt 0 view .LVU154
 578 0004 0023     		movs	r3, #0
 579 0006 0193     		str	r3, [sp, #4]
 501:FWLIB/src/stm32f4xx_cryp.c ****   uint32_t ckeckmask = 0, bitstatus;    
 580              		.loc 1 501 3 is_stmt 1 view .LVU155
 581              	.LVL15:
 502:FWLIB/src/stm32f4xx_cryp.c ****   ErrorStatus status = ERROR;
 582              		.loc 1 502 3 view .LVU156
 503:FWLIB/src/stm32f4xx_cryp.c **** 
 504:FWLIB/src/stm32f4xx_cryp.c ****   /* Stop DMA transfers on the IN FIFO by clearing the DIEN bit in the CRYP_DMACR */
 505:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DIEN;
 583              		.loc 1 505 3 view .LVU157
 584              		.loc 1 505 15 is_stmt 0 view .LVU158
 585 0008 3C4B     		ldr	r3, .L42
 586 000a 1A69     		ldr	r2, [r3, #16]
 587 000c 22F00102 		bic	r2, r2, #1
 588 0010 1A61     		str	r2, [r3, #16]
 506:FWLIB/src/stm32f4xx_cryp.c ****     
 507:FWLIB/src/stm32f4xx_cryp.c ****   /* Wait until both the IN and OUT FIFOs are empty  
 508:FWLIB/src/stm32f4xx_cryp.c ****     (IFEM=1 and OFNE=0 in the CRYP_SR register) and the 
 509:FWLIB/src/stm32f4xx_cryp.c ****      BUSY bit is cleared. */
 510:FWLIB/src/stm32f4xx_cryp.c **** 
 511:FWLIB/src/stm32f4xx_cryp.c ****   if ((CRYP->CR & (uint32_t)(CRYP_CR_ALGOMODE_TDES_ECB | CRYP_CR_ALGOMODE_TDES_CBC)) != (uint32_t)0
 589              		.loc 1 511 3 is_stmt 1 view .LVU159
 590              		.loc 1 511 12 is_stmt 0 view .LVU160
 591 0012 1B68     		ldr	r3, [r3]
 592              		.loc 1 511 6 view .LVU161
 593 0014 13F0080F 		tst	r3, #8
 594 0018 1BD0     		beq	.L38
 512:FWLIB/src/stm32f4xx_cryp.c ****   { 
 513:FWLIB/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY ;
 595              		.loc 1 513 15 view .LVU162
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 20


 596 001a 4FF0110C 		mov	ip, #17
 597              	.LVL16:
 598              	.L36:
 514:FWLIB/src/stm32f4xx_cryp.c ****   }
 515:FWLIB/src/stm32f4xx_cryp.c ****   else /* AES or DES */
 516:FWLIB/src/stm32f4xx_cryp.c ****   {
 517:FWLIB/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY | CRYP_SR_OFNE;
 518:FWLIB/src/stm32f4xx_cryp.c ****   }           
 519:FWLIB/src/stm32f4xx_cryp.c ****    
 520:FWLIB/src/stm32f4xx_cryp.c ****   do 
 599              		.loc 1 520 3 is_stmt 1 discriminator 2 view .LVU163
 521:FWLIB/src/stm32f4xx_cryp.c ****   {
 522:FWLIB/src/stm32f4xx_cryp.c ****     bitstatus = CRYP->SR & ckeckmask;
 600              		.loc 1 522 5 discriminator 2 view .LVU164
 601              		.loc 1 522 21 is_stmt 0 discriminator 2 view .LVU165
 602 001e 374B     		ldr	r3, .L42
 603 0020 5A68     		ldr	r2, [r3, #4]
 604              		.loc 1 522 15 discriminator 2 view .LVU166
 605 0022 02EA0C02 		and	r2, r2, ip
 606              	.LVL17:
 523:FWLIB/src/stm32f4xx_cryp.c ****     timeout++;
 607              		.loc 1 523 5 is_stmt 1 discriminator 2 view .LVU167
 608              		.loc 1 523 12 is_stmt 0 discriminator 2 view .LVU168
 609 0026 019B     		ldr	r3, [sp, #4]
 610 0028 0133     		adds	r3, r3, #1
 611 002a 0193     		str	r3, [sp, #4]
 524:FWLIB/src/stm32f4xx_cryp.c ****   }
 525:FWLIB/src/stm32f4xx_cryp.c ****   while ((timeout != MAX_TIMEOUT) && (bitstatus != CRYP_SR_IFEM));
 612              		.loc 1 525 9 is_stmt 1 discriminator 2 view .LVU169
 613              		.loc 1 525 19 is_stmt 0 discriminator 2 view .LVU170
 614 002c 019C     		ldr	r4, [sp, #4]
 615              		.loc 1 525 3 discriminator 2 view .LVU171
 616 002e 4FF6FF73 		movw	r3, #65535
 617 0032 9C42     		cmp	r4, r3
 618 0034 01D0     		beq	.L35
 619              		.loc 1 525 35 discriminator 1 view .LVU172
 620 0036 012A     		cmp	r2, #1
 621 0038 F1D1     		bne	.L36
 622              	.L35:
 526:FWLIB/src/stm32f4xx_cryp.c ****      
 527:FWLIB/src/stm32f4xx_cryp.c ****   if ((CRYP->SR & ckeckmask) != CRYP_SR_IFEM)
 623              		.loc 1 527 3 is_stmt 1 view .LVU173
 624              		.loc 1 527 12 is_stmt 0 view .LVU174
 625 003a 304B     		ldr	r3, .L42
 626 003c 5B68     		ldr	r3, [r3, #4]
 627              		.loc 1 527 17 view .LVU175
 628 003e 03EA0C0C 		and	ip, r3, ip
 629              	.LVL18:
 630              		.loc 1 527 6 view .LVU176
 631 0042 BCF1010F 		cmp	ip, #1
 632 0046 07D0     		beq	.L41
 528:FWLIB/src/stm32f4xx_cryp.c ****   {
 529:FWLIB/src/stm32f4xx_cryp.c ****     status = ERROR;
 633              		.loc 1 529 12 view .LVU177
 634 0048 0020     		movs	r0, #0
 635              	.LVL19:
 636              	.L37:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 21


 530:FWLIB/src/stm32f4xx_cryp.c ****   }
 531:FWLIB/src/stm32f4xx_cryp.c ****   else
 532:FWLIB/src/stm32f4xx_cryp.c ****   {      
 533:FWLIB/src/stm32f4xx_cryp.c ****     /* Stop DMA transfers on the OUT FIFO by 
 534:FWLIB/src/stm32f4xx_cryp.c ****        - writing the DOEN bit to 0 in the CRYP_DMACR register 
 535:FWLIB/src/stm32f4xx_cryp.c ****        - and clear the CRYPEN bit. */
 536:FWLIB/src/stm32f4xx_cryp.c **** 
 537:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DOEN;
 538:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 539:FWLIB/src/stm32f4xx_cryp.c **** 
 540:FWLIB/src/stm32f4xx_cryp.c ****     /* Save the current configuration (bit 19, bit[17:16] and bits [9:2] in the CRYP_CR register) *
 541:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CR_CurrentConfig  = CRYP->CR & (CRYP_CR_GCM_CCMPH |
 542:FWLIB/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 543:FWLIB/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_DATATYPE |
 544:FWLIB/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_ALGOMODE |
 545:FWLIB/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_ALGODIR);
 546:FWLIB/src/stm32f4xx_cryp.c **** 
 547:FWLIB/src/stm32f4xx_cryp.c ****     /* and, if not in ECB mode, the initialization vectors. */
 548:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0LR = CRYP->IV0LR;
 549:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 550:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 551:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 552:FWLIB/src/stm32f4xx_cryp.c **** 
 553:FWLIB/src/stm32f4xx_cryp.c ****     /* save The key value */
 554:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0LR = CRYP_KeyInitStruct->CRYP_Key0Left; 
 555:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 556:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 557:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 558:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 559:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 560:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 561:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 562:FWLIB/src/stm32f4xx_cryp.c **** 
 563:FWLIB/src/stm32f4xx_cryp.c ****     /* Save the content of context swap registers */
 564:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[0] = CRYP->CSGCMCCM0R;
 565:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[1] = CRYP->CSGCMCCM1R;
 566:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[2] = CRYP->CSGCMCCM2R;
 567:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[3] = CRYP->CSGCMCCM3R;
 568:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[4] = CRYP->CSGCMCCM4R;
 569:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[5] = CRYP->CSGCMCCM5R;
 570:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[6] = CRYP->CSGCMCCM6R;
 571:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[7] = CRYP->CSGCMCCM7R;
 572:FWLIB/src/stm32f4xx_cryp.c ****     
 573:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[0] = CRYP->CSGCM0R;
 574:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[1] = CRYP->CSGCM1R;
 575:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[2] = CRYP->CSGCM2R;
 576:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[3] = CRYP->CSGCM3R;
 577:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[4] = CRYP->CSGCM4R;
 578:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[5] = CRYP->CSGCM5R;
 579:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[6] = CRYP->CSGCM6R;
 580:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[7] = CRYP->CSGCM7R;
 581:FWLIB/src/stm32f4xx_cryp.c ****     
 582:FWLIB/src/stm32f4xx_cryp.c ****    /* When needed, save the DMA status (pointers for IN and OUT messages, 
 583:FWLIB/src/stm32f4xx_cryp.c ****       number of remaining bytes, etc.) */
 584:FWLIB/src/stm32f4xx_cryp.c ****      
 585:FWLIB/src/stm32f4xx_cryp.c ****     status = SUCCESS;
 586:FWLIB/src/stm32f4xx_cryp.c ****   }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 22


 587:FWLIB/src/stm32f4xx_cryp.c **** 
 588:FWLIB/src/stm32f4xx_cryp.c ****    return status;
 637              		.loc 1 588 4 is_stmt 1 view .LVU178
 589:FWLIB/src/stm32f4xx_cryp.c **** }
 638              		.loc 1 589 1 is_stmt 0 view .LVU179
 639 004a 03B0     		add	sp, sp, #12
 640              	.LCFI3:
 641              		.cfi_remember_state
 642              		.cfi_def_cfa_offset 4
 643              		@ sp needed
 644 004c 5DF8044B 		ldr	r4, [sp], #4
 645              	.LCFI4:
 646              		.cfi_restore 4
 647              		.cfi_def_cfa_offset 0
 648 0050 7047     		bx	lr
 649              	.LVL20:
 650              	.L38:
 651              	.LCFI5:
 652              		.cfi_restore_state
 517:FWLIB/src/stm32f4xx_cryp.c ****   }           
 653              		.loc 1 517 15 view .LVU180
 654 0052 4FF0150C 		mov	ip, #21
 655              	.LVL21:
 517:FWLIB/src/stm32f4xx_cryp.c ****   }           
 656              		.loc 1 517 15 view .LVU181
 657 0056 E2E7     		b	.L36
 658              	.LVL22:
 659              	.L41:
 537:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 660              		.loc 1 537 5 is_stmt 1 view .LVU182
 537:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 661              		.loc 1 537 17 is_stmt 0 view .LVU183
 662 0058 284B     		ldr	r3, .L42
 663 005a 1A69     		ldr	r2, [r3, #16]
 664              	.LVL23:
 537:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 665              		.loc 1 537 17 view .LVU184
 666 005c 22F00202 		bic	r2, r2, #2
 667 0060 1A61     		str	r2, [r3, #16]
 538:FWLIB/src/stm32f4xx_cryp.c **** 
 668              		.loc 1 538 5 is_stmt 1 view .LVU185
 538:FWLIB/src/stm32f4xx_cryp.c **** 
 669              		.loc 1 538 14 is_stmt 0 view .LVU186
 670 0062 1A68     		ldr	r2, [r3]
 671 0064 22F40042 		bic	r2, r2, #32768
 672 0068 1A60     		str	r2, [r3]
 541:FWLIB/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 673              		.loc 1 541 5 is_stmt 1 view .LVU187
 541:FWLIB/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 674              		.loc 1 541 47 is_stmt 0 view .LVU188
 675 006a 1A68     		ldr	r2, [r3]
 541:FWLIB/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 676              		.loc 1 541 52 view .LVU189
 677 006c 22F07F42 		bic	r2, r2, #-16777216
 678 0070 22F47402 		bic	r2, r2, #15990784
 679 0074 22F47C42 		bic	r2, r2, #64512
 680 0078 22F00302 		bic	r2, r2, #3
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 23


 541:FWLIB/src/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 681              		.loc 1 541 41 view .LVU190
 682 007c 0260     		str	r2, [r0]
 548:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 683              		.loc 1 548 5 is_stmt 1 view .LVU191
 548:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 684              		.loc 1 548 40 is_stmt 0 view .LVU192
 685 007e 1A6C     		ldr	r2, [r3, #64]
 548:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 686              		.loc 1 548 34 view .LVU193
 687 0080 4260     		str	r2, [r0, #4]
 549:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 688              		.loc 1 549 5 is_stmt 1 view .LVU194
 549:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 689              		.loc 1 549 40 is_stmt 0 view .LVU195
 690 0082 5A6C     		ldr	r2, [r3, #68]
 549:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 691              		.loc 1 549 34 view .LVU196
 692 0084 8260     		str	r2, [r0, #8]
 550:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 693              		.loc 1 550 5 is_stmt 1 view .LVU197
 550:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 694              		.loc 1 550 40 is_stmt 0 view .LVU198
 695 0086 9A6C     		ldr	r2, [r3, #72]
 550:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 696              		.loc 1 550 34 view .LVU199
 697 0088 C260     		str	r2, [r0, #12]
 551:FWLIB/src/stm32f4xx_cryp.c **** 
 698              		.loc 1 551 5 is_stmt 1 view .LVU200
 551:FWLIB/src/stm32f4xx_cryp.c **** 
 699              		.loc 1 551 40 is_stmt 0 view .LVU201
 700 008a DA6C     		ldr	r2, [r3, #76]
 551:FWLIB/src/stm32f4xx_cryp.c **** 
 701              		.loc 1 551 34 view .LVU202
 702 008c 0261     		str	r2, [r0, #16]
 554:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 703              		.loc 1 554 5 is_stmt 1 view .LVU203
 554:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 704              		.loc 1 554 53 is_stmt 0 view .LVU204
 705 008e 0A68     		ldr	r2, [r1]
 554:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 706              		.loc 1 554 33 view .LVU205
 707 0090 4261     		str	r2, [r0, #20]
 555:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 708              		.loc 1 555 5 is_stmt 1 view .LVU206
 555:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 709              		.loc 1 555 53 is_stmt 0 view .LVU207
 710 0092 4A68     		ldr	r2, [r1, #4]
 555:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 711              		.loc 1 555 33 view .LVU208
 712 0094 8261     		str	r2, [r0, #24]
 556:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 713              		.loc 1 556 5 is_stmt 1 view .LVU209
 556:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 714              		.loc 1 556 53 is_stmt 0 view .LVU210
 715 0096 8A68     		ldr	r2, [r1, #8]
 556:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 24


 716              		.loc 1 556 33 view .LVU211
 717 0098 C261     		str	r2, [r0, #28]
 557:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 718              		.loc 1 557 5 is_stmt 1 view .LVU212
 557:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 719              		.loc 1 557 53 is_stmt 0 view .LVU213
 720 009a CA68     		ldr	r2, [r1, #12]
 557:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 721              		.loc 1 557 33 view .LVU214
 722 009c 0262     		str	r2, [r0, #32]
 558:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 723              		.loc 1 558 5 is_stmt 1 view .LVU215
 558:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 724              		.loc 1 558 53 is_stmt 0 view .LVU216
 725 009e 0A69     		ldr	r2, [r1, #16]
 558:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 726              		.loc 1 558 33 view .LVU217
 727 00a0 4262     		str	r2, [r0, #36]
 559:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 728              		.loc 1 559 5 is_stmt 1 view .LVU218
 559:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 729              		.loc 1 559 53 is_stmt 0 view .LVU219
 730 00a2 4A69     		ldr	r2, [r1, #20]
 559:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 731              		.loc 1 559 33 view .LVU220
 732 00a4 8262     		str	r2, [r0, #40]
 560:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 733              		.loc 1 560 5 is_stmt 1 view .LVU221
 560:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 734              		.loc 1 560 53 is_stmt 0 view .LVU222
 735 00a6 8A69     		ldr	r2, [r1, #24]
 560:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 736              		.loc 1 560 33 view .LVU223
 737 00a8 C262     		str	r2, [r0, #44]
 561:FWLIB/src/stm32f4xx_cryp.c **** 
 738              		.loc 1 561 5 is_stmt 1 view .LVU224
 561:FWLIB/src/stm32f4xx_cryp.c **** 
 739              		.loc 1 561 53 is_stmt 0 view .LVU225
 740 00aa CA69     		ldr	r2, [r1, #28]
 561:FWLIB/src/stm32f4xx_cryp.c **** 
 741              		.loc 1 561 33 view .LVU226
 742 00ac 0263     		str	r2, [r0, #48]
 564:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[1] = CRYP->CSGCMCCM1R;
 743              		.loc 1 564 5 is_stmt 1 view .LVU227
 564:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[1] = CRYP->CSGCMCCM1R;
 744              		.loc 1 564 47 is_stmt 0 view .LVU228
 745 00ae 1A6D     		ldr	r2, [r3, #80]
 564:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[1] = CRYP->CSGCMCCM1R;
 746              		.loc 1 564 41 view .LVU229
 747 00b0 4263     		str	r2, [r0, #52]
 565:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[2] = CRYP->CSGCMCCM2R;
 748              		.loc 1 565 5 is_stmt 1 view .LVU230
 565:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[2] = CRYP->CSGCMCCM2R;
 749              		.loc 1 565 47 is_stmt 0 view .LVU231
 750 00b2 5A6D     		ldr	r2, [r3, #84]
 565:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[2] = CRYP->CSGCMCCM2R;
 751              		.loc 1 565 41 view .LVU232
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 25


 752 00b4 8263     		str	r2, [r0, #56]
 566:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[3] = CRYP->CSGCMCCM3R;
 753              		.loc 1 566 5 is_stmt 1 view .LVU233
 566:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[3] = CRYP->CSGCMCCM3R;
 754              		.loc 1 566 47 is_stmt 0 view .LVU234
 755 00b6 9A6D     		ldr	r2, [r3, #88]
 566:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[3] = CRYP->CSGCMCCM3R;
 756              		.loc 1 566 41 view .LVU235
 757 00b8 C263     		str	r2, [r0, #60]
 567:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[4] = CRYP->CSGCMCCM4R;
 758              		.loc 1 567 5 is_stmt 1 view .LVU236
 567:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[4] = CRYP->CSGCMCCM4R;
 759              		.loc 1 567 47 is_stmt 0 view .LVU237
 760 00ba DA6D     		ldr	r2, [r3, #92]
 567:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[4] = CRYP->CSGCMCCM4R;
 761              		.loc 1 567 41 view .LVU238
 762 00bc 0264     		str	r2, [r0, #64]
 568:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[5] = CRYP->CSGCMCCM5R;
 763              		.loc 1 568 5 is_stmt 1 view .LVU239
 568:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[5] = CRYP->CSGCMCCM5R;
 764              		.loc 1 568 47 is_stmt 0 view .LVU240
 765 00be 1A6E     		ldr	r2, [r3, #96]
 568:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[5] = CRYP->CSGCMCCM5R;
 766              		.loc 1 568 41 view .LVU241
 767 00c0 4264     		str	r2, [r0, #68]
 569:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[6] = CRYP->CSGCMCCM6R;
 768              		.loc 1 569 5 is_stmt 1 view .LVU242
 569:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[6] = CRYP->CSGCMCCM6R;
 769              		.loc 1 569 47 is_stmt 0 view .LVU243
 770 00c2 5A6E     		ldr	r2, [r3, #100]
 569:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[6] = CRYP->CSGCMCCM6R;
 771              		.loc 1 569 41 view .LVU244
 772 00c4 8264     		str	r2, [r0, #72]
 570:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[7] = CRYP->CSGCMCCM7R;
 773              		.loc 1 570 5 is_stmt 1 view .LVU245
 570:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[7] = CRYP->CSGCMCCM7R;
 774              		.loc 1 570 47 is_stmt 0 view .LVU246
 775 00c6 9A6E     		ldr	r2, [r3, #104]
 570:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[7] = CRYP->CSGCMCCM7R;
 776              		.loc 1 570 41 view .LVU247
 777 00c8 C264     		str	r2, [r0, #76]
 571:FWLIB/src/stm32f4xx_cryp.c ****     
 778              		.loc 1 571 5 is_stmt 1 view .LVU248
 571:FWLIB/src/stm32f4xx_cryp.c ****     
 779              		.loc 1 571 47 is_stmt 0 view .LVU249
 780 00ca DA6E     		ldr	r2, [r3, #108]
 571:FWLIB/src/stm32f4xx_cryp.c ****     
 781              		.loc 1 571 41 view .LVU250
 782 00cc 0265     		str	r2, [r0, #80]
 573:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[1] = CRYP->CSGCM1R;
 783              		.loc 1 573 5 is_stmt 1 view .LVU251
 573:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[1] = CRYP->CSGCM1R;
 784              		.loc 1 573 44 is_stmt 0 view .LVU252
 785 00ce 1A6F     		ldr	r2, [r3, #112]
 573:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[1] = CRYP->CSGCM1R;
 786              		.loc 1 573 38 view .LVU253
 787 00d0 4265     		str	r2, [r0, #84]
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 26


 574:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[2] = CRYP->CSGCM2R;
 788              		.loc 1 574 5 is_stmt 1 view .LVU254
 574:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[2] = CRYP->CSGCM2R;
 789              		.loc 1 574 44 is_stmt 0 view .LVU255
 790 00d2 5A6F     		ldr	r2, [r3, #116]
 574:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[2] = CRYP->CSGCM2R;
 791              		.loc 1 574 38 view .LVU256
 792 00d4 8265     		str	r2, [r0, #88]
 575:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[3] = CRYP->CSGCM3R;
 793              		.loc 1 575 5 is_stmt 1 view .LVU257
 575:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[3] = CRYP->CSGCM3R;
 794              		.loc 1 575 44 is_stmt 0 view .LVU258
 795 00d6 9A6F     		ldr	r2, [r3, #120]
 575:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[3] = CRYP->CSGCM3R;
 796              		.loc 1 575 38 view .LVU259
 797 00d8 C265     		str	r2, [r0, #92]
 576:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[4] = CRYP->CSGCM4R;
 798              		.loc 1 576 5 is_stmt 1 view .LVU260
 576:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[4] = CRYP->CSGCM4R;
 799              		.loc 1 576 44 is_stmt 0 view .LVU261
 800 00da DA6F     		ldr	r2, [r3, #124]
 576:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[4] = CRYP->CSGCM4R;
 801              		.loc 1 576 38 view .LVU262
 802 00dc 0266     		str	r2, [r0, #96]
 577:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[5] = CRYP->CSGCM5R;
 803              		.loc 1 577 5 is_stmt 1 view .LVU263
 577:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[5] = CRYP->CSGCM5R;
 804              		.loc 1 577 44 is_stmt 0 view .LVU264
 805 00de D3F88020 		ldr	r2, [r3, #128]
 577:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[5] = CRYP->CSGCM5R;
 806              		.loc 1 577 38 view .LVU265
 807 00e2 4266     		str	r2, [r0, #100]
 578:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[6] = CRYP->CSGCM6R;
 808              		.loc 1 578 5 is_stmt 1 view .LVU266
 578:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[6] = CRYP->CSGCM6R;
 809              		.loc 1 578 44 is_stmt 0 view .LVU267
 810 00e4 D3F88420 		ldr	r2, [r3, #132]
 578:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[6] = CRYP->CSGCM6R;
 811              		.loc 1 578 38 view .LVU268
 812 00e8 8266     		str	r2, [r0, #104]
 579:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[7] = CRYP->CSGCM7R;
 813              		.loc 1 579 5 is_stmt 1 view .LVU269
 579:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[7] = CRYP->CSGCM7R;
 814              		.loc 1 579 44 is_stmt 0 view .LVU270
 815 00ea D3F88820 		ldr	r2, [r3, #136]
 579:FWLIB/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[7] = CRYP->CSGCM7R;
 816              		.loc 1 579 38 view .LVU271
 817 00ee C266     		str	r2, [r0, #108]
 580:FWLIB/src/stm32f4xx_cryp.c ****     
 818              		.loc 1 580 5 is_stmt 1 view .LVU272
 580:FWLIB/src/stm32f4xx_cryp.c ****     
 819              		.loc 1 580 44 is_stmt 0 view .LVU273
 820 00f0 D3F88C30 		ldr	r3, [r3, #140]
 580:FWLIB/src/stm32f4xx_cryp.c ****     
 821              		.loc 1 580 38 view .LVU274
 822 00f4 0367     		str	r3, [r0, #112]
 585:FWLIB/src/stm32f4xx_cryp.c ****   }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 27


 823              		.loc 1 585 5 is_stmt 1 view .LVU275
 824              	.LVL24:
 585:FWLIB/src/stm32f4xx_cryp.c ****   }
 825              		.loc 1 585 12 is_stmt 0 view .LVU276
 826 00f6 0120     		movs	r0, #1
 827              	.LVL25:
 585:FWLIB/src/stm32f4xx_cryp.c ****   }
 828              		.loc 1 585 12 view .LVU277
 829 00f8 A7E7     		b	.L37
 830              	.L43:
 831 00fa 00BF     		.align	2
 832              	.L42:
 833 00fc 00000650 		.word	1342570496
 834              		.cfi_endproc
 835              	.LFE135:
 837              		.section	.text.CRYP_RestoreContext,"ax",%progbits
 838              		.align	1
 839              		.global	CRYP_RestoreContext
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 843              		.fpu fpv4-sp-d16
 845              	CRYP_RestoreContext:
 846              	.LVL26:
 847              	.LFB136:
 590:FWLIB/src/stm32f4xx_cryp.c **** 
 591:FWLIB/src/stm32f4xx_cryp.c **** /**
 592:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Restores the CRYP peripheral Context.
 593:FWLIB/src/stm32f4xx_cryp.c ****   * @note   Since the DMA transfer is stopped in CRYP_SaveContext() function,
 594:FWLIB/src/stm32f4xx_cryp.c ****   *         after restoring the context, you have to enable the DMA again (if the
 595:FWLIB/src/stm32f4xx_cryp.c ****   *         DMA was previously used).  
 596:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextRestore: pointer to a CRYP_Context structure that contains
 597:FWLIB/src/stm32f4xx_cryp.c ****   *         the repository for saved context.
 598:FWLIB/src/stm32f4xx_cryp.c ****   * @note   The data that were saved during context saving must be rewritten into
 599:FWLIB/src/stm32f4xx_cryp.c ****   *         the IN FIFO.
 600:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 601:FWLIB/src/stm32f4xx_cryp.c ****   */
 602:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_RestoreContext(CRYP_Context* CRYP_ContextRestore)  
 603:FWLIB/src/stm32f4xx_cryp.c **** {
 848              		.loc 1 603 1 is_stmt 1 view -0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              		@ link register save eliminated.
 604:FWLIB/src/stm32f4xx_cryp.c **** 
 605:FWLIB/src/stm32f4xx_cryp.c ****   /* Configure the processor with the saved configuration */
 606:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CR = CRYP_ContextRestore->CR_CurrentConfig;
 853              		.loc 1 606 3 view .LVU279
 854              		.loc 1 606 33 is_stmt 0 view .LVU280
 855 0000 0268     		ldr	r2, [r0]
 856              		.loc 1 606 12 view .LVU281
 857 0002 214B     		ldr	r3, .L45
 858 0004 1A60     		str	r2, [r3]
 607:FWLIB/src/stm32f4xx_cryp.c **** 
 608:FWLIB/src/stm32f4xx_cryp.c ****   /* restore The key value */
 609:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_ContextRestore->CRYP_K0LR; 
 859              		.loc 1 609 3 is_stmt 1 view .LVU282
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 28


 860              		.loc 1 609 35 is_stmt 0 view .LVU283
 861 0006 4269     		ldr	r2, [r0, #20]
 862              		.loc 1 609 14 view .LVU284
 863 0008 1A62     		str	r2, [r3, #32]
 610:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_ContextRestore->CRYP_K0RR;
 864              		.loc 1 610 3 is_stmt 1 view .LVU285
 865              		.loc 1 610 35 is_stmt 0 view .LVU286
 866 000a 8269     		ldr	r2, [r0, #24]
 867              		.loc 1 610 14 view .LVU287
 868 000c 5A62     		str	r2, [r3, #36]
 611:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_ContextRestore->CRYP_K1LR;
 869              		.loc 1 611 3 is_stmt 1 view .LVU288
 870              		.loc 1 611 35 is_stmt 0 view .LVU289
 871 000e C269     		ldr	r2, [r0, #28]
 872              		.loc 1 611 14 view .LVU290
 873 0010 9A62     		str	r2, [r3, #40]
 612:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_ContextRestore->CRYP_K1RR;
 874              		.loc 1 612 3 is_stmt 1 view .LVU291
 875              		.loc 1 612 35 is_stmt 0 view .LVU292
 876 0012 026A     		ldr	r2, [r0, #32]
 877              		.loc 1 612 14 view .LVU293
 878 0014 DA62     		str	r2, [r3, #44]
 613:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_ContextRestore->CRYP_K2LR;
 879              		.loc 1 613 3 is_stmt 1 view .LVU294
 880              		.loc 1 613 35 is_stmt 0 view .LVU295
 881 0016 426A     		ldr	r2, [r0, #36]
 882              		.loc 1 613 14 view .LVU296
 883 0018 1A63     		str	r2, [r3, #48]
 614:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_ContextRestore->CRYP_K2RR;
 884              		.loc 1 614 3 is_stmt 1 view .LVU297
 885              		.loc 1 614 35 is_stmt 0 view .LVU298
 886 001a 826A     		ldr	r2, [r0, #40]
 887              		.loc 1 614 14 view .LVU299
 888 001c 5A63     		str	r2, [r3, #52]
 615:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_ContextRestore->CRYP_K3LR;
 889              		.loc 1 615 3 is_stmt 1 view .LVU300
 890              		.loc 1 615 35 is_stmt 0 view .LVU301
 891 001e C26A     		ldr	r2, [r0, #44]
 892              		.loc 1 615 14 view .LVU302
 893 0020 9A63     		str	r2, [r3, #56]
 616:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_ContextRestore->CRYP_K3RR;
 894              		.loc 1 616 3 is_stmt 1 view .LVU303
 895              		.loc 1 616 35 is_stmt 0 view .LVU304
 896 0022 026B     		ldr	r2, [r0, #48]
 897              		.loc 1 616 14 view .LVU305
 898 0024 DA63     		str	r2, [r3, #60]
 617:FWLIB/src/stm32f4xx_cryp.c **** 
 618:FWLIB/src/stm32f4xx_cryp.c ****   /* and the initialization vectors. */
 619:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_ContextRestore->CRYP_IV0LR;
 899              		.loc 1 619 3 is_stmt 1 view .LVU306
 900              		.loc 1 619 36 is_stmt 0 view .LVU307
 901 0026 4268     		ldr	r2, [r0, #4]
 902              		.loc 1 619 15 view .LVU308
 903 0028 1A64     		str	r2, [r3, #64]
 620:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_ContextRestore->CRYP_IV0RR;
 904              		.loc 1 620 3 is_stmt 1 view .LVU309
 905              		.loc 1 620 36 is_stmt 0 view .LVU310
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 29


 906 002a 8268     		ldr	r2, [r0, #8]
 907              		.loc 1 620 15 view .LVU311
 908 002c 5A64     		str	r2, [r3, #68]
 621:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_ContextRestore->CRYP_IV1LR;
 909              		.loc 1 621 3 is_stmt 1 view .LVU312
 910              		.loc 1 621 36 is_stmt 0 view .LVU313
 911 002e C268     		ldr	r2, [r0, #12]
 912              		.loc 1 621 15 view .LVU314
 913 0030 9A64     		str	r2, [r3, #72]
 622:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_ContextRestore->CRYP_IV1RR;
 914              		.loc 1 622 3 is_stmt 1 view .LVU315
 915              		.loc 1 622 36 is_stmt 0 view .LVU316
 916 0032 0269     		ldr	r2, [r0, #16]
 917              		.loc 1 622 15 view .LVU317
 918 0034 DA64     		str	r2, [r3, #76]
 623:FWLIB/src/stm32f4xx_cryp.c **** 
 624:FWLIB/src/stm32f4xx_cryp.c ****   /* Restore the content of context swap registers */
 625:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM0R = CRYP_ContextRestore->CRYP_CSGCMCCMR[0];
 919              		.loc 1 625 3 is_stmt 1 view .LVU318
 920              		.loc 1 625 57 is_stmt 0 view .LVU319
 921 0036 426B     		ldr	r2, [r0, #52]
 922              		.loc 1 625 20 view .LVU320
 923 0038 1A65     		str	r2, [r3, #80]
 626:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM1R = CRYP_ContextRestore->CRYP_CSGCMCCMR[1];
 924              		.loc 1 626 3 is_stmt 1 view .LVU321
 925              		.loc 1 626 57 is_stmt 0 view .LVU322
 926 003a 826B     		ldr	r2, [r0, #56]
 927              		.loc 1 626 20 view .LVU323
 928 003c 5A65     		str	r2, [r3, #84]
 627:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM2R = CRYP_ContextRestore->CRYP_CSGCMCCMR[2];
 929              		.loc 1 627 3 is_stmt 1 view .LVU324
 930              		.loc 1 627 57 is_stmt 0 view .LVU325
 931 003e C26B     		ldr	r2, [r0, #60]
 932              		.loc 1 627 20 view .LVU326
 933 0040 9A65     		str	r2, [r3, #88]
 628:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM3R = CRYP_ContextRestore->CRYP_CSGCMCCMR[3];
 934              		.loc 1 628 3 is_stmt 1 view .LVU327
 935              		.loc 1 628 57 is_stmt 0 view .LVU328
 936 0042 026C     		ldr	r2, [r0, #64]
 937              		.loc 1 628 20 view .LVU329
 938 0044 DA65     		str	r2, [r3, #92]
 629:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM4R = CRYP_ContextRestore->CRYP_CSGCMCCMR[4];
 939              		.loc 1 629 3 is_stmt 1 view .LVU330
 940              		.loc 1 629 57 is_stmt 0 view .LVU331
 941 0046 426C     		ldr	r2, [r0, #68]
 942              		.loc 1 629 20 view .LVU332
 943 0048 1A66     		str	r2, [r3, #96]
 630:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM5R = CRYP_ContextRestore->CRYP_CSGCMCCMR[5];
 944              		.loc 1 630 3 is_stmt 1 view .LVU333
 945              		.loc 1 630 57 is_stmt 0 view .LVU334
 946 004a 826C     		ldr	r2, [r0, #72]
 947              		.loc 1 630 20 view .LVU335
 948 004c 5A66     		str	r2, [r3, #100]
 631:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM6R = CRYP_ContextRestore->CRYP_CSGCMCCMR[6];
 949              		.loc 1 631 3 is_stmt 1 view .LVU336
 950              		.loc 1 631 57 is_stmt 0 view .LVU337
 951 004e C26C     		ldr	r2, [r0, #76]
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 30


 952              		.loc 1 631 20 view .LVU338
 953 0050 9A66     		str	r2, [r3, #104]
 632:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM7R = CRYP_ContextRestore->CRYP_CSGCMCCMR[7];
 954              		.loc 1 632 3 is_stmt 1 view .LVU339
 955              		.loc 1 632 57 is_stmt 0 view .LVU340
 956 0052 026D     		ldr	r2, [r0, #80]
 957              		.loc 1 632 20 view .LVU341
 958 0054 DA66     		str	r2, [r3, #108]
 633:FWLIB/src/stm32f4xx_cryp.c ****   
 634:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCM0R = CRYP_ContextRestore->CRYP_CSGCMR[0];
 959              		.loc 1 634 3 is_stmt 1 view .LVU342
 960              		.loc 1 634 51 is_stmt 0 view .LVU343
 961 0056 426D     		ldr	r2, [r0, #84]
 962              		.loc 1 634 17 view .LVU344
 963 0058 1A67     		str	r2, [r3, #112]
 635:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCM1R = CRYP_ContextRestore->CRYP_CSGCMR[1];
 964              		.loc 1 635 3 is_stmt 1 view .LVU345
 965              		.loc 1 635 51 is_stmt 0 view .LVU346
 966 005a 826D     		ldr	r2, [r0, #88]
 967              		.loc 1 635 17 view .LVU347
 968 005c 5A67     		str	r2, [r3, #116]
 636:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCM2R = CRYP_ContextRestore->CRYP_CSGCMR[2];
 969              		.loc 1 636 3 is_stmt 1 view .LVU348
 970              		.loc 1 636 51 is_stmt 0 view .LVU349
 971 005e C26D     		ldr	r2, [r0, #92]
 972              		.loc 1 636 17 view .LVU350
 973 0060 9A67     		str	r2, [r3, #120]
 637:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCM3R = CRYP_ContextRestore->CRYP_CSGCMR[3];
 974              		.loc 1 637 3 is_stmt 1 view .LVU351
 975              		.loc 1 637 51 is_stmt 0 view .LVU352
 976 0062 026E     		ldr	r2, [r0, #96]
 977              		.loc 1 637 17 view .LVU353
 978 0064 DA67     		str	r2, [r3, #124]
 638:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCM4R = CRYP_ContextRestore->CRYP_CSGCMR[4];
 979              		.loc 1 638 3 is_stmt 1 view .LVU354
 980              		.loc 1 638 51 is_stmt 0 view .LVU355
 981 0066 426E     		ldr	r2, [r0, #100]
 982              		.loc 1 638 17 view .LVU356
 983 0068 C3F88020 		str	r2, [r3, #128]
 639:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCM5R = CRYP_ContextRestore->CRYP_CSGCMR[5];
 984              		.loc 1 639 3 is_stmt 1 view .LVU357
 985              		.loc 1 639 51 is_stmt 0 view .LVU358
 986 006c 826E     		ldr	r2, [r0, #104]
 987              		.loc 1 639 17 view .LVU359
 988 006e C3F88420 		str	r2, [r3, #132]
 640:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCM6R = CRYP_ContextRestore->CRYP_CSGCMR[6];
 989              		.loc 1 640 3 is_stmt 1 view .LVU360
 990              		.loc 1 640 51 is_stmt 0 view .LVU361
 991 0072 C26E     		ldr	r2, [r0, #108]
 992              		.loc 1 640 17 view .LVU362
 993 0074 C3F88820 		str	r2, [r3, #136]
 641:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CSGCM7R = CRYP_ContextRestore->CRYP_CSGCMR[7];
 994              		.loc 1 641 3 is_stmt 1 view .LVU363
 995              		.loc 1 641 51 is_stmt 0 view .LVU364
 996 0078 026F     		ldr	r2, [r0, #112]
 997              		.loc 1 641 17 view .LVU365
 998 007a C3F88C20 		str	r2, [r3, #140]
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 31


 642:FWLIB/src/stm32f4xx_cryp.c ****   
 643:FWLIB/src/stm32f4xx_cryp.c ****   /* Enable the cryptographic processor */
 644:FWLIB/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_CRYPEN;
 999              		.loc 1 644 3 is_stmt 1 view .LVU366
 1000              		.loc 1 644 12 is_stmt 0 view .LVU367
 1001 007e 1A68     		ldr	r2, [r3]
 1002 0080 42F40042 		orr	r2, r2, #32768
 1003 0084 1A60     		str	r2, [r3]
 645:FWLIB/src/stm32f4xx_cryp.c **** }
 1004              		.loc 1 645 1 view .LVU368
 1005 0086 7047     		bx	lr
 1006              	.L46:
 1007              		.align	2
 1008              	.L45:
 1009 0088 00000650 		.word	1342570496
 1010              		.cfi_endproc
 1011              	.LFE136:
 1013              		.section	.text.CRYP_DMACmd,"ax",%progbits
 1014              		.align	1
 1015              		.global	CRYP_DMACmd
 1016              		.syntax unified
 1017              		.thumb
 1018              		.thumb_func
 1019              		.fpu fpv4-sp-d16
 1021              	CRYP_DMACmd:
 1022              	.LVL27:
 1023              	.LFB137:
 646:FWLIB/src/stm32f4xx_cryp.c **** /**
 647:FWLIB/src/stm32f4xx_cryp.c ****   * @}
 648:FWLIB/src/stm32f4xx_cryp.c ****   */
 649:FWLIB/src/stm32f4xx_cryp.c **** 
 650:FWLIB/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group4 CRYP's DMA interface Configuration function
 651:FWLIB/src/stm32f4xx_cryp.c ****  *  @brief   CRYP's DMA interface Configuration function 
 652:FWLIB/src/stm32f4xx_cryp.c ****  *
 653:FWLIB/src/stm32f4xx_cryp.c **** @verbatim   
 654:FWLIB/src/stm32f4xx_cryp.c ****  ===============================================================================
 655:FWLIB/src/stm32f4xx_cryp.c ****              ##### CRYP's DMA interface Configuration function #####
 656:FWLIB/src/stm32f4xx_cryp.c ****  ===============================================================================  
 657:FWLIB/src/stm32f4xx_cryp.c ****  [..] This section provides functions allowing to configure the DMA interface for 
 658:FWLIB/src/stm32f4xx_cryp.c ****       CRYP data input and output transfer.
 659:FWLIB/src/stm32f4xx_cryp.c ****    
 660:FWLIB/src/stm32f4xx_cryp.c ****  [..] When the DMA mode is enabled (using the CRYP_DMACmd() function), data can be 
 661:FWLIB/src/stm32f4xx_cryp.c ****       transferred:
 662:FWLIB/src/stm32f4xx_cryp.c ****    (+) From memory to the CRYP IN FIFO using the DMA peripheral by enabling 
 663:FWLIB/src/stm32f4xx_cryp.c ****        the CRYP_DMAReq_DataIN request.
 664:FWLIB/src/stm32f4xx_cryp.c ****    (+) From the CRYP OUT FIFO to the memory using the DMA peripheral by enabling 
 665:FWLIB/src/stm32f4xx_cryp.c ****        the CRYP_DMAReq_DataOUT request.
 666:FWLIB/src/stm32f4xx_cryp.c **** 
 667:FWLIB/src/stm32f4xx_cryp.c **** @endverbatim
 668:FWLIB/src/stm32f4xx_cryp.c ****   * @{
 669:FWLIB/src/stm32f4xx_cryp.c ****   */
 670:FWLIB/src/stm32f4xx_cryp.c **** 
 671:FWLIB/src/stm32f4xx_cryp.c **** /**
 672:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP DMA interface.
 673:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_DMAReq: specifies the CRYP DMA transfer request to be enabled or disabled.
 674:FWLIB/src/stm32f4xx_cryp.c ****   *           This parameter can be any combination of the following values:
 675:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataOUT: DMA for outgoing(Tx) data transfer
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 32


 676:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataIN: DMA for incoming(Rx) data transfer
 677:FWLIB/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the selected CRYP DMA transfer request.
 678:FWLIB/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 679:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 680:FWLIB/src/stm32f4xx_cryp.c ****   */
 681:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_DMACmd(uint8_t CRYP_DMAReq, FunctionalState NewState)
 682:FWLIB/src/stm32f4xx_cryp.c **** {
 1024              		.loc 1 682 1 is_stmt 1 view -0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              		@ link register save eliminated.
 683:FWLIB/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 684:FWLIB/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DMAREQ(CRYP_DMAReq));
 1029              		.loc 1 684 3 view .LVU370
 685:FWLIB/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1030              		.loc 1 685 3 view .LVU371
 686:FWLIB/src/stm32f4xx_cryp.c **** 
 687:FWLIB/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 1031              		.loc 1 687 3 view .LVU372
 1032              		.loc 1 687 6 is_stmt 0 view .LVU373
 1033 0000 21B1     		cbz	r1, .L48
 688:FWLIB/src/stm32f4xx_cryp.c ****   {
 689:FWLIB/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP DMA request */
 690:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->DMACR |= CRYP_DMAReq;
 1034              		.loc 1 690 5 is_stmt 1 view .LVU374
 1035              		.loc 1 690 17 is_stmt 0 view .LVU375
 1036 0002 064B     		ldr	r3, .L50
 1037 0004 1A69     		ldr	r2, [r3, #16]
 1038 0006 1043     		orrs	r0, r0, r2
 1039              	.LVL28:
 1040              		.loc 1 690 17 view .LVU376
 1041 0008 1861     		str	r0, [r3, #16]
 1042 000a 7047     		bx	lr
 1043              	.LVL29:
 1044              	.L48:
 691:FWLIB/src/stm32f4xx_cryp.c ****   }
 692:FWLIB/src/stm32f4xx_cryp.c ****   else
 693:FWLIB/src/stm32f4xx_cryp.c ****   {
 694:FWLIB/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP DMA request */
 695:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= (uint8_t)~CRYP_DMAReq;
 1045              		.loc 1 695 5 is_stmt 1 view .LVU377
 1046              		.loc 1 695 17 is_stmt 0 view .LVU378
 1047 000c 034A     		ldr	r2, .L50
 1048 000e 1369     		ldr	r3, [r2, #16]
 1049              		.loc 1 695 20 view .LVU379
 1050 0010 C043     		mvns	r0, r0
 1051              	.LVL30:
 1052              		.loc 1 695 20 view .LVU380
 1053 0012 C0B2     		uxtb	r0, r0
 1054              		.loc 1 695 17 view .LVU381
 1055 0014 1840     		ands	r0, r0, r3
 1056 0016 1061     		str	r0, [r2, #16]
 696:FWLIB/src/stm32f4xx_cryp.c ****   }
 697:FWLIB/src/stm32f4xx_cryp.c **** }
 1057              		.loc 1 697 1 view .LVU382
 1058 0018 7047     		bx	lr
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 33


 1059              	.L51:
 1060 001a 00BF     		.align	2
 1061              	.L50:
 1062 001c 00000650 		.word	1342570496
 1063              		.cfi_endproc
 1064              	.LFE137:
 1066              		.section	.text.CRYP_ITConfig,"ax",%progbits
 1067              		.align	1
 1068              		.global	CRYP_ITConfig
 1069              		.syntax unified
 1070              		.thumb
 1071              		.thumb_func
 1072              		.fpu fpv4-sp-d16
 1074              	CRYP_ITConfig:
 1075              	.LVL31:
 1076              	.LFB138:
 698:FWLIB/src/stm32f4xx_cryp.c **** /**
 699:FWLIB/src/stm32f4xx_cryp.c ****   * @}
 700:FWLIB/src/stm32f4xx_cryp.c ****   */
 701:FWLIB/src/stm32f4xx_cryp.c **** 
 702:FWLIB/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group5 Interrupts and flags management functions
 703:FWLIB/src/stm32f4xx_cryp.c ****  *  @brief   Interrupts and flags management functions
 704:FWLIB/src/stm32f4xx_cryp.c ****  *
 705:FWLIB/src/stm32f4xx_cryp.c **** @verbatim   
 706:FWLIB/src/stm32f4xx_cryp.c ****  ===============================================================================
 707:FWLIB/src/stm32f4xx_cryp.c ****               ##### Interrupts and flags management functions #####
 708:FWLIB/src/stm32f4xx_cryp.c ****  ===============================================================================  
 709:FWLIB/src/stm32f4xx_cryp.c ****  
 710:FWLIB/src/stm32f4xx_cryp.c ****  [..] This section provides functions allowing to configure the CRYP Interrupts and 
 711:FWLIB/src/stm32f4xx_cryp.c ****       to get the status and Interrupts pending bits.
 712:FWLIB/src/stm32f4xx_cryp.c **** 
 713:FWLIB/src/stm32f4xx_cryp.c ****  [..] The CRYP provides 2 Interrupts sources and 7 Flags:
 714:FWLIB/src/stm32f4xx_cryp.c **** 
 715:FWLIB/src/stm32f4xx_cryp.c ****  *** Flags : ***
 716:FWLIB/src/stm32f4xx_cryp.c ****  ===============
 717:FWLIB/src/stm32f4xx_cryp.c ****  [..] 
 718:FWLIB/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_IFEM :  Set when Input FIFO is empty. This Flag is cleared only
 719:FWLIB/src/stm32f4xx_cryp.c ****        by hardware.
 720:FWLIB/src/stm32f4xx_cryp.c ****       
 721:FWLIB/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_IFNF :  Set when Input FIFO is not full. This Flag is cleared 
 722:FWLIB/src/stm32f4xx_cryp.c ****        only by hardware.
 723:FWLIB/src/stm32f4xx_cryp.c **** 
 724:FWLIB/src/stm32f4xx_cryp.c **** 
 725:FWLIB/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_INRIS  : Set when Input FIFO Raw interrupt is pending it gives 
 726:FWLIB/src/stm32f4xx_cryp.c ****        the raw interrupt state prior to masking of the input FIFO service interrupt.
 727:FWLIB/src/stm32f4xx_cryp.c ****        This Flag is cleared only by hardware.
 728:FWLIB/src/stm32f4xx_cryp.c ****      
 729:FWLIB/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_OFNE   : Set when Output FIFO not empty. This Flag is cleared 
 730:FWLIB/src/stm32f4xx_cryp.c ****        only by hardware.
 731:FWLIB/src/stm32f4xx_cryp.c ****         
 732:FWLIB/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_OFFU   : Set when Output FIFO is full. This Flag is cleared only 
 733:FWLIB/src/stm32f4xx_cryp.c ****        by hardware.
 734:FWLIB/src/stm32f4xx_cryp.c ****                            
 735:FWLIB/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_OUTRIS : Set when Output FIFO Raw interrupt is pending it gives 
 736:FWLIB/src/stm32f4xx_cryp.c ****        the raw interrupt state prior to masking of the output FIFO service interrupt.
 737:FWLIB/src/stm32f4xx_cryp.c ****        This Flag is cleared only by hardware.
 738:FWLIB/src/stm32f4xx_cryp.c ****                                
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 34


 739:FWLIB/src/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_BUSY   : Set when the CRYP core is currently processing a block 
 740:FWLIB/src/stm32f4xx_cryp.c ****        of data or a key preparation (for AES decryption). This Flag is cleared 
 741:FWLIB/src/stm32f4xx_cryp.c ****        only by hardware. To clear it, the CRYP core must be disabled and the last
 742:FWLIB/src/stm32f4xx_cryp.c ****        processing has completed. 
 743:FWLIB/src/stm32f4xx_cryp.c **** 
 744:FWLIB/src/stm32f4xx_cryp.c ****  *** Interrupts : ***
 745:FWLIB/src/stm32f4xx_cryp.c ****  ====================
 746:FWLIB/src/stm32f4xx_cryp.c ****  [..]
 747:FWLIB/src/stm32f4xx_cryp.c ****    (#) CRYP_IT_INI   : The input FIFO service interrupt is asserted when there 
 748:FWLIB/src/stm32f4xx_cryp.c ****       are less than 4 words in the input FIFO. This interrupt is associated to 
 749:FWLIB/src/stm32f4xx_cryp.c ****       CRYP_FLAG_INRIS flag.
 750:FWLIB/src/stm32f4xx_cryp.c **** 
 751:FWLIB/src/stm32f4xx_cryp.c ****       -@- This interrupt is cleared by performing write operations to the input FIFO 
 752:FWLIB/src/stm32f4xx_cryp.c ****           until it holds 4 or more words. The input FIFO service interrupt INMIS is 
 753:FWLIB/src/stm32f4xx_cryp.c ****           enabled with the CRYP enable bit. Consequently, when CRYP is disabled, the 
 754:FWLIB/src/stm32f4xx_cryp.c ****           INMIS signal is low even if the input FIFO is empty.
 755:FWLIB/src/stm32f4xx_cryp.c **** 
 756:FWLIB/src/stm32f4xx_cryp.c **** 
 757:FWLIB/src/stm32f4xx_cryp.c **** 
 758:FWLIB/src/stm32f4xx_cryp.c ****    (#) CRYP_IT_OUTI  : The output FIFO service interrupt is asserted when there 
 759:FWLIB/src/stm32f4xx_cryp.c ****        is one or more (32-bit word) data items in the output FIFO. This interrupt 
 760:FWLIB/src/stm32f4xx_cryp.c ****        is associated to CRYP_FLAG_OUTRIS flag.
 761:FWLIB/src/stm32f4xx_cryp.c **** 
 762:FWLIB/src/stm32f4xx_cryp.c ****        -@- This interrupt is cleared by reading data from the output FIFO until there 
 763:FWLIB/src/stm32f4xx_cryp.c ****            is no valid (32-bit) word left (that is, the interrupt follows the state 
 764:FWLIB/src/stm32f4xx_cryp.c ****            of the OFNE (output FIFO not empty) flag).
 765:FWLIB/src/stm32f4xx_cryp.c **** 
 766:FWLIB/src/stm32f4xx_cryp.c ****  *** Managing the CRYP controller events : ***
 767:FWLIB/src/stm32f4xx_cryp.c ****  =============================================
 768:FWLIB/src/stm32f4xx_cryp.c ****  [..] The user should identify which mode will be used in his application to manage 
 769:FWLIB/src/stm32f4xx_cryp.c ****       the CRYP controller events: Polling mode or Interrupt mode.
 770:FWLIB/src/stm32f4xx_cryp.c **** 
 771:FWLIB/src/stm32f4xx_cryp.c ****    (#) In the Polling Mode it is advised to use the following functions:
 772:FWLIB/src/stm32f4xx_cryp.c ****        (++) CRYP_GetFlagStatus() : to check if flags events occur. 
 773:FWLIB/src/stm32f4xx_cryp.c **** 
 774:FWLIB/src/stm32f4xx_cryp.c ****        -@@- The CRYPT flags do not need to be cleared since they are cleared as 
 775:FWLIB/src/stm32f4xx_cryp.c ****             soon as the associated event are reset.   
 776:FWLIB/src/stm32f4xx_cryp.c **** 
 777:FWLIB/src/stm32f4xx_cryp.c **** 
 778:FWLIB/src/stm32f4xx_cryp.c ****    (#) In the Interrupt Mode it is advised to use the following functions:
 779:FWLIB/src/stm32f4xx_cryp.c ****        (++) CRYP_ITConfig()       : to enable or disable the interrupt source.
 780:FWLIB/src/stm32f4xx_cryp.c ****        (++) CRYP_GetITStatus()    : to check if Interrupt occurs.
 781:FWLIB/src/stm32f4xx_cryp.c **** 
 782:FWLIB/src/stm32f4xx_cryp.c ****        -@@- The CRYPT interrupts have no pending bits, the interrupt is cleared as 
 783:FWLIB/src/stm32f4xx_cryp.c ****              soon as the associated event is reset. 
 784:FWLIB/src/stm32f4xx_cryp.c **** 
 785:FWLIB/src/stm32f4xx_cryp.c **** @endverbatim
 786:FWLIB/src/stm32f4xx_cryp.c ****   * @{
 787:FWLIB/src/stm32f4xx_cryp.c ****   */ 
 788:FWLIB/src/stm32f4xx_cryp.c **** 
 789:FWLIB/src/stm32f4xx_cryp.c **** /**
 790:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the specified CRYP interrupts.
 791:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP interrupt source to be enabled or disabled.
 792:FWLIB/src/stm32f4xx_cryp.c ****   *          This parameter can be any combination of the following values:
 793:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 794:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 795:FWLIB/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the specified CRYP interrupt.
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 35


 796:FWLIB/src/stm32f4xx_cryp.c ****   *           This parameter can be: ENABLE or DISABLE.
 797:FWLIB/src/stm32f4xx_cryp.c ****   * @retval None
 798:FWLIB/src/stm32f4xx_cryp.c ****   */
 799:FWLIB/src/stm32f4xx_cryp.c **** void CRYP_ITConfig(uint8_t CRYP_IT, FunctionalState NewState)
 800:FWLIB/src/stm32f4xx_cryp.c **** {
 1077              		.loc 1 800 1 is_stmt 1 view -0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081              		@ link register save eliminated.
 801:FWLIB/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 802:FWLIB/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_CONFIG_IT(CRYP_IT));
 1082              		.loc 1 802 3 view .LVU384
 803:FWLIB/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1083              		.loc 1 803 3 view .LVU385
 804:FWLIB/src/stm32f4xx_cryp.c **** 
 805:FWLIB/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 1084              		.loc 1 805 3 view .LVU386
 1085              		.loc 1 805 6 is_stmt 0 view .LVU387
 1086 0000 21B1     		cbz	r1, .L53
 806:FWLIB/src/stm32f4xx_cryp.c ****   {
 807:FWLIB/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP interrupt */
 808:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->IMSCR |= CRYP_IT;
 1087              		.loc 1 808 5 is_stmt 1 view .LVU388
 1088              		.loc 1 808 17 is_stmt 0 view .LVU389
 1089 0002 064B     		ldr	r3, .L55
 1090 0004 5A69     		ldr	r2, [r3, #20]
 1091 0006 1043     		orrs	r0, r0, r2
 1092              	.LVL32:
 1093              		.loc 1 808 17 view .LVU390
 1094 0008 5861     		str	r0, [r3, #20]
 1095 000a 7047     		bx	lr
 1096              	.LVL33:
 1097              	.L53:
 809:FWLIB/src/stm32f4xx_cryp.c ****   }
 810:FWLIB/src/stm32f4xx_cryp.c ****   else
 811:FWLIB/src/stm32f4xx_cryp.c ****   {
 812:FWLIB/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP interrupt */
 813:FWLIB/src/stm32f4xx_cryp.c ****     CRYP->IMSCR &= (uint8_t)~CRYP_IT;
 1098              		.loc 1 813 5 is_stmt 1 view .LVU391
 1099              		.loc 1 813 17 is_stmt 0 view .LVU392
 1100 000c 034A     		ldr	r2, .L55
 1101 000e 5369     		ldr	r3, [r2, #20]
 1102              		.loc 1 813 20 view .LVU393
 1103 0010 C043     		mvns	r0, r0
 1104              	.LVL34:
 1105              		.loc 1 813 20 view .LVU394
 1106 0012 C0B2     		uxtb	r0, r0
 1107              		.loc 1 813 17 view .LVU395
 1108 0014 1840     		ands	r0, r0, r3
 1109 0016 5061     		str	r0, [r2, #20]
 814:FWLIB/src/stm32f4xx_cryp.c ****   }
 815:FWLIB/src/stm32f4xx_cryp.c **** }
 1110              		.loc 1 815 1 view .LVU396
 1111 0018 7047     		bx	lr
 1112              	.L56:
 1113 001a 00BF     		.align	2
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 36


 1114              	.L55:
 1115 001c 00000650 		.word	1342570496
 1116              		.cfi_endproc
 1117              	.LFE138:
 1119              		.section	.text.CRYP_GetITStatus,"ax",%progbits
 1120              		.align	1
 1121              		.global	CRYP_GetITStatus
 1122              		.syntax unified
 1123              		.thumb
 1124              		.thumb_func
 1125              		.fpu fpv4-sp-d16
 1127              	CRYP_GetITStatus:
 1128              	.LVL35:
 1129              	.LFB139:
 816:FWLIB/src/stm32f4xx_cryp.c **** 
 817:FWLIB/src/stm32f4xx_cryp.c **** /**
 818:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP interrupt has occurred or not.
 819:FWLIB/src/stm32f4xx_cryp.c ****   * @note   This function checks the status of the masked interrupt (i.e the 
 820:FWLIB/src/stm32f4xx_cryp.c ****   *         interrupt should be previously enabled).     
 821:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP (masked) interrupt source to check.
 822:FWLIB/src/stm32f4xx_cryp.c ****   *           This parameter can be one of the following values:
 823:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 824:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 825:FWLIB/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_IT (SET or RESET).
 826:FWLIB/src/stm32f4xx_cryp.c ****   */
 827:FWLIB/src/stm32f4xx_cryp.c **** ITStatus CRYP_GetITStatus(uint8_t CRYP_IT)
 828:FWLIB/src/stm32f4xx_cryp.c **** {
 1130              		.loc 1 828 1 is_stmt 1 view -0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 0
 1133              		@ frame_needed = 0, uses_anonymous_args = 0
 1134              		@ link register save eliminated.
 829:FWLIB/src/stm32f4xx_cryp.c ****   ITStatus bitstatus = RESET;
 1135              		.loc 1 829 3 view .LVU398
 830:FWLIB/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 831:FWLIB/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_IT(CRYP_IT));
 1136              		.loc 1 831 3 view .LVU399
 832:FWLIB/src/stm32f4xx_cryp.c **** 
 833:FWLIB/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP interrupt */
 834:FWLIB/src/stm32f4xx_cryp.c ****   if ((CRYP->MISR &  CRYP_IT) != (uint8_t)RESET)
 1137              		.loc 1 834 3 view .LVU400
 1138              		.loc 1 834 12 is_stmt 0 view .LVU401
 1139 0000 034B     		ldr	r3, .L60
 1140 0002 DB69     		ldr	r3, [r3, #28]
 1141              		.loc 1 834 6 view .LVU402
 1142 0004 1842     		tst	r0, r3
 1143 0006 01D0     		beq	.L59
 835:FWLIB/src/stm32f4xx_cryp.c ****   {
 836:FWLIB/src/stm32f4xx_cryp.c ****     /* CRYP_IT is set */
 837:FWLIB/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 1144              		.loc 1 837 15 view .LVU403
 1145 0008 0120     		movs	r0, #1
 1146              	.LVL36:
 1147              		.loc 1 837 15 view .LVU404
 1148 000a 7047     		bx	lr
 1149              	.LVL37:
 1150              	.L59:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 37


 838:FWLIB/src/stm32f4xx_cryp.c ****   }
 839:FWLIB/src/stm32f4xx_cryp.c ****   else
 840:FWLIB/src/stm32f4xx_cryp.c ****   {
 841:FWLIB/src/stm32f4xx_cryp.c ****     /* CRYP_IT is reset */
 842:FWLIB/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 1151              		.loc 1 842 15 view .LVU405
 1152 000c 0020     		movs	r0, #0
 1153              	.LVL38:
 843:FWLIB/src/stm32f4xx_cryp.c ****   }
 844:FWLIB/src/stm32f4xx_cryp.c ****   /* Return the CRYP_IT status */
 845:FWLIB/src/stm32f4xx_cryp.c ****   return bitstatus;
 1154              		.loc 1 845 3 is_stmt 1 view .LVU406
 846:FWLIB/src/stm32f4xx_cryp.c **** }
 1155              		.loc 1 846 1 is_stmt 0 view .LVU407
 1156 000e 7047     		bx	lr
 1157              	.L61:
 1158              		.align	2
 1159              	.L60:
 1160 0010 00000650 		.word	1342570496
 1161              		.cfi_endproc
 1162              	.LFE139:
 1164              		.section	.text.CRYP_GetCmdStatus,"ax",%progbits
 1165              		.align	1
 1166              		.global	CRYP_GetCmdStatus
 1167              		.syntax unified
 1168              		.thumb
 1169              		.thumb_func
 1170              		.fpu fpv4-sp-d16
 1172              	CRYP_GetCmdStatus:
 1173              	.LFB140:
 847:FWLIB/src/stm32f4xx_cryp.c **** 
 848:FWLIB/src/stm32f4xx_cryp.c **** /**
 849:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Returns whether CRYP peripheral is enabled or disabled.
 850:FWLIB/src/stm32f4xx_cryp.c ****   * @param  none.
 851:FWLIB/src/stm32f4xx_cryp.c ****   * @retval Current state of the CRYP peripheral (ENABLE or DISABLE).
 852:FWLIB/src/stm32f4xx_cryp.c ****   */
 853:FWLIB/src/stm32f4xx_cryp.c **** FunctionalState CRYP_GetCmdStatus(void)
 854:FWLIB/src/stm32f4xx_cryp.c **** {
 1174              		.loc 1 854 1 is_stmt 1 view -0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 0
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178              		@ link register save eliminated.
 855:FWLIB/src/stm32f4xx_cryp.c ****   FunctionalState state = DISABLE;
 1179              		.loc 1 855 3 view .LVU409
 1180              	.LVL39:
 856:FWLIB/src/stm32f4xx_cryp.c **** 
 857:FWLIB/src/stm32f4xx_cryp.c ****   if ((CRYP->CR & CRYP_CR_CRYPEN) != 0)
 1181              		.loc 1 857 3 view .LVU410
 1182              		.loc 1 857 12 is_stmt 0 view .LVU411
 1183 0000 044B     		ldr	r3, .L65
 1184 0002 1B68     		ldr	r3, [r3]
 1185              		.loc 1 857 6 view .LVU412
 1186 0004 13F4004F 		tst	r3, #32768
 1187 0008 01D0     		beq	.L64
 858:FWLIB/src/stm32f4xx_cryp.c ****   {
 859:FWLIB/src/stm32f4xx_cryp.c ****     /* CRYPEN bit is set */
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 38


 860:FWLIB/src/stm32f4xx_cryp.c ****     state = ENABLE;
 1188              		.loc 1 860 11 view .LVU413
 1189 000a 0120     		movs	r0, #1
 1190 000c 7047     		bx	lr
 1191              	.L64:
 861:FWLIB/src/stm32f4xx_cryp.c ****   }
 862:FWLIB/src/stm32f4xx_cryp.c ****   else
 863:FWLIB/src/stm32f4xx_cryp.c ****   {
 864:FWLIB/src/stm32f4xx_cryp.c ****     /* CRYPEN bit is reset */
 865:FWLIB/src/stm32f4xx_cryp.c ****     state = DISABLE;
 1192              		.loc 1 865 11 view .LVU414
 1193 000e 0020     		movs	r0, #0
 1194              	.LVL40:
 866:FWLIB/src/stm32f4xx_cryp.c ****   }
 867:FWLIB/src/stm32f4xx_cryp.c ****   return state;
 1195              		.loc 1 867 3 is_stmt 1 view .LVU415
 868:FWLIB/src/stm32f4xx_cryp.c **** }
 1196              		.loc 1 868 1 is_stmt 0 view .LVU416
 1197 0010 7047     		bx	lr
 1198              	.L66:
 1199 0012 00BF     		.align	2
 1200              	.L65:
 1201 0014 00000650 		.word	1342570496
 1202              		.cfi_endproc
 1203              	.LFE140:
 1205              		.section	.text.CRYP_GetFlagStatus,"ax",%progbits
 1206              		.align	1
 1207              		.global	CRYP_GetFlagStatus
 1208              		.syntax unified
 1209              		.thumb
 1210              		.thumb_func
 1211              		.fpu fpv4-sp-d16
 1213              	CRYP_GetFlagStatus:
 1214              	.LVL41:
 1215              	.LFB141:
 869:FWLIB/src/stm32f4xx_cryp.c **** 
 870:FWLIB/src/stm32f4xx_cryp.c **** /**
 871:FWLIB/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP flag is set or not.
 872:FWLIB/src/stm32f4xx_cryp.c ****   * @param  CRYP_FLAG: specifies the CRYP flag to check.
 873:FWLIB/src/stm32f4xx_cryp.c ****   *          This parameter can be one of the following values:
 874:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFEM: Input FIFO Empty flag.
 875:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFNF: Input FIFO Not Full flag.
 876:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFNE: Output FIFO Not Empty flag.
 877:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFFU: Output FIFO Full flag.
 878:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_BUSY: Busy flag.
 879:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OUTRIS: Output FIFO raw interrupt flag.
 880:FWLIB/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_INRIS: Input FIFO raw interrupt flag.
 881:FWLIB/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_FLAG (SET or RESET).
 882:FWLIB/src/stm32f4xx_cryp.c ****   */
 883:FWLIB/src/stm32f4xx_cryp.c **** FlagStatus CRYP_GetFlagStatus(uint8_t CRYP_FLAG)
 884:FWLIB/src/stm32f4xx_cryp.c **** {
 1216              		.loc 1 884 1 is_stmt 1 view -0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              		@ link register save eliminated.
 885:FWLIB/src/stm32f4xx_cryp.c ****   FlagStatus bitstatus = RESET;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 39


 1221              		.loc 1 885 3 view .LVU418
 886:FWLIB/src/stm32f4xx_cryp.c ****   uint32_t tempreg = 0;
 1222              		.loc 1 886 3 view .LVU419
 887:FWLIB/src/stm32f4xx_cryp.c **** 
 888:FWLIB/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 889:FWLIB/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_FLAG(CRYP_FLAG));
 1223              		.loc 1 889 3 view .LVU420
 890:FWLIB/src/stm32f4xx_cryp.c **** 
 891:FWLIB/src/stm32f4xx_cryp.c ****   /* check if the FLAG is in RISR register */
 892:FWLIB/src/stm32f4xx_cryp.c ****   if ((CRYP_FLAG & FLAG_MASK) != 0x00) 
 1224              		.loc 1 892 3 view .LVU421
 1225              		.loc 1 892 6 is_stmt 0 view .LVU422
 1226 0000 10F0200F 		tst	r0, #32
 1227 0004 05D0     		beq	.L68
 893:FWLIB/src/stm32f4xx_cryp.c ****   {
 894:FWLIB/src/stm32f4xx_cryp.c ****     tempreg = CRYP->RISR;
 1228              		.loc 1 894 5 is_stmt 1 view .LVU423
 1229              		.loc 1 894 13 is_stmt 0 view .LVU424
 1230 0006 054B     		ldr	r3, .L72
 1231 0008 9B69     		ldr	r3, [r3, #24]
 1232              	.LVL42:
 1233              	.L69:
 895:FWLIB/src/stm32f4xx_cryp.c ****   }
 896:FWLIB/src/stm32f4xx_cryp.c ****   else  /* The FLAG is in SR register */
 897:FWLIB/src/stm32f4xx_cryp.c ****   {
 898:FWLIB/src/stm32f4xx_cryp.c ****     tempreg = CRYP->SR;
 899:FWLIB/src/stm32f4xx_cryp.c ****   }
 900:FWLIB/src/stm32f4xx_cryp.c **** 
 901:FWLIB/src/stm32f4xx_cryp.c **** 
 902:FWLIB/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP flag */
 903:FWLIB/src/stm32f4xx_cryp.c ****   if ((tempreg & CRYP_FLAG ) != (uint8_t)RESET)
 1234              		.loc 1 903 3 is_stmt 1 view .LVU425
 1235              		.loc 1 903 6 is_stmt 0 view .LVU426
 1236 000a 1842     		tst	r0, r3
 1237 000c 04D0     		beq	.L71
 904:FWLIB/src/stm32f4xx_cryp.c ****   {
 905:FWLIB/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is set */
 906:FWLIB/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 1238              		.loc 1 906 15 view .LVU427
 1239 000e 0120     		movs	r0, #1
 1240              	.LVL43:
 1241              		.loc 1 906 15 view .LVU428
 1242 0010 7047     		bx	lr
 1243              	.LVL44:
 1244              	.L68:
 898:FWLIB/src/stm32f4xx_cryp.c ****   }
 1245              		.loc 1 898 5 is_stmt 1 view .LVU429
 898:FWLIB/src/stm32f4xx_cryp.c ****   }
 1246              		.loc 1 898 13 is_stmt 0 view .LVU430
 1247 0012 024B     		ldr	r3, .L72
 1248 0014 5B68     		ldr	r3, [r3, #4]
 1249              	.LVL45:
 898:FWLIB/src/stm32f4xx_cryp.c ****   }
 1250              		.loc 1 898 13 view .LVU431
 1251 0016 F8E7     		b	.L69
 1252              	.L71:
 907:FWLIB/src/stm32f4xx_cryp.c ****   }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 40


 908:FWLIB/src/stm32f4xx_cryp.c ****   else
 909:FWLIB/src/stm32f4xx_cryp.c ****   {
 910:FWLIB/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is reset */
 911:FWLIB/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 1253              		.loc 1 911 15 view .LVU432
 1254 0018 0020     		movs	r0, #0
 1255              	.LVL46:
 912:FWLIB/src/stm32f4xx_cryp.c ****   }
 913:FWLIB/src/stm32f4xx_cryp.c **** 
 914:FWLIB/src/stm32f4xx_cryp.c ****   /* Return the CRYP_FLAG status */
 915:FWLIB/src/stm32f4xx_cryp.c ****   return  bitstatus;
 1256              		.loc 1 915 3 is_stmt 1 view .LVU433
 916:FWLIB/src/stm32f4xx_cryp.c **** }
 1257              		.loc 1 916 1 is_stmt 0 view .LVU434
 1258 001a 7047     		bx	lr
 1259              	.L73:
 1260              		.align	2
 1261              	.L72:
 1262 001c 00000650 		.word	1342570496
 1263              		.cfi_endproc
 1264              	.LFE141:
 1266              		.text
 1267              	.Letext0:
 1268              		.file 2 "/usr/local/arm-none-eabi-gcc/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/mac
 1269              		.file 3 "/usr/local/arm-none-eabi-gcc/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys
 1270              		.file 4 "USER/stm32f4xx.h"
 1271              		.file 5 "FWLIB/inc/stm32f4xx_cryp.h"
 1272              		.file 6 "FWLIB/inc/stm32f4xx_rcc.h"
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_cryp.c
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:18     .text.CRYP_DeInit:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:26     .text.CRYP_DeInit:0000000000000000 CRYP_DeInit
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:54     .text.CRYP_Init:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:61     .text.CRYP_Init:0000000000000000 CRYP_Init
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:149    .text.CRYP_Init:000000000000005c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:154    .text.CRYP_StructInit:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:161    .text.CRYP_StructInit:0000000000000000 CRYP_StructInit
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:188    .text.CRYP_KeyInit:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:195    .text.CRYP_KeyInit:0000000000000000 CRYP_KeyInit
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:249    .text.CRYP_KeyInit:0000000000000024 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:254    .text.CRYP_KeyStructInit:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:261    .text.CRYP_KeyStructInit:0000000000000000 CRYP_KeyStructInit
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:300    .text.CRYP_IVInit:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:307    .text.CRYP_IVInit:0000000000000000 CRYP_IVInit
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:341    .text.CRYP_IVInit:0000000000000014 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:346    .text.CRYP_IVStructInit:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:353    .text.CRYP_IVStructInit:0000000000000000 CRYP_IVStructInit
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:380    .text.CRYP_PhaseConfig:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:387    .text.CRYP_PhaseConfig:0000000000000000 CRYP_PhaseConfig
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:418    .text.CRYP_PhaseConfig:0000000000000010 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:423    .text.CRYP_FIFOFlush:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:430    .text.CRYP_FIFOFlush:0000000000000000 CRYP_FIFOFlush
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:448    .text.CRYP_FIFOFlush:000000000000000c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:453    .text.CRYP_Cmd:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:460    .text.CRYP_Cmd:0000000000000000 CRYP_Cmd
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:491    .text.CRYP_Cmd:000000000000001c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:496    .text.CRYP_DataIn:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:503    .text.CRYP_DataIn:0000000000000000 CRYP_DataIn
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:520    .text.CRYP_DataIn:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:525    .text.CRYP_DataOut:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:532    .text.CRYP_DataOut:0000000000000000 CRYP_DataOut
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:548    .text.CRYP_DataOut:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:553    .text.CRYP_SaveContext:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:560    .text.CRYP_SaveContext:0000000000000000 CRYP_SaveContext
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:833    .text.CRYP_SaveContext:00000000000000fc $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:838    .text.CRYP_RestoreContext:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:845    .text.CRYP_RestoreContext:0000000000000000 CRYP_RestoreContext
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1009   .text.CRYP_RestoreContext:0000000000000088 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1014   .text.CRYP_DMACmd:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1021   .text.CRYP_DMACmd:0000000000000000 CRYP_DMACmd
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1062   .text.CRYP_DMACmd:000000000000001c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1067   .text.CRYP_ITConfig:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1074   .text.CRYP_ITConfig:0000000000000000 CRYP_ITConfig
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1115   .text.CRYP_ITConfig:000000000000001c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1120   .text.CRYP_GetITStatus:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1127   .text.CRYP_GetITStatus:0000000000000000 CRYP_GetITStatus
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1160   .text.CRYP_GetITStatus:0000000000000010 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1165   .text.CRYP_GetCmdStatus:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1172   .text.CRYP_GetCmdStatus:0000000000000000 CRYP_GetCmdStatus
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1201   .text.CRYP_GetCmdStatus:0000000000000014 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1206   .text.CRYP_GetFlagStatus:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1213   .text.CRYP_GetFlagStatus:0000000000000000 CRYP_GetFlagStatus
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s:1262   .text.CRYP_GetFlagStatus:000000000000001c $d

UNDEFINED SYMBOLS
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//cczu6IJj.s 			page 42


RCC_AHB2PeriphResetCmd
