ARM GAS  /tmp/cc2wDBwd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"periph_serial.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USART_Structure_Normal_Setting,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	USART_Structure_Normal_Setting:
  25              	.LFB123:
  26              		.file 1 "Bsp/periph_serial.c"
   1:Bsp/periph_serial.c **** #include "periph_serial.h"
   2:Bsp/periph_serial.c **** #include "periph_gpio.h"
   3:Bsp/periph_serial.c **** #include "periph_nvic.h"
   4:Bsp/periph_serial.c **** #include "periph_dma.h"
   5:Bsp/periph_serial.c **** #include "stm32f4xx_usart.h"
   6:Bsp/periph_serial.c **** #include "stm32f4xx_rcc.h"
   7:Bsp/periph_serial.c **** #include "stm32f4xx_dma.h"
   8:Bsp/periph_serial.c **** 
   9:Bsp/periph_serial.c **** uint8_t Serial_TX_Buff[Serial_Port_Sum][SERIAL_MAX_RECLEN];
  10:Bsp/periph_serial.c **** uint8_t Serial_RX_Buff[Serial_Port_Sum][SERIAL_MAX_RECLEN];
  11:Bsp/periph_serial.c **** 
  12:Bsp/periph_serial.c **** Serial_IRQ_Callback IRQ_Callback[Serial_Port_Sum] = {NULL};
  13:Bsp/periph_serial.c **** 
  14:Bsp/periph_serial.c **** #ifdef STM32F40XX
  15:Bsp/periph_serial.c **** static void (*Serial_IO_Init[Serial_Port_Sum])(void) = {GPIO_USART1_IO_Init,
  16:Bsp/periph_serial.c **** 														GPIO_USART2_IO_Init,
  17:Bsp/periph_serial.c **** 														GPIO_USART3_IO_Init,
  18:Bsp/periph_serial.c **** 														GPIO_USART6_IO_Init};
  19:Bsp/periph_serial.c **** 
  20:Bsp/periph_serial.c **** static void (*RCC_APBPeriphClockCmd[Serial_Port_Sum])(uint32_t RCC_APB2Periph, FunctionalState NewS
  21:Bsp/periph_serial.c **** 																											RCC_APB1PeriphClockCmd,
  22:Bsp/periph_serial.c **** 																											RCC_APB1PeriphClockCmd,
  23:Bsp/periph_serial.c **** 																											RCC_APB2PeriphClockCmd};
  24:Bsp/periph_serial.c **** 
  25:Bsp/periph_serial.c **** static uint32_t RCC_APBPeriph_SerialCLK[Serial_Port_Sum] = {RCC_APB2Periph_USART1,
  26:Bsp/periph_serial.c **** 															RCC_APB1Periph_USART2,
  27:Bsp/periph_serial.c **** 															RCC_APB1Periph_USART3,
  28:Bsp/periph_serial.c **** 															RCC_APB2Periph_USART6};
  29:Bsp/periph_serial.c **** 
  30:Bsp/periph_serial.c **** USART_TypeDef *Serial_Port[Serial_Port_Sum] = {USART1,
  31:Bsp/periph_serial.c **** 											   USART2,
  32:Bsp/periph_serial.c **** 											   USART3,
ARM GAS  /tmp/cc2wDBwd.s 			page 2


  33:Bsp/periph_serial.c **** 											   USART6};
  34:Bsp/periph_serial.c **** 
  35:Bsp/periph_serial.c **** static uint8_t Serial_RX_IRQ_Channel[Serial_Port_Sum] = {USART1_IRQn,
  36:Bsp/periph_serial.c **** 														 USART2_IRQn,
  37:Bsp/periph_serial.c **** 														 USART3_IRQn,
  38:Bsp/periph_serial.c **** 														 USART6_IRQn};
  39:Bsp/periph_serial.c **** 
  40:Bsp/periph_serial.c **** static uint8_t Serial_DMA_TX_IRQ_Channel[Serial_Port_Sum] = {DMA2_Stream7_IRQn,
  41:Bsp/periph_serial.c **** 															 DMA1_Stream6_IRQn,
  42:Bsp/periph_serial.c **** 															 DMA1_Stream3_IRQn,
  43:Bsp/periph_serial.c **** 															 DMA2_Stream7_IRQn};
  44:Bsp/periph_serial.c **** 
  45:Bsp/periph_serial.c **** static uint32_t Serial_DMA_CLK[Serial_Port_Sum] = {Serial1_DMA_CLK,
  46:Bsp/periph_serial.c **** 												   Serial2_DMA_CLK,
  47:Bsp/periph_serial.c **** 												   Serial3_DMA_CLK,
  48:Bsp/periph_serial.c **** 												   Serial6_DMA_CLK};
  49:Bsp/periph_serial.c **** 
  50:Bsp/periph_serial.c **** static uint32_t Serial_DMA_RX_Channel[Serial_Port_Sum] = {Serial1_DMA_RX_Channel,
  51:Bsp/periph_serial.c **** 														  Serial2_DMA_RX_Channel,
  52:Bsp/periph_serial.c **** 														  Serial3_DMA_RX_Channel,
  53:Bsp/periph_serial.c **** 														  Serial6_DMA_RX_Channel};
  54:Bsp/periph_serial.c **** 
  55:Bsp/periph_serial.c **** static DMA_Stream_TypeDef *Serial_DMA_RX_Stream[Serial_Port_Sum] = {Serial1_DMA_RX_Stream,
  56:Bsp/periph_serial.c **** 																	Serial2_DMA_RX_Stream,
  57:Bsp/periph_serial.c **** 																	Serial3_DMA_RX_Stream,
  58:Bsp/periph_serial.c **** 																	Serial6_DMA_RX_Stream};
  59:Bsp/periph_serial.c **** 
  60:Bsp/periph_serial.c **** static uint32_t Serial_DMA_TX_Channel[Serial_Port_Sum] = {Serial1_DMA_TX_Channel,
  61:Bsp/periph_serial.c **** 														  Serial2_DMA_TX_Channel,
  62:Bsp/periph_serial.c **** 														  Serial3_DMA_TX_Channel,
  63:Bsp/periph_serial.c **** 														  Serial6_DMA_TX_Channel};
  64:Bsp/periph_serial.c **** 
  65:Bsp/periph_serial.c **** static DMA_Stream_TypeDef *Serial_DMA_TX_Stream[Serial_Port_Sum] = {Serial1_DMA_TX_Stream,
  66:Bsp/periph_serial.c **** 																	Serial2_DMA_TX_Stream,
  67:Bsp/periph_serial.c **** 																	Serial3_DMA_TX_Stream,
  68:Bsp/periph_serial.c **** 																	Serial6_DMA_TX_Stream};
  69:Bsp/periph_serial.c **** 
  70:Bsp/periph_serial.c **** static uint32_t DMA_TX_FinishFlag[Serial_Port_Sum] = {DMA_FLAG_TCIF7,
  71:Bsp/periph_serial.c **** 													  DMA_FLAG_TCIF6,
  72:Bsp/periph_serial.c **** 													  DMA_FLAG_TCIF3,
  73:Bsp/periph_serial.c **** 													  DMA_FLAG_TCIF7};
  74:Bsp/periph_serial.c **** #endif
  75:Bsp/periph_serial.c **** 
  76:Bsp/periph_serial.c **** static void USART_Structure_Normal_Setting(USART_InitTypeDef *USART_InitStructure, uint32_t bound)
  77:Bsp/periph_serial.c **** {
  27              		.loc 1 77 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  78:Bsp/periph_serial.c **** 	USART_InitStructure->USART_BaudRate = bound;
  33              		.loc 1 78 0
  34 0000 0160     		str	r1, [r0]
  79:Bsp/periph_serial.c **** 	USART_InitStructure->USART_WordLength = USART_WordLength_8b;
  35              		.loc 1 79 0
  36 0002 0023     		movs	r3, #0
ARM GAS  /tmp/cc2wDBwd.s 			page 3


  37 0004 8380     		strh	r3, [r0, #4]	@ movhi
  80:Bsp/periph_serial.c **** 	USART_InitStructure->USART_StopBits = USART_StopBits_1;
  38              		.loc 1 80 0
  39 0006 C380     		strh	r3, [r0, #6]	@ movhi
  81:Bsp/periph_serial.c **** 	USART_InitStructure->USART_Parity = USART_Parity_No;
  40              		.loc 1 81 0
  41 0008 0381     		strh	r3, [r0, #8]	@ movhi
  82:Bsp/periph_serial.c **** 	USART_InitStructure->USART_HardwareFlowControl = USART_HardwareFlowControl_None;
  42              		.loc 1 82 0
  43 000a 8381     		strh	r3, [r0, #12]	@ movhi
  83:Bsp/periph_serial.c **** 	USART_InitStructure->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
  44              		.loc 1 83 0
  45 000c 0C23     		movs	r3, #12
  46 000e 4381     		strh	r3, [r0, #10]	@ movhi
  47 0010 7047     		bx	lr
  48              		.cfi_endproc
  49              	.LFE123:
  51              		.section	.text.USART_Structure_SBus_Setting,"ax",%progbits
  52              		.align	1
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  56              		.fpu fpv4-sp-d16
  58              	USART_Structure_SBus_Setting:
  59              	.LFB124:
  84:Bsp/periph_serial.c **** }
  85:Bsp/periph_serial.c **** 
  86:Bsp/periph_serial.c **** static void USART_Structure_SBus_Setting(USART_InitTypeDef *USART_InitStructure, uint32_t bound)
  87:Bsp/periph_serial.c **** {
  60              		.loc 1 87 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65              	.LVL1:
  88:Bsp/periph_serial.c **** 	USART_InitStructure->USART_BaudRate = bound;
  66              		.loc 1 88 0
  67 0000 0160     		str	r1, [r0]
  89:Bsp/periph_serial.c **** 	USART_InitStructure->USART_WordLength = USART_WordLength_9b;
  68              		.loc 1 89 0
  69 0002 4FF48053 		mov	r3, #4096
  70 0006 8380     		strh	r3, [r0, #4]	@ movhi
  90:Bsp/periph_serial.c **** 	USART_InitStructure->USART_StopBits = USART_StopBits_2;
  71              		.loc 1 90 0
  72 0008 4FF40053 		mov	r3, #8192
  73 000c C380     		strh	r3, [r0, #6]	@ movhi
  91:Bsp/periph_serial.c **** 	USART_InitStructure->USART_Parity = USART_Parity_Even;
  74              		.loc 1 91 0
  75 000e 4FF48063 		mov	r3, #1024
  76 0012 0381     		strh	r3, [r0, #8]	@ movhi
  92:Bsp/periph_serial.c **** 	USART_InitStructure->USART_HardwareFlowControl = USART_HardwareFlowControl_None;
  77              		.loc 1 92 0
  78 0014 0023     		movs	r3, #0
  79 0016 8381     		strh	r3, [r0, #12]	@ movhi
  93:Bsp/periph_serial.c **** 	USART_InitStructure->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
  80              		.loc 1 93 0
  81 0018 0C23     		movs	r3, #12
ARM GAS  /tmp/cc2wDBwd.s 			page 4


  82 001a 4381     		strh	r3, [r0, #10]	@ movhi
  83 001c 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE124:
  87              		.section	.text.Serial_Get_IRQ_RxCallback,"ax",%progbits
  88              		.align	1
  89              		.global	Serial_Get_IRQ_RxCallback
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	Serial_Get_IRQ_RxCallback:
  96              	.LFB125:
  94:Bsp/periph_serial.c **** }
  95:Bsp/periph_serial.c **** 
  96:Bsp/periph_serial.c **** static void (*Serial_Structure_Setting[Serial_Func_Sum])(USART_InitTypeDef *USART_InitStructure, ui
  97:Bsp/periph_serial.c **** 																													USART_Structure_SBus_Setting};
  98:Bsp/periph_serial.c **** 
  99:Bsp/periph_serial.c **** Serial_IRQ_Callback Serial_Get_IRQ_RxCallback(Serial_List serial_id)
 100:Bsp/periph_serial.c **** {
  97              		.loc 1 100 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.LVL2:
 101:Bsp/periph_serial.c **** 	if (serial_id >= Serial_Port_Sum)
 103              		.loc 1 101 0
 104 0000 0328     		cmp	r0, #3
 105 0002 03D8     		bhi	.L5
 102:Bsp/periph_serial.c **** 		return NULL;
 103:Bsp/periph_serial.c **** 
 104:Bsp/periph_serial.c **** 	return IRQ_Callback[serial_id];
 106              		.loc 1 104 0
 107 0004 024B     		ldr	r3, .L6
 108 0006 53F82000 		ldr	r0, [r3, r0, lsl #2]
 109              	.LVL3:
 110 000a 7047     		bx	lr
 111              	.LVL4:
 112              	.L5:
 102:Bsp/periph_serial.c **** 		return NULL;
 113              		.loc 1 102 0
 114 000c 0020     		movs	r0, #0
 115              	.LVL5:
 105:Bsp/periph_serial.c **** }
 116              		.loc 1 105 0
 117 000e 7047     		bx	lr
 118              	.L7:
 119              		.align	2
 120              	.L6:
 121 0010 00000000 		.word	.LANCHOR0
 122              		.cfi_endproc
 123              	.LFE125:
 125              		.section	.text.Serial_Set_IRQ_Callback,"ax",%progbits
 126              		.align	1
 127              		.global	Serial_Set_IRQ_Callback
 128              		.syntax unified
ARM GAS  /tmp/cc2wDBwd.s 			page 5


 129              		.thumb
 130              		.thumb_func
 131              		.fpu fpv4-sp-d16
 133              	Serial_Set_IRQ_Callback:
 134              	.LFB126:
 106:Bsp/periph_serial.c **** 
 107:Bsp/periph_serial.c **** bool Serial_Set_IRQ_Callback(Serial_List serial_id, Serial_IRQ_Callback callback)
 108:Bsp/periph_serial.c **** {
 135              		.loc 1 108 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL6:
 109:Bsp/periph_serial.c **** 	if (serial_id >= Serial_Port_Sum)
 141              		.loc 1 109 0
 142 0000 0328     		cmp	r0, #3
 143 0002 04D8     		bhi	.L10
 110:Bsp/periph_serial.c **** 		return false;
 111:Bsp/periph_serial.c **** 
 112:Bsp/periph_serial.c **** 	IRQ_Callback[serial_id] = callback;
 144              		.loc 1 112 0
 145 0004 034B     		ldr	r3, .L11
 146 0006 43F82010 		str	r1, [r3, r0, lsl #2]
 113:Bsp/periph_serial.c **** 
 114:Bsp/periph_serial.c **** 	return true;
 147              		.loc 1 114 0
 148 000a 0120     		movs	r0, #1
 149              	.LVL7:
 150 000c 7047     		bx	lr
 151              	.LVL8:
 152              	.L10:
 110:Bsp/periph_serial.c **** 		return false;
 153              		.loc 1 110 0
 154 000e 0020     		movs	r0, #0
 155              	.LVL9:
 115:Bsp/periph_serial.c **** }
 156              		.loc 1 115 0
 157 0010 7047     		bx	lr
 158              	.L12:
 159 0012 00BF     		.align	2
 160              	.L11:
 161 0014 00000000 		.word	.LANCHOR0
 162              		.cfi_endproc
 163              	.LFE126:
 165              		.section	.text.Serial_IRQ_RX_Init,"ax",%progbits
 166              		.align	1
 167              		.global	Serial_IRQ_RX_Init
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu fpv4-sp-d16
 173              	Serial_IRQ_RX_Init:
 174              	.LFB127:
 116:Bsp/periph_serial.c **** 
 117:Bsp/periph_serial.c **** void Serial_IRQ_RX_Init(Serial_List Serial, uint32_t bound, uint8_t PreemptionPriority, uint8_t Sub
 118:Bsp/periph_serial.c **** {
ARM GAS  /tmp/cc2wDBwd.s 			page 6


 175              		.loc 1 118 0
 176              		.cfi_startproc
 177              		@ args = 4, pretend = 0, frame = 16
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              	.LVL10:
 180 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 181              	.LCFI0:
 182              		.cfi_def_cfa_offset 20
 183              		.cfi_offset 4, -20
 184              		.cfi_offset 5, -16
 185              		.cfi_offset 6, -12
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 85B0     		sub	sp, sp, #20
 189              	.LCFI1:
 190              		.cfi_def_cfa_offset 40
 191 0004 0446     		mov	r4, r0
 192 0006 0D46     		mov	r5, r1
 193 0008 1646     		mov	r6, r2
 194 000a 1F46     		mov	r7, r3
 119:Bsp/periph_serial.c **** 	USART_InitTypeDef USART_InitStructure;
 120:Bsp/periph_serial.c **** 	Serial_IO_Init[Serial]();
 195              		.loc 1 120 0
 196 000c 174B     		ldr	r3, .L15
 197              	.LVL11:
 198 000e 53F82030 		ldr	r3, [r3, r0, lsl #2]
 199 0012 9847     		blx	r3
 200              	.LVL12:
 121:Bsp/periph_serial.c **** 
 122:Bsp/periph_serial.c **** 	RCC_APBPeriphClockCmd[Serial](RCC_APBPeriph_SerialCLK[Serial], ENABLE);
 201              		.loc 1 122 0
 202 0014 164B     		ldr	r3, .L15+4
 203 0016 53F82430 		ldr	r3, [r3, r4, lsl #2]
 204 001a 0121     		movs	r1, #1
 205 001c 154A     		ldr	r2, .L15+8
 206 001e 52F82400 		ldr	r0, [r2, r4, lsl #2]
 207 0022 9847     		blx	r3
 208              	.LVL13:
 123:Bsp/periph_serial.c **** 
 124:Bsp/periph_serial.c **** 	Serial_Structure_Setting[type](&USART_InitStructure, bound);
 209              		.loc 1 124 0
 210 0024 144B     		ldr	r3, .L15+12
 211 0026 9DF82820 		ldrb	r2, [sp, #40]	@ zero_extendqisi2
 212 002a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 213 002e 2946     		mov	r1, r5
 214 0030 6846     		mov	r0, sp
 215 0032 9847     		blx	r3
 216              	.LVL14:
 125:Bsp/periph_serial.c **** 	USART_Init(Serial_Port[Serial], &USART_InitStructure);
 217              		.loc 1 125 0
 218 0034 114D     		ldr	r5, .L15+16
 219              	.LVL15:
 220 0036 6946     		mov	r1, sp
 221 0038 55F82400 		ldr	r0, [r5, r4, lsl #2]
 222 003c FFF7FEFF 		bl	USART_Init
 223              	.LVL16:
 126:Bsp/periph_serial.c **** 	USART_Cmd(Serial_Port[Serial], ENABLE);
ARM GAS  /tmp/cc2wDBwd.s 			page 7


 224              		.loc 1 126 0
 225 0040 0121     		movs	r1, #1
 226 0042 55F82400 		ldr	r0, [r5, r4, lsl #2]
 227 0046 FFF7FEFF 		bl	USART_Cmd
 228              	.LVL17:
 127:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_RXNE, ENABLE);
 229              		.loc 1 127 0
 230 004a 0122     		movs	r2, #1
 231 004c 40F22551 		movw	r1, #1317
 232 0050 55F82400 		ldr	r0, [r5, r4, lsl #2]
 233 0054 FFF7FEFF 		bl	USART_ITConfig
 234              	.LVL18:
 128:Bsp/periph_serial.c **** 
 129:Bsp/periph_serial.c **** 	periph_nvic_Structure_Setting(Serial_RX_IRQ_Channel[Serial], PreemptionPriority, SubPriority, ENAB
 235              		.loc 1 129 0
 236 0058 0123     		movs	r3, #1
 237 005a 3A46     		mov	r2, r7
 238 005c 3146     		mov	r1, r6
 239 005e 0848     		ldr	r0, .L15+20
 240 0060 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 241 0062 FFF7FEFF 		bl	periph_nvic_Structure_Setting
 242              	.LVL19:
 130:Bsp/periph_serial.c **** }
 243              		.loc 1 130 0
 244 0066 05B0     		add	sp, sp, #20
 245              	.LCFI2:
 246              		.cfi_def_cfa_offset 20
 247              		@ sp needed
 248 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 249              	.LVL20:
 250              	.L16:
 251 006a 00BF     		.align	2
 252              	.L15:
 253 006c 00000000 		.word	.LANCHOR1
 254 0070 00000000 		.word	.LANCHOR2
 255 0074 00000000 		.word	.LANCHOR3
 256 0078 00000000 		.word	.LANCHOR4
 257 007c 00000000 		.word	.LANCHOR5
 258 0080 00000000 		.word	.LANCHOR6
 259              		.cfi_endproc
 260              	.LFE127:
 262              		.section	.text.Serial_DMA_RX_Init,"ax",%progbits
 263              		.align	1
 264              		.global	Serial_DMA_RX_Init
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu fpv4-sp-d16
 270              	Serial_DMA_RX_Init:
 271              	.LFB128:
 131:Bsp/periph_serial.c **** 
 132:Bsp/periph_serial.c **** void Serial_DMA_RX_Init(Serial_List Serial, uint32_t bound, uint8_t PreemptionPriority, uint8_t Sub
 133:Bsp/periph_serial.c **** {
 272              		.loc 1 133 0
 273              		.cfi_startproc
 274              		@ args = 12, pretend = 0, frame = 80
 275              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc2wDBwd.s 			page 8


 276              	.LVL21:
 277 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 278              	.LCFI3:
 279              		.cfi_def_cfa_offset 20
 280              		.cfi_offset 4, -20
 281              		.cfi_offset 5, -16
 282              		.cfi_offset 6, -12
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 97B0     		sub	sp, sp, #92
 286              	.LCFI4:
 287              		.cfi_def_cfa_offset 112
 288 0004 0446     		mov	r4, r0
 289 0006 0D46     		mov	r5, r1
 290 0008 1646     		mov	r6, r2
 291 000a 1F46     		mov	r7, r3
 134:Bsp/periph_serial.c **** 	USART_InitTypeDef USART_InitStructure;
 135:Bsp/periph_serial.c **** 	DMA_InitTypeDef DMA_InitStructure;
 136:Bsp/periph_serial.c **** 
 137:Bsp/periph_serial.c **** 	Serial_IO_Init[Serial]();
 292              		.loc 1 137 0
 293 000c 314B     		ldr	r3, .L19
 294              	.LVL22:
 295 000e 53F82030 		ldr	r3, [r3, r0, lsl #2]
 296 0012 9847     		blx	r3
 297              	.LVL23:
 138:Bsp/periph_serial.c **** 
 139:Bsp/periph_serial.c **** 	RCC_APBPeriphClockCmd[Serial](RCC_APBPeriph_SerialCLK[Serial], ENABLE);
 298              		.loc 1 139 0
 299 0014 304B     		ldr	r3, .L19+4
 300 0016 53F82430 		ldr	r3, [r3, r4, lsl #2]
 301 001a 0121     		movs	r1, #1
 302 001c 2F4A     		ldr	r2, .L19+8
 303 001e 52F82400 		ldr	r0, [r2, r4, lsl #2]
 304 0022 9847     		blx	r3
 305              	.LVL24:
 140:Bsp/periph_serial.c **** 	Serial_Structure_Setting[type](&USART_InitStructure, bound);
 306              		.loc 1 140 0
 307 0024 2E4B     		ldr	r3, .L19+12
 308 0026 9DF87820 		ldrb	r2, [sp, #120]	@ zero_extendqisi2
 309 002a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 310 002e 2946     		mov	r1, r5
 311 0030 12A8     		add	r0, sp, #72
 312 0032 9847     		blx	r3
 313              	.LVL25:
 141:Bsp/periph_serial.c **** 	USART_Init(Serial_Port[Serial], &USART_InitStructure);
 314              		.loc 1 141 0
 315 0034 2B4D     		ldr	r5, .L19+16
 316              	.LVL26:
 317 0036 12A9     		add	r1, sp, #72
 318 0038 55F82400 		ldr	r0, [r5, r4, lsl #2]
 319 003c FFF7FEFF 		bl	USART_Init
 320              	.LVL27:
 142:Bsp/periph_serial.c **** 
 143:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_RXNE, DISABLE);
 321              		.loc 1 143 0
 322 0040 0022     		movs	r2, #0
ARM GAS  /tmp/cc2wDBwd.s 			page 9


 323 0042 40F22551 		movw	r1, #1317
 324 0046 55F82400 		ldr	r0, [r5, r4, lsl #2]
 325 004a FFF7FEFF 		bl	USART_ITConfig
 326              	.LVL28:
 144:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_TC, DISABLE);
 327              		.loc 1 144 0
 328 004e 0022     		movs	r2, #0
 329 0050 40F22661 		movw	r1, #1574
 330 0054 55F82400 		ldr	r0, [r5, r4, lsl #2]
 331 0058 FFF7FEFF 		bl	USART_ITConfig
 332              	.LVL29:
 145:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_TXE, DISABLE);
 333              		.loc 1 145 0
 334 005c 0022     		movs	r2, #0
 335 005e 40F22771 		movw	r1, #1831
 336 0062 55F82400 		ldr	r0, [r5, r4, lsl #2]
 337 0066 FFF7FEFF 		bl	USART_ITConfig
 338              	.LVL30:
 146:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_IDLE, ENABLE);
 339              		.loc 1 146 0
 340 006a 0122     		movs	r2, #1
 341 006c 40F22441 		movw	r1, #1060
 342 0070 55F82400 		ldr	r0, [r5, r4, lsl #2]
 343 0074 FFF7FEFF 		bl	USART_ITConfig
 344              	.LVL31:
 147:Bsp/periph_serial.c **** 
 148:Bsp/periph_serial.c **** 	USART_DMACmd(Serial_Port[Serial], USART_DMAReq_Rx, ENABLE);
 345              		.loc 1 148 0
 346 0078 0122     		movs	r2, #1
 347 007a 4021     		movs	r1, #64
 348 007c 55F82400 		ldr	r0, [r5, r4, lsl #2]
 349 0080 FFF7FEFF 		bl	USART_DMACmd
 350              	.LVL32:
 149:Bsp/periph_serial.c **** 	periph_DMA_Serial(&DMA_InitStructure, Serial_DMA_RX_Channel[Serial], (uint32_t)&Serial_Port[Serial
 351              		.loc 1 149 0
 352 0084 55F82420 		ldr	r2, [r5, r4, lsl #2]
 353 0088 174B     		ldr	r3, .L19+20
 354 008a 53F82410 		ldr	r1, [r3, r4, lsl #2]
 355 008e 0223     		movs	r3, #2
 356 0090 0193     		str	r3, [sp, #4]
 357 0092 BDF87430 		ldrh	r3, [sp, #116]
 358 0096 0093     		str	r3, [sp]
 359 0098 1C9B     		ldr	r3, [sp, #112]
 360 009a 0432     		adds	r2, r2, #4
 361 009c 03A8     		add	r0, sp, #12
 362 009e FFF7FEFF 		bl	periph_DMA_Serial
 363              	.LVL33:
 150:Bsp/periph_serial.c **** 	periph_DMA_WithoutIRQ_Init(Serial_DMA_CLK[Serial], Serial_DMA_RX_Stream[Serial], &DMA_InitStructur
 364              		.loc 1 150 0
 365 00a2 0123     		movs	r3, #1
 366 00a4 03AA     		add	r2, sp, #12
 367 00a6 1149     		ldr	r1, .L19+24
 368 00a8 51F82410 		ldr	r1, [r1, r4, lsl #2]
 369 00ac 1048     		ldr	r0, .L19+28
 370 00ae 50F82400 		ldr	r0, [r0, r4, lsl #2]
 371 00b2 FFF7FEFF 		bl	periph_DMA_WithoutIRQ_Init
 372              	.LVL34:
ARM GAS  /tmp/cc2wDBwd.s 			page 10


 151:Bsp/periph_serial.c **** 
 152:Bsp/periph_serial.c **** 	periph_nvic_Structure_Setting(Serial_RX_IRQ_Channel[Serial], PreemptionPriority, SubPriority, ENAB
 373              		.loc 1 152 0
 374 00b6 0123     		movs	r3, #1
 375 00b8 3A46     		mov	r2, r7
 376 00ba 3146     		mov	r1, r6
 377 00bc 0D48     		ldr	r0, .L19+32
 378 00be 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 379 00c0 FFF7FEFF 		bl	periph_nvic_Structure_Setting
 380              	.LVL35:
 153:Bsp/periph_serial.c **** 
 154:Bsp/periph_serial.c **** 	USART_Cmd(Serial_Port[Serial], ENABLE);
 381              		.loc 1 154 0
 382 00c4 0121     		movs	r1, #1
 383 00c6 55F82400 		ldr	r0, [r5, r4, lsl #2]
 384 00ca FFF7FEFF 		bl	USART_Cmd
 385              	.LVL36:
 155:Bsp/periph_serial.c **** }
 386              		.loc 1 155 0
 387 00ce 17B0     		add	sp, sp, #92
 388              	.LCFI5:
 389              		.cfi_def_cfa_offset 20
 390              		@ sp needed
 391 00d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 392              	.LVL37:
 393              	.L20:
 394 00d2 00BF     		.align	2
 395              	.L19:
 396 00d4 00000000 		.word	.LANCHOR1
 397 00d8 00000000 		.word	.LANCHOR2
 398 00dc 00000000 		.word	.LANCHOR3
 399 00e0 00000000 		.word	.LANCHOR4
 400 00e4 00000000 		.word	.LANCHOR5
 401 00e8 00000000 		.word	.LANCHOR7
 402 00ec 00000000 		.word	.LANCHOR8
 403 00f0 00000000 		.word	.LANCHOR9
 404 00f4 00000000 		.word	.LANCHOR6
 405              		.cfi_endproc
 406              	.LFE128:
 408              		.section	.text.Serial_DMA_TX_Init,"ax",%progbits
 409              		.align	1
 410              		.global	Serial_DMA_TX_Init
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 414              		.fpu fpv4-sp-d16
 416              	Serial_DMA_TX_Init:
 417              	.LFB129:
 156:Bsp/periph_serial.c **** 
 157:Bsp/periph_serial.c **** void Serial_DMA_TX_Init(Serial_List Serial, uint32_t bound, uint8_t PreemptionPriority, uint8_t Sub
 158:Bsp/periph_serial.c **** {
 418              		.loc 1 158 0
 419              		.cfi_startproc
 420              		@ args = 12, pretend = 0, frame = 80
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              	.LVL38:
 423 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  /tmp/cc2wDBwd.s 			page 11


 424              	.LCFI6:
 425              		.cfi_def_cfa_offset 24
 426              		.cfi_offset 4, -24
 427              		.cfi_offset 5, -20
 428              		.cfi_offset 6, -16
 429              		.cfi_offset 7, -12
 430              		.cfi_offset 8, -8
 431              		.cfi_offset 14, -4
 432 0004 96B0     		sub	sp, sp, #88
 433              	.LCFI7:
 434              		.cfi_def_cfa_offset 112
 435 0006 0446     		mov	r4, r0
 436 0008 0D46     		mov	r5, r1
 437 000a 9046     		mov	r8, r2
 438 000c 1F46     		mov	r7, r3
 159:Bsp/periph_serial.c **** 	USART_InitTypeDef USART_InitStructure;
 160:Bsp/periph_serial.c **** 	DMA_InitTypeDef DMA_TX_InitStructure;
 161:Bsp/periph_serial.c **** 
 162:Bsp/periph_serial.c **** 	Serial_IO_Init[Serial]();
 439              		.loc 1 162 0
 440 000e 254B     		ldr	r3, .L23
 441              	.LVL39:
 442 0010 53F82030 		ldr	r3, [r3, r0, lsl #2]
 443 0014 9847     		blx	r3
 444              	.LVL40:
 163:Bsp/periph_serial.c **** 
 164:Bsp/periph_serial.c **** 	RCC_APBPeriphClockCmd[Serial](RCC_APBPeriph_SerialCLK[Serial], ENABLE);
 445              		.loc 1 164 0
 446 0016 244B     		ldr	r3, .L23+4
 447 0018 53F82430 		ldr	r3, [r3, r4, lsl #2]
 448 001c 0121     		movs	r1, #1
 449 001e 234A     		ldr	r2, .L23+8
 450 0020 52F82400 		ldr	r0, [r2, r4, lsl #2]
 451 0024 9847     		blx	r3
 452              	.LVL41:
 165:Bsp/periph_serial.c **** 	Serial_Structure_Setting[type](&USART_InitStructure, bound);
 453              		.loc 1 165 0
 454 0026 224B     		ldr	r3, .L23+12
 455 0028 9DF87820 		ldrb	r2, [sp, #120]	@ zero_extendqisi2
 456 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 457 0030 2946     		mov	r1, r5
 458 0032 12A8     		add	r0, sp, #72
 459 0034 9847     		blx	r3
 460              	.LVL42:
 166:Bsp/periph_serial.c **** 	USART_Init(Serial_Port[Serial], &USART_InitStructure);
 461              		.loc 1 166 0
 462 0036 1F4D     		ldr	r5, .L23+16
 463              	.LVL43:
 464 0038 12A9     		add	r1, sp, #72
 465 003a 55F82400 		ldr	r0, [r5, r4, lsl #2]
 466 003e FFF7FEFF 		bl	USART_Init
 467              	.LVL44:
 167:Bsp/periph_serial.c **** 
 168:Bsp/periph_serial.c **** 	USART_DMACmd(Serial_Port[Serial], USART_DMAReq_Tx, ENABLE);
 468              		.loc 1 168 0
 469 0042 0122     		movs	r2, #1
 470 0044 8021     		movs	r1, #128
ARM GAS  /tmp/cc2wDBwd.s 			page 12


 471 0046 55F82400 		ldr	r0, [r5, r4, lsl #2]
 472 004a FFF7FEFF 		bl	USART_DMACmd
 473              	.LVL45:
 169:Bsp/periph_serial.c **** 
 170:Bsp/periph_serial.c **** 	periph_DMA_Serial(&DMA_TX_InitStructure, Serial_DMA_TX_Channel[Serial], (uint32_t)&Serial_Port[Ser
 474              		.loc 1 170 0
 475 004e 55F82420 		ldr	r2, [r5, r4, lsl #2]
 476 0052 194B     		ldr	r3, .L23+20
 477 0054 53F82410 		ldr	r1, [r3, r4, lsl #2]
 478 0058 0126     		movs	r6, #1
 479 005a 0196     		str	r6, [sp, #4]
 480 005c BDF87430 		ldrh	r3, [sp, #116]
 481 0060 0093     		str	r3, [sp]
 482 0062 1C9B     		ldr	r3, [sp, #112]
 483 0064 0432     		adds	r2, r2, #4
 484 0066 03A8     		add	r0, sp, #12
 485 0068 FFF7FEFF 		bl	periph_DMA_Serial
 486              	.LVL46:
 171:Bsp/periph_serial.c **** 	periph_DMA_WithIRQ_Init(Serial_DMA_CLK[Serial], Serial_DMA_TX_Stream[Serial], &DMA_TX_InitStructur
 487              		.loc 1 171 0
 488 006c 134B     		ldr	r3, .L23+24
 489 006e 53F82410 		ldr	r1, [r3, r4, lsl #2]
 490 0072 134B     		ldr	r3, .L23+28
 491 0074 53F82400 		ldr	r0, [r3, r4, lsl #2]
 492 0078 0023     		movs	r3, #0
 493 007a 0093     		str	r3, [sp]
 494 007c 1023     		movs	r3, #16
 495 007e 03AA     		add	r2, sp, #12
 496 0080 FFF7FEFF 		bl	periph_DMA_WithIRQ_Init
 497              	.LVL47:
 172:Bsp/periph_serial.c **** 	periph_nvic_Structure_Setting(Serial_DMA_TX_IRQ_Channel[Serial], PreemptionPriority, SubPriority +
 498              		.loc 1 172 0
 499 0084 BA19     		adds	r2, r7, r6
 500 0086 3346     		mov	r3, r6
 501 0088 D2B2     		uxtb	r2, r2
 502 008a 4146     		mov	r1, r8
 503 008c 0D48     		ldr	r0, .L23+32
 504 008e 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 505 0090 FFF7FEFF 		bl	periph_nvic_Structure_Setting
 506              	.LVL48:
 173:Bsp/periph_serial.c **** 
 174:Bsp/periph_serial.c **** 	USART_Cmd(Serial_Port[Serial], ENABLE);
 507              		.loc 1 174 0
 508 0094 3146     		mov	r1, r6
 509 0096 55F82400 		ldr	r0, [r5, r4, lsl #2]
 510 009a FFF7FEFF 		bl	USART_Cmd
 511              	.LVL49:
 175:Bsp/periph_serial.c **** }
 512              		.loc 1 175 0
 513 009e 16B0     		add	sp, sp, #88
 514              	.LCFI8:
 515              		.cfi_def_cfa_offset 24
 516              		@ sp needed
 517 00a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 518              	.LVL50:
 519              	.L24:
 520              		.align	2
ARM GAS  /tmp/cc2wDBwd.s 			page 13


 521              	.L23:
 522 00a4 00000000 		.word	.LANCHOR1
 523 00a8 00000000 		.word	.LANCHOR2
 524 00ac 00000000 		.word	.LANCHOR3
 525 00b0 00000000 		.word	.LANCHOR4
 526 00b4 00000000 		.word	.LANCHOR5
 527 00b8 00000000 		.word	.LANCHOR10
 528 00bc 00000000 		.word	.LANCHOR11
 529 00c0 00000000 		.word	.LANCHOR9
 530 00c4 00000000 		.word	.LANCHOR12
 531              		.cfi_endproc
 532              	.LFE129:
 534              		.section	.text.Serial_Deinit,"ax",%progbits
 535              		.align	1
 536              		.global	Serial_Deinit
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 540              		.fpu fpv4-sp-d16
 542              	Serial_Deinit:
 543              	.LFB130:
 176:Bsp/periph_serial.c **** 
 177:Bsp/periph_serial.c **** bool Serial_Deinit(Serial_List Serial)
 178:Bsp/periph_serial.c **** {
 544              		.loc 1 178 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 548              	.LVL51:
 179:Bsp/periph_serial.c **** 	if (Serial >= Serial_Port_Sum)
 549              		.loc 1 179 0
 550 0000 0328     		cmp	r0, #3
 551 0002 01D9     		bls	.L32
 180:Bsp/periph_serial.c **** 		return false;
 552              		.loc 1 180 0
 553 0004 0020     		movs	r0, #0
 554              	.LVL52:
 555 0006 7047     		bx	lr
 556              	.LVL53:
 557              	.L32:
 178:Bsp/periph_serial.c **** 	if (Serial >= Serial_Port_Sum)
 558              		.loc 1 178 0
 559 0008 70B5     		push	{r4, r5, r6, lr}
 560              	.LCFI9:
 561              		.cfi_def_cfa_offset 16
 562              		.cfi_offset 4, -16
 563              		.cfi_offset 5, -12
 564              		.cfi_offset 6, -8
 565              		.cfi_offset 14, -4
 566 000a 0446     		mov	r4, r0
 181:Bsp/periph_serial.c **** 
 182:Bsp/periph_serial.c **** 	IRQ_Callback[Serial] = NULL;
 567              		.loc 1 182 0
 568 000c 0026     		movs	r6, #0
 569 000e 154B     		ldr	r3, .L33
 570 0010 43F82060 		str	r6, [r3, r0, lsl #2]
 183:Bsp/periph_serial.c **** 
ARM GAS  /tmp/cc2wDBwd.s 			page 14


 184:Bsp/periph_serial.c **** 	USART_DeInit(Serial_Port[Serial]);
 571              		.loc 1 184 0
 572 0014 144D     		ldr	r5, .L33+4
 573 0016 55F82000 		ldr	r0, [r5, r0, lsl #2]
 574              	.LVL54:
 575 001a FFF7FEFF 		bl	USART_DeInit
 576              	.LVL55:
 185:Bsp/periph_serial.c **** 
 186:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_RXNE, DISABLE);
 577              		.loc 1 186 0
 578 001e 3246     		mov	r2, r6
 579 0020 40F22551 		movw	r1, #1317
 580 0024 55F82400 		ldr	r0, [r5, r4, lsl #2]
 581 0028 FFF7FEFF 		bl	USART_ITConfig
 582              	.LVL56:
 187:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_TC, DISABLE);
 583              		.loc 1 187 0
 584 002c 3246     		mov	r2, r6
 585 002e 40F22661 		movw	r1, #1574
 586 0032 55F82400 		ldr	r0, [r5, r4, lsl #2]
 587 0036 FFF7FEFF 		bl	USART_ITConfig
 588              	.LVL57:
 188:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_TXE, DISABLE);
 589              		.loc 1 188 0
 590 003a 3246     		mov	r2, r6
 591 003c 40F22771 		movw	r1, #1831
 592 0040 55F82400 		ldr	r0, [r5, r4, lsl #2]
 593 0044 FFF7FEFF 		bl	USART_ITConfig
 594              	.LVL58:
 189:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_IDLE, DISABLE);
 595              		.loc 1 189 0
 596 0048 3246     		mov	r2, r6
 597 004a 40F22441 		movw	r1, #1060
 598 004e 55F82400 		ldr	r0, [r5, r4, lsl #2]
 599 0052 FFF7FEFF 		bl	USART_ITConfig
 600              	.LVL59:
 190:Bsp/periph_serial.c **** 
 191:Bsp/periph_serial.c **** 	USART_Cmd(Serial_Port[Serial], DISABLE);
 601              		.loc 1 191 0
 602 0056 3146     		mov	r1, r6
 603 0058 55F82400 		ldr	r0, [r5, r4, lsl #2]
 604 005c FFF7FEFF 		bl	USART_Cmd
 605              	.LVL60:
 192:Bsp/periph_serial.c **** 
 193:Bsp/periph_serial.c **** 	return true;
 606              		.loc 1 193 0
 607 0060 0120     		movs	r0, #1
 608 0062 70BD     		pop	{r4, r5, r6, pc}
 609              	.L34:
 610              		.align	2
 611              	.L33:
 612 0064 00000000 		.word	.LANCHOR0
 613 0068 00000000 		.word	.LANCHOR5
 614              		.cfi_endproc
 615              	.LFE130:
 617              		.section	.text.Serial_DMA_RXTX_Init,"ax",%progbits
 618              		.align	1
ARM GAS  /tmp/cc2wDBwd.s 			page 15


 619              		.global	Serial_DMA_RXTX_Init
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 623              		.fpu fpv4-sp-d16
 625              	Serial_DMA_RXTX_Init:
 626              	.LFB131:
 194:Bsp/periph_serial.c **** }
 195:Bsp/periph_serial.c **** 
 196:Bsp/periph_serial.c **** void Serial_DMA_RXTX_Init(Serial_List Serial, uint32_t bound, uint8_t PreemptionPriority, uint8_t S
 197:Bsp/periph_serial.c **** {
 627              		.loc 1 197 0
 628              		.cfi_startproc
 629              		@ args = 16, pretend = 0, frame = 136
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              	.LVL61:
 632 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 633              	.LCFI10:
 634              		.cfi_def_cfa_offset 28
 635              		.cfi_offset 4, -28
 636              		.cfi_offset 5, -24
 637              		.cfi_offset 6, -20
 638              		.cfi_offset 7, -16
 639              		.cfi_offset 8, -12
 640              		.cfi_offset 9, -8
 641              		.cfi_offset 14, -4
 642 0004 A5B0     		sub	sp, sp, #148
 643              	.LCFI11:
 644              		.cfi_def_cfa_offset 176
 645 0006 0446     		mov	r4, r0
 646 0008 0D46     		mov	r5, r1
 647 000a 1646     		mov	r6, r2
 648 000c 9946     		mov	r9, r3
 649 000e BDF8B880 		ldrh	r8, [sp, #184]
 198:Bsp/periph_serial.c **** 	USART_InitTypeDef USART_InitStructure;
 199:Bsp/periph_serial.c **** 	DMA_InitTypeDef DMA_RX_InitStructure;
 200:Bsp/periph_serial.c **** 	DMA_InitTypeDef DMA_TX_InitStructure;
 201:Bsp/periph_serial.c **** 
 202:Bsp/periph_serial.c **** 	Serial_IO_Init[Serial]();
 650              		.loc 1 202 0
 651 0012 404B     		ldr	r3, .L37
 652              	.LVL62:
 653 0014 53F82030 		ldr	r3, [r3, r0, lsl #2]
 654 0018 9847     		blx	r3
 655              	.LVL63:
 203:Bsp/periph_serial.c **** 
 204:Bsp/periph_serial.c **** 	RCC_APBPeriphClockCmd[Serial](RCC_APBPeriph_SerialCLK[Serial], ENABLE);
 656              		.loc 1 204 0
 657 001a 3F4B     		ldr	r3, .L37+4
 658 001c 53F82430 		ldr	r3, [r3, r4, lsl #2]
 659 0020 0121     		movs	r1, #1
 660 0022 3E4A     		ldr	r2, .L37+8
 661 0024 52F82400 		ldr	r0, [r2, r4, lsl #2]
 662 0028 9847     		blx	r3
 663              	.LVL64:
 205:Bsp/periph_serial.c **** 	Serial_Structure_Setting[type](&USART_InitStructure, bound);
 664              		.loc 1 205 0
ARM GAS  /tmp/cc2wDBwd.s 			page 16


 665 002a 3D4B     		ldr	r3, .L37+12
 666 002c 9DF8BC20 		ldrb	r2, [sp, #188]	@ zero_extendqisi2
 667 0030 53F82230 		ldr	r3, [r3, r2, lsl #2]
 668 0034 2946     		mov	r1, r5
 669 0036 20A8     		add	r0, sp, #128
 670 0038 9847     		blx	r3
 671              	.LVL65:
 206:Bsp/periph_serial.c **** 	USART_Init(Serial_Port[Serial], &USART_InitStructure);
 672              		.loc 1 206 0
 673 003a 3A4D     		ldr	r5, .L37+16
 674              	.LVL66:
 675 003c 20A9     		add	r1, sp, #128
 676 003e 55F82400 		ldr	r0, [r5, r4, lsl #2]
 677 0042 FFF7FEFF 		bl	USART_Init
 678              	.LVL67:
 207:Bsp/periph_serial.c **** 
 208:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_RXNE, DISABLE);
 679              		.loc 1 208 0
 680 0046 0022     		movs	r2, #0
 681 0048 40F22551 		movw	r1, #1317
 682 004c 55F82400 		ldr	r0, [r5, r4, lsl #2]
 683 0050 FFF7FEFF 		bl	USART_ITConfig
 684              	.LVL68:
 209:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_TC, DISABLE);
 685              		.loc 1 209 0
 686 0054 0022     		movs	r2, #0
 687 0056 40F22661 		movw	r1, #1574
 688 005a 55F82400 		ldr	r0, [r5, r4, lsl #2]
 689 005e FFF7FEFF 		bl	USART_ITConfig
 690              	.LVL69:
 210:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_TXE, DISABLE);
 691              		.loc 1 210 0
 692 0062 0022     		movs	r2, #0
 693 0064 40F22771 		movw	r1, #1831
 694 0068 55F82400 		ldr	r0, [r5, r4, lsl #2]
 695 006c FFF7FEFF 		bl	USART_ITConfig
 696              	.LVL70:
 211:Bsp/periph_serial.c **** 	USART_ITConfig(Serial_Port[Serial], USART_IT_IDLE, ENABLE);
 697              		.loc 1 211 0
 698 0070 0122     		movs	r2, #1
 699 0072 40F22441 		movw	r1, #1060
 700 0076 55F82400 		ldr	r0, [r5, r4, lsl #2]
 701 007a FFF7FEFF 		bl	USART_ITConfig
 702              	.LVL71:
 212:Bsp/periph_serial.c **** 
 213:Bsp/periph_serial.c **** 	//Rx DMA Setting
 214:Bsp/periph_serial.c **** 	periph_DMA_Serial(&DMA_RX_InitStructure, Serial_DMA_RX_Channel[Serial], (uint32_t)&Serial_Port[Ser
 703              		.loc 1 214 0
 704 007e 55F82420 		ldr	r2, [r5, r4, lsl #2]
 705 0082 294B     		ldr	r3, .L37+20
 706 0084 53F82410 		ldr	r1, [r3, r4, lsl #2]
 707 0088 0223     		movs	r3, #2
 708 008a 0193     		str	r3, [sp, #4]
 709 008c CDF80080 		str	r8, [sp]
 710 0090 2C9B     		ldr	r3, [sp, #176]
 711 0092 0432     		adds	r2, r2, #4
 712 0094 11A8     		add	r0, sp, #68
ARM GAS  /tmp/cc2wDBwd.s 			page 17


 713 0096 FFF7FEFF 		bl	periph_DMA_Serial
 714              	.LVL72:
 215:Bsp/periph_serial.c **** 	periph_DMA_WithoutIRQ_Init(Serial_DMA_CLK[Serial], Serial_DMA_RX_Stream[Serial], &DMA_RX_InitStruc
 715              		.loc 1 215 0
 716 009a 244B     		ldr	r3, .L37+24
 717 009c 53F82470 		ldr	r7, [r3, r4, lsl #2]
 718 00a0 0123     		movs	r3, #1
 719 00a2 11AA     		add	r2, sp, #68
 720 00a4 2249     		ldr	r1, .L37+28
 721 00a6 51F82410 		ldr	r1, [r1, r4, lsl #2]
 722 00aa 3846     		mov	r0, r7
 723 00ac FFF7FEFF 		bl	periph_DMA_WithoutIRQ_Init
 724              	.LVL73:
 216:Bsp/periph_serial.c **** 	periph_nvic_Structure_Setting(Serial_RX_IRQ_Channel[Serial], PreemptionPriority, SubPriority, ENAB
 725              		.loc 1 216 0
 726 00b0 0123     		movs	r3, #1
 727 00b2 4A46     		mov	r2, r9
 728 00b4 3146     		mov	r1, r6
 729 00b6 1F48     		ldr	r0, .L37+32
 730 00b8 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 731 00ba FFF7FEFF 		bl	periph_nvic_Structure_Setting
 732              	.LVL74:
 217:Bsp/periph_serial.c **** 
 218:Bsp/periph_serial.c **** 	//Tx DMA Setting
 219:Bsp/periph_serial.c **** 	periph_DMA_Serial(&DMA_TX_InitStructure, Serial_DMA_TX_Channel[Serial], (uint32_t)&Serial_Port[Ser
 733              		.loc 1 219 0
 734 00be 55F82420 		ldr	r2, [r5, r4, lsl #2]
 735 00c2 1D4B     		ldr	r3, .L37+36
 736 00c4 53F82410 		ldr	r1, [r3, r4, lsl #2]
 737 00c8 0126     		movs	r6, #1
 738 00ca 0196     		str	r6, [sp, #4]
 739 00cc CDF80080 		str	r8, [sp]
 740 00d0 2D9B     		ldr	r3, [sp, #180]
 741 00d2 0432     		adds	r2, r2, #4
 742 00d4 02A8     		add	r0, sp, #8
 743 00d6 FFF7FEFF 		bl	periph_DMA_Serial
 744              	.LVL75:
 220:Bsp/periph_serial.c **** 	periph_DMA_WithoutIRQ_Init(Serial_DMA_CLK[Serial], Serial_DMA_TX_Stream[Serial], &DMA_TX_InitStruc
 745              		.loc 1 220 0
 746 00da 0023     		movs	r3, #0
 747 00dc 02AA     		add	r2, sp, #8
 748 00de 1749     		ldr	r1, .L37+40
 749 00e0 51F82410 		ldr	r1, [r1, r4, lsl #2]
 750 00e4 3846     		mov	r0, r7
 751 00e6 FFF7FEFF 		bl	periph_DMA_WithoutIRQ_Init
 752              	.LVL76:
 221:Bsp/periph_serial.c **** 
 222:Bsp/periph_serial.c **** 	USART_DMACmd(Serial_Port[Serial], USART_DMAReq_Rx, ENABLE);
 753              		.loc 1 222 0
 754 00ea 3246     		mov	r2, r6
 755 00ec 4021     		movs	r1, #64
 756 00ee 55F82400 		ldr	r0, [r5, r4, lsl #2]
 757 00f2 FFF7FEFF 		bl	USART_DMACmd
 758              	.LVL77:
 223:Bsp/periph_serial.c **** 	USART_DMACmd(Serial_Port[Serial], USART_DMAReq_Tx, ENABLE);
 759              		.loc 1 223 0
 760 00f6 3246     		mov	r2, r6
ARM GAS  /tmp/cc2wDBwd.s 			page 18


 761 00f8 8021     		movs	r1, #128
 762 00fa 55F82400 		ldr	r0, [r5, r4, lsl #2]
 763 00fe FFF7FEFF 		bl	USART_DMACmd
 764              	.LVL78:
 224:Bsp/periph_serial.c **** 
 225:Bsp/periph_serial.c **** 	USART_Cmd(Serial_Port[Serial], ENABLE);
 765              		.loc 1 225 0
 766 0102 3146     		mov	r1, r6
 767 0104 55F82400 		ldr	r0, [r5, r4, lsl #2]
 768 0108 FFF7FEFF 		bl	USART_Cmd
 769              	.LVL79:
 226:Bsp/periph_serial.c **** }
 770              		.loc 1 226 0
 771 010c 25B0     		add	sp, sp, #148
 772              	.LCFI12:
 773              		.cfi_def_cfa_offset 28
 774              		@ sp needed
 775 010e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 776              	.LVL80:
 777              	.L38:
 778 0112 00BF     		.align	2
 779              	.L37:
 780 0114 00000000 		.word	.LANCHOR1
 781 0118 00000000 		.word	.LANCHOR2
 782 011c 00000000 		.word	.LANCHOR3
 783 0120 00000000 		.word	.LANCHOR4
 784 0124 00000000 		.word	.LANCHOR5
 785 0128 00000000 		.word	.LANCHOR7
 786 012c 00000000 		.word	.LANCHOR9
 787 0130 00000000 		.word	.LANCHOR8
 788 0134 00000000 		.word	.LANCHOR6
 789 0138 00000000 		.word	.LANCHOR10
 790 013c 00000000 		.word	.LANCHOR11
 791              		.cfi_endproc
 792              	.LFE131:
 794              		.section	.text.Serial_SendBuff,"ax",%progbits
 795              		.align	1
 796              		.global	Serial_SendBuff
 797              		.syntax unified
 798              		.thumb
 799              		.thumb_func
 800              		.fpu fpv4-sp-d16
 802              	Serial_SendBuff:
 803              	.LFB132:
 227:Bsp/periph_serial.c **** 
 228:Bsp/periph_serial.c **** void Serial_SendBuff(Serial_List serial_id, uint8_t *Buff, uint16_t Len)
 229:Bsp/periph_serial.c **** {
 804              		.loc 1 229 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              	.LVL81:
 809 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 810              	.LCFI13:
 811              		.cfi_def_cfa_offset 24
 812              		.cfi_offset 4, -24
 813              		.cfi_offset 5, -20
ARM GAS  /tmp/cc2wDBwd.s 			page 19


 814              		.cfi_offset 6, -16
 815              		.cfi_offset 7, -12
 816              		.cfi_offset 8, -8
 817              		.cfi_offset 14, -4
 818 0004 0446     		mov	r4, r0
 819 0006 8846     		mov	r8, r1
 820 0008 1746     		mov	r7, r2
 821              	.LVL82:
 822              	.LBB2:
 230:Bsp/periph_serial.c **** 	for (uint8_t Buff_index = 0; Buff_index < Len; Buff_index++)
 823              		.loc 1 230 0
 824 000a 0026     		movs	r6, #0
 825 000c 10E0     		b	.L40
 826              	.LVL83:
 827              	.L41:
 231:Bsp/periph_serial.c **** 	{
 232:Bsp/periph_serial.c **** 		while (USART_GetFlagStatus(Serial_Port[serial_id], USART_FLAG_TC) == RESET)
 828              		.loc 1 232 0 discriminator 1
 829 000e 4021     		movs	r1, #64
 830 0010 0A4B     		ldr	r3, .L43
 831 0012 53F82400 		ldr	r0, [r3, r4, lsl #2]
 832 0016 FFF7FEFF 		bl	USART_GetFlagStatus
 833              	.LVL84:
 834 001a 0028     		cmp	r0, #0
 835 001c F7D0     		beq	.L41
 233:Bsp/periph_serial.c **** 			;
 234:Bsp/periph_serial.c **** 		USART_SendData(Serial_Port[serial_id], Buff[Buff_index]);
 836              		.loc 1 234 0 discriminator 2
 837 001e 18F80610 		ldrb	r1, [r8, r6]	@ zero_extendqisi2
 838 0022 064B     		ldr	r3, .L43
 839 0024 53F82400 		ldr	r0, [r3, r4, lsl #2]
 840 0028 FFF7FEFF 		bl	USART_SendData
 841              	.LVL85:
 230:Bsp/periph_serial.c **** 	{
 842              		.loc 1 230 0 discriminator 2
 843 002c 0136     		adds	r6, r6, #1
 844              	.LVL86:
 845 002e F6B2     		uxtb	r6, r6
 846              	.LVL87:
 847              	.L40:
 230:Bsp/periph_serial.c **** 	{
 848              		.loc 1 230 0 is_stmt 0 discriminator 1
 849 0030 B3B2     		uxth	r3, r6
 850 0032 BB42     		cmp	r3, r7
 851 0034 EBD3     		bcc	.L41
 852              	.LBE2:
 235:Bsp/periph_serial.c **** 	}
 236:Bsp/periph_serial.c **** }
 853              		.loc 1 236 0 is_stmt 1
 854 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 855              	.LVL88:
 856              	.L44:
 857 003a 00BF     		.align	2
 858              	.L43:
 859 003c 00000000 		.word	.LANCHOR5
 860              		.cfi_endproc
 861              	.LFE132:
ARM GAS  /tmp/cc2wDBwd.s 			page 20


 863              		.section	.text.Serial_DMA_TX_IRQSetting,"ax",%progbits
 864              		.align	1
 865              		.global	Serial_DMA_TX_IRQSetting
 866              		.syntax unified
 867              		.thumb
 868              		.thumb_func
 869              		.fpu fpv4-sp-d16
 871              	Serial_DMA_TX_IRQSetting:
 872              	.LFB133:
 237:Bsp/periph_serial.c **** 
 238:Bsp/periph_serial.c **** void Serial_DMA_TX_IRQSetting(Serial_List serial_id)
 239:Bsp/periph_serial.c **** {
 873              		.loc 1 239 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 0
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877              	.LVL89:
 878 0000 38B5     		push	{r3, r4, r5, lr}
 879              	.LCFI14:
 880              		.cfi_def_cfa_offset 16
 881              		.cfi_offset 3, -16
 882              		.cfi_offset 4, -12
 883              		.cfi_offset 5, -8
 884              		.cfi_offset 14, -4
 885 0002 0446     		mov	r4, r0
 240:Bsp/periph_serial.c **** 	if (DMA_GetFlagStatus(Serial_DMA_TX_Stream[serial_id], DMA_TX_FinishFlag[serial_id]) == SET)
 886              		.loc 1 240 0
 887 0004 104B     		ldr	r3, .L49
 888 0006 53F82010 		ldr	r1, [r3, r0, lsl #2]
 889 000a 104B     		ldr	r3, .L49+4
 890 000c 53F82000 		ldr	r0, [r3, r0, lsl #2]
 891              	.LVL90:
 892 0010 FFF7FEFF 		bl	DMA_GetFlagStatus
 893              	.LVL91:
 894 0014 0128     		cmp	r0, #1
 895 0016 00D0     		beq	.L48
 896              	.L45:
 897 0018 38BD     		pop	{r3, r4, r5, pc}
 898              	.L48:
 241:Bsp/periph_serial.c **** 	{
 242:Bsp/periph_serial.c **** 		DMA_ClearFlag(Serial_DMA_TX_Stream[serial_id], DMA_TX_FinishFlag[serial_id]);
 899              		.loc 1 242 0
 900 001a 0C4B     		ldr	r3, .L49+4
 901 001c 53F82450 		ldr	r5, [r3, r4, lsl #2]
 902 0020 094B     		ldr	r3, .L49
 903 0022 53F82410 		ldr	r1, [r3, r4, lsl #2]
 904 0026 2846     		mov	r0, r5
 905 0028 FFF7FEFF 		bl	DMA_ClearFlag
 906              	.LVL92:
 243:Bsp/periph_serial.c **** 		DMA_Cmd(Serial_DMA_TX_Stream[serial_id], DISABLE);
 907              		.loc 1 243 0
 908 002c 0021     		movs	r1, #0
 909 002e 2846     		mov	r0, r5
 910 0030 FFF7FEFF 		bl	DMA_Cmd
 911              	.LVL93:
 244:Bsp/periph_serial.c **** 
 245:Bsp/periph_serial.c **** 		USART_ITConfig(Serial_Port[serial_id], USART_IT_TC, ENABLE);
ARM GAS  /tmp/cc2wDBwd.s 			page 21


 912              		.loc 1 245 0
 913 0034 0122     		movs	r2, #1
 914 0036 40F22661 		movw	r1, #1574
 915 003a 054B     		ldr	r3, .L49+8
 916 003c 53F82400 		ldr	r0, [r3, r4, lsl #2]
 917 0040 FFF7FEFF 		bl	USART_ITConfig
 918              	.LVL94:
 246:Bsp/periph_serial.c **** 	}
 247:Bsp/periph_serial.c **** }
 919              		.loc 1 247 0
 920 0044 E8E7     		b	.L45
 921              	.L50:
 922 0046 00BF     		.align	2
 923              	.L49:
 924 0048 00000000 		.word	.LANCHOR13
 925 004c 00000000 		.word	.LANCHOR11
 926 0050 00000000 		.word	.LANCHOR5
 927              		.cfi_endproc
 928              	.LFE133:
 930              		.section	.text.Serial_DMA_SendBuff,"ax",%progbits
 931              		.align	1
 932              		.global	Serial_DMA_SendBuff
 933              		.syntax unified
 934              		.thumb
 935              		.thumb_func
 936              		.fpu fpv4-sp-d16
 938              	Serial_DMA_SendBuff:
 939              	.LFB134:
 248:Bsp/periph_serial.c **** 
 249:Bsp/periph_serial.c **** void Serial_DMA_SendBuff(Serial_List serial_id, uint16_t len)
 250:Bsp/periph_serial.c **** {
 940              		.loc 1 250 0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944              	.LVL95:
 945 0000 38B5     		push	{r3, r4, r5, lr}
 946              	.LCFI15:
 947              		.cfi_def_cfa_offset 16
 948              		.cfi_offset 3, -16
 949              		.cfi_offset 4, -12
 950              		.cfi_offset 5, -8
 951              		.cfi_offset 14, -4
 952 0002 0D46     		mov	r5, r1
 251:Bsp/periph_serial.c **** 	DMA_ClearFlag(Serial_DMA_TX_Stream[serial_id], DMA_TX_FinishFlag[serial_id]);
 953              		.loc 1 251 0
 954 0004 084B     		ldr	r3, .L53
 955 0006 53F82040 		ldr	r4, [r3, r0, lsl #2]
 956 000a 084B     		ldr	r3, .L53+4
 957 000c 53F82010 		ldr	r1, [r3, r0, lsl #2]
 958              	.LVL96:
 959 0010 2046     		mov	r0, r4
 960              	.LVL97:
 961 0012 FFF7FEFF 		bl	DMA_ClearFlag
 962              	.LVL98:
 252:Bsp/periph_serial.c **** 	DMA_SetCurrDataCounter(Serial_DMA_TX_Stream[serial_id], len);
 963              		.loc 1 252 0
ARM GAS  /tmp/cc2wDBwd.s 			page 22


 964 0016 2946     		mov	r1, r5
 965 0018 2046     		mov	r0, r4
 966 001a FFF7FEFF 		bl	DMA_SetCurrDataCounter
 967              	.LVL99:
 253:Bsp/periph_serial.c **** 	DMA_Cmd(Serial_DMA_TX_Stream[serial_id], ENABLE);
 968              		.loc 1 253 0
 969 001e 0121     		movs	r1, #1
 970 0020 2046     		mov	r0, r4
 971 0022 FFF7FEFF 		bl	DMA_Cmd
 972              	.LVL100:
 973 0026 38BD     		pop	{r3, r4, r5, pc}
 974              	.L54:
 975              		.align	2
 976              	.L53:
 977 0028 00000000 		.word	.LANCHOR11
 978 002c 00000000 		.word	.LANCHOR13
 979              		.cfi_endproc
 980              	.LFE134:
 982              		.section	.text.Serial_DMA_WaitFinish,"ax",%progbits
 983              		.align	1
 984              		.global	Serial_DMA_WaitFinish
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 988              		.fpu fpv4-sp-d16
 990              	Serial_DMA_WaitFinish:
 991              	.LFB135:
 254:Bsp/periph_serial.c **** }
 255:Bsp/periph_serial.c **** 
 256:Bsp/periph_serial.c **** void Serial_DMA_WaitFinish(Serial_List serial_id)
 257:Bsp/periph_serial.c **** {
 992              		.loc 1 257 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
 996              	.LVL101:
 997 0000 38B5     		push	{r3, r4, r5, lr}
 998              	.LCFI16:
 999              		.cfi_def_cfa_offset 16
 1000              		.cfi_offset 3, -16
 1001              		.cfi_offset 4, -12
 1002              		.cfi_offset 5, -8
 1003              		.cfi_offset 14, -4
 1004 0002 0446     		mov	r4, r0
 258:Bsp/periph_serial.c **** 	if (serial_id >= Serial_Port_Sum)
 1005              		.loc 1 258 0
 1006 0004 0328     		cmp	r0, #3
 1007 0006 0FD8     		bhi	.L55
 1008              	.LVL102:
 1009              	.L57:
 259:Bsp/periph_serial.c **** 		return;
 260:Bsp/periph_serial.c **** 
 261:Bsp/periph_serial.c **** 	while (DMA_GetFlagStatus(Serial_DMA_TX_Stream[serial_id], DMA_TX_FinishFlag[serial_id]) != SET)
 1010              		.loc 1 261 0 discriminator 1
 1011 0008 084B     		ldr	r3, .L59
 1012 000a 53F82410 		ldr	r1, [r3, r4, lsl #2]
 1013 000e 084B     		ldr	r3, .L59+4
ARM GAS  /tmp/cc2wDBwd.s 			page 23


 1014 0010 53F82400 		ldr	r0, [r3, r4, lsl #2]
 1015 0014 FFF7FEFF 		bl	DMA_GetFlagStatus
 1016              	.LVL103:
 1017 0018 0128     		cmp	r0, #1
 1018 001a F5D1     		bne	.L57
 262:Bsp/periph_serial.c **** 		;
 263:Bsp/periph_serial.c **** 	DMA_Cmd(Serial_DMA_TX_Stream[serial_id], DISABLE);
 1019              		.loc 1 263 0
 1020 001c 0021     		movs	r1, #0
 1021 001e 044B     		ldr	r3, .L59+4
 1022 0020 53F82400 		ldr	r0, [r3, r4, lsl #2]
 1023 0024 FFF7FEFF 		bl	DMA_Cmd
 1024              	.LVL104:
 1025              	.L55:
 1026 0028 38BD     		pop	{r3, r4, r5, pc}
 1027              	.L60:
 1028 002a 00BF     		.align	2
 1029              	.L59:
 1030 002c 00000000 		.word	.LANCHOR13
 1031 0030 00000000 		.word	.LANCHOR11
 1032              		.cfi_endproc
 1033              	.LFE135:
 1035              		.global	Serial_Port
 1036              		.global	IRQ_Callback
 1037              		.comm	Serial_RX_Buff,2048,4
 1038              		.comm	Serial_TX_Buff,2048,4
 1039              		.section	.bss.IRQ_Callback,"aw",%nobits
 1040              		.align	2
 1041              		.set	.LANCHOR0,. + 0
 1044              	IRQ_Callback:
 1045 0000 00000000 		.space	16
 1045      00000000 
 1045      00000000 
 1045      00000000 
 1046              		.section	.data.Serial_Port,"aw",%progbits
 1047              		.align	2
 1048              		.set	.LANCHOR5,. + 0
 1051              	Serial_Port:
 1052 0000 00100140 		.word	1073811456
 1053 0004 00440040 		.word	1073759232
 1054 0008 00480040 		.word	1073760256
 1055 000c 00140140 		.word	1073812480
 1056              		.section	.rodata.DMA_TX_FinishFlag,"a",%progbits
 1057              		.align	2
 1058              		.set	.LANCHOR13,. + 0
 1061              	DMA_TX_FinishFlag:
 1062 0000 00000028 		.word	671088640
 1063 0004 00002020 		.word	538968064
 1064 0008 00000018 		.word	402653184
 1065 000c 00000028 		.word	671088640
 1066              		.section	.rodata.RCC_APBPeriphClockCmd,"a",%progbits
 1067              		.align	2
 1068              		.set	.LANCHOR2,. + 0
 1071              	RCC_APBPeriphClockCmd:
 1072 0000 00000000 		.word	RCC_APB2PeriphClockCmd
 1073 0004 00000000 		.word	RCC_APB1PeriphClockCmd
 1074 0008 00000000 		.word	RCC_APB1PeriphClockCmd
ARM GAS  /tmp/cc2wDBwd.s 			page 24


 1075 000c 00000000 		.word	RCC_APB2PeriphClockCmd
 1076              		.section	.rodata.RCC_APBPeriph_SerialCLK,"a",%progbits
 1077              		.align	2
 1078              		.set	.LANCHOR3,. + 0
 1081              	RCC_APBPeriph_SerialCLK:
 1082 0000 10000000 		.word	16
 1083 0004 00000200 		.word	131072
 1084 0008 00000400 		.word	262144
 1085 000c 20000000 		.word	32
 1086              		.section	.rodata.Serial_DMA_CLK,"a",%progbits
 1087              		.align	2
 1088              		.set	.LANCHOR9,. + 0
 1091              	Serial_DMA_CLK:
 1092 0000 00004000 		.word	4194304
 1093 0004 00002000 		.word	2097152
 1094 0008 00002000 		.word	2097152
 1095 000c 00004000 		.word	4194304
 1096              		.section	.rodata.Serial_DMA_RX_Channel,"a",%progbits
 1097              		.align	2
 1098              		.set	.LANCHOR7,. + 0
 1101              	Serial_DMA_RX_Channel:
 1102 0000 00000008 		.word	134217728
 1103 0004 00000008 		.word	134217728
 1104 0008 00000008 		.word	134217728
 1105 000c 0000000A 		.word	167772160
 1106              		.section	.rodata.Serial_DMA_RX_Stream,"a",%progbits
 1107              		.align	2
 1108              		.set	.LANCHOR8,. + 0
 1111              	Serial_DMA_RX_Stream:
 1112 0000 88640240 		.word	1073898632
 1113 0004 88600240 		.word	1073897608
 1114 0008 28600240 		.word	1073897512
 1115 000c 28640240 		.word	1073898536
 1116              		.section	.rodata.Serial_DMA_TX_Channel,"a",%progbits
 1117              		.align	2
 1118              		.set	.LANCHOR10,. + 0
 1121              	Serial_DMA_TX_Channel:
 1122 0000 00000008 		.word	134217728
 1123 0004 00000008 		.word	134217728
 1124 0008 00000008 		.word	134217728
 1125 000c 0000000A 		.word	167772160
 1126              		.section	.rodata.Serial_DMA_TX_IRQ_Channel,"a",%progbits
 1127              		.align	2
 1128              		.set	.LANCHOR12,. + 0
 1131              	Serial_DMA_TX_IRQ_Channel:
 1132 0000 46       		.byte	70
 1133 0001 11       		.byte	17
 1134 0002 0E       		.byte	14
 1135 0003 46       		.byte	70
 1136              		.section	.rodata.Serial_DMA_TX_Stream,"a",%progbits
 1137              		.align	2
 1138              		.set	.LANCHOR11,. + 0
 1141              	Serial_DMA_TX_Stream:
 1142 0000 B8640240 		.word	1073898680
 1143 0004 A0600240 		.word	1073897632
 1144 0008 58600240 		.word	1073897560
 1145 000c B8640240 		.word	1073898680
ARM GAS  /tmp/cc2wDBwd.s 			page 25


 1146              		.section	.rodata.Serial_IO_Init,"a",%progbits
 1147              		.align	2
 1148              		.set	.LANCHOR1,. + 0
 1151              	Serial_IO_Init:
 1152 0000 00000000 		.word	GPIO_USART1_IO_Init
 1153 0004 00000000 		.word	GPIO_USART2_IO_Init
 1154 0008 00000000 		.word	GPIO_USART3_IO_Init
 1155 000c 00000000 		.word	GPIO_USART6_IO_Init
 1156              		.section	.rodata.Serial_RX_IRQ_Channel,"a",%progbits
 1157              		.align	2
 1158              		.set	.LANCHOR6,. + 0
 1161              	Serial_RX_IRQ_Channel:
 1162 0000 25       		.byte	37
 1163 0001 26       		.byte	38
 1164 0002 27       		.byte	39
 1165 0003 47       		.byte	71
 1166              		.section	.rodata.Serial_Structure_Setting,"a",%progbits
 1167              		.align	2
 1168              		.set	.LANCHOR4,. + 0
 1171              	Serial_Structure_Setting:
 1172 0000 00000000 		.word	USART_Structure_Normal_Setting
 1173 0004 00000000 		.word	USART_Structure_SBus_Setting
 1174              		.text
 1175              	.Letext0:
 1176              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1177              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1178              		.file 4 "F4_CORE/core_cm4.h"
 1179              		.file 5 "USER/system_stm32f4xx.h"
 1180              		.file 6 "USER/stm32f4xx.h"
 1181              		.file 7 "FWLIB/inc/stm32f4xx_dma.h"
 1182              		.file 8 "FWLIB/inc/stm32f4xx_usart.h"
 1183              		.file 9 "Bsp/periph_dma.h"
 1184              		.file 10 "/usr/include/newlib/sys/lock.h"
 1185              		.file 11 "/usr/include/newlib/sys/_types.h"
 1186              		.file 12 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1187              		.file 13 "/usr/include/newlib/sys/reent.h"
 1188              		.file 14 "Bsp/periph_serial.h"
 1189              		.file 15 "Bsp/periph_nvic.h"
ARM GAS  /tmp/cc2wDBwd.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 periph_serial.c
     /tmp/cc2wDBwd.s:18     .text.USART_Structure_Normal_Setting:0000000000000000 $t
     /tmp/cc2wDBwd.s:24     .text.USART_Structure_Normal_Setting:0000000000000000 USART_Structure_Normal_Setting
     /tmp/cc2wDBwd.s:52     .text.USART_Structure_SBus_Setting:0000000000000000 $t
     /tmp/cc2wDBwd.s:58     .text.USART_Structure_SBus_Setting:0000000000000000 USART_Structure_SBus_Setting
     /tmp/cc2wDBwd.s:88     .text.Serial_Get_IRQ_RxCallback:0000000000000000 $t
     /tmp/cc2wDBwd.s:95     .text.Serial_Get_IRQ_RxCallback:0000000000000000 Serial_Get_IRQ_RxCallback
     /tmp/cc2wDBwd.s:121    .text.Serial_Get_IRQ_RxCallback:0000000000000010 $d
     /tmp/cc2wDBwd.s:126    .text.Serial_Set_IRQ_Callback:0000000000000000 $t
     /tmp/cc2wDBwd.s:133    .text.Serial_Set_IRQ_Callback:0000000000000000 Serial_Set_IRQ_Callback
     /tmp/cc2wDBwd.s:161    .text.Serial_Set_IRQ_Callback:0000000000000014 $d
     /tmp/cc2wDBwd.s:166    .text.Serial_IRQ_RX_Init:0000000000000000 $t
     /tmp/cc2wDBwd.s:173    .text.Serial_IRQ_RX_Init:0000000000000000 Serial_IRQ_RX_Init
     /tmp/cc2wDBwd.s:253    .text.Serial_IRQ_RX_Init:000000000000006c $d
     /tmp/cc2wDBwd.s:263    .text.Serial_DMA_RX_Init:0000000000000000 $t
     /tmp/cc2wDBwd.s:270    .text.Serial_DMA_RX_Init:0000000000000000 Serial_DMA_RX_Init
     /tmp/cc2wDBwd.s:396    .text.Serial_DMA_RX_Init:00000000000000d4 $d
     /tmp/cc2wDBwd.s:409    .text.Serial_DMA_TX_Init:0000000000000000 $t
     /tmp/cc2wDBwd.s:416    .text.Serial_DMA_TX_Init:0000000000000000 Serial_DMA_TX_Init
     /tmp/cc2wDBwd.s:522    .text.Serial_DMA_TX_Init:00000000000000a4 $d
     /tmp/cc2wDBwd.s:535    .text.Serial_Deinit:0000000000000000 $t
     /tmp/cc2wDBwd.s:542    .text.Serial_Deinit:0000000000000000 Serial_Deinit
     /tmp/cc2wDBwd.s:612    .text.Serial_Deinit:0000000000000064 $d
     /tmp/cc2wDBwd.s:618    .text.Serial_DMA_RXTX_Init:0000000000000000 $t
     /tmp/cc2wDBwd.s:625    .text.Serial_DMA_RXTX_Init:0000000000000000 Serial_DMA_RXTX_Init
     /tmp/cc2wDBwd.s:780    .text.Serial_DMA_RXTX_Init:0000000000000114 $d
     /tmp/cc2wDBwd.s:795    .text.Serial_SendBuff:0000000000000000 $t
     /tmp/cc2wDBwd.s:802    .text.Serial_SendBuff:0000000000000000 Serial_SendBuff
     /tmp/cc2wDBwd.s:859    .text.Serial_SendBuff:000000000000003c $d
     /tmp/cc2wDBwd.s:864    .text.Serial_DMA_TX_IRQSetting:0000000000000000 $t
     /tmp/cc2wDBwd.s:871    .text.Serial_DMA_TX_IRQSetting:0000000000000000 Serial_DMA_TX_IRQSetting
     /tmp/cc2wDBwd.s:924    .text.Serial_DMA_TX_IRQSetting:0000000000000048 $d
     /tmp/cc2wDBwd.s:931    .text.Serial_DMA_SendBuff:0000000000000000 $t
     /tmp/cc2wDBwd.s:938    .text.Serial_DMA_SendBuff:0000000000000000 Serial_DMA_SendBuff
     /tmp/cc2wDBwd.s:977    .text.Serial_DMA_SendBuff:0000000000000028 $d
     /tmp/cc2wDBwd.s:983    .text.Serial_DMA_WaitFinish:0000000000000000 $t
     /tmp/cc2wDBwd.s:990    .text.Serial_DMA_WaitFinish:0000000000000000 Serial_DMA_WaitFinish
     /tmp/cc2wDBwd.s:1030   .text.Serial_DMA_WaitFinish:000000000000002c $d
     /tmp/cc2wDBwd.s:1051   .data.Serial_Port:0000000000000000 Serial_Port
     /tmp/cc2wDBwd.s:1044   .bss.IRQ_Callback:0000000000000000 IRQ_Callback
                            *COM*:0000000000000800 Serial_RX_Buff
                            *COM*:0000000000000800 Serial_TX_Buff
     /tmp/cc2wDBwd.s:1040   .bss.IRQ_Callback:0000000000000000 $d
     /tmp/cc2wDBwd.s:1047   .data.Serial_Port:0000000000000000 $d
     /tmp/cc2wDBwd.s:1057   .rodata.DMA_TX_FinishFlag:0000000000000000 $d
     /tmp/cc2wDBwd.s:1061   .rodata.DMA_TX_FinishFlag:0000000000000000 DMA_TX_FinishFlag
     /tmp/cc2wDBwd.s:1067   .rodata.RCC_APBPeriphClockCmd:0000000000000000 $d
     /tmp/cc2wDBwd.s:1071   .rodata.RCC_APBPeriphClockCmd:0000000000000000 RCC_APBPeriphClockCmd
     /tmp/cc2wDBwd.s:1077   .rodata.RCC_APBPeriph_SerialCLK:0000000000000000 $d
     /tmp/cc2wDBwd.s:1081   .rodata.RCC_APBPeriph_SerialCLK:0000000000000000 RCC_APBPeriph_SerialCLK
     /tmp/cc2wDBwd.s:1087   .rodata.Serial_DMA_CLK:0000000000000000 $d
     /tmp/cc2wDBwd.s:1091   .rodata.Serial_DMA_CLK:0000000000000000 Serial_DMA_CLK
     /tmp/cc2wDBwd.s:1097   .rodata.Serial_DMA_RX_Channel:0000000000000000 $d
     /tmp/cc2wDBwd.s:1101   .rodata.Serial_DMA_RX_Channel:0000000000000000 Serial_DMA_RX_Channel
     /tmp/cc2wDBwd.s:1107   .rodata.Serial_DMA_RX_Stream:0000000000000000 $d
     /tmp/cc2wDBwd.s:1111   .rodata.Serial_DMA_RX_Stream:0000000000000000 Serial_DMA_RX_Stream
ARM GAS  /tmp/cc2wDBwd.s 			page 27


     /tmp/cc2wDBwd.s:1117   .rodata.Serial_DMA_TX_Channel:0000000000000000 $d
     /tmp/cc2wDBwd.s:1121   .rodata.Serial_DMA_TX_Channel:0000000000000000 Serial_DMA_TX_Channel
     /tmp/cc2wDBwd.s:1127   .rodata.Serial_DMA_TX_IRQ_Channel:0000000000000000 $d
     /tmp/cc2wDBwd.s:1131   .rodata.Serial_DMA_TX_IRQ_Channel:0000000000000000 Serial_DMA_TX_IRQ_Channel
     /tmp/cc2wDBwd.s:1137   .rodata.Serial_DMA_TX_Stream:0000000000000000 $d
     /tmp/cc2wDBwd.s:1141   .rodata.Serial_DMA_TX_Stream:0000000000000000 Serial_DMA_TX_Stream
     /tmp/cc2wDBwd.s:1147   .rodata.Serial_IO_Init:0000000000000000 $d
     /tmp/cc2wDBwd.s:1151   .rodata.Serial_IO_Init:0000000000000000 Serial_IO_Init
     /tmp/cc2wDBwd.s:1157   .rodata.Serial_RX_IRQ_Channel:0000000000000000 $d
     /tmp/cc2wDBwd.s:1161   .rodata.Serial_RX_IRQ_Channel:0000000000000000 Serial_RX_IRQ_Channel
     /tmp/cc2wDBwd.s:1167   .rodata.Serial_Structure_Setting:0000000000000000 $d
     /tmp/cc2wDBwd.s:1171   .rodata.Serial_Structure_Setting:0000000000000000 Serial_Structure_Setting
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
USART_Init
USART_Cmd
USART_ITConfig
periph_nvic_Structure_Setting
USART_DMACmd
periph_DMA_Serial
periph_DMA_WithoutIRQ_Init
periph_DMA_WithIRQ_Init
USART_DeInit
USART_GetFlagStatus
USART_SendData
DMA_GetFlagStatus
DMA_ClearFlag
DMA_Cmd
DMA_SetCurrDataCounter
RCC_APB2PeriphClockCmd
RCC_APB1PeriphClockCmd
GPIO_USART1_IO_Init
GPIO_USART2_IO_Init
GPIO_USART3_IO_Init
GPIO_USART6_IO_Init
