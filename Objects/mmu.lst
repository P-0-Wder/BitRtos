ARM GAS  /tmp/ccTLp9DV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mmu.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MMU_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MMU_Init:
  26              	.LFB4:
  27              		.file 1 "SYS/memng/mmu.c"
   1:SYS/memng/mmu.c **** /*
   2:SYS/memng/mmu.c **** * copy from freeRTOS
   3:SYS/memng/mmu.c **** * coder : 8_B!T0
   4:SYS/memng/mmu.c **** */
   5:SYS/memng/mmu.c **** #include "mmu.h"
   6:SYS/memng/mmu.c **** 
   7:SYS/memng/mmu.c **** #pragma pack(BLOCK_ALIGMENT_SIZE)
   8:SYS/memng/mmu.c **** uint8_t Mem_Buff[PHY_MEM_SIZE] __attribute__((section(".ccmram")));
   9:SYS/memng/mmu.c **** #pragma pack()
  10:SYS/memng/mmu.c **** 
  11:SYS/memng/mmu.c **** Mem_Monitor_TypeDef Mem_Monitor;
  12:SYS/memng/mmu.c **** MemBlock_TypeDef MemStart;
  13:SYS/memng/mmu.c **** MemBlock_TypeDef *MemEnd;
  14:SYS/memng/mmu.c **** uint8_t trace;
  15:SYS/memng/mmu.c **** 
  16:SYS/memng/mmu.c **** static void MMU_InsertFreeBlock(MemBlock_TypeDef *pxBlockToInsert);
  17:SYS/memng/mmu.c **** static void MMU_Init(void);
  18:SYS/memng/mmu.c **** 
  19:SYS/memng/mmu.c **** Mem_Monitor_TypeDef MMU_Get_Monitor(void)
  20:SYS/memng/mmu.c **** {
  21:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxIterator;
  22:SYS/memng/mmu.c **** 
  23:SYS/memng/mmu.c ****     /* comput freeblock number */
  24:SYS/memng/mmu.c ****     for (pxIterator = &MemStart; pxIterator->nxtFree != MemEnd; pxIterator = pxIterator->nxtFree)
  25:SYS/memng/mmu.c ****     {
  26:SYS/memng/mmu.c ****         Mem_Monitor.FreeBlock_Num++;
  27:SYS/memng/mmu.c ****     }
  28:SYS/memng/mmu.c **** 
  29:SYS/memng/mmu.c ****     return Mem_Monitor;
  30:SYS/memng/mmu.c **** }
  31:SYS/memng/mmu.c **** 
ARM GAS  /tmp/ccTLp9DV.s 			page 2


  32:SYS/memng/mmu.c **** static void MMU_Init(void)
  33:SYS/memng/mmu.c **** {
  28              		.loc 1 33 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  34:SYS/memng/mmu.c ****     MemBlock_TypeDef *FstFreeBlock_tmp = NULL;
  33              		.loc 1 34 5 view .LVU1
  34              	.LVL0:
  35:SYS/memng/mmu.c **** 
  36:SYS/memng/mmu.c ****     Mem_Monitor.phy_size = PHY_MEM_SIZE;
  35              		.loc 1 36 5 view .LVU2
  36              		.loc 1 36 26 is_stmt 0 view .LVU3
  37 0000 134A     		ldr	r2, .L5
  38 0002 4FF48033 		mov	r3, #65536
  39 0006 1360     		str	r3, [r2]
  37:SYS/memng/mmu.c ****     Mem_Monitor.used_size = 0;
  40              		.loc 1 37 5 is_stmt 1 view .LVU4
  41              		.loc 1 37 27 is_stmt 0 view .LVU5
  42 0008 0023     		movs	r3, #0
  43 000a 5360     		str	r3, [r2, #4]
  38:SYS/memng/mmu.c ****     Mem_Monitor.FreeBlock_Num = 1;
  44              		.loc 1 38 5 is_stmt 1 view .LVU6
  45              		.loc 1 38 31 is_stmt 0 view .LVU7
  46 000c 0121     		movs	r1, #1
  47 000e 9182     		strh	r1, [r2, #20]	@ movhi
  39:SYS/memng/mmu.c **** 
  40:SYS/memng/mmu.c ****     for (uint32_t i = 0; i < PHY_MEM_SIZE; i++)
  48              		.loc 1 40 5 is_stmt 1 view .LVU8
  49              	.LBB2:
  50              		.loc 1 40 10 view .LVU9
  51              	.LVL1:
  52              	.L2:
  53              		.loc 1 40 5 is_stmt 0 discriminator 1 view .LVU10
  54 0010 B3F5803F 		cmp	r3, #65536
  55 0014 04D2     		bcs	.L4
  41:SYS/memng/mmu.c ****     {
  42:SYS/memng/mmu.c ****         Mem_Buff[i] = 0;
  56              		.loc 1 42 9 is_stmt 1 discriminator 3 view .LVU11
  57              		.loc 1 42 21 is_stmt 0 discriminator 3 view .LVU12
  58 0016 0F4A     		ldr	r2, .L5+4
  59 0018 0021     		movs	r1, #0
  60 001a D154     		strb	r1, [r2, r3]
  40:SYS/memng/mmu.c ****     {
  61              		.loc 1 40 45 discriminator 3 view .LVU13
  62 001c 0133     		adds	r3, r3, #1
  63              	.LVL2:
  40:SYS/memng/mmu.c ****     {
  64              		.loc 1 40 45 discriminator 3 view .LVU14
  65 001e F7E7     		b	.L2
  66              	.L4:
  40:SYS/memng/mmu.c ****     {
  67              		.loc 1 40 45 discriminator 3 view .LVU15
  68              	.LBE2:
  43:SYS/memng/mmu.c ****     }
  44:SYS/memng/mmu.c **** 
ARM GAS  /tmp/ccTLp9DV.s 			page 3


  45:SYS/memng/mmu.c ****     MemStart.nxtFree = (void *)Mem_Buff;
  69              		.loc 1 45 5 is_stmt 1 view .LVU16
  70              		.loc 1 45 22 is_stmt 0 view .LVU17
  71 0020 0D4A     		ldr	r2, .L5+8
  72 0022 0C4B     		ldr	r3, .L5+4
  73              	.LVL3:
  74              		.loc 1 45 22 view .LVU18
  75 0024 1360     		str	r3, [r2]
  46:SYS/memng/mmu.c ****     MemStart.size = 0;
  76              		.loc 1 46 5 is_stmt 1 view .LVU19
  77              		.loc 1 46 19 is_stmt 0 view .LVU20
  78 0026 0021     		movs	r1, #0
  79 0028 9180     		strh	r1, [r2, #4]	@ movhi
  47:SYS/memng/mmu.c **** 
  48:SYS/memng/mmu.c ****     MemEnd = (void *)(&Mem_Buff[PHY_MEM_SIZE] - sizeof(MemBlock_TypeDef));
  80              		.loc 1 48 5 is_stmt 1 view .LVU21
  81              		.loc 1 48 12 is_stmt 0 view .LVU22
  82 002a 0C4A     		ldr	r2, .L5+12
  83 002c 0C48     		ldr	r0, .L5+16
  84 002e 0260     		str	r2, [r0]
  49:SYS/memng/mmu.c ****     MemEnd->nxtFree = NULL;
  85              		.loc 1 49 5 is_stmt 1 view .LVU23
  86              		.loc 1 49 21 is_stmt 0 view .LVU24
  87 0030 1160     		str	r1, [r2]
  50:SYS/memng/mmu.c ****     MemEnd->size = 0;
  88              		.loc 1 50 5 is_stmt 1 view .LVU25
  89              		.loc 1 50 18 is_stmt 0 view .LVU26
  90 0032 4FF6FC70 		movw	r0, #65532
  91 0036 1952     		strh	r1, [r3, r0]	@ movhi
  51:SYS/memng/mmu.c **** 
  52:SYS/memng/mmu.c ****     Mem_Monitor.total_size = (MemBlock_Addr)MemEnd - (MemBlock_Addr)MemStart.nxtFree;
  92              		.loc 1 52 5 is_stmt 1 view .LVU27
  53:SYS/memng/mmu.c **** 
  54:SYS/memng/mmu.c ****     FstFreeBlock_tmp = MemStart.nxtFree;
  93              		.loc 1 54 5 view .LVU28
  94              	.LVL4:
  55:SYS/memng/mmu.c ****     FstFreeBlock_tmp->nxtFree = MemEnd;
  95              		.loc 1 55 5 view .LVU29
  96              		.loc 1 55 31 is_stmt 0 view .LVU30
  97 0038 1A60     		str	r2, [r3]
  56:SYS/memng/mmu.c **** 
  57:SYS/memng/mmu.c ****     Mem_Monitor.total_size -= sizeof(MemBlock_TypeDef);
  98              		.loc 1 57 5 is_stmt 1 view .LVU31
  99              		.loc 1 57 28 is_stmt 0 view .LVU32
 100 003a 054A     		ldr	r2, .L5
 101 003c 4FF6F071 		movw	r1, #65520
 102 0040 D160     		str	r1, [r2, #12]
  58:SYS/memng/mmu.c ****     FstFreeBlock_tmp->size = Mem_Monitor.total_size;
 103              		.loc 1 58 5 is_stmt 1 view .LVU33
 104              		.loc 1 58 28 is_stmt 0 view .LVU34
 105 0042 9980     		strh	r1, [r3, #4]	@ movhi
  59:SYS/memng/mmu.c **** 
  60:SYS/memng/mmu.c ****     Mem_Monitor.remain_size = Mem_Monitor.total_size;
 106              		.loc 1 60 5 is_stmt 1 view .LVU35
 107              		.loc 1 60 29 is_stmt 0 view .LVU36
 108 0044 9160     		str	r1, [r2, #8]
  61:SYS/memng/mmu.c **** 
ARM GAS  /tmp/ccTLp9DV.s 			page 4


  62:SYS/memng/mmu.c ****     Mem_Monitor.init = true;
 109              		.loc 1 62 5 is_stmt 1 view .LVU37
 110              		.loc 1 62 22 is_stmt 0 view .LVU38
 111 0046 0123     		movs	r3, #1
 112 0048 82F82030 		strb	r3, [r2, #32]
  63:SYS/memng/mmu.c **** }
 113              		.loc 1 63 1 view .LVU39
 114 004c 7047     		bx	lr
 115              	.L6:
 116 004e 00BF     		.align	2
 117              	.L5:
 118 0050 00000000 		.word	Mem_Monitor
 119 0054 00000000 		.word	Mem_Buff
 120 0058 00000000 		.word	MemStart
 121 005c F8FF0000 		.word	Mem_Buff+65528
 122 0060 00000000 		.word	MemEnd
 123              		.cfi_endproc
 124              	.LFE4:
 126              		.section	.text.MMU_InsertFreeBlock,"ax",%progbits
 127              		.align	1
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu fpv4-sp-d16
 133              	MMU_InsertFreeBlock:
 134              	.LVL5:
 135              	.LFB7:
  64:SYS/memng/mmu.c **** 
  65:SYS/memng/mmu.c **** void *MMU_Malloc(uint16_t size)
  66:SYS/memng/mmu.c **** {
  67:SYS/memng/mmu.c ****     MemBlock_TypeDef *PrvFreeBlock = NULL;
  68:SYS/memng/mmu.c ****     MemBlock_TypeDef *NxtFreeBlock = NULL;
  69:SYS/memng/mmu.c ****     MemBlock_TypeDef *Block_Tmp = NULL;
  70:SYS/memng/mmu.c ****     void *mem_addr = NULL;
  71:SYS/memng/mmu.c **** 
  72:SYS/memng/mmu.c ****     trace = 1;
  73:SYS/memng/mmu.c **** 
  74:SYS/memng/mmu.c ****     __asm("cpsid i");
  75:SYS/memng/mmu.c **** 
  76:SYS/memng/mmu.c ****     if (!Mem_Monitor.init)
  77:SYS/memng/mmu.c ****     {
  78:SYS/memng/mmu.c ****         MMU_Init();
  79:SYS/memng/mmu.c ****     }
  80:SYS/memng/mmu.c **** 
  81:SYS/memng/mmu.c ****     size += sizeof(MemBlock_TypeDef);
  82:SYS/memng/mmu.c **** 
  83:SYS/memng/mmu.c ****     if (size < Mem_Monitor.remain_size)
  84:SYS/memng/mmu.c ****     {
  85:SYS/memng/mmu.c ****         /* aligment request byte number */
  86:SYS/memng/mmu.c ****         size += (size % BLOCK_ALIGMENT_SIZE);
  87:SYS/memng/mmu.c **** 
  88:SYS/memng/mmu.c ****         PrvFreeBlock = &MemStart;
  89:SYS/memng/mmu.c ****         Block_Tmp = MemStart.nxtFree;
  90:SYS/memng/mmu.c **** 
  91:SYS/memng/mmu.c ****         while ((Block_Tmp->size < size) && (Block_Tmp->nxtFree != NULL))
  92:SYS/memng/mmu.c ****         {
  93:SYS/memng/mmu.c ****             PrvFreeBlock = Block_Tmp;
ARM GAS  /tmp/ccTLp9DV.s 			page 5


  94:SYS/memng/mmu.c **** 
  95:SYS/memng/mmu.c ****             if (((uint32_t)Block_Tmp->nxtFree & 0xF0000000) == (uint32_t)Mem_Buff)
  96:SYS/memng/mmu.c ****             {
  97:SYS/memng/mmu.c ****                 Block_Tmp = Block_Tmp->nxtFree;
  98:SYS/memng/mmu.c ****             }
  99:SYS/memng/mmu.c ****         }
 100:SYS/memng/mmu.c **** 
 101:SYS/memng/mmu.c ****         if ((((uint32_t)Block_Tmp & 0xF0000000) == (uint32_t)Mem_Buff) && (Block_Tmp != MemEnd))
 102:SYS/memng/mmu.c ****         {
 103:SYS/memng/mmu.c ****             Mem_Monitor.req_t++;
 104:SYS/memng/mmu.c **** 
 105:SYS/memng/mmu.c ****             mem_addr = (void *)(((uint8_t *)Block_Tmp) + sizeof(MemBlock_TypeDef));
 106:SYS/memng/mmu.c **** 
 107:SYS/memng/mmu.c ****             PrvFreeBlock->nxtFree = Block_Tmp->nxtFree;
 108:SYS/memng/mmu.c **** 
 109:SYS/memng/mmu.c ****             if ((Block_Tmp->size - size) > MINIMUM_BLOCK_SIZE)
 110:SYS/memng/mmu.c ****             {
 111:SYS/memng/mmu.c ****                 NxtFreeBlock = (void *)(((uint8_t *)Block_Tmp) + size);
 112:SYS/memng/mmu.c ****                 NxtFreeBlock->size = Block_Tmp->size - size - sizeof(MemBlock_TypeDef);
 113:SYS/memng/mmu.c ****                 Block_Tmp->size = size;
 114:SYS/memng/mmu.c ****             }
 115:SYS/memng/mmu.c **** 
 116:SYS/memng/mmu.c ****             Mem_Monitor.remain_size -= size;
 117:SYS/memng/mmu.c ****             Mem_Monitor.used_size += size;
 118:SYS/memng/mmu.c **** 
 119:SYS/memng/mmu.c ****             MMU_InsertFreeBlock(NxtFreeBlock);
 120:SYS/memng/mmu.c **** 
 121:SYS/memng/mmu.c ****             Block_Tmp->nxtFree = NULL;
 122:SYS/memng/mmu.c ****         }
 123:SYS/memng/mmu.c ****     }
 124:SYS/memng/mmu.c **** 
 125:SYS/memng/mmu.c ****     __asm("cpsie i");
 126:SYS/memng/mmu.c **** 
 127:SYS/memng/mmu.c ****     Mem_Monitor.FreeBlock = &MemStart;
 128:SYS/memng/mmu.c **** 
 129:SYS/memng/mmu.c ****     return mem_addr;
 130:SYS/memng/mmu.c **** }
 131:SYS/memng/mmu.c **** 
 132:SYS/memng/mmu.c **** void MMU_Free(void *ptr)
 133:SYS/memng/mmu.c **** {
 134:SYS/memng/mmu.c ****     uint8_t *puc = (uint8_t *)ptr;
 135:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxLink;
 136:SYS/memng/mmu.c **** 
 137:SYS/memng/mmu.c ****     trace = 2;
 138:SYS/memng/mmu.c **** 
 139:SYS/memng/mmu.c ****     if (((uint32_t)ptr & 0xF0000000) != (uint32_t)Mem_Buff)
 140:SYS/memng/mmu.c ****     {
 141:SYS/memng/mmu.c ****         while (1)
 142:SYS/memng/mmu.c ****             ;
 143:SYS/memng/mmu.c ****     }
 144:SYS/memng/mmu.c ****     __asm("cpsid i");
 145:SYS/memng/mmu.c ****     if (ptr != NULL)
 146:SYS/memng/mmu.c ****     {
 147:SYS/memng/mmu.c ****         Mem_Monitor.fre_t++;
 148:SYS/memng/mmu.c **** 
 149:SYS/memng/mmu.c ****         /* The memory being freed will have an BlockLink_t structure immediately
 150:SYS/memng/mmu.c **** 		before it. */
ARM GAS  /tmp/ccTLp9DV.s 			page 6


 151:SYS/memng/mmu.c ****         puc -= sizeof(MemBlock_TypeDef);
 152:SYS/memng/mmu.c **** 
 153:SYS/memng/mmu.c ****         /* This casting is to keep the compiler from issuing warnings. */
 154:SYS/memng/mmu.c ****         pxLink = (void *)puc;
 155:SYS/memng/mmu.c **** 
 156:SYS/memng/mmu.c ****         if (pxLink->nxtFree == NULL)
 157:SYS/memng/mmu.c ****         {
 158:SYS/memng/mmu.c ****             //pxLink->size &= ~xBlockAllocatedBit;
 159:SYS/memng/mmu.c **** 
 160:SYS/memng/mmu.c ****             /* Add this block to the list of free blocks. */
 161:SYS/memng/mmu.c ****             Mem_Monitor.used_size -= pxLink->size;
 162:SYS/memng/mmu.c ****             Mem_Monitor.remain_size += pxLink->size;
 163:SYS/memng/mmu.c **** 
 164:SYS/memng/mmu.c ****             if (Mem_Monitor.remain_size > Mem_Monitor.total_size)
 165:SYS/memng/mmu.c ****             {
 166:SYS/memng/mmu.c ****                 while (1)
 167:SYS/memng/mmu.c ****                     ;
 168:SYS/memng/mmu.c ****             }
 169:SYS/memng/mmu.c **** 
 170:SYS/memng/mmu.c ****             //traceFREE(pv, pxLink->size);
 171:SYS/memng/mmu.c ****             MMU_InsertFreeBlock(((MemBlock_TypeDef *)pxLink));
 172:SYS/memng/mmu.c ****         }
 173:SYS/memng/mmu.c ****     }
 174:SYS/memng/mmu.c ****     __asm("cpsie i");
 175:SYS/memng/mmu.c **** 
 176:SYS/memng/mmu.c ****     ptr = NULL;
 177:SYS/memng/mmu.c **** }
 178:SYS/memng/mmu.c **** 
 179:SYS/memng/mmu.c **** static void MMU_InsertFreeBlock(MemBlock_TypeDef *pxBlockToInsert)
 180:SYS/memng/mmu.c **** {
 136              		.loc 1 180 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 181:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxIterator;
 141              		.loc 1 181 5 view .LVU41
 182:SYS/memng/mmu.c ****     uint8_t *puc;
 142              		.loc 1 182 5 view .LVU42
 183:SYS/memng/mmu.c **** 
 184:SYS/memng/mmu.c ****     /* Iterate through the list until a block is found that has a higher address
 185:SYS/memng/mmu.c ****      * than the block being inserted. */
 186:SYS/memng/mmu.c ****     for (pxIterator = &MemStart; pxIterator->nxtFree < pxBlockToInsert; pxIterator = pxIterator->nx
 143              		.loc 1 186 5 view .LVU43
 144              		.loc 1 186 21 is_stmt 0 view .LVU44
 145 0000 194B     		ldr	r3, .L23
 146              		.loc 1 186 5 view .LVU45
 147 0002 00E0     		b	.L8
 148              	.LVL6:
 149              	.L16:
 150              		.loc 1 186 84 view .LVU46
 151 0004 1346     		mov	r3, r2
 152              	.LVL7:
 153              	.L8:
 154              		.loc 1 186 44 discriminator 1 view .LVU47
 155 0006 1A68     		ldr	r2, [r3]
 156              		.loc 1 186 5 discriminator 1 view .LVU48
ARM GAS  /tmp/ccTLp9DV.s 			page 7


 157 0008 8242     		cmp	r2, r0
 158 000a FBD3     		bcc	.L16
 187:SYS/memng/mmu.c ****     {
 188:SYS/memng/mmu.c ****         /* Nothing to do here, just iterate to the right position. */
 189:SYS/memng/mmu.c ****     }
 190:SYS/memng/mmu.c **** 
 191:SYS/memng/mmu.c ****     if (pxIterator == NULL)
 159              		.loc 1 191 5 is_stmt 1 view .LVU49
 160              		.loc 1 191 8 is_stmt 0 view .LVU50
 161 000c 53B3     		cbz	r3, .L18
 180:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxIterator;
 162              		.loc 1 180 1 view .LVU51
 163 000e 10B4     		push	{r4}
 164              	.LCFI0:
 165              		.cfi_def_cfa_offset 4
 166              		.cfi_offset 4, -4
 192:SYS/memng/mmu.c ****         return;
 193:SYS/memng/mmu.c **** 
 194:SYS/memng/mmu.c ****     puc = (uint8_t *)pxIterator;
 167              		.loc 1 194 5 is_stmt 1 view .LVU52
 168              	.LVL8:
 195:SYS/memng/mmu.c **** 
 196:SYS/memng/mmu.c ****     if ((puc != (uint8_t *)&MemStart) && ((uint32_t)puc & 0xF0000000) != (uint32_t)Mem_Buff)
 169              		.loc 1 196 5 view .LVU53
 170              		.loc 1 196 8 is_stmt 0 view .LVU54
 171 0010 1549     		ldr	r1, .L23
 172 0012 8B42     		cmp	r3, r1
 173 0014 05D0     		beq	.L10
 174              		.loc 1 196 57 discriminator 1 view .LVU55
 175 0016 03F07044 		and	r4, r3, #-268435456
 176              		.loc 1 196 74 discriminator 1 view .LVU56
 177 001a 1449     		ldr	r1, .L23+4
 178              		.loc 1 196 39 discriminator 1 view .LVU57
 179 001c 8C42     		cmp	r4, r1
 180 001e 00D0     		beq	.L10
 181              	.L11:
 197:SYS/memng/mmu.c ****     {
 198:SYS/memng/mmu.c ****         while (1)
 182              		.loc 1 198 9 is_stmt 1 discriminator 1 view .LVU58
 199:SYS/memng/mmu.c ****             ;
 183              		.loc 1 199 13 discriminator 1 view .LVU59
 184 0020 FEE7     		b	.L11
 185              	.L10:
 200:SYS/memng/mmu.c ****     }
 201:SYS/memng/mmu.c **** 
 202:SYS/memng/mmu.c ****     if ((puc + pxIterator->size) == (uint8_t *)pxBlockToInsert)
 186              		.loc 1 202 5 view .LVU60
 187              		.loc 1 202 26 is_stmt 0 view .LVU61
 188 0022 9988     		ldrh	r1, [r3, #4]
 189              		.loc 1 202 14 view .LVU62
 190 0024 5C18     		adds	r4, r3, r1
 191              		.loc 1 202 8 view .LVU63
 192 0026 8442     		cmp	r4, r0
 193 0028 0AD0     		beq	.L21
 194              	.L12:
 203:SYS/memng/mmu.c ****     {
 204:SYS/memng/mmu.c ****         pxIterator->size += pxBlockToInsert->size;
ARM GAS  /tmp/ccTLp9DV.s 			page 8


 205:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 206:SYS/memng/mmu.c ****     }
 207:SYS/memng/mmu.c **** 
 208:SYS/memng/mmu.c ****     /* Do the block being inserted, and the block it is being inserted before
 209:SYS/memng/mmu.c **** 	make a contiguous block of memory? */
 210:SYS/memng/mmu.c ****     puc = (uint8_t *)pxBlockToInsert;
 195              		.loc 1 210 5 is_stmt 1 view .LVU64
 196              	.LVL9:
 211:SYS/memng/mmu.c **** 
 212:SYS/memng/mmu.c ****     if ((puc + pxBlockToInsert->size) == (uint8_t *)pxIterator->nxtFree)
 197              		.loc 1 212 5 view .LVU65
 198              		.loc 1 212 31 is_stmt 0 view .LVU66
 199 002a 8188     		ldrh	r1, [r0, #4]
 200              		.loc 1 212 14 view .LVU67
 201 002c 4418     		adds	r4, r0, r1
 202              		.loc 1 212 8 view .LVU68
 203 002e A242     		cmp	r2, r4
 204 0030 0BD0     		beq	.L22
 213:SYS/memng/mmu.c ****     {
 214:SYS/memng/mmu.c ****         if (pxIterator->nxtFree != MemEnd)
 215:SYS/memng/mmu.c ****         {
 216:SYS/memng/mmu.c ****             /* Form one big block from the two blocks. */
 217:SYS/memng/mmu.c ****             pxBlockToInsert->size += pxIterator->nxtFree->size;
 218:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = pxIterator->nxtFree->nxtFree;
 219:SYS/memng/mmu.c ****         }
 220:SYS/memng/mmu.c ****         else
 221:SYS/memng/mmu.c ****         {
 222:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = MemEnd;
 223:SYS/memng/mmu.c ****         }
 224:SYS/memng/mmu.c ****     }
 225:SYS/memng/mmu.c ****     else
 226:SYS/memng/mmu.c ****     {
 227:SYS/memng/mmu.c ****         pxBlockToInsert->nxtFree = pxIterator->nxtFree;
 205              		.loc 1 227 9 is_stmt 1 view .LVU69
 206              		.loc 1 227 34 is_stmt 0 view .LVU70
 207 0032 0260     		str	r2, [r0]
 208              	.L15:
 228:SYS/memng/mmu.c ****     }
 229:SYS/memng/mmu.c **** 
 230:SYS/memng/mmu.c ****     if (pxIterator != pxBlockToInsert)
 209              		.loc 1 230 5 is_stmt 1 view .LVU71
 210              		.loc 1 230 8 is_stmt 0 view .LVU72
 211 0034 9842     		cmp	r0, r3
 212 0036 00D0     		beq	.L7
 231:SYS/memng/mmu.c ****     {
 232:SYS/memng/mmu.c ****         pxIterator->nxtFree = pxBlockToInsert;
 213              		.loc 1 232 9 is_stmt 1 view .LVU73
 214              		.loc 1 232 29 is_stmt 0 view .LVU74
 215 0038 1860     		str	r0, [r3]
 216              	.L7:
 233:SYS/memng/mmu.c ****     }
 234:SYS/memng/mmu.c **** }
 217              		.loc 1 234 1 view .LVU75
 218 003a 5DF8044B 		ldr	r4, [sp], #4
 219              	.LCFI1:
 220              		.cfi_remember_state
 221              		.cfi_restore 4
ARM GAS  /tmp/ccTLp9DV.s 			page 9


 222              		.cfi_def_cfa_offset 0
 223 003e 7047     		bx	lr
 224              	.LVL10:
 225              	.L21:
 226              	.LCFI2:
 227              		.cfi_restore_state
 204:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 228              		.loc 1 204 9 is_stmt 1 view .LVU76
 204:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 229              		.loc 1 204 44 is_stmt 0 view .LVU77
 230 0040 8088     		ldrh	r0, [r0, #4]
 231              	.LVL11:
 204:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 232              		.loc 1 204 26 view .LVU78
 233 0042 0144     		add	r1, r1, r0
 234 0044 9980     		strh	r1, [r3, #4]	@ movhi
 205:SYS/memng/mmu.c ****     }
 235              		.loc 1 205 9 is_stmt 1 view .LVU79
 236              	.LVL12:
 205:SYS/memng/mmu.c ****     }
 237              		.loc 1 205 25 is_stmt 0 view .LVU80
 238 0046 1846     		mov	r0, r3
 239 0048 EFE7     		b	.L12
 240              	.LVL13:
 241              	.L22:
 214:SYS/memng/mmu.c ****         {
 242              		.loc 1 214 9 is_stmt 1 view .LVU81
 214:SYS/memng/mmu.c ****         {
 243              		.loc 1 214 33 is_stmt 0 view .LVU82
 244 004a 094C     		ldr	r4, .L23+8
 245 004c 2468     		ldr	r4, [r4]
 214:SYS/memng/mmu.c ****         {
 246              		.loc 1 214 12 view .LVU83
 247 004e A242     		cmp	r2, r4
 248 0050 06D0     		beq	.L14
 217:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = pxIterator->nxtFree->nxtFree;
 249              		.loc 1 217 13 is_stmt 1 view .LVU84
 217:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = pxIterator->nxtFree->nxtFree;
 250              		.loc 1 217 57 is_stmt 0 view .LVU85
 251 0052 9288     		ldrh	r2, [r2, #4]
 217:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = pxIterator->nxtFree->nxtFree;
 252              		.loc 1 217 35 view .LVU86
 253 0054 1144     		add	r1, r1, r2
 254 0056 8180     		strh	r1, [r0, #4]	@ movhi
 218:SYS/memng/mmu.c ****         }
 255              		.loc 1 218 13 is_stmt 1 view .LVU87
 218:SYS/memng/mmu.c ****         }
 256              		.loc 1 218 50 is_stmt 0 view .LVU88
 257 0058 1A68     		ldr	r2, [r3]
 218:SYS/memng/mmu.c ****         }
 258              		.loc 1 218 59 view .LVU89
 259 005a 1268     		ldr	r2, [r2]
 218:SYS/memng/mmu.c ****         }
 260              		.loc 1 218 38 view .LVU90
 261 005c 0260     		str	r2, [r0]
 262 005e E9E7     		b	.L15
 263              	.L14:
ARM GAS  /tmp/ccTLp9DV.s 			page 10


 222:SYS/memng/mmu.c ****         }
 264              		.loc 1 222 13 is_stmt 1 view .LVU91
 222:SYS/memng/mmu.c ****         }
 265              		.loc 1 222 38 is_stmt 0 view .LVU92
 266 0060 0460     		str	r4, [r0]
 267 0062 E7E7     		b	.L15
 268              	.LVL14:
 269              	.L18:
 270              	.LCFI3:
 271              		.cfi_def_cfa_offset 0
 272              		.cfi_restore 4
 222:SYS/memng/mmu.c ****         }
 273              		.loc 1 222 38 view .LVU93
 274 0064 7047     		bx	lr
 275              	.L24:
 276 0066 00BF     		.align	2
 277              	.L23:
 278 0068 00000000 		.word	MemStart
 279 006c 00000000 		.word	Mem_Buff
 280 0070 00000000 		.word	MemEnd
 281              		.cfi_endproc
 282              	.LFE7:
 284              		.section	.text.MMU_Get_Monitor,"ax",%progbits
 285              		.align	1
 286              		.global	MMU_Get_Monitor
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 290              		.fpu fpv4-sp-d16
 292              	MMU_Get_Monitor:
 293              	.LVL15:
 294              	.LFB3:
  20:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxIterator;
 295              		.loc 1 20 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
  20:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxIterator;
 300              		.loc 1 20 1 is_stmt 0 view .LVU95
 301 0000 70B4     		push	{r4, r5, r6}
 302              	.LCFI4:
 303              		.cfi_def_cfa_offset 12
 304              		.cfi_offset 4, -12
 305              		.cfi_offset 5, -8
 306              		.cfi_offset 6, -4
 307 0002 0646     		mov	r6, r0
  21:SYS/memng/mmu.c **** 
 308              		.loc 1 21 5 is_stmt 1 view .LVU96
  24:SYS/memng/mmu.c ****     {
 309              		.loc 1 24 5 view .LVU97
 310              	.LVL16:
  24:SYS/memng/mmu.c ****     {
 311              		.loc 1 24 21 is_stmt 0 view .LVU98
 312 0004 0B4A     		ldr	r2, .L30
 313              	.LVL17:
 314              	.L26:
ARM GAS  /tmp/ccTLp9DV.s 			page 11


  24:SYS/memng/mmu.c ****     {
 315              		.loc 1 24 44 discriminator 1 view .LVU99
 316 0006 1168     		ldr	r1, [r2]
  24:SYS/memng/mmu.c ****     {
 317              		.loc 1 24 54 discriminator 1 view .LVU100
 318 0008 0B4B     		ldr	r3, .L30+4
 319 000a 1B68     		ldr	r3, [r3]
  24:SYS/memng/mmu.c ****     {
 320              		.loc 1 24 5 discriminator 1 view .LVU101
 321 000c 9942     		cmp	r1, r3
 322 000e 05D0     		beq	.L29
  26:SYS/memng/mmu.c ****     }
 323              		.loc 1 26 9 is_stmt 1 discriminator 3 view .LVU102
  26:SYS/memng/mmu.c ****     }
 324              		.loc 1 26 20 is_stmt 0 discriminator 3 view .LVU103
 325 0010 0A49     		ldr	r1, .L30+8
 326 0012 8B8A     		ldrh	r3, [r1, #20]
  26:SYS/memng/mmu.c ****     }
 327              		.loc 1 26 34 discriminator 3 view .LVU104
 328 0014 0133     		adds	r3, r3, #1
 329 0016 8B82     		strh	r3, [r1, #20]	@ movhi
  24:SYS/memng/mmu.c ****     {
 330              		.loc 1 24 76 discriminator 3 view .LVU105
 331 0018 1268     		ldr	r2, [r2]
 332              	.LVL18:
  24:SYS/memng/mmu.c ****     {
 333              		.loc 1 24 76 discriminator 3 view .LVU106
 334 001a F4E7     		b	.L26
 335              	.L29:
  29:SYS/memng/mmu.c **** }
 336              		.loc 1 29 5 is_stmt 1 view .LVU107
  29:SYS/memng/mmu.c **** }
 337              		.loc 1 29 12 is_stmt 0 view .LVU108
 338 001c 3446     		mov	r4, r6
 339 001e 074D     		ldr	r5, .L30+8
 340 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 341              	.LVL19:
  29:SYS/memng/mmu.c **** }
 342              		.loc 1 29 12 view .LVU109
 343 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 344 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 345 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 346 0028 2B68     		ldr	r3, [r5]
 347 002a 2360     		str	r3, [r4]
  30:SYS/memng/mmu.c **** 
 348              		.loc 1 30 1 view .LVU110
 349 002c 3046     		mov	r0, r6
 350 002e 70BC     		pop	{r4, r5, r6}
 351              	.LCFI5:
 352              		.cfi_restore 6
 353              		.cfi_restore 5
 354              		.cfi_restore 4
 355              		.cfi_def_cfa_offset 0
 356              	.LVL20:
  30:SYS/memng/mmu.c **** 
 357              		.loc 1 30 1 view .LVU111
 358 0030 7047     		bx	lr
ARM GAS  /tmp/ccTLp9DV.s 			page 12


 359              	.L31:
 360 0032 00BF     		.align	2
 361              	.L30:
 362 0034 00000000 		.word	MemStart
 363 0038 00000000 		.word	MemEnd
 364 003c 00000000 		.word	Mem_Monitor
 365              		.cfi_endproc
 366              	.LFE3:
 368              		.section	.text.MMU_Malloc,"ax",%progbits
 369              		.align	1
 370              		.global	MMU_Malloc
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv4-sp-d16
 376              	MMU_Malloc:
 377              	.LVL21:
 378              	.LFB5:
  66:SYS/memng/mmu.c ****     MemBlock_TypeDef *PrvFreeBlock = NULL;
 379              		.loc 1 66 1 is_stmt 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
  66:SYS/memng/mmu.c ****     MemBlock_TypeDef *PrvFreeBlock = NULL;
 383              		.loc 1 66 1 is_stmt 0 view .LVU113
 384 0000 70B5     		push	{r4, r5, r6, lr}
 385              	.LCFI6:
 386              		.cfi_def_cfa_offset 16
 387              		.cfi_offset 4, -16
 388              		.cfi_offset 5, -12
 389              		.cfi_offset 6, -8
 390              		.cfi_offset 14, -4
 391 0002 0546     		mov	r5, r0
  67:SYS/memng/mmu.c ****     MemBlock_TypeDef *NxtFreeBlock = NULL;
 392              		.loc 1 67 5 is_stmt 1 view .LVU114
 393              	.LVL22:
  68:SYS/memng/mmu.c ****     MemBlock_TypeDef *Block_Tmp = NULL;
 394              		.loc 1 68 5 view .LVU115
  69:SYS/memng/mmu.c ****     void *mem_addr = NULL;
 395              		.loc 1 69 5 view .LVU116
  70:SYS/memng/mmu.c **** 
 396              		.loc 1 70 5 view .LVU117
  72:SYS/memng/mmu.c **** 
 397              		.loc 1 72 5 view .LVU118
  72:SYS/memng/mmu.c **** 
 398              		.loc 1 72 11 is_stmt 0 view .LVU119
 399 0004 2C4B     		ldr	r3, .L46
 400 0006 0122     		movs	r2, #1
 401 0008 1A70     		strb	r2, [r3]
  74:SYS/memng/mmu.c **** 
 402              		.loc 1 74 5 is_stmt 1 view .LVU120
 403              		.syntax unified
 404              	@ 74 "SYS/memng/mmu.c" 1
 405 000a 72B6     		cpsid i
 406              	@ 0 "" 2
  76:SYS/memng/mmu.c ****     {
 407              		.loc 1 76 5 view .LVU121
ARM GAS  /tmp/ccTLp9DV.s 			page 13


  76:SYS/memng/mmu.c ****     {
 408              		.loc 1 76 21 is_stmt 0 view .LVU122
 409              		.thumb
 410              		.syntax unified
 411 000c 2B4B     		ldr	r3, .L46+4
 412 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
  76:SYS/memng/mmu.c ****     {
 413              		.loc 1 76 8 view .LVU123
 414 0012 63B1     		cbz	r3, .L45
 415              	.LVL23:
 416              	.L33:
  81:SYS/memng/mmu.c **** 
 417              		.loc 1 81 5 is_stmt 1 view .LVU124
  81:SYS/memng/mmu.c **** 
 418              		.loc 1 81 10 is_stmt 0 view .LVU125
 419 0014 0835     		adds	r5, r5, #8
 420 0016 ABB2     		uxth	r3, r5
 421              	.LVL24:
  83:SYS/memng/mmu.c ****     {
 422              		.loc 1 83 5 is_stmt 1 view .LVU126
  83:SYS/memng/mmu.c ****     {
 423              		.loc 1 83 27 is_stmt 0 view .LVU127
 424 0018 284A     		ldr	r2, .L46+4
 425 001a 9268     		ldr	r2, [r2, #8]
  83:SYS/memng/mmu.c ****     {
 426              		.loc 1 83 8 view .LVU128
 427 001c 9342     		cmp	r3, r2
 428 001e 44D2     		bcs	.L40
  86:SYS/memng/mmu.c **** 
 429              		.loc 1 86 9 is_stmt 1 view .LVU129
  86:SYS/memng/mmu.c **** 
 430              		.loc 1 86 23 is_stmt 0 view .LVU130
 431 0020 03F00305 		and	r5, r3, #3
  86:SYS/memng/mmu.c **** 
 432              		.loc 1 86 14 view .LVU131
 433 0024 1D44     		add	r5, r5, r3
 434 0026 ADB2     		uxth	r5, r5
 435              	.LVL25:
  88:SYS/memng/mmu.c ****         Block_Tmp = MemStart.nxtFree;
 436              		.loc 1 88 9 is_stmt 1 view .LVU132
  89:SYS/memng/mmu.c **** 
 437              		.loc 1 89 9 view .LVU133
  89:SYS/memng/mmu.c **** 
 438              		.loc 1 89 19 is_stmt 0 view .LVU134
 439 0028 254A     		ldr	r2, .L46+8
 440 002a 1468     		ldr	r4, [r2]
 441              	.LVL26:
  91:SYS/memng/mmu.c ****         {
 442              		.loc 1 91 9 is_stmt 1 view .LVU135
  91:SYS/memng/mmu.c ****         {
 443              		.loc 1 91 15 is_stmt 0 view .LVU136
 444 002c 04E0     		b	.L35
 445              	.LVL27:
 446              	.L45:
  78:SYS/memng/mmu.c ****     }
 447              		.loc 1 78 9 is_stmt 1 view .LVU137
 448 002e FFF7FEFF 		bl	MMU_Init
ARM GAS  /tmp/ccTLp9DV.s 			page 14


 449              	.LVL28:
  78:SYS/memng/mmu.c ****     }
 450              		.loc 1 78 9 is_stmt 0 view .LVU138
 451 0032 EFE7     		b	.L33
 452              	.LVL29:
 453              	.L36:
  95:SYS/memng/mmu.c ****             {
 454              		.loc 1 95 16 view .LVU139
 455 0034 2246     		mov	r2, r4
 456 0036 1C46     		mov	r4, r3
 457              	.LVL30:
 458              	.L35:
  91:SYS/memng/mmu.c ****         {
 459              		.loc 1 91 26 view .LVU140
 460 0038 A388     		ldrh	r3, [r4, #4]
  91:SYS/memng/mmu.c ****         {
 461              		.loc 1 91 15 view .LVU141
 462 003a AB42     		cmp	r3, r5
 463 003c 08D2     		bcs	.L37
  91:SYS/memng/mmu.c ****         {
 464              		.loc 1 91 54 discriminator 1 view .LVU142
 465 003e 2368     		ldr	r3, [r4]
  91:SYS/memng/mmu.c ****         {
 466              		.loc 1 91 41 discriminator 1 view .LVU143
 467 0040 33B1     		cbz	r3, .L37
  93:SYS/memng/mmu.c **** 
 468              		.loc 1 93 13 is_stmt 1 view .LVU144
 469              	.LVL31:
  95:SYS/memng/mmu.c ****             {
 470              		.loc 1 95 13 view .LVU145
  95:SYS/memng/mmu.c ****             {
 471              		.loc 1 95 47 is_stmt 0 view .LVU146
 472 0042 03F07041 		and	r1, r3, #-268435456
  95:SYS/memng/mmu.c ****             {
 473              		.loc 1 95 64 view .LVU147
 474 0046 1F4A     		ldr	r2, .L46+12
  95:SYS/memng/mmu.c ****             {
 475              		.loc 1 95 16 view .LVU148
 476 0048 9142     		cmp	r1, r2
 477 004a F3D0     		beq	.L36
 478 004c 2346     		mov	r3, r4
 479 004e F1E7     		b	.L36
 480              	.LVL32:
 481              	.L37:
 101:SYS/memng/mmu.c ****         {
 482              		.loc 1 101 9 is_stmt 1 view .LVU149
 101:SYS/memng/mmu.c ****         {
 483              		.loc 1 101 35 is_stmt 0 view .LVU150
 484 0050 04F07041 		and	r1, r4, #-268435456
 101:SYS/memng/mmu.c ****         {
 485              		.loc 1 101 52 view .LVU151
 486 0054 1B4B     		ldr	r3, .L46+12
 101:SYS/memng/mmu.c ****         {
 487              		.loc 1 101 12 view .LVU152
 488 0056 9942     		cmp	r1, r3
 489 0058 29D1     		bne	.L41
 101:SYS/memng/mmu.c ****         {
ARM GAS  /tmp/ccTLp9DV.s 			page 15


 490              		.loc 1 101 86 discriminator 1 view .LVU153
 491 005a 1B4B     		ldr	r3, .L46+16
 492 005c 1B68     		ldr	r3, [r3]
 101:SYS/memng/mmu.c ****         {
 493              		.loc 1 101 72 discriminator 1 view .LVU154
 494 005e A342     		cmp	r3, r4
 495 0060 27D0     		beq	.L42
 103:SYS/memng/mmu.c **** 
 496              		.loc 1 103 13 is_stmt 1 view .LVU155
 103:SYS/memng/mmu.c **** 
 497              		.loc 1 103 24 is_stmt 0 view .LVU156
 498 0062 1649     		ldr	r1, .L46+4
 499 0064 8B69     		ldr	r3, [r1, #24]
 103:SYS/memng/mmu.c **** 
 500              		.loc 1 103 30 view .LVU157
 501 0066 0133     		adds	r3, r3, #1
 502 0068 8B61     		str	r3, [r1, #24]
 105:SYS/memng/mmu.c **** 
 503              		.loc 1 105 13 is_stmt 1 view .LVU158
 105:SYS/memng/mmu.c **** 
 504              		.loc 1 105 22 is_stmt 0 view .LVU159
 505 006a 2646     		mov	r6, r4
 506              	.LVL33:
 107:SYS/memng/mmu.c **** 
 507              		.loc 1 107 13 is_stmt 1 view .LVU160
 107:SYS/memng/mmu.c **** 
 508              		.loc 1 107 46 is_stmt 0 view .LVU161
 509 006c 56F8083B 		ldr	r3, [r6], #8
 510              	.LVL34:
 107:SYS/memng/mmu.c **** 
 511              		.loc 1 107 35 view .LVU162
 512 0070 1360     		str	r3, [r2]
 109:SYS/memng/mmu.c ****             {
 513              		.loc 1 109 13 is_stmt 1 view .LVU163
 109:SYS/memng/mmu.c ****             {
 514              		.loc 1 109 27 is_stmt 0 view .LVU164
 515 0072 A388     		ldrh	r3, [r4, #4]
 109:SYS/memng/mmu.c ****             {
 516              		.loc 1 109 34 view .LVU165
 517 0074 5A1B     		subs	r2, r3, r5
 518              	.LVL35:
 109:SYS/memng/mmu.c ****             {
 519              		.loc 1 109 16 view .LVU166
 520 0076 082A     		cmp	r2, #8
 521 0078 15DD     		ble	.L43
 111:SYS/memng/mmu.c ****                 NxtFreeBlock->size = Block_Tmp->size - size - sizeof(MemBlock_TypeDef);
 522              		.loc 1 111 17 is_stmt 1 view .LVU167
 111:SYS/memng/mmu.c ****                 NxtFreeBlock->size = Block_Tmp->size - size - sizeof(MemBlock_TypeDef);
 523              		.loc 1 111 30 is_stmt 0 view .LVU168
 524 007a 6019     		adds	r0, r4, r5
 525              	.LVL36:
 112:SYS/memng/mmu.c ****                 Block_Tmp->size = size;
 526              		.loc 1 112 17 is_stmt 1 view .LVU169
 112:SYS/memng/mmu.c ****                 Block_Tmp->size = size;
 527              		.loc 1 112 54 is_stmt 0 view .LVU170
 528 007c 93B2     		uxth	r3, r2
 112:SYS/memng/mmu.c ****                 Block_Tmp->size = size;
ARM GAS  /tmp/ccTLp9DV.s 			page 16


 529              		.loc 1 112 61 view .LVU171
 530 007e 083B     		subs	r3, r3, #8
 112:SYS/memng/mmu.c ****                 Block_Tmp->size = size;
 531              		.loc 1 112 36 view .LVU172
 532 0080 8380     		strh	r3, [r0, #4]	@ movhi
 113:SYS/memng/mmu.c ****             }
 533              		.loc 1 113 17 is_stmt 1 view .LVU173
 113:SYS/memng/mmu.c ****             }
 534              		.loc 1 113 33 is_stmt 0 view .LVU174
 535 0082 A580     		strh	r5, [r4, #4]	@ movhi
 536              	.LVL37:
 537              	.L39:
 116:SYS/memng/mmu.c ****             Mem_Monitor.used_size += size;
 538              		.loc 1 116 13 is_stmt 1 view .LVU175
 116:SYS/memng/mmu.c ****             Mem_Monitor.used_size += size;
 539              		.loc 1 116 37 is_stmt 0 view .LVU176
 540 0084 0D4B     		ldr	r3, .L46+4
 541 0086 9A68     		ldr	r2, [r3, #8]
 542 0088 521B     		subs	r2, r2, r5
 543 008a 9A60     		str	r2, [r3, #8]
 117:SYS/memng/mmu.c **** 
 544              		.loc 1 117 13 is_stmt 1 view .LVU177
 117:SYS/memng/mmu.c **** 
 545              		.loc 1 117 35 is_stmt 0 view .LVU178
 546 008c 5A68     		ldr	r2, [r3, #4]
 547 008e 1544     		add	r5, r5, r2
 548              	.LVL38:
 117:SYS/memng/mmu.c **** 
 549              		.loc 1 117 35 view .LVU179
 550 0090 5D60     		str	r5, [r3, #4]
 119:SYS/memng/mmu.c **** 
 551              		.loc 1 119 13 is_stmt 1 view .LVU180
 552 0092 FFF7FEFF 		bl	MMU_InsertFreeBlock
 553              	.LVL39:
 121:SYS/memng/mmu.c ****         }
 554              		.loc 1 121 13 view .LVU181
 121:SYS/memng/mmu.c ****         }
 555              		.loc 1 121 32 is_stmt 0 view .LVU182
 556 0096 0023     		movs	r3, #0
 557 0098 2360     		str	r3, [r4]
 558              	.LVL40:
 559              	.L34:
 125:SYS/memng/mmu.c **** 
 560              		.loc 1 125 5 is_stmt 1 view .LVU183
 561              		.syntax unified
 562              	@ 125 "SYS/memng/mmu.c" 1
 563 009a 62B6     		cpsie i
 564              	@ 0 "" 2
 127:SYS/memng/mmu.c **** 
 565              		.loc 1 127 5 view .LVU184
 127:SYS/memng/mmu.c **** 
 566              		.loc 1 127 27 is_stmt 0 view .LVU185
 567              		.thumb
 568              		.syntax unified
 569 009c 074B     		ldr	r3, .L46+4
 570 009e 084A     		ldr	r2, .L46+8
 571 00a0 1A61     		str	r2, [r3, #16]
ARM GAS  /tmp/ccTLp9DV.s 			page 17


 129:SYS/memng/mmu.c **** }
 572              		.loc 1 129 5 is_stmt 1 view .LVU186
 130:SYS/memng/mmu.c **** 
 573              		.loc 1 130 1 is_stmt 0 view .LVU187
 574 00a2 3046     		mov	r0, r6
 575 00a4 70BD     		pop	{r4, r5, r6, pc}
 576              	.LVL41:
 577              	.L43:
  68:SYS/memng/mmu.c ****     MemBlock_TypeDef *Block_Tmp = NULL;
 578              		.loc 1 68 23 view .LVU188
 579 00a6 0020     		movs	r0, #0
 580 00a8 ECE7     		b	.L39
 581              	.LVL42:
 582              	.L40:
  70:SYS/memng/mmu.c **** 
 583              		.loc 1 70 11 view .LVU189
 584 00aa 0026     		movs	r6, #0
 585 00ac F5E7     		b	.L34
 586              	.LVL43:
 587              	.L41:
  70:SYS/memng/mmu.c **** 
 588              		.loc 1 70 11 view .LVU190
 589 00ae 0026     		movs	r6, #0
 590 00b0 F3E7     		b	.L34
 591              	.L42:
 592 00b2 0026     		movs	r6, #0
 593 00b4 F1E7     		b	.L34
 594              	.L47:
 595 00b6 00BF     		.align	2
 596              	.L46:
 597 00b8 00000000 		.word	trace
 598 00bc 00000000 		.word	Mem_Monitor
 599 00c0 00000000 		.word	MemStart
 600 00c4 00000000 		.word	Mem_Buff
 601 00c8 00000000 		.word	MemEnd
 602              		.cfi_endproc
 603              	.LFE5:
 605              		.section	.text.MMU_Free,"ax",%progbits
 606              		.align	1
 607              		.global	MMU_Free
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu fpv4-sp-d16
 613              	MMU_Free:
 614              	.LVL44:
 615              	.LFB6:
 133:SYS/memng/mmu.c ****     uint8_t *puc = (uint8_t *)ptr;
 616              		.loc 1 133 1 is_stmt 1 view -0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 134:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxLink;
 620              		.loc 1 134 5 view .LVU192
 135:SYS/memng/mmu.c **** 
 621              		.loc 1 135 5 view .LVU193
 137:SYS/memng/mmu.c **** 
ARM GAS  /tmp/ccTLp9DV.s 			page 18


 622              		.loc 1 137 5 view .LVU194
 137:SYS/memng/mmu.c **** 
 623              		.loc 1 137 11 is_stmt 0 view .LVU195
 624 0000 144A     		ldr	r2, .L59
 625 0002 0221     		movs	r1, #2
 626 0004 1170     		strb	r1, [r2]
 139:SYS/memng/mmu.c ****     {
 627              		.loc 1 139 5 is_stmt 1 view .LVU196
 139:SYS/memng/mmu.c ****     {
 628              		.loc 1 139 24 is_stmt 0 view .LVU197
 629 0006 00F07041 		and	r1, r0, #-268435456
 139:SYS/memng/mmu.c ****     {
 630              		.loc 1 139 41 view .LVU198
 631 000a 134A     		ldr	r2, .L59+4
 139:SYS/memng/mmu.c ****     {
 632              		.loc 1 139 8 view .LVU199
 633 000c 9142     		cmp	r1, r2
 634 000e 00D0     		beq	.L49
 635              	.L50:
 141:SYS/memng/mmu.c ****             ;
 636              		.loc 1 141 9 is_stmt 1 discriminator 1 view .LVU200
 142:SYS/memng/mmu.c ****     }
 637              		.loc 1 142 13 discriminator 1 view .LVU201
 638 0010 FEE7     		b	.L50
 639              	.L49:
 640 0012 0346     		mov	r3, r0
 144:SYS/memng/mmu.c ****     if (ptr != NULL)
 641              		.loc 1 144 5 view .LVU202
 642              		.syntax unified
 643              	@ 144 "SYS/memng/mmu.c" 1
 644 0014 72B6     		cpsid i
 645              	@ 0 "" 2
 145:SYS/memng/mmu.c ****     {
 646              		.loc 1 145 5 view .LVU203
 145:SYS/memng/mmu.c ****     {
 647              		.loc 1 145 8 is_stmt 0 view .LVU204
 648              		.thumb
 649              		.syntax unified
 650 0016 38B1     		cbz	r0, .L55
 147:SYS/memng/mmu.c **** 
 651              		.loc 1 147 9 is_stmt 1 view .LVU205
 147:SYS/memng/mmu.c **** 
 652              		.loc 1 147 20 is_stmt 0 view .LVU206
 653 0018 1049     		ldr	r1, .L59+8
 654 001a CA69     		ldr	r2, [r1, #28]
 147:SYS/memng/mmu.c **** 
 655              		.loc 1 147 26 view .LVU207
 656 001c 0132     		adds	r2, r2, #1
 657 001e CA61     		str	r2, [r1, #28]
 151:SYS/memng/mmu.c **** 
 658              		.loc 1 151 9 is_stmt 1 view .LVU208
 151:SYS/memng/mmu.c **** 
 659              		.loc 1 151 13 is_stmt 0 view .LVU209
 660 0020 0838     		subs	r0, r0, #8
 661              	.LVL45:
 154:SYS/memng/mmu.c **** 
 662              		.loc 1 154 9 is_stmt 1 view .LVU210
ARM GAS  /tmp/ccTLp9DV.s 			page 19


 156:SYS/memng/mmu.c ****         {
 663              		.loc 1 156 9 view .LVU211
 156:SYS/memng/mmu.c ****         {
 664              		.loc 1 156 19 is_stmt 0 view .LVU212
 665 0022 53F8082C 		ldr	r2, [r3, #-8]
 156:SYS/memng/mmu.c ****         {
 666              		.loc 1 156 12 view .LVU213
 667 0026 0AB1     		cbz	r2, .L58
 668              	.LVL46:
 669              	.L55:
 174:SYS/memng/mmu.c **** 
 670              		.loc 1 174 5 is_stmt 1 view .LVU214
 671              		.syntax unified
 672              	@ 174 "SYS/memng/mmu.c" 1
 673 0028 62B6     		cpsie i
 674              	@ 0 "" 2
 176:SYS/memng/mmu.c **** }
 675              		.loc 1 176 5 view .LVU215
 676              	.LVL47:
 174:SYS/memng/mmu.c **** 
 677              		.loc 1 174 5 is_stmt 0 view .LVU216
 678              		.thumb
 679              		.syntax unified
 680 002a 7047     		bx	lr
 681              	.LVL48:
 682              	.L58:
 133:SYS/memng/mmu.c ****     uint8_t *puc = (uint8_t *)ptr;
 683              		.loc 1 133 1 view .LVU217
 684 002c 10B5     		push	{r4, lr}
 685              	.LCFI7:
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 4, -8
 688              		.cfi_offset 14, -4
 161:SYS/memng/mmu.c ****             Mem_Monitor.remain_size += pxLink->size;
 689              		.loc 1 161 13 is_stmt 1 view .LVU218
 161:SYS/memng/mmu.c ****             Mem_Monitor.remain_size += pxLink->size;
 690              		.loc 1 161 44 is_stmt 0 view .LVU219
 691 002e 33F8044C 		ldrh	r4, [r3, #-4]
 161:SYS/memng/mmu.c ****             Mem_Monitor.remain_size += pxLink->size;
 692              		.loc 1 161 35 view .LVU220
 693 0032 0A46     		mov	r2, r1
 694 0034 4968     		ldr	r1, [r1, #4]
 695 0036 091B     		subs	r1, r1, r4
 696 0038 5160     		str	r1, [r2, #4]
 162:SYS/memng/mmu.c **** 
 697              		.loc 1 162 13 is_stmt 1 view .LVU221
 162:SYS/memng/mmu.c **** 
 698              		.loc 1 162 46 is_stmt 0 view .LVU222
 699 003a 33F8043C 		ldrh	r3, [r3, #-4]
 700              	.LVL49:
 162:SYS/memng/mmu.c **** 
 701              		.loc 1 162 37 view .LVU223
 702 003e 9168     		ldr	r1, [r2, #8]
 703 0040 0B44     		add	r3, r3, r1
 704 0042 9360     		str	r3, [r2, #8]
 164:SYS/memng/mmu.c ****             {
 705              		.loc 1 164 13 is_stmt 1 view .LVU224
ARM GAS  /tmp/ccTLp9DV.s 			page 20


 164:SYS/memng/mmu.c ****             {
 706              		.loc 1 164 54 is_stmt 0 view .LVU225
 707 0044 D268     		ldr	r2, [r2, #12]
 164:SYS/memng/mmu.c ****             {
 708              		.loc 1 164 16 view .LVU226
 709 0046 9342     		cmp	r3, r2
 710 0048 00D9     		bls	.L52
 711              	.L53:
 166:SYS/memng/mmu.c ****                     ;
 712              		.loc 1 166 17 is_stmt 1 discriminator 2 view .LVU227
 167:SYS/memng/mmu.c ****             }
 713              		.loc 1 167 21 discriminator 2 view .LVU228
 714 004a FEE7     		b	.L53
 715              	.L52:
 171:SYS/memng/mmu.c ****         }
 716              		.loc 1 171 13 view .LVU229
 717 004c FFF7FEFF 		bl	MMU_InsertFreeBlock
 718              	.LVL50:
 174:SYS/memng/mmu.c **** 
 719              		.loc 1 174 5 view .LVU230
 720              		.syntax unified
 721              	@ 174 "SYS/memng/mmu.c" 1
 722 0050 62B6     		cpsie i
 723              	@ 0 "" 2
 176:SYS/memng/mmu.c **** }
 724              		.loc 1 176 5 view .LVU231
 725              	.LVL51:
 177:SYS/memng/mmu.c **** 
 726              		.loc 1 177 1 is_stmt 0 view .LVU232
 727              		.thumb
 728              		.syntax unified
 729 0052 10BD     		pop	{r4, pc}
 730              	.L60:
 731              		.align	2
 732              	.L59:
 733 0054 00000000 		.word	trace
 734 0058 00000000 		.word	Mem_Buff
 735 005c 00000000 		.word	Mem_Monitor
 736              		.cfi_endproc
 737              	.LFE6:
 739              		.comm	trace,1,1
 740              		.comm	MemEnd,4,4
 741              		.comm	MemStart,8,4
 742              		.comm	Mem_Monitor,36,4
 743              		.global	Mem_Buff
 744              		.section	.ccmram,"aw"
 745              		.align	2
 748              	Mem_Buff:
 749 0000 00000000 		.space	65536
 749      00000000 
 749      00000000 
 749      00000000 
 749      00000000 
 750              		.text
 751              	.Letext0:
 752              		.file 2 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 753              		.file 3 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
ARM GAS  /tmp/ccTLp9DV.s 			page 21


 754              		.file 4 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 755              		.file 5 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 756              		.file 6 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 757              		.file 7 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 758              		.file 8 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 759              		.file 9 "SYS/memng/mmu.h"
ARM GAS  /tmp/ccTLp9DV.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mmu.c
     /tmp/ccTLp9DV.s:18     .text.MMU_Init:0000000000000000 $t
     /tmp/ccTLp9DV.s:25     .text.MMU_Init:0000000000000000 MMU_Init
     /tmp/ccTLp9DV.s:118    .text.MMU_Init:0000000000000050 $d
                            *COM*:0000000000000024 Mem_Monitor
     /tmp/ccTLp9DV.s:748    .ccmram:0000000000000000 Mem_Buff
                            *COM*:0000000000000008 MemStart
                            *COM*:0000000000000004 MemEnd
     /tmp/ccTLp9DV.s:127    .text.MMU_InsertFreeBlock:0000000000000000 $t
     /tmp/ccTLp9DV.s:133    .text.MMU_InsertFreeBlock:0000000000000000 MMU_InsertFreeBlock
     /tmp/ccTLp9DV.s:278    .text.MMU_InsertFreeBlock:0000000000000068 $d
     /tmp/ccTLp9DV.s:285    .text.MMU_Get_Monitor:0000000000000000 $t
     /tmp/ccTLp9DV.s:292    .text.MMU_Get_Monitor:0000000000000000 MMU_Get_Monitor
     /tmp/ccTLp9DV.s:362    .text.MMU_Get_Monitor:0000000000000034 $d
     /tmp/ccTLp9DV.s:369    .text.MMU_Malloc:0000000000000000 $t
     /tmp/ccTLp9DV.s:376    .text.MMU_Malloc:0000000000000000 MMU_Malloc
     /tmp/ccTLp9DV.s:597    .text.MMU_Malloc:00000000000000b8 $d
                            *COM*:0000000000000001 trace
     /tmp/ccTLp9DV.s:606    .text.MMU_Free:0000000000000000 $t
     /tmp/ccTLp9DV.s:613    .text.MMU_Free:0000000000000000 MMU_Free
     /tmp/ccTLp9DV.s:733    .text.MMU_Free:0000000000000054 $d
     /tmp/ccTLp9DV.s:745    .ccmram:0000000000000000 $d

NO UNDEFINED SYMBOLS
