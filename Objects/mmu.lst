ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mmu.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MMU_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MMU_Init:
  26              	.LFB3:
  27              		.file 1 "SYS/memng/mmu.c"
   1:SYS/memng/mmu.c **** #include "mmu.h"
   2:SYS/memng/mmu.c **** 
   3:SYS/memng/mmu.c **** uint8_t Mem_Buff[PHY_MEM_SIZE] __attribute__((aligned(BLOCK_ALIGMENT_SIZE))) __attribute__((at(0x10
   4:SYS/memng/mmu.c **** 
   5:SYS/memng/mmu.c **** Mem_Monitor_TypeDef Mem_Monitor;
   6:SYS/memng/mmu.c **** 
   7:SYS/memng/mmu.c **** MemBlock_TypeDef MemStart;
   8:SYS/memng/mmu.c **** MemBlock_TypeDef *MemEnd;
   9:SYS/memng/mmu.c **** 
  10:SYS/memng/mmu.c **** static void MMU_InsertFreeBlock(MemBlock_TypeDef *pxBlockToInsert);
  11:SYS/memng/mmu.c **** static void MMU_Init(void);
  12:SYS/memng/mmu.c **** 
  13:SYS/memng/mmu.c **** static void MMU_Init(void)
  14:SYS/memng/mmu.c **** {
  28              		.loc 1 14 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  15:SYS/memng/mmu.c ****     MemBlock_TypeDef *FstFreeBlock_tmp = NULL;
  33              		.loc 1 15 5 view .LVU1
  34              	.LVL0:
  16:SYS/memng/mmu.c **** 
  17:SYS/memng/mmu.c ****     Mem_Monitor.phy_size = PHY_MEM_SIZE;
  35              		.loc 1 17 5 view .LVU2
  36              		.loc 1 17 26 is_stmt 0 view .LVU3
  37 0000 144A     		ldr	r2, .L4
  38 0002 4FF48033 		mov	r3, #65536
  39 0006 1360     		str	r3, [r2]
  18:SYS/memng/mmu.c ****     Mem_Monitor.used_size = 0;
  40              		.loc 1 18 5 is_stmt 1 view .LVU4
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 2


  41              		.loc 1 18 27 is_stmt 0 view .LVU5
  42 0008 0023     		movs	r3, #0
  43 000a 5360     		str	r3, [r2, #4]
  19:SYS/memng/mmu.c **** 
  20:SYS/memng/mmu.c ****     for (uint32_t i = 0; i < PHY_MEM_SIZE; i++)
  44              		.loc 1 20 5 is_stmt 1 view .LVU6
  45              	.LBB2:
  46              		.loc 1 20 10 view .LVU7
  47              	.LVL1:
  48              		.loc 1 20 5 is_stmt 0 view .LVU8
  49 000c 03E0     		b	.L2
  50              	.LVL2:
  51              	.L3:
  21:SYS/memng/mmu.c ****     {
  22:SYS/memng/mmu.c ****         Mem_Buff[i] = 0;
  52              		.loc 1 22 9 is_stmt 1 discriminator 3 view .LVU9
  53              		.loc 1 22 21 is_stmt 0 discriminator 3 view .LVU10
  54 000e 124A     		ldr	r2, .L4+4
  55 0010 0021     		movs	r1, #0
  56 0012 D154     		strb	r1, [r2, r3]
  20:SYS/memng/mmu.c ****     {
  57              		.loc 1 20 44 is_stmt 1 discriminator 3 view .LVU11
  20:SYS/memng/mmu.c ****     {
  58              		.loc 1 20 45 is_stmt 0 discriminator 3 view .LVU12
  59 0014 0133     		adds	r3, r3, #1
  60              	.LVL3:
  61              	.L2:
  20:SYS/memng/mmu.c ****     {
  62              		.loc 1 20 26 is_stmt 1 discriminator 1 view .LVU13
  20:SYS/memng/mmu.c ****     {
  63              		.loc 1 20 5 is_stmt 0 discriminator 1 view .LVU14
  64 0016 B3F5803F 		cmp	r3, #65536
  65 001a F8D3     		bcc	.L3
  66              	.LBE2:
  23:SYS/memng/mmu.c ****     }
  24:SYS/memng/mmu.c **** 
  25:SYS/memng/mmu.c ****     MemStart.nxtFree = (void *)Mem_Buff;
  67              		.loc 1 25 5 is_stmt 1 view .LVU15
  68              		.loc 1 25 22 is_stmt 0 view .LVU16
  69 001c 0F49     		ldr	r1, .L4+8
  70 001e 0E4A     		ldr	r2, .L4+4
  71 0020 0A60     		str	r2, [r1]
  26:SYS/memng/mmu.c ****     MemStart.size = 0;
  72              		.loc 1 26 5 is_stmt 1 view .LVU17
  73              		.loc 1 26 19 is_stmt 0 view .LVU18
  74 0022 0023     		movs	r3, #0
  75              	.LVL4:
  76              		.loc 1 26 19 view .LVU19
  77 0024 8B80     		strh	r3, [r1, #4]	@ movhi
  27:SYS/memng/mmu.c **** 
  28:SYS/memng/mmu.c ****     MemEnd = (void *)(&Mem_Buff[PHY_MEM_SIZE] - sizeof(MemBlock_TypeDef));
  78              		.loc 1 28 5 is_stmt 1 view .LVU20
  79              		.loc 1 28 12 is_stmt 0 view .LVU21
  80 0026 0E49     		ldr	r1, .L4+12
  81 0028 0E48     		ldr	r0, .L4+16
  82 002a 0160     		str	r1, [r0]
  29:SYS/memng/mmu.c ****     MemEnd->nxtFree = NULL;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 3


  83              		.loc 1 29 5 is_stmt 1 view .LVU22
  84              		.loc 1 29 21 is_stmt 0 view .LVU23
  85 002c 02F57040 		add	r0, r2, #61440
  86 0030 C0F8F83F 		str	r3, [r0, #4088]
  30:SYS/memng/mmu.c ****     MemEnd->size = 0;
  87              		.loc 1 30 5 is_stmt 1 view .LVU24
  88              		.loc 1 30 18 is_stmt 0 view .LVU25
  89 0034 A0F8FC3F 		strh	r3, [r0, #4092]	@ movhi
  31:SYS/memng/mmu.c **** 
  32:SYS/memng/mmu.c ****     Mem_Monitor.total_size = (MemBlock_Addr)MemEnd - (MemBlock_Addr)MemStart.nxtFree;
  90              		.loc 1 32 5 is_stmt 1 view .LVU26
  91              		.loc 1 32 28 is_stmt 0 view .LVU27
  92 0038 064B     		ldr	r3, .L4
  93 003a 4FF6F870 		movw	r0, #65528
  94 003e D860     		str	r0, [r3, #12]
  33:SYS/memng/mmu.c **** 
  34:SYS/memng/mmu.c ****     FstFreeBlock_tmp = MemStart.nxtFree;
  95              		.loc 1 34 5 is_stmt 1 view .LVU28
  96              	.LVL5:
  35:SYS/memng/mmu.c ****     FstFreeBlock_tmp->nxtFree = MemEnd;
  97              		.loc 1 35 5 view .LVU29
  98              		.loc 1 35 31 is_stmt 0 view .LVU30
  99 0040 1160     		str	r1, [r2]
  36:SYS/memng/mmu.c **** 
  37:SYS/memng/mmu.c ****     Mem_Monitor.total_size -= sizeof(MemBlock_TypeDef);
 100              		.loc 1 37 5 is_stmt 1 view .LVU31
 101              		.loc 1 37 28 is_stmt 0 view .LVU32
 102 0042 4FF6F071 		movw	r1, #65520
 103 0046 D960     		str	r1, [r3, #12]
  38:SYS/memng/mmu.c ****     FstFreeBlock_tmp->size = Mem_Monitor.total_size;
 104              		.loc 1 38 5 is_stmt 1 view .LVU33
 105              		.loc 1 38 28 is_stmt 0 view .LVU34
 106 0048 9180     		strh	r1, [r2, #4]	@ movhi
  39:SYS/memng/mmu.c **** 
  40:SYS/memng/mmu.c ****     Mem_Monitor.remain_size = Mem_Monitor.total_size;
 107              		.loc 1 40 5 is_stmt 1 view .LVU35
 108              		.loc 1 40 29 is_stmt 0 view .LVU36
 109 004a 9960     		str	r1, [r3, #8]
  41:SYS/memng/mmu.c **** 
  42:SYS/memng/mmu.c ****     Mem_Monitor.init = true;
 110              		.loc 1 42 5 is_stmt 1 view .LVU37
 111              		.loc 1 42 22 is_stmt 0 view .LVU38
 112 004c 0122     		movs	r2, #1
 113 004e 1A74     		strb	r2, [r3, #16]
  43:SYS/memng/mmu.c **** }
 114              		.loc 1 43 1 view .LVU39
 115 0050 7047     		bx	lr
 116              	.L5:
 117 0052 00BF     		.align	2
 118              	.L4:
 119 0054 00000000 		.word	.LANCHOR0
 120 0058 00000000 		.word	Mem_Buff
 121 005c 00000000 		.word	.LANCHOR1
 122 0060 F8FF0000 		.word	Mem_Buff+65528
 123 0064 00000000 		.word	.LANCHOR2
 124              		.cfi_endproc
 125              	.LFE3:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 4


 127              		.section	.text.MMU_InsertFreeBlock,"ax",%progbits
 128              		.align	1
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu fpv4-sp-d16
 134              	MMU_InsertFreeBlock:
 135              	.LVL6:
 136              	.LFB6:
  44:SYS/memng/mmu.c **** 
  45:SYS/memng/mmu.c **** void *MMU_Molloc(uint16_t size)
  46:SYS/memng/mmu.c **** {
  47:SYS/memng/mmu.c ****     MemBlock_TypeDef *PrvFreeBlock = NULL;
  48:SYS/memng/mmu.c ****     MemBlock_TypeDef *NxtFreeBlock = NULL;
  49:SYS/memng/mmu.c ****     MemBlock_TypeDef *Block_Tmp = NULL;
  50:SYS/memng/mmu.c ****     void *mem_addr = NULL;
  51:SYS/memng/mmu.c **** 
  52:SYS/memng/mmu.c ****     if (!Mem_Monitor.init)
  53:SYS/memng/mmu.c ****     {
  54:SYS/memng/mmu.c ****         MMU_Init();
  55:SYS/memng/mmu.c ****     }
  56:SYS/memng/mmu.c **** 
  57:SYS/memng/mmu.c ****     __asm("cpsid i");
  58:SYS/memng/mmu.c **** 
  59:SYS/memng/mmu.c ****     if (size <= Mem_Monitor.remain_size)
  60:SYS/memng/mmu.c ****     {
  61:SYS/memng/mmu.c ****         /* aligment request byte number */
  62:SYS/memng/mmu.c ****         size += (size % BLOCK_ALIGMENT_SIZE);
  63:SYS/memng/mmu.c **** 
  64:SYS/memng/mmu.c ****         PrvFreeBlock = &MemStart;
  65:SYS/memng/mmu.c ****         Block_Tmp = MemStart.nxtFree;
  66:SYS/memng/mmu.c ****         while ((Block_Tmp->size < size) && (Block_Tmp->nxtFree != NULL))
  67:SYS/memng/mmu.c ****         {
  68:SYS/memng/mmu.c ****             PrvFreeBlock = Block_Tmp;
  69:SYS/memng/mmu.c ****             Block_Tmp = Block_Tmp->nxtFree;
  70:SYS/memng/mmu.c ****         }
  71:SYS/memng/mmu.c **** 
  72:SYS/memng/mmu.c ****         if ((Block_Tmp != MemEnd) && (Block_Tmp != NULL))
  73:SYS/memng/mmu.c ****         {
  74:SYS/memng/mmu.c ****             mem_addr = (void *)(((uint8_t *)Block_Tmp->nxtFree) + sizeof(MemBlock_TypeDef));
  75:SYS/memng/mmu.c ****             PrvFreeBlock->nxtFree = Block_Tmp->nxtFree;
  76:SYS/memng/mmu.c **** 
  77:SYS/memng/mmu.c ****             NxtFreeBlock = (void *)(((uint8_t *)Block_Tmp) + size);
  78:SYS/memng/mmu.c ****             NxtFreeBlock->size = Block_Tmp->size - size;
  79:SYS/memng/mmu.c **** 
  80:SYS/memng/mmu.c ****             MMU_InsertFreeBlock(NxtFreeBlock);
  81:SYS/memng/mmu.c **** 
  82:SYS/memng/mmu.c ****             Block_Tmp->size = size;
  83:SYS/memng/mmu.c ****         }
  84:SYS/memng/mmu.c ****     }
  85:SYS/memng/mmu.c **** 
  86:SYS/memng/mmu.c ****     __asm("cpsie i");
  87:SYS/memng/mmu.c **** 
  88:SYS/memng/mmu.c ****     return mem_addr;
  89:SYS/memng/mmu.c **** }
  90:SYS/memng/mmu.c **** 
  91:SYS/memng/mmu.c **** void MMU_Free(void *ptr)
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 5


  92:SYS/memng/mmu.c **** {
  93:SYS/memng/mmu.c ****     uint8_t *puc = (uint8_t *)ptr;
  94:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxLink;
  95:SYS/memng/mmu.c **** 
  96:SYS/memng/mmu.c ****     if (ptr != NULL)
  97:SYS/memng/mmu.c ****     {
  98:SYS/memng/mmu.c ****         /* The memory being freed will have an BlockLink_t structure immediately
  99:SYS/memng/mmu.c **** 		before it. */
 100:SYS/memng/mmu.c ****         puc -= sizeof(MemBlock_TypeDef);
 101:SYS/memng/mmu.c **** 
 102:SYS/memng/mmu.c ****         /* This casting is to keep the compiler from issuing warnings. */
 103:SYS/memng/mmu.c ****         pxLink = (void *)puc;
 104:SYS/memng/mmu.c **** 
 105:SYS/memng/mmu.c ****         if (pxLink->nxtFree == NULL)
 106:SYS/memng/mmu.c ****         {
 107:SYS/memng/mmu.c ****             //pxLink->size &= ~xBlockAllocatedBit;
 108:SYS/memng/mmu.c **** 
 109:SYS/memng/mmu.c ****             __asm("cpsid i");
 110:SYS/memng/mmu.c ****             {
 111:SYS/memng/mmu.c ****                 /* Add this block to the list of free blocks. */
 112:SYS/memng/mmu.c ****                 Mem_Monitor.remain_size += pxLink->size;
 113:SYS/memng/mmu.c **** 
 114:SYS/memng/mmu.c ****                 //traceFREE(pv, pxLink->size);
 115:SYS/memng/mmu.c ****                 MMU_InsertFreeBlock(((MemBlock_TypeDef *)pxLink));
 116:SYS/memng/mmu.c ****             }
 117:SYS/memng/mmu.c ****             __asm("cpsie i");
 118:SYS/memng/mmu.c ****         }
 119:SYS/memng/mmu.c ****     }
 120:SYS/memng/mmu.c **** }
 121:SYS/memng/mmu.c **** 
 122:SYS/memng/mmu.c **** static void MMU_InsertFreeBlock(MemBlock_TypeDef *pxBlockToInsert)
 123:SYS/memng/mmu.c **** {
 137              		.loc 1 123 1 is_stmt 1 view -0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 124:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxIterator;
 142              		.loc 1 124 5 view .LVU41
 125:SYS/memng/mmu.c ****     uint8_t *puc;
 143              		.loc 1 125 5 view .LVU42
 126:SYS/memng/mmu.c **** 
 127:SYS/memng/mmu.c ****     for (pxIterator = &MemStart; pxIterator->nxtFree < (void *)pxBlockToInsert; pxIterator = pxIter
 144              		.loc 1 127 5 view .LVU43
 145              		.loc 1 127 21 is_stmt 0 view .LVU44
 146 0000 164B     		ldr	r3, .L21
 147              	.LVL7:
 148              	.L7:
 149              		.loc 1 127 34 is_stmt 1 discriminator 1 view .LVU45
 150 0002 1A46     		mov	r2, r3
 151              		.loc 1 127 44 is_stmt 0 discriminator 1 view .LVU46
 152 0004 1B68     		ldr	r3, [r3]
 153              	.LVL8:
 154              		.loc 1 127 5 discriminator 1 view .LVU47
 155 0006 8342     		cmp	r3, r0
 156 0008 FBD3     		bcc	.L7
 128:SYS/memng/mmu.c ****     {
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 6


 129:SYS/memng/mmu.c ****         /* Nothing to do here, just iterate to the right position. */
 130:SYS/memng/mmu.c ****     }
 131:SYS/memng/mmu.c **** 
 132:SYS/memng/mmu.c ****     puc = (uint8_t *)pxIterator;
 157              		.loc 1 132 5 is_stmt 1 view .LVU48
 158              	.LVL9:
 133:SYS/memng/mmu.c ****     if ((puc + pxIterator->size) == (uint8_t *)pxBlockToInsert)
 159              		.loc 1 133 5 view .LVU49
 160              		.loc 1 133 26 is_stmt 0 view .LVU50
 161 000a 9188     		ldrh	r1, [r2, #4]
 162              		.loc 1 133 14 view .LVU51
 163 000c 02EB010C 		add	ip, r2, r1
 164              		.loc 1 133 8 view .LVU52
 165 0010 8445     		cmp	ip, r0
 166 0012 09D0     		beq	.L19
 167              	.L8:
 134:SYS/memng/mmu.c ****     {
 135:SYS/memng/mmu.c ****         pxIterator->size += pxBlockToInsert->size;
 136:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 137:SYS/memng/mmu.c ****     }
 138:SYS/memng/mmu.c **** 
 139:SYS/memng/mmu.c ****     /* Do the block being inserted, and the block it is being inserted before
 140:SYS/memng/mmu.c **** 	make a contiguous block of memory? */
 141:SYS/memng/mmu.c ****     puc = (uint8_t *)pxBlockToInsert;
 168              		.loc 1 141 5 is_stmt 1 view .LVU53
 169              	.LVL10:
 142:SYS/memng/mmu.c ****     if ((puc + pxBlockToInsert->size) == (uint8_t *)pxIterator->nxtFree)
 170              		.loc 1 142 5 view .LVU54
 171              		.loc 1 142 31 is_stmt 0 view .LVU55
 172 0014 8188     		ldrh	r1, [r0, #4]
 173              		.loc 1 142 14 view .LVU56
 174 0016 00EB010C 		add	ip, r0, r1
 175              		.loc 1 142 8 view .LVU57
 176 001a 6345     		cmp	r3, ip
 177 001c 09D0     		beq	.L20
 143:SYS/memng/mmu.c ****     {
 144:SYS/memng/mmu.c ****         if (pxIterator->nxtFree != MemEnd)
 145:SYS/memng/mmu.c ****         {
 146:SYS/memng/mmu.c ****             /* Form one big block from the two blocks. */
 147:SYS/memng/mmu.c ****             pxBlockToInsert->size += ((MemBlock_TypeDef *)pxIterator->nxtFree)->size;
 148:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = ((MemBlock_TypeDef *)pxIterator->nxtFree)->nxtFree;
 149:SYS/memng/mmu.c ****         }
 150:SYS/memng/mmu.c ****         else
 151:SYS/memng/mmu.c ****         {
 152:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = MemEnd;
 153:SYS/memng/mmu.c ****         }
 154:SYS/memng/mmu.c ****     }
 155:SYS/memng/mmu.c ****     else
 156:SYS/memng/mmu.c ****     {
 157:SYS/memng/mmu.c ****         pxBlockToInsert->nxtFree = pxIterator->nxtFree;
 178              		.loc 1 157 9 is_stmt 1 view .LVU58
 179              		.loc 1 157 34 is_stmt 0 view .LVU59
 180 001e 0360     		str	r3, [r0]
 158:SYS/memng/mmu.c ****     }
 159:SYS/memng/mmu.c **** 
 160:SYS/memng/mmu.c ****     if (pxIterator != pxBlockToInsert)
 181              		.loc 1 160 5 is_stmt 1 view .LVU60
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 7


 182              		.loc 1 160 8 is_stmt 0 view .LVU61
 183 0020 9042     		cmp	r0, r2
 184 0022 19D0     		beq	.L16
 161:SYS/memng/mmu.c ****     {
 162:SYS/memng/mmu.c ****         pxIterator->nxtFree = pxBlockToInsert;
 185              		.loc 1 162 9 is_stmt 1 view .LVU62
 186              		.loc 1 162 29 is_stmt 0 view .LVU63
 187 0024 1060     		str	r0, [r2]
 188 0026 7047     		bx	lr
 189              	.LVL11:
 190              	.L19:
 135:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 191              		.loc 1 135 9 is_stmt 1 view .LVU64
 135:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 192              		.loc 1 135 44 is_stmt 0 view .LVU65
 193 0028 8088     		ldrh	r0, [r0, #4]
 194              	.LVL12:
 135:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 195              		.loc 1 135 26 view .LVU66
 196 002a 0144     		add	r1, r1, r0
 197 002c 9180     		strh	r1, [r2, #4]	@ movhi
 136:SYS/memng/mmu.c ****     }
 198              		.loc 1 136 9 is_stmt 1 view .LVU67
 199              	.LVL13:
 136:SYS/memng/mmu.c ****     }
 200              		.loc 1 136 25 is_stmt 0 view .LVU68
 201 002e 1046     		mov	r0, r2
 202 0030 F0E7     		b	.L8
 203              	.LVL14:
 204              	.L20:
 123:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxIterator;
 205              		.loc 1 123 1 view .LVU69
 206 0032 10B4     		push	{r4}
 207              	.LCFI0:
 208              		.cfi_def_cfa_offset 4
 209              		.cfi_offset 4, -4
 144:SYS/memng/mmu.c ****         {
 210              		.loc 1 144 9 is_stmt 1 view .LVU70
 144:SYS/memng/mmu.c ****         {
 211              		.loc 1 144 33 is_stmt 0 view .LVU71
 212 0034 0A4C     		ldr	r4, .L21+4
 213 0036 2468     		ldr	r4, [r4]
 144:SYS/memng/mmu.c ****         {
 214              		.loc 1 144 12 view .LVU72
 215 0038 A342     		cmp	r3, r4
 216 003a 0BD0     		beq	.L10
 147:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = ((MemBlock_TypeDef *)pxIterator->nxtFree)->nxtFree;
 217              		.loc 1 147 13 is_stmt 1 view .LVU73
 147:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = ((MemBlock_TypeDef *)pxIterator->nxtFree)->nxtFree;
 218              		.loc 1 147 79 is_stmt 0 view .LVU74
 219 003c 9B88     		ldrh	r3, [r3, #4]
 147:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = ((MemBlock_TypeDef *)pxIterator->nxtFree)->nxtFree;
 220              		.loc 1 147 35 view .LVU75
 221 003e 1944     		add	r1, r1, r3
 222 0040 8180     		strh	r1, [r0, #4]	@ movhi
 148:SYS/memng/mmu.c ****         }
 223              		.loc 1 148 13 is_stmt 1 view .LVU76
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 8


 148:SYS/memng/mmu.c ****         }
 224              		.loc 1 148 71 is_stmt 0 view .LVU77
 225 0042 1368     		ldr	r3, [r2]
 148:SYS/memng/mmu.c ****         }
 226              		.loc 1 148 81 view .LVU78
 227 0044 1B68     		ldr	r3, [r3]
 148:SYS/memng/mmu.c ****         }
 228              		.loc 1 148 38 view .LVU79
 229 0046 0360     		str	r3, [r0]
 230              	.L11:
 160:SYS/memng/mmu.c ****     {
 231              		.loc 1 160 5 is_stmt 1 view .LVU80
 160:SYS/memng/mmu.c ****     {
 232              		.loc 1 160 8 is_stmt 0 view .LVU81
 233 0048 9042     		cmp	r0, r2
 234 004a 00D0     		beq	.L6
 235              		.loc 1 162 9 is_stmt 1 view .LVU82
 236              		.loc 1 162 29 is_stmt 0 view .LVU83
 237 004c 1060     		str	r0, [r2]
 238              	.L6:
 163:SYS/memng/mmu.c ****     }
 164:SYS/memng/mmu.c **** }
 239              		.loc 1 164 1 view .LVU84
 240 004e 5DF8044B 		ldr	r4, [sp], #4
 241              	.LCFI1:
 242              		.cfi_remember_state
 243              		.cfi_restore 4
 244              		.cfi_def_cfa_offset 0
 245 0052 7047     		bx	lr
 246              	.L10:
 247              	.LCFI2:
 248              		.cfi_restore_state
 152:SYS/memng/mmu.c ****         }
 249              		.loc 1 152 13 is_stmt 1 view .LVU85
 152:SYS/memng/mmu.c ****         }
 250              		.loc 1 152 38 is_stmt 0 view .LVU86
 251 0054 0460     		str	r4, [r0]
 252 0056 F7E7     		b	.L11
 253              	.L16:
 254              	.LCFI3:
 255              		.cfi_def_cfa_offset 0
 256              		.cfi_restore 4
 152:SYS/memng/mmu.c ****         }
 257              		.loc 1 152 38 view .LVU87
 258 0058 7047     		bx	lr
 259              	.L22:
 260 005a 00BF     		.align	2
 261              	.L21:
 262 005c 00000000 		.word	.LANCHOR1
 263 0060 00000000 		.word	.LANCHOR2
 264              		.cfi_endproc
 265              	.LFE6:
 267              		.section	.text.MMU_Molloc,"ax",%progbits
 268              		.align	1
 269              		.global	MMU_Molloc
 270              		.syntax unified
 271              		.thumb
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 9


 272              		.thumb_func
 273              		.fpu fpv4-sp-d16
 275              	MMU_Molloc:
 276              	.LVL15:
 277              	.LFB4:
  46:SYS/memng/mmu.c ****     MemBlock_TypeDef *PrvFreeBlock = NULL;
 278              		.loc 1 46 1 is_stmt 1 view -0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
  46:SYS/memng/mmu.c ****     MemBlock_TypeDef *PrvFreeBlock = NULL;
 282              		.loc 1 46 1 is_stmt 0 view .LVU89
 283 0000 70B5     		push	{r4, r5, r6, lr}
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 16
 286              		.cfi_offset 4, -16
 287              		.cfi_offset 5, -12
 288              		.cfi_offset 6, -8
 289              		.cfi_offset 14, -4
 290 0002 0546     		mov	r5, r0
  47:SYS/memng/mmu.c ****     MemBlock_TypeDef *NxtFreeBlock = NULL;
 291              		.loc 1 47 5 is_stmt 1 view .LVU90
 292              	.LVL16:
  48:SYS/memng/mmu.c ****     MemBlock_TypeDef *Block_Tmp = NULL;
 293              		.loc 1 48 5 view .LVU91
  49:SYS/memng/mmu.c ****     void *mem_addr = NULL;
 294              		.loc 1 49 5 view .LVU92
  50:SYS/memng/mmu.c **** 
 295              		.loc 1 50 5 view .LVU93
  52:SYS/memng/mmu.c ****     {
 296              		.loc 1 52 5 view .LVU94
  52:SYS/memng/mmu.c ****     {
 297              		.loc 1 52 21 is_stmt 0 view .LVU95
 298 0004 194B     		ldr	r3, .L34
 299 0006 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
  52:SYS/memng/mmu.c ****     {
 300              		.loc 1 52 8 view .LVU96
 301 0008 5BB1     		cbz	r3, .L33
 302              	.LVL17:
 303              	.L24:
  57:SYS/memng/mmu.c **** 
 304              		.loc 1 57 5 is_stmt 1 view .LVU97
 305              		.syntax unified
 306              	@ 57 "SYS/memng/mmu.c" 1
 307 000a 72B6     		cpsid i
 308              	@ 0 "" 2
  59:SYS/memng/mmu.c ****     {
 309              		.loc 1 59 5 view .LVU98
  59:SYS/memng/mmu.c ****     {
 310              		.loc 1 59 28 is_stmt 0 view .LVU99
 311              		.thumb
 312              		.syntax unified
 313 000c 174B     		ldr	r3, .L34
 314 000e 9B68     		ldr	r3, [r3, #8]
  59:SYS/memng/mmu.c ****     {
 315              		.loc 1 59 8 view .LVU100
 316 0010 9D42     		cmp	r5, r3
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 10


 317 0012 24D8     		bhi	.L28
  62:SYS/memng/mmu.c **** 
 318              		.loc 1 62 9 is_stmt 1 view .LVU101
  62:SYS/memng/mmu.c **** 
 319              		.loc 1 62 23 is_stmt 0 view .LVU102
 320 0014 05F00700 		and	r0, r5, #7
  62:SYS/memng/mmu.c **** 
 321              		.loc 1 62 14 view .LVU103
 322 0018 0544     		add	r5, r5, r0
 323 001a ADB2     		uxth	r5, r5
 324              	.LVL18:
  64:SYS/memng/mmu.c ****         Block_Tmp = MemStart.nxtFree;
 325              		.loc 1 64 9 is_stmt 1 view .LVU104
  65:SYS/memng/mmu.c ****         while ((Block_Tmp->size < size) && (Block_Tmp->nxtFree != NULL))
 326              		.loc 1 65 9 view .LVU105
  65:SYS/memng/mmu.c ****         while ((Block_Tmp->size < size) && (Block_Tmp->nxtFree != NULL))
 327              		.loc 1 65 19 is_stmt 0 view .LVU106
 328 001c 144A     		ldr	r2, .L34+4
 329 001e 1468     		ldr	r4, [r2]
 330              	.LVL19:
  66:SYS/memng/mmu.c ****         {
 331              		.loc 1 66 9 is_stmt 1 view .LVU107
  66:SYS/memng/mmu.c ****         {
 332              		.loc 1 66 15 is_stmt 0 view .LVU108
 333 0020 04E0     		b	.L27
 334              	.LVL20:
 335              	.L33:
  54:SYS/memng/mmu.c ****     }
 336              		.loc 1 54 9 is_stmt 1 view .LVU109
 337 0022 FFF7FEFF 		bl	MMU_Init
 338              	.LVL21:
  54:SYS/memng/mmu.c ****     }
 339              		.loc 1 54 9 is_stmt 0 view .LVU110
 340 0026 F0E7     		b	.L24
 341              	.LVL22:
 342              	.L29:
  68:SYS/memng/mmu.c ****             Block_Tmp = Block_Tmp->nxtFree;
 343              		.loc 1 68 26 view .LVU111
 344 0028 2246     		mov	r2, r4
 345              	.LVL23:
  69:SYS/memng/mmu.c ****         }
 346              		.loc 1 69 23 view .LVU112
 347 002a 1C46     		mov	r4, r3
 348              	.LVL24:
 349              	.L27:
  66:SYS/memng/mmu.c ****         {
 350              		.loc 1 66 15 is_stmt 1 view .LVU113
  66:SYS/memng/mmu.c ****         {
 351              		.loc 1 66 26 is_stmt 0 view .LVU114
 352 002c A388     		ldrh	r3, [r4, #4]
  66:SYS/memng/mmu.c ****         {
 353              		.loc 1 66 15 view .LVU115
 354 002e AB42     		cmp	r3, r5
 355 0030 02D2     		bcs	.L26
  66:SYS/memng/mmu.c ****         {
 356              		.loc 1 66 54 discriminator 1 view .LVU116
 357 0032 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 11


  66:SYS/memng/mmu.c ****         {
 358              		.loc 1 66 41 discriminator 1 view .LVU117
 359 0034 002B     		cmp	r3, #0
 360 0036 F7D1     		bne	.L29
 361              	.L26:
  72:SYS/memng/mmu.c ****         {
 362              		.loc 1 72 9 is_stmt 1 view .LVU118
  72:SYS/memng/mmu.c ****         {
 363              		.loc 1 72 24 is_stmt 0 view .LVU119
 364 0038 0E4B     		ldr	r3, .L34+8
 365 003a 1B68     		ldr	r3, [r3]
  72:SYS/memng/mmu.c ****         {
 366              		.loc 1 72 12 view .LVU120
 367 003c A342     		cmp	r3, r4
 368 003e 10D0     		beq	.L30
  72:SYS/memng/mmu.c ****         {
 369              		.loc 1 72 35 discriminator 1 view .LVU121
 370 0040 8CB1     		cbz	r4, .L31
  74:SYS/memng/mmu.c ****             PrvFreeBlock->nxtFree = Block_Tmp->nxtFree;
 371              		.loc 1 74 13 is_stmt 1 view .LVU122
  74:SYS/memng/mmu.c ****             PrvFreeBlock->nxtFree = Block_Tmp->nxtFree;
 372              		.loc 1 74 54 is_stmt 0 view .LVU123
 373 0042 2368     		ldr	r3, [r4]
  74:SYS/memng/mmu.c ****             PrvFreeBlock->nxtFree = Block_Tmp->nxtFree;
 374              		.loc 1 74 22 view .LVU124
 375 0044 03F10806 		add	r6, r3, #8
 376              	.LVL25:
  75:SYS/memng/mmu.c **** 
 377              		.loc 1 75 13 is_stmt 1 view .LVU125
  75:SYS/memng/mmu.c **** 
 378              		.loc 1 75 35 is_stmt 0 view .LVU126
 379 0048 1360     		str	r3, [r2]
  77:SYS/memng/mmu.c ****             NxtFreeBlock->size = Block_Tmp->size - size;
 380              		.loc 1 77 13 is_stmt 1 view .LVU127
  77:SYS/memng/mmu.c ****             NxtFreeBlock->size = Block_Tmp->size - size;
 381              		.loc 1 77 26 is_stmt 0 view .LVU128
 382 004a 6019     		adds	r0, r4, r5
 383              	.LVL26:
  78:SYS/memng/mmu.c **** 
 384              		.loc 1 78 13 is_stmt 1 view .LVU129
  78:SYS/memng/mmu.c **** 
 385              		.loc 1 78 43 is_stmt 0 view .LVU130
 386 004c A388     		ldrh	r3, [r4, #4]
  78:SYS/memng/mmu.c **** 
 387              		.loc 1 78 50 view .LVU131
 388 004e 5B1B     		subs	r3, r3, r5
  78:SYS/memng/mmu.c **** 
 389              		.loc 1 78 32 view .LVU132
 390 0050 8380     		strh	r3, [r0, #4]	@ movhi
  80:SYS/memng/mmu.c **** 
 391              		.loc 1 80 13 is_stmt 1 view .LVU133
 392 0052 FFF7FEFF 		bl	MMU_InsertFreeBlock
 393              	.LVL27:
  82:SYS/memng/mmu.c ****         }
 394              		.loc 1 82 13 view .LVU134
  82:SYS/memng/mmu.c ****         }
 395              		.loc 1 82 29 is_stmt 0 view .LVU135
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 12


 396 0056 A580     		strh	r5, [r4, #4]	@ movhi
 397              	.LVL28:
 398              	.L25:
  86:SYS/memng/mmu.c **** 
 399              		.loc 1 86 5 is_stmt 1 view .LVU136
 400              		.syntax unified
 401              	@ 86 "SYS/memng/mmu.c" 1
 402 0058 62B6     		cpsie i
 403              	@ 0 "" 2
  88:SYS/memng/mmu.c **** }
 404              		.loc 1 88 5 view .LVU137
  89:SYS/memng/mmu.c **** 
 405              		.loc 1 89 1 is_stmt 0 view .LVU138
 406              		.thumb
 407              		.syntax unified
 408 005a 3046     		mov	r0, r6
 409 005c 70BD     		pop	{r4, r5, r6, pc}
 410              	.LVL29:
 411              	.L28:
  50:SYS/memng/mmu.c **** 
 412              		.loc 1 50 11 view .LVU139
 413 005e 0026     		movs	r6, #0
 414 0060 FAE7     		b	.L25
 415              	.LVL30:
 416              	.L30:
  50:SYS/memng/mmu.c **** 
 417              		.loc 1 50 11 view .LVU140
 418 0062 0026     		movs	r6, #0
 419 0064 F8E7     		b	.L25
 420              	.L31:
 421 0066 2646     		mov	r6, r4
 422 0068 F6E7     		b	.L25
 423              	.L35:
 424 006a 00BF     		.align	2
 425              	.L34:
 426 006c 00000000 		.word	.LANCHOR0
 427 0070 00000000 		.word	.LANCHOR1
 428 0074 00000000 		.word	.LANCHOR2
 429              		.cfi_endproc
 430              	.LFE4:
 432              		.section	.text.MMU_Free,"ax",%progbits
 433              		.align	1
 434              		.global	MMU_Free
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu fpv4-sp-d16
 440              	MMU_Free:
 441              	.LVL31:
 442              	.LFB5:
  92:SYS/memng/mmu.c ****     uint8_t *puc = (uint8_t *)ptr;
 443              		.loc 1 92 1 is_stmt 1 view -0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
  93:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxLink;
 447              		.loc 1 93 5 view .LVU142
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 13


  94:SYS/memng/mmu.c **** 
 448              		.loc 1 94 5 view .LVU143
  96:SYS/memng/mmu.c ****     {
 449              		.loc 1 96 5 view .LVU144
  96:SYS/memng/mmu.c ****     {
 450              		.loc 1 96 8 is_stmt 0 view .LVU145
 451 0000 88B1     		cbz	r0, .L39
  92:SYS/memng/mmu.c ****     uint8_t *puc = (uint8_t *)ptr;
 452              		.loc 1 92 1 view .LVU146
 453 0002 08B5     		push	{r3, lr}
 454              	.LCFI5:
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 3, -8
 457              		.cfi_offset 14, -4
 458 0004 0346     		mov	r3, r0
 100:SYS/memng/mmu.c **** 
 459              		.loc 1 100 9 is_stmt 1 view .LVU147
 100:SYS/memng/mmu.c **** 
 460              		.loc 1 100 13 is_stmt 0 view .LVU148
 461 0006 0838     		subs	r0, r0, #8
 462              	.LVL32:
 103:SYS/memng/mmu.c **** 
 463              		.loc 1 103 9 is_stmt 1 view .LVU149
 105:SYS/memng/mmu.c ****         {
 464              		.loc 1 105 9 view .LVU150
 105:SYS/memng/mmu.c ****         {
 465              		.loc 1 105 19 is_stmt 0 view .LVU151
 466 0008 53F8082C 		ldr	r2, [r3, #-8]
 105:SYS/memng/mmu.c ****         {
 467              		.loc 1 105 12 view .LVU152
 468 000c 02B1     		cbz	r2, .L42
 469              	.LVL33:
 470              	.L36:
 120:SYS/memng/mmu.c **** 
 471              		.loc 1 120 1 view .LVU153
 472 000e 08BD     		pop	{r3, pc}
 473              	.LVL34:
 474              	.L42:
 109:SYS/memng/mmu.c ****             {
 475              		.loc 1 109 13 is_stmt 1 view .LVU154
 476              		.syntax unified
 477              	@ 109 "SYS/memng/mmu.c" 1
 478 0010 72B6     		cpsid i
 479              	@ 0 "" 2
 112:SYS/memng/mmu.c **** 
 480              		.loc 1 112 17 view .LVU155
 112:SYS/memng/mmu.c **** 
 481              		.loc 1 112 50 is_stmt 0 view .LVU156
 482              		.thumb
 483              		.syntax unified
 484 0012 33F8041C 		ldrh	r1, [r3, #-4]
 112:SYS/memng/mmu.c **** 
 485              		.loc 1 112 41 view .LVU157
 486 0016 044A     		ldr	r2, .L43
 487 0018 9368     		ldr	r3, [r2, #8]
 488              	.LVL35:
 112:SYS/memng/mmu.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 14


 489              		.loc 1 112 41 view .LVU158
 490 001a 0B44     		add	r3, r3, r1
 491 001c 9360     		str	r3, [r2, #8]
 115:SYS/memng/mmu.c ****             }
 492              		.loc 1 115 17 is_stmt 1 view .LVU159
 493 001e FFF7FEFF 		bl	MMU_InsertFreeBlock
 494              	.LVL36:
 117:SYS/memng/mmu.c ****         }
 495              		.loc 1 117 13 view .LVU160
 496              		.syntax unified
 497              	@ 117 "SYS/memng/mmu.c" 1
 498 0022 62B6     		cpsie i
 499              	@ 0 "" 2
 120:SYS/memng/mmu.c **** 
 500              		.loc 1 120 1 is_stmt 0 view .LVU161
 501              		.thumb
 502              		.syntax unified
 503 0024 F3E7     		b	.L36
 504              	.LVL37:
 505              	.L39:
 506              	.LCFI6:
 507              		.cfi_def_cfa_offset 0
 508              		.cfi_restore 3
 509              		.cfi_restore 14
 120:SYS/memng/mmu.c **** 
 510              		.loc 1 120 1 view .LVU162
 511 0026 7047     		bx	lr
 512              	.L44:
 513              		.align	2
 514              	.L43:
 515 0028 00000000 		.word	.LANCHOR0
 516              		.cfi_endproc
 517              	.LFE5:
 519              		.global	MemEnd
 520              		.global	MemStart
 521              		.global	Mem_Monitor
 522              		.global	Mem_Buff
 523              		.section	.bss.MemEnd,"aw",%nobits
 524              		.align	2
 525              		.set	.LANCHOR2,. + 0
 528              	MemEnd:
 529 0000 00000000 		.space	4
 530              		.section	.bss.MemStart,"aw",%nobits
 531              		.align	2
 532              		.set	.LANCHOR1,. + 0
 535              	MemStart:
 536 0000 00000000 		.space	8
 536      00000000 
 537              		.section	.bss.Mem_Buff,"aw",%nobits
 538              		.align	3
 541              	Mem_Buff:
 542 0000 00000000 		.space	65536
 542      00000000 
 542      00000000 
 542      00000000 
 542      00000000 
 543              		.section	.bss.Mem_Monitor,"aw",%nobits
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 15


 544              		.align	2
 545              		.set	.LANCHOR0,. + 0
 548              	Mem_Monitor:
 549 0000 00000000 		.space	20
 549      00000000 
 549      00000000 
 549      00000000 
 549      00000000 
 550              		.text
 551              	.Letext0:
 552              		.file 2 "/usr/local/arm-none-eabi-gcc/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/mac
 553              		.file 3 "/usr/local/arm-none-eabi-gcc/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys
 554              		.file 4 "SYS/memng/mmu.h"
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mmu.c
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:18     .text.MMU_Init:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:25     .text.MMU_Init:0000000000000000 MMU_Init
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:119    .text.MMU_Init:0000000000000054 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:541    .bss.Mem_Buff:0000000000000000 Mem_Buff
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:128    .text.MMU_InsertFreeBlock:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:134    .text.MMU_InsertFreeBlock:0000000000000000 MMU_InsertFreeBlock
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:262    .text.MMU_InsertFreeBlock:000000000000005c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:268    .text.MMU_Molloc:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:275    .text.MMU_Molloc:0000000000000000 MMU_Molloc
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:426    .text.MMU_Molloc:000000000000006c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:433    .text.MMU_Free:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:440    .text.MMU_Free:0000000000000000 MMU_Free
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:515    .text.MMU_Free:0000000000000028 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:528    .bss.MemEnd:0000000000000000 MemEnd
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:535    .bss.MemStart:0000000000000000 MemStart
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:548    .bss.Mem_Monitor:0000000000000000 Mem_Monitor
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:524    .bss.MemEnd:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:531    .bss.MemStart:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:538    .bss.Mem_Buff:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccq5Py7S.s:544    .bss.Mem_Monitor:0000000000000000 $d

NO UNDEFINED SYMBOLS
