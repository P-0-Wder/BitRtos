ARM GAS  /tmp/ccwojmLH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mmu.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MMU_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MMU_Init:
  26              	.LFB4:
  27              		.file 1 "SYS/memng/mmu.c"
   1:SYS/memng/mmu.c **** /*
   2:SYS/memng/mmu.c **** * copy from freeRTOS
   3:SYS/memng/mmu.c **** * heap_4
   4:SYS/memng/mmu.c **** * coder : 8_B!T0
   5:SYS/memng/mmu.c **** */
   6:SYS/memng/mmu.c **** #include "mmu.h"
   7:SYS/memng/mmu.c **** 
   8:SYS/memng/mmu.c **** #pragma pack(BLOCK_ALIGMENT_SIZE)
   9:SYS/memng/mmu.c **** uint8_t Mem_Buff[PHY_MEM_SIZE] __attribute__((section(".ccmram")));
  10:SYS/memng/mmu.c **** #pragma pack()
  11:SYS/memng/mmu.c **** 
  12:SYS/memng/mmu.c **** Mem_Monitor_TypeDef Mem_Monitor;
  13:SYS/memng/mmu.c **** MemBlock_TypeDef MemStart;
  14:SYS/memng/mmu.c **** MemBlock_TypeDef *MemEnd;
  15:SYS/memng/mmu.c **** 
  16:SYS/memng/mmu.c **** static void MMU_InsertFreeBlock(MemBlock_TypeDef *pxBlockToInsert);
  17:SYS/memng/mmu.c **** static void MMU_Init(void);
  18:SYS/memng/mmu.c **** 
  19:SYS/memng/mmu.c **** Mem_Monitor_TypeDef MMU_Get_Monitor(void)
  20:SYS/memng/mmu.c **** {
  21:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxIterator;
  22:SYS/memng/mmu.c **** 
  23:SYS/memng/mmu.c ****     /* comput freeblock number */
  24:SYS/memng/mmu.c ****     for (pxIterator = &MemStart; pxIterator->nxtFree != MemEnd; pxIterator = pxIterator->nxtFree)
  25:SYS/memng/mmu.c ****     {
  26:SYS/memng/mmu.c ****         Mem_Monitor.FreeBlock_Num++;
  27:SYS/memng/mmu.c ****     }
  28:SYS/memng/mmu.c **** 
  29:SYS/memng/mmu.c ****     return Mem_Monitor;
  30:SYS/memng/mmu.c **** }
  31:SYS/memng/mmu.c **** 
ARM GAS  /tmp/ccwojmLH.s 			page 2


  32:SYS/memng/mmu.c **** static void MMU_Init(void)
  33:SYS/memng/mmu.c **** {
  28              		.loc 1 33 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  34:SYS/memng/mmu.c ****     MemBlock_TypeDef *FstFreeBlock_tmp = NULL;
  33              		.loc 1 34 5 view .LVU1
  34              	.LVL0:
  35:SYS/memng/mmu.c **** 
  36:SYS/memng/mmu.c ****     Mem_Monitor.phy_size = PHY_MEM_SIZE;
  35              		.loc 1 36 5 view .LVU2
  36              		.loc 1 36 26 is_stmt 0 view .LVU3
  37 0000 134A     		ldr	r2, .L5
  38 0002 4FF48033 		mov	r3, #65536
  39 0006 1360     		str	r3, [r2]
  37:SYS/memng/mmu.c ****     Mem_Monitor.used_size = 0;
  40              		.loc 1 37 5 is_stmt 1 view .LVU4
  41              		.loc 1 37 27 is_stmt 0 view .LVU5
  42 0008 0023     		movs	r3, #0
  43 000a 5360     		str	r3, [r2, #4]
  38:SYS/memng/mmu.c ****     Mem_Monitor.FreeBlock_Num = 1;
  44              		.loc 1 38 5 is_stmt 1 view .LVU6
  45              		.loc 1 38 31 is_stmt 0 view .LVU7
  46 000c 0121     		movs	r1, #1
  47 000e 9182     		strh	r1, [r2, #20]	@ movhi
  39:SYS/memng/mmu.c **** 
  40:SYS/memng/mmu.c ****     for (uint32_t i = 0; i < PHY_MEM_SIZE; i++)
  48              		.loc 1 40 5 is_stmt 1 view .LVU8
  49              	.LBB2:
  50              		.loc 1 40 10 view .LVU9
  51              	.LVL1:
  52              	.L2:
  53              		.loc 1 40 5 is_stmt 0 discriminator 1 view .LVU10
  54 0010 B3F5803F 		cmp	r3, #65536
  55 0014 04D2     		bcs	.L4
  41:SYS/memng/mmu.c ****     {
  42:SYS/memng/mmu.c ****         Mem_Buff[i] = 0;
  56              		.loc 1 42 9 is_stmt 1 discriminator 3 view .LVU11
  57              		.loc 1 42 21 is_stmt 0 discriminator 3 view .LVU12
  58 0016 0F4A     		ldr	r2, .L5+4
  59 0018 0021     		movs	r1, #0
  60 001a D154     		strb	r1, [r2, r3]
  40:SYS/memng/mmu.c ****     {
  61              		.loc 1 40 45 discriminator 3 view .LVU13
  62 001c 0133     		adds	r3, r3, #1
  63              	.LVL2:
  40:SYS/memng/mmu.c ****     {
  64              		.loc 1 40 45 discriminator 3 view .LVU14
  65 001e F7E7     		b	.L2
  66              	.L4:
  40:SYS/memng/mmu.c ****     {
  67              		.loc 1 40 45 discriminator 3 view .LVU15
  68              	.LBE2:
  43:SYS/memng/mmu.c ****     }
  44:SYS/memng/mmu.c **** 
ARM GAS  /tmp/ccwojmLH.s 			page 3


  45:SYS/memng/mmu.c ****     MemStart.nxtFree = (void *)Mem_Buff;
  69              		.loc 1 45 5 is_stmt 1 view .LVU16
  70              		.loc 1 45 22 is_stmt 0 view .LVU17
  71 0020 0D4A     		ldr	r2, .L5+8
  72 0022 0C4B     		ldr	r3, .L5+4
  73              	.LVL3:
  74              		.loc 1 45 22 view .LVU18
  75 0024 1360     		str	r3, [r2]
  46:SYS/memng/mmu.c ****     MemStart.size = 0;
  76              		.loc 1 46 5 is_stmt 1 view .LVU19
  77              		.loc 1 46 19 is_stmt 0 view .LVU20
  78 0026 0021     		movs	r1, #0
  79 0028 9180     		strh	r1, [r2, #4]	@ movhi
  47:SYS/memng/mmu.c **** 
  48:SYS/memng/mmu.c ****     MemEnd = (void *)(&Mem_Buff[PHY_MEM_SIZE] - sizeof(MemBlock_TypeDef));
  80              		.loc 1 48 5 is_stmt 1 view .LVU21
  81              		.loc 1 48 12 is_stmt 0 view .LVU22
  82 002a 0C4A     		ldr	r2, .L5+12
  83 002c 0C48     		ldr	r0, .L5+16
  84 002e 0260     		str	r2, [r0]
  49:SYS/memng/mmu.c ****     MemEnd->nxtFree = NULL;
  85              		.loc 1 49 5 is_stmt 1 view .LVU23
  86              		.loc 1 49 21 is_stmt 0 view .LVU24
  87 0030 1160     		str	r1, [r2]
  50:SYS/memng/mmu.c ****     MemEnd->size = 0;
  88              		.loc 1 50 5 is_stmt 1 view .LVU25
  89              		.loc 1 50 18 is_stmt 0 view .LVU26
  90 0032 4FF6FC70 		movw	r0, #65532
  91 0036 1952     		strh	r1, [r3, r0]	@ movhi
  51:SYS/memng/mmu.c **** 
  52:SYS/memng/mmu.c ****     Mem_Monitor.total_size = (MemBlock_Addr)MemEnd - (MemBlock_Addr)MemStart.nxtFree;
  92              		.loc 1 52 5 is_stmt 1 view .LVU27
  53:SYS/memng/mmu.c **** 
  54:SYS/memng/mmu.c ****     FstFreeBlock_tmp = MemStart.nxtFree;
  93              		.loc 1 54 5 view .LVU28
  94              	.LVL4:
  55:SYS/memng/mmu.c ****     FstFreeBlock_tmp->nxtFree = MemEnd;
  95              		.loc 1 55 5 view .LVU29
  96              		.loc 1 55 31 is_stmt 0 view .LVU30
  97 0038 1A60     		str	r2, [r3]
  56:SYS/memng/mmu.c **** 
  57:SYS/memng/mmu.c ****     Mem_Monitor.total_size -= sizeof(MemBlock_TypeDef);
  98              		.loc 1 57 5 is_stmt 1 view .LVU31
  99              		.loc 1 57 28 is_stmt 0 view .LVU32
 100 003a 054A     		ldr	r2, .L5
 101 003c 4FF6F071 		movw	r1, #65520
 102 0040 D160     		str	r1, [r2, #12]
  58:SYS/memng/mmu.c ****     FstFreeBlock_tmp->size = Mem_Monitor.total_size;
 103              		.loc 1 58 5 is_stmt 1 view .LVU33
 104              		.loc 1 58 28 is_stmt 0 view .LVU34
 105 0042 9980     		strh	r1, [r3, #4]	@ movhi
  59:SYS/memng/mmu.c **** 
  60:SYS/memng/mmu.c ****     Mem_Monitor.remain_size = Mem_Monitor.total_size;
 106              		.loc 1 60 5 is_stmt 1 view .LVU35
 107              		.loc 1 60 29 is_stmt 0 view .LVU36
 108 0044 9160     		str	r1, [r2, #8]
  61:SYS/memng/mmu.c **** 
ARM GAS  /tmp/ccwojmLH.s 			page 4


  62:SYS/memng/mmu.c ****     Mem_Monitor.init = true;
 109              		.loc 1 62 5 is_stmt 1 view .LVU37
 110              		.loc 1 62 22 is_stmt 0 view .LVU38
 111 0046 0123     		movs	r3, #1
 112 0048 82F82030 		strb	r3, [r2, #32]
  63:SYS/memng/mmu.c **** }
 113              		.loc 1 63 1 view .LVU39
 114 004c 7047     		bx	lr
 115              	.L6:
 116 004e 00BF     		.align	2
 117              	.L5:
 118 0050 00000000 		.word	Mem_Monitor
 119 0054 00000000 		.word	Mem_Buff
 120 0058 00000000 		.word	MemStart
 121 005c F8FF0000 		.word	Mem_Buff+65528
 122 0060 00000000 		.word	MemEnd
 123              		.cfi_endproc
 124              	.LFE4:
 126              		.section	.text.MMU_InsertFreeBlock,"ax",%progbits
 127              		.align	1
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu fpv4-sp-d16
 133              	MMU_InsertFreeBlock:
 134              	.LVL5:
 135              	.LFB7:
  64:SYS/memng/mmu.c **** 
  65:SYS/memng/mmu.c **** void *MMU_Malloc(uint16_t size)
  66:SYS/memng/mmu.c **** {
  67:SYS/memng/mmu.c ****     MemBlock_TypeDef *PrvFreeBlock = NULL;
  68:SYS/memng/mmu.c ****     MemBlock_TypeDef *NxtFreeBlock = NULL;
  69:SYS/memng/mmu.c ****     MemBlock_TypeDef *Block_Tmp = NULL;
  70:SYS/memng/mmu.c ****     void *mem_addr = NULL;
  71:SYS/memng/mmu.c **** 
  72:SYS/memng/mmu.c ****     __asm("cpsid i");
  73:SYS/memng/mmu.c **** 
  74:SYS/memng/mmu.c ****     if (!Mem_Monitor.init)
  75:SYS/memng/mmu.c ****     {
  76:SYS/memng/mmu.c ****         MMU_Init();
  77:SYS/memng/mmu.c ****         Mem_Monitor.FreeBlock = &MemStart;
  78:SYS/memng/mmu.c ****     }
  79:SYS/memng/mmu.c **** 
  80:SYS/memng/mmu.c ****     if (size > 0)
  81:SYS/memng/mmu.c ****     {
  82:SYS/memng/mmu.c ****         size += sizeof(MemBlock_TypeDef);
  83:SYS/memng/mmu.c **** 
  84:SYS/memng/mmu.c ****         /* aligment request byte number */
  85:SYS/memng/mmu.c ****         if ((size & BLOCK_ALIGMENT_MASK) != 0x00)
  86:SYS/memng/mmu.c ****         {
  87:SYS/memng/mmu.c ****             /* Byte alignment required. */
  88:SYS/memng/mmu.c ****             size += (BLOCK_ALIGMENT_SIZE - (size & BLOCK_ALIGMENT_MASK));
  89:SYS/memng/mmu.c ****         }
  90:SYS/memng/mmu.c **** 
  91:SYS/memng/mmu.c ****         if (size <= Mem_Monitor.remain_size)
  92:SYS/memng/mmu.c ****         {
  93:SYS/memng/mmu.c **** 
ARM GAS  /tmp/ccwojmLH.s 			page 5


  94:SYS/memng/mmu.c ****             PrvFreeBlock = &MemStart;
  95:SYS/memng/mmu.c ****             Block_Tmp = MemStart.nxtFree;
  96:SYS/memng/mmu.c **** 
  97:SYS/memng/mmu.c ****             while ((Block_Tmp->size < size) && (Block_Tmp->nxtFree != NULL))
  98:SYS/memng/mmu.c ****             {
  99:SYS/memng/mmu.c ****                 PrvFreeBlock = Block_Tmp;
 100:SYS/memng/mmu.c ****                 Block_Tmp = Block_Tmp->nxtFree;
 101:SYS/memng/mmu.c ****             }
 102:SYS/memng/mmu.c **** 
 103:SYS/memng/mmu.c ****             if ((((uint32_t)Block_Tmp & 0xF0000000) == (uint32_t)Mem_Buff) && (Block_Tmp != MemEnd)
 104:SYS/memng/mmu.c ****             {
 105:SYS/memng/mmu.c ****                 Mem_Monitor.req_t++;
 106:SYS/memng/mmu.c **** 
 107:SYS/memng/mmu.c ****                 mem_addr = (void *)(((uint8_t *)PrvFreeBlock->nxtFree) + sizeof(MemBlock_TypeDef));
 108:SYS/memng/mmu.c **** 
 109:SYS/memng/mmu.c ****                 PrvFreeBlock->nxtFree = Block_Tmp->nxtFree;
 110:SYS/memng/mmu.c **** 
 111:SYS/memng/mmu.c ****                 if ((Block_Tmp->size - size) > MINIMUM_BLOCK_SIZE)
 112:SYS/memng/mmu.c ****                 {
 113:SYS/memng/mmu.c ****                     NxtFreeBlock = (void *)(((uint8_t *)Block_Tmp) + size);
 114:SYS/memng/mmu.c ****                     NxtFreeBlock->size = Block_Tmp->size - size;
 115:SYS/memng/mmu.c ****                     Block_Tmp->size = size;
 116:SYS/memng/mmu.c **** 
 117:SYS/memng/mmu.c ****                     MMU_InsertFreeBlock(NxtFreeBlock);
 118:SYS/memng/mmu.c ****                 }
 119:SYS/memng/mmu.c **** 
 120:SYS/memng/mmu.c ****                 Mem_Monitor.remain_size -= size;
 121:SYS/memng/mmu.c ****                 Mem_Monitor.used_size += size;
 122:SYS/memng/mmu.c **** 
 123:SYS/memng/mmu.c ****                 Block_Tmp->nxtFree = NULL;
 124:SYS/memng/mmu.c ****             }
 125:SYS/memng/mmu.c ****         }
 126:SYS/memng/mmu.c ****     }
 127:SYS/memng/mmu.c **** 
 128:SYS/memng/mmu.c ****     __asm("cpsie i");
 129:SYS/memng/mmu.c **** 
 130:SYS/memng/mmu.c ****     return mem_addr;
 131:SYS/memng/mmu.c **** }
 132:SYS/memng/mmu.c **** 
 133:SYS/memng/mmu.c **** void MMU_Free(void *ptr)
 134:SYS/memng/mmu.c **** {
 135:SYS/memng/mmu.c ****     uint8_t *puc = (uint8_t *)ptr;
 136:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxLink;
 137:SYS/memng/mmu.c **** 
 138:SYS/memng/mmu.c ****     if (ptr != NULL)
 139:SYS/memng/mmu.c ****     {
 140:SYS/memng/mmu.c ****         Mem_Monitor.fre_t++;
 141:SYS/memng/mmu.c **** 
 142:SYS/memng/mmu.c ****         /* The memory being freed will have an BlockLink_t structure immediately
 143:SYS/memng/mmu.c **** 		before it. */
 144:SYS/memng/mmu.c ****         puc -= sizeof(MemBlock_TypeDef);
 145:SYS/memng/mmu.c **** 
 146:SYS/memng/mmu.c ****         /* This casting is to keep the compiler from issuing warnings. */
 147:SYS/memng/mmu.c ****         pxLink = (void *)puc;
 148:SYS/memng/mmu.c **** 
 149:SYS/memng/mmu.c ****         if (pxLink->nxtFree == NULL)
 150:SYS/memng/mmu.c ****         {
ARM GAS  /tmp/ccwojmLH.s 			page 6


 151:SYS/memng/mmu.c ****             __asm("cpsid i");
 152:SYS/memng/mmu.c **** 
 153:SYS/memng/mmu.c ****             /* Add this block to the list of free blocks. */
 154:SYS/memng/mmu.c ****             Mem_Monitor.used_size -= pxLink->size;
 155:SYS/memng/mmu.c ****             Mem_Monitor.remain_size += pxLink->size;
 156:SYS/memng/mmu.c **** 
 157:SYS/memng/mmu.c ****             //traceFREE(pv, pxLink->size);
 158:SYS/memng/mmu.c ****             MMU_InsertFreeBlock(((MemBlock_TypeDef *)pxLink));
 159:SYS/memng/mmu.c **** 
 160:SYS/memng/mmu.c ****             __asm("cpsie i");
 161:SYS/memng/mmu.c ****         }
 162:SYS/memng/mmu.c ****     }
 163:SYS/memng/mmu.c **** 
 164:SYS/memng/mmu.c ****     ptr = NULL;
 165:SYS/memng/mmu.c **** }
 166:SYS/memng/mmu.c **** 
 167:SYS/memng/mmu.c **** static void MMU_InsertFreeBlock(MemBlock_TypeDef *pxBlockToInsert)
 168:SYS/memng/mmu.c **** {
 136              		.loc 1 168 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 169:SYS/memng/mmu.c ****     volatile MemBlock_TypeDef *pxIterator;
 141              		.loc 1 169 5 view .LVU41
 170:SYS/memng/mmu.c ****     uint8_t *puc;
 142              		.loc 1 170 5 view .LVU42
 171:SYS/memng/mmu.c **** 
 172:SYS/memng/mmu.c ****     /* Iterate through the list until a block is found that has a higher address
 173:SYS/memng/mmu.c ****      * than the block being inserted. */
 174:SYS/memng/mmu.c ****     for (pxIterator = &MemStart; pxIterator->nxtFree < pxBlockToInsert; pxIterator = pxIterator->nx
 143              		.loc 1 174 5 view .LVU43
 144              		.loc 1 174 21 is_stmt 0 view .LVU44
 145 0000 174B     		ldr	r3, .L22
 146              	.LVL6:
 147              	.L8:
 148              		.loc 1 174 44 discriminator 1 view .LVU45
 149 0002 1A68     		ldr	r2, [r3]
 150              		.loc 1 174 5 discriminator 1 view .LVU46
 151 0004 8242     		cmp	r2, r0
 152 0006 01D2     		bcs	.L19
 175:SYS/memng/mmu.c ****     {
 176:SYS/memng/mmu.c ****         /* Nothing to do here, just iterate to the right position. */
 177:SYS/memng/mmu.c ****     }
 153              		.loc 1 177 5 is_stmt 1 discriminator 3 view .LVU47
 174:SYS/memng/mmu.c ****     {
 154              		.loc 1 174 84 is_stmt 0 discriminator 3 view .LVU48
 155 0008 1B68     		ldr	r3, [r3]
 156              	.LVL7:
 174:SYS/memng/mmu.c ****     {
 157              		.loc 1 174 84 discriminator 3 view .LVU49
 158 000a FAE7     		b	.L8
 159              	.L19:
 178:SYS/memng/mmu.c **** 
 179:SYS/memng/mmu.c ****     if (pxIterator == NULL)
 160              		.loc 1 179 5 is_stmt 1 view .LVU50
 161              		.loc 1 179 8 is_stmt 0 view .LVU51
ARM GAS  /tmp/ccwojmLH.s 			page 7


 162 000c 3BB3     		cbz	r3, .L16
 168:SYS/memng/mmu.c ****     volatile MemBlock_TypeDef *pxIterator;
 163              		.loc 1 168 1 view .LVU52
 164 000e 10B4     		push	{r4}
 165              	.LCFI0:
 166              		.cfi_def_cfa_offset 4
 167              		.cfi_offset 4, -4
 180:SYS/memng/mmu.c ****         return;
 181:SYS/memng/mmu.c **** 
 182:SYS/memng/mmu.c ****     puc = (uint8_t *)pxIterator;
 168              		.loc 1 182 5 is_stmt 1 view .LVU53
 169              	.LVL8:
 183:SYS/memng/mmu.c ****     if ((puc + pxIterator->size) == (uint8_t *)pxBlockToInsert)
 170              		.loc 1 183 5 view .LVU54
 171              		.loc 1 183 26 is_stmt 0 view .LVU55
 172 0010 9A88     		ldrh	r2, [r3, #4]
 173              		.loc 1 183 14 view .LVU56
 174 0012 1A44     		add	r2, r2, r3
 175              		.loc 1 183 8 view .LVU57
 176 0014 8242     		cmp	r2, r0
 177 0016 0CD0     		beq	.L20
 178              	.L11:
 184:SYS/memng/mmu.c ****     {
 185:SYS/memng/mmu.c ****         pxIterator->size += pxBlockToInsert->size;
 186:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 187:SYS/memng/mmu.c ****     }
 188:SYS/memng/mmu.c **** 
 189:SYS/memng/mmu.c ****     /* Do the block being inserted, and the block it is being inserted before
 190:SYS/memng/mmu.c **** 	make a contiguous block of memory? */
 191:SYS/memng/mmu.c ****     puc = (uint8_t *)pxBlockToInsert;
 179              		.loc 1 191 5 is_stmt 1 view .LVU58
 180              	.LVL9:
 192:SYS/memng/mmu.c ****     if ((puc + pxBlockToInsert->size) == (uint8_t *)pxIterator->nxtFree)
 181              		.loc 1 192 5 view .LVU59
 182              		.loc 1 192 31 is_stmt 0 view .LVU60
 183 0018 8288     		ldrh	r2, [r0, #4]
 184              		.loc 1 192 14 view .LVU61
 185 001a 8418     		adds	r4, r0, r2
 186              		.loc 1 192 63 view .LVU62
 187 001c 1968     		ldr	r1, [r3]
 188              		.loc 1 192 8 view .LVU63
 189 001e 8C42     		cmp	r4, r1
 190 0020 0ED0     		beq	.L21
 193:SYS/memng/mmu.c ****     {
 194:SYS/memng/mmu.c ****         if (pxIterator->nxtFree != MemEnd)
 195:SYS/memng/mmu.c ****         {
 196:SYS/memng/mmu.c ****             /* Form one big block from the two blocks. */
 197:SYS/memng/mmu.c ****             pxBlockToInsert->size += pxIterator->nxtFree->size;
 198:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = pxIterator->nxtFree->nxtFree;
 199:SYS/memng/mmu.c ****         }
 200:SYS/memng/mmu.c ****         else
 201:SYS/memng/mmu.c ****         {
 202:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = MemEnd;
 203:SYS/memng/mmu.c ****         }
 204:SYS/memng/mmu.c ****     }
 205:SYS/memng/mmu.c ****     else
 206:SYS/memng/mmu.c ****     {
ARM GAS  /tmp/ccwojmLH.s 			page 8


 207:SYS/memng/mmu.c ****         pxBlockToInsert->nxtFree = pxIterator->nxtFree;
 191              		.loc 1 207 9 is_stmt 1 view .LVU64
 192              		.loc 1 207 46 is_stmt 0 view .LVU65
 193 0022 1A68     		ldr	r2, [r3]
 194              		.loc 1 207 34 view .LVU66
 195 0024 0260     		str	r2, [r0]
 196              	.L14:
 208:SYS/memng/mmu.c ****     }
 209:SYS/memng/mmu.c **** 
 210:SYS/memng/mmu.c ****     if (pxIterator != pxBlockToInsert)
 197              		.loc 1 210 5 is_stmt 1 view .LVU67
 198              		.loc 1 210 8 is_stmt 0 view .LVU68
 199 0026 9842     		cmp	r0, r3
 200 0028 00D0     		beq	.L7
 211:SYS/memng/mmu.c ****     {
 212:SYS/memng/mmu.c ****         pxIterator->nxtFree = pxBlockToInsert;
 201              		.loc 1 212 9 is_stmt 1 view .LVU69
 202              		.loc 1 212 29 is_stmt 0 view .LVU70
 203 002a 1860     		str	r0, [r3]
 204              	.L7:
 213:SYS/memng/mmu.c ****     }
 214:SYS/memng/mmu.c **** }
 205              		.loc 1 214 1 view .LVU71
 206 002c 5DF8044B 		ldr	r4, [sp], #4
 207              	.LCFI1:
 208              		.cfi_remember_state
 209              		.cfi_restore 4
 210              		.cfi_def_cfa_offset 0
 211 0030 7047     		bx	lr
 212              	.LVL10:
 213              	.L20:
 214              	.LCFI2:
 215              		.cfi_restore_state
 185:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 216              		.loc 1 185 9 is_stmt 1 view .LVU72
 185:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 217              		.loc 1 185 26 is_stmt 0 view .LVU73
 218 0032 9988     		ldrh	r1, [r3, #4]
 185:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 219              		.loc 1 185 44 view .LVU74
 220 0034 8288     		ldrh	r2, [r0, #4]
 185:SYS/memng/mmu.c ****         pxBlockToInsert = pxIterator;
 221              		.loc 1 185 26 view .LVU75
 222 0036 0A44     		add	r2, r2, r1
 223 0038 92B2     		uxth	r2, r2
 224 003a 9A80     		strh	r2, [r3, #4]	@ movhi
 186:SYS/memng/mmu.c ****     }
 225              		.loc 1 186 9 is_stmt 1 view .LVU76
 226              	.LVL11:
 186:SYS/memng/mmu.c ****     }
 227              		.loc 1 186 25 is_stmt 0 view .LVU77
 228 003c 1846     		mov	r0, r3
 229 003e EBE7     		b	.L11
 230              	.LVL12:
 231              	.L21:
 194:SYS/memng/mmu.c ****         {
 232              		.loc 1 194 9 is_stmt 1 view .LVU78
ARM GAS  /tmp/ccwojmLH.s 			page 9


 194:SYS/memng/mmu.c ****         {
 233              		.loc 1 194 23 is_stmt 0 view .LVU79
 234 0040 1C68     		ldr	r4, [r3]
 194:SYS/memng/mmu.c ****         {
 235              		.loc 1 194 33 view .LVU80
 236 0042 0849     		ldr	r1, .L22+4
 237 0044 0968     		ldr	r1, [r1]
 194:SYS/memng/mmu.c ****         {
 238              		.loc 1 194 12 view .LVU81
 239 0046 8C42     		cmp	r4, r1
 240 0048 07D0     		beq	.L13
 197:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = pxIterator->nxtFree->nxtFree;
 241              		.loc 1 197 13 is_stmt 1 view .LVU82
 197:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = pxIterator->nxtFree->nxtFree;
 242              		.loc 1 197 48 is_stmt 0 view .LVU83
 243 004a 1968     		ldr	r1, [r3]
 197:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = pxIterator->nxtFree->nxtFree;
 244              		.loc 1 197 57 view .LVU84
 245 004c 8988     		ldrh	r1, [r1, #4]
 197:SYS/memng/mmu.c ****             pxBlockToInsert->nxtFree = pxIterator->nxtFree->nxtFree;
 246              		.loc 1 197 35 view .LVU85
 247 004e 0A44     		add	r2, r2, r1
 248 0050 8280     		strh	r2, [r0, #4]	@ movhi
 198:SYS/memng/mmu.c ****         }
 249              		.loc 1 198 13 is_stmt 1 view .LVU86
 198:SYS/memng/mmu.c ****         }
 250              		.loc 1 198 50 is_stmt 0 view .LVU87
 251 0052 1A68     		ldr	r2, [r3]
 198:SYS/memng/mmu.c ****         }
 252              		.loc 1 198 59 view .LVU88
 253 0054 1268     		ldr	r2, [r2]
 198:SYS/memng/mmu.c ****         }
 254              		.loc 1 198 38 view .LVU89
 255 0056 0260     		str	r2, [r0]
 256 0058 E5E7     		b	.L14
 257              	.L13:
 202:SYS/memng/mmu.c ****         }
 258              		.loc 1 202 13 is_stmt 1 view .LVU90
 202:SYS/memng/mmu.c ****         }
 259              		.loc 1 202 38 is_stmt 0 view .LVU91
 260 005a 0160     		str	r1, [r0]
 261 005c E3E7     		b	.L14
 262              	.LVL13:
 263              	.L16:
 264              	.LCFI3:
 265              		.cfi_def_cfa_offset 0
 266              		.cfi_restore 4
 202:SYS/memng/mmu.c ****         }
 267              		.loc 1 202 38 view .LVU92
 268 005e 7047     		bx	lr
 269              	.L23:
 270              		.align	2
 271              	.L22:
 272 0060 00000000 		.word	MemStart
 273 0064 00000000 		.word	MemEnd
 274              		.cfi_endproc
 275              	.LFE7:
ARM GAS  /tmp/ccwojmLH.s 			page 10


 277              		.section	.text.MMU_Get_Monitor,"ax",%progbits
 278              		.align	1
 279              		.global	MMU_Get_Monitor
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv4-sp-d16
 285              	MMU_Get_Monitor:
 286              	.LVL14:
 287              	.LFB3:
  20:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxIterator;
 288              		.loc 1 20 1 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
  20:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxIterator;
 293              		.loc 1 20 1 is_stmt 0 view .LVU94
 294 0000 70B4     		push	{r4, r5, r6}
 295              	.LCFI4:
 296              		.cfi_def_cfa_offset 12
 297              		.cfi_offset 4, -12
 298              		.cfi_offset 5, -8
 299              		.cfi_offset 6, -4
 300 0002 0646     		mov	r6, r0
  21:SYS/memng/mmu.c **** 
 301              		.loc 1 21 5 is_stmt 1 view .LVU95
  24:SYS/memng/mmu.c ****     {
 302              		.loc 1 24 5 view .LVU96
 303              	.LVL15:
  24:SYS/memng/mmu.c ****     {
 304              		.loc 1 24 21 is_stmt 0 view .LVU97
 305 0004 0B4A     		ldr	r2, .L29
 306              	.LVL16:
 307              	.L25:
  24:SYS/memng/mmu.c ****     {
 308              		.loc 1 24 44 discriminator 1 view .LVU98
 309 0006 1168     		ldr	r1, [r2]
  24:SYS/memng/mmu.c ****     {
 310              		.loc 1 24 54 discriminator 1 view .LVU99
 311 0008 0B4B     		ldr	r3, .L29+4
 312 000a 1B68     		ldr	r3, [r3]
  24:SYS/memng/mmu.c ****     {
 313              		.loc 1 24 5 discriminator 1 view .LVU100
 314 000c 9942     		cmp	r1, r3
 315 000e 05D0     		beq	.L28
  26:SYS/memng/mmu.c ****     }
 316              		.loc 1 26 9 is_stmt 1 discriminator 3 view .LVU101
  26:SYS/memng/mmu.c ****     }
 317              		.loc 1 26 20 is_stmt 0 discriminator 3 view .LVU102
 318 0010 0A49     		ldr	r1, .L29+8
 319 0012 8B8A     		ldrh	r3, [r1, #20]
  26:SYS/memng/mmu.c ****     }
 320              		.loc 1 26 34 discriminator 3 view .LVU103
 321 0014 0133     		adds	r3, r3, #1
 322 0016 8B82     		strh	r3, [r1, #20]	@ movhi
  24:SYS/memng/mmu.c ****     {
ARM GAS  /tmp/ccwojmLH.s 			page 11


 323              		.loc 1 24 76 discriminator 3 view .LVU104
 324 0018 1268     		ldr	r2, [r2]
 325              	.LVL17:
  24:SYS/memng/mmu.c ****     {
 326              		.loc 1 24 76 discriminator 3 view .LVU105
 327 001a F4E7     		b	.L25
 328              	.L28:
  29:SYS/memng/mmu.c **** }
 329              		.loc 1 29 5 is_stmt 1 view .LVU106
  29:SYS/memng/mmu.c **** }
 330              		.loc 1 29 12 is_stmt 0 view .LVU107
 331 001c 3446     		mov	r4, r6
 332 001e 074D     		ldr	r5, .L29+8
 333 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 334              	.LVL18:
  29:SYS/memng/mmu.c **** }
 335              		.loc 1 29 12 view .LVU108
 336 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 337 0024 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 338 0026 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 339 0028 2B68     		ldr	r3, [r5]
 340 002a 2360     		str	r3, [r4]
  30:SYS/memng/mmu.c **** 
 341              		.loc 1 30 1 view .LVU109
 342 002c 3046     		mov	r0, r6
 343 002e 70BC     		pop	{r4, r5, r6}
 344              	.LCFI5:
 345              		.cfi_restore 6
 346              		.cfi_restore 5
 347              		.cfi_restore 4
 348              		.cfi_def_cfa_offset 0
 349              	.LVL19:
  30:SYS/memng/mmu.c **** 
 350              		.loc 1 30 1 view .LVU110
 351 0030 7047     		bx	lr
 352              	.L30:
 353 0032 00BF     		.align	2
 354              	.L29:
 355 0034 00000000 		.word	MemStart
 356 0038 00000000 		.word	MemEnd
 357 003c 00000000 		.word	Mem_Monitor
 358              		.cfi_endproc
 359              	.LFE3:
 361              		.section	.text.MMU_Malloc,"ax",%progbits
 362              		.align	1
 363              		.global	MMU_Malloc
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu fpv4-sp-d16
 369              	MMU_Malloc:
 370              	.LVL20:
 371              	.LFB5:
  66:SYS/memng/mmu.c ****     MemBlock_TypeDef *PrvFreeBlock = NULL;
 372              		.loc 1 66 1 is_stmt 1 view -0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwojmLH.s 			page 12


 375              		@ frame_needed = 0, uses_anonymous_args = 0
  66:SYS/memng/mmu.c ****     MemBlock_TypeDef *PrvFreeBlock = NULL;
 376              		.loc 1 66 1 is_stmt 0 view .LVU112
 377 0000 70B5     		push	{r4, r5, r6, lr}
 378              	.LCFI6:
 379              		.cfi_def_cfa_offset 16
 380              		.cfi_offset 4, -16
 381              		.cfi_offset 5, -12
 382              		.cfi_offset 6, -8
 383              		.cfi_offset 14, -4
 384 0002 0446     		mov	r4, r0
  67:SYS/memng/mmu.c ****     MemBlock_TypeDef *NxtFreeBlock = NULL;
 385              		.loc 1 67 5 is_stmt 1 view .LVU113
 386              	.LVL21:
  68:SYS/memng/mmu.c ****     MemBlock_TypeDef *Block_Tmp = NULL;
 387              		.loc 1 68 5 view .LVU114
  69:SYS/memng/mmu.c ****     void *mem_addr = NULL;
 388              		.loc 1 69 5 view .LVU115
  70:SYS/memng/mmu.c **** 
 389              		.loc 1 70 5 view .LVU116
  72:SYS/memng/mmu.c **** 
 390              		.loc 1 72 5 view .LVU117
 391              		.syntax unified
 392              	@ 72 "SYS/memng/mmu.c" 1
 393 0004 72B6     		cpsid i
 394              	@ 0 "" 2
  74:SYS/memng/mmu.c ****     {
 395              		.loc 1 74 5 view .LVU118
  74:SYS/memng/mmu.c ****     {
 396              		.loc 1 74 21 is_stmt 0 view .LVU119
 397              		.thumb
 398              		.syntax unified
 399 0006 2A4B     		ldr	r3, .L46
 400 0008 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
  74:SYS/memng/mmu.c ****     {
 401              		.loc 1 74 8 view .LVU120
 402 000c 9BB1     		cbz	r3, .L44
 403              	.LVL22:
 404              	.L32:
  80:SYS/memng/mmu.c ****     {
 405              		.loc 1 80 5 is_stmt 1 view .LVU121
  80:SYS/memng/mmu.c ****     {
 406              		.loc 1 80 8 is_stmt 0 view .LVU122
 407 000e 002C     		cmp	r4, #0
 408 0010 44D0     		beq	.L38
  82:SYS/memng/mmu.c **** 
 409              		.loc 1 82 9 is_stmt 1 view .LVU123
  82:SYS/memng/mmu.c **** 
 410              		.loc 1 82 14 is_stmt 0 view .LVU124
 411 0012 04F10803 		add	r3, r4, #8
 412 0016 9BB2     		uxth	r3, r3
 413              	.LVL23:
  85:SYS/memng/mmu.c ****         {
 414              		.loc 1 85 9 is_stmt 1 view .LVU125
  85:SYS/memng/mmu.c ****         {
 415              		.loc 1 85 12 is_stmt 0 view .LVU126
 416 0018 13F0030F 		tst	r3, #3
ARM GAS  /tmp/ccwojmLH.s 			page 13


 417 001c 03D0     		beq	.L34
  88:SYS/memng/mmu.c ****         }
 418              		.loc 1 88 13 is_stmt 1 view .LVU127
  88:SYS/memng/mmu.c ****         }
 419              		.loc 1 88 18 is_stmt 0 view .LVU128
 420 001e 23F00303 		bic	r3, r3, #3
 421              	.LVL24:
  88:SYS/memng/mmu.c ****         }
 422              		.loc 1 88 18 view .LVU129
 423 0022 0433     		adds	r3, r3, #4
 424 0024 9BB2     		uxth	r3, r3
 425              	.LVL25:
 426              	.L34:
  91:SYS/memng/mmu.c ****         {
 427              		.loc 1 91 9 is_stmt 1 view .LVU130
  91:SYS/memng/mmu.c ****         {
 428              		.loc 1 91 18 is_stmt 0 view .LVU131
 429 0026 1D46     		mov	r5, r3
  91:SYS/memng/mmu.c ****         {
 430              		.loc 1 91 32 view .LVU132
 431 0028 214A     		ldr	r2, .L46
 432 002a 9268     		ldr	r2, [r2, #8]
  91:SYS/memng/mmu.c ****         {
 433              		.loc 1 91 12 view .LVU133
 434 002c 9342     		cmp	r3, r2
 435 002e 39D8     		bhi	.L39
  94:SYS/memng/mmu.c ****             Block_Tmp = MemStart.nxtFree;
 436              		.loc 1 94 13 is_stmt 1 view .LVU134
 437              	.LVL26:
  95:SYS/memng/mmu.c **** 
 438              		.loc 1 95 13 view .LVU135
  95:SYS/memng/mmu.c **** 
 439              		.loc 1 95 23 is_stmt 0 view .LVU136
 440 0030 2049     		ldr	r1, .L46+4
 441 0032 0C68     		ldr	r4, [r1]
 442              	.LVL27:
  97:SYS/memng/mmu.c ****             {
 443              		.loc 1 97 13 is_stmt 1 view .LVU137
  97:SYS/memng/mmu.c ****             {
 444              		.loc 1 97 19 is_stmt 0 view .LVU138
 445 0034 07E0     		b	.L36
 446              	.LVL28:
 447              	.L44:
  76:SYS/memng/mmu.c ****         Mem_Monitor.FreeBlock = &MemStart;
 448              		.loc 1 76 9 is_stmt 1 view .LVU139
 449 0036 FFF7FEFF 		bl	MMU_Init
 450              	.LVL29:
  77:SYS/memng/mmu.c ****     }
 451              		.loc 1 77 9 view .LVU140
  77:SYS/memng/mmu.c ****     }
 452              		.loc 1 77 31 is_stmt 0 view .LVU141
 453 003a 1D4B     		ldr	r3, .L46
 454 003c 1D4A     		ldr	r2, .L46+4
 455 003e 1A61     		str	r2, [r3, #16]
 456 0040 E5E7     		b	.L32
 457              	.LVL30:
 458              	.L40:
ARM GAS  /tmp/ccwojmLH.s 			page 14


  99:SYS/memng/mmu.c ****                 Block_Tmp = Block_Tmp->nxtFree;
 459              		.loc 1 99 30 view .LVU142
 460 0042 2146     		mov	r1, r4
 461              	.LVL31:
 100:SYS/memng/mmu.c ****             }
 462              		.loc 1 100 27 view .LVU143
 463 0044 1446     		mov	r4, r2
 464              	.LVL32:
 465              	.L36:
  97:SYS/memng/mmu.c ****             {
 466              		.loc 1 97 30 view .LVU144
 467 0046 A288     		ldrh	r2, [r4, #4]
  97:SYS/memng/mmu.c ****             {
 468              		.loc 1 97 19 view .LVU145
 469 0048 9A42     		cmp	r2, r3
 470 004a 02D2     		bcs	.L35
  97:SYS/memng/mmu.c ****             {
 471              		.loc 1 97 58 discriminator 1 view .LVU146
 472 004c 2268     		ldr	r2, [r4]
  97:SYS/memng/mmu.c ****             {
 473              		.loc 1 97 45 discriminator 1 view .LVU147
 474 004e 002A     		cmp	r2, #0
 475 0050 F7D1     		bne	.L40
 476              	.L35:
 103:SYS/memng/mmu.c ****             {
 477              		.loc 1 103 13 is_stmt 1 view .LVU148
 103:SYS/memng/mmu.c ****             {
 478              		.loc 1 103 39 is_stmt 0 view .LVU149
 479 0052 04F07040 		and	r0, r4, #-268435456
 103:SYS/memng/mmu.c ****             {
 480              		.loc 1 103 56 view .LVU150
 481 0056 184A     		ldr	r2, .L46+8
 103:SYS/memng/mmu.c ****             {
 482              		.loc 1 103 16 view .LVU151
 483 0058 9042     		cmp	r0, r2
 484 005a 25D1     		bne	.L41
 103:SYS/memng/mmu.c ****             {
 485              		.loc 1 103 90 discriminator 1 view .LVU152
 486 005c 174A     		ldr	r2, .L46+12
 487 005e 1268     		ldr	r2, [r2]
 103:SYS/memng/mmu.c ****             {
 488              		.loc 1 103 76 discriminator 1 view .LVU153
 489 0060 A242     		cmp	r2, r4
 490 0062 23D0     		beq	.L42
 105:SYS/memng/mmu.c **** 
 491              		.loc 1 105 17 is_stmt 1 view .LVU154
 105:SYS/memng/mmu.c **** 
 492              		.loc 1 105 28 is_stmt 0 view .LVU155
 493 0064 1248     		ldr	r0, .L46
 494 0066 8269     		ldr	r2, [r0, #24]
 105:SYS/memng/mmu.c **** 
 495              		.loc 1 105 34 view .LVU156
 496 0068 0132     		adds	r2, r2, #1
 497 006a 8261     		str	r2, [r0, #24]
 107:SYS/memng/mmu.c **** 
 498              		.loc 1 107 17 is_stmt 1 view .LVU157
 107:SYS/memng/mmu.c **** 
ARM GAS  /tmp/ccwojmLH.s 			page 15


 499              		.loc 1 107 61 is_stmt 0 view .LVU158
 500 006c 0E68     		ldr	r6, [r1]
 107:SYS/memng/mmu.c **** 
 501              		.loc 1 107 26 view .LVU159
 502 006e 0836     		adds	r6, r6, #8
 503              	.LVL33:
 109:SYS/memng/mmu.c **** 
 504              		.loc 1 109 17 is_stmt 1 view .LVU160
 109:SYS/memng/mmu.c **** 
 505              		.loc 1 109 50 is_stmt 0 view .LVU161
 506 0070 2268     		ldr	r2, [r4]
 109:SYS/memng/mmu.c **** 
 507              		.loc 1 109 39 view .LVU162
 508 0072 0A60     		str	r2, [r1]
 111:SYS/memng/mmu.c ****                 {
 509              		.loc 1 111 17 is_stmt 1 view .LVU163
 111:SYS/memng/mmu.c ****                 {
 510              		.loc 1 111 31 is_stmt 0 view .LVU164
 511 0074 A288     		ldrh	r2, [r4, #4]
 111:SYS/memng/mmu.c ****                 {
 512              		.loc 1 111 38 view .LVU165
 513 0076 D11A     		subs	r1, r2, r3
 514              	.LVL34:
 111:SYS/memng/mmu.c ****                 {
 515              		.loc 1 111 20 view .LVU166
 516 0078 0829     		cmp	r1, #8
 517 007a 09DC     		bgt	.L45
 518              	.LVL35:
 519              	.L37:
 120:SYS/memng/mmu.c ****                 Mem_Monitor.used_size += size;
 520              		.loc 1 120 17 is_stmt 1 view .LVU167
 120:SYS/memng/mmu.c ****                 Mem_Monitor.used_size += size;
 521              		.loc 1 120 41 is_stmt 0 view .LVU168
 522 007c 0C4B     		ldr	r3, .L46
 523 007e 9A68     		ldr	r2, [r3, #8]
 524 0080 521B     		subs	r2, r2, r5
 525 0082 9A60     		str	r2, [r3, #8]
 121:SYS/memng/mmu.c **** 
 526              		.loc 1 121 17 is_stmt 1 view .LVU169
 121:SYS/memng/mmu.c **** 
 527              		.loc 1 121 39 is_stmt 0 view .LVU170
 528 0084 5A68     		ldr	r2, [r3, #4]
 529 0086 1544     		add	r5, r5, r2
 530 0088 5D60     		str	r5, [r3, #4]
 123:SYS/memng/mmu.c ****             }
 531              		.loc 1 123 17 is_stmt 1 view .LVU171
 123:SYS/memng/mmu.c ****             }
 532              		.loc 1 123 36 is_stmt 0 view .LVU172
 533 008a 0023     		movs	r3, #0
 534 008c 2360     		str	r3, [r4]
 535 008e 06E0     		b	.L33
 536              	.LVL36:
 537              	.L45:
 113:SYS/memng/mmu.c ****                     NxtFreeBlock->size = Block_Tmp->size - size;
 538              		.loc 1 113 21 is_stmt 1 view .LVU173
 113:SYS/memng/mmu.c ****                     NxtFreeBlock->size = Block_Tmp->size - size;
 539              		.loc 1 113 34 is_stmt 0 view .LVU174
ARM GAS  /tmp/ccwojmLH.s 			page 16


 540 0090 6019     		adds	r0, r4, r5
 541              	.LVL37:
 114:SYS/memng/mmu.c ****                     Block_Tmp->size = size;
 542              		.loc 1 114 21 is_stmt 1 view .LVU175
 114:SYS/memng/mmu.c ****                     Block_Tmp->size = size;
 543              		.loc 1 114 40 is_stmt 0 view .LVU176
 544 0092 8180     		strh	r1, [r0, #4]	@ movhi
 115:SYS/memng/mmu.c **** 
 545              		.loc 1 115 21 is_stmt 1 view .LVU177
 115:SYS/memng/mmu.c **** 
 546              		.loc 1 115 37 is_stmt 0 view .LVU178
 547 0094 A380     		strh	r3, [r4, #4]	@ movhi
 117:SYS/memng/mmu.c ****                 }
 548              		.loc 1 117 21 is_stmt 1 view .LVU179
 549 0096 FFF7FEFF 		bl	MMU_InsertFreeBlock
 550              	.LVL38:
 117:SYS/memng/mmu.c ****                 }
 551              		.loc 1 117 21 is_stmt 0 view .LVU180
 552 009a EFE7     		b	.L37
 553              	.LVL39:
 554              	.L38:
  70:SYS/memng/mmu.c **** 
 555              		.loc 1 70 11 view .LVU181
 556 009c 0026     		movs	r6, #0
 557              	.LVL40:
 558              	.L33:
 128:SYS/memng/mmu.c **** 
 559              		.loc 1 128 5 is_stmt 1 view .LVU182
 560              		.syntax unified
 561              	@ 128 "SYS/memng/mmu.c" 1
 562 009e 62B6     		cpsie i
 563              	@ 0 "" 2
 130:SYS/memng/mmu.c **** }
 564              		.loc 1 130 5 view .LVU183
 131:SYS/memng/mmu.c **** 
 565              		.loc 1 131 1 is_stmt 0 view .LVU184
 566              		.thumb
 567              		.syntax unified
 568 00a0 3046     		mov	r0, r6
 569 00a2 70BD     		pop	{r4, r5, r6, pc}
 570              	.LVL41:
 571              	.L39:
  70:SYS/memng/mmu.c **** 
 572              		.loc 1 70 11 view .LVU185
 573 00a4 0026     		movs	r6, #0
 574 00a6 FAE7     		b	.L33
 575              	.LVL42:
 576              	.L41:
  70:SYS/memng/mmu.c **** 
 577              		.loc 1 70 11 view .LVU186
 578 00a8 0026     		movs	r6, #0
 579 00aa F8E7     		b	.L33
 580              	.L42:
 581 00ac 0026     		movs	r6, #0
 582 00ae F6E7     		b	.L33
 583              	.L47:
 584              		.align	2
ARM GAS  /tmp/ccwojmLH.s 			page 17


 585              	.L46:
 586 00b0 00000000 		.word	Mem_Monitor
 587 00b4 00000000 		.word	MemStart
 588 00b8 00000000 		.word	Mem_Buff
 589 00bc 00000000 		.word	MemEnd
 590              		.cfi_endproc
 591              	.LFE5:
 593              		.section	.text.MMU_Free,"ax",%progbits
 594              		.align	1
 595              		.global	MMU_Free
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 599              		.fpu fpv4-sp-d16
 601              	MMU_Free:
 602              	.LVL43:
 603              	.LFB6:
 134:SYS/memng/mmu.c ****     uint8_t *puc = (uint8_t *)ptr;
 604              		.loc 1 134 1 is_stmt 1 view -0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 135:SYS/memng/mmu.c ****     MemBlock_TypeDef *pxLink;
 608              		.loc 1 135 5 view .LVU188
 136:SYS/memng/mmu.c **** 
 609              		.loc 1 136 5 view .LVU189
 138:SYS/memng/mmu.c ****     {
 610              		.loc 1 138 5 view .LVU190
 138:SYS/memng/mmu.c ****     {
 611              		.loc 1 138 8 is_stmt 0 view .LVU191
 612 0000 40B1     		cbz	r0, .L51
 613 0002 0346     		mov	r3, r0
 140:SYS/memng/mmu.c **** 
 614              		.loc 1 140 9 is_stmt 1 view .LVU192
 140:SYS/memng/mmu.c **** 
 615              		.loc 1 140 20 is_stmt 0 view .LVU193
 616 0004 0C49     		ldr	r1, .L55
 617 0006 CA69     		ldr	r2, [r1, #28]
 140:SYS/memng/mmu.c **** 
 618              		.loc 1 140 26 view .LVU194
 619 0008 0132     		adds	r2, r2, #1
 620 000a CA61     		str	r2, [r1, #28]
 144:SYS/memng/mmu.c **** 
 621              		.loc 1 144 9 is_stmt 1 view .LVU195
 144:SYS/memng/mmu.c **** 
 622              		.loc 1 144 13 is_stmt 0 view .LVU196
 623 000c 0838     		subs	r0, r0, #8
 624              	.LVL44:
 147:SYS/memng/mmu.c **** 
 625              		.loc 1 147 9 is_stmt 1 view .LVU197
 149:SYS/memng/mmu.c ****         {
 626              		.loc 1 149 9 view .LVU198
 149:SYS/memng/mmu.c ****         {
 627              		.loc 1 149 19 is_stmt 0 view .LVU199
 628 000e 53F8082C 		ldr	r2, [r3, #-8]
 149:SYS/memng/mmu.c ****         {
 629              		.loc 1 149 12 view .LVU200
ARM GAS  /tmp/ccwojmLH.s 			page 18


 630 0012 02B1     		cbz	r2, .L54
 631              	.LVL45:
 632              	.L51:
 149:SYS/memng/mmu.c ****         {
 633              		.loc 1 149 12 view .LVU201
 634 0014 7047     		bx	lr
 635              	.LVL46:
 636              	.L54:
 134:SYS/memng/mmu.c ****     uint8_t *puc = (uint8_t *)ptr;
 637              		.loc 1 134 1 view .LVU202
 638 0016 10B5     		push	{r4, lr}
 639              	.LCFI7:
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 4, -8
 642              		.cfi_offset 14, -4
 151:SYS/memng/mmu.c **** 
 643              		.loc 1 151 13 is_stmt 1 view .LVU203
 644              		.syntax unified
 645              	@ 151 "SYS/memng/mmu.c" 1
 646 0018 72B6     		cpsid i
 647              	@ 0 "" 2
 154:SYS/memng/mmu.c ****             Mem_Monitor.remain_size += pxLink->size;
 648              		.loc 1 154 13 view .LVU204
 154:SYS/memng/mmu.c ****             Mem_Monitor.remain_size += pxLink->size;
 649              		.loc 1 154 44 is_stmt 0 view .LVU205
 650              		.thumb
 651              		.syntax unified
 652 001a 33F8044C 		ldrh	r4, [r3, #-4]
 154:SYS/memng/mmu.c ****             Mem_Monitor.remain_size += pxLink->size;
 653              		.loc 1 154 35 view .LVU206
 654 001e 0A46     		mov	r2, r1
 655 0020 4968     		ldr	r1, [r1, #4]
 656 0022 091B     		subs	r1, r1, r4
 657 0024 5160     		str	r1, [r2, #4]
 155:SYS/memng/mmu.c **** 
 658              		.loc 1 155 13 is_stmt 1 view .LVU207
 155:SYS/memng/mmu.c **** 
 659              		.loc 1 155 46 is_stmt 0 view .LVU208
 660 0026 33F8041C 		ldrh	r1, [r3, #-4]
 155:SYS/memng/mmu.c **** 
 661              		.loc 1 155 37 view .LVU209
 662 002a 9368     		ldr	r3, [r2, #8]
 663              	.LVL47:
 155:SYS/memng/mmu.c **** 
 664              		.loc 1 155 37 view .LVU210
 665 002c 0B44     		add	r3, r3, r1
 666 002e 9360     		str	r3, [r2, #8]
 158:SYS/memng/mmu.c **** 
 667              		.loc 1 158 13 is_stmt 1 view .LVU211
 668 0030 FFF7FEFF 		bl	MMU_InsertFreeBlock
 669              	.LVL48:
 160:SYS/memng/mmu.c ****         }
 670              		.loc 1 160 13 view .LVU212
 671              		.syntax unified
 672              	@ 160 "SYS/memng/mmu.c" 1
 673 0034 62B6     		cpsie i
 674              	@ 0 "" 2
ARM GAS  /tmp/ccwojmLH.s 			page 19


 164:SYS/memng/mmu.c **** }
 675              		.loc 1 164 5 view .LVU213
 676              	.LVL49:
 165:SYS/memng/mmu.c **** 
 677              		.loc 1 165 1 is_stmt 0 view .LVU214
 678              		.thumb
 679              		.syntax unified
 680 0036 10BD     		pop	{r4, pc}
 681              	.L56:
 682              		.align	2
 683              	.L55:
 684 0038 00000000 		.word	Mem_Monitor
 685              		.cfi_endproc
 686              	.LFE6:
 688              		.comm	MemEnd,4,4
 689              		.comm	MemStart,8,4
 690              		.comm	Mem_Monitor,36,4
 691              		.global	Mem_Buff
 692              		.section	.ccmram,"aw"
 693              		.align	2
 696              	Mem_Buff:
 697 0000 00000000 		.space	65536
 697      00000000 
 697      00000000 
 697      00000000 
 697      00000000 
 698              		.text
 699              	.Letext0:
 700              		.file 2 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 701              		.file 3 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 702              		.file 4 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 703              		.file 5 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 704              		.file 6 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 705              		.file 7 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 706              		.file 8 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 707              		.file 9 "SYS/memng/mmu.h"
ARM GAS  /tmp/ccwojmLH.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mmu.c
     /tmp/ccwojmLH.s:18     .text.MMU_Init:0000000000000000 $t
     /tmp/ccwojmLH.s:25     .text.MMU_Init:0000000000000000 MMU_Init
     /tmp/ccwojmLH.s:118    .text.MMU_Init:0000000000000050 $d
                            *COM*:0000000000000024 Mem_Monitor
     /tmp/ccwojmLH.s:696    .ccmram:0000000000000000 Mem_Buff
                            *COM*:0000000000000008 MemStart
                            *COM*:0000000000000004 MemEnd
     /tmp/ccwojmLH.s:127    .text.MMU_InsertFreeBlock:0000000000000000 $t
     /tmp/ccwojmLH.s:133    .text.MMU_InsertFreeBlock:0000000000000000 MMU_InsertFreeBlock
     /tmp/ccwojmLH.s:272    .text.MMU_InsertFreeBlock:0000000000000060 $d
     /tmp/ccwojmLH.s:278    .text.MMU_Get_Monitor:0000000000000000 $t
     /tmp/ccwojmLH.s:285    .text.MMU_Get_Monitor:0000000000000000 MMU_Get_Monitor
     /tmp/ccwojmLH.s:355    .text.MMU_Get_Monitor:0000000000000034 $d
     /tmp/ccwojmLH.s:362    .text.MMU_Malloc:0000000000000000 $t
     /tmp/ccwojmLH.s:369    .text.MMU_Malloc:0000000000000000 MMU_Malloc
     /tmp/ccwojmLH.s:586    .text.MMU_Malloc:00000000000000b0 $d
     /tmp/ccwojmLH.s:594    .text.MMU_Free:0000000000000000 $t
     /tmp/ccwojmLH.s:601    .text.MMU_Free:0000000000000000 MMU_Free
     /tmp/ccwojmLH.s:684    .text.MMU_Free:0000000000000038 $d
     /tmp/ccwojmLH.s:693    .ccmram:0000000000000000 $d

NO UNDEFINED SYMBOLS
