ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"task_manager.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Task_Exit,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Task_Exit:
  26              	.LFB129:
  27              		.file 1 "SYS/task_manager/task_manager.c"
   1:SYS/task_manager/task_manager.c **** #include "task_manager.h"
   2:SYS/task_manager/task_manager.c **** #include "runtime.h"
   3:SYS/task_manager/task_manager.c **** #include "string.h"
   4:SYS/task_manager/task_manager.c **** #include "stddef.h"
   5:SYS/task_manager/task_manager.c **** #include "periph_gpio.h"
   6:SYS/task_manager/task_manager.c **** #include "periph_timer.h"
   7:SYS/task_manager/task_manager.c **** #include <stdio.h>
   8:SYS/task_manager/task_manager.c **** #include "task_manager_cfg.h"
   9:SYS/task_manager/task_manager.c **** #include "binary_tree.h"
  10:SYS/task_manager/task_manager.c **** #include "linked_list.h"
  11:SYS/task_manager/task_manager.c **** #include "mmu.h"
  12:SYS/task_manager/task_manager.c **** 
  13:SYS/task_manager/task_manager.c **** //coder: 8_B!T0
  14:SYS/task_manager/task_manager.c **** //bref:
  15:SYS/task_manager/task_manager.c **** //estabishment a task running system with priority calling functional
  16:SYS/task_manager/task_manager.c **** //alway calling the highest priority function in all function under the ready table
  17:SYS/task_manager/task_manager.c **** //reference to ucos (version earler than v8.6)
  18:SYS/task_manager/task_manager.c **** 
  19:SYS/task_manager/task_manager.c **** /*
  20:SYS/task_manager/task_manager.c **** *******************************   TASK Handle    *******************************
  21:SYS/task_manager/task_manager.c **** 
  22:SYS/task_manager/task_manager.c ****              task0   task1   task2   task3   task4   task5   task6   task7
  23:SYS/task_manager/task_manager.c **** group0     |_______|_______|_______|_______|_______|_______|_______|_______|
  24:SYS/task_manager/task_manager.c **** group1     |_______|_______|_______|_______|_______|_______|_______|_______|
  25:SYS/task_manager/task_manager.c **** group2     |_______|_______|_______|_______|_______|_______|_______|_______|
  26:SYS/task_manager/task_manager.c **** group3     |_______|_______|_______|_______|_______|_______|_______|_______|
  27:SYS/task_manager/task_manager.c **** group4     |_______|_______|_______|_______|_______|_______|_______|_______|
  28:SYS/task_manager/task_manager.c **** group5     |_______|_______|_______|_______|_______|_______|_______|_______|
  29:SYS/task_manager/task_manager.c **** group6     |_______|_______|_______|_______|_______|_______|_______|_______|
  30:SYS/task_manager/task_manager.c **** group7     |_______|_______|_______|_______|_______|_______|_______|_______|
  31:SYS/task_manager/task_manager.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 2


  32:SYS/task_manager/task_manager.c **** */
  33:SYS/task_manager/task_manager.c **** 
  34:SYS/task_manager/task_manager.c **** #define GET_TASKGROUP_PRIORITY(x) x >> 3
  35:SYS/task_manager/task_manager.c **** #define GET_TASKINGROUP_PRIORITY(y) y & 0X07
  36:SYS/task_manager/task_manager.c **** 
  37:SYS/task_manager/task_manager.c **** static const uint8_t Tsk_Handle[256] = {0, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x00 ~ 0
  38:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x10 ~ 0
  39:SYS/task_manager/task_manager.c ****                                         5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x20 ~ 0
  40:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x30 ~ 0
  41:SYS/task_manager/task_manager.c ****                                         6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x40 ~ 0
  42:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x50 ~ 0
  43:SYS/task_manager/task_manager.c ****                                         5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x60 ~ 0
  44:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x70 ~ 0
  45:SYS/task_manager/task_manager.c ****                                         7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x80 ~ 0
  46:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x90 ~ 0
  47:SYS/task_manager/task_manager.c ****                                         5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0xA0 ~ 0
  48:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0xB0 ~ 0
  49:SYS/task_manager/task_manager.c ****                                         6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0xC0 ~ 0
  50:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0xD0 ~ 0
  51:SYS/task_manager/task_manager.c ****                                         5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0xE0 ~ 0
  52:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0}; //0xF0 ~ 0
  53:SYS/task_manager/task_manager.c **** 
  54:SYS/task_manager/task_manager.c **** Task *Task_Ptr[Group_Sum][Task_Priority_Sum];
  55:SYS/task_manager/task_manager.c **** volatile Task *CurRunTsk_Ptr = NULL;
  56:SYS/task_manager/task_manager.c **** volatile Task *NxtRunTsk_Ptr = NULL;
  57:SYS/task_manager/task_manager.c **** static bool traverse_start = false;
  58:SYS/task_manager/task_manager.c **** 
  59:SYS/task_manager/task_manager.c **** static volatile TskMap_State TskHdl_RdyMap = {.Grp = 0, .TskInGrp[0] = 0, .TskInGrp[1] = 0, .TskInG
  60:SYS/task_manager/task_manager.c **** static volatile TskMap_State TskHdl_PndMap = {.Grp = 0, .TskInGrp[0] = 0, .TskInGrp[1] = 0, .TskInG
  61:SYS/task_manager/task_manager.c **** static volatile TskMap_State TskHdl_BlkMap = {.Grp = 0, .TskInGrp[0] = 0, .TskInGrp[1] = 0, .TskInG
  62:SYS/task_manager/task_manager.c **** 
  63:SYS/task_manager/task_manager.c **** static Task_Create_RegList_s TskCrt_RegList = {.num = 0,
  64:SYS/task_manager/task_manager.c ****                                                .list = {.prv = NULL, .nxt = NULL, .data = NULL}};
  65:SYS/task_manager/task_manager.c **** static volatile TaskSys_State TskSys_state = TaskSys_Initial;
  66:SYS/task_manager/task_manager.c **** static uint32_t TaskSys_Idle_US = 0;
  67:SYS/task_manager/task_manager.c **** static float TaskSys_Idle_Ocupy = 0.0f;
  68:SYS/task_manager/task_manager.c **** static SYSTEM_RunTime TaskSys_StartTime;
  69:SYS/task_manager/task_manager.c **** 
  70:SYS/task_manager/task_manager.c **** static void Task_SetReady(Task *tsk);
  71:SYS/task_manager/task_manager.c **** static void Task_ClearReady(Task *tsk);
  72:SYS/task_manager/task_manager.c **** 
  73:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
  74:SYS/task_manager/task_manager.c **** volatile Task *PndHstTsk_Ptr = NULL;
  75:SYS/task_manager/task_manager.c **** 
  76:SYS/task_manager/task_manager.c **** volatile TaskStack_ControlBlock CurTsk_TCB;
  77:SYS/task_manager/task_manager.c **** volatile TaskStack_ControlBlock NxtTsk_TCB;
  78:SYS/task_manager/task_manager.c **** 
  79:SYS/task_manager/task_manager.c **** static uint32_t Task_OS_StkMem[MSP_MEM_SPACE_SIZE];
  80:SYS/task_manager/task_manager.c **** uint32_t *Task_OS_ExpStkBase;
  81:SYS/task_manager/task_manager.c **** 
  82:SYS/task_manager/task_manager.c **** static void Task_SetStkPtr_Val(Task *tsk);
  83:SYS/task_manager/task_manager.c **** static void Task_ClearPending(Task *tsk);
  84:SYS/task_manager/task_manager.c **** static void Task_ClearBlock(Task *tsk);
  85:SYS/task_manager/task_manager.c **** static void Task_SetBASEPRI(uint32_t ulBASEPRI);
  86:SYS/task_manager/task_manager.c **** 
  87:SYS/task_manager/task_manager.c **** void Task_SetPending(Task *tsk);
  88:SYS/task_manager/task_manager.c **** #endif
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 3


  89:SYS/task_manager/task_manager.c **** 
  90:SYS/task_manager/task_manager.c **** static void Task_Exec(Task *tsk_ptr);
  91:SYS/task_manager/task_manager.c **** static void Task_SetPendSVPro(void);
  92:SYS/task_manager/task_manager.c **** void Task_TriggerPendSV(void);
  93:SYS/task_manager/task_manager.c **** 
  94:SYS/task_manager/task_manager.c **** static void ReSet_Task_Data(Task *task)
  95:SYS/task_manager/task_manager.c **** {
  96:SYS/task_manager/task_manager.c ****     task->priority.Suction.Group_Level = 0;
  97:SYS/task_manager/task_manager.c ****     task->priority.Suction.Task_Level = 0;
  98:SYS/task_manager/task_manager.c ****     task->Task_name = NULL;
  99:SYS/task_manager/task_manager.c ****     task->exec_frq = 0;
 100:SYS/task_manager/task_manager.c ****     task->exec_interval_us = 0;
 101:SYS/task_manager/task_manager.c ****     task->Exec_Func = NULL;
 102:SYS/task_manager/task_manager.c **** 
 103:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_frq = 0;
 104:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_time_arv = 0;
 105:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_time_max = 0;
 106:SYS/task_manager/task_manager.c ****     task->Exec_status.Exec_Times = 0;
 107:SYS/task_manager/task_manager.c ****     task->Exec_status.cpu_opy = 0;
 108:SYS/task_manager/task_manager.c ****     task->Exec_status.totlal_running_time = 0;
 109:SYS/task_manager/task_manager.c **** 
 110:SYS/task_manager/task_manager.c ****     task->delay_info.on_delay = false;
 111:SYS/task_manager/task_manager.c ****     task->delay_info.tsk_hdl = 0;
 112:SYS/task_manager/task_manager.c ****     task->delay_info.time_unit = 0;
 113:SYS/task_manager/task_manager.c **** 
 114:SYS/task_manager/task_manager.c ****     List_ItemInit(&task->delay_item, &task->delay_info);
 115:SYS/task_manager/task_manager.c **** 
 116:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(task->Exec_status.Exec_Time));
 117:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(task->Exec_status.Init_Time));
 118:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(task->Exec_status.Start_Time));
 119:SYS/task_manager/task_manager.c **** 
 120:SYS/task_manager/task_manager.c ****     task->Exec_status.State = Task_Done;
 121:SYS/task_manager/task_manager.c **** }
 122:SYS/task_manager/task_manager.c **** 
 123:SYS/task_manager/task_manager.c **** static void Task_ReSet_BaseInfo(Task_Base_Info *info)
 124:SYS/task_manager/task_manager.c **** {
 125:SYS/task_manager/task_manager.c ****     info->avg_exec_us = 0;
 126:SYS/task_manager/task_manager.c ****     info->cpu_opy = 0;
 127:SYS/task_manager/task_manager.c ****     info->exec_frq = 0;
 128:SYS/task_manager/task_manager.c ****     info->exec_times = 0;
 129:SYS/task_manager/task_manager.c ****     info->group = 0;
 130:SYS/task_manager/task_manager.c ****     info->max_exec_us = 0;
 131:SYS/task_manager/task_manager.c ****     info->priority = 0;
 132:SYS/task_manager/task_manager.c **** 
 133:SYS/task_manager/task_manager.c ****     memset(info->name, NULL, TASK_NAME_MAXLEN);
 134:SYS/task_manager/task_manager.c **** }
 135:SYS/task_manager/task_manager.c **** 
 136:SYS/task_manager/task_manager.c **** static bool TaskSys_Init(void)
 137:SYS/task_manager/task_manager.c **** {
 138:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 139:SYS/task_manager/task_manager.c ****     //init OS Stack Memory Space
 140:SYS/task_manager/task_manager.c ****     memset(Task_OS_StkMem, NULL, MSP_MEM_SPACE_SIZE);
 141:SYS/task_manager/task_manager.c **** 
 142:SYS/task_manager/task_manager.c ****     Task_OS_ExpStkBase = Task_OS_StkMem + MSP_MEM_SPACE_SIZE - 1;
 143:SYS/task_manager/task_manager.c **** #endif
 144:SYS/task_manager/task_manager.c **** 
 145:SYS/task_manager/task_manager.c ****     //periph_Timer_CounterMode_Init(Timer_4, TimerCounter_1M_Prescaler, TimerCounter_1us_Period, 0,
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 4


 146:SYS/task_manager/task_manager.c ****     //periph_Timer_Counter_SetEnable(Timer_4, DISABLE);
 147:SYS/task_manager/task_manager.c **** 
 148:SYS/task_manager/task_manager.c ****     uint8_t index = 0;
 149:SYS/task_manager/task_manager.c **** 
 150:SYS/task_manager/task_manager.c ****     for (uint8_t group_index = Group_0; group_index < Group_Sum; group_index++)
 151:SYS/task_manager/task_manager.c ****     {
 152:SYS/task_manager/task_manager.c ****         for (uint8_t task_priority = Task_Priority_0; task_priority < Task_Priority_Sum; task_prior
 153:SYS/task_manager/task_manager.c ****         {
 154:SYS/task_manager/task_manager.c ****             ReSet_Task_Data(Task_Ptr[group_index][task_priority]);
 155:SYS/task_manager/task_manager.c **** 
 156:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 157:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->Stack_Depth = 0;
 158:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Stack = NULL;
 159:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Top_Stk_Ptr = NULL;
 160:SYS/task_manager/task_manager.c **** #endif
 161:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority] = NULL;
 162:SYS/task_manager/task_manager.c **** 
 163:SYS/task_manager/task_manager.c ****             index++;
 164:SYS/task_manager/task_manager.c ****         }
 165:SYS/task_manager/task_manager.c ****     }
 166:SYS/task_manager/task_manager.c **** 
 167:SYS/task_manager/task_manager.c ****     TskCrt_RegList.num = 0;
 168:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.data = NULL;
 169:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.nxt = NULL;
 170:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.prv = NULL;
 171:SYS/task_manager/task_manager.c **** 
 172:SYS/task_manager/task_manager.c ****     ReSet_Task_Data(CurRunTsk_Ptr);
 173:SYS/task_manager/task_manager.c ****     TskSys_state = TaskSys_Prepare;
 174:SYS/task_manager/task_manager.c **** 
 175:SYS/task_manager/task_manager.c ****     NVIC_SetPriority(PendSV_IRQn, 15);
 176:SYS/task_manager/task_manager.c **** }
 177:SYS/task_manager/task_manager.c **** 
 178:SYS/task_manager/task_manager.c **** static void Task_Exit(void)
 179:SYS/task_manager/task_manager.c **** {
  28              		.loc 1 179 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
 180:SYS/task_manager/task_manager.c ****     //task caller will not exit
 181:SYS/task_manager/task_manager.c ****     while (true)
  35              		.loc 1 181 5 discriminator 1 view .LVU1
 182:SYS/task_manager/task_manager.c ****     {
 183:SYS/task_manager/task_manager.c ****     }
  36              		.loc 1 183 5 discriminator 1 view .LVU2
 181:SYS/task_manager/task_manager.c ****     {
  37              		.loc 1 181 11 discriminator 1 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE129:
  42              		.section	.text.Task_SetBASEPRI,"ax",%progbits
  43              		.align	1
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 5


  47              		.fpu fpv4-sp-d16
  49              	Task_SetBASEPRI:
  50              	.LVL0:
  51              	.LFB137:
 184:SYS/task_manager/task_manager.c **** }
 185:SYS/task_manager/task_manager.c **** 
 186:SYS/task_manager/task_manager.c **** static void Task_Idle(void)
 187:SYS/task_manager/task_manager.c **** {
 188:SYS/task_manager/task_manager.c ****     SYSTEM_RunTime cur_time;
 189:SYS/task_manager/task_manager.c ****     SYSTEM_RunTime time_diff;
 190:SYS/task_manager/task_manager.c **** 
 191:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&time_diff);
 192:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&cur_time);
 193:SYS/task_manager/task_manager.c **** 
 194:SYS/task_manager/task_manager.c ****     cur_time = Get_CurrentRunningUs();
 195:SYS/task_manager/task_manager.c ****     time_diff = Get_TimeDifference_Between(TaskSys_StartTime, cur_time);
 196:SYS/task_manager/task_manager.c **** 
 197:SYS/task_manager/task_manager.c ****     TaskSys_Idle_US++;
 198:SYS/task_manager/task_manager.c ****     TaskSys_Idle_Ocupy = (TaskSys_Idle_US / (float)time_diff);
 199:SYS/task_manager/task_manager.c **** }
 200:SYS/task_manager/task_manager.c **** 
 201:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 202:SYS/task_manager/task_manager.c **** 
 203:SYS/task_manager/task_manager.c **** void Task_Resume_FromBlock(Task *tsk)
 204:SYS/task_manager/task_manager.c **** {
 205:SYS/task_manager/task_manager.c ****     Task_ClearBlock(tsk);
 206:SYS/task_manager/task_manager.c ****     Task_SetReady(tsk);
 207:SYS/task_manager/task_manager.c **** 
 208:SYS/task_manager/task_manager.c ****     tsk->Exec_status.State = Task_Running;
 209:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Top_Stk_Ptr = &tsk->TCB.Top_Stk_Ptr;
 210:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Stack = tsk->TCB.Stack;
 211:SYS/task_manager/task_manager.c ****     CurRunTsk_Ptr = tsk;
 212:SYS/task_manager/task_manager.c **** }
 213:SYS/task_manager/task_manager.c **** 
 214:SYS/task_manager/task_manager.c **** void Task_SetBlock(Task *tsk)
 215:SYS/task_manager/task_manager.c **** {
 216:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 217:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 218:SYS/task_manager/task_manager.c **** 
 219:SYS/task_manager/task_manager.c ****     //set current group block
 220:SYS/task_manager/task_manager.c ****     TskHdl_BlkMap.Grp.Flg |= 1 << grp_id;
 221:SYS/task_manager/task_manager.c ****     //set current task under this group flag to block
 222:SYS/task_manager/task_manager.c ****     TskHdl_BlkMap.TskInGrp[grp_id].Flg |= 1 << tsk_id;
 223:SYS/task_manager/task_manager.c **** 
 224:SYS/task_manager/task_manager.c ****     //reset task in ready reg group
 225:SYS/task_manager/task_manager.c ****     TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 226:SYS/task_manager/task_manager.c ****     //if no task ready then clear group reg
 227:SYS/task_manager/task_manager.c ****     if (TskHdl_RdyMap.TskInGrp[grp_id].Flg == 0)
 228:SYS/task_manager/task_manager.c ****     {
 229:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.Grp.Flg &= ~(1 << grp_id);
 230:SYS/task_manager/task_manager.c ****     }
 231:SYS/task_manager/task_manager.c **** 
 232:SYS/task_manager/task_manager.c ****     //set task state
 233:SYS/task_manager/task_manager.c ****     tsk->Exec_status.State = Task_Block;
 234:SYS/task_manager/task_manager.c **** 
 235:SYS/task_manager/task_manager.c ****     CurRunTsk_Ptr = NULL;
 236:SYS/task_manager/task_manager.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 6


 237:SYS/task_manager/task_manager.c ****     Task_SetBASEPRI(0);
 238:SYS/task_manager/task_manager.c **** }
 239:SYS/task_manager/task_manager.c **** 
 240:SYS/task_manager/task_manager.c **** void Task_SetPending(Task *tsk)
 241:SYS/task_manager/task_manager.c **** {
 242:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 243:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 244:SYS/task_manager/task_manager.c **** 
 245:SYS/task_manager/task_manager.c ****     //set current group pending
 246:SYS/task_manager/task_manager.c ****     TskHdl_PndMap.Grp.Flg |= 1 << grp_id;
 247:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 248:SYS/task_manager/task_manager.c ****     TskHdl_PndMap.TskInGrp[grp_id].Flg |= 1 << tsk_id;
 249:SYS/task_manager/task_manager.c **** 
 250:SYS/task_manager/task_manager.c ****     //set task state
 251:SYS/task_manager/task_manager.c ****     tsk->Exec_status.State = Task_Pending;
 252:SYS/task_manager/task_manager.c **** }
 253:SYS/task_manager/task_manager.c **** 
 254:SYS/task_manager/task_manager.c **** void Task_SwitchStack(void)
 255:SYS/task_manager/task_manager.c **** {
 256:SYS/task_manager/task_manager.c ****     CurTsk_TCB = NxtTsk_TCB;
 257:SYS/task_manager/task_manager.c **** }
 258:SYS/task_manager/task_manager.c **** 
 259:SYS/task_manager/task_manager.c **** Task *Task_Get_HighestRank_PndTask(void)
 260:SYS/task_manager/task_manager.c **** {
 261:SYS/task_manager/task_manager.c ****     uint8_t grp_id;
 262:SYS/task_manager/task_manager.c ****     uint8_t tsk_id;
 263:SYS/task_manager/task_manager.c **** 
 264:SYS/task_manager/task_manager.c ****     if (TskHdl_PndMap.Grp.Flg)
 265:SYS/task_manager/task_manager.c ****     {
 266:SYS/task_manager/task_manager.c ****         //find group
 267:SYS/task_manager/task_manager.c ****         grp_id = Tsk_Handle[TskHdl_PndMap.Grp.Flg];
 268:SYS/task_manager/task_manager.c ****         //find task in group
 269:SYS/task_manager/task_manager.c ****         tsk_id = Tsk_Handle[TskHdl_PndMap.TskInGrp[grp_id].Flg];
 270:SYS/task_manager/task_manager.c ****     }
 271:SYS/task_manager/task_manager.c ****     else
 272:SYS/task_manager/task_manager.c ****         return NULL;
 273:SYS/task_manager/task_manager.c **** 
 274:SYS/task_manager/task_manager.c ****     if (Task_Ptr[grp_id][tsk_id] != NULL)
 275:SYS/task_manager/task_manager.c ****     {
 276:SYS/task_manager/task_manager.c ****         return Task_Ptr[grp_id][tsk_id];
 277:SYS/task_manager/task_manager.c ****     }
 278:SYS/task_manager/task_manager.c ****     else
 279:SYS/task_manager/task_manager.c ****     {
 280:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.Grp.Flg &= ~(1 << grp_id);
 281:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 282:SYS/task_manager/task_manager.c ****         return NULL;
 283:SYS/task_manager/task_manager.c ****     }
 284:SYS/task_manager/task_manager.c **** }
 285:SYS/task_manager/task_manager.c **** 
 286:SYS/task_manager/task_manager.c **** static uint32_t Task_EnterCritical(void)
 287:SYS/task_manager/task_manager.c **** {
 288:SYS/task_manager/task_manager.c ****     /* Set BASEPRI to the max syscall priority to effect a critical
 289:SYS/task_manager/task_manager.c **** 	section. */
 290:SYS/task_manager/task_manager.c ****     uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 291:SYS/task_manager/task_manager.c **** 
 292:SYS/task_manager/task_manager.c ****     __asm volatile(
 293:SYS/task_manager/task_manager.c ****         "	mrs %0, basepri											\n"
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 7


 294:SYS/task_manager/task_manager.c ****         "	mov %1, %2												\n"
 295:SYS/task_manager/task_manager.c ****         "	msr basepri, %1											\n"
 296:SYS/task_manager/task_manager.c ****         "	isb														\n"
 297:SYS/task_manager/task_manager.c ****         "	dsb														\n"
 298:SYS/task_manager/task_manager.c ****         : "=r"(ulOriginalBASEPRI), "=r"(ulNewBASEPRI)
 299:SYS/task_manager/task_manager.c ****         : "i"(80)
 300:SYS/task_manager/task_manager.c ****         : "memory");
 301:SYS/task_manager/task_manager.c **** 
 302:SYS/task_manager/task_manager.c ****     /* This return will not be reached but is necessary to prevent compiler
 303:SYS/task_manager/task_manager.c **** 	warnings. */
 304:SYS/task_manager/task_manager.c ****     return ulOriginalBASEPRI;
 305:SYS/task_manager/task_manager.c **** }
 306:SYS/task_manager/task_manager.c **** 
 307:SYS/task_manager/task_manager.c **** __attribute__((nake)) static void Task_SetBASEPRI(uint32_t ulBASEPRI)
 308:SYS/task_manager/task_manager.c **** {
  52              		.loc 1 308 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
 309:SYS/task_manager/task_manager.c ****     __ASM("	msr basepri, %0	" ::"r"(ulBASEPRI)
  57              		.loc 1 309 5 view .LVU5
  58              		.syntax unified
  59              	@ 309 "SYS/task_manager/task_manager.c" 1
  60 0000 80F31188 			msr basepri, r0	
  61              	@ 0 "" 2
 310:SYS/task_manager/task_manager.c ****           : "memory");
 311:SYS/task_manager/task_manager.c **** }
  62              		.loc 1 311 1 is_stmt 0 view .LVU6
  63              		.thumb
  64              		.syntax unified
  65 0004 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE137:
  69              		.section	.text.Task_SetReady,"ax",%progbits
  70              		.align	1
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv4-sp-d16
  76              	Task_SetReady:
  77              	.LVL1:
  78              	.LFB145:
 312:SYS/task_manager/task_manager.c **** 
 313:SYS/task_manager/task_manager.c **** __attribute__((naked)) static void Task_ExitCritical(void)
 314:SYS/task_manager/task_manager.c **** {
 315:SYS/task_manager/task_manager.c ****     /* Barrier instructions are not used as this function is only used to
 316:SYS/task_manager/task_manager.c **** 	lower the BASEPRI value. */
 317:SYS/task_manager/task_manager.c ****     __ASM("	msr basepri, %0	" ::"r"(0)
 318:SYS/task_manager/task_manager.c ****           : "memory");
 319:SYS/task_manager/task_manager.c **** }
 320:SYS/task_manager/task_manager.c **** 
 321:SYS/task_manager/task_manager.c **** __attribute__((naked)) static void Task_Recover(void)
 322:SYS/task_manager/task_manager.c **** {
 323:SYS/task_manager/task_manager.c ****     __ASM("LDR	  R3, CurrentTCBConst_Tmp2");
 324:SYS/task_manager/task_manager.c ****     __ASM("LDR    R1, [R3]");
 325:SYS/task_manager/task_manager.c ****     __ASM("LDR    R0, [R1]");
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 8


 326:SYS/task_manager/task_manager.c **** 
 327:SYS/task_manager/task_manager.c ****     __ASM("LDMIA  R0!, {R4-R11, R14}");
 328:SYS/task_manager/task_manager.c **** 
 329:SYS/task_manager/task_manager.c ****     __ASM("MSR    PSP, R0");
 330:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 331:SYS/task_manager/task_manager.c ****     __ASM("BX     R14");
 332:SYS/task_manager/task_manager.c ****     __ASM(".ALIGN 4");
 333:SYS/task_manager/task_manager.c ****     __ASM("CurrentTCBConst_Tmp2: .word CurTsk_TCB");
 334:SYS/task_manager/task_manager.c **** }
 335:SYS/task_manager/task_manager.c **** 
 336:SYS/task_manager/task_manager.c **** __attribute__((naked)) void Task_SaveCurProc(void)
 337:SYS/task_manager/task_manager.c **** {
 338:SYS/task_manager/task_manager.c ****     __ASM("MRS    R0, PSP");
 339:SYS/task_manager/task_manager.c ****     __ASM("LDR	  R3, CurrentTCBConst_Tmp3");
 340:SYS/task_manager/task_manager.c ****     __ASM("LDR    R2, [R3]");
 341:SYS/task_manager/task_manager.c **** 
 342:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 343:SYS/task_manager/task_manager.c **** 
 344:SYS/task_manager/task_manager.c ****     __ASM("STMDB    R0!, {R4-R11, R14}");
 345:SYS/task_manager/task_manager.c ****     __ASM("STR      R0, [R2]");
 346:SYS/task_manager/task_manager.c **** 
 347:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 348:SYS/task_manager/task_manager.c ****     __ASM("TST      R14, #0x10");
 349:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 350:SYS/task_manager/task_manager.c ****     __ASM("VSTMDBEQ R0!, {s16-s31}");
 351:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 352:SYS/task_manager/task_manager.c **** 
 353:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 354:SYS/task_manager/task_manager.c ****     __ASM("BX       R14");
 355:SYS/task_manager/task_manager.c **** 
 356:SYS/task_manager/task_manager.c ****     __ASM("CurrentTCBConst_Tmp3: .word CurTsk_TCB");
 357:SYS/task_manager/task_manager.c **** }
 358:SYS/task_manager/task_manager.c **** 
 359:SYS/task_manager/task_manager.c **** __attribute__((naked)) void Task_Load(void)
 360:SYS/task_manager/task_manager.c **** {
 361:SYS/task_manager/task_manager.c ****     __ASM("LDR	  R3, =CurTsk_TCB");
 362:SYS/task_manager/task_manager.c ****     __ASM("LDR    R1, [R3]");
 363:SYS/task_manager/task_manager.c ****     __ASM("LDR    R0, [R1]");
 364:SYS/task_manager/task_manager.c **** 
 365:SYS/task_manager/task_manager.c ****     __ASM("LDMIA  R0!, {R4-R11, R14}");
 366:SYS/task_manager/task_manager.c **** 
 367:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 368:SYS/task_manager/task_manager.c ****     __ASM("TST      R14, #0x10");
 369:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 370:SYS/task_manager/task_manager.c ****     __ASM("VLDMIAEQ R0!, {s16-s31}");
 371:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 372:SYS/task_manager/task_manager.c **** 
 373:SYS/task_manager/task_manager.c ****     __ASM("MSR    PSP, R0");
 374:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 375:SYS/task_manager/task_manager.c ****     //__ASM("MOV    R0, #240");
 376:SYS/task_manager/task_manager.c ****     //__ASM("MSR	  BASEPRI, R0");
 377:SYS/task_manager/task_manager.c ****     __ASM("BX     R14");
 378:SYS/task_manager/task_manager.c ****     __ASM(".ALIGN 4");
 379:SYS/task_manager/task_manager.c **** }
 380:SYS/task_manager/task_manager.c **** 
 381:SYS/task_manager/task_manager.c **** void Load_FirstTask(void)
 382:SYS/task_manager/task_manager.c **** {
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 9


 383:SYS/task_manager/task_manager.c ****     Task_Load();
 384:SYS/task_manager/task_manager.c **** }
 385:SYS/task_manager/task_manager.c **** 
 386:SYS/task_manager/task_manager.c **** __attribute__((naked)) void Task_SwitchContext(void)
 387:SYS/task_manager/task_manager.c **** {
 388:SYS/task_manager/task_manager.c ****     __ASM("MRS      R0, PSP");
 389:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 390:SYS/task_manager/task_manager.c **** 
 391:SYS/task_manager/task_manager.c ****     __ASM("LDR      R3, CurrentTCBConst_Tmp");
 392:SYS/task_manager/task_manager.c ****     __ASM("LDR      R2, [R3]");
 393:SYS/task_manager/task_manager.c **** 
 394:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 395:SYS/task_manager/task_manager.c ****     __ASM("TST      R14, #0x10");
 396:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 397:SYS/task_manager/task_manager.c ****     __ASM("VSTMDBEQ R0!, {s16-s31}");
 398:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 399:SYS/task_manager/task_manager.c **** 
 400:SYS/task_manager/task_manager.c ****     __ASM("STMDB    R0!, {R4-R11, R14}");
 401:SYS/task_manager/task_manager.c ****     __ASM("STR      R0, [R2]");
 402:SYS/task_manager/task_manager.c **** 
 403:SYS/task_manager/task_manager.c ****     __ASM("STMDB    SP!, {R0, R3}");
 404:SYS/task_manager/task_manager.c ****     __ASM("MOV      R0, %0" ::"i"(0x50));
 405:SYS/task_manager/task_manager.c ****     __ASM("MSR      BASEPRI, R0");
 406:SYS/task_manager/task_manager.c **** 
 407:SYS/task_manager/task_manager.c ****     __ASM("DSB");
 408:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 409:SYS/task_manager/task_manager.c **** 
 410:SYS/task_manager/task_manager.c ****     __ASM("BL       Task_SwitchStack");
 411:SYS/task_manager/task_manager.c **** 
 412:SYS/task_manager/task_manager.c ****     __ASM("MOV      R0, #0");
 413:SYS/task_manager/task_manager.c ****     __ASM("MSR      BASEPRI, R0");
 414:SYS/task_manager/task_manager.c ****     __ASM("LDMIA    SP!, {R0, R3}");
 415:SYS/task_manager/task_manager.c **** 
 416:SYS/task_manager/task_manager.c ****     __ASM("LDR      R1, [R3]");
 417:SYS/task_manager/task_manager.c ****     __ASM("LDR      R0, [R1]");
 418:SYS/task_manager/task_manager.c **** 
 419:SYS/task_manager/task_manager.c ****     __ASM("LDMIA    R0!, {R4-R11, R14}");
 420:SYS/task_manager/task_manager.c **** 
 421:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 422:SYS/task_manager/task_manager.c ****     __ASM("TST      R14, #0x10");
 423:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 424:SYS/task_manager/task_manager.c ****     __ASM("VLDMIAEQ R0!, {s16-s31}");
 425:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 426:SYS/task_manager/task_manager.c **** 
 427:SYS/task_manager/task_manager.c ****     __ASM("MSR      PSP,R0");
 428:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 429:SYS/task_manager/task_manager.c ****     //__ASM("MOV      R0, #240");
 430:SYS/task_manager/task_manager.c ****     //__ASM("MSR	    BASEPRI, R0");
 431:SYS/task_manager/task_manager.c ****     __ASM("BX       R14");
 432:SYS/task_manager/task_manager.c **** 
 433:SYS/task_manager/task_manager.c ****     __ASM("CurrentTCBConst_Tmp: .word CurTsk_TCB");
 434:SYS/task_manager/task_manager.c ****     __ASM(".ALIGN 4");
 435:SYS/task_manager/task_manager.c **** }
 436:SYS/task_manager/task_manager.c **** 
 437:SYS/task_manager/task_manager.c **** static void Task_SetStkPtr_Val(Task *tsk)
 438:SYS/task_manager/task_manager.c **** {
 439:SYS/task_manager/task_manager.c ****     uint32_t *Tsk_Ptr_tmp = NULL;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 10


 440:SYS/task_manager/task_manager.c **** 
 441:SYS/task_manager/task_manager.c ****     memset(tsk->TCB.Stack, NULL, tsk->Stack_Depth);
 442:SYS/task_manager/task_manager.c **** 
 443:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = &tsk->TCB.Stack + (tsk->Stack_Depth - (uint32_t)1);
 444:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = (uint32_t *)((uint32_t)(Tsk_Ptr_tmp)&0XFFFFFFF8ul);
 445:SYS/task_manager/task_manager.c **** 
 446:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp--;
 447:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = 0x01000000uL; /* xPSR */
 448:SYS/task_manager/task_manager.c **** 
 449:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp--;
 450:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = ((uint32_t)Task_Caller) & 0xfffffffeUL; /* PC */
 451:SYS/task_manager/task_manager.c **** 
 452:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp--;
 453:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = (uint32_t)Task_Exit; /* LR */
 454:SYS/task_manager/task_manager.c **** 
 455:SYS/task_manager/task_manager.c ****     /* Save code space by skipping register initialisation. */
 456:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp -= 5;              /* R12, R3, R2 and R1. */
 457:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = (uint32_t)NULL; /* R0 */
 458:SYS/task_manager/task_manager.c **** 
 459:SYS/task_manager/task_manager.c ****     /* A save method is being used that requires each task to maintain its
 460:SYS/task_manager/task_manager.c **** 	    own exec return value. */
 461:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp--;
 462:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = 0xfffffffd;
 463:SYS/task_manager/task_manager.c **** 
 464:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp -= 8; /* R11, R10, R9, R8, R7, R6, R5 and R4. */
 465:SYS/task_manager/task_manager.c **** 
 466:SYS/task_manager/task_manager.c ****     //set task stack top pointer
 467:SYS/task_manager/task_manager.c ****     tsk->TCB.Top_Stk_Ptr = Tsk_Ptr_tmp; //&Tsk_Ptr_tmp
 468:SYS/task_manager/task_manager.c **** }
 469:SYS/task_manager/task_manager.c **** 
 470:SYS/task_manager/task_manager.c **** #endif
 471:SYS/task_manager/task_manager.c **** 
 472:SYS/task_manager/task_manager.c **** static void Task_SetReady(Task *tsk)
 473:SYS/task_manager/task_manager.c **** {
  79              		.loc 1 473 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		.loc 1 473 1 is_stmt 0 view .LVU8
  84 0000 10B5     		push	{r4, lr}
  85              	.LCFI0:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
 474:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
  89              		.loc 1 474 5 is_stmt 1 view .LVU9
  90              		.loc 1 474 22 is_stmt 0 view .LVU10
  91 0002 90F800C0 		ldrb	ip, [r0]	@ zero_extendqisi2
  92              		.loc 1 474 13 view .LVU11
  93 0006 4FEADC02 		lsr	r2, ip, #3
  94              	.LVL2:
 475:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
  95              		.loc 1 475 5 is_stmt 1 view .LVU12
  96              		.loc 1 475 13 is_stmt 0 view .LVU13
  97 000a 0CF0070E 		and	lr, ip, #7
  98              	.LVL3:
 476:SYS/task_manager/task_manager.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 11


 477:SYS/task_manager/task_manager.c ****     //set current group flag to ready
 478:SYS/task_manager/task_manager.c ****     TskHdl_RdyMap.Grp.Flg |= 1 << grp_id;
  99              		.loc 1 478 5 is_stmt 1 view .LVU14
 100              		.loc 1 478 27 is_stmt 0 view .LVU15
 101 000e 0A4B     		ldr	r3, .L6
 102 0010 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 103              		.loc 1 478 32 view .LVU16
 104 0012 4FF0010C 		mov	ip, #1
 105 0016 0CFA02F4 		lsl	r4, ip, r2
 106              		.loc 1 478 27 view .LVU17
 107 001a 2143     		orrs	r1, r1, r4
 108 001c C9B2     		uxtb	r1, r1
 109 001e 1970     		strb	r1, [r3]
 479:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 480:SYS/task_manager/task_manager.c ****     TskHdl_RdyMap.TskInGrp[grp_id].Flg |= 1 << tsk_id;
 110              		.loc 1 480 5 is_stmt 1 view .LVU18
 111              		.loc 1 480 40 is_stmt 0 view .LVU19
 112 0020 1344     		add	r3, r3, r2
 113 0022 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 114              	.LVL4:
 115              		.loc 1 480 45 view .LVU20
 116 0024 0CFA0EFC 		lsl	ip, ip, lr
 117              		.loc 1 480 40 view .LVU21
 118 0028 42EA0C02 		orr	r2, r2, ip
 119 002c D2B2     		uxtb	r2, r2
 120 002e 5A70     		strb	r2, [r3, #1]
 481:SYS/task_manager/task_manager.c **** 
 482:SYS/task_manager/task_manager.c ****     tsk->Exec_status.State = Task_Ready;
 121              		.loc 1 482 5 is_stmt 1 view .LVU22
 122              		.loc 1 482 28 is_stmt 0 view .LVU23
 123 0030 0023     		movs	r3, #0
 124 0032 80F84830 		strb	r3, [r0, #72]
 483:SYS/task_manager/task_manager.c **** }
 125              		.loc 1 483 1 view .LVU24
 126 0036 10BD     		pop	{r4, pc}
 127              	.L7:
 128              		.align	2
 129              	.L6:
 130 0038 00000000 		.word	.LANCHOR0
 131              		.cfi_endproc
 132              	.LFE145:
 134              		.section	.text.Task_ClearBlock,"ax",%progbits
 135              		.align	1
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu fpv4-sp-d16
 141              	Task_ClearBlock:
 142              	.LVL5:
 143              	.LFB146:
 484:SYS/task_manager/task_manager.c **** 
 485:SYS/task_manager/task_manager.c **** static void Task_ClearBlock(Task *tsk)
 486:SYS/task_manager/task_manager.c **** {
 144              		.loc 1 486 1 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 12


 487:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 148              		.loc 1 487 5 view .LVU26
 149              		.loc 1 487 22 is_stmt 0 view .LVU27
 150 0000 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 151              	.LVL6:
 488:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 152              		.loc 1 488 5 is_stmt 1 view .LVU28
 153              		.loc 1 488 13 is_stmt 0 view .LVU29
 154 0002 00F0070C 		and	ip, r0, #7
 155              	.LVL7:
 489:SYS/task_manager/task_manager.c **** 
 490:SYS/task_manager/task_manager.c ****     TskHdl_BlkMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 156              		.loc 1 490 5 is_stmt 1 view .LVU30
 157              		.loc 1 490 40 is_stmt 0 view .LVU31
 158 0006 0D4B     		ldr	r3, .L14
 159 0008 03EBD003 		add	r3, r3, r0, lsr #3
 160 000c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 161              		.loc 1 490 47 view .LVU32
 162 000e 0121     		movs	r1, #1
 163 0010 01FA0CF1 		lsl	r1, r1, ip
 164              		.loc 1 490 40 view .LVU33
 165 0014 22EA0102 		bic	r2, r2, r1
 166 0018 5A70     		strb	r2, [r3, #1]
 491:SYS/task_manager/task_manager.c ****     if (TskHdl_BlkMap.TskInGrp[grp_id].Flg == 0)
 167              		.loc 1 491 5 is_stmt 1 view .LVU34
 168              		.loc 1 491 39 is_stmt 0 view .LVU35
 169 001a 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 170              		.loc 1 491 8 view .LVU36
 171 001c 61B9     		cbnz	r1, .L11
 486:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 172              		.loc 1 486 1 view .LVU37
 173 001e 00B5     		push	{lr}
 174              	.LCFI1:
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 14, -4
 177 0020 4FEAD00E 		lsr	lr, r0, #3
 492:SYS/task_manager/task_manager.c ****     {
 493:SYS/task_manager/task_manager.c ****         TskHdl_BlkMap.Grp.Flg &= ~(1 << grp_id);
 178              		.loc 1 493 9 is_stmt 1 view .LVU38
 179              		.loc 1 493 31 is_stmt 0 view .LVU39
 180 0024 0549     		ldr	r1, .L14
 181 0026 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 182              		.loc 1 493 38 view .LVU40
 183 0028 0122     		movs	r2, #1
 184 002a 02FA0EF2 		lsl	r2, r2, lr
 185              		.loc 1 493 31 view .LVU41
 186 002e 23EA0203 		bic	r3, r3, r2
 187 0032 0B70     		strb	r3, [r1]
 494:SYS/task_manager/task_manager.c ****     }
 495:SYS/task_manager/task_manager.c **** }
 188              		.loc 1 495 1 view .LVU42
 189 0034 5DF804FB 		ldr	pc, [sp], #4
 190              	.L11:
 191              	.LCFI2:
 192              		.cfi_def_cfa_offset 0
 193              		.cfi_restore 14
 194 0038 7047     		bx	lr
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 13


 195              	.L15:
 196 003a 00BF     		.align	2
 197              	.L14:
 198 003c 00000000 		.word	.LANCHOR1
 199              		.cfi_endproc
 200              	.LFE146:
 202              		.section	.text.Task_ClearPending,"ax",%progbits
 203              		.align	1
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv4-sp-d16
 209              	Task_ClearPending:
 210              	.LVL8:
 211              	.LFB147:
 496:SYS/task_manager/task_manager.c **** 
 497:SYS/task_manager/task_manager.c **** static void Task_ClearPending(Task *tsk)
 498:SYS/task_manager/task_manager.c **** {
 212              		.loc 1 498 1 is_stmt 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 499:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 216              		.loc 1 499 5 view .LVU44
 217              		.loc 1 499 22 is_stmt 0 view .LVU45
 218 0000 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 219              	.LVL9:
 500:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 220              		.loc 1 500 5 is_stmt 1 view .LVU46
 221              		.loc 1 500 13 is_stmt 0 view .LVU47
 222 0002 00F0070C 		and	ip, r0, #7
 223              	.LVL10:
 501:SYS/task_manager/task_manager.c **** 
 502:SYS/task_manager/task_manager.c ****     TskHdl_PndMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 224              		.loc 1 502 5 is_stmt 1 view .LVU48
 225              		.loc 1 502 40 is_stmt 0 view .LVU49
 226 0006 0D4B     		ldr	r3, .L22
 227 0008 03EBD003 		add	r3, r3, r0, lsr #3
 228 000c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 229              		.loc 1 502 47 view .LVU50
 230 000e 0121     		movs	r1, #1
 231 0010 01FA0CF1 		lsl	r1, r1, ip
 232              		.loc 1 502 40 view .LVU51
 233 0014 22EA0102 		bic	r2, r2, r1
 234 0018 5A70     		strb	r2, [r3, #1]
 503:SYS/task_manager/task_manager.c ****     if (TskHdl_PndMap.TskInGrp[grp_id].Flg == 0)
 235              		.loc 1 503 5 is_stmt 1 view .LVU52
 236              		.loc 1 503 39 is_stmt 0 view .LVU53
 237 001a 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 238              		.loc 1 503 8 view .LVU54
 239 001c 61B9     		cbnz	r1, .L19
 498:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 240              		.loc 1 498 1 view .LVU55
 241 001e 00B5     		push	{lr}
 242              	.LCFI3:
 243              		.cfi_def_cfa_offset 4
 244              		.cfi_offset 14, -4
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 14


 245 0020 4FEAD00E 		lsr	lr, r0, #3
 504:SYS/task_manager/task_manager.c ****     {
 505:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.Grp.Flg &= ~(1 << grp_id);
 246              		.loc 1 505 9 is_stmt 1 view .LVU56
 247              		.loc 1 505 31 is_stmt 0 view .LVU57
 248 0024 0549     		ldr	r1, .L22
 249 0026 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 250              		.loc 1 505 38 view .LVU58
 251 0028 0122     		movs	r2, #1
 252 002a 02FA0EF2 		lsl	r2, r2, lr
 253              		.loc 1 505 31 view .LVU59
 254 002e 23EA0203 		bic	r3, r3, r2
 255 0032 0B70     		strb	r3, [r1]
 506:SYS/task_manager/task_manager.c ****     }
 507:SYS/task_manager/task_manager.c **** }
 256              		.loc 1 507 1 view .LVU60
 257 0034 5DF804FB 		ldr	pc, [sp], #4
 258              	.L19:
 259              	.LCFI4:
 260              		.cfi_def_cfa_offset 0
 261              		.cfi_restore 14
 262 0038 7047     		bx	lr
 263              	.L23:
 264 003a 00BF     		.align	2
 265              	.L22:
 266 003c 00000000 		.word	.LANCHOR2
 267              		.cfi_endproc
 268              	.LFE147:
 270              		.section	.text.Task_ClearReady,"ax",%progbits
 271              		.align	1
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv4-sp-d16
 277              	Task_ClearReady:
 278              	.LVL11:
 279              	.LFB148:
 508:SYS/task_manager/task_manager.c **** 
 509:SYS/task_manager/task_manager.c **** static void Task_ClearReady(Task *tsk)
 510:SYS/task_manager/task_manager.c **** {
 280              		.loc 1 510 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 511:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 284              		.loc 1 511 5 view .LVU62
 285              		.loc 1 511 22 is_stmt 0 view .LVU63
 286 0000 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 287              	.LVL12:
 512:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 288              		.loc 1 512 5 is_stmt 1 view .LVU64
 289              		.loc 1 512 13 is_stmt 0 view .LVU65
 290 0002 00F0070C 		and	ip, r0, #7
 291              	.LVL13:
 513:SYS/task_manager/task_manager.c **** 
 514:SYS/task_manager/task_manager.c ****     TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 292              		.loc 1 514 5 is_stmt 1 view .LVU66
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 15


 293              		.loc 1 514 40 is_stmt 0 view .LVU67
 294 0006 0D4B     		ldr	r3, .L30
 295 0008 03EBD003 		add	r3, r3, r0, lsr #3
 296 000c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 297              		.loc 1 514 47 view .LVU68
 298 000e 0121     		movs	r1, #1
 299 0010 01FA0CF1 		lsl	r1, r1, ip
 300              		.loc 1 514 40 view .LVU69
 301 0014 22EA0102 		bic	r2, r2, r1
 302 0018 5A70     		strb	r2, [r3, #1]
 515:SYS/task_manager/task_manager.c ****     if (TskHdl_RdyMap.TskInGrp[grp_id].Flg == 0)
 303              		.loc 1 515 5 is_stmt 1 view .LVU70
 304              		.loc 1 515 39 is_stmt 0 view .LVU71
 305 001a 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 306              		.loc 1 515 8 view .LVU72
 307 001c 61B9     		cbnz	r1, .L27
 510:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 308              		.loc 1 510 1 view .LVU73
 309 001e 00B5     		push	{lr}
 310              	.LCFI5:
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 14, -4
 313 0020 4FEAD00E 		lsr	lr, r0, #3
 516:SYS/task_manager/task_manager.c ****     {
 517:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.Grp.Flg &= ~(1 << grp_id);
 314              		.loc 1 517 9 is_stmt 1 view .LVU74
 315              		.loc 1 517 31 is_stmt 0 view .LVU75
 316 0024 0549     		ldr	r1, .L30
 317 0026 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 318              		.loc 1 517 38 view .LVU76
 319 0028 0122     		movs	r2, #1
 320 002a 02FA0EF2 		lsl	r2, r2, lr
 321              		.loc 1 517 31 view .LVU77
 322 002e 23EA0203 		bic	r3, r3, r2
 323 0032 0B70     		strb	r3, [r1]
 518:SYS/task_manager/task_manager.c ****     }
 519:SYS/task_manager/task_manager.c **** }
 324              		.loc 1 519 1 view .LVU78
 325 0034 5DF804FB 		ldr	pc, [sp], #4
 326              	.L27:
 327              	.LCFI6:
 328              		.cfi_def_cfa_offset 0
 329              		.cfi_restore 14
 330 0038 7047     		bx	lr
 331              	.L31:
 332 003a 00BF     		.align	2
 333              	.L30:
 334 003c 00000000 		.word	.LANCHOR0
 335              		.cfi_endproc
 336              	.LFE148:
 338              		.section	.text.Task_SetPendSVPro,"ax",%progbits
 339              		.align	1
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv4-sp-d16
 345              	Task_SetPendSVPro:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 16


 346              	.LFB151:
 520:SYS/task_manager/task_manager.c **** 
 521:SYS/task_manager/task_manager.c **** Task *Task_Get_HighestRank_RdyTask(void)
 522:SYS/task_manager/task_manager.c **** {
 523:SYS/task_manager/task_manager.c ****     uint8_t grp_id = 0;
 524:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = 0;
 525:SYS/task_manager/task_manager.c **** 
 526:SYS/task_manager/task_manager.c ****     if (TskHdl_RdyMap.Grp.Flg)
 527:SYS/task_manager/task_manager.c ****     {
 528:SYS/task_manager/task_manager.c ****         //find group
 529:SYS/task_manager/task_manager.c ****         grp_id = Tsk_Handle[TskHdl_RdyMap.Grp.Flg];
 530:SYS/task_manager/task_manager.c ****         //find task in group
 531:SYS/task_manager/task_manager.c ****         tsk_id = Tsk_Handle[TskHdl_RdyMap.TskInGrp[grp_id].Flg];
 532:SYS/task_manager/task_manager.c ****     }
 533:SYS/task_manager/task_manager.c ****     else
 534:SYS/task_manager/task_manager.c ****         return NULL;
 535:SYS/task_manager/task_manager.c **** 
 536:SYS/task_manager/task_manager.c ****     if (Task_Ptr[grp_id][tsk_id] != NULL)
 537:SYS/task_manager/task_manager.c ****     {
 538:SYS/task_manager/task_manager.c ****         return Task_Ptr[grp_id][tsk_id];
 539:SYS/task_manager/task_manager.c ****     }
 540:SYS/task_manager/task_manager.c ****     else
 541:SYS/task_manager/task_manager.c ****     {
 542:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.Grp.Flg &= ~(1 << grp_id);
 543:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 544:SYS/task_manager/task_manager.c ****         return NULL;
 545:SYS/task_manager/task_manager.c ****     }
 546:SYS/task_manager/task_manager.c **** }
 547:SYS/task_manager/task_manager.c **** 
 548:SYS/task_manager/task_manager.c **** void Task_SetNextTask_Ptr(const Task *nxt)
 549:SYS/task_manager/task_manager.c **** {
 550:SYS/task_manager/task_manager.c ****     if (nxt != NULL)
 551:SYS/task_manager/task_manager.c ****     {
 552:SYS/task_manager/task_manager.c ****         NxtRunTsk_Ptr = nxt;
 553:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
 554:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 555:SYS/task_manager/task_manager.c ****     }
 556:SYS/task_manager/task_manager.c **** }
 557:SYS/task_manager/task_manager.c **** 
 558:SYS/task_manager/task_manager.c **** //first need to know is linux support AT&T formate ASM code
 559:SYS/task_manager/task_manager.c **** __attribute__((naked)) static void Task_SetPendSVPro(void)
 560:SYS/task_manager/task_manager.c **** {
 347              		.loc 1 560 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ Naked Function: prologue and epilogue provided by programmer.
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 561:SYS/task_manager/task_manager.c ****     //set pendsv interrupt
 562:SYS/task_manager/task_manager.c ****     __ASM(".equ NVIC_SYSPRI14, 0xE000ED22");
 352              		.loc 1 562 5 view .LVU80
 353              		.syntax unified
 354              	@ 562 "SYS/task_manager/task_manager.c" 1
 355              		.equ NVIC_SYSPRI14, 0xE000ED22
 356              	@ 0 "" 2
 563:SYS/task_manager/task_manager.c ****     __ASM(".equ NVIC_PENDSV_PRI, 0xFF");
 357              		.loc 1 563 5 view .LVU81
 358              	@ 563 "SYS/task_manager/task_manager.c" 1
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 17


 359              		.equ NVIC_PENDSV_PRI, 0xFF
 360              	@ 0 "" 2
 564:SYS/task_manager/task_manager.c **** 
 565:SYS/task_manager/task_manager.c ****     __ASM("LDR      R0, =NVIC_SYSPRI14");
 361              		.loc 1 565 5 view .LVU82
 362              	@ 565 "SYS/task_manager/task_manager.c" 1
 363 0000 0548     		LDR      R0, =NVIC_SYSPRI14
 364              	@ 0 "" 2
 566:SYS/task_manager/task_manager.c ****     __ASM("LDR      R1, =NVIC_PENDSV_PRI");
 365              		.loc 1 566 5 view .LVU83
 366              	@ 566 "SYS/task_manager/task_manager.c" 1
 367 0002 4FF0FF01 		LDR      R1, =NVIC_PENDSV_PRI
 368              	@ 0 "" 2
 567:SYS/task_manager/task_manager.c ****     __ASM("STRB     R1, [R0]");
 369              		.loc 1 567 5 view .LVU84
 370              	@ 567 "SYS/task_manager/task_manager.c" 1
 371 0006 0170     		STRB     R1, [R0]
 372              	@ 0 "" 2
 568:SYS/task_manager/task_manager.c **** 
 569:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 570:SYS/task_manager/task_manager.c ****     //set PSP to 0 to initial context switch call
 571:SYS/task_manager/task_manager.c ****     __ASM("MOVS     R0, #0");
 373              		.loc 1 571 5 view .LVU85
 374              	@ 571 "SYS/task_manager/task_manager.c" 1
 375 0008 0020     		MOVS     R0, #0
 376              	@ 0 "" 2
 572:SYS/task_manager/task_manager.c ****     __ASM("MSR      PSP, R0");
 377              		.loc 1 572 5 view .LVU86
 378              	@ 572 "SYS/task_manager/task_manager.c" 1
 379 000a 80F30988 		MSR      PSP, R0
 380              	@ 0 "" 2
 573:SYS/task_manager/task_manager.c **** 
 574:SYS/task_manager/task_manager.c ****     //initial MSP to Task_OS_ExpStkBase
 575:SYS/task_manager/task_manager.c ****     __ASM("LDR      R0, =Task_OS_ExpStkBase");
 381              		.loc 1 575 5 view .LVU87
 382              	@ 575 "SYS/task_manager/task_manager.c" 1
 383 000e 0348     		LDR      R0, =Task_OS_ExpStkBase
 384              	@ 0 "" 2
 576:SYS/task_manager/task_manager.c ****     __ASM("LDR      R1, [R0]");
 385              		.loc 1 576 5 view .LVU88
 386              	@ 576 "SYS/task_manager/task_manager.c" 1
 387 0010 0168     		LDR      R1, [R0]
 388              	@ 0 "" 2
 577:SYS/task_manager/task_manager.c ****     __ASM("MSR      MSP, R1");
 389              		.loc 1 577 5 view .LVU89
 390              	@ 577 "SYS/task_manager/task_manager.c" 1
 391 0012 81F30888 		MSR      MSP, R1
 392              	@ 0 "" 2
 578:SYS/task_manager/task_manager.c **** #endif
 579:SYS/task_manager/task_manager.c **** 
 580:SYS/task_manager/task_manager.c ****     __ASM("BX       LR");
 393              		.loc 1 580 5 view .LVU90
 394              	@ 580 "SYS/task_manager/task_manager.c" 1
 395 0016 7047     		BX       LR
 396              	@ 0 "" 2
 581:SYS/task_manager/task_manager.c **** }
 397              		.loc 1 581 1 is_stmt 0 view .LVU91
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 18


 398              		.thumb
 399              		.syntax unified
 400              		.cfi_endproc
 401              	.LFE151:
 403              		.section	.text.Task_PriorityCompare,"ax",%progbits
 404              		.align	1
 405              		.global	Task_PriorityCompare
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv4-sp-d16
 411              	Task_PriorityCompare:
 412              	.LVL14:
 413              	.LFB155:
 582:SYS/task_manager/task_manager.c **** 
 583:SYS/task_manager/task_manager.c **** __attribute__((naked)) void Task_TriggerPendSV(void)
 584:SYS/task_manager/task_manager.c **** {
 585:SYS/task_manager/task_manager.c ****     __ASM(".equ NVIC_INT_CTRL, 0xE000ED04");
 586:SYS/task_manager/task_manager.c ****     __ASM(".equ NVIC_PENDSVSET, 0x10000000");
 587:SYS/task_manager/task_manager.c **** 
 588:SYS/task_manager/task_manager.c ****     __ASM("LDR      R0, =NVIC_INT_CTRL");
 589:SYS/task_manager/task_manager.c ****     __ASM("LDR      R1, =NVIC_PENDSVSET");
 590:SYS/task_manager/task_manager.c ****     __ASM("STR      R1, [R0]");
 591:SYS/task_manager/task_manager.c ****     __ASM("BX       LR");
 592:SYS/task_manager/task_manager.c **** }
 593:SYS/task_manager/task_manager.c **** 
 594:SYS/task_manager/task_manager.c **** void Task_Force_TriggerPendSV(void)
 595:SYS/task_manager/task_manager.c **** {
 596:SYS/task_manager/task_manager.c ****     /* Barriers are normally not required but do ensure the code is completely \
 597:SYS/task_manager/task_manager.c ****         within the specified behaviour for the architecture. */
 598:SYS/task_manager/task_manager.c ****     __ASM volatile("dsb" ::
 599:SYS/task_manager/task_manager.c ****                        : "memory");
 600:SYS/task_manager/task_manager.c ****     __ASM volatile("isb");
 601:SYS/task_manager/task_manager.c ****     Task_TriggerPendSV();
 602:SYS/task_manager/task_manager.c **** }
 603:SYS/task_manager/task_manager.c **** 
 604:SYS/task_manager/task_manager.c **** uint8_t Task_Get_TaskNum(void)
 605:SYS/task_manager/task_manager.c **** {
 606:SYS/task_manager/task_manager.c ****     return TskCrt_RegList.num;
 607:SYS/task_manager/task_manager.c **** }
 608:SYS/task_manager/task_manager.c **** 
 609:SYS/task_manager/task_manager.c **** //return high priority task pointer
 610:SYS/task_manager/task_manager.c **** Task *Task_PriorityCompare(const Task *tsk_l, const Task *tsk_r)
 611:SYS/task_manager/task_manager.c **** {
 414              		.loc 1 611 1 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 612:SYS/task_manager/task_manager.c ****     if ((tsk_l == NULL) && (tsk_r == NULL))
 418              		.loc 1 612 5 view .LVU93
 419              		.loc 1 612 8 is_stmt 0 view .LVU94
 420 0000 0346     		mov	r3, r0
 421 0002 90B1     		cbz	r0, .L46
 422              	.L34:
 613:SYS/task_manager/task_manager.c ****     {
 614:SYS/task_manager/task_manager.c ****         return NULL;
 615:SYS/task_manager/task_manager.c ****     }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 19


 616:SYS/task_manager/task_manager.c **** 
 617:SYS/task_manager/task_manager.c ****     if ((tsk_l == NULL) && (tsk_r != NULL))
 423              		.loc 1 617 5 is_stmt 1 view .LVU95
 424              		.loc 1 617 8 is_stmt 0 view .LVU96
 425 0004 A3B1     		cbz	r3, .L47
 426              	.L36:
 618:SYS/task_manager/task_manager.c ****     {
 619:SYS/task_manager/task_manager.c ****         return tsk_r;
 620:SYS/task_manager/task_manager.c ****     }
 621:SYS/task_manager/task_manager.c **** 
 622:SYS/task_manager/task_manager.c ****     if ((tsk_l != NULL) && (tsk_r == NULL))
 427              		.loc 1 622 5 is_stmt 1 view .LVU97
 428              		.loc 1 622 8 is_stmt 0 view .LVU98
 429 0006 03B1     		cbz	r3, .L37
 430              		.loc 1 622 25 discriminator 1 view .LVU99
 431 0008 B1B1     		cbz	r1, .L39
 432              	.L37:
 611:SYS/task_manager/task_manager.c ****     if ((tsk_l == NULL) && (tsk_r == NULL))
 433              		.loc 1 611 1 view .LVU100
 434 000a 00B5     		push	{lr}
 435              	.LCFI7:
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 14, -4
 623:SYS/task_manager/task_manager.c ****     {
 624:SYS/task_manager/task_manager.c ****         return tsk_l;
 625:SYS/task_manager/task_manager.c ****     }
 626:SYS/task_manager/task_manager.c **** 
 627:SYS/task_manager/task_manager.c ****     uint8_t L_Grp_level = GET_TASKGROUP_PRIORITY(tsk_l->priority.Suction.Group_Level);
 438              		.loc 1 627 5 is_stmt 1 view .LVU101
 439              		.loc 1 627 27 is_stmt 0 view .LVU102
 440 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 441              	.LVL15:
 442              		.loc 1 627 13 view .LVU103
 443 000e 4FF0000E 		mov	lr, #0
 444              	.LVL16:
 628:SYS/task_manager/task_manager.c ****     uint8_t R_Grp_level = GET_TASKGROUP_PRIORITY(tsk_r->priority.Suction.Group_Level);
 445              		.loc 1 628 5 is_stmt 1 view .LVU104
 446              		.loc 1 628 27 is_stmt 0 view .LVU105
 447 0012 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 448              	.LVL17:
 629:SYS/task_manager/task_manager.c ****     uint8_t L_TskPri_level = GET_TASKINGROUP_PRIORITY(tsk_l->priority.Suction.Task_Level);
 449              		.loc 1 629 5 is_stmt 1 view .LVU106
 450              		.loc 1 629 30 is_stmt 0 view .LVU107
 451 0014 00F00700 		and	r0, r0, #7
 452              	.LVL18:
 630:SYS/task_manager/task_manager.c ****     uint8_t R_TskPri_level = GET_TASKINGROUP_PRIORITY(tsk_r->priority.Suction.Task_Level);
 453              		.loc 1 630 5 is_stmt 1 view .LVU108
 454              		.loc 1 630 30 is_stmt 0 view .LVU109
 455 0018 02F00702 		and	r2, r2, #7
 456              	.LVL19:
 631:SYS/task_manager/task_manager.c **** 
 632:SYS/task_manager/task_manager.c ****     if (L_Grp_level < R_Grp_level)
 457              		.loc 1 632 5 is_stmt 1 view .LVU110
 633:SYS/task_manager/task_manager.c ****     {
 634:SYS/task_manager/task_manager.c ****         return tsk_l;
 635:SYS/task_manager/task_manager.c ****     }
 636:SYS/task_manager/task_manager.c ****     else if (L_Grp_level > R_Grp_level)
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 20


 458              		.loc 1 636 10 view .LVU111
 459              		.loc 1 636 13 is_stmt 0 view .LVU112
 460 001c F645     		cmp	lr, lr
 461 001e 0ED8     		bhi	.L35
 637:SYS/task_manager/task_manager.c ****     {
 638:SYS/task_manager/task_manager.c ****         return tsk_r;
 639:SYS/task_manager/task_manager.c ****     }
 640:SYS/task_manager/task_manager.c ****     else if (L_Grp_level == R_Grp_level)
 462              		.loc 1 640 10 is_stmt 1 view .LVU113
 463              		.loc 1 640 13 is_stmt 0 view .LVU114
 464 0020 0ED1     		bne	.L33
 641:SYS/task_manager/task_manager.c ****     {
 642:SYS/task_manager/task_manager.c ****         if (L_TskPri_level < R_TskPri_level)
 465              		.loc 1 642 9 is_stmt 1 view .LVU115
 466              		.loc 1 642 12 is_stmt 0 view .LVU116
 467 0022 9042     		cmp	r0, r2
 468 0024 0AD3     		bcc	.L41
 643:SYS/task_manager/task_manager.c ****         {
 644:SYS/task_manager/task_manager.c ****             return tsk_l;
 645:SYS/task_manager/task_manager.c ****         }
 646:SYS/task_manager/task_manager.c ****         else if (L_TskPri_level > R_TskPri_level)
 469              		.loc 1 646 14 is_stmt 1 view .LVU117
 470              		.loc 1 646 17 is_stmt 0 view .LVU118
 471 0026 0BD9     		bls	.L33
 472 0028 09E0     		b	.L35
 473              	.LVL20:
 474              	.L46:
 475              	.LCFI8:
 476              		.cfi_def_cfa_offset 0
 477              		.cfi_restore 14
 612:SYS/task_manager/task_manager.c ****     {
 478              		.loc 1 612 25 discriminator 1 view .LVU119
 479 002a 0029     		cmp	r1, #0
 480 002c EAD1     		bne	.L34
 481 002e 01E0     		b	.L43
 482              	.L47:
 617:SYS/task_manager/task_manager.c ****     {
 483              		.loc 1 617 25 discriminator 1 view .LVU120
 484 0030 0029     		cmp	r1, #0
 485 0032 E8D0     		beq	.L36
 486              	.LVL21:
 487              	.L43:
 647:SYS/task_manager/task_manager.c ****         {
 648:SYS/task_manager/task_manager.c ****             return tsk_r;
 649:SYS/task_manager/task_manager.c ****         }
 650:SYS/task_manager/task_manager.c ****     }
 651:SYS/task_manager/task_manager.c **** }
 488              		.loc 1 651 1 view .LVU121
 489 0034 0846     		mov	r0, r1
 490              	.LVL22:
 491              		.loc 1 651 1 view .LVU122
 492 0036 7047     		bx	lr
 493              	.LVL23:
 494              	.L39:
 624:SYS/task_manager/task_manager.c ****     }
 495              		.loc 1 624 16 view .LVU123
 496 0038 1946     		mov	r1, r3
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 21


 497              	.LVL24:
 624:SYS/task_manager/task_manager.c ****     }
 498              		.loc 1 624 16 view .LVU124
 499 003a FBE7     		b	.L43
 500              	.LVL25:
 501              	.L41:
 502              	.LCFI9:
 503              		.cfi_def_cfa_offset 4
 504              		.cfi_offset 14, -4
 644:SYS/task_manager/task_manager.c ****         }
 505              		.loc 1 644 20 view .LVU125
 506 003c 1946     		mov	r1, r3
 507              	.LVL26:
 508              	.L35:
 509              		.loc 1 651 1 view .LVU126
 510 003e 0846     		mov	r0, r1
 511              	.L33:
 512 0040 5DF804FB 		ldr	pc, [sp], #4
 513              		.cfi_endproc
 514              	.LFE155:
 516              		.section	.text.ReSet_Task_Data,"ax",%progbits
 517              		.align	1
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	ReSet_Task_Data:
 524              	.LVL27:
 525              	.LFB126:
  95:SYS/task_manager/task_manager.c ****     task->priority.Suction.Group_Level = 0;
 526              		.loc 1 95 1 is_stmt 1 view -0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
  95:SYS/task_manager/task_manager.c ****     task->priority.Suction.Group_Level = 0;
 530              		.loc 1 95 1 is_stmt 0 view .LVU128
 531 0000 10B5     		push	{r4, lr}
 532              	.LCFI10:
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 4, -8
 535              		.cfi_offset 14, -4
 536 0002 0446     		mov	r4, r0
  96:SYS/task_manager/task_manager.c ****     task->priority.Suction.Task_Level = 0;
 537              		.loc 1 96 5 is_stmt 1 view .LVU129
  96:SYS/task_manager/task_manager.c ****     task->priority.Suction.Task_Level = 0;
 538              		.loc 1 96 40 is_stmt 0 view .LVU130
 539 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 540 0006 6FF3C503 		bfc	r3, #3, #3
 541 000a 0370     		strb	r3, [r0]
  97:SYS/task_manager/task_manager.c ****     task->Task_name = NULL;
 542              		.loc 1 97 5 is_stmt 1 view .LVU131
  97:SYS/task_manager/task_manager.c ****     task->Task_name = NULL;
 543              		.loc 1 97 39 is_stmt 0 view .LVU132
 544 000c DBB2     		uxtb	r3, r3
 545 000e 6FF30203 		bfc	r3, #0, #3
 546 0012 0370     		strb	r3, [r0]
  98:SYS/task_manager/task_manager.c ****     task->exec_frq = 0;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 22


 547              		.loc 1 98 5 is_stmt 1 view .LVU133
  98:SYS/task_manager/task_manager.c ****     task->exec_frq = 0;
 548              		.loc 1 98 21 is_stmt 0 view .LVU134
 549 0014 0023     		movs	r3, #0
 550 0016 4360     		str	r3, [r0, #4]
  99:SYS/task_manager/task_manager.c ****     task->exec_interval_us = 0;
 551              		.loc 1 99 5 is_stmt 1 view .LVU135
  99:SYS/task_manager/task_manager.c ****     task->exec_interval_us = 0;
 552              		.loc 1 99 20 is_stmt 0 view .LVU136
 553 0018 8360     		str	r3, [r0, #8]
 100:SYS/task_manager/task_manager.c ****     task->Exec_Func = NULL;
 554              		.loc 1 100 5 is_stmt 1 view .LVU137
 100:SYS/task_manager/task_manager.c ****     task->Exec_Func = NULL;
 555              		.loc 1 100 28 is_stmt 0 view .LVU138
 556 001a 8381     		strh	r3, [r0, #12]	@ movhi
 101:SYS/task_manager/task_manager.c **** 
 557              		.loc 1 101 5 is_stmt 1 view .LVU139
 101:SYS/task_manager/task_manager.c **** 
 558              		.loc 1 101 21 is_stmt 0 view .LVU140
 559 001c 0361     		str	r3, [r0, #16]
 103:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_time_arv = 0;
 560              		.loc 1 103 5 is_stmt 1 view .LVU141
 103:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_time_arv = 0;
 561              		.loc 1 103 39 is_stmt 0 view .LVU142
 562 001e C362     		str	r3, [r0, #44]
 104:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_time_max = 0;
 563              		.loc 1 104 5 is_stmt 1 view .LVU143
 104:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_time_max = 0;
 564              		.loc 1 104 44 is_stmt 0 view .LVU144
 565 0020 0363     		str	r3, [r0, #48]
 105:SYS/task_manager/task_manager.c ****     task->Exec_status.Exec_Times = 0;
 566              		.loc 1 105 5 is_stmt 1 view .LVU145
 105:SYS/task_manager/task_manager.c ****     task->Exec_status.Exec_Times = 0;
 567              		.loc 1 105 44 is_stmt 0 view .LVU146
 568 0022 4363     		str	r3, [r0, #52]
 106:SYS/task_manager/task_manager.c ****     task->Exec_status.cpu_opy = 0;
 569              		.loc 1 106 5 is_stmt 1 view .LVU147
 106:SYS/task_manager/task_manager.c ****     task->Exec_status.cpu_opy = 0;
 570              		.loc 1 106 34 is_stmt 0 view .LVU148
 571 0024 8363     		str	r3, [r0, #56]
 107:SYS/task_manager/task_manager.c ****     task->Exec_status.totlal_running_time = 0;
 572              		.loc 1 107 5 is_stmt 1 view .LVU149
 107:SYS/task_manager/task_manager.c ****     task->Exec_status.totlal_running_time = 0;
 573              		.loc 1 107 31 is_stmt 0 view .LVU150
 574 0026 0022     		movs	r2, #0
 575 0028 4264     		str	r2, [r0, #68]	@ float
 108:SYS/task_manager/task_manager.c **** 
 576              		.loc 1 108 5 is_stmt 1 view .LVU151
 108:SYS/task_manager/task_manager.c **** 
 577              		.loc 1 108 43 is_stmt 0 view .LVU152
 578 002a 0364     		str	r3, [r0, #64]
 110:SYS/task_manager/task_manager.c ****     task->delay_info.tsk_hdl = 0;
 579              		.loc 1 110 5 is_stmt 1 view .LVU153
 110:SYS/task_manager/task_manager.c ****     task->delay_info.tsk_hdl = 0;
 580              		.loc 1 110 31 is_stmt 0 view .LVU154
 581 002c 80F85C30 		strb	r3, [r0, #92]
 111:SYS/task_manager/task_manager.c ****     task->delay_info.time_unit = 0;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 23


 582              		.loc 1 111 5 is_stmt 1 view .LVU155
 111:SYS/task_manager/task_manager.c ****     task->delay_info.time_unit = 0;
 583              		.loc 1 111 30 is_stmt 0 view .LVU156
 584 0030 0366     		str	r3, [r0, #96]
 112:SYS/task_manager/task_manager.c **** 
 585              		.loc 1 112 5 is_stmt 1 view .LVU157
 112:SYS/task_manager/task_manager.c **** 
 586              		.loc 1 112 32 is_stmt 0 view .LVU158
 587 0032 4366     		str	r3, [r0, #100]
 114:SYS/task_manager/task_manager.c **** 
 588              		.loc 1 114 5 is_stmt 1 view .LVU159
 589 0034 00F15C01 		add	r1, r0, #92
 590 0038 7430     		adds	r0, r0, #116
 591              	.LVL28:
 114:SYS/task_manager/task_manager.c **** 
 592              		.loc 1 114 5 is_stmt 0 view .LVU160
 593 003a FFF7FEFF 		bl	List_ItemInit
 594              	.LVL29:
 116:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(task->Exec_status.Init_Time));
 595              		.loc 1 116 5 is_stmt 1 view .LVU161
 596 003e 04F12400 		add	r0, r4, #36
 597 0042 FFF7FEFF 		bl	RuntimeObj_Reset
 598              	.LVL30:
 117:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(task->Exec_status.Start_Time));
 599              		.loc 1 117 5 view .LVU162
 600 0046 04F11400 		add	r0, r4, #20
 601 004a FFF7FEFF 		bl	RuntimeObj_Reset
 602              	.LVL31:
 118:SYS/task_manager/task_manager.c **** 
 603              		.loc 1 118 5 view .LVU163
 604 004e 04F11C00 		add	r0, r4, #28
 605 0052 FFF7FEFF 		bl	RuntimeObj_Reset
 606              	.LVL32:
 120:SYS/task_manager/task_manager.c **** }
 607              		.loc 1 120 5 view .LVU164
 120:SYS/task_manager/task_manager.c **** }
 608              		.loc 1 120 29 is_stmt 0 view .LVU165
 609 0056 0523     		movs	r3, #5
 610 0058 84F84830 		strb	r3, [r4, #72]
 121:SYS/task_manager/task_manager.c **** 
 611              		.loc 1 121 1 view .LVU166
 612 005c 10BD     		pop	{r4, pc}
 121:SYS/task_manager/task_manager.c **** 
 613              		.loc 1 121 1 view .LVU167
 614              		.cfi_endproc
 615              	.LFE126:
 617              		.section	.text.TaskSys_Init,"ax",%progbits
 618              		.align	1
 619              		.syntax unified
 620              		.thumb
 621              		.thumb_func
 622              		.fpu fpv4-sp-d16
 624              	TaskSys_Init:
 625              	.LFB128:
 137:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 626              		.loc 1 137 1 is_stmt 1 view -0
 627              		.cfi_startproc
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 24


 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 631              	.LCFI11:
 632              		.cfi_def_cfa_offset 24
 633              		.cfi_offset 3, -24
 634              		.cfi_offset 4, -20
 635              		.cfi_offset 5, -16
 636              		.cfi_offset 6, -12
 637              		.cfi_offset 7, -8
 638              		.cfi_offset 14, -4
 140:SYS/task_manager/task_manager.c **** 
 639              		.loc 1 140 5 view .LVU169
 640 0002 4FF42052 		mov	r2, #10240
 641 0006 0021     		movs	r1, #0
 642 0008 1B48     		ldr	r0, .L57
 643 000a FFF7FEFF 		bl	memset
 644              	.LVL33:
 142:SYS/task_manager/task_manager.c **** #endif
 645              		.loc 1 142 5 view .LVU170
 142:SYS/task_manager/task_manager.c **** #endif
 646              		.loc 1 142 24 is_stmt 0 view .LVU171
 647 000e 1B4B     		ldr	r3, .L57+4
 648 0010 1B4A     		ldr	r2, .L57+8
 649 0012 1A60     		str	r2, [r3]
 148:SYS/task_manager/task_manager.c **** 
 650              		.loc 1 148 5 is_stmt 1 view .LVU172
 651              	.LVL34:
 150:SYS/task_manager/task_manager.c ****     {
 652              		.loc 1 150 5 view .LVU173
 653              	.LBB6:
 150:SYS/task_manager/task_manager.c ****     {
 654              		.loc 1 150 10 view .LVU174
 150:SYS/task_manager/task_manager.c ****     {
 655              		.loc 1 150 18 is_stmt 0 view .LVU175
 656 0014 0027     		movs	r7, #0
 150:SYS/task_manager/task_manager.c ****     {
 657              		.loc 1 150 5 view .LVU176
 658 0016 18E0     		b	.L51
 659              	.LVL35:
 660              	.L52:
 661              	.LBB7:
 154:SYS/task_manager/task_manager.c **** 
 662              		.loc 1 154 13 is_stmt 1 discriminator 3 view .LVU177
 663 0018 1A4D     		ldr	r5, .L57+12
 664 001a 04EBC706 		add	r6, r4, r7, lsl #3
 665 001e 55F82600 		ldr	r0, [r5, r6, lsl #2]
 666 0022 FFF7FEFF 		bl	ReSet_Task_Data
 667              	.LVL36:
 157:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Stack = NULL;
 668              		.loc 1 157 13 discriminator 3 view .LVU178
 157:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Stack = NULL;
 669              		.loc 1 157 34 is_stmt 0 discriminator 3 view .LVU179
 670 0026 55F82620 		ldr	r2, [r5, r6, lsl #2]
 157:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Stack = NULL;
 671              		.loc 1 157 63 discriminator 3 view .LVU180
 672 002a 0023     		movs	r3, #0
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 25


 673 002c D364     		str	r3, [r2, #76]
 158:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Top_Stk_Ptr = NULL;
 674              		.loc 1 158 13 is_stmt 1 discriminator 3 view .LVU181
 158:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Top_Stk_Ptr = NULL;
 675              		.loc 1 158 34 is_stmt 0 discriminator 3 view .LVU182
 676 002e 55F82620 		ldr	r2, [r5, r6, lsl #2]
 158:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Top_Stk_Ptr = NULL;
 677              		.loc 1 158 61 discriminator 3 view .LVU183
 678 0032 5365     		str	r3, [r2, #84]
 159:SYS/task_manager/task_manager.c **** #endif
 679              		.loc 1 159 13 is_stmt 1 discriminator 3 view .LVU184
 159:SYS/task_manager/task_manager.c **** #endif
 680              		.loc 1 159 34 is_stmt 0 discriminator 3 view .LVU185
 681 0034 55F82620 		ldr	r2, [r5, r6, lsl #2]
 159:SYS/task_manager/task_manager.c **** #endif
 682              		.loc 1 159 67 discriminator 3 view .LVU186
 683 0038 1365     		str	r3, [r2, #80]
 161:SYS/task_manager/task_manager.c **** 
 684              		.loc 1 161 13 is_stmt 1 discriminator 3 view .LVU187
 161:SYS/task_manager/task_manager.c **** 
 685              		.loc 1 161 50 is_stmt 0 discriminator 3 view .LVU188
 686 003a 45F82630 		str	r3, [r5, r6, lsl #2]
 163:SYS/task_manager/task_manager.c ****         }
 687              		.loc 1 163 13 is_stmt 1 discriminator 3 view .LVU189
 152:SYS/task_manager/task_manager.c ****         {
 688              		.loc 1 152 90 discriminator 3 view .LVU190
 152:SYS/task_manager/task_manager.c ****         {
 689              		.loc 1 152 103 is_stmt 0 discriminator 3 view .LVU191
 690 003e 0134     		adds	r4, r4, #1
 691              	.LVL37:
 152:SYS/task_manager/task_manager.c ****         {
 692              		.loc 1 152 103 discriminator 3 view .LVU192
 693 0040 E4B2     		uxtb	r4, r4
 694              	.LVL38:
 695              	.L53:
 152:SYS/task_manager/task_manager.c ****         {
 696              		.loc 1 152 55 is_stmt 1 discriminator 1 view .LVU193
 152:SYS/task_manager/task_manager.c ****         {
 697              		.loc 1 152 9 is_stmt 0 discriminator 1 view .LVU194
 698 0042 072C     		cmp	r4, #7
 699 0044 E8D9     		bls	.L52
 700              	.LBE7:
 150:SYS/task_manager/task_manager.c ****     {
 701              		.loc 1 150 66 is_stmt 1 discriminator 2 view .LVU195
 150:SYS/task_manager/task_manager.c ****     {
 702              		.loc 1 150 77 is_stmt 0 discriminator 2 view .LVU196
 703 0046 0137     		adds	r7, r7, #1
 704              	.LVL39:
 150:SYS/task_manager/task_manager.c ****     {
 705              		.loc 1 150 77 discriminator 2 view .LVU197
 706 0048 FFB2     		uxtb	r7, r7
 707              	.LVL40:
 708              	.L51:
 150:SYS/task_manager/task_manager.c ****     {
 709              		.loc 1 150 41 is_stmt 1 discriminator 1 view .LVU198
 150:SYS/task_manager/task_manager.c ****     {
 710              		.loc 1 150 5 is_stmt 0 discriminator 1 view .LVU199
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 26


 711 004a 072F     		cmp	r7, #7
 712 004c 01D8     		bhi	.L56
 713              	.LBB8:
 152:SYS/task_manager/task_manager.c ****         {
 714              		.loc 1 152 22 view .LVU200
 715 004e 0024     		movs	r4, #0
 716 0050 F7E7     		b	.L53
 717              	.L56:
 718              	.LBE8:
 719              	.LBE6:
 167:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.data = NULL;
 720              		.loc 1 167 5 is_stmt 1 view .LVU201
 167:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.data = NULL;
 721              		.loc 1 167 24 is_stmt 0 view .LVU202
 722 0052 0D4B     		ldr	r3, .L57+16
 723 0054 0022     		movs	r2, #0
 724 0056 1A70     		strb	r2, [r3]
 168:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.nxt = NULL;
 725              		.loc 1 168 5 is_stmt 1 view .LVU203
 168:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.nxt = NULL;
 726              		.loc 1 168 30 is_stmt 0 view .LVU204
 727 0058 5A61     		str	r2, [r3, #20]
 169:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.prv = NULL;
 728              		.loc 1 169 5 is_stmt 1 view .LVU205
 169:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.prv = NULL;
 729              		.loc 1 169 29 is_stmt 0 view .LVU206
 730 005a 1A61     		str	r2, [r3, #16]
 170:SYS/task_manager/task_manager.c **** 
 731              		.loc 1 170 5 is_stmt 1 view .LVU207
 170:SYS/task_manager/task_manager.c **** 
 732              		.loc 1 170 29 is_stmt 0 view .LVU208
 733 005c DA60     		str	r2, [r3, #12]
 172:SYS/task_manager/task_manager.c ****     TskSys_state = TaskSys_Prepare;
 734              		.loc 1 172 5 is_stmt 1 view .LVU209
 735 005e 0B4B     		ldr	r3, .L57+20
 736 0060 1868     		ldr	r0, [r3]
 737 0062 FFF7FEFF 		bl	ReSet_Task_Data
 738              	.LVL41:
 173:SYS/task_manager/task_manager.c **** 
 739              		.loc 1 173 5 view .LVU210
 173:SYS/task_manager/task_manager.c **** 
 740              		.loc 1 173 18 is_stmt 0 view .LVU211
 741 0066 0A4B     		ldr	r3, .L57+24
 742 0068 0122     		movs	r2, #1
 743 006a 1A70     		strb	r2, [r3]
 175:SYS/task_manager/task_manager.c **** }
 744              		.loc 1 175 5 is_stmt 1 view .LVU212
 745              	.LVL42:
 746              	.LBB9:
 747              	.LBI9:
 748              		.file 2 "F4_CORE/core_cm4.h"
   1:F4_CORE/core_cm4.h **** /**************************************************************************//**
   2:F4_CORE/core_cm4.h ****  * @file     core_cm4.h
   3:F4_CORE/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:F4_CORE/core_cm4.h ****  * @version  V4.10
   5:F4_CORE/core_cm4.h ****  * @date     18. March 2015
   6:F4_CORE/core_cm4.h ****  *
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 27


   7:F4_CORE/core_cm4.h ****  * @note
   8:F4_CORE/core_cm4.h ****  *
   9:F4_CORE/core_cm4.h ****  ******************************************************************************/
  10:F4_CORE/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
  11:F4_CORE/core_cm4.h **** 
  12:F4_CORE/core_cm4.h ****    All rights reserved.
  13:F4_CORE/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:F4_CORE/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:F4_CORE/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:F4_CORE/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:F4_CORE/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:F4_CORE/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:F4_CORE/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:F4_CORE/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:F4_CORE/core_cm4.h ****      to endorse or promote products derived from this software without
  22:F4_CORE/core_cm4.h ****      specific prior written permission.
  23:F4_CORE/core_cm4.h ****    *
  24:F4_CORE/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:F4_CORE/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:F4_CORE/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:F4_CORE/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:F4_CORE/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:F4_CORE/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:F4_CORE/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:F4_CORE/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:F4_CORE/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:F4_CORE/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:F4_CORE/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:F4_CORE/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:F4_CORE/core_cm4.h **** 
  37:F4_CORE/core_cm4.h **** 
  38:F4_CORE/core_cm4.h **** #if defined ( __ICCARM__ )
  39:F4_CORE/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:F4_CORE/core_cm4.h **** #endif
  41:F4_CORE/core_cm4.h **** 
  42:F4_CORE/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  43:F4_CORE/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  44:F4_CORE/core_cm4.h **** 
  45:F4_CORE/core_cm4.h **** #ifdef __cplusplus
  46:F4_CORE/core_cm4.h ****  extern "C" {
  47:F4_CORE/core_cm4.h **** #endif
  48:F4_CORE/core_cm4.h **** 
  49:F4_CORE/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:F4_CORE/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:F4_CORE/core_cm4.h **** 
  52:F4_CORE/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:F4_CORE/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:F4_CORE/core_cm4.h **** 
  55:F4_CORE/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:F4_CORE/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:F4_CORE/core_cm4.h **** 
  58:F4_CORE/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:F4_CORE/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:F4_CORE/core_cm4.h ****  */
  61:F4_CORE/core_cm4.h **** 
  62:F4_CORE/core_cm4.h **** 
  63:F4_CORE/core_cm4.h **** /*******************************************************************************
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 28


  64:F4_CORE/core_cm4.h ****  *                 CMSIS definitions
  65:F4_CORE/core_cm4.h ****  ******************************************************************************/
  66:F4_CORE/core_cm4.h **** /** \ingroup Cortex_M4
  67:F4_CORE/core_cm4.h ****   @{
  68:F4_CORE/core_cm4.h ****  */
  69:F4_CORE/core_cm4.h **** 
  70:F4_CORE/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:F4_CORE/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04)                                   /*!< [31:16] CMSIS HAL m
  72:F4_CORE/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  73:F4_CORE/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:F4_CORE/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:F4_CORE/core_cm4.h **** 
  76:F4_CORE/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:F4_CORE/core_cm4.h **** 
  78:F4_CORE/core_cm4.h **** 
  79:F4_CORE/core_cm4.h **** #if   defined ( __CC_ARM )
  80:F4_CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:F4_CORE/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:F4_CORE/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:F4_CORE/core_cm4.h **** 
  84:F4_CORE/core_cm4.h **** #elif defined ( __GNUC__ )
  85:F4_CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  86:F4_CORE/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  87:F4_CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
  88:F4_CORE/core_cm4.h **** 
  89:F4_CORE/core_cm4.h **** #elif defined ( __ICCARM__ )
  90:F4_CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  91:F4_CORE/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  92:F4_CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
  93:F4_CORE/core_cm4.h **** 
  94:F4_CORE/core_cm4.h **** #elif defined ( __TMS470__ )
  95:F4_CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  96:F4_CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:F4_CORE/core_cm4.h **** 
  98:F4_CORE/core_cm4.h **** #elif defined ( __TASKING__ )
  99:F4_CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:F4_CORE/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:F4_CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:F4_CORE/core_cm4.h **** 
 103:F4_CORE/core_cm4.h **** #elif defined ( __CSMC__ )
 104:F4_CORE/core_cm4.h ****   #define __packed
 105:F4_CORE/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 106:F4_CORE/core_cm4.h ****   #define __INLINE         inline                                    /*use -pc99 on compile line !<
 107:F4_CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
 108:F4_CORE/core_cm4.h **** 
 109:F4_CORE/core_cm4.h **** #endif
 110:F4_CORE/core_cm4.h **** 
 111:F4_CORE/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 112:F4_CORE/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 113:F4_CORE/core_cm4.h **** */
 114:F4_CORE/core_cm4.h **** #if defined ( __CC_ARM )
 115:F4_CORE/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 116:F4_CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:F4_CORE/core_cm4.h ****       #define __FPU_USED       1
 118:F4_CORE/core_cm4.h ****     #else
 119:F4_CORE/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:F4_CORE/core_cm4.h ****       #define __FPU_USED       0
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 29


 121:F4_CORE/core_cm4.h ****     #endif
 122:F4_CORE/core_cm4.h ****   #else
 123:F4_CORE/core_cm4.h ****     #define __FPU_USED         0
 124:F4_CORE/core_cm4.h ****   #endif
 125:F4_CORE/core_cm4.h **** 
 126:F4_CORE/core_cm4.h **** #elif defined ( __GNUC__ )
 127:F4_CORE/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:F4_CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:F4_CORE/core_cm4.h ****       #define __FPU_USED       1
 130:F4_CORE/core_cm4.h ****     #else
 131:F4_CORE/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 132:F4_CORE/core_cm4.h ****       #define __FPU_USED       0
 133:F4_CORE/core_cm4.h ****     #endif
 134:F4_CORE/core_cm4.h ****   #else
 135:F4_CORE/core_cm4.h ****     #define __FPU_USED         1
 136:F4_CORE/core_cm4.h ****   #endif
 137:F4_CORE/core_cm4.h **** 
 138:F4_CORE/core_cm4.h **** #elif defined ( __ICCARM__ )
 139:F4_CORE/core_cm4.h ****   #if defined __ARMVFP__
 140:F4_CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 141:F4_CORE/core_cm4.h ****       #define __FPU_USED       1
 142:F4_CORE/core_cm4.h ****     #else
 143:F4_CORE/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 144:F4_CORE/core_cm4.h ****       #define __FPU_USED       0
 145:F4_CORE/core_cm4.h ****     #endif
 146:F4_CORE/core_cm4.h ****   #else
 147:F4_CORE/core_cm4.h ****     #define __FPU_USED         0
 148:F4_CORE/core_cm4.h ****   #endif
 149:F4_CORE/core_cm4.h **** 
 150:F4_CORE/core_cm4.h **** #elif defined ( __TMS470__ )
 151:F4_CORE/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 152:F4_CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 153:F4_CORE/core_cm4.h ****       #define __FPU_USED       1
 154:F4_CORE/core_cm4.h ****     #else
 155:F4_CORE/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 156:F4_CORE/core_cm4.h ****       #define __FPU_USED       0
 157:F4_CORE/core_cm4.h ****     #endif
 158:F4_CORE/core_cm4.h ****   #else
 159:F4_CORE/core_cm4.h ****     #define __FPU_USED         0
 160:F4_CORE/core_cm4.h ****   #endif
 161:F4_CORE/core_cm4.h **** 
 162:F4_CORE/core_cm4.h **** #elif defined ( __TASKING__ )
 163:F4_CORE/core_cm4.h ****   #if defined __FPU_VFP__
 164:F4_CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 165:F4_CORE/core_cm4.h ****       #define __FPU_USED       1
 166:F4_CORE/core_cm4.h ****     #else
 167:F4_CORE/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 168:F4_CORE/core_cm4.h ****       #define __FPU_USED       0
 169:F4_CORE/core_cm4.h ****     #endif
 170:F4_CORE/core_cm4.h ****   #else
 171:F4_CORE/core_cm4.h ****     #define __FPU_USED         0
 172:F4_CORE/core_cm4.h ****   #endif
 173:F4_CORE/core_cm4.h **** 
 174:F4_CORE/core_cm4.h **** #elif defined ( __CSMC__ )		/* Cosmic */
 175:F4_CORE/core_cm4.h ****   #if ( __CSMC__ & 0x400)		// FPU present for parser
 176:F4_CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 177:F4_CORE/core_cm4.h ****       #define __FPU_USED       1
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 30


 178:F4_CORE/core_cm4.h ****     #else
 179:F4_CORE/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 180:F4_CORE/core_cm4.h ****       #define __FPU_USED       0
 181:F4_CORE/core_cm4.h ****     #endif
 182:F4_CORE/core_cm4.h ****   #else
 183:F4_CORE/core_cm4.h ****     #define __FPU_USED         0
 184:F4_CORE/core_cm4.h ****   #endif
 185:F4_CORE/core_cm4.h **** #endif
 186:F4_CORE/core_cm4.h **** 
 187:F4_CORE/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 188:F4_CORE/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 189:F4_CORE/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 190:F4_CORE/core_cm4.h **** #include <core_cmSimd.h>                 /* Compiler specific SIMD Intrinsics               */
 191:F4_CORE/core_cm4.h **** 
 192:F4_CORE/core_cm4.h **** #ifdef __cplusplus
 193:F4_CORE/core_cm4.h **** }
 194:F4_CORE/core_cm4.h **** #endif
 195:F4_CORE/core_cm4.h **** 
 196:F4_CORE/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 197:F4_CORE/core_cm4.h **** 
 198:F4_CORE/core_cm4.h **** #ifndef __CMSIS_GENERIC
 199:F4_CORE/core_cm4.h **** 
 200:F4_CORE/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 201:F4_CORE/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 202:F4_CORE/core_cm4.h **** 
 203:F4_CORE/core_cm4.h **** #ifdef __cplusplus
 204:F4_CORE/core_cm4.h ****  extern "C" {
 205:F4_CORE/core_cm4.h **** #endif
 206:F4_CORE/core_cm4.h **** 
 207:F4_CORE/core_cm4.h **** /* check device defines and use defaults */
 208:F4_CORE/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 209:F4_CORE/core_cm4.h ****   #ifndef __CM4_REV
 210:F4_CORE/core_cm4.h ****     #define __CM4_REV               0x0000
 211:F4_CORE/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 212:F4_CORE/core_cm4.h ****   #endif
 213:F4_CORE/core_cm4.h **** 
 214:F4_CORE/core_cm4.h ****   #ifndef __FPU_PRESENT
 215:F4_CORE/core_cm4.h ****     #define __FPU_PRESENT             0
 216:F4_CORE/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 217:F4_CORE/core_cm4.h ****   #endif
 218:F4_CORE/core_cm4.h **** 
 219:F4_CORE/core_cm4.h ****   #ifndef __MPU_PRESENT
 220:F4_CORE/core_cm4.h ****     #define __MPU_PRESENT             0
 221:F4_CORE/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 222:F4_CORE/core_cm4.h ****   #endif
 223:F4_CORE/core_cm4.h **** 
 224:F4_CORE/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 225:F4_CORE/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 226:F4_CORE/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 227:F4_CORE/core_cm4.h ****   #endif
 228:F4_CORE/core_cm4.h **** 
 229:F4_CORE/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 230:F4_CORE/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 231:F4_CORE/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 232:F4_CORE/core_cm4.h ****   #endif
 233:F4_CORE/core_cm4.h **** #endif
 234:F4_CORE/core_cm4.h **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 31


 235:F4_CORE/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 236:F4_CORE/core_cm4.h **** /**
 237:F4_CORE/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 238:F4_CORE/core_cm4.h **** 
 239:F4_CORE/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 240:F4_CORE/core_cm4.h ****     \li to specify the access to peripheral variables.
 241:F4_CORE/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 242:F4_CORE/core_cm4.h **** */
 243:F4_CORE/core_cm4.h **** #ifdef __cplusplus
 244:F4_CORE/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 245:F4_CORE/core_cm4.h **** #else
 246:F4_CORE/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 247:F4_CORE/core_cm4.h **** #endif
 248:F4_CORE/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 249:F4_CORE/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 250:F4_CORE/core_cm4.h **** 
 251:F4_CORE/core_cm4.h **** /*@} end of group Cortex_M4 */
 252:F4_CORE/core_cm4.h **** 
 253:F4_CORE/core_cm4.h **** 
 254:F4_CORE/core_cm4.h **** 
 255:F4_CORE/core_cm4.h **** /*******************************************************************************
 256:F4_CORE/core_cm4.h ****  *                 Register Abstraction
 257:F4_CORE/core_cm4.h ****   Core Register contain:
 258:F4_CORE/core_cm4.h ****   - Core Register
 259:F4_CORE/core_cm4.h ****   - Core NVIC Register
 260:F4_CORE/core_cm4.h ****   - Core SCB Register
 261:F4_CORE/core_cm4.h ****   - Core SysTick Register
 262:F4_CORE/core_cm4.h ****   - Core Debug Register
 263:F4_CORE/core_cm4.h ****   - Core MPU Register
 264:F4_CORE/core_cm4.h ****   - Core FPU Register
 265:F4_CORE/core_cm4.h ****  ******************************************************************************/
 266:F4_CORE/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 267:F4_CORE/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 268:F4_CORE/core_cm4.h **** */
 269:F4_CORE/core_cm4.h **** 
 270:F4_CORE/core_cm4.h **** /** \ingroup    CMSIS_core_register
 271:F4_CORE/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 272:F4_CORE/core_cm4.h ****     \brief  Core Register type definitions.
 273:F4_CORE/core_cm4.h ****   @{
 274:F4_CORE/core_cm4.h ****  */
 275:F4_CORE/core_cm4.h **** 
 276:F4_CORE/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 277:F4_CORE/core_cm4.h ****  */
 278:F4_CORE/core_cm4.h **** typedef union
 279:F4_CORE/core_cm4.h **** {
 280:F4_CORE/core_cm4.h ****   struct
 281:F4_CORE/core_cm4.h ****   {
 282:F4_CORE/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 283:F4_CORE/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 284:F4_CORE/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 285:F4_CORE/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 286:F4_CORE/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 287:F4_CORE/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 288:F4_CORE/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 289:F4_CORE/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 290:F4_CORE/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 291:F4_CORE/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 32


 292:F4_CORE/core_cm4.h **** } APSR_Type;
 293:F4_CORE/core_cm4.h **** 
 294:F4_CORE/core_cm4.h **** /* APSR Register Definitions */
 295:F4_CORE/core_cm4.h **** #define APSR_N_Pos                         31                                             /*!< APSR
 296:F4_CORE/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 297:F4_CORE/core_cm4.h **** 
 298:F4_CORE/core_cm4.h **** #define APSR_Z_Pos                         30                                             /*!< APSR
 299:F4_CORE/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 300:F4_CORE/core_cm4.h **** 
 301:F4_CORE/core_cm4.h **** #define APSR_C_Pos                         29                                             /*!< APSR
 302:F4_CORE/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 303:F4_CORE/core_cm4.h **** 
 304:F4_CORE/core_cm4.h **** #define APSR_V_Pos                         28                                             /*!< APSR
 305:F4_CORE/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 306:F4_CORE/core_cm4.h **** 
 307:F4_CORE/core_cm4.h **** #define APSR_Q_Pos                         27                                             /*!< APSR
 308:F4_CORE/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 309:F4_CORE/core_cm4.h **** 
 310:F4_CORE/core_cm4.h **** #define APSR_GE_Pos                        16                                             /*!< APSR
 311:F4_CORE/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 312:F4_CORE/core_cm4.h **** 
 313:F4_CORE/core_cm4.h **** 
 314:F4_CORE/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 315:F4_CORE/core_cm4.h ****  */
 316:F4_CORE/core_cm4.h **** typedef union
 317:F4_CORE/core_cm4.h **** {
 318:F4_CORE/core_cm4.h ****   struct
 319:F4_CORE/core_cm4.h ****   {
 320:F4_CORE/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 321:F4_CORE/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 322:F4_CORE/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 323:F4_CORE/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 324:F4_CORE/core_cm4.h **** } IPSR_Type;
 325:F4_CORE/core_cm4.h **** 
 326:F4_CORE/core_cm4.h **** /* IPSR Register Definitions */
 327:F4_CORE/core_cm4.h **** #define IPSR_ISR_Pos                        0                                             /*!< IPSR
 328:F4_CORE/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 329:F4_CORE/core_cm4.h **** 
 330:F4_CORE/core_cm4.h **** 
 331:F4_CORE/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 332:F4_CORE/core_cm4.h ****  */
 333:F4_CORE/core_cm4.h **** typedef union
 334:F4_CORE/core_cm4.h **** {
 335:F4_CORE/core_cm4.h ****   struct
 336:F4_CORE/core_cm4.h ****   {
 337:F4_CORE/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 338:F4_CORE/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 339:F4_CORE/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 340:F4_CORE/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 341:F4_CORE/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 342:F4_CORE/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 343:F4_CORE/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 344:F4_CORE/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 345:F4_CORE/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 346:F4_CORE/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 347:F4_CORE/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 348:F4_CORE/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 33


 349:F4_CORE/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 350:F4_CORE/core_cm4.h **** } xPSR_Type;
 351:F4_CORE/core_cm4.h **** 
 352:F4_CORE/core_cm4.h **** /* xPSR Register Definitions */
 353:F4_CORE/core_cm4.h **** #define xPSR_N_Pos                         31                                             /*!< xPSR
 354:F4_CORE/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 355:F4_CORE/core_cm4.h **** 
 356:F4_CORE/core_cm4.h **** #define xPSR_Z_Pos                         30                                             /*!< xPSR
 357:F4_CORE/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 358:F4_CORE/core_cm4.h **** 
 359:F4_CORE/core_cm4.h **** #define xPSR_C_Pos                         29                                             /*!< xPSR
 360:F4_CORE/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 361:F4_CORE/core_cm4.h **** 
 362:F4_CORE/core_cm4.h **** #define xPSR_V_Pos                         28                                             /*!< xPSR
 363:F4_CORE/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 364:F4_CORE/core_cm4.h **** 
 365:F4_CORE/core_cm4.h **** #define xPSR_Q_Pos                         27                                             /*!< xPSR
 366:F4_CORE/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 367:F4_CORE/core_cm4.h **** 
 368:F4_CORE/core_cm4.h **** #define xPSR_IT_Pos                        25                                             /*!< xPSR
 369:F4_CORE/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 370:F4_CORE/core_cm4.h **** 
 371:F4_CORE/core_cm4.h **** #define xPSR_T_Pos                         24                                             /*!< xPSR
 372:F4_CORE/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 373:F4_CORE/core_cm4.h **** 
 374:F4_CORE/core_cm4.h **** #define xPSR_GE_Pos                        16                                             /*!< xPSR
 375:F4_CORE/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 376:F4_CORE/core_cm4.h **** 
 377:F4_CORE/core_cm4.h **** #define xPSR_ISR_Pos                        0                                             /*!< xPSR
 378:F4_CORE/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 379:F4_CORE/core_cm4.h **** 
 380:F4_CORE/core_cm4.h **** 
 381:F4_CORE/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 382:F4_CORE/core_cm4.h ****  */
 383:F4_CORE/core_cm4.h **** typedef union
 384:F4_CORE/core_cm4.h **** {
 385:F4_CORE/core_cm4.h ****   struct
 386:F4_CORE/core_cm4.h ****   {
 387:F4_CORE/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 388:F4_CORE/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 389:F4_CORE/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 390:F4_CORE/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 391:F4_CORE/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 392:F4_CORE/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 393:F4_CORE/core_cm4.h **** } CONTROL_Type;
 394:F4_CORE/core_cm4.h **** 
 395:F4_CORE/core_cm4.h **** /* CONTROL Register Definitions */
 396:F4_CORE/core_cm4.h **** #define CONTROL_FPCA_Pos                    2                                             /*!< CONT
 397:F4_CORE/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 398:F4_CORE/core_cm4.h **** 
 399:F4_CORE/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1                                             /*!< CONT
 400:F4_CORE/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 401:F4_CORE/core_cm4.h **** 
 402:F4_CORE/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0                                             /*!< CONT
 403:F4_CORE/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 404:F4_CORE/core_cm4.h **** 
 405:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_CORE */
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 34


 406:F4_CORE/core_cm4.h **** 
 407:F4_CORE/core_cm4.h **** 
 408:F4_CORE/core_cm4.h **** /** \ingroup    CMSIS_core_register
 409:F4_CORE/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 410:F4_CORE/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 411:F4_CORE/core_cm4.h ****   @{
 412:F4_CORE/core_cm4.h ****  */
 413:F4_CORE/core_cm4.h **** 
 414:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 415:F4_CORE/core_cm4.h ****  */
 416:F4_CORE/core_cm4.h **** typedef struct
 417:F4_CORE/core_cm4.h **** {
 418:F4_CORE/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 419:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[24];
 420:F4_CORE/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 421:F4_CORE/core_cm4.h ****        uint32_t RSERVED1[24];
 422:F4_CORE/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 423:F4_CORE/core_cm4.h ****        uint32_t RESERVED2[24];
 424:F4_CORE/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 425:F4_CORE/core_cm4.h ****        uint32_t RESERVED3[24];
 426:F4_CORE/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 427:F4_CORE/core_cm4.h ****        uint32_t RESERVED4[56];
 428:F4_CORE/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 429:F4_CORE/core_cm4.h ****        uint32_t RESERVED5[644];
 430:F4_CORE/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 431:F4_CORE/core_cm4.h **** }  NVIC_Type;
 432:F4_CORE/core_cm4.h **** 
 433:F4_CORE/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 434:F4_CORE/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 435:F4_CORE/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 436:F4_CORE/core_cm4.h **** 
 437:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 438:F4_CORE/core_cm4.h **** 
 439:F4_CORE/core_cm4.h **** 
 440:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 441:F4_CORE/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 442:F4_CORE/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 443:F4_CORE/core_cm4.h ****   @{
 444:F4_CORE/core_cm4.h ****  */
 445:F4_CORE/core_cm4.h **** 
 446:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 447:F4_CORE/core_cm4.h ****  */
 448:F4_CORE/core_cm4.h **** typedef struct
 449:F4_CORE/core_cm4.h **** {
 450:F4_CORE/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 451:F4_CORE/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 452:F4_CORE/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 453:F4_CORE/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 454:F4_CORE/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 455:F4_CORE/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 456:F4_CORE/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 457:F4_CORE/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 458:F4_CORE/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 459:F4_CORE/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 460:F4_CORE/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 461:F4_CORE/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 462:F4_CORE/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 35


 463:F4_CORE/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 464:F4_CORE/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 465:F4_CORE/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 466:F4_CORE/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 467:F4_CORE/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 468:F4_CORE/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 469:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[5];
 470:F4_CORE/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 471:F4_CORE/core_cm4.h **** } SCB_Type;
 472:F4_CORE/core_cm4.h **** 
 473:F4_CORE/core_cm4.h **** /* SCB CPUID Register Definitions */
 474:F4_CORE/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 475:F4_CORE/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 476:F4_CORE/core_cm4.h **** 
 477:F4_CORE/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 478:F4_CORE/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 479:F4_CORE/core_cm4.h **** 
 480:F4_CORE/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 481:F4_CORE/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 482:F4_CORE/core_cm4.h **** 
 483:F4_CORE/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 484:F4_CORE/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 485:F4_CORE/core_cm4.h **** 
 486:F4_CORE/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 487:F4_CORE/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 488:F4_CORE/core_cm4.h **** 
 489:F4_CORE/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 490:F4_CORE/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 491:F4_CORE/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 492:F4_CORE/core_cm4.h **** 
 493:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 494:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 495:F4_CORE/core_cm4.h **** 
 496:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 497:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 498:F4_CORE/core_cm4.h **** 
 499:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 500:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 501:F4_CORE/core_cm4.h **** 
 502:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 503:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 504:F4_CORE/core_cm4.h **** 
 505:F4_CORE/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 506:F4_CORE/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 507:F4_CORE/core_cm4.h **** 
 508:F4_CORE/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 509:F4_CORE/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 510:F4_CORE/core_cm4.h **** 
 511:F4_CORE/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 512:F4_CORE/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 513:F4_CORE/core_cm4.h **** 
 514:F4_CORE/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 515:F4_CORE/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 516:F4_CORE/core_cm4.h **** 
 517:F4_CORE/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 518:F4_CORE/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 519:F4_CORE/core_cm4.h **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 36


 520:F4_CORE/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 521:F4_CORE/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 522:F4_CORE/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 523:F4_CORE/core_cm4.h **** 
 524:F4_CORE/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 525:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 526:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 527:F4_CORE/core_cm4.h **** 
 528:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 529:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 530:F4_CORE/core_cm4.h **** 
 531:F4_CORE/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 532:F4_CORE/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 533:F4_CORE/core_cm4.h **** 
 534:F4_CORE/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 535:F4_CORE/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 536:F4_CORE/core_cm4.h **** 
 537:F4_CORE/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 538:F4_CORE/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 539:F4_CORE/core_cm4.h **** 
 540:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 541:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 542:F4_CORE/core_cm4.h **** 
 543:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 544:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 545:F4_CORE/core_cm4.h **** 
 546:F4_CORE/core_cm4.h **** /* SCB System Control Register Definitions */
 547:F4_CORE/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 548:F4_CORE/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 549:F4_CORE/core_cm4.h **** 
 550:F4_CORE/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 551:F4_CORE/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 552:F4_CORE/core_cm4.h **** 
 553:F4_CORE/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 554:F4_CORE/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 555:F4_CORE/core_cm4.h **** 
 556:F4_CORE/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 557:F4_CORE/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 558:F4_CORE/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 559:F4_CORE/core_cm4.h **** 
 560:F4_CORE/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 561:F4_CORE/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 562:F4_CORE/core_cm4.h **** 
 563:F4_CORE/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 564:F4_CORE/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 565:F4_CORE/core_cm4.h **** 
 566:F4_CORE/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 567:F4_CORE/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 568:F4_CORE/core_cm4.h **** 
 569:F4_CORE/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 570:F4_CORE/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 571:F4_CORE/core_cm4.h **** 
 572:F4_CORE/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 573:F4_CORE/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 574:F4_CORE/core_cm4.h **** 
 575:F4_CORE/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 576:F4_CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 37


 577:F4_CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 578:F4_CORE/core_cm4.h **** 
 579:F4_CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 580:F4_CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 581:F4_CORE/core_cm4.h **** 
 582:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 583:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 584:F4_CORE/core_cm4.h **** 
 585:F4_CORE/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 586:F4_CORE/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 587:F4_CORE/core_cm4.h **** 
 588:F4_CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 589:F4_CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 590:F4_CORE/core_cm4.h **** 
 591:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 592:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 593:F4_CORE/core_cm4.h **** 
 594:F4_CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 595:F4_CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 596:F4_CORE/core_cm4.h **** 
 597:F4_CORE/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 598:F4_CORE/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 599:F4_CORE/core_cm4.h **** 
 600:F4_CORE/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 601:F4_CORE/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 602:F4_CORE/core_cm4.h **** 
 603:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 604:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 605:F4_CORE/core_cm4.h **** 
 606:F4_CORE/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 607:F4_CORE/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 608:F4_CORE/core_cm4.h **** 
 609:F4_CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 610:F4_CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 611:F4_CORE/core_cm4.h **** 
 612:F4_CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 613:F4_CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 614:F4_CORE/core_cm4.h **** 
 615:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 616:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 617:F4_CORE/core_cm4.h **** 
 618:F4_CORE/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 619:F4_CORE/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 620:F4_CORE/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 621:F4_CORE/core_cm4.h **** 
 622:F4_CORE/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 623:F4_CORE/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 624:F4_CORE/core_cm4.h **** 
 625:F4_CORE/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 626:F4_CORE/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 627:F4_CORE/core_cm4.h **** 
 628:F4_CORE/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 629:F4_CORE/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 630:F4_CORE/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 631:F4_CORE/core_cm4.h **** 
 632:F4_CORE/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 633:F4_CORE/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 38


 634:F4_CORE/core_cm4.h **** 
 635:F4_CORE/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 636:F4_CORE/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 637:F4_CORE/core_cm4.h **** 
 638:F4_CORE/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 639:F4_CORE/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 640:F4_CORE/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 641:F4_CORE/core_cm4.h **** 
 642:F4_CORE/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 643:F4_CORE/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 644:F4_CORE/core_cm4.h **** 
 645:F4_CORE/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 646:F4_CORE/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 647:F4_CORE/core_cm4.h **** 
 648:F4_CORE/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 649:F4_CORE/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 650:F4_CORE/core_cm4.h **** 
 651:F4_CORE/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 652:F4_CORE/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 653:F4_CORE/core_cm4.h **** 
 654:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_SCB */
 655:F4_CORE/core_cm4.h **** 
 656:F4_CORE/core_cm4.h **** 
 657:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 658:F4_CORE/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 659:F4_CORE/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 660:F4_CORE/core_cm4.h ****   @{
 661:F4_CORE/core_cm4.h ****  */
 662:F4_CORE/core_cm4.h **** 
 663:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 664:F4_CORE/core_cm4.h ****  */
 665:F4_CORE/core_cm4.h **** typedef struct
 666:F4_CORE/core_cm4.h **** {
 667:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[1];
 668:F4_CORE/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 669:F4_CORE/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 670:F4_CORE/core_cm4.h **** } SCnSCB_Type;
 671:F4_CORE/core_cm4.h **** 
 672:F4_CORE/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 673:F4_CORE/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 674:F4_CORE/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 675:F4_CORE/core_cm4.h **** 
 676:F4_CORE/core_cm4.h **** /* Auxiliary Control Register Definitions */
 677:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 678:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 679:F4_CORE/core_cm4.h **** 
 680:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 681:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 682:F4_CORE/core_cm4.h **** 
 683:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 684:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 685:F4_CORE/core_cm4.h **** 
 686:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 687:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 688:F4_CORE/core_cm4.h **** 
 689:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 690:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 39


 691:F4_CORE/core_cm4.h **** 
 692:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 693:F4_CORE/core_cm4.h **** 
 694:F4_CORE/core_cm4.h **** 
 695:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 696:F4_CORE/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 697:F4_CORE/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 698:F4_CORE/core_cm4.h ****   @{
 699:F4_CORE/core_cm4.h ****  */
 700:F4_CORE/core_cm4.h **** 
 701:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 702:F4_CORE/core_cm4.h ****  */
 703:F4_CORE/core_cm4.h **** typedef struct
 704:F4_CORE/core_cm4.h **** {
 705:F4_CORE/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 706:F4_CORE/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 707:F4_CORE/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 708:F4_CORE/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 709:F4_CORE/core_cm4.h **** } SysTick_Type;
 710:F4_CORE/core_cm4.h **** 
 711:F4_CORE/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 712:F4_CORE/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 713:F4_CORE/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 714:F4_CORE/core_cm4.h **** 
 715:F4_CORE/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 716:F4_CORE/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 717:F4_CORE/core_cm4.h **** 
 718:F4_CORE/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 719:F4_CORE/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 720:F4_CORE/core_cm4.h **** 
 721:F4_CORE/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 722:F4_CORE/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 723:F4_CORE/core_cm4.h **** 
 724:F4_CORE/core_cm4.h **** /* SysTick Reload Register Definitions */
 725:F4_CORE/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 726:F4_CORE/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 727:F4_CORE/core_cm4.h **** 
 728:F4_CORE/core_cm4.h **** /* SysTick Current Register Definitions */
 729:F4_CORE/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 730:F4_CORE/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 731:F4_CORE/core_cm4.h **** 
 732:F4_CORE/core_cm4.h **** /* SysTick Calibration Register Definitions */
 733:F4_CORE/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 734:F4_CORE/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 735:F4_CORE/core_cm4.h **** 
 736:F4_CORE/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 737:F4_CORE/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 738:F4_CORE/core_cm4.h **** 
 739:F4_CORE/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 740:F4_CORE/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 741:F4_CORE/core_cm4.h **** 
 742:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 743:F4_CORE/core_cm4.h **** 
 744:F4_CORE/core_cm4.h **** 
 745:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 746:F4_CORE/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 747:F4_CORE/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 40


 748:F4_CORE/core_cm4.h ****   @{
 749:F4_CORE/core_cm4.h ****  */
 750:F4_CORE/core_cm4.h **** 
 751:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 752:F4_CORE/core_cm4.h ****  */
 753:F4_CORE/core_cm4.h **** typedef struct
 754:F4_CORE/core_cm4.h **** {
 755:F4_CORE/core_cm4.h ****   __O  union
 756:F4_CORE/core_cm4.h ****   {
 757:F4_CORE/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 758:F4_CORE/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 759:F4_CORE/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 760:F4_CORE/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 761:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[864];
 762:F4_CORE/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 763:F4_CORE/core_cm4.h ****        uint32_t RESERVED1[15];
 764:F4_CORE/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 765:F4_CORE/core_cm4.h ****        uint32_t RESERVED2[15];
 766:F4_CORE/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 767:F4_CORE/core_cm4.h ****        uint32_t RESERVED3[29];
 768:F4_CORE/core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 769:F4_CORE/core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 770:F4_CORE/core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 771:F4_CORE/core_cm4.h ****        uint32_t RESERVED4[43];
 772:F4_CORE/core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 773:F4_CORE/core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 774:F4_CORE/core_cm4.h ****        uint32_t RESERVED5[6];
 775:F4_CORE/core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 776:F4_CORE/core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 777:F4_CORE/core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 778:F4_CORE/core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 779:F4_CORE/core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 780:F4_CORE/core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 781:F4_CORE/core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 782:F4_CORE/core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 783:F4_CORE/core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 784:F4_CORE/core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 785:F4_CORE/core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 786:F4_CORE/core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 787:F4_CORE/core_cm4.h **** } ITM_Type;
 788:F4_CORE/core_cm4.h **** 
 789:F4_CORE/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 790:F4_CORE/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 791:F4_CORE/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 792:F4_CORE/core_cm4.h **** 
 793:F4_CORE/core_cm4.h **** /* ITM Trace Control Register Definitions */
 794:F4_CORE/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 795:F4_CORE/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 796:F4_CORE/core_cm4.h **** 
 797:F4_CORE/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 798:F4_CORE/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 799:F4_CORE/core_cm4.h **** 
 800:F4_CORE/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 801:F4_CORE/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 802:F4_CORE/core_cm4.h **** 
 803:F4_CORE/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 804:F4_CORE/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 41


 805:F4_CORE/core_cm4.h **** 
 806:F4_CORE/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 807:F4_CORE/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 808:F4_CORE/core_cm4.h **** 
 809:F4_CORE/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 810:F4_CORE/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 811:F4_CORE/core_cm4.h **** 
 812:F4_CORE/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 813:F4_CORE/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 814:F4_CORE/core_cm4.h **** 
 815:F4_CORE/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 816:F4_CORE/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 817:F4_CORE/core_cm4.h **** 
 818:F4_CORE/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 819:F4_CORE/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 820:F4_CORE/core_cm4.h **** 
 821:F4_CORE/core_cm4.h **** /* ITM Integration Write Register Definitions */
 822:F4_CORE/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 823:F4_CORE/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 824:F4_CORE/core_cm4.h **** 
 825:F4_CORE/core_cm4.h **** /* ITM Integration Read Register Definitions */
 826:F4_CORE/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 827:F4_CORE/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 828:F4_CORE/core_cm4.h **** 
 829:F4_CORE/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 830:F4_CORE/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 831:F4_CORE/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 832:F4_CORE/core_cm4.h **** 
 833:F4_CORE/core_cm4.h **** /* ITM Lock Status Register Definitions */
 834:F4_CORE/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 835:F4_CORE/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 836:F4_CORE/core_cm4.h **** 
 837:F4_CORE/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 838:F4_CORE/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 839:F4_CORE/core_cm4.h **** 
 840:F4_CORE/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 841:F4_CORE/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 842:F4_CORE/core_cm4.h **** 
 843:F4_CORE/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 844:F4_CORE/core_cm4.h **** 
 845:F4_CORE/core_cm4.h **** 
 846:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:F4_CORE/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 848:F4_CORE/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 849:F4_CORE/core_cm4.h ****   @{
 850:F4_CORE/core_cm4.h ****  */
 851:F4_CORE/core_cm4.h **** 
 852:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 853:F4_CORE/core_cm4.h ****  */
 854:F4_CORE/core_cm4.h **** typedef struct
 855:F4_CORE/core_cm4.h **** {
 856:F4_CORE/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 857:F4_CORE/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 858:F4_CORE/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 859:F4_CORE/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 860:F4_CORE/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 861:F4_CORE/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 42


 862:F4_CORE/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 863:F4_CORE/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 864:F4_CORE/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 865:F4_CORE/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 866:F4_CORE/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 867:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[1];
 868:F4_CORE/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 869:F4_CORE/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 870:F4_CORE/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 871:F4_CORE/core_cm4.h ****        uint32_t RESERVED1[1];
 872:F4_CORE/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 873:F4_CORE/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 874:F4_CORE/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 875:F4_CORE/core_cm4.h ****        uint32_t RESERVED2[1];
 876:F4_CORE/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 877:F4_CORE/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 878:F4_CORE/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 879:F4_CORE/core_cm4.h **** } DWT_Type;
 880:F4_CORE/core_cm4.h **** 
 881:F4_CORE/core_cm4.h **** /* DWT Control Register Definitions */
 882:F4_CORE/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 883:F4_CORE/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 884:F4_CORE/core_cm4.h **** 
 885:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 886:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 887:F4_CORE/core_cm4.h **** 
 888:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 889:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 890:F4_CORE/core_cm4.h **** 
 891:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 892:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 893:F4_CORE/core_cm4.h **** 
 894:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 895:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 896:F4_CORE/core_cm4.h **** 
 897:F4_CORE/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 898:F4_CORE/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 899:F4_CORE/core_cm4.h **** 
 900:F4_CORE/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 901:F4_CORE/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 902:F4_CORE/core_cm4.h **** 
 903:F4_CORE/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 904:F4_CORE/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 905:F4_CORE/core_cm4.h **** 
 906:F4_CORE/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 907:F4_CORE/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 908:F4_CORE/core_cm4.h **** 
 909:F4_CORE/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 910:F4_CORE/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 911:F4_CORE/core_cm4.h **** 
 912:F4_CORE/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 913:F4_CORE/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 914:F4_CORE/core_cm4.h **** 
 915:F4_CORE/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 916:F4_CORE/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 917:F4_CORE/core_cm4.h **** 
 918:F4_CORE/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 43


 919:F4_CORE/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 920:F4_CORE/core_cm4.h **** 
 921:F4_CORE/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 922:F4_CORE/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 923:F4_CORE/core_cm4.h **** 
 924:F4_CORE/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 925:F4_CORE/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 926:F4_CORE/core_cm4.h **** 
 927:F4_CORE/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 928:F4_CORE/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 929:F4_CORE/core_cm4.h **** 
 930:F4_CORE/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 931:F4_CORE/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 932:F4_CORE/core_cm4.h **** 
 933:F4_CORE/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 934:F4_CORE/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 935:F4_CORE/core_cm4.h **** 
 936:F4_CORE/core_cm4.h **** /* DWT CPI Count Register Definitions */
 937:F4_CORE/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 938:F4_CORE/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 939:F4_CORE/core_cm4.h **** 
 940:F4_CORE/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 941:F4_CORE/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 942:F4_CORE/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 943:F4_CORE/core_cm4.h **** 
 944:F4_CORE/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 945:F4_CORE/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 946:F4_CORE/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 947:F4_CORE/core_cm4.h **** 
 948:F4_CORE/core_cm4.h **** /* DWT LSU Count Register Definitions */
 949:F4_CORE/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 950:F4_CORE/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 951:F4_CORE/core_cm4.h **** 
 952:F4_CORE/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 953:F4_CORE/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 954:F4_CORE/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 955:F4_CORE/core_cm4.h **** 
 956:F4_CORE/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 957:F4_CORE/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 958:F4_CORE/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 959:F4_CORE/core_cm4.h **** 
 960:F4_CORE/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 961:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 962:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 963:F4_CORE/core_cm4.h **** 
 964:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 965:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 966:F4_CORE/core_cm4.h **** 
 967:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 968:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 969:F4_CORE/core_cm4.h **** 
 970:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 971:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 972:F4_CORE/core_cm4.h **** 
 973:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 974:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 975:F4_CORE/core_cm4.h **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 44


 976:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 977:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 978:F4_CORE/core_cm4.h **** 
 979:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 980:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 981:F4_CORE/core_cm4.h **** 
 982:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 983:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 984:F4_CORE/core_cm4.h **** 
 985:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 986:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 987:F4_CORE/core_cm4.h **** 
 988:F4_CORE/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 989:F4_CORE/core_cm4.h **** 
 990:F4_CORE/core_cm4.h **** 
 991:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 992:F4_CORE/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 993:F4_CORE/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 994:F4_CORE/core_cm4.h ****   @{
 995:F4_CORE/core_cm4.h ****  */
 996:F4_CORE/core_cm4.h **** 
 997:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 998:F4_CORE/core_cm4.h ****  */
 999:F4_CORE/core_cm4.h **** typedef struct
1000:F4_CORE/core_cm4.h **** {
1001:F4_CORE/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1002:F4_CORE/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1003:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[2];
1004:F4_CORE/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1005:F4_CORE/core_cm4.h ****        uint32_t RESERVED1[55];
1006:F4_CORE/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1007:F4_CORE/core_cm4.h ****        uint32_t RESERVED2[131];
1008:F4_CORE/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1009:F4_CORE/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1010:F4_CORE/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1011:F4_CORE/core_cm4.h ****        uint32_t RESERVED3[759];
1012:F4_CORE/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1013:F4_CORE/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1014:F4_CORE/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1015:F4_CORE/core_cm4.h ****        uint32_t RESERVED4[1];
1016:F4_CORE/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1017:F4_CORE/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1018:F4_CORE/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1019:F4_CORE/core_cm4.h ****        uint32_t RESERVED5[39];
1020:F4_CORE/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1021:F4_CORE/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1022:F4_CORE/core_cm4.h ****        uint32_t RESERVED7[8];
1023:F4_CORE/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1024:F4_CORE/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1025:F4_CORE/core_cm4.h **** } TPI_Type;
1026:F4_CORE/core_cm4.h **** 
1027:F4_CORE/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1028:F4_CORE/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
1029:F4_CORE/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1030:F4_CORE/core_cm4.h **** 
1031:F4_CORE/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1032:F4_CORE/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 45


1033:F4_CORE/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1034:F4_CORE/core_cm4.h **** 
1035:F4_CORE/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1036:F4_CORE/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
1037:F4_CORE/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1038:F4_CORE/core_cm4.h **** 
1039:F4_CORE/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
1040:F4_CORE/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1041:F4_CORE/core_cm4.h **** 
1042:F4_CORE/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
1043:F4_CORE/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1044:F4_CORE/core_cm4.h **** 
1045:F4_CORE/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
1046:F4_CORE/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1047:F4_CORE/core_cm4.h **** 
1048:F4_CORE/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1049:F4_CORE/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
1050:F4_CORE/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1051:F4_CORE/core_cm4.h **** 
1052:F4_CORE/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
1053:F4_CORE/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1054:F4_CORE/core_cm4.h **** 
1055:F4_CORE/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1056:F4_CORE/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
1057:F4_CORE/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1058:F4_CORE/core_cm4.h **** 
1059:F4_CORE/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1060:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1061:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1062:F4_CORE/core_cm4.h **** 
1063:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1064:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1065:F4_CORE/core_cm4.h **** 
1066:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1067:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1068:F4_CORE/core_cm4.h **** 
1069:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1070:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1071:F4_CORE/core_cm4.h **** 
1072:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
1073:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1074:F4_CORE/core_cm4.h **** 
1075:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
1076:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1077:F4_CORE/core_cm4.h **** 
1078:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
1079:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1080:F4_CORE/core_cm4.h **** 
1081:F4_CORE/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1082:F4_CORE/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1083:F4_CORE/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1084:F4_CORE/core_cm4.h **** 
1085:F4_CORE/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1087:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:F4_CORE/core_cm4.h **** 
1089:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 46


1090:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:F4_CORE/core_cm4.h **** 
1092:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1093:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:F4_CORE/core_cm4.h **** 
1095:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1096:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:F4_CORE/core_cm4.h **** 
1098:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1099:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:F4_CORE/core_cm4.h **** 
1101:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1102:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:F4_CORE/core_cm4.h **** 
1104:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1105:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:F4_CORE/core_cm4.h **** 
1107:F4_CORE/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1108:F4_CORE/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1109:F4_CORE/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1110:F4_CORE/core_cm4.h **** 
1111:F4_CORE/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1112:F4_CORE/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1113:F4_CORE/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1114:F4_CORE/core_cm4.h **** 
1115:F4_CORE/core_cm4.h **** /* TPI DEVID Register Definitions */
1116:F4_CORE/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1117:F4_CORE/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1118:F4_CORE/core_cm4.h **** 
1119:F4_CORE/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1120:F4_CORE/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1121:F4_CORE/core_cm4.h **** 
1122:F4_CORE/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1123:F4_CORE/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1124:F4_CORE/core_cm4.h **** 
1125:F4_CORE/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1126:F4_CORE/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1127:F4_CORE/core_cm4.h **** 
1128:F4_CORE/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1129:F4_CORE/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1130:F4_CORE/core_cm4.h **** 
1131:F4_CORE/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1132:F4_CORE/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1133:F4_CORE/core_cm4.h **** 
1134:F4_CORE/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1135:F4_CORE/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1136:F4_CORE/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1137:F4_CORE/core_cm4.h **** 
1138:F4_CORE/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1139:F4_CORE/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:F4_CORE/core_cm4.h **** 
1141:F4_CORE/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1142:F4_CORE/core_cm4.h **** 
1143:F4_CORE/core_cm4.h **** 
1144:F4_CORE/core_cm4.h **** #if (__MPU_PRESENT == 1)
1145:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
1146:F4_CORE/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 47


1147:F4_CORE/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1148:F4_CORE/core_cm4.h ****   @{
1149:F4_CORE/core_cm4.h ****  */
1150:F4_CORE/core_cm4.h **** 
1151:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1152:F4_CORE/core_cm4.h ****  */
1153:F4_CORE/core_cm4.h **** typedef struct
1154:F4_CORE/core_cm4.h **** {
1155:F4_CORE/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1156:F4_CORE/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1157:F4_CORE/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1158:F4_CORE/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1159:F4_CORE/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1160:F4_CORE/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1161:F4_CORE/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1162:F4_CORE/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1163:F4_CORE/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1164:F4_CORE/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1165:F4_CORE/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1166:F4_CORE/core_cm4.h **** } MPU_Type;
1167:F4_CORE/core_cm4.h **** 
1168:F4_CORE/core_cm4.h **** /* MPU Type Register */
1169:F4_CORE/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1170:F4_CORE/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1171:F4_CORE/core_cm4.h **** 
1172:F4_CORE/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1173:F4_CORE/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1174:F4_CORE/core_cm4.h **** 
1175:F4_CORE/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1176:F4_CORE/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1177:F4_CORE/core_cm4.h **** 
1178:F4_CORE/core_cm4.h **** /* MPU Control Register */
1179:F4_CORE/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1180:F4_CORE/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1181:F4_CORE/core_cm4.h **** 
1182:F4_CORE/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1183:F4_CORE/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1184:F4_CORE/core_cm4.h **** 
1185:F4_CORE/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1186:F4_CORE/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1187:F4_CORE/core_cm4.h **** 
1188:F4_CORE/core_cm4.h **** /* MPU Region Number Register */
1189:F4_CORE/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1190:F4_CORE/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1191:F4_CORE/core_cm4.h **** 
1192:F4_CORE/core_cm4.h **** /* MPU Region Base Address Register */
1193:F4_CORE/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1194:F4_CORE/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1195:F4_CORE/core_cm4.h **** 
1196:F4_CORE/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1197:F4_CORE/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1198:F4_CORE/core_cm4.h **** 
1199:F4_CORE/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1200:F4_CORE/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1201:F4_CORE/core_cm4.h **** 
1202:F4_CORE/core_cm4.h **** /* MPU Region Attribute and Size Register */
1203:F4_CORE/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 48


1204:F4_CORE/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1205:F4_CORE/core_cm4.h **** 
1206:F4_CORE/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1207:F4_CORE/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1208:F4_CORE/core_cm4.h **** 
1209:F4_CORE/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1210:F4_CORE/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1211:F4_CORE/core_cm4.h **** 
1212:F4_CORE/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1213:F4_CORE/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1214:F4_CORE/core_cm4.h **** 
1215:F4_CORE/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1216:F4_CORE/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1217:F4_CORE/core_cm4.h **** 
1218:F4_CORE/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1219:F4_CORE/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1220:F4_CORE/core_cm4.h **** 
1221:F4_CORE/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1222:F4_CORE/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1223:F4_CORE/core_cm4.h **** 
1224:F4_CORE/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1225:F4_CORE/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1226:F4_CORE/core_cm4.h **** 
1227:F4_CORE/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1228:F4_CORE/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1229:F4_CORE/core_cm4.h **** 
1230:F4_CORE/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1231:F4_CORE/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1232:F4_CORE/core_cm4.h **** 
1233:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_MPU */
1234:F4_CORE/core_cm4.h **** #endif
1235:F4_CORE/core_cm4.h **** 
1236:F4_CORE/core_cm4.h **** 
1237:F4_CORE/core_cm4.h **** #if (__FPU_PRESENT == 1)
1238:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
1239:F4_CORE/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1240:F4_CORE/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1241:F4_CORE/core_cm4.h ****   @{
1242:F4_CORE/core_cm4.h ****  */
1243:F4_CORE/core_cm4.h **** 
1244:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1245:F4_CORE/core_cm4.h ****  */
1246:F4_CORE/core_cm4.h **** typedef struct
1247:F4_CORE/core_cm4.h **** {
1248:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[1];
1249:F4_CORE/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1250:F4_CORE/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1251:F4_CORE/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1252:F4_CORE/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1253:F4_CORE/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1254:F4_CORE/core_cm4.h **** } FPU_Type;
1255:F4_CORE/core_cm4.h **** 
1256:F4_CORE/core_cm4.h **** /* Floating-Point Context Control Register */
1257:F4_CORE/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1258:F4_CORE/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1259:F4_CORE/core_cm4.h **** 
1260:F4_CORE/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 49


1261:F4_CORE/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1262:F4_CORE/core_cm4.h **** 
1263:F4_CORE/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1264:F4_CORE/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1265:F4_CORE/core_cm4.h **** 
1266:F4_CORE/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1267:F4_CORE/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1268:F4_CORE/core_cm4.h **** 
1269:F4_CORE/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1270:F4_CORE/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1271:F4_CORE/core_cm4.h **** 
1272:F4_CORE/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1273:F4_CORE/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1274:F4_CORE/core_cm4.h **** 
1275:F4_CORE/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1276:F4_CORE/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1277:F4_CORE/core_cm4.h **** 
1278:F4_CORE/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1279:F4_CORE/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1280:F4_CORE/core_cm4.h **** 
1281:F4_CORE/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1282:F4_CORE/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1283:F4_CORE/core_cm4.h **** 
1284:F4_CORE/core_cm4.h **** /* Floating-Point Context Address Register */
1285:F4_CORE/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1286:F4_CORE/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1287:F4_CORE/core_cm4.h **** 
1288:F4_CORE/core_cm4.h **** /* Floating-Point Default Status Control Register */
1289:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1290:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1291:F4_CORE/core_cm4.h **** 
1292:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1293:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1294:F4_CORE/core_cm4.h **** 
1295:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1296:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1297:F4_CORE/core_cm4.h **** 
1298:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1299:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1300:F4_CORE/core_cm4.h **** 
1301:F4_CORE/core_cm4.h **** /* Media and FP Feature Register 0 */
1302:F4_CORE/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1303:F4_CORE/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1304:F4_CORE/core_cm4.h **** 
1305:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1306:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1307:F4_CORE/core_cm4.h **** 
1308:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1309:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1310:F4_CORE/core_cm4.h **** 
1311:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1312:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1313:F4_CORE/core_cm4.h **** 
1314:F4_CORE/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1315:F4_CORE/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1316:F4_CORE/core_cm4.h **** 
1317:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 50


1318:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1319:F4_CORE/core_cm4.h **** 
1320:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1321:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1322:F4_CORE/core_cm4.h **** 
1323:F4_CORE/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1324:F4_CORE/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1325:F4_CORE/core_cm4.h **** 
1326:F4_CORE/core_cm4.h **** /* Media and FP Feature Register 1 */
1327:F4_CORE/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1328:F4_CORE/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1329:F4_CORE/core_cm4.h **** 
1330:F4_CORE/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1331:F4_CORE/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1332:F4_CORE/core_cm4.h **** 
1333:F4_CORE/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1334:F4_CORE/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1335:F4_CORE/core_cm4.h **** 
1336:F4_CORE/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1337:F4_CORE/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1338:F4_CORE/core_cm4.h **** 
1339:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_FPU */
1340:F4_CORE/core_cm4.h **** #endif
1341:F4_CORE/core_cm4.h **** 
1342:F4_CORE/core_cm4.h **** 
1343:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
1344:F4_CORE/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1345:F4_CORE/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1346:F4_CORE/core_cm4.h ****   @{
1347:F4_CORE/core_cm4.h ****  */
1348:F4_CORE/core_cm4.h **** 
1349:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1350:F4_CORE/core_cm4.h ****  */
1351:F4_CORE/core_cm4.h **** typedef struct
1352:F4_CORE/core_cm4.h **** {
1353:F4_CORE/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1354:F4_CORE/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1355:F4_CORE/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1356:F4_CORE/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1357:F4_CORE/core_cm4.h **** } CoreDebug_Type;
1358:F4_CORE/core_cm4.h **** 
1359:F4_CORE/core_cm4.h **** /* Debug Halting Control and Status Register */
1360:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1361:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1362:F4_CORE/core_cm4.h **** 
1363:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1364:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1365:F4_CORE/core_cm4.h **** 
1366:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1367:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1368:F4_CORE/core_cm4.h **** 
1369:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1370:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1371:F4_CORE/core_cm4.h **** 
1372:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1373:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1374:F4_CORE/core_cm4.h **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 51


1375:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1376:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1377:F4_CORE/core_cm4.h **** 
1378:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1379:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1380:F4_CORE/core_cm4.h **** 
1381:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1382:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1383:F4_CORE/core_cm4.h **** 
1384:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1385:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1386:F4_CORE/core_cm4.h **** 
1387:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1388:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1389:F4_CORE/core_cm4.h **** 
1390:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1391:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1392:F4_CORE/core_cm4.h **** 
1393:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1394:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1395:F4_CORE/core_cm4.h **** 
1396:F4_CORE/core_cm4.h **** /* Debug Core Register Selector Register */
1397:F4_CORE/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1398:F4_CORE/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1399:F4_CORE/core_cm4.h **** 
1400:F4_CORE/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1401:F4_CORE/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1402:F4_CORE/core_cm4.h **** 
1403:F4_CORE/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1404:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1405:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1406:F4_CORE/core_cm4.h **** 
1407:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1408:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1409:F4_CORE/core_cm4.h **** 
1410:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1411:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1412:F4_CORE/core_cm4.h **** 
1413:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1414:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1415:F4_CORE/core_cm4.h **** 
1416:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1417:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1418:F4_CORE/core_cm4.h **** 
1419:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1420:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1421:F4_CORE/core_cm4.h **** 
1422:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1423:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1424:F4_CORE/core_cm4.h **** 
1425:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1426:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1427:F4_CORE/core_cm4.h **** 
1428:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1429:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1430:F4_CORE/core_cm4.h **** 
1431:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 52


1432:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1433:F4_CORE/core_cm4.h **** 
1434:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1435:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1436:F4_CORE/core_cm4.h **** 
1437:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1438:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1439:F4_CORE/core_cm4.h **** 
1440:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1441:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1442:F4_CORE/core_cm4.h **** 
1443:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1444:F4_CORE/core_cm4.h **** 
1445:F4_CORE/core_cm4.h **** 
1446:F4_CORE/core_cm4.h **** /** \ingroup    CMSIS_core_register
1447:F4_CORE/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1448:F4_CORE/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1449:F4_CORE/core_cm4.h ****   @{
1450:F4_CORE/core_cm4.h ****  */
1451:F4_CORE/core_cm4.h **** 
1452:F4_CORE/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1453:F4_CORE/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1454:F4_CORE/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1455:F4_CORE/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1456:F4_CORE/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1457:F4_CORE/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1458:F4_CORE/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1459:F4_CORE/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1460:F4_CORE/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1461:F4_CORE/core_cm4.h **** 
1462:F4_CORE/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1463:F4_CORE/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1464:F4_CORE/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1465:F4_CORE/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1466:F4_CORE/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1467:F4_CORE/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1468:F4_CORE/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1469:F4_CORE/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1470:F4_CORE/core_cm4.h **** 
1471:F4_CORE/core_cm4.h **** #if (__MPU_PRESENT == 1)
1472:F4_CORE/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1473:F4_CORE/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1474:F4_CORE/core_cm4.h **** #endif
1475:F4_CORE/core_cm4.h **** 
1476:F4_CORE/core_cm4.h **** #if (__FPU_PRESENT == 1)
1477:F4_CORE/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1478:F4_CORE/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1479:F4_CORE/core_cm4.h **** #endif
1480:F4_CORE/core_cm4.h **** 
1481:F4_CORE/core_cm4.h **** /*@} */
1482:F4_CORE/core_cm4.h **** 
1483:F4_CORE/core_cm4.h **** 
1484:F4_CORE/core_cm4.h **** 
1485:F4_CORE/core_cm4.h **** /*******************************************************************************
1486:F4_CORE/core_cm4.h ****  *                Hardware Abstraction Layer
1487:F4_CORE/core_cm4.h ****   Core Function Interface contains:
1488:F4_CORE/core_cm4.h ****   - Core NVIC Functions
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 53


1489:F4_CORE/core_cm4.h ****   - Core SysTick Functions
1490:F4_CORE/core_cm4.h ****   - Core Debug Functions
1491:F4_CORE/core_cm4.h ****   - Core Register Access Functions
1492:F4_CORE/core_cm4.h ****  ******************************************************************************/
1493:F4_CORE/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1494:F4_CORE/core_cm4.h **** */
1495:F4_CORE/core_cm4.h **** 
1496:F4_CORE/core_cm4.h **** 
1497:F4_CORE/core_cm4.h **** 
1498:F4_CORE/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1499:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1500:F4_CORE/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1501:F4_CORE/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1502:F4_CORE/core_cm4.h ****     @{
1503:F4_CORE/core_cm4.h ****  */
1504:F4_CORE/core_cm4.h **** 
1505:F4_CORE/core_cm4.h **** /** \brief  Set Priority Grouping
1506:F4_CORE/core_cm4.h **** 
1507:F4_CORE/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1508:F4_CORE/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1509:F4_CORE/core_cm4.h ****   Only values from 0..7 are used.
1510:F4_CORE/core_cm4.h ****   In case of a conflict between priority grouping and available
1511:F4_CORE/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1512:F4_CORE/core_cm4.h **** 
1513:F4_CORE/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1514:F4_CORE/core_cm4.h ****  */
1515:F4_CORE/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1516:F4_CORE/core_cm4.h **** {
1517:F4_CORE/core_cm4.h ****   uint32_t reg_value;
1518:F4_CORE/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1519:F4_CORE/core_cm4.h **** 
1520:F4_CORE/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1521:F4_CORE/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk));             /* clear 
1522:F4_CORE/core_cm4.h ****   reg_value  =  (reg_value                                   |
1523:F4_CORE/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1524:F4_CORE/core_cm4.h ****                 (PriorityGroupTmp << 8)                       );              /* Insert write key a
1525:F4_CORE/core_cm4.h ****   SCB->AIRCR =  reg_value;
1526:F4_CORE/core_cm4.h **** }
1527:F4_CORE/core_cm4.h **** 
1528:F4_CORE/core_cm4.h **** 
1529:F4_CORE/core_cm4.h **** /** \brief  Get Priority Grouping
1530:F4_CORE/core_cm4.h **** 
1531:F4_CORE/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1532:F4_CORE/core_cm4.h **** 
1533:F4_CORE/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1534:F4_CORE/core_cm4.h ****  */
1535:F4_CORE/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1536:F4_CORE/core_cm4.h **** {
1537:F4_CORE/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1538:F4_CORE/core_cm4.h **** }
1539:F4_CORE/core_cm4.h **** 
1540:F4_CORE/core_cm4.h **** 
1541:F4_CORE/core_cm4.h **** /** \brief  Enable External Interrupt
1542:F4_CORE/core_cm4.h **** 
1543:F4_CORE/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1544:F4_CORE/core_cm4.h **** 
1545:F4_CORE/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 54


1546:F4_CORE/core_cm4.h ****  */
1547:F4_CORE/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1548:F4_CORE/core_cm4.h **** {
1549:F4_CORE/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1550:F4_CORE/core_cm4.h **** }
1551:F4_CORE/core_cm4.h **** 
1552:F4_CORE/core_cm4.h **** 
1553:F4_CORE/core_cm4.h **** /** \brief  Disable External Interrupt
1554:F4_CORE/core_cm4.h **** 
1555:F4_CORE/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1556:F4_CORE/core_cm4.h **** 
1557:F4_CORE/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1558:F4_CORE/core_cm4.h ****  */
1559:F4_CORE/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1560:F4_CORE/core_cm4.h **** {
1561:F4_CORE/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1562:F4_CORE/core_cm4.h **** }
1563:F4_CORE/core_cm4.h **** 
1564:F4_CORE/core_cm4.h **** 
1565:F4_CORE/core_cm4.h **** /** \brief  Get Pending Interrupt
1566:F4_CORE/core_cm4.h **** 
1567:F4_CORE/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1568:F4_CORE/core_cm4.h ****     for the specified interrupt.
1569:F4_CORE/core_cm4.h **** 
1570:F4_CORE/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1571:F4_CORE/core_cm4.h **** 
1572:F4_CORE/core_cm4.h ****     \return             0  Interrupt status is not pending.
1573:F4_CORE/core_cm4.h ****     \return             1  Interrupt status is pending.
1574:F4_CORE/core_cm4.h ****  */
1575:F4_CORE/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1576:F4_CORE/core_cm4.h **** {
1577:F4_CORE/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1578:F4_CORE/core_cm4.h **** }
1579:F4_CORE/core_cm4.h **** 
1580:F4_CORE/core_cm4.h **** 
1581:F4_CORE/core_cm4.h **** /** \brief  Set Pending Interrupt
1582:F4_CORE/core_cm4.h **** 
1583:F4_CORE/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1584:F4_CORE/core_cm4.h **** 
1585:F4_CORE/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1586:F4_CORE/core_cm4.h ****  */
1587:F4_CORE/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1588:F4_CORE/core_cm4.h **** {
1589:F4_CORE/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1590:F4_CORE/core_cm4.h **** }
1591:F4_CORE/core_cm4.h **** 
1592:F4_CORE/core_cm4.h **** 
1593:F4_CORE/core_cm4.h **** /** \brief  Clear Pending Interrupt
1594:F4_CORE/core_cm4.h **** 
1595:F4_CORE/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1596:F4_CORE/core_cm4.h **** 
1597:F4_CORE/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1598:F4_CORE/core_cm4.h ****  */
1599:F4_CORE/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1600:F4_CORE/core_cm4.h **** {
1601:F4_CORE/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1602:F4_CORE/core_cm4.h **** }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 55


1603:F4_CORE/core_cm4.h **** 
1604:F4_CORE/core_cm4.h **** 
1605:F4_CORE/core_cm4.h **** /** \brief  Get Active Interrupt
1606:F4_CORE/core_cm4.h **** 
1607:F4_CORE/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1608:F4_CORE/core_cm4.h **** 
1609:F4_CORE/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1610:F4_CORE/core_cm4.h **** 
1611:F4_CORE/core_cm4.h ****     \return             0  Interrupt status is not active.
1612:F4_CORE/core_cm4.h ****     \return             1  Interrupt status is active.
1613:F4_CORE/core_cm4.h ****  */
1614:F4_CORE/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1615:F4_CORE/core_cm4.h **** {
1616:F4_CORE/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1617:F4_CORE/core_cm4.h **** }
1618:F4_CORE/core_cm4.h **** 
1619:F4_CORE/core_cm4.h **** 
1620:F4_CORE/core_cm4.h **** /** \brief  Set Interrupt Priority
1621:F4_CORE/core_cm4.h **** 
1622:F4_CORE/core_cm4.h ****     The function sets the priority of an interrupt.
1623:F4_CORE/core_cm4.h **** 
1624:F4_CORE/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1625:F4_CORE/core_cm4.h **** 
1626:F4_CORE/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1627:F4_CORE/core_cm4.h ****     \param [in]  priority  Priority to set.
1628:F4_CORE/core_cm4.h ****  */
1629:F4_CORE/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 749              		.loc 2 1629 22 view .LVU213
 750              	.LBB10:
1630:F4_CORE/core_cm4.h **** {
1631:F4_CORE/core_cm4.h ****   if((int32_t)IRQn < 0) {
 751              		.loc 2 1631 3 view .LVU214
1632:F4_CORE/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
 752              		.loc 2 1632 5 view .LVU215
 753              		.loc 2 1632 55 is_stmt 0 view .LVU216
 754 006c 094B     		ldr	r3, .L57+28
 755 006e F022     		movs	r2, #240
 756 0070 83F82220 		strb	r2, [r3, #34]
 757              	.LVL43:
 758              		.loc 2 1632 55 view .LVU217
 759              	.LBE10:
 760              	.LBE9:
 176:SYS/task_manager/task_manager.c **** 
 761              		.loc 1 176 1 view .LVU218
 762 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 763              	.LVL44:
 764              	.L58:
 176:SYS/task_manager/task_manager.c **** 
 765              		.loc 1 176 1 view .LVU219
 766 0076 00BF     		.align	2
 767              	.L57:
 768 0078 00000000 		.word	Task_OS_StkMem
 769 007c 00000000 		.word	.LANCHOR3
 770 0080 FC9F0000 		.word	Task_OS_StkMem+40956
 771 0084 00000000 		.word	.LANCHOR4
 772 0088 00000000 		.word	.LANCHOR5
 773 008c 00000000 		.word	.LANCHOR6
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 56


 774 0090 00000000 		.word	.LANCHOR7
 775 0094 00ED00E0 		.word	-536810240
 776              		.cfi_endproc
 777              	.LFE128:
 779              		.section	.text.Task_SetStkPtr_Val,"ax",%progbits
 780              		.align	1
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu fpv4-sp-d16
 786              	Task_SetStkPtr_Val:
 787              	.LVL45:
 788              	.LFB144:
 438:SYS/task_manager/task_manager.c ****     uint32_t *Tsk_Ptr_tmp = NULL;
 789              		.loc 1 438 1 is_stmt 1 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 438:SYS/task_manager/task_manager.c ****     uint32_t *Tsk_Ptr_tmp = NULL;
 793              		.loc 1 438 1 is_stmt 0 view .LVU221
 794 0000 10B5     		push	{r4, lr}
 795              	.LCFI12:
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 4, -8
 798              		.cfi_offset 14, -4
 799 0002 0446     		mov	r4, r0
 439:SYS/task_manager/task_manager.c **** 
 800              		.loc 1 439 5 is_stmt 1 view .LVU222
 801              	.LVL46:
 441:SYS/task_manager/task_manager.c **** 
 802              		.loc 1 441 5 view .LVU223
 803 0004 C26C     		ldr	r2, [r0, #76]
 804 0006 0021     		movs	r1, #0
 805 0008 406D     		ldr	r0, [r0, #84]
 806              	.LVL47:
 441:SYS/task_manager/task_manager.c **** 
 807              		.loc 1 441 5 is_stmt 0 view .LVU224
 808 000a FFF7FEFF 		bl	memset
 809              	.LVL48:
 443:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = (uint32_t *)((uint32_t)(Tsk_Ptr_tmp)&0XFFFFFFF8ul);
 810              		.loc 1 443 5 is_stmt 1 view .LVU225
 443:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = (uint32_t *)((uint32_t)(Tsk_Ptr_tmp)&0XFFFFFFF8ul);
 811              		.loc 1 443 19 is_stmt 0 view .LVU226
 812 000e 04F15403 		add	r3, r4, #84
 443:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = (uint32_t *)((uint32_t)(Tsk_Ptr_tmp)&0XFFFFFFF8ul);
 813              		.loc 1 443 41 view .LVU227
 814 0012 E26C     		ldr	r2, [r4, #76]
 443:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = (uint32_t *)((uint32_t)(Tsk_Ptr_tmp)&0XFFFFFFF8ul);
 815              		.loc 1 443 35 view .LVU228
 816 0014 02F18042 		add	r2, r2, #1073741824
 817 0018 013A     		subs	r2, r2, #1
 443:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = (uint32_t *)((uint32_t)(Tsk_Ptr_tmp)&0XFFFFFFF8ul);
 818              		.loc 1 443 17 view .LVU229
 819 001a 03EB8203 		add	r3, r3, r2, lsl #2
 820              	.LVL49:
 444:SYS/task_manager/task_manager.c **** 
 821              		.loc 1 444 5 is_stmt 1 view .LVU230
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 57


 444:SYS/task_manager/task_manager.c **** 
 822              		.loc 1 444 55 is_stmt 0 view .LVU231
 823 001e 23F00703 		bic	r3, r3, #7
 824              	.LVL50:
 446:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = 0x01000000uL; /* xPSR */
 825              		.loc 1 446 5 is_stmt 1 view .LVU232
 447:SYS/task_manager/task_manager.c **** 
 826              		.loc 1 447 5 view .LVU233
 447:SYS/task_manager/task_manager.c **** 
 827              		.loc 1 447 18 is_stmt 0 view .LVU234
 828 0022 4FF08072 		mov	r2, #16777216
 829 0026 43F8042C 		str	r2, [r3, #-4]
 449:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = ((uint32_t)Task_Caller) & 0xfffffffeUL; /* PC */
 830              		.loc 1 449 5 is_stmt 1 view .LVU235
 831              	.LVL51:
 450:SYS/task_manager/task_manager.c **** 
 832              		.loc 1 450 5 view .LVU236
 450:SYS/task_manager/task_manager.c **** 
 833              		.loc 1 450 21 is_stmt 0 view .LVU237
 834 002a 094A     		ldr	r2, .L61
 450:SYS/task_manager/task_manager.c **** 
 835              		.loc 1 450 44 view .LVU238
 836 002c 22F00102 		bic	r2, r2, #1
 450:SYS/task_manager/task_manager.c **** 
 837              		.loc 1 450 18 view .LVU239
 838 0030 43F8082C 		str	r2, [r3, #-8]
 452:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = (uint32_t)Task_Exit; /* LR */
 839              		.loc 1 452 5 is_stmt 1 view .LVU240
 840              	.LVL52:
 453:SYS/task_manager/task_manager.c **** 
 841              		.loc 1 453 5 view .LVU241
 453:SYS/task_manager/task_manager.c **** 
 842              		.loc 1 453 20 is_stmt 0 view .LVU242
 843 0034 074A     		ldr	r2, .L61+4
 453:SYS/task_manager/task_manager.c **** 
 844              		.loc 1 453 18 view .LVU243
 845 0036 43F80C2C 		str	r2, [r3, #-12]
 456:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = (uint32_t)NULL; /* R0 */
 846              		.loc 1 456 5 is_stmt 1 view .LVU244
 847              	.LVL53:
 457:SYS/task_manager/task_manager.c **** 
 848              		.loc 1 457 5 view .LVU245
 457:SYS/task_manager/task_manager.c **** 
 849              		.loc 1 457 18 is_stmt 0 view .LVU246
 850 003a 0022     		movs	r2, #0
 851 003c 43F8202C 		str	r2, [r3, #-32]
 461:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = 0xfffffffd;
 852              		.loc 1 461 5 is_stmt 1 view .LVU247
 853              	.LVL54:
 462:SYS/task_manager/task_manager.c **** 
 854              		.loc 1 462 5 view .LVU248
 462:SYS/task_manager/task_manager.c **** 
 855              		.loc 1 462 18 is_stmt 0 view .LVU249
 856 0040 6FF00202 		mvn	r2, #2
 857 0044 43F8242C 		str	r2, [r3, #-36]
 464:SYS/task_manager/task_manager.c **** 
 858              		.loc 1 464 5 is_stmt 1 view .LVU250
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 58


 464:SYS/task_manager/task_manager.c **** 
 859              		.loc 1 464 17 is_stmt 0 view .LVU251
 860 0048 443B     		subs	r3, r3, #68
 861              	.LVL55:
 467:SYS/task_manager/task_manager.c **** }
 862              		.loc 1 467 5 is_stmt 1 view .LVU252
 467:SYS/task_manager/task_manager.c **** }
 863              		.loc 1 467 26 is_stmt 0 view .LVU253
 864 004a 2365     		str	r3, [r4, #80]
 468:SYS/task_manager/task_manager.c **** 
 865              		.loc 1 468 1 view .LVU254
 866 004c 10BD     		pop	{r4, pc}
 867              	.LVL56:
 868              	.L62:
 468:SYS/task_manager/task_manager.c **** 
 869              		.loc 1 468 1 view .LVU255
 870 004e 00BF     		.align	2
 871              	.L61:
 872 0050 00000000 		.word	Task_Caller
 873 0054 00000000 		.word	Task_Exit
 874              		.cfi_endproc
 875              	.LFE144:
 877              		.global	__aeabi_ul2f
 878              		.section	.text.Task_Idle,"ax",%progbits
 879              		.align	1
 880              		.syntax unified
 881              		.thumb
 882              		.thumb_func
 883              		.fpu fpv4-sp-d16
 885              	Task_Idle:
 886              	.LFB130:
 187:SYS/task_manager/task_manager.c ****     SYSTEM_RunTime cur_time;
 887              		.loc 1 187 1 is_stmt 1 view -0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 16
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891 0000 10B5     		push	{r4, lr}
 892              	.LCFI13:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 4, -8
 895              		.cfi_offset 14, -4
 896 0002 84B0     		sub	sp, sp, #16
 897              	.LCFI14:
 898              		.cfi_def_cfa_offset 24
 188:SYS/task_manager/task_manager.c ****     SYSTEM_RunTime time_diff;
 899              		.loc 1 188 5 view .LVU257
 189:SYS/task_manager/task_manager.c **** 
 900              		.loc 1 189 5 view .LVU258
 191:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&cur_time);
 901              		.loc 1 191 5 view .LVU259
 902 0004 6846     		mov	r0, sp
 903 0006 FFF7FEFF 		bl	RuntimeObj_Reset
 904              	.LVL57:
 192:SYS/task_manager/task_manager.c **** 
 905              		.loc 1 192 5 view .LVU260
 906 000a 02A8     		add	r0, sp, #8
 907 000c FFF7FEFF 		bl	RuntimeObj_Reset
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 59


 908              	.LVL58:
 194:SYS/task_manager/task_manager.c ****     time_diff = Get_TimeDifference_Between(TaskSys_StartTime, cur_time);
 909              		.loc 1 194 5 view .LVU261
 194:SYS/task_manager/task_manager.c ****     time_diff = Get_TimeDifference_Between(TaskSys_StartTime, cur_time);
 910              		.loc 1 194 16 is_stmt 0 view .LVU262
 911 0010 FFF7FEFF 		bl	Get_CurrentRunningUs
 912              	.LVL59:
 913 0014 0246     		mov	r2, r0
 914 0016 0B46     		mov	r3, r1
 194:SYS/task_manager/task_manager.c ****     time_diff = Get_TimeDifference_Between(TaskSys_StartTime, cur_time);
 915              		.loc 1 194 14 view .LVU263
 916 0018 0290     		str	r0, [sp, #8]
 917 001a 0391     		str	r1, [sp, #12]
 195:SYS/task_manager/task_manager.c **** 
 918              		.loc 1 195 5 is_stmt 1 view .LVU264
 195:SYS/task_manager/task_manager.c **** 
 919              		.loc 1 195 17 is_stmt 0 view .LVU265
 920 001c 0D49     		ldr	r1, .L65
 921 001e D1E90001 		ldrd	r0, [r1]
 922 0022 FFF7FEFF 		bl	Get_TimeDifference_Between
 923              	.LVL60:
 924 0026 0246     		mov	r2, r0
 925 0028 0B46     		mov	r3, r1
 195:SYS/task_manager/task_manager.c **** 
 926              		.loc 1 195 15 view .LVU266
 927 002a CDE90023 		strd	r2, [sp]
 197:SYS/task_manager/task_manager.c ****     TaskSys_Idle_Ocupy = (TaskSys_Idle_US / (float)time_diff);
 928              		.loc 1 197 5 is_stmt 1 view .LVU267
 197:SYS/task_manager/task_manager.c ****     TaskSys_Idle_Ocupy = (TaskSys_Idle_US / (float)time_diff);
 929              		.loc 1 197 20 is_stmt 0 view .LVU268
 930 002e 0A4B     		ldr	r3, .L65+4
 931 0030 1C68     		ldr	r4, [r3]
 932 0032 0134     		adds	r4, r4, #1
 933 0034 1C60     		str	r4, [r3]
 198:SYS/task_manager/task_manager.c **** }
 934              		.loc 1 198 5 is_stmt 1 view .LVU269
 198:SYS/task_manager/task_manager.c **** }
 935              		.loc 1 198 45 is_stmt 0 view .LVU270
 936 0036 FFF7FEFF 		bl	__aeabi_ul2f
 937              	.LVL61:
 938 003a 06EE900A 		vmov	s13, r0
 198:SYS/task_manager/task_manager.c **** }
 939              		.loc 1 198 43 view .LVU271
 940 003e 07EE904A 		vmov	s15, r4	@ int
 941 0042 F8EE677A 		vcvt.f32.u32	s15, s15
 942 0046 87EEA67A 		vdiv.f32	s14, s15, s13
 198:SYS/task_manager/task_manager.c **** }
 943              		.loc 1 198 24 view .LVU272
 944 004a 044B     		ldr	r3, .L65+8
 945 004c 83ED007A 		vstr.32	s14, [r3]
 199:SYS/task_manager/task_manager.c **** 
 946              		.loc 1 199 1 view .LVU273
 947 0050 04B0     		add	sp, sp, #16
 948              	.LCFI15:
 949              		.cfi_def_cfa_offset 8
 950              		@ sp needed
 951 0052 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 60


 952              	.L66:
 953              		.align	2
 954              	.L65:
 955 0054 00000000 		.word	.LANCHOR8
 956 0058 00000000 		.word	.LANCHOR9
 957 005c 00000000 		.word	.LANCHOR10
 958              		.cfi_endproc
 959              	.LFE130:
 961              		.section	.text.Task_Exec,"ax",%progbits
 962              		.align	1
 963              		.syntax unified
 964              		.thumb
 965              		.thumb_func
 966              		.fpu fpv4-sp-d16
 968              	Task_Exec:
 969              	.LVL62:
 970              	.LFB161:
 652:SYS/task_manager/task_manager.c **** 
 653:SYS/task_manager/task_manager.c **** Task_Handler Task_Create(const char *name, uint32_t frq, Priority_Group group, TASK_Priority priori
 654:SYS/task_manager/task_manager.c **** {
 655:SYS/task_manager/task_manager.c ****     Task_Handler handle;
 656:SYS/task_manager/task_manager.c ****     uint16_t task_name_len = strlen(name);
 657:SYS/task_manager/task_manager.c ****     uint32_t *Tsk_Ptr_tmp = NULL;
 658:SYS/task_manager/task_manager.c ****     static bool taskOs_InitState = false;
 659:SYS/task_manager/task_manager.c **** 
 660:SYS/task_manager/task_manager.c ****     if (!taskOs_InitState)
 661:SYS/task_manager/task_manager.c ****     {
 662:SYS/task_manager/task_manager.c ****         TaskSys_Init();
 663:SYS/task_manager/task_manager.c ****         taskOs_InitState = true;
 664:SYS/task_manager/task_manager.c ****     }
 665:SYS/task_manager/task_manager.c **** 
 666:SYS/task_manager/task_manager.c ****     //already have task in current group and priority in task pointer matrix
 667:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority] != NULL)
 668:SYS/task_manager/task_manager.c ****     {
 669:SYS/task_manager/task_manager.c ****         return TASK_REGISTED;
 670:SYS/task_manager/task_manager.c ****     }
 671:SYS/task_manager/task_manager.c **** 
 672:SYS/task_manager/task_manager.c ****     //request a memory space for Task_Ptr contain
 673:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority] = (Task *)MMU_Malloc(sizeof(Task));
 674:SYS/task_manager/task_manager.c **** 
 675:SYS/task_manager/task_manager.c ****     //record Task_Ptr poiner`s address
 676:SYS/task_manager/task_manager.c ****     handle = *&Task_Ptr[group][priority];
 677:SYS/task_manager/task_manager.c **** 
 678:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Task_name = name;
 679:SYS/task_manager/task_manager.c **** 
 680:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->exec_frq = frq;
 681:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->exec_interval_us = RUNTIEM_MAX_TICK_FRQ / frq;
 682:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_Func = func;
 683:SYS/task_manager/task_manager.c **** 
 684:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->priority.Priority = (group << 3) | priority;
 685:SYS/task_manager/task_manager.c **** 
 686:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 687:SYS/task_manager/task_manager.c ****     //init delay tag
 688:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.on_delay = false;
 689:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.tsk_hdl = handle;
 690:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.time_unit = 0;
 691:SYS/task_manager/task_manager.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 61


 692:SYS/task_manager/task_manager.c ****     //request memory space for task stack
 693:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Stack_Depth = StackDepth;
 694:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->TCB.Stack = (uint32_t *)MMU_Malloc(StackDepth * sizeof(uint32_t));
 695:SYS/task_manager/task_manager.c **** 
 696:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority]->TCB.Stack != NULL)
 697:SYS/task_manager/task_manager.c ****     {
 698:SYS/task_manager/task_manager.c ****         Task_SetStkPtr_Val(Task_Ptr[group][priority]);
 699:SYS/task_manager/task_manager.c ****     }
 700:SYS/task_manager/task_manager.c ****     else
 701:SYS/task_manager/task_manager.c ****     {
 702:SYS/task_manager/task_manager.c ****         return TASK_BAD_MEMSPC_REQ;
 703:SYS/task_manager/task_manager.c ****     }
 704:SYS/task_manager/task_manager.c **** #endif
 705:SYS/task_manager/task_manager.c **** 
 706:SYS/task_manager/task_manager.c ****     //reset single loop running us
 707:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->TskFuncUing_US = 0;
 708:SYS/task_manager/task_manager.c **** 
 709:SYS/task_manager/task_manager.c ****     //reset task cpu occupy data
 710:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.cpu_opy = 0;
 711:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.totlal_running_time = 0;
 712:SYS/task_manager/task_manager.c **** 
 713:SYS/task_manager/task_manager.c ****     //set current group flag to ready
 714:SYS/task_manager/task_manager.c ****     TskHdl_RdyMap.Grp.Flg |= 1 << GET_TASKGROUP_PRIORITY(Task_Ptr[group][priority]->priority.Priori
 715:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 716:SYS/task_manager/task_manager.c ****     TskHdl_RdyMap.TskInGrp[GET_TASKGROUP_PRIORITY(Task_Ptr[group][priority]->priority.Priority)].Fl
 717:SYS/task_manager/task_manager.c **** 
 718:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_frq = 0;
 719:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_arv = 0;
 720:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_max = 0;
 721:SYS/task_manager/task_manager.c **** 
 722:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Exec_Time));
 723:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Init_Time));
 724:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Start_Time));
 725:SYS/task_manager/task_manager.c **** 
 726:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.Init_Time = Get_CurrentRunningUs();
 727:SYS/task_manager/task_manager.c **** 
 728:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.Exec_Times = 0;
 729:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.error_code = NOERROR;
 730:SYS/task_manager/task_manager.c **** 
 731:SYS/task_manager/task_manager.c ****     Task_SetReady(Task_Ptr[group][priority]);
 732:SYS/task_manager/task_manager.c **** 
 733:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->item_ptr = (item_obj *)MMU_Malloc(sizeof(item_obj));
 734:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority]->item_ptr == NULL)
 735:SYS/task_manager/task_manager.c ****     {
 736:SYS/task_manager/task_manager.c ****         return TASK_BAD_MEMSPC_REQ;
 737:SYS/task_manager/task_manager.c ****     }
 738:SYS/task_manager/task_manager.c **** 
 739:SYS/task_manager/task_manager.c ****     List_ItemInit(Task_Ptr[group][priority]->item_ptr, Task_Ptr[group][priority]);
 740:SYS/task_manager/task_manager.c ****     if (TskCrt_RegList.num == 0)
 741:SYS/task_manager/task_manager.c ****     {
 742:SYS/task_manager/task_manager.c ****         List_Init(&TskCrt_RegList.list, Task_Ptr[group][priority]->item_ptr, by_condition, Task_Pri
 743:SYS/task_manager/task_manager.c ****     }
 744:SYS/task_manager/task_manager.c ****     else
 745:SYS/task_manager/task_manager.c ****     {
 746:SYS/task_manager/task_manager.c ****         List_Insert_Item(&TskCrt_RegList.list, Task_Ptr[group][priority]->item_ptr);
 747:SYS/task_manager/task_manager.c ****     }
 748:SYS/task_manager/task_manager.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 62


 749:SYS/task_manager/task_manager.c ****     List_ItemInit(&Task_Ptr[group][priority]->delay_item, &Task_Ptr[group][priority]->delay_info);
 750:SYS/task_manager/task_manager.c **** 
 751:SYS/task_manager/task_manager.c ****     TskCrt_RegList.num++;
 752:SYS/task_manager/task_manager.c **** 
 753:SYS/task_manager/task_manager.c ****     return handle;
 754:SYS/task_manager/task_manager.c **** }
 755:SYS/task_manager/task_manager.c **** 
 756:SYS/task_manager/task_manager.c **** //Remove func untest
 757:SYS/task_manager/task_manager.c **** void Task_Remove(Task_Handler Tsk_Hdl)
 758:SYS/task_manager/task_manager.c **** {
 759:SYS/task_manager/task_manager.c ****     //convert Tsk_Hdl from uint32_t var to Task Address which we need to delete
 760:SYS/task_manager/task_manager.c ****     //MMU_Free that memory space
 761:SYS/task_manager/task_manager.c ****     //erase all data in specificly memory space
 762:SYS/task_manager/task_manager.c ****     //set Task pointer to Null which we wanted to be delete
 763:SYS/task_manager/task_manager.c **** 
 764:SYS/task_manager/task_manager.c ****     uint8_t remove_group = GET_TASKGROUP_PRIORITY(((Task *)Tsk_Hdl)->priority.Priority);
 765:SYS/task_manager/task_manager.c ****     uint8_t remove_task = GET_TASKINGROUP_PRIORITY(((Task *)Tsk_Hdl)->priority.Priority);
 766:SYS/task_manager/task_manager.c **** 
 767:SYS/task_manager/task_manager.c ****     ReSet_Task_Data((Task *)Tsk_Hdl);
 768:SYS/task_manager/task_manager.c **** 
 769:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 770:SYS/task_manager/task_manager.c ****     MMU_Free((uint32_t *)((Task *)Tsk_Hdl)->TCB.Stack);
 771:SYS/task_manager/task_manager.c ****     MMU_Free((uint32_t *)((Task *)Tsk_Hdl)->TCB.Top_Stk_Ptr);
 772:SYS/task_manager/task_manager.c **** #endif
 773:SYS/task_manager/task_manager.c **** 
 774:SYS/task_manager/task_manager.c ****     MMU_Free((Task *)Tsk_Hdl);
 775:SYS/task_manager/task_manager.c ****     Task_Ptr[remove_group][remove_task] = NULL;
 776:SYS/task_manager/task_manager.c **** }
 777:SYS/task_manager/task_manager.c **** 
 778:SYS/task_manager/task_manager.c **** void TaskSystem_Start(void)
 779:SYS/task_manager/task_manager.c **** {
 780:SYS/task_manager/task_manager.c ****     Runtime_Config(RUNTIME_TICK_FRQ_40K);
 781:SYS/task_manager/task_manager.c ****     Runtime_Set_start_Callback(NULL);
 782:SYS/task_manager/task_manager.c ****     Runtime_Set_stop_Callback(NULL);
 783:SYS/task_manager/task_manager.c ****     Runtime_Set_tick_Callback(Task_Scheduler); /* 5us cast by calling the scheduler */
 784:SYS/task_manager/task_manager.c ****     Runtime_Start();
 785:SYS/task_manager/task_manager.c **** 
 786:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&TaskSys_StartTime);
 787:SYS/task_manager/task_manager.c **** 
 788:SYS/task_manager/task_manager.c ****     TaskSys_StartTime = Get_CurrentRunningUs();
 789:SYS/task_manager/task_manager.c **** 
 790:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 791:SYS/task_manager/task_manager.c ****     NxtRunTsk_Ptr = Task_Get_HighestRank_RdyTask();
 792:SYS/task_manager/task_manager.c **** 
 793:SYS/task_manager/task_manager.c ****     if (NxtRunTsk_Ptr != NULL)
 794:SYS/task_manager/task_manager.c ****     {
 795:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
 796:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 797:SYS/task_manager/task_manager.c **** 
 798:SYS/task_manager/task_manager.c ****         CurTsk_TCB = NxtTsk_TCB;
 799:SYS/task_manager/task_manager.c ****     }
 800:SYS/task_manager/task_manager.c **** #endif
 801:SYS/task_manager/task_manager.c **** 
 802:SYS/task_manager/task_manager.c ****     Task_SetPendSVPro();
 803:SYS/task_manager/task_manager.c ****     Task_TriggerPendSV();
 804:SYS/task_manager/task_manager.c **** 
 805:SYS/task_manager/task_manager.c ****     return true;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 63


 806:SYS/task_manager/task_manager.c **** }
 807:SYS/task_manager/task_manager.c **** 
 808:SYS/task_manager/task_manager.c **** void Task_SetRunState(Task_Handler Tsk_Handle, TASK_STATE state)
 809:SYS/task_manager/task_manager.c **** {
 810:SYS/task_manager/task_manager.c ****     ((Task *)Tsk_Handle)->Exec_status.State = state;
 811:SYS/task_manager/task_manager.c **** }
 812:SYS/task_manager/task_manager.c **** 
 813:SYS/task_manager/task_manager.c **** static Task *Get_TaskInstance(uint8_t group, uint8_t priority)
 814:SYS/task_manager/task_manager.c **** {
 815:SYS/task_manager/task_manager.c ****     return Task_Ptr[group][priority];
 816:SYS/task_manager/task_manager.c **** }
 817:SYS/task_manager/task_manager.c **** 
 818:SYS/task_manager/task_manager.c **** static void Task_Exec(Task *tsk_ptr)
 819:SYS/task_manager/task_manager.c **** {
 971              		.loc 1 819 1 is_stmt 1 view -0
 972              		.cfi_startproc
 973              		@ Volatile: function does not return.
 974              		@ args = 0, pretend = 0, frame = 8
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              		.loc 1 819 1 is_stmt 0 view .LVU275
 977 0000 00B5     		push	{lr}
 978              	.LCFI16:
 979              		.cfi_def_cfa_offset 4
 980              		.cfi_offset 14, -4
 981 0002 83B0     		sub	sp, sp, #12
 982              	.LCFI17:
 983              		.cfi_def_cfa_offset 16
 820:SYS/task_manager/task_manager.c ****     SYSTEM_RunTime time_diff;
 984              		.loc 1 820 5 is_stmt 1 view .LVU276
 821:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&time_diff);
 985              		.loc 1 821 5 view .LVU277
 986 0004 6846     		mov	r0, sp
 987              	.LVL63:
 988              		.loc 1 821 5 is_stmt 0 view .LVU278
 989 0006 FFF7FEFF 		bl	RuntimeObj_Reset
 990              	.LVL64:
 822:SYS/task_manager/task_manager.c **** 
 823:SYS/task_manager/task_manager.c ****     tsk_ptr = NxtRunTsk_Ptr;
 991              		.loc 1 823 5 is_stmt 1 view .LVU279
 992              		.loc 1 823 13 is_stmt 0 view .LVU280
 993 000a 354B     		ldr	r3, .L76
 994 000c 1C68     		ldr	r4, [r3]
 995              	.LVL65:
 996              		.loc 1 823 13 view .LVU281
 997 000e 0CE0     		b	.L68
 998              	.L75:
 824:SYS/task_manager/task_manager.c **** 
 825:SYS/task_manager/task_manager.c ****     while (true)
 826:SYS/task_manager/task_manager.c ****     {
 827:SYS/task_manager/task_manager.c ****         if (tsk_ptr->Exec_status.State == Task_Ready)
 828:SYS/task_manager/task_manager.c ****         {
 829:SYS/task_manager/task_manager.c ****             tsk_ptr->TskFuncUing_US = 0;
 830:SYS/task_manager/task_manager.c **** 
 831:SYS/task_manager/task_manager.c ****             //when task function execute finish reset ready flag of current task in group
 832:SYS/task_manager/task_manager.c ****             //code down below
 833:SYS/task_manager/task_manager.c ****             Task_ClearReady(tsk_ptr);
 834:SYS/task_manager/task_manager.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 64


 835:SYS/task_manager/task_manager.c ****             //set current running task
 836:SYS/task_manager/task_manager.c ****             CurRunTsk_Ptr = tsk_ptr;
 837:SYS/task_manager/task_manager.c **** 
 838:SYS/task_manager/task_manager.c ****             if (tsk_ptr->Exec_status.Exec_Times == 0)
 839:SYS/task_manager/task_manager.c ****             {
 840:SYS/task_manager/task_manager.c ****                 tsk_ptr->Exec_status.Start_Time = Get_CurrentRunningUs();
 999              		.loc 1 840 17 is_stmt 1 view .LVU282
 1000              		.loc 1 840 51 is_stmt 0 view .LVU283
 1001 0010 FFF7FEFF 		bl	Get_CurrentRunningUs
 1002              	.LVL66:
 1003              		.loc 1 840 49 view .LVU284
 1004 0014 E061     		str	r0, [r4, #28]
 1005 0016 2162     		str	r1, [r4, #32]
 841:SYS/task_manager/task_manager.c ****                 tsk_ptr->Exec_status.Exec_Time = tsk_ptr->Exec_status.Start_Time;
 1006              		.loc 1 841 17 is_stmt 1 view .LVU285
 1007              		.loc 1 841 48 is_stmt 0 view .LVU286
 1008 0018 6062     		str	r0, [r4, #36]
 1009 001a A162     		str	r1, [r4, #40]
 1010 001c 12E0     		b	.L69
 1011              	.L72:
 842:SYS/task_manager/task_manager.c ****             }
 843:SYS/task_manager/task_manager.c **** 
 844:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.State = Task_Running;
 845:SYS/task_manager/task_manager.c **** 
 846:SYS/task_manager/task_manager.c ****             //execute task funtion
 847:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_Func(*&tsk_ptr);
 848:SYS/task_manager/task_manager.c **** 
 849:SYS/task_manager/task_manager.c ****             //record task running times
 850:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.Exec_Times++;
 851:SYS/task_manager/task_manager.c **** 
 852:SYS/task_manager/task_manager.c ****             //get max task execut time
 853:SYS/task_manager/task_manager.c ****             if (tsk_ptr->TskFuncUing_US > tsk_ptr->Exec_status.detect_exec_time_max)
 854:SYS/task_manager/task_manager.c ****             {
 855:SYS/task_manager/task_manager.c ****                 tsk_ptr->Exec_status.detect_exec_time_max = tsk_ptr->TskFuncUing_US;
 856:SYS/task_manager/task_manager.c ****             }
 857:SYS/task_manager/task_manager.c **** 
 858:SYS/task_manager/task_manager.c ****             //get task total execute time unit in us
 859:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.totlal_running_time += tsk_ptr->TskFuncUing_US;
 860:SYS/task_manager/task_manager.c ****             time_diff = Get_TimeDifference_Between(tsk_ptr->Exec_status.Start_Time, tsk_ptr->Exec_s
 861:SYS/task_manager/task_manager.c **** 
 862:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy = tsk_ptr->Exec_status.totlal_running_time / (float)time_d
 863:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy *= 100;
 864:SYS/task_manager/task_manager.c **** 
 865:SYS/task_manager/task_manager.c ****             //get average task running time
 866:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.detect_exec_time_arv += tsk_ptr->TskFuncUing_US;
 867:SYS/task_manager/task_manager.c ****             if (tsk_ptr->Exec_status.Exec_Times > 1)
 868:SYS/task_manager/task_manager.c ****             {
 869:SYS/task_manager/task_manager.c ****                 tsk_ptr->Exec_status.detect_exec_time_arv /= 2;
 870:SYS/task_manager/task_manager.c ****             }
 871:SYS/task_manager/task_manager.c **** 
 872:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.Exec_Time = Get_TargetRunTime(tsk_ptr->exec_interval_us);
 873:SYS/task_manager/task_manager.c **** 
 874:SYS/task_manager/task_manager.c ****             //get task execute frequence
 875:SYS/task_manager/task_manager.c ****             if (tsk_ptr->Exec_status.Exec_Times)
 876:SYS/task_manager/task_manager.c ****             {
 877:SYS/task_manager/task_manager.c ****                 tsk_ptr->Exec_status.detect_exec_frq = (uint32_t)(tsk_ptr->Exec_status.Exec_Times /
 878:SYS/task_manager/task_manager.c ****             }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 65


 879:SYS/task_manager/task_manager.c **** 
 880:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.State = Task_Stop;
 1012              		.loc 1 880 13 is_stmt 1 view .LVU287
 1013              		.loc 1 880 40 is_stmt 0 view .LVU288
 1014 001e 0223     		movs	r3, #2
 1015 0020 84F84830 		strb	r3, [r4, #72]
 881:SYS/task_manager/task_manager.c **** 
 882:SYS/task_manager/task_manager.c ****             //erase currnet runnint task pointer
 883:SYS/task_manager/task_manager.c ****             CurRunTsk_Ptr = NULL;
 1016              		.loc 1 883 13 is_stmt 1 view .LVU289
 1017              		.loc 1 883 27 is_stmt 0 view .LVU290
 1018 0024 2F4B     		ldr	r3, .L76+4
 1019 0026 0022     		movs	r2, #0
 1020 0028 1A60     		str	r2, [r3]
 1021              	.L68:
 825:SYS/task_manager/task_manager.c ****     {
 1022              		.loc 1 825 5 is_stmt 1 view .LVU291
 827:SYS/task_manager/task_manager.c ****         {
 1023              		.loc 1 827 9 view .LVU292
 827:SYS/task_manager/task_manager.c ****         {
 1024              		.loc 1 827 33 is_stmt 0 view .LVU293
 1025 002a 94F84830 		ldrb	r3, [r4, #72]	@ zero_extendqisi2
 827:SYS/task_manager/task_manager.c ****         {
 1026              		.loc 1 827 12 view .LVU294
 1027 002e 002B     		cmp	r3, #0
 1028 0030 FBD1     		bne	.L68
 829:SYS/task_manager/task_manager.c **** 
 1029              		.loc 1 829 13 is_stmt 1 view .LVU295
 829:SYS/task_manager/task_manager.c **** 
 1030              		.loc 1 829 37 is_stmt 0 view .LVU296
 1031 0032 A365     		str	r3, [r4, #88]
 833:SYS/task_manager/task_manager.c **** 
 1032              		.loc 1 833 13 is_stmt 1 view .LVU297
 1033 0034 2046     		mov	r0, r4
 1034 0036 FFF7FEFF 		bl	Task_ClearReady
 1035              	.LVL67:
 836:SYS/task_manager/task_manager.c **** 
 1036              		.loc 1 836 13 view .LVU298
 836:SYS/task_manager/task_manager.c **** 
 1037              		.loc 1 836 27 is_stmt 0 view .LVU299
 1038 003a 2A4B     		ldr	r3, .L76+4
 1039 003c 1C60     		str	r4, [r3]
 838:SYS/task_manager/task_manager.c ****             {
 1040              		.loc 1 838 13 is_stmt 1 view .LVU300
 838:SYS/task_manager/task_manager.c ****             {
 1041              		.loc 1 838 37 is_stmt 0 view .LVU301
 1042 003e A36B     		ldr	r3, [r4, #56]
 838:SYS/task_manager/task_manager.c ****             {
 1043              		.loc 1 838 16 view .LVU302
 1044 0040 002B     		cmp	r3, #0
 1045 0042 E5D0     		beq	.L75
 1046              	.L69:
 844:SYS/task_manager/task_manager.c **** 
 1047              		.loc 1 844 13 is_stmt 1 view .LVU303
 844:SYS/task_manager/task_manager.c **** 
 1048              		.loc 1 844 40 is_stmt 0 view .LVU304
 1049 0044 0123     		movs	r3, #1
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 66


 1050 0046 84F84830 		strb	r3, [r4, #72]
 847:SYS/task_manager/task_manager.c **** 
 1051              		.loc 1 847 13 is_stmt 1 view .LVU305
 847:SYS/task_manager/task_manager.c **** 
 1052              		.loc 1 847 20 is_stmt 0 view .LVU306
 1053 004a 2369     		ldr	r3, [r4, #16]
 847:SYS/task_manager/task_manager.c **** 
 1054              		.loc 1 847 13 view .LVU307
 1055 004c 2046     		mov	r0, r4
 1056 004e 9847     		blx	r3
 1057              	.LVL68:
 850:SYS/task_manager/task_manager.c **** 
 1058              		.loc 1 850 13 is_stmt 1 view .LVU308
 850:SYS/task_manager/task_manager.c **** 
 1059              		.loc 1 850 33 is_stmt 0 view .LVU309
 1060 0050 A36B     		ldr	r3, [r4, #56]
 850:SYS/task_manager/task_manager.c **** 
 1061              		.loc 1 850 44 view .LVU310
 1062 0052 0133     		adds	r3, r3, #1
 1063 0054 A363     		str	r3, [r4, #56]
 853:SYS/task_manager/task_manager.c ****             {
 1064              		.loc 1 853 13 is_stmt 1 view .LVU311
 853:SYS/task_manager/task_manager.c ****             {
 1065              		.loc 1 853 24 is_stmt 0 view .LVU312
 1066 0056 A26D     		ldr	r2, [r4, #88]
 853:SYS/task_manager/task_manager.c ****             {
 1067              		.loc 1 853 63 view .LVU313
 1068 0058 636B     		ldr	r3, [r4, #52]
 853:SYS/task_manager/task_manager.c ****             {
 1069              		.loc 1 853 16 view .LVU314
 1070 005a 9A42     		cmp	r2, r3
 1071 005c 00D9     		bls	.L70
 855:SYS/task_manager/task_manager.c ****             }
 1072              		.loc 1 855 17 is_stmt 1 view .LVU315
 855:SYS/task_manager/task_manager.c ****             }
 1073              		.loc 1 855 59 is_stmt 0 view .LVU316
 1074 005e 6263     		str	r2, [r4, #52]
 1075              	.L70:
 859:SYS/task_manager/task_manager.c ****             time_diff = Get_TimeDifference_Between(tsk_ptr->Exec_status.Start_Time, tsk_ptr->Exec_s
 1076              		.loc 1 859 13 is_stmt 1 view .LVU317
 859:SYS/task_manager/task_manager.c ****             time_diff = Get_TimeDifference_Between(tsk_ptr->Exec_status.Start_Time, tsk_ptr->Exec_s
 1077              		.loc 1 859 54 is_stmt 0 view .LVU318
 1078 0060 236C     		ldr	r3, [r4, #64]
 1079 0062 1344     		add	r3, r3, r2
 1080 0064 2364     		str	r3, [r4, #64]
 860:SYS/task_manager/task_manager.c **** 
 1081              		.loc 1 860 13 is_stmt 1 view .LVU319
 860:SYS/task_manager/task_manager.c **** 
 1082              		.loc 1 860 25 is_stmt 0 view .LVU320
 1083 0066 626A     		ldr	r2, [r4, #36]
 1084 0068 A36A     		ldr	r3, [r4, #40]
 1085 006a E069     		ldr	r0, [r4, #28]
 1086 006c 216A     		ldr	r1, [r4, #32]
 1087 006e FFF7FEFF 		bl	Get_TimeDifference_Between
 1088              	.LVL69:
 1089 0072 0246     		mov	r2, r0
 1090 0074 0B46     		mov	r3, r1
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 67


 860:SYS/task_manager/task_manager.c **** 
 1091              		.loc 1 860 23 view .LVU321
 1092 0076 CDE90023 		strd	r2, [sp]
 862:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy *= 100;
 1093              		.loc 1 862 13 is_stmt 1 view .LVU322
 862:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy *= 100;
 1094              		.loc 1 862 64 is_stmt 0 view .LVU323
 1095 007a 256C     		ldr	r5, [r4, #64]
 862:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy *= 100;
 1096              		.loc 1 862 87 view .LVU324
 1097 007c FFF7FEFF 		bl	__aeabi_ul2f
 1098              	.LVL70:
 1099 0080 06EE900A 		vmov	s13, r0
 862:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy *= 100;
 1100              		.loc 1 862 85 view .LVU325
 1101 0084 07EE905A 		vmov	s15, r5	@ int
 1102 0088 B8EE677A 		vcvt.f32.u32	s14, s15
 1103 008c C7EE267A 		vdiv.f32	s15, s14, s13
 862:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy *= 100;
 1104              		.loc 1 862 42 view .LVU326
 1105 0090 C4ED117A 		vstr.32	s15, [r4, #68]
 863:SYS/task_manager/task_manager.c **** 
 1106              		.loc 1 863 13 is_stmt 1 view .LVU327
 863:SYS/task_manager/task_manager.c **** 
 1107              		.loc 1 863 42 is_stmt 0 view .LVU328
 1108 0094 9FED147A 		vldr.32	s14, .L76+8
 1109 0098 67EE877A 		vmul.f32	s15, s15, s14
 1110 009c C4ED117A 		vstr.32	s15, [r4, #68]
 866:SYS/task_manager/task_manager.c ****             if (tsk_ptr->Exec_status.Exec_Times > 1)
 1111              		.loc 1 866 13 is_stmt 1 view .LVU329
 866:SYS/task_manager/task_manager.c ****             if (tsk_ptr->Exec_status.Exec_Times > 1)
 1112              		.loc 1 866 65 is_stmt 0 view .LVU330
 1113 00a0 A36D     		ldr	r3, [r4, #88]
 866:SYS/task_manager/task_manager.c ****             if (tsk_ptr->Exec_status.Exec_Times > 1)
 1114              		.loc 1 866 55 view .LVU331
 1115 00a2 226B     		ldr	r2, [r4, #48]
 1116 00a4 1344     		add	r3, r3, r2
 1117 00a6 2363     		str	r3, [r4, #48]
 867:SYS/task_manager/task_manager.c ****             {
 1118              		.loc 1 867 13 is_stmt 1 view .LVU332
 867:SYS/task_manager/task_manager.c ****             {
 1119              		.loc 1 867 37 is_stmt 0 view .LVU333
 1120 00a8 A26B     		ldr	r2, [r4, #56]
 867:SYS/task_manager/task_manager.c ****             {
 1121              		.loc 1 867 16 view .LVU334
 1122 00aa 012A     		cmp	r2, #1
 1123 00ac 01D9     		bls	.L71
 869:SYS/task_manager/task_manager.c ****             }
 1124              		.loc 1 869 17 is_stmt 1 view .LVU335
 869:SYS/task_manager/task_manager.c ****             }
 1125              		.loc 1 869 59 is_stmt 0 view .LVU336
 1126 00ae 5B08     		lsrs	r3, r3, #1
 1127 00b0 2363     		str	r3, [r4, #48]
 1128              	.L71:
 872:SYS/task_manager/task_manager.c **** 
 1129              		.loc 1 872 13 is_stmt 1 view .LVU337
 872:SYS/task_manager/task_manager.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 68


 1130              		.loc 1 872 46 is_stmt 0 view .LVU338
 1131 00b2 A089     		ldrh	r0, [r4, #12]
 1132 00b4 FFF7FEFF 		bl	Get_TargetRunTime
 1133              	.LVL71:
 872:SYS/task_manager/task_manager.c **** 
 1134              		.loc 1 872 44 view .LVU339
 1135 00b8 6062     		str	r0, [r4, #36]
 1136 00ba A162     		str	r1, [r4, #40]
 875:SYS/task_manager/task_manager.c ****             {
 1137              		.loc 1 875 13 is_stmt 1 view .LVU340
 875:SYS/task_manager/task_manager.c ****             {
 1138              		.loc 1 875 37 is_stmt 0 view .LVU341
 1139 00bc A56B     		ldr	r5, [r4, #56]
 875:SYS/task_manager/task_manager.c ****             {
 1140              		.loc 1 875 16 view .LVU342
 1141 00be 002D     		cmp	r5, #0
 1142 00c0 ADD0     		beq	.L72
 877:SYS/task_manager/task_manager.c ****             }
 1143              		.loc 1 877 17 is_stmt 1 view .LVU343
 877:SYS/task_manager/task_manager.c ****             }
 1144              		.loc 1 877 101 is_stmt 0 view .LVU344
 1145 00c2 FFF7FEFF 		bl	__aeabi_ul2f
 1146              	.LVL72:
 1147 00c6 06EE900A 		vmov	s13, r0
 877:SYS/task_manager/task_manager.c ****             }
 1148              		.loc 1 877 99 view .LVU345
 1149 00ca 07EE905A 		vmov	s15, r5	@ int
 1150 00ce F8EE677A 		vcvt.f32.u32	s15, s15
 1151 00d2 87EEA67A 		vdiv.f32	s14, s15, s13
 877:SYS/task_manager/task_manager.c ****             }
 1152              		.loc 1 877 56 view .LVU346
 1153 00d6 BCEEC77A 		vcvt.u32.f32	s14, s14
 877:SYS/task_manager/task_manager.c ****             }
 1154              		.loc 1 877 54 view .LVU347
 1155 00da 84ED0B7A 		vstr.32	s14, [r4, #44]	@ int
 1156 00de 9EE7     		b	.L72
 1157              	.L77:
 1158              		.align	2
 1159              	.L76:
 1160 00e0 00000000 		.word	.LANCHOR11
 1161 00e4 00000000 		.word	.LANCHOR6
 1162 00e8 0000C842 		.word	1120403456
 1163              		.cfi_endproc
 1164              	.LFE161:
 1166              		.section	.text.Task_Caller,"ax",%progbits
 1167              		.align	1
 1168              		.global	Task_Caller
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1172              		.fpu fpv4-sp-d16
 1174              	Task_Caller:
 1175              	.LFB164:
 884:SYS/task_manager/task_manager.c ****         }
 885:SYS/task_manager/task_manager.c ****     }
 886:SYS/task_manager/task_manager.c **** }
 887:SYS/task_manager/task_manager.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 69


 888:SYS/task_manager/task_manager.c **** uint32_t Task_Get_IdleUS(void)
 889:SYS/task_manager/task_manager.c **** {
 890:SYS/task_manager/task_manager.c ****     return TaskSys_Idle_US;
 891:SYS/task_manager/task_manager.c **** }
 892:SYS/task_manager/task_manager.c **** 
 893:SYS/task_manager/task_manager.c **** float Task_Get_IdleOcupy(void)
 894:SYS/task_manager/task_manager.c **** {
 895:SYS/task_manager/task_manager.c ****     return TaskSys_Idle_Ocupy;
 896:SYS/task_manager/task_manager.c **** }
 897:SYS/task_manager/task_manager.c **** 
 898:SYS/task_manager/task_manager.c **** void Task_Caller(void)
 899:SYS/task_manager/task_manager.c **** {
 1176              		.loc 1 899 1 is_stmt 1 view -0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180 0000 08B5     		push	{r3, lr}
 1181              	.LCFI18:
 1182              		.cfi_def_cfa_offset 8
 1183              		.cfi_offset 3, -8
 1184              		.cfi_offset 14, -4
 900:SYS/task_manager/task_manager.c ****     static uint8_t i = 0;
 1185              		.loc 1 900 5 view .LVU349
 901:SYS/task_manager/task_manager.c **** 
 902:SYS/task_manager/task_manager.c ****     //if any task in any group is under ready state
 903:SYS/task_manager/task_manager.c ****     if (NxtRunTsk_Ptr != NULL)
 1186              		.loc 1 903 5 view .LVU350
 1187              		.loc 1 903 23 is_stmt 0 view .LVU351
 1188 0002 094B     		ldr	r3, .L84
 1189 0004 1868     		ldr	r0, [r3]
 1190              		.loc 1 903 8 view .LVU352
 1191 0006 00B9     		cbnz	r0, .L82
 904:SYS/task_manager/task_manager.c ****     {
 905:SYS/task_manager/task_manager.c ****         i++;
 906:SYS/task_manager/task_manager.c ****         if (i == TskCrt_RegList.num)
 907:SYS/task_manager/task_manager.c ****         {
 908:SYS/task_manager/task_manager.c ****             traverse_start = true;
 909:SYS/task_manager/task_manager.c ****         }
 910:SYS/task_manager/task_manager.c **** 
 911:SYS/task_manager/task_manager.c ****         //execute task function in function matrix
 912:SYS/task_manager/task_manager.c ****         Task_Exec(NxtRunTsk_Ptr);
 913:SYS/task_manager/task_manager.c ****     }
 914:SYS/task_manager/task_manager.c **** }
 1192              		.loc 1 914 1 view .LVU353
 1193 0008 08BD     		pop	{r3, pc}
 1194              	.L82:
 905:SYS/task_manager/task_manager.c ****         if (i == TskCrt_RegList.num)
 1195              		.loc 1 905 9 is_stmt 1 view .LVU354
 905:SYS/task_manager/task_manager.c ****         if (i == TskCrt_RegList.num)
 1196              		.loc 1 905 10 is_stmt 0 view .LVU355
 1197 000a 084A     		ldr	r2, .L84+4
 1198 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1199 000e 0133     		adds	r3, r3, #1
 1200 0010 DBB2     		uxtb	r3, r3
 1201 0012 1370     		strb	r3, [r2]
 906:SYS/task_manager/task_manager.c ****         {
 1202              		.loc 1 906 9 is_stmt 1 view .LVU356
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 70


 906:SYS/task_manager/task_manager.c ****         {
 1203              		.loc 1 906 32 is_stmt 0 view .LVU357
 1204 0014 064A     		ldr	r2, .L84+8
 1205 0016 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 906:SYS/task_manager/task_manager.c ****         {
 1206              		.loc 1 906 12 view .LVU358
 1207 0018 9342     		cmp	r3, r2
 1208 001a 01D0     		beq	.L83
 1209              	.L80:
 912:SYS/task_manager/task_manager.c ****     }
 1210              		.loc 1 912 9 is_stmt 1 view .LVU359
 1211 001c FFF7FEFF 		bl	Task_Exec
 1212              	.LVL73:
 1213              	.L83:
 908:SYS/task_manager/task_manager.c ****         }
 1214              		.loc 1 908 13 view .LVU360
 908:SYS/task_manager/task_manager.c ****         }
 1215              		.loc 1 908 28 is_stmt 0 view .LVU361
 1216 0020 044B     		ldr	r3, .L84+12
 1217 0022 0122     		movs	r2, #1
 1218 0024 1A70     		strb	r2, [r3]
 1219 0026 F9E7     		b	.L80
 1220              	.L85:
 1221              		.align	2
 1222              	.L84:
 1223 0028 00000000 		.word	.LANCHOR11
 1224 002c 00000000 		.word	.LANCHOR12
 1225 0030 00000000 		.word	.LANCHOR5
 1226 0034 00000000 		.word	.LANCHOR13
 1227              		.cfi_endproc
 1228              	.LFE164:
 1230              		.section	.text.Task_CrtList_TraversePoll_callback,"ax",%progbits
 1231              		.align	1
 1232              		.syntax unified
 1233              		.thumb
 1234              		.thumb_func
 1235              		.fpu fpv4-sp-d16
 1237              	Task_CrtList_TraversePoll_callback:
 1238              	.LVL74:
 1239              	.LFB167:
 915:SYS/task_manager/task_manager.c **** 
 916:SYS/task_manager/task_manager.c **** void TaskSys_Set_State(TaskSys_State state)
 917:SYS/task_manager/task_manager.c **** {
 918:SYS/task_manager/task_manager.c ****     TskSys_state = state;
 919:SYS/task_manager/task_manager.c **** }
 920:SYS/task_manager/task_manager.c **** 
 921:SYS/task_manager/task_manager.c **** TaskSys_State TaskSys_Get_State(void)
 922:SYS/task_manager/task_manager.c **** {
 923:SYS/task_manager/task_manager.c ****     return TskSys_state;
 924:SYS/task_manager/task_manager.c **** }
 925:SYS/task_manager/task_manager.c **** 
 926:SYS/task_manager/task_manager.c **** static void Task_CrtList_TraversePoll_callback(item_obj *item, void *data, void *arg)
 927:SYS/task_manager/task_manager.c **** {
 1240              		.loc 1 927 1 is_stmt 1 view -0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 71


 928:SYS/task_manager/task_manager.c ****     if (data != NULL)
 1244              		.loc 1 928 5 view .LVU363
 1245              		.loc 1 928 8 is_stmt 0 view .LVU364
 1246 0000 A9B1     		cbz	r1, .L89
 927:SYS/task_manager/task_manager.c ****     if (data != NULL)
 1247              		.loc 1 927 1 view .LVU365
 1248 0002 10B5     		push	{r4, lr}
 1249              	.LCFI19:
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 4, -8
 1252              		.cfi_offset 14, -4
 1253 0004 0C46     		mov	r4, r1
 929:SYS/task_manager/task_manager.c ****     {
 930:SYS/task_manager/task_manager.c ****         //get current highest priority task handler AKA NxtRunTsk_Ptr
 931:SYS/task_manager/task_manager.c **** 
 932:SYS/task_manager/task_manager.c ****         if ((TskSys_state == TaskSys_Start) &&
 1254              		.loc 1 932 9 is_stmt 1 view .LVU366
 1255              		.loc 1 932 27 is_stmt 0 view .LVU367
 1256 0006 0A4B     		ldr	r3, .L93
 1257 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1258 000a DBB2     		uxtb	r3, r3
 1259              		.loc 1 932 12 view .LVU368
 1260 000c 022B     		cmp	r3, #2
 1261 000e 00D0     		beq	.L92
 1262              	.LVL75:
 1263              	.L86:
 933:SYS/task_manager/task_manager.c ****             (((Task *)data)->Exec_status.State == Task_Stop) &&
 934:SYS/task_manager/task_manager.c ****             (!RuntimeObj_CompareWithCurrent(((Task *)data)->Exec_status.Exec_Time)))
 935:SYS/task_manager/task_manager.c ****         {
 936:SYS/task_manager/task_manager.c ****             Task_SetReady((Task *)data);
 937:SYS/task_manager/task_manager.c ****         }
 938:SYS/task_manager/task_manager.c ****     }
 939:SYS/task_manager/task_manager.c **** }
 1264              		.loc 1 939 1 view .LVU369
 1265 0010 10BD     		pop	{r4, pc}
 1266              	.LVL76:
 1267              	.L92:
 933:SYS/task_manager/task_manager.c ****             (((Task *)data)->Exec_status.State == Task_Stop) &&
 1268              		.loc 1 933 41 discriminator 1 view .LVU370
 1269 0012 91F84830 		ldrb	r3, [r1, #72]	@ zero_extendqisi2
 932:SYS/task_manager/task_manager.c ****             (((Task *)data)->Exec_status.State == Task_Stop) &&
 1270              		.loc 1 932 45 discriminator 1 view .LVU371
 1271 0016 022B     		cmp	r3, #2
 1272 0018 FAD1     		bne	.L86
 934:SYS/task_manager/task_manager.c ****         {
 1273              		.loc 1 934 15 view .LVU372
 1274 001a 486A     		ldr	r0, [r1, #36]
 1275              	.LVL77:
 934:SYS/task_manager/task_manager.c ****         {
 1276              		.loc 1 934 15 view .LVU373
 1277 001c 896A     		ldr	r1, [r1, #40]
 1278              	.LVL78:
 934:SYS/task_manager/task_manager.c ****         {
 1279              		.loc 1 934 15 view .LVU374
 1280 001e FFF7FEFF 		bl	RuntimeObj_CompareWithCurrent
 1281              	.LVL79:
 933:SYS/task_manager/task_manager.c ****             (((Task *)data)->Exec_status.State == Task_Stop) &&
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 72


 1282              		.loc 1 933 62 view .LVU375
 1283 0022 0028     		cmp	r0, #0
 1284 0024 F4D1     		bne	.L86
 936:SYS/task_manager/task_manager.c ****         }
 1285              		.loc 1 936 13 is_stmt 1 view .LVU376
 1286 0026 2046     		mov	r0, r4
 1287 0028 FFF7FEFF 		bl	Task_SetReady
 1288              	.LVL80:
 1289              		.loc 1 939 1 is_stmt 0 view .LVU377
 1290 002c F0E7     		b	.L86
 1291              	.LVL81:
 1292              	.L89:
 1293              	.LCFI20:
 1294              		.cfi_def_cfa_offset 0
 1295              		.cfi_restore 4
 1296              		.cfi_restore 14
 1297              		.loc 1 939 1 view .LVU378
 1298 002e 7047     		bx	lr
 1299              	.L94:
 1300              		.align	2
 1301              	.L93:
 1302 0030 00000000 		.word	.LANCHOR7
 1303              		.cfi_endproc
 1304              	.LFE167:
 1306              		.section	.text.Task_Resume_FromBlock,"ax",%progbits
 1307              		.align	1
 1308              		.global	Task_Resume_FromBlock
 1309              		.syntax unified
 1310              		.thumb
 1311              		.thumb_func
 1312              		.fpu fpv4-sp-d16
 1314              	Task_Resume_FromBlock:
 1315              	.LVL82:
 1316              	.LFB131:
 204:SYS/task_manager/task_manager.c ****     Task_ClearBlock(tsk);
 1317              		.loc 1 204 1 is_stmt 1 view -0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 204:SYS/task_manager/task_manager.c ****     Task_ClearBlock(tsk);
 1321              		.loc 1 204 1 is_stmt 0 view .LVU380
 1322 0000 10B5     		push	{r4, lr}
 1323              	.LCFI21:
 1324              		.cfi_def_cfa_offset 8
 1325              		.cfi_offset 4, -8
 1326              		.cfi_offset 14, -4
 1327 0002 0446     		mov	r4, r0
 205:SYS/task_manager/task_manager.c ****     Task_SetReady(tsk);
 1328              		.loc 1 205 5 is_stmt 1 view .LVU381
 1329 0004 FFF7FEFF 		bl	Task_ClearBlock
 1330              	.LVL83:
 206:SYS/task_manager/task_manager.c **** 
 1331              		.loc 1 206 5 view .LVU382
 1332 0008 2046     		mov	r0, r4
 1333 000a FFF7FEFF 		bl	Task_SetReady
 1334              	.LVL84:
 208:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Top_Stk_Ptr = &tsk->TCB.Top_Stk_Ptr;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 73


 1335              		.loc 1 208 5 view .LVU383
 208:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Top_Stk_Ptr = &tsk->TCB.Top_Stk_Ptr;
 1336              		.loc 1 208 28 is_stmt 0 view .LVU384
 1337 000e 0123     		movs	r3, #1
 1338 0010 84F84830 		strb	r3, [r4, #72]
 209:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Stack = tsk->TCB.Stack;
 1339              		.loc 1 209 5 is_stmt 1 view .LVU385
 209:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Stack = tsk->TCB.Stack;
 1340              		.loc 1 209 30 is_stmt 0 view .LVU386
 1341 0014 04F15002 		add	r2, r4, #80
 209:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Stack = tsk->TCB.Stack;
 1342              		.loc 1 209 28 view .LVU387
 1343 0018 034B     		ldr	r3, .L97
 1344 001a 1A60     		str	r2, [r3]
 210:SYS/task_manager/task_manager.c ****     CurRunTsk_Ptr = tsk;
 1345              		.loc 1 210 5 is_stmt 1 view .LVU388
 210:SYS/task_manager/task_manager.c ****     CurRunTsk_Ptr = tsk;
 1346              		.loc 1 210 32 is_stmt 0 view .LVU389
 1347 001c 626D     		ldr	r2, [r4, #84]
 210:SYS/task_manager/task_manager.c ****     CurRunTsk_Ptr = tsk;
 1348              		.loc 1 210 22 view .LVU390
 1349 001e 5A60     		str	r2, [r3, #4]
 211:SYS/task_manager/task_manager.c **** }
 1350              		.loc 1 211 5 is_stmt 1 view .LVU391
 211:SYS/task_manager/task_manager.c **** }
 1351              		.loc 1 211 19 is_stmt 0 view .LVU392
 1352 0020 024B     		ldr	r3, .L97+4
 1353 0022 1C60     		str	r4, [r3]
 212:SYS/task_manager/task_manager.c **** 
 1354              		.loc 1 212 1 view .LVU393
 1355 0024 10BD     		pop	{r4, pc}
 1356              	.LVL85:
 1357              	.L98:
 212:SYS/task_manager/task_manager.c **** 
 1358              		.loc 1 212 1 view .LVU394
 1359 0026 00BF     		.align	2
 1360              	.L97:
 1361 0028 00000000 		.word	.LANCHOR14
 1362 002c 00000000 		.word	.LANCHOR6
 1363              		.cfi_endproc
 1364              	.LFE131:
 1366              		.section	.text.Task_SetBlock,"ax",%progbits
 1367              		.align	1
 1368              		.global	Task_SetBlock
 1369              		.syntax unified
 1370              		.thumb
 1371              		.thumb_func
 1372              		.fpu fpv4-sp-d16
 1374              	Task_SetBlock:
 1375              	.LVL86:
 1376              	.LFB132:
 215:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 1377              		.loc 1 215 1 is_stmt 1 view -0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 215:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 74


 1381              		.loc 1 215 1 is_stmt 0 view .LVU396
 1382 0000 10B5     		push	{r4, lr}
 1383              	.LCFI22:
 1384              		.cfi_def_cfa_offset 8
 1385              		.cfi_offset 4, -8
 1386              		.cfi_offset 14, -4
 216:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 1387              		.loc 1 216 5 is_stmt 1 view .LVU397
 216:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 1388              		.loc 1 216 22 is_stmt 0 view .LVU398
 1389 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 216:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 1390              		.loc 1 216 13 view .LVU399
 1391 0004 4FEAD30E 		lsr	lr, r3, #3
 1392              	.LVL87:
 217:SYS/task_manager/task_manager.c **** 
 1393              		.loc 1 217 5 is_stmt 1 view .LVU400
 217:SYS/task_manager/task_manager.c **** 
 1394              		.loc 1 217 13 is_stmt 0 view .LVU401
 1395 0008 03F00704 		and	r4, r3, #7
 1396              	.LVL88:
 220:SYS/task_manager/task_manager.c ****     //set current task under this group flag to block
 1397              		.loc 1 220 5 is_stmt 1 view .LVU402
 220:SYS/task_manager/task_manager.c ****     //set current task under this group flag to block
 1398              		.loc 1 220 27 is_stmt 0 view .LVU403
 1399 000c 144A     		ldr	r2, .L102
 1400 000e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 220:SYS/task_manager/task_manager.c ****     //set current task under this group flag to block
 1401              		.loc 1 220 32 view .LVU404
 1402 0010 0123     		movs	r3, #1
 1403 0012 03FA0EFC 		lsl	ip, r3, lr
 220:SYS/task_manager/task_manager.c ****     //set current task under this group flag to block
 1404              		.loc 1 220 27 view .LVU405
 1405 0016 4FFA8CFC 		sxtb	ip, ip
 1406 001a 41EA0C01 		orr	r1, r1, ip
 1407 001e C9B2     		uxtb	r1, r1
 1408 0020 1170     		strb	r1, [r2]
 222:SYS/task_manager/task_manager.c **** 
 1409              		.loc 1 222 5 is_stmt 1 view .LVU406
 222:SYS/task_manager/task_manager.c **** 
 1410              		.loc 1 222 40 is_stmt 0 view .LVU407
 1411 0022 7244     		add	r2, r2, lr
 1412 0024 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 222:SYS/task_manager/task_manager.c **** 
 1413              		.loc 1 222 45 view .LVU408
 1414 0026 A340     		lsls	r3, r3, r4
 222:SYS/task_manager/task_manager.c **** 
 1415              		.loc 1 222 40 view .LVU409
 1416 0028 5BB2     		sxtb	r3, r3
 1417 002a 1943     		orrs	r1, r1, r3
 1418 002c C9B2     		uxtb	r1, r1
 1419 002e 5170     		strb	r1, [r2, #1]
 225:SYS/task_manager/task_manager.c ****     //if no task ready then clear group reg
 1420              		.loc 1 225 5 is_stmt 1 view .LVU410
 225:SYS/task_manager/task_manager.c ****     //if no task ready then clear group reg
 1421              		.loc 1 225 40 is_stmt 0 view .LVU411
 1422 0030 0C4A     		ldr	r2, .L102+4
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 75


 1423 0032 7244     		add	r2, r2, lr
 1424 0034 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1425 0036 21EA0303 		bic	r3, r1, r3
 1426 003a 5370     		strb	r3, [r2, #1]
 227:SYS/task_manager/task_manager.c ****     {
 1427              		.loc 1 227 5 is_stmt 1 view .LVU412
 227:SYS/task_manager/task_manager.c ****     {
 1428              		.loc 1 227 39 is_stmt 0 view .LVU413
 1429 003c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 227:SYS/task_manager/task_manager.c ****     {
 1430              		.loc 1 227 8 view .LVU414
 1431 003e 2BB9     		cbnz	r3, .L100
 229:SYS/task_manager/task_manager.c ****     }
 1432              		.loc 1 229 9 is_stmt 1 view .LVU415
 229:SYS/task_manager/task_manager.c ****     }
 1433              		.loc 1 229 31 is_stmt 0 view .LVU416
 1434 0040 084A     		ldr	r2, .L102+4
 1435 0042 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1436 0044 23EA0C0C 		bic	ip, r3, ip
 1437 0048 82F800C0 		strb	ip, [r2]
 1438              	.L100:
 233:SYS/task_manager/task_manager.c **** 
 1439              		.loc 1 233 5 is_stmt 1 view .LVU417
 233:SYS/task_manager/task_manager.c **** 
 1440              		.loc 1 233 28 is_stmt 0 view .LVU418
 1441 004c 0323     		movs	r3, #3
 1442 004e 80F84830 		strb	r3, [r0, #72]
 235:SYS/task_manager/task_manager.c **** 
 1443              		.loc 1 235 5 is_stmt 1 view .LVU419
 235:SYS/task_manager/task_manager.c **** 
 1444              		.loc 1 235 19 is_stmt 0 view .LVU420
 1445 0052 0020     		movs	r0, #0
 1446              	.LVL89:
 235:SYS/task_manager/task_manager.c **** 
 1447              		.loc 1 235 19 view .LVU421
 1448 0054 044B     		ldr	r3, .L102+8
 1449 0056 1860     		str	r0, [r3]
 237:SYS/task_manager/task_manager.c **** }
 1450              		.loc 1 237 5 is_stmt 1 view .LVU422
 1451 0058 FFF7FEFF 		bl	Task_SetBASEPRI
 1452              	.LVL90:
 238:SYS/task_manager/task_manager.c **** 
 1453              		.loc 1 238 1 is_stmt 0 view .LVU423
 1454 005c 10BD     		pop	{r4, pc}
 1455              	.LVL91:
 1456              	.L103:
 238:SYS/task_manager/task_manager.c **** 
 1457              		.loc 1 238 1 view .LVU424
 1458 005e 00BF     		.align	2
 1459              	.L102:
 1460 0060 00000000 		.word	.LANCHOR1
 1461 0064 00000000 		.word	.LANCHOR0
 1462 0068 00000000 		.word	.LANCHOR6
 1463              		.cfi_endproc
 1464              	.LFE132:
 1466              		.section	.text.Task_SetPending,"ax",%progbits
 1467              		.align	1
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 76


 1468              		.global	Task_SetPending
 1469              		.syntax unified
 1470              		.thumb
 1471              		.thumb_func
 1472              		.fpu fpv4-sp-d16
 1474              	Task_SetPending:
 1475              	.LVL92:
 1476              	.LFB133:
 241:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 1477              		.loc 1 241 1 is_stmt 1 view -0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 0
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
 241:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 1481              		.loc 1 241 1 is_stmt 0 view .LVU426
 1482 0000 10B5     		push	{r4, lr}
 1483              	.LCFI23:
 1484              		.cfi_def_cfa_offset 8
 1485              		.cfi_offset 4, -8
 1486              		.cfi_offset 14, -4
 242:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 1487              		.loc 1 242 5 is_stmt 1 view .LVU427
 242:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 1488              		.loc 1 242 22 is_stmt 0 view .LVU428
 1489 0002 90F800C0 		ldrb	ip, [r0]	@ zero_extendqisi2
 242:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 1490              		.loc 1 242 13 view .LVU429
 1491 0006 4FEADC02 		lsr	r2, ip, #3
 1492              	.LVL93:
 243:SYS/task_manager/task_manager.c **** 
 1493              		.loc 1 243 5 is_stmt 1 view .LVU430
 243:SYS/task_manager/task_manager.c **** 
 1494              		.loc 1 243 13 is_stmt 0 view .LVU431
 1495 000a 0CF0070E 		and	lr, ip, #7
 1496              	.LVL94:
 246:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 1497              		.loc 1 246 5 is_stmt 1 view .LVU432
 246:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 1498              		.loc 1 246 27 is_stmt 0 view .LVU433
 1499 000e 0A4B     		ldr	r3, .L106
 1500 0010 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 246:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 1501              		.loc 1 246 32 view .LVU434
 1502 0012 4FF0010C 		mov	ip, #1
 1503 0016 0CFA02F4 		lsl	r4, ip, r2
 246:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 1504              		.loc 1 246 27 view .LVU435
 1505 001a 2143     		orrs	r1, r1, r4
 1506 001c C9B2     		uxtb	r1, r1
 1507 001e 1970     		strb	r1, [r3]
 248:SYS/task_manager/task_manager.c **** 
 1508              		.loc 1 248 5 is_stmt 1 view .LVU436
 248:SYS/task_manager/task_manager.c **** 
 1509              		.loc 1 248 40 is_stmt 0 view .LVU437
 1510 0020 1344     		add	r3, r3, r2
 1511 0022 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1512              	.LVL95:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 77


 248:SYS/task_manager/task_manager.c **** 
 1513              		.loc 1 248 45 view .LVU438
 1514 0024 0CFA0EFC 		lsl	ip, ip, lr
 248:SYS/task_manager/task_manager.c **** 
 1515              		.loc 1 248 40 view .LVU439
 1516 0028 42EA0C02 		orr	r2, r2, ip
 1517 002c D2B2     		uxtb	r2, r2
 1518 002e 5A70     		strb	r2, [r3, #1]
 251:SYS/task_manager/task_manager.c **** }
 1519              		.loc 1 251 5 is_stmt 1 view .LVU440
 251:SYS/task_manager/task_manager.c **** }
 1520              		.loc 1 251 28 is_stmt 0 view .LVU441
 1521 0030 0423     		movs	r3, #4
 1522 0032 80F84830 		strb	r3, [r0, #72]
 252:SYS/task_manager/task_manager.c **** 
 1523              		.loc 1 252 1 view .LVU442
 1524 0036 10BD     		pop	{r4, pc}
 1525              	.L107:
 1526              		.align	2
 1527              	.L106:
 1528 0038 00000000 		.word	.LANCHOR2
 1529              		.cfi_endproc
 1530              	.LFE133:
 1532              		.section	.text.Task_SwitchStack,"ax",%progbits
 1533              		.align	1
 1534              		.global	Task_SwitchStack
 1535              		.syntax unified
 1536              		.thumb
 1537              		.thumb_func
 1538              		.fpu fpv4-sp-d16
 1540              	Task_SwitchStack:
 1541              	.LFB134:
 255:SYS/task_manager/task_manager.c ****     CurTsk_TCB = NxtTsk_TCB;
 1542              		.loc 1 255 1 is_stmt 1 view -0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
 1546              		@ link register save eliminated.
 256:SYS/task_manager/task_manager.c **** }
 1547              		.loc 1 256 5 view .LVU444
 256:SYS/task_manager/task_manager.c **** }
 1548              		.loc 1 256 16 is_stmt 0 view .LVU445
 1549 0000 034B     		ldr	r3, .L109
 1550 0002 044A     		ldr	r2, .L109+4
 1551 0004 92E80300 		ldm	r2, {r0, r1}
 1552 0008 83E80300 		stm	r3, {r0, r1}
 257:SYS/task_manager/task_manager.c **** 
 1553              		.loc 1 257 1 view .LVU446
 1554 000c 7047     		bx	lr
 1555              	.L110:
 1556 000e 00BF     		.align	2
 1557              	.L109:
 1558 0010 00000000 		.word	.LANCHOR15
 1559 0014 00000000 		.word	.LANCHOR14
 1560              		.cfi_endproc
 1561              	.LFE134:
 1563              		.section	.text.Task_Get_HighestRank_PndTask,"ax",%progbits
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 78


 1564              		.align	1
 1565              		.global	Task_Get_HighestRank_PndTask
 1566              		.syntax unified
 1567              		.thumb
 1568              		.thumb_func
 1569              		.fpu fpv4-sp-d16
 1571              	Task_Get_HighestRank_PndTask:
 1572              	.LFB135:
 260:SYS/task_manager/task_manager.c ****     uint8_t grp_id;
 1573              		.loc 1 260 1 is_stmt 1 view -0
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 0
 1576              		@ frame_needed = 0, uses_anonymous_args = 0
 261:SYS/task_manager/task_manager.c ****     uint8_t tsk_id;
 1577              		.loc 1 261 5 view .LVU448
 262:SYS/task_manager/task_manager.c **** 
 1578              		.loc 1 262 5 view .LVU449
 264:SYS/task_manager/task_manager.c ****     {
 1579              		.loc 1 264 5 view .LVU450
 264:SYS/task_manager/task_manager.c ****     {
 1580              		.loc 1 264 26 is_stmt 0 view .LVU451
 1581 0000 144B     		ldr	r3, .L119
 1582 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 264:SYS/task_manager/task_manager.c ****     {
 1583              		.loc 1 264 8 view .LVU452
 1584 0004 1BB3     		cbz	r3, .L113
 267:SYS/task_manager/task_manager.c ****         //find task in group
 1585              		.loc 1 267 9 is_stmt 1 view .LVU453
 267:SYS/task_manager/task_manager.c ****         //find task in group
 1586              		.loc 1 267 46 is_stmt 0 view .LVU454
 1587 0006 134B     		ldr	r3, .L119
 1588 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1589 000a D2B2     		uxtb	r2, r2
 267:SYS/task_manager/task_manager.c ****         //find task in group
 1590              		.loc 1 267 16 view .LVU455
 1591 000c 1249     		ldr	r1, .L119+4
 1592 000e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 269:SYS/task_manager/task_manager.c ****     }
 1593              		.loc 1 269 9 is_stmt 1 view .LVU456
 269:SYS/task_manager/task_manager.c ****     }
 1594              		.loc 1 269 59 is_stmt 0 view .LVU457
 1595 0010 1344     		add	r3, r3, r2
 1596 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1597 0014 DBB2     		uxtb	r3, r3
 269:SYS/task_manager/task_manager.c ****     }
 1598              		.loc 1 269 16 view .LVU458
 1599 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 274:SYS/task_manager/task_manager.c ****     {
 1600              		.loc 1 274 5 is_stmt 1 view .LVU459
 274:SYS/task_manager/task_manager.c ****     {
 1601              		.loc 1 274 25 is_stmt 0 view .LVU460
 1602 0018 03EBC200 		add	r0, r3, r2, lsl #3
 1603 001c 0F49     		ldr	r1, .L119+8
 1604 001e 51F82000 		ldr	r0, [r1, r0, lsl #2]
 274:SYS/task_manager/task_manager.c ****     {
 1605              		.loc 1 274 8 view .LVU461
 1606 0022 00B1     		cbz	r0, .L118
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 79


 284:SYS/task_manager/task_manager.c **** 
 1607              		.loc 1 284 1 view .LVU462
 1608 0024 7047     		bx	lr
 1609              	.L118:
 260:SYS/task_manager/task_manager.c ****     uint8_t grp_id;
 1610              		.loc 1 260 1 view .LVU463
 1611 0026 10B5     		push	{r4, lr}
 1612              	.LCFI24:
 1613              		.cfi_def_cfa_offset 8
 1614              		.cfi_offset 4, -8
 1615              		.cfi_offset 14, -4
 280:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 1616              		.loc 1 280 9 is_stmt 1 view .LVU464
 280:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 1617              		.loc 1 280 31 is_stmt 0 view .LVU465
 1618 0028 0A49     		ldr	r1, .L119
 1619 002a 91F800E0 		ldrb	lr, [r1]	@ zero_extendqisi2
 280:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 1620              		.loc 1 280 38 view .LVU466
 1621 002e 4FF0010C 		mov	ip, #1
 1622 0032 0CFA02F4 		lsl	r4, ip, r2
 280:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 1623              		.loc 1 280 31 view .LVU467
 1624 0036 2EEA040E 		bic	lr, lr, r4
 1625 003a 81F800E0 		strb	lr, [r1]
 281:SYS/task_manager/task_manager.c ****         return NULL;
 1626              		.loc 1 281 9 is_stmt 1 view .LVU468
 281:SYS/task_manager/task_manager.c ****         return NULL;
 1627              		.loc 1 281 44 is_stmt 0 view .LVU469
 1628 003e 0A44     		add	r2, r2, r1
 1629 0040 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 281:SYS/task_manager/task_manager.c ****         return NULL;
 1630              		.loc 1 281 51 view .LVU470
 1631 0042 0CFA03F3 		lsl	r3, ip, r3
 281:SYS/task_manager/task_manager.c ****         return NULL;
 1632              		.loc 1 281 44 view .LVU471
 1633 0046 21EA0303 		bic	r3, r1, r3
 1634 004a 5370     		strb	r3, [r2, #1]
 282:SYS/task_manager/task_manager.c ****     }
 1635              		.loc 1 282 9 is_stmt 1 view .LVU472
 284:SYS/task_manager/task_manager.c **** 
 1636              		.loc 1 284 1 is_stmt 0 view .LVU473
 1637 004c 10BD     		pop	{r4, pc}
 1638              	.L113:
 1639              	.LCFI25:
 1640              		.cfi_def_cfa_offset 0
 1641              		.cfi_restore 4
 1642              		.cfi_restore 14
 272:SYS/task_manager/task_manager.c **** 
 1643              		.loc 1 272 16 view .LVU474
 1644 004e 0020     		movs	r0, #0
 1645 0050 7047     		bx	lr
 1646              	.L120:
 1647 0052 00BF     		.align	2
 1648              	.L119:
 1649 0054 00000000 		.word	.LANCHOR2
 1650 0058 00000000 		.word	.LANCHOR16
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 80


 1651 005c 00000000 		.word	.LANCHOR4
 1652              		.cfi_endproc
 1653              	.LFE135:
 1655              		.section	.text.Task_SaveCurProc,"ax",%progbits
 1656              		.align	1
 1657              		.global	Task_SaveCurProc
 1658              		.syntax unified
 1659              		.thumb
 1660              		.thumb_func
 1661              		.fpu fpv4-sp-d16
 1663              	Task_SaveCurProc:
 1664              	.LFB140:
 337:SYS/task_manager/task_manager.c ****     __ASM("MRS    R0, PSP");
 1665              		.loc 1 337 1 is_stmt 1 view -0
 1666              		.cfi_startproc
 1667              		@ Naked Function: prologue and epilogue provided by programmer.
 1668              		@ args = 0, pretend = 0, frame = 0
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 338:SYS/task_manager/task_manager.c ****     __ASM("LDR	  R3, CurrentTCBConst_Tmp3");
 1670              		.loc 1 338 5 view .LVU476
 1671              		.syntax unified
 1672              	@ 338 "SYS/task_manager/task_manager.c" 1
 1673 0000 EFF30980 		MRS    R0, PSP
 1674              	@ 0 "" 2
 339:SYS/task_manager/task_manager.c ****     __ASM("LDR    R2, [R3]");
 1675              		.loc 1 339 5 view .LVU477
 1676              	@ 339 "SYS/task_manager/task_manager.c" 1
 1677 0004 DFF81C30 		LDR	  R3, CurrentTCBConst_Tmp3
 1678              	@ 0 "" 2
 340:SYS/task_manager/task_manager.c **** 
 1679              		.loc 1 340 5 view .LVU478
 1680              	@ 340 "SYS/task_manager/task_manager.c" 1
 1681 0008 1A68     		LDR    R2, [R3]
 1682              	@ 0 "" 2
 342:SYS/task_manager/task_manager.c **** 
 1683              		.loc 1 342 5 view .LVU479
 1684              	@ 342 "SYS/task_manager/task_manager.c" 1
 1685 000a BFF36F8F 		ISB
 1686              	@ 0 "" 2
 344:SYS/task_manager/task_manager.c ****     __ASM("STR      R0, [R2]");
 1687              		.loc 1 344 5 view .LVU480
 1688              	@ 344 "SYS/task_manager/task_manager.c" 1
 1689 000e 20E9F04F 		STMDB    R0!, {R4-R11, R14}
 1690              	@ 0 "" 2
 345:SYS/task_manager/task_manager.c **** 
 1691              		.loc 1 345 5 view .LVU481
 1692              	@ 345 "SYS/task_manager/task_manager.c" 1
 1693 0012 1060     		STR      R0, [R2]
 1694              	@ 0 "" 2
 348:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 1695              		.loc 1 348 5 view .LVU482
 1696              	@ 348 "SYS/task_manager/task_manager.c" 1
 1697 0014 1EF0100F 		TST      R14, #0x10
 1698              	@ 0 "" 2
 349:SYS/task_manager/task_manager.c ****     __ASM("VSTMDBEQ R0!, {s16-s31}");
 1699              		.loc 1 349 5 view .LVU483
 1700              	@ 349 "SYS/task_manager/task_manager.c" 1
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 81


 1701 0018 08BF     		IT       EQ
 1702              	@ 0 "" 2
 350:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 1703              		.loc 1 350 5 view .LVU484
 1704              	@ 350 "SYS/task_manager/task_manager.c" 1
 1705 001a 20ED108A 		VSTMDBEQ R0!, {s16-s31}
 1706              	@ 0 "" 2
 353:SYS/task_manager/task_manager.c ****     __ASM("BX       R14");
 1707              		.loc 1 353 5 view .LVU485
 1708              	@ 353 "SYS/task_manager/task_manager.c" 1
 1709 001e BFF36F8F 		ISB
 1710              	@ 0 "" 2
 354:SYS/task_manager/task_manager.c **** 
 1711              		.loc 1 354 5 view .LVU486
 1712              	@ 354 "SYS/task_manager/task_manager.c" 1
 1713 0022 7047     		BX       R14
 1714              	@ 0 "" 2
 356:SYS/task_manager/task_manager.c **** }
 1715              		.loc 1 356 5 view .LVU487
 1716              	@ 356 "SYS/task_manager/task_manager.c" 1
 1717 0024 00000000 		CurrentTCBConst_Tmp3: .word CurTsk_TCB
 1718              	@ 0 "" 2
 357:SYS/task_manager/task_manager.c **** 
 1719              		.loc 1 357 1 is_stmt 0 view .LVU488
 1720              		.thumb
 1721              		.syntax unified
 1722              		.cfi_endproc
 1723              	.LFE140:
 1725              		.section	.text.Task_Load,"ax",%progbits
 1726              		.align	1
 1727              		.global	Task_Load
 1728              		.syntax unified
 1729              		.thumb
 1730              		.thumb_func
 1731              		.fpu fpv4-sp-d16
 1733              	Task_Load:
 1734              	.LFB141:
 360:SYS/task_manager/task_manager.c ****     __ASM("LDR	  R3, =CurTsk_TCB");
 1735              		.loc 1 360 1 is_stmt 1 view -0
 1736              		.cfi_startproc
 1737              		@ Naked Function: prologue and epilogue provided by programmer.
 1738              		@ args = 0, pretend = 0, frame = 0
 1739              		@ frame_needed = 0, uses_anonymous_args = 0
 361:SYS/task_manager/task_manager.c ****     __ASM("LDR    R1, [R3]");
 1740              		.loc 1 361 5 view .LVU490
 1741              		.syntax unified
 1742              	@ 361 "SYS/task_manager/task_manager.c" 1
 1743 0000 074B     		LDR	  R3, =CurTsk_TCB
 1744              	@ 0 "" 2
 362:SYS/task_manager/task_manager.c ****     __ASM("LDR    R0, [R1]");
 1745              		.loc 1 362 5 view .LVU491
 1746              	@ 362 "SYS/task_manager/task_manager.c" 1
 1747 0002 1968     		LDR    R1, [R3]
 1748              	@ 0 "" 2
 363:SYS/task_manager/task_manager.c **** 
 1749              		.loc 1 363 5 view .LVU492
 1750              	@ 363 "SYS/task_manager/task_manager.c" 1
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 82


 1751 0004 0868     		LDR    R0, [R1]
 1752              	@ 0 "" 2
 365:SYS/task_manager/task_manager.c **** 
 1753              		.loc 1 365 5 view .LVU493
 1754              	@ 365 "SYS/task_manager/task_manager.c" 1
 1755 0006 B0E8F04F 		LDMIA  R0!, {R4-R11, R14}
 1756              	@ 0 "" 2
 368:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 1757              		.loc 1 368 5 view .LVU494
 1758              	@ 368 "SYS/task_manager/task_manager.c" 1
 1759 000a 1EF0100F 		TST      R14, #0x10
 1760              	@ 0 "" 2
 369:SYS/task_manager/task_manager.c ****     __ASM("VLDMIAEQ R0!, {s16-s31}");
 1761              		.loc 1 369 5 view .LVU495
 1762              	@ 369 "SYS/task_manager/task_manager.c" 1
 1763 000e 08BF     		IT       EQ
 1764              	@ 0 "" 2
 370:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 1765              		.loc 1 370 5 view .LVU496
 1766              	@ 370 "SYS/task_manager/task_manager.c" 1
 1767 0010 B0EC108A 		VLDMIAEQ R0!, {s16-s31}
 1768              	@ 0 "" 2
 373:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 1769              		.loc 1 373 5 view .LVU497
 1770              	@ 373 "SYS/task_manager/task_manager.c" 1
 1771 0014 80F30988 		MSR    PSP, R0
 1772              	@ 0 "" 2
 374:SYS/task_manager/task_manager.c ****     //__ASM("MOV    R0, #240");
 1773              		.loc 1 374 5 view .LVU498
 1774              	@ 374 "SYS/task_manager/task_manager.c" 1
 1775 0018 BFF36F8F 		ISB
 1776              	@ 0 "" 2
 377:SYS/task_manager/task_manager.c ****     __ASM(".ALIGN 4");
 1777              		.loc 1 377 5 view .LVU499
 1778              	@ 377 "SYS/task_manager/task_manager.c" 1
 1779 001c 7047     		BX     R14
 1780              	@ 0 "" 2
 378:SYS/task_manager/task_manager.c **** }
 1781              		.loc 1 378 5 view .LVU500
 1782              	@ 378 "SYS/task_manager/task_manager.c" 1
 1783 001e 00BF     		.ALIGN 4
 1784              	@ 0 "" 2
 379:SYS/task_manager/task_manager.c **** 
 1785              		.loc 1 379 1 is_stmt 0 view .LVU501
 1786              		.thumb
 1787              		.syntax unified
 1788              		.cfi_endproc
 1789              	.LFE141:
 1791              		.section	.text.Load_FirstTask,"ax",%progbits
 1792              		.align	1
 1793              		.global	Load_FirstTask
 1794              		.syntax unified
 1795              		.thumb
 1796              		.thumb_func
 1797              		.fpu fpv4-sp-d16
 1799              	Load_FirstTask:
 1800              	.LFB142:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 83


 382:SYS/task_manager/task_manager.c ****     Task_Load();
 1801              		.loc 1 382 1 is_stmt 1 view -0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 0
 1804              		@ frame_needed = 0, uses_anonymous_args = 0
 1805 0000 08B5     		push	{r3, lr}
 1806              	.LCFI26:
 1807              		.cfi_def_cfa_offset 8
 1808              		.cfi_offset 3, -8
 1809              		.cfi_offset 14, -4
 383:SYS/task_manager/task_manager.c **** }
 1810              		.loc 1 383 5 view .LVU503
 1811 0002 FFF7FEFF 		bl	Task_Load
 1812              	.LVL96:
 384:SYS/task_manager/task_manager.c **** 
 1813              		.loc 1 384 1 is_stmt 0 view .LVU504
 1814 0006 08BD     		pop	{r3, pc}
 1815              		.cfi_endproc
 1816              	.LFE142:
 1818              		.section	.text.Task_SwitchContext,"ax",%progbits
 1819              		.align	1
 1820              		.global	Task_SwitchContext
 1821              		.syntax unified
 1822              		.thumb
 1823              		.thumb_func
 1824              		.fpu fpv4-sp-d16
 1826              	Task_SwitchContext:
 1827              	.LFB143:
 387:SYS/task_manager/task_manager.c ****     __ASM("MRS      R0, PSP");
 1828              		.loc 1 387 1 is_stmt 1 view -0
 1829              		.cfi_startproc
 1830              		@ Naked Function: prologue and epilogue provided by programmer.
 1831              		@ args = 0, pretend = 0, frame = 0
 1832              		@ frame_needed = 0, uses_anonymous_args = 0
 388:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 1833              		.loc 1 388 5 view .LVU506
 1834              		.syntax unified
 1835              	@ 388 "SYS/task_manager/task_manager.c" 1
 1836 0000 EFF30980 		MRS      R0, PSP
 1837              	@ 0 "" 2
 389:SYS/task_manager/task_manager.c **** 
 1838              		.loc 1 389 5 view .LVU507
 1839              	@ 389 "SYS/task_manager/task_manager.c" 1
 1840 0004 BFF36F8F 		ISB
 1841              	@ 0 "" 2
 391:SYS/task_manager/task_manager.c ****     __ASM("LDR      R2, [R3]");
 1842              		.loc 1 391 5 view .LVU508
 1843              	@ 391 "SYS/task_manager/task_manager.c" 1
 1844 0008 DFF85030 		LDR      R3, CurrentTCBConst_Tmp
 1845              	@ 0 "" 2
 392:SYS/task_manager/task_manager.c **** 
 1846              		.loc 1 392 5 view .LVU509
 1847              	@ 392 "SYS/task_manager/task_manager.c" 1
 1848 000c 1A68     		LDR      R2, [R3]
 1849              	@ 0 "" 2
 395:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 1850              		.loc 1 395 5 view .LVU510
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 84


 1851              	@ 395 "SYS/task_manager/task_manager.c" 1
 1852 000e 1EF0100F 		TST      R14, #0x10
 1853              	@ 0 "" 2
 396:SYS/task_manager/task_manager.c ****     __ASM("VSTMDBEQ R0!, {s16-s31}");
 1854              		.loc 1 396 5 view .LVU511
 1855              	@ 396 "SYS/task_manager/task_manager.c" 1
 1856 0012 08BF     		IT       EQ
 1857              	@ 0 "" 2
 397:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 1858              		.loc 1 397 5 view .LVU512
 1859              	@ 397 "SYS/task_manager/task_manager.c" 1
 1860 0014 20ED108A 		VSTMDBEQ R0!, {s16-s31}
 1861              	@ 0 "" 2
 400:SYS/task_manager/task_manager.c ****     __ASM("STR      R0, [R2]");
 1862              		.loc 1 400 5 view .LVU513
 1863              	@ 400 "SYS/task_manager/task_manager.c" 1
 1864 0018 20E9F04F 		STMDB    R0!, {R4-R11, R14}
 1865              	@ 0 "" 2
 401:SYS/task_manager/task_manager.c **** 
 1866              		.loc 1 401 5 view .LVU514
 1867              	@ 401 "SYS/task_manager/task_manager.c" 1
 1868 001c 1060     		STR      R0, [R2]
 1869              	@ 0 "" 2
 403:SYS/task_manager/task_manager.c ****     __ASM("MOV      R0, %0" ::"i"(0x50));
 1870              		.loc 1 403 5 view .LVU515
 1871              	@ 403 "SYS/task_manager/task_manager.c" 1
 1872 001e 2DE90900 		STMDB    SP!, {R0, R3}
 1873              	@ 0 "" 2
 404:SYS/task_manager/task_manager.c ****     __ASM("MSR      BASEPRI, R0");
 1874              		.loc 1 404 5 view .LVU516
 1875              	@ 404 "SYS/task_manager/task_manager.c" 1
 1876 0022 4FF05000 		MOV      R0, #80
 1877              	@ 0 "" 2
 405:SYS/task_manager/task_manager.c **** 
 1878              		.loc 1 405 5 view .LVU517
 1879              	@ 405 "SYS/task_manager/task_manager.c" 1
 1880 0026 80F31188 		MSR      BASEPRI, R0
 1881              	@ 0 "" 2
 407:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 1882              		.loc 1 407 5 view .LVU518
 1883              	@ 407 "SYS/task_manager/task_manager.c" 1
 1884 002a BFF34F8F 		DSB
 1885              	@ 0 "" 2
 408:SYS/task_manager/task_manager.c **** 
 1886              		.loc 1 408 5 view .LVU519
 1887              	@ 408 "SYS/task_manager/task_manager.c" 1
 1888 002e BFF36F8F 		ISB
 1889              	@ 0 "" 2
 410:SYS/task_manager/task_manager.c **** 
 1890              		.loc 1 410 5 view .LVU520
 1891              	@ 410 "SYS/task_manager/task_manager.c" 1
 1892 0032 FFF7FEFF 		BL       Task_SwitchStack
 1893              	@ 0 "" 2
 412:SYS/task_manager/task_manager.c ****     __ASM("MSR      BASEPRI, R0");
 1894              		.loc 1 412 5 view .LVU521
 1895              	@ 412 "SYS/task_manager/task_manager.c" 1
 1896 0036 4FF00000 		MOV      R0, #0
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 85


 1897              	@ 0 "" 2
 413:SYS/task_manager/task_manager.c ****     __ASM("LDMIA    SP!, {R0, R3}");
 1898              		.loc 1 413 5 view .LVU522
 1899              	@ 413 "SYS/task_manager/task_manager.c" 1
 1900 003a 80F31188 		MSR      BASEPRI, R0
 1901              	@ 0 "" 2
 414:SYS/task_manager/task_manager.c **** 
 1902              		.loc 1 414 5 view .LVU523
 1903              	@ 414 "SYS/task_manager/task_manager.c" 1
 1904 003e 09BC     		LDMIA    SP!, {R0, R3}
 1905              	@ 0 "" 2
 416:SYS/task_manager/task_manager.c ****     __ASM("LDR      R0, [R1]");
 1906              		.loc 1 416 5 view .LVU524
 1907              	@ 416 "SYS/task_manager/task_manager.c" 1
 1908 0040 1968     		LDR      R1, [R3]
 1909              	@ 0 "" 2
 417:SYS/task_manager/task_manager.c **** 
 1910              		.loc 1 417 5 view .LVU525
 1911              	@ 417 "SYS/task_manager/task_manager.c" 1
 1912 0042 0868     		LDR      R0, [R1]
 1913              	@ 0 "" 2
 419:SYS/task_manager/task_manager.c **** 
 1914              		.loc 1 419 5 view .LVU526
 1915              	@ 419 "SYS/task_manager/task_manager.c" 1
 1916 0044 B0E8F04F 		LDMIA    R0!, {R4-R11, R14}
 1917              	@ 0 "" 2
 422:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 1918              		.loc 1 422 5 view .LVU527
 1919              	@ 422 "SYS/task_manager/task_manager.c" 1
 1920 0048 1EF0100F 		TST      R14, #0x10
 1921              	@ 0 "" 2
 423:SYS/task_manager/task_manager.c ****     __ASM("VLDMIAEQ R0!, {s16-s31}");
 1922              		.loc 1 423 5 view .LVU528
 1923              	@ 423 "SYS/task_manager/task_manager.c" 1
 1924 004c 08BF     		IT       EQ
 1925              	@ 0 "" 2
 424:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 1926              		.loc 1 424 5 view .LVU529
 1927              	@ 424 "SYS/task_manager/task_manager.c" 1
 1928 004e B0EC108A 		VLDMIAEQ R0!, {s16-s31}
 1929              	@ 0 "" 2
 427:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 1930              		.loc 1 427 5 view .LVU530
 1931              	@ 427 "SYS/task_manager/task_manager.c" 1
 1932 0052 80F30988 		MSR      PSP,R0
 1933              	@ 0 "" 2
 428:SYS/task_manager/task_manager.c ****     //__ASM("MOV      R0, #240");
 1934              		.loc 1 428 5 view .LVU531
 1935              	@ 428 "SYS/task_manager/task_manager.c" 1
 1936 0056 BFF36F8F 		ISB
 1937              	@ 0 "" 2
 431:SYS/task_manager/task_manager.c **** 
 1938              		.loc 1 431 5 view .LVU532
 1939              	@ 431 "SYS/task_manager/task_manager.c" 1
 1940 005a 7047     		BX       R14
 1941              	@ 0 "" 2
 433:SYS/task_manager/task_manager.c ****     __ASM(".ALIGN 4");
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 86


 1942              		.loc 1 433 5 view .LVU533
 1943              	@ 433 "SYS/task_manager/task_manager.c" 1
 1944 005c 00000000 		CurrentTCBConst_Tmp: .word CurTsk_TCB
 1945              	@ 0 "" 2
 434:SYS/task_manager/task_manager.c **** }
 1946              		.loc 1 434 5 view .LVU534
 1947              	@ 434 "SYS/task_manager/task_manager.c" 1
 1948              		.ALIGN 4
 1949              	@ 0 "" 2
 435:SYS/task_manager/task_manager.c **** 
 1950              		.loc 1 435 1 is_stmt 0 view .LVU535
 1951              		.thumb
 1952              		.syntax unified
 1953              		.cfi_endproc
 1954              	.LFE143:
 1956              		.section	.text.Task_Get_HighestRank_RdyTask,"ax",%progbits
 1957              		.align	1
 1958              		.global	Task_Get_HighestRank_RdyTask
 1959              		.syntax unified
 1960              		.thumb
 1961              		.thumb_func
 1962              		.fpu fpv4-sp-d16
 1964              	Task_Get_HighestRank_RdyTask:
 1965              	.LFB149:
 522:SYS/task_manager/task_manager.c ****     uint8_t grp_id = 0;
 1966              		.loc 1 522 1 is_stmt 1 view -0
 1967              		.cfi_startproc
 1968              		@ args = 0, pretend = 0, frame = 0
 1969              		@ frame_needed = 0, uses_anonymous_args = 0
 523:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = 0;
 1970              		.loc 1 523 5 view .LVU537
 1971              	.LVL97:
 524:SYS/task_manager/task_manager.c **** 
 1972              		.loc 1 524 5 view .LVU538
 526:SYS/task_manager/task_manager.c ****     {
 1973              		.loc 1 526 5 view .LVU539
 526:SYS/task_manager/task_manager.c ****     {
 1974              		.loc 1 526 26 is_stmt 0 view .LVU540
 1975 0000 144B     		ldr	r3, .L134
 1976 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 526:SYS/task_manager/task_manager.c ****     {
 1977              		.loc 1 526 8 view .LVU541
 1978 0004 1BB3     		cbz	r3, .L128
 529:SYS/task_manager/task_manager.c ****         //find task in group
 1979              		.loc 1 529 9 is_stmt 1 view .LVU542
 529:SYS/task_manager/task_manager.c ****         //find task in group
 1980              		.loc 1 529 46 is_stmt 0 view .LVU543
 1981 0006 134B     		ldr	r3, .L134
 1982 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1983 000a D2B2     		uxtb	r2, r2
 529:SYS/task_manager/task_manager.c ****         //find task in group
 1984              		.loc 1 529 16 view .LVU544
 1985 000c 1249     		ldr	r1, .L134+4
 1986 000e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1987              	.LVL98:
 531:SYS/task_manager/task_manager.c ****     }
 1988              		.loc 1 531 9 is_stmt 1 view .LVU545
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 87


 531:SYS/task_manager/task_manager.c ****     }
 1989              		.loc 1 531 59 is_stmt 0 view .LVU546
 1990 0010 1344     		add	r3, r3, r2
 1991 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1992 0014 DBB2     		uxtb	r3, r3
 531:SYS/task_manager/task_manager.c ****     }
 1993              		.loc 1 531 16 view .LVU547
 1994 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1995              	.LVL99:
 536:SYS/task_manager/task_manager.c ****     {
 1996              		.loc 1 536 5 is_stmt 1 view .LVU548
 536:SYS/task_manager/task_manager.c ****     {
 1997              		.loc 1 536 25 is_stmt 0 view .LVU549
 1998 0018 03EBC200 		add	r0, r3, r2, lsl #3
 1999 001c 0F49     		ldr	r1, .L134+8
 2000 001e 51F82000 		ldr	r0, [r1, r0, lsl #2]
 536:SYS/task_manager/task_manager.c ****     {
 2001              		.loc 1 536 8 view .LVU550
 2002 0022 00B1     		cbz	r0, .L133
 546:SYS/task_manager/task_manager.c **** 
 2003              		.loc 1 546 1 view .LVU551
 2004 0024 7047     		bx	lr
 2005              	.L133:
 522:SYS/task_manager/task_manager.c ****     uint8_t grp_id = 0;
 2006              		.loc 1 522 1 view .LVU552
 2007 0026 10B5     		push	{r4, lr}
 2008              	.LCFI27:
 2009              		.cfi_def_cfa_offset 8
 2010              		.cfi_offset 4, -8
 2011              		.cfi_offset 14, -4
 542:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 2012              		.loc 1 542 9 is_stmt 1 view .LVU553
 542:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 2013              		.loc 1 542 31 is_stmt 0 view .LVU554
 2014 0028 0A49     		ldr	r1, .L134
 2015 002a 91F800E0 		ldrb	lr, [r1]	@ zero_extendqisi2
 542:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 2016              		.loc 1 542 38 view .LVU555
 2017 002e 4FF0010C 		mov	ip, #1
 2018 0032 0CFA02F4 		lsl	r4, ip, r2
 542:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 2019              		.loc 1 542 31 view .LVU556
 2020 0036 2EEA040E 		bic	lr, lr, r4
 2021 003a 81F800E0 		strb	lr, [r1]
 543:SYS/task_manager/task_manager.c ****         return NULL;
 2022              		.loc 1 543 9 is_stmt 1 view .LVU557
 543:SYS/task_manager/task_manager.c ****         return NULL;
 2023              		.loc 1 543 44 is_stmt 0 view .LVU558
 2024 003e 0A44     		add	r2, r2, r1
 2025 0040 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 543:SYS/task_manager/task_manager.c ****         return NULL;
 2026              		.loc 1 543 51 view .LVU559
 2027 0042 0CFA03F3 		lsl	r3, ip, r3
 543:SYS/task_manager/task_manager.c ****         return NULL;
 2028              		.loc 1 543 44 view .LVU560
 2029 0046 21EA0303 		bic	r3, r1, r3
 2030 004a 5370     		strb	r3, [r2, #1]
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 88


 544:SYS/task_manager/task_manager.c ****     }
 2031              		.loc 1 544 9 is_stmt 1 view .LVU561
 546:SYS/task_manager/task_manager.c **** 
 2032              		.loc 1 546 1 is_stmt 0 view .LVU562
 2033 004c 10BD     		pop	{r4, pc}
 2034              	.LVL100:
 2035              	.L128:
 2036              	.LCFI28:
 2037              		.cfi_def_cfa_offset 0
 2038              		.cfi_restore 4
 2039              		.cfi_restore 14
 534:SYS/task_manager/task_manager.c **** 
 2040              		.loc 1 534 16 view .LVU563
 2041 004e 0020     		movs	r0, #0
 2042 0050 7047     		bx	lr
 2043              	.L135:
 2044 0052 00BF     		.align	2
 2045              	.L134:
 2046 0054 00000000 		.word	.LANCHOR0
 2047 0058 00000000 		.word	.LANCHOR16
 2048 005c 00000000 		.word	.LANCHOR4
 2049              		.cfi_endproc
 2050              	.LFE149:
 2052              		.section	.text.Task_SetNextTask_Ptr,"ax",%progbits
 2053              		.align	1
 2054              		.global	Task_SetNextTask_Ptr
 2055              		.syntax unified
 2056              		.thumb
 2057              		.thumb_func
 2058              		.fpu fpv4-sp-d16
 2060              	Task_SetNextTask_Ptr:
 2061              	.LVL101:
 2062              	.LFB150:
 549:SYS/task_manager/task_manager.c ****     if (nxt != NULL)
 2063              		.loc 1 549 1 is_stmt 1 view -0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 0
 2066              		@ frame_needed = 0, uses_anonymous_args = 0
 2067              		@ link register save eliminated.
 550:SYS/task_manager/task_manager.c ****     {
 2068              		.loc 1 550 5 view .LVU565
 550:SYS/task_manager/task_manager.c ****     {
 2069              		.loc 1 550 8 is_stmt 0 view .LVU566
 2070 0000 38B1     		cbz	r0, .L136
 552:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
 2071              		.loc 1 552 9 is_stmt 1 view .LVU567
 552:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
 2072              		.loc 1 552 23 is_stmt 0 view .LVU568
 2073 0002 044A     		ldr	r2, .L138
 2074 0004 1060     		str	r0, [r2]
 553:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2075              		.loc 1 553 9 is_stmt 1 view .LVU569
 553:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2076              		.loc 1 553 34 is_stmt 0 view .LVU570
 2077 0006 00F15001 		add	r1, r0, #80
 553:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2078              		.loc 1 553 32 view .LVU571
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 89


 2079 000a 034A     		ldr	r2, .L138+4
 2080 000c 1160     		str	r1, [r2]
 554:SYS/task_manager/task_manager.c ****     }
 2081              		.loc 1 554 9 is_stmt 1 view .LVU572
 554:SYS/task_manager/task_manager.c ****     }
 2082              		.loc 1 554 46 is_stmt 0 view .LVU573
 2083 000e 436D     		ldr	r3, [r0, #84]
 554:SYS/task_manager/task_manager.c ****     }
 2084              		.loc 1 554 26 view .LVU574
 2085 0010 5360     		str	r3, [r2, #4]
 2086              	.L136:
 556:SYS/task_manager/task_manager.c **** 
 2087              		.loc 1 556 1 view .LVU575
 2088 0012 7047     		bx	lr
 2089              	.L139:
 2090              		.align	2
 2091              	.L138:
 2092 0014 00000000 		.word	.LANCHOR11
 2093 0018 00000000 		.word	.LANCHOR14
 2094              		.cfi_endproc
 2095              	.LFE150:
 2097              		.section	.text.Task_TriggerPendSV,"ax",%progbits
 2098              		.align	1
 2099              		.global	Task_TriggerPendSV
 2100              		.syntax unified
 2101              		.thumb
 2102              		.thumb_func
 2103              		.fpu fpv4-sp-d16
 2105              	Task_TriggerPendSV:
 2106              	.LFB152:
 584:SYS/task_manager/task_manager.c ****     __ASM(".equ NVIC_INT_CTRL, 0xE000ED04");
 2107              		.loc 1 584 1 is_stmt 1 view -0
 2108              		.cfi_startproc
 2109              		@ Naked Function: prologue and epilogue provided by programmer.
 2110              		@ args = 0, pretend = 0, frame = 0
 2111              		@ frame_needed = 0, uses_anonymous_args = 0
 585:SYS/task_manager/task_manager.c ****     __ASM(".equ NVIC_PENDSVSET, 0x10000000");
 2112              		.loc 1 585 5 view .LVU577
 2113              		.syntax unified
 2114              	@ 585 "SYS/task_manager/task_manager.c" 1
 2115              		.equ NVIC_INT_CTRL, 0xE000ED04
 2116              	@ 0 "" 2
 586:SYS/task_manager/task_manager.c **** 
 2117              		.loc 1 586 5 view .LVU578
 2118              	@ 586 "SYS/task_manager/task_manager.c" 1
 2119              		.equ NVIC_PENDSVSET, 0x10000000
 2120              	@ 0 "" 2
 588:SYS/task_manager/task_manager.c ****     __ASM("LDR      R1, =NVIC_PENDSVSET");
 2121              		.loc 1 588 5 view .LVU579
 2122              	@ 588 "SYS/task_manager/task_manager.c" 1
 2123 0000 0248     		LDR      R0, =NVIC_INT_CTRL
 2124              	@ 0 "" 2
 589:SYS/task_manager/task_manager.c ****     __ASM("STR      R1, [R0]");
 2125              		.loc 1 589 5 view .LVU580
 2126              	@ 589 "SYS/task_manager/task_manager.c" 1
 2127 0002 4FF08051 		LDR      R1, =NVIC_PENDSVSET
 2128              	@ 0 "" 2
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 90


 590:SYS/task_manager/task_manager.c ****     __ASM("BX       LR");
 2129              		.loc 1 590 5 view .LVU581
 2130              	@ 590 "SYS/task_manager/task_manager.c" 1
 2131 0006 0160     		STR      R1, [R0]
 2132              	@ 0 "" 2
 591:SYS/task_manager/task_manager.c **** }
 2133              		.loc 1 591 5 view .LVU582
 2134              	@ 591 "SYS/task_manager/task_manager.c" 1
 2135 0008 7047     		BX       LR
 2136              	@ 0 "" 2
 592:SYS/task_manager/task_manager.c **** 
 2137              		.loc 1 592 1 is_stmt 0 view .LVU583
 2138              		.thumb
 2139              		.syntax unified
 2140              		.cfi_endproc
 2141              	.LFE152:
 2143 000a 0000     		.section	.text.Task_Scheduler,"ax",%progbits
 2144              		.align	1
 2145              		.global	Task_Scheduler
 2146              		.syntax unified
 2147              		.thumb
 2148              		.thumb_func
 2149              		.fpu fpv4-sp-d16
 2151              	Task_Scheduler:
 2152              	.LFB168:
 940:SYS/task_manager/task_manager.c **** 
 941:SYS/task_manager/task_manager.c **** void Task_Scheduler(void)
 942:SYS/task_manager/task_manager.c **** {
 2153              		.loc 1 942 1 is_stmt 1 view -0
 2154              		.cfi_startproc
 2155              		@ args = 0, pretend = 0, frame = 0
 2156              		@ frame_needed = 0, uses_anonymous_args = 0
 943:SYS/task_manager/task_manager.c ****     static uint8_t grp = 0;
 2157              		.loc 1 943 5 view .LVU585
 944:SYS/task_manager/task_manager.c ****     static uint8_t tsk = 0;
 2158              		.loc 1 944 5 view .LVU586
 945:SYS/task_manager/task_manager.c **** 
 946:SYS/task_manager/task_manager.c ****     if (TskSys_state != TaskSys_Start)
 2159              		.loc 1 946 5 view .LVU587
 2160              		.loc 1 946 22 is_stmt 0 view .LVU588
 2161 0000 524B     		ldr	r3, .L164
 2162 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2163 0004 DBB2     		uxtb	r3, r3
 2164              		.loc 1 946 8 view .LVU589
 2165 0006 022B     		cmp	r3, #2
 2166 0008 40F09F80 		bne	.L155
 942:SYS/task_manager/task_manager.c ****     static uint8_t grp = 0;
 2167              		.loc 1 942 1 view .LVU590
 2168 000c 70B5     		push	{r4, r5, r6, lr}
 2169              	.LCFI29:
 2170              		.cfi_def_cfa_offset 16
 2171              		.cfi_offset 4, -16
 2172              		.cfi_offset 5, -12
 2173              		.cfi_offset 6, -8
 2174              		.cfi_offset 14, -4
 947:SYS/task_manager/task_manager.c ****         return;
 948:SYS/task_manager/task_manager.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 91


 949:SYS/task_manager/task_manager.c ****     if (traverse_start)
 2175              		.loc 1 949 5 is_stmt 1 view .LVU591
 2176              		.loc 1 949 9 is_stmt 0 view .LVU592
 2177 000e 504B     		ldr	r3, .L164+4
 2178 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2179              		.loc 1 949 8 view .LVU593
 2180 0012 BBB9     		cbnz	r3, .L158
 2181              	.L143:
 950:SYS/task_manager/task_manager.c ****         List_traverse(&TskCrt_RegList.list, Task_CrtList_TraversePoll_callback, NULL, sub_callback)
 951:SYS/task_manager/task_manager.c **** 
 952:SYS/task_manager/task_manager.c ****     NxtRunTsk_Ptr = Task_Get_HighestRank_RdyTask();
 2182              		.loc 1 952 5 is_stmt 1 view .LVU594
 2183              		.loc 1 952 21 is_stmt 0 view .LVU595
 2184 0014 FFF7FEFF 		bl	Task_Get_HighestRank_RdyTask
 2185              	.LVL102:
 2186              		.loc 1 952 19 view .LVU596
 2187 0018 4E4B     		ldr	r3, .L164+8
 2188 001a 1860     		str	r0, [r3]
 953:SYS/task_manager/task_manager.c **** 
 954:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 955:SYS/task_manager/task_manager.c **** 
 956:SYS/task_manager/task_manager.c ****     PndHstTsk_Ptr = Task_Get_HighestRank_PndTask();
 2189              		.loc 1 956 5 is_stmt 1 view .LVU597
 2190              		.loc 1 956 21 is_stmt 0 view .LVU598
 2191 001c FFF7FEFF 		bl	Task_Get_HighestRank_PndTask
 2192              	.LVL103:
 2193 0020 0446     		mov	r4, r0
 2194              		.loc 1 956 19 view .LVU599
 2195 0022 4D4B     		ldr	r3, .L164+12
 2196 0024 1860     		str	r0, [r3]
 957:SYS/task_manager/task_manager.c **** 
 958:SYS/task_manager/task_manager.c ****     if (CurRunTsk_Ptr == NULL)
 2197              		.loc 1 958 5 is_stmt 1 view .LVU600
 2198              		.loc 1 958 23 is_stmt 0 view .LVU601
 2199 0026 4D4B     		ldr	r3, .L164+16
 2200 0028 1D68     		ldr	r5, [r3]
 2201              		.loc 1 958 8 view .LVU602
 2202 002a 95B1     		cbz	r5, .L159
 959:SYS/task_manager/task_manager.c ****     {
 960:SYS/task_manager/task_manager.c ****         if (PndHstTsk_Ptr == NULL)
 961:SYS/task_manager/task_manager.c ****         {
 962:SYS/task_manager/task_manager.c ****             //Current Run task Pointer is Null also no task In pending mode
 963:SYS/task_manager/task_manager.c ****             //set CurRunTsk_Ptr to NxtRunTsk_Ptr
 964:SYS/task_manager/task_manager.c ****             if (NxtRunTsk_Ptr != NULL)
 965:SYS/task_manager/task_manager.c ****             {
 966:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
 967:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 968:SYS/task_manager/task_manager.c **** 
 969:SYS/task_manager/task_manager.c ****                 Task_TriggerPendSV();
 970:SYS/task_manager/task_manager.c ****                 return;
 971:SYS/task_manager/task_manager.c ****             }
 972:SYS/task_manager/task_manager.c ****             else
 973:SYS/task_manager/task_manager.c ****             {
 974:SYS/task_manager/task_manager.c ****                 //doing idle function
 975:SYS/task_manager/task_manager.c ****                 Task_Idle();
 976:SYS/task_manager/task_manager.c ****             }
 977:SYS/task_manager/task_manager.c ****         }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 92


 978:SYS/task_manager/task_manager.c ****         else
 979:SYS/task_manager/task_manager.c ****         {
 980:SYS/task_manager/task_manager.c ****             if (NxtRunTsk_Ptr != NULL)
 981:SYS/task_manager/task_manager.c ****             {
 982:SYS/task_manager/task_manager.c ****                 //if has NxtRunTsk_Ptr is not NULL also have task in pending state
 983:SYS/task_manager/task_manager.c ****                 //then get the highest priority task in pend list
 984:SYS/task_manager/task_manager.c ****                 //compare with NxtRunTsk_Ptr
 985:SYS/task_manager/task_manager.c ****                 if (((NxtRunTsk_Ptr != PndHstTsk_Ptr) &&
 986:SYS/task_manager/task_manager.c ****                      (Task_PriorityCompare(NxtRunTsk_Ptr, PndHstTsk_Ptr) == PndHstTsk_Ptr)) ||
 987:SYS/task_manager/task_manager.c ****                     (NxtRunTsk_Ptr == PndHstTsk_Ptr))
 988:SYS/task_manager/task_manager.c ****                 {
 989:SYS/task_manager/task_manager.c ****                     Task_ClearPending(PndHstTsk_Ptr);
 990:SYS/task_manager/task_manager.c ****                     PndHstTsk_Ptr->Exec_status.State = Task_Stop;
 991:SYS/task_manager/task_manager.c ****                     NxtRunTsk_Ptr = PndHstTsk_Ptr;
 992:SYS/task_manager/task_manager.c ****                 }
 993:SYS/task_manager/task_manager.c ****             }
 994:SYS/task_manager/task_manager.c ****             else
 995:SYS/task_manager/task_manager.c ****             {
 996:SYS/task_manager/task_manager.c ****                 //if NxtRunTsk_Ptr is NULL
 997:SYS/task_manager/task_manager.c ****                 //then set NxtRunTsk_Ptr PndHstTsk_Ptr
 998:SYS/task_manager/task_manager.c ****                 NxtRunTsk_Ptr = PndHstTsk_Ptr;
 999:SYS/task_manager/task_manager.c ****             }
1000:SYS/task_manager/task_manager.c **** 
1001:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
1002:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
1003:SYS/task_manager/task_manager.c **** 
1004:SYS/task_manager/task_manager.c ****             Task_TriggerPendSV();
1005:SYS/task_manager/task_manager.c ****             return;
1006:SYS/task_manager/task_manager.c ****         }
1007:SYS/task_manager/task_manager.c ****     }
1008:SYS/task_manager/task_manager.c ****     else
1009:SYS/task_manager/task_manager.c ****     {
1010:SYS/task_manager/task_manager.c ****         if (CurRunTsk_Ptr != NxtRunTsk_Ptr)
 2203              		.loc 1 1010 9 is_stmt 1 view .LVU603
 2204              		.loc 1 1010 27 is_stmt 0 view .LVU604
 2205 002c 494B     		ldr	r3, .L164+8
 2206 002e 1E68     		ldr	r6, [r3]
 2207              		.loc 1 1010 12 view .LVU605
 2208 0030 B542     		cmp	r5, r6
 2209 0032 6BD0     		beq	.L151
1011:SYS/task_manager/task_manager.c ****         {
1012:SYS/task_manager/task_manager.c ****             if ((NxtRunTsk_Ptr != NULL) && (Task_PriorityCompare(CurRunTsk_Ptr, NxtRunTsk_Ptr) == N
 2210              		.loc 1 1012 13 is_stmt 1 view .LVU606
 2211              		.loc 1 1012 16 is_stmt 0 view .LVU607
 2212 0034 2EB1     		cbz	r6, .L141
 2213              		.loc 1 1012 45 discriminator 1 view .LVU608
 2214 0036 3146     		mov	r1, r6
 2215 0038 2846     		mov	r0, r5
 2216 003a FFF7FEFF 		bl	Task_PriorityCompare
 2217              	.LVL104:
 2218              		.loc 1 1012 41 discriminator 1 view .LVU609
 2219 003e 8642     		cmp	r6, r0
 2220 0040 3DD0     		beq	.L160
 2221              	.L141:
1013:SYS/task_manager/task_manager.c ****             {
1014:SYS/task_manager/task_manager.c ****                 //if NxtRunTsk_Ptr group priority is higher then CurRunTsk_Ptr also PndHstTsk_Ptr
1015:SYS/task_manager/task_manager.c ****                 //set current run task as pending state first
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 93


1016:SYS/task_manager/task_manager.c ****                 Task_ClearReady(CurRunTsk_Ptr);
1017:SYS/task_manager/task_manager.c ****                 Task_SetPending(CurRunTsk_Ptr);
1018:SYS/task_manager/task_manager.c **** 
1019:SYS/task_manager/task_manager.c ****                 //get the highset priority task in pending list
1020:SYS/task_manager/task_manager.c ****                 //if PndHstTsk_Ptr is not NULL
1021:SYS/task_manager/task_manager.c ****                 //then compare the priority between the NxtRunTsk_Ptr and PndHstTsk_Ptr
1022:SYS/task_manager/task_manager.c ****                 if (PndHstTsk_Ptr != NULL)
1023:SYS/task_manager/task_manager.c ****                 {
1024:SYS/task_manager/task_manager.c ****                     if (Task_PriorityCompare(PndHstTsk_Ptr, NxtRunTsk_Ptr) == PndHstTsk_Ptr)
1025:SYS/task_manager/task_manager.c ****                     {
1026:SYS/task_manager/task_manager.c ****                         Task_ClearPending(PndHstTsk_Ptr);
1027:SYS/task_manager/task_manager.c ****                         PndHstTsk_Ptr->Exec_status.State = Task_Stop;
1028:SYS/task_manager/task_manager.c ****                         NxtRunTsk_Ptr = PndHstTsk_Ptr;
1029:SYS/task_manager/task_manager.c ****                     }
1030:SYS/task_manager/task_manager.c ****                 }
1031:SYS/task_manager/task_manager.c **** 
1032:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
1033:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
1034:SYS/task_manager/task_manager.c **** 
1035:SYS/task_manager/task_manager.c ****                 Task_TriggerPendSV();
1036:SYS/task_manager/task_manager.c ****                 return;
1037:SYS/task_manager/task_manager.c ****             }
1038:SYS/task_manager/task_manager.c ****         }
1039:SYS/task_manager/task_manager.c ****         else
1040:SYS/task_manager/task_manager.c ****         {
1041:SYS/task_manager/task_manager.c ****             //compare with the highest priority pending task
1042:SYS/task_manager/task_manager.c ****             if ((PndHstTsk_Ptr != NULL) && (Task_PriorityCompare(CurRunTsk_Ptr, PndHstTsk_Ptr) == P
1043:SYS/task_manager/task_manager.c ****             {
1044:SYS/task_manager/task_manager.c ****                 //if PndHstTsk_Ptr group priority is higher then CurRunTsk_Ptr
1045:SYS/task_manager/task_manager.c ****                 //set current run task as pending state first
1046:SYS/task_manager/task_manager.c ****                 Task_SetPending(CurRunTsk_Ptr);
1047:SYS/task_manager/task_manager.c ****                 Task_SetReady(PndHstTsk_Ptr);
1048:SYS/task_manager/task_manager.c ****                 NxtRunTsk_Ptr = Task_Stop;
1049:SYS/task_manager/task_manager.c **** 
1050:SYS/task_manager/task_manager.c ****                 NxtRunTsk_Ptr = PndHstTsk_Ptr;
1051:SYS/task_manager/task_manager.c ****             }
1052:SYS/task_manager/task_manager.c **** 
1053:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
1054:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
1055:SYS/task_manager/task_manager.c **** 
1056:SYS/task_manager/task_manager.c ****             Task_TriggerPendSV();
1057:SYS/task_manager/task_manager.c ****             return;
1058:SYS/task_manager/task_manager.c ****         }
1059:SYS/task_manager/task_manager.c ****     }
1060:SYS/task_manager/task_manager.c **** #else
1061:SYS/task_manager/task_manager.c ****     Task_TriggerPendSV();
1062:SYS/task_manager/task_manager.c **** #endif
1063:SYS/task_manager/task_manager.c **** }
 2222              		.loc 1 1063 1 view .LVU610
 2223 0042 70BD     		pop	{r4, r5, r6, pc}
 2224              	.L158:
 950:SYS/task_manager/task_manager.c **** 
 2225              		.loc 1 950 9 is_stmt 1 view .LVU611
 2226 0044 0123     		movs	r3, #1
 2227 0046 0022     		movs	r2, #0
 2228 0048 4549     		ldr	r1, .L164+20
 2229 004a 4648     		ldr	r0, .L164+24
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 94


 2230 004c FFF7FEFF 		bl	List_traverse
 2231              	.LVL105:
 2232 0050 E0E7     		b	.L143
 2233              	.L159:
 960:SYS/task_manager/task_manager.c ****         {
 2234              		.loc 1 960 9 view .LVU612
 960:SYS/task_manager/task_manager.c ****         {
 2235              		.loc 1 960 12 is_stmt 0 view .LVU613
 2236 0052 B8B1     		cbz	r0, .L161
 980:SYS/task_manager/task_manager.c ****             {
 2237              		.loc 1 980 13 is_stmt 1 view .LVU614
 980:SYS/task_manager/task_manager.c ****             {
 2238              		.loc 1 980 31 is_stmt 0 view .LVU615
 2239 0054 3F4B     		ldr	r3, .L164+8
 2240 0056 1D68     		ldr	r5, [r3]
 980:SYS/task_manager/task_manager.c ****             {
 2241              		.loc 1 980 16 view .LVU616
 2242 0058 75B3     		cbz	r5, .L147
 985:SYS/task_manager/task_manager.c ****                      (Task_PriorityCompare(NxtRunTsk_Ptr, PndHstTsk_Ptr) == PndHstTsk_Ptr)) ||
 2243              		.loc 1 985 17 is_stmt 1 view .LVU617
 985:SYS/task_manager/task_manager.c ****                      (Task_PriorityCompare(NxtRunTsk_Ptr, PndHstTsk_Ptr) == PndHstTsk_Ptr)) ||
 2244              		.loc 1 985 20 is_stmt 0 view .LVU618
 2245 005a A842     		cmp	r0, r5
 2246 005c 05D0     		beq	.L148
 986:SYS/task_manager/task_manager.c ****                     (NxtRunTsk_Ptr == PndHstTsk_Ptr))
 2247              		.loc 1 986 23 discriminator 1 view .LVU619
 2248 005e 0146     		mov	r1, r0
 2249 0060 2846     		mov	r0, r5
 2250 0062 FFF7FEFF 		bl	Task_PriorityCompare
 2251              	.LVL106:
 985:SYS/task_manager/task_manager.c ****                      (Task_PriorityCompare(NxtRunTsk_Ptr, PndHstTsk_Ptr) == PndHstTsk_Ptr)) ||
 2252              		.loc 1 985 55 discriminator 1 view .LVU620
 2253 0066 8442     		cmp	r4, r0
 2254 0068 1BD0     		beq	.L149
 2255              	.L148:
 986:SYS/task_manager/task_manager.c ****                     (NxtRunTsk_Ptr == PndHstTsk_Ptr))
 2256              		.loc 1 986 93 view .LVU621
 2257 006a AC42     		cmp	r4, r5
 2258 006c 19D0     		beq	.L149
 2259              	.L150:
1001:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2260              		.loc 1 1001 13 is_stmt 1 view .LVU622
1001:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2261              		.loc 1 1001 52 is_stmt 0 view .LVU623
 2262 006e 394B     		ldr	r3, .L164+8
 2263 0070 1A68     		ldr	r2, [r3]
1001:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2264              		.loc 1 1001 38 view .LVU624
 2265 0072 02F15001 		add	r1, r2, #80
1001:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2266              		.loc 1 1001 36 view .LVU625
 2267 0076 3C4B     		ldr	r3, .L164+28
 2268 0078 1960     		str	r1, [r3]
1002:SYS/task_manager/task_manager.c **** 
 2269              		.loc 1 1002 13 is_stmt 1 view .LVU626
1002:SYS/task_manager/task_manager.c **** 
 2270              		.loc 1 1002 50 is_stmt 0 view .LVU627
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 95


 2271 007a 526D     		ldr	r2, [r2, #84]
1002:SYS/task_manager/task_manager.c **** 
 2272              		.loc 1 1002 30 view .LVU628
 2273 007c 5A60     		str	r2, [r3, #4]
1004:SYS/task_manager/task_manager.c ****             return;
 2274              		.loc 1 1004 13 is_stmt 1 view .LVU629
 2275 007e FFF7FEFF 		bl	Task_TriggerPendSV
 2276              	.LVL107:
1005:SYS/task_manager/task_manager.c ****         }
 2277              		.loc 1 1005 13 view .LVU630
 2278 0082 DEE7     		b	.L141
 2279              	.L161:
 964:SYS/task_manager/task_manager.c ****             {
 2280              		.loc 1 964 13 view .LVU631
 964:SYS/task_manager/task_manager.c ****             {
 2281              		.loc 1 964 31 is_stmt 0 view .LVU632
 2282 0084 334B     		ldr	r3, .L164+8
 2283 0086 1B68     		ldr	r3, [r3]
 964:SYS/task_manager/task_manager.c ****             {
 2284              		.loc 1 964 16 view .LVU633
 2285 0088 43B1     		cbz	r3, .L146
 966:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2286              		.loc 1 966 17 is_stmt 1 view .LVU634
 966:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2287              		.loc 1 966 42 is_stmt 0 view .LVU635
 2288 008a 03F15001 		add	r1, r3, #80
 966:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2289              		.loc 1 966 40 view .LVU636
 2290 008e 364A     		ldr	r2, .L164+28
 2291 0090 1160     		str	r1, [r2]
 967:SYS/task_manager/task_manager.c **** 
 2292              		.loc 1 967 17 is_stmt 1 view .LVU637
 967:SYS/task_manager/task_manager.c **** 
 2293              		.loc 1 967 54 is_stmt 0 view .LVU638
 2294 0092 5B6D     		ldr	r3, [r3, #84]
 967:SYS/task_manager/task_manager.c **** 
 2295              		.loc 1 967 34 view .LVU639
 2296 0094 5360     		str	r3, [r2, #4]
 969:SYS/task_manager/task_manager.c ****                 return;
 2297              		.loc 1 969 17 is_stmt 1 view .LVU640
 2298 0096 FFF7FEFF 		bl	Task_TriggerPendSV
 2299              	.LVL108:
 970:SYS/task_manager/task_manager.c ****             }
 2300              		.loc 1 970 17 view .LVU641
 2301 009a D2E7     		b	.L141
 2302              	.L146:
 975:SYS/task_manager/task_manager.c ****             }
 2303              		.loc 1 975 17 view .LVU642
 2304 009c FFF7FEFF 		bl	Task_Idle
 2305              	.LVL109:
 2306 00a0 CFE7     		b	.L141
 2307              	.L149:
 989:SYS/task_manager/task_manager.c ****                     PndHstTsk_Ptr->Exec_status.State = Task_Stop;
 2308              		.loc 1 989 21 view .LVU643
 2309 00a2 2046     		mov	r0, r4
 2310 00a4 FFF7FEFF 		bl	Task_ClearPending
 2311              	.LVL110:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 96


 990:SYS/task_manager/task_manager.c ****                     NxtRunTsk_Ptr = PndHstTsk_Ptr;
 2312              		.loc 1 990 21 view .LVU644
 990:SYS/task_manager/task_manager.c ****                     NxtRunTsk_Ptr = PndHstTsk_Ptr;
 2313              		.loc 1 990 34 is_stmt 0 view .LVU645
 2314 00a8 2B4B     		ldr	r3, .L164+12
 2315 00aa 1B68     		ldr	r3, [r3]
 990:SYS/task_manager/task_manager.c ****                     NxtRunTsk_Ptr = PndHstTsk_Ptr;
 2316              		.loc 1 990 54 view .LVU646
 2317 00ac 0222     		movs	r2, #2
 2318 00ae 83F84820 		strb	r2, [r3, #72]
 991:SYS/task_manager/task_manager.c ****                 }
 2319              		.loc 1 991 21 is_stmt 1 view .LVU647
 991:SYS/task_manager/task_manager.c ****                 }
 2320              		.loc 1 991 35 is_stmt 0 view .LVU648
 2321 00b2 284A     		ldr	r2, .L164+8
 2322 00b4 1360     		str	r3, [r2]
 2323 00b6 DAE7     		b	.L150
 2324              	.L147:
 998:SYS/task_manager/task_manager.c ****             }
 2325              		.loc 1 998 17 is_stmt 1 view .LVU649
 998:SYS/task_manager/task_manager.c ****             }
 2326              		.loc 1 998 31 is_stmt 0 view .LVU650
 2327 00b8 264B     		ldr	r3, .L164+8
 2328 00ba 1860     		str	r0, [r3]
 2329 00bc D7E7     		b	.L150
 2330              	.L160:
1016:SYS/task_manager/task_manager.c ****                 Task_SetPending(CurRunTsk_Ptr);
 2331              		.loc 1 1016 17 is_stmt 1 view .LVU651
 2332 00be 2846     		mov	r0, r5
 2333 00c0 FFF7FEFF 		bl	Task_ClearReady
 2334              	.LVL111:
1017:SYS/task_manager/task_manager.c **** 
 2335              		.loc 1 1017 17 view .LVU652
 2336 00c4 254B     		ldr	r3, .L164+16
 2337 00c6 1868     		ldr	r0, [r3]
 2338 00c8 FFF7FEFF 		bl	Task_SetPending
 2339              	.LVL112:
1022:SYS/task_manager/task_manager.c ****                 {
 2340              		.loc 1 1022 17 view .LVU653
1022:SYS/task_manager/task_manager.c ****                 {
 2341              		.loc 1 1022 35 is_stmt 0 view .LVU654
 2342 00cc 224B     		ldr	r3, .L164+12
 2343 00ce 1C68     		ldr	r4, [r3]
1022:SYS/task_manager/task_manager.c ****                 {
 2344              		.loc 1 1022 20 view .LVU655
 2345 00d0 34B1     		cbz	r4, .L152
1024:SYS/task_manager/task_manager.c ****                     {
 2346              		.loc 1 1024 21 is_stmt 1 view .LVU656
1024:SYS/task_manager/task_manager.c ****                     {
 2347              		.loc 1 1024 25 is_stmt 0 view .LVU657
 2348 00d2 204B     		ldr	r3, .L164+8
 2349 00d4 1968     		ldr	r1, [r3]
 2350 00d6 2046     		mov	r0, r4
 2351 00d8 FFF7FEFF 		bl	Task_PriorityCompare
 2352              	.LVL113:
1024:SYS/task_manager/task_manager.c ****                     {
 2353              		.loc 1 1024 24 view .LVU658
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 97


 2354 00dc 8442     		cmp	r4, r0
 2355 00de 0AD0     		beq	.L162
 2356              	.L152:
1032:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2357              		.loc 1 1032 17 is_stmt 1 view .LVU659
1032:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2358              		.loc 1 1032 56 is_stmt 0 view .LVU660
 2359 00e0 1C4B     		ldr	r3, .L164+8
 2360 00e2 1A68     		ldr	r2, [r3]
1032:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2361              		.loc 1 1032 42 view .LVU661
 2362 00e4 02F15001 		add	r1, r2, #80
1032:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2363              		.loc 1 1032 40 view .LVU662
 2364 00e8 1F4B     		ldr	r3, .L164+28
 2365 00ea 1960     		str	r1, [r3]
1033:SYS/task_manager/task_manager.c **** 
 2366              		.loc 1 1033 17 is_stmt 1 view .LVU663
1033:SYS/task_manager/task_manager.c **** 
 2367              		.loc 1 1033 54 is_stmt 0 view .LVU664
 2368 00ec 526D     		ldr	r2, [r2, #84]
1033:SYS/task_manager/task_manager.c **** 
 2369              		.loc 1 1033 34 view .LVU665
 2370 00ee 5A60     		str	r2, [r3, #4]
1035:SYS/task_manager/task_manager.c ****                 return;
 2371              		.loc 1 1035 17 is_stmt 1 view .LVU666
 2372 00f0 FFF7FEFF 		bl	Task_TriggerPendSV
 2373              	.LVL114:
1036:SYS/task_manager/task_manager.c ****             }
 2374              		.loc 1 1036 17 view .LVU667
 2375 00f4 A5E7     		b	.L141
 2376              	.L162:
1026:SYS/task_manager/task_manager.c ****                         PndHstTsk_Ptr->Exec_status.State = Task_Stop;
 2377              		.loc 1 1026 25 view .LVU668
 2378 00f6 2046     		mov	r0, r4
 2379 00f8 FFF7FEFF 		bl	Task_ClearPending
 2380              	.LVL115:
1027:SYS/task_manager/task_manager.c ****                         NxtRunTsk_Ptr = PndHstTsk_Ptr;
 2381              		.loc 1 1027 25 view .LVU669
1027:SYS/task_manager/task_manager.c ****                         NxtRunTsk_Ptr = PndHstTsk_Ptr;
 2382              		.loc 1 1027 38 is_stmt 0 view .LVU670
 2383 00fc 164B     		ldr	r3, .L164+12
 2384 00fe 1B68     		ldr	r3, [r3]
1027:SYS/task_manager/task_manager.c ****                         NxtRunTsk_Ptr = PndHstTsk_Ptr;
 2385              		.loc 1 1027 58 view .LVU671
 2386 0100 0222     		movs	r2, #2
 2387 0102 83F84820 		strb	r2, [r3, #72]
1028:SYS/task_manager/task_manager.c ****                     }
 2388              		.loc 1 1028 25 is_stmt 1 view .LVU672
1028:SYS/task_manager/task_manager.c ****                     }
 2389              		.loc 1 1028 39 is_stmt 0 view .LVU673
 2390 0106 134A     		ldr	r2, .L164+8
 2391 0108 1360     		str	r3, [r2]
 2392 010a E9E7     		b	.L152
 2393              	.L151:
1042:SYS/task_manager/task_manager.c ****             {
 2394              		.loc 1 1042 13 is_stmt 1 view .LVU674
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 98


1042:SYS/task_manager/task_manager.c ****             {
 2395              		.loc 1 1042 16 is_stmt 0 view .LVU675
 2396 010c 28B1     		cbz	r0, .L153
1042:SYS/task_manager/task_manager.c ****             {
 2397              		.loc 1 1042 45 discriminator 1 view .LVU676
 2398 010e 0146     		mov	r1, r0
 2399 0110 2846     		mov	r0, r5
 2400 0112 FFF7FEFF 		bl	Task_PriorityCompare
 2401              	.LVL116:
1042:SYS/task_manager/task_manager.c ****             {
 2402              		.loc 1 1042 41 discriminator 1 view .LVU677
 2403 0116 8442     		cmp	r4, r0
 2404 0118 0AD0     		beq	.L163
 2405              	.L153:
1053:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2406              		.loc 1 1053 13 is_stmt 1 view .LVU678
1053:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2407              		.loc 1 1053 52 is_stmt 0 view .LVU679
 2408 011a 0E4B     		ldr	r3, .L164+8
 2409 011c 1A68     		ldr	r2, [r3]
1053:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2410              		.loc 1 1053 38 view .LVU680
 2411 011e 02F15001 		add	r1, r2, #80
1053:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2412              		.loc 1 1053 36 view .LVU681
 2413 0122 114B     		ldr	r3, .L164+28
 2414 0124 1960     		str	r1, [r3]
1054:SYS/task_manager/task_manager.c **** 
 2415              		.loc 1 1054 13 is_stmt 1 view .LVU682
1054:SYS/task_manager/task_manager.c **** 
 2416              		.loc 1 1054 50 is_stmt 0 view .LVU683
 2417 0126 526D     		ldr	r2, [r2, #84]
1054:SYS/task_manager/task_manager.c **** 
 2418              		.loc 1 1054 30 view .LVU684
 2419 0128 5A60     		str	r2, [r3, #4]
1056:SYS/task_manager/task_manager.c ****             return;
 2420              		.loc 1 1056 13 is_stmt 1 view .LVU685
 2421 012a FFF7FEFF 		bl	Task_TriggerPendSV
 2422              	.LVL117:
1057:SYS/task_manager/task_manager.c ****         }
 2423              		.loc 1 1057 13 view .LVU686
 2424 012e 88E7     		b	.L141
 2425              	.L163:
1046:SYS/task_manager/task_manager.c ****                 Task_SetReady(PndHstTsk_Ptr);
 2426              		.loc 1 1046 17 view .LVU687
 2427 0130 2846     		mov	r0, r5
 2428 0132 FFF7FEFF 		bl	Task_SetPending
 2429              	.LVL118:
1047:SYS/task_manager/task_manager.c ****                 NxtRunTsk_Ptr = Task_Stop;
 2430              		.loc 1 1047 17 view .LVU688
 2431 0136 084C     		ldr	r4, .L164+12
 2432 0138 2068     		ldr	r0, [r4]
 2433 013a FFF7FEFF 		bl	Task_SetReady
 2434              	.LVL119:
1048:SYS/task_manager/task_manager.c **** 
 2435              		.loc 1 1048 17 view .LVU689
1048:SYS/task_manager/task_manager.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 99


 2436              		.loc 1 1048 31 is_stmt 0 view .LVU690
 2437 013e 054B     		ldr	r3, .L164+8
 2438 0140 0222     		movs	r2, #2
 2439 0142 1A60     		str	r2, [r3]
1050:SYS/task_manager/task_manager.c ****             }
 2440              		.loc 1 1050 17 is_stmt 1 view .LVU691
1050:SYS/task_manager/task_manager.c ****             }
 2441              		.loc 1 1050 31 is_stmt 0 view .LVU692
 2442 0144 2268     		ldr	r2, [r4]
 2443 0146 1A60     		str	r2, [r3]
 2444 0148 E7E7     		b	.L153
 2445              	.L155:
 2446              	.LCFI30:
 2447              		.cfi_def_cfa_offset 0
 2448              		.cfi_restore 4
 2449              		.cfi_restore 5
 2450              		.cfi_restore 6
 2451              		.cfi_restore 14
 2452 014a 7047     		bx	lr
 2453              	.L165:
 2454              		.align	2
 2455              	.L164:
 2456 014c 00000000 		.word	.LANCHOR7
 2457 0150 00000000 		.word	.LANCHOR13
 2458 0154 00000000 		.word	.LANCHOR11
 2459 0158 00000000 		.word	.LANCHOR17
 2460 015c 00000000 		.word	.LANCHOR6
 2461 0160 00000000 		.word	Task_CrtList_TraversePoll_callback
 2462 0164 04000000 		.word	.LANCHOR5+4
 2463 0168 00000000 		.word	.LANCHOR14
 2464              		.cfi_endproc
 2465              	.LFE168:
 2467              		.section	.text.Task_Force_TriggerPendSV,"ax",%progbits
 2468              		.align	1
 2469              		.global	Task_Force_TriggerPendSV
 2470              		.syntax unified
 2471              		.thumb
 2472              		.thumb_func
 2473              		.fpu fpv4-sp-d16
 2475              	Task_Force_TriggerPendSV:
 2476              	.LFB153:
 595:SYS/task_manager/task_manager.c ****     /* Barriers are normally not required but do ensure the code is completely \
 2477              		.loc 1 595 1 is_stmt 1 view -0
 2478              		.cfi_startproc
 2479              		@ args = 0, pretend = 0, frame = 0
 2480              		@ frame_needed = 0, uses_anonymous_args = 0
 2481 0000 08B5     		push	{r3, lr}
 2482              	.LCFI31:
 2483              		.cfi_def_cfa_offset 8
 2484              		.cfi_offset 3, -8
 2485              		.cfi_offset 14, -4
 598:SYS/task_manager/task_manager.c ****                        : "memory");
 2486              		.loc 1 598 5 view .LVU694
 2487              		.syntax unified
 2488              	@ 598 "SYS/task_manager/task_manager.c" 1
 2489 0002 BFF34F8F 		dsb
 2490              	@ 0 "" 2
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 100


 600:SYS/task_manager/task_manager.c ****     Task_TriggerPendSV();
 2491              		.loc 1 600 5 view .LVU695
 2492              	@ 600 "SYS/task_manager/task_manager.c" 1
 2493 0006 BFF36F8F 		isb
 2494              	@ 0 "" 2
 601:SYS/task_manager/task_manager.c **** }
 2495              		.loc 1 601 5 view .LVU696
 2496              		.thumb
 2497              		.syntax unified
 2498 000a FFF7FEFF 		bl	Task_TriggerPendSV
 2499              	.LVL120:
 602:SYS/task_manager/task_manager.c **** 
 2500              		.loc 1 602 1 is_stmt 0 view .LVU697
 2501 000e 08BD     		pop	{r3, pc}
 2502              		.cfi_endproc
 2503              	.LFE153:
 2505              		.section	.text.Task_Get_TaskNum,"ax",%progbits
 2506              		.align	1
 2507              		.global	Task_Get_TaskNum
 2508              		.syntax unified
 2509              		.thumb
 2510              		.thumb_func
 2511              		.fpu fpv4-sp-d16
 2513              	Task_Get_TaskNum:
 2514              	.LFB154:
 605:SYS/task_manager/task_manager.c ****     return TskCrt_RegList.num;
 2515              		.loc 1 605 1 is_stmt 1 view -0
 2516              		.cfi_startproc
 2517              		@ args = 0, pretend = 0, frame = 0
 2518              		@ frame_needed = 0, uses_anonymous_args = 0
 2519              		@ link register save eliminated.
 606:SYS/task_manager/task_manager.c **** }
 2520              		.loc 1 606 5 view .LVU699
 607:SYS/task_manager/task_manager.c **** 
 2521              		.loc 1 607 1 is_stmt 0 view .LVU700
 2522 0000 014B     		ldr	r3, .L169
 2523 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2524 0004 7047     		bx	lr
 2525              	.L170:
 2526 0006 00BF     		.align	2
 2527              	.L169:
 2528 0008 00000000 		.word	.LANCHOR5
 2529              		.cfi_endproc
 2530              	.LFE154:
 2532              		.global	__aeabi_ui2d
 2533              		.global	__aeabi_ddiv
 2534              		.global	__aeabi_d2uiz
 2535              		.section	.text.Task_Create,"ax",%progbits
 2536              		.align	1
 2537              		.global	Task_Create
 2538              		.syntax unified
 2539              		.thumb
 2540              		.thumb_func
 2541              		.fpu fpv4-sp-d16
 2543              	Task_Create:
 2544              	.LVL121:
 2545              	.LFB156:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 101


 654:SYS/task_manager/task_manager.c ****     Task_Handler handle;
 2546              		.loc 1 654 1 is_stmt 1 view -0
 2547              		.cfi_startproc
 2548              		@ args = 8, pretend = 0, frame = 0
 2549              		@ frame_needed = 0, uses_anonymous_args = 0
 654:SYS/task_manager/task_manager.c ****     Task_Handler handle;
 2550              		.loc 1 654 1 is_stmt 0 view .LVU702
 2551 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2552              	.LCFI32:
 2553              		.cfi_def_cfa_offset 40
 2554              		.cfi_offset 3, -40
 2555              		.cfi_offset 4, -36
 2556              		.cfi_offset 5, -32
 2557              		.cfi_offset 6, -28
 2558              		.cfi_offset 7, -24
 2559              		.cfi_offset 8, -20
 2560              		.cfi_offset 9, -16
 2561              		.cfi_offset 10, -12
 2562              		.cfi_offset 11, -8
 2563              		.cfi_offset 14, -4
 2564 0004 8146     		mov	r9, r0
 2565 0006 0E46     		mov	r6, r1
 2566 0008 1546     		mov	r5, r2
 2567 000a 1C46     		mov	r4, r3
 655:SYS/task_manager/task_manager.c ****     uint16_t task_name_len = strlen(name);
 2568              		.loc 1 655 5 is_stmt 1 view .LVU703
 656:SYS/task_manager/task_manager.c ****     uint32_t *Tsk_Ptr_tmp = NULL;
 2569              		.loc 1 656 5 view .LVU704
 657:SYS/task_manager/task_manager.c ****     static bool taskOs_InitState = false;
 2570              		.loc 1 657 5 view .LVU705
 2571              	.LVL122:
 658:SYS/task_manager/task_manager.c **** 
 2572              		.loc 1 658 5 view .LVU706
 660:SYS/task_manager/task_manager.c ****     {
 2573              		.loc 1 660 5 view .LVU707
 660:SYS/task_manager/task_manager.c ****     {
 2574              		.loc 1 660 9 is_stmt 0 view .LVU708
 2575 000c 744B     		ldr	r3, .L182+8
 2576              	.LVL123:
 660:SYS/task_manager/task_manager.c ****     {
 2577              		.loc 1 660 9 view .LVU709
 2578 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 660:SYS/task_manager/task_manager.c ****     {
 2579              		.loc 1 660 8 view .LVU710
 2580 0010 53B1     		cbz	r3, .L180
 2581              	.LVL124:
 2582              	.L172:
 667:SYS/task_manager/task_manager.c ****     {
 2583              		.loc 1 667 5 is_stmt 1 view .LVU711
 667:SYS/task_manager/task_manager.c ****     {
 2584              		.loc 1 667 24 is_stmt 0 view .LVU712
 2585 0012 04EBC503 		add	r3, r4, r5, lsl #3
 2586 0016 734A     		ldr	r2, .L182+12
 2587 0018 52F82330 		ldr	r3, [r2, r3, lsl #2]
 667:SYS/task_manager/task_manager.c ****     {
 2588              		.loc 1 667 8 view .LVU713
 2589 001c 53B1     		cbz	r3, .L181
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 102


 669:SYS/task_manager/task_manager.c ****     }
 2590              		.loc 1 669 16 view .LVU714
 2591 001e 4FF0010A 		mov	r10, #1
 2592              	.LVL125:
 2593              	.L171:
 754:SYS/task_manager/task_manager.c **** 
 2594              		.loc 1 754 1 view .LVU715
 2595 0022 5046     		mov	r0, r10
 2596 0024 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2597              	.LVL126:
 2598              	.L180:
 662:SYS/task_manager/task_manager.c ****         taskOs_InitState = true;
 2599              		.loc 1 662 9 is_stmt 1 view .LVU716
 2600 0028 FFF7FEFF 		bl	TaskSys_Init
 2601              	.LVL127:
 663:SYS/task_manager/task_manager.c ****     }
 2602              		.loc 1 663 9 view .LVU717
 663:SYS/task_manager/task_manager.c ****     }
 2603              		.loc 1 663 26 is_stmt 0 view .LVU718
 2604 002c 6C4B     		ldr	r3, .L182+8
 2605 002e 0122     		movs	r2, #1
 2606 0030 1A70     		strb	r2, [r3]
 2607 0032 EEE7     		b	.L172
 2608              	.L181:
 673:SYS/task_manager/task_manager.c **** 
 2609              		.loc 1 673 5 is_stmt 1 view .LVU719
 673:SYS/task_manager/task_manager.c **** 
 2610              		.loc 1 673 41 is_stmt 0 view .LVU720
 2611 0034 8820     		movs	r0, #136
 2612 0036 FFF7FEFF 		bl	MMU_Malloc
 2613              	.LVL128:
 2614 003a 8346     		mov	fp, r0
 673:SYS/task_manager/task_manager.c **** 
 2615              		.loc 1 673 31 view .LVU721
 2616 003c 694F     		ldr	r7, .L182+12
 2617 003e 04EBC508 		add	r8, r4, r5, lsl #3
 2618 0042 47F82800 		str	r0, [r7, r8, lsl #2]
 676:SYS/task_manager/task_manager.c **** 
 2619              		.loc 1 676 5 is_stmt 1 view .LVU722
 676:SYS/task_manager/task_manager.c **** 
 2620              		.loc 1 676 12 is_stmt 0 view .LVU723
 2621 0046 8246     		mov	r10, r0
 2622              	.LVL129:
 678:SYS/task_manager/task_manager.c **** 
 2623              		.loc 1 678 5 is_stmt 1 view .LVU724
 678:SYS/task_manager/task_manager.c **** 
 2624              		.loc 1 678 42 is_stmt 0 view .LVU725
 2625 0048 C0F80490 		str	r9, [r0, #4]
 680:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->exec_interval_us = RUNTIEM_MAX_TICK_FRQ / frq;
 2626              		.loc 1 680 5 is_stmt 1 view .LVU726
 680:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->exec_interval_us = RUNTIEM_MAX_TICK_FRQ / frq;
 2627              		.loc 1 680 20 is_stmt 0 view .LVU727
 2628 004c 57F82830 		ldr	r3, [r7, r8, lsl #2]
 680:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->exec_interval_us = RUNTIEM_MAX_TICK_FRQ / frq;
 2629              		.loc 1 680 41 view .LVU728
 2630 0050 9E60     		str	r6, [r3, #8]
 681:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_Func = func;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 103


 2631              		.loc 1 681 5 is_stmt 1 view .LVU729
 681:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_Func = func;
 2632              		.loc 1 681 72 is_stmt 0 view .LVU730
 2633 0052 3046     		mov	r0, r6
 2634              	.LVL130:
 681:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_Func = func;
 2635              		.loc 1 681 72 view .LVU731
 2636 0054 FFF7FEFF 		bl	__aeabi_ui2d
 2637              	.LVL131:
 2638 0058 0246     		mov	r2, r0
 2639 005a 0B46     		mov	r3, r1
 2640 005c 5EA1     		adr	r1, .L182
 2641 005e D1E90001 		ldrd	r0, [r1]
 2642 0062 FFF7FEFF 		bl	__aeabi_ddiv
 2643              	.LVL132:
 681:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_Func = func;
 2644              		.loc 1 681 20 view .LVU732
 2645 0066 57F82860 		ldr	r6, [r7, r8, lsl #2]
 2646              	.LVL133:
 681:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_Func = func;
 2647              		.loc 1 681 49 view .LVU733
 2648 006a FFF7FEFF 		bl	__aeabi_d2uiz
 2649              	.LVL134:
 2650 006e B081     		strh	r0, [r6, #12]	@ movhi
 682:SYS/task_manager/task_manager.c **** 
 2651              		.loc 1 682 5 is_stmt 1 view .LVU734
 682:SYS/task_manager/task_manager.c **** 
 2652              		.loc 1 682 20 is_stmt 0 view .LVU735
 2653 0070 57F82830 		ldr	r3, [r7, r8, lsl #2]
 682:SYS/task_manager/task_manager.c **** 
 2654              		.loc 1 682 42 view .LVU736
 2655 0074 0A9A     		ldr	r2, [sp, #40]
 2656 0076 1A61     		str	r2, [r3, #16]
 684:SYS/task_manager/task_manager.c **** 
 2657              		.loc 1 684 5 is_stmt 1 view .LVU737
 684:SYS/task_manager/task_manager.c **** 
 2658              		.loc 1 684 20 is_stmt 0 view .LVU738
 2659 0078 57F82820 		ldr	r2, [r7, r8, lsl #2]
 684:SYS/task_manager/task_manager.c **** 
 2660              		.loc 1 684 65 view .LVU739
 2661 007c EB00     		lsls	r3, r5, #3
 2662 007e 2343     		orrs	r3, r3, r4
 684:SYS/task_manager/task_manager.c **** 
 2663              		.loc 1 684 50 view .LVU740
 2664 0080 1370     		strb	r3, [r2]
 688:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.tsk_hdl = handle;
 2665              		.loc 1 688 5 is_stmt 1 view .LVU741
 688:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.tsk_hdl = handle;
 2666              		.loc 1 688 20 is_stmt 0 view .LVU742
 2667 0082 57F82820 		ldr	r2, [r7, r8, lsl #2]
 688:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.tsk_hdl = handle;
 2668              		.loc 1 688 52 view .LVU743
 2669 0086 0023     		movs	r3, #0
 2670 0088 82F85C30 		strb	r3, [r2, #92]
 689:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.time_unit = 0;
 2671              		.loc 1 689 5 is_stmt 1 view .LVU744
 689:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.time_unit = 0;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 104


 2672              		.loc 1 689 20 is_stmt 0 view .LVU745
 2673 008c 57F82820 		ldr	r2, [r7, r8, lsl #2]
 689:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.time_unit = 0;
 2674              		.loc 1 689 51 view .LVU746
 2675 0090 C2F860B0 		str	fp, [r2, #96]
 690:SYS/task_manager/task_manager.c **** 
 2676              		.loc 1 690 5 is_stmt 1 view .LVU747
 690:SYS/task_manager/task_manager.c **** 
 2677              		.loc 1 690 20 is_stmt 0 view .LVU748
 2678 0094 57F82820 		ldr	r2, [r7, r8, lsl #2]
 690:SYS/task_manager/task_manager.c **** 
 2679              		.loc 1 690 53 view .LVU749
 2680 0098 5366     		str	r3, [r2, #100]
 693:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->TCB.Stack = (uint32_t *)MMU_Malloc(StackDepth * sizeof(uint32_t));
 2681              		.loc 1 693 5 is_stmt 1 view .LVU750
 693:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->TCB.Stack = (uint32_t *)MMU_Malloc(StackDepth * sizeof(uint32_t));
 2682              		.loc 1 693 20 is_stmt 0 view .LVU751
 2683 009a 57F82830 		ldr	r3, [r7, r8, lsl #2]
 693:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->TCB.Stack = (uint32_t *)MMU_Malloc(StackDepth * sizeof(uint32_t));
 2684              		.loc 1 693 44 view .LVU752
 2685 009e 0B9A     		ldr	r2, [sp, #44]
 2686 00a0 DA64     		str	r2, [r3, #76]
 694:SYS/task_manager/task_manager.c **** 
 2687              		.loc 1 694 5 is_stmt 1 view .LVU753
 694:SYS/task_manager/task_manager.c **** 
 2688              		.loc 1 694 20 is_stmt 0 view .LVU754
 2689 00a2 57F82860 		ldr	r6, [r7, r8, lsl #2]
 694:SYS/task_manager/task_manager.c **** 
 2690              		.loc 1 694 56 view .LVU755
 2691 00a6 9000     		lsls	r0, r2, #2
 2692 00a8 80B2     		uxth	r0, r0
 2693 00aa FFF7FEFF 		bl	MMU_Malloc
 2694              	.LVL135:
 694:SYS/task_manager/task_manager.c **** 
 2695              		.loc 1 694 42 view .LVU756
 2696 00ae 7065     		str	r0, [r6, #84]
 696:SYS/task_manager/task_manager.c ****     {
 2697              		.loc 1 696 5 is_stmt 1 view .LVU757
 696:SYS/task_manager/task_manager.c ****     {
 2698              		.loc 1 696 24 is_stmt 0 view .LVU758
 2699 00b0 57F82800 		ldr	r0, [r7, r8, lsl #2]
 696:SYS/task_manager/task_manager.c ****     {
 2700              		.loc 1 696 39 view .LVU759
 2701 00b4 436D     		ldr	r3, [r0, #84]
 696:SYS/task_manager/task_manager.c ****     {
 2702              		.loc 1 696 8 view .LVU760
 2703 00b6 002B     		cmp	r3, #0
 2704 00b8 00F08880 		beq	.L177
 698:SYS/task_manager/task_manager.c ****     }
 2705              		.loc 1 698 9 is_stmt 1 view .LVU761
 2706 00bc FFF7FEFF 		bl	Task_SetStkPtr_Val
 2707              	.LVL136:
 707:SYS/task_manager/task_manager.c **** 
 2708              		.loc 1 707 5 view .LVU762
 707:SYS/task_manager/task_manager.c **** 
 2709              		.loc 1 707 20 is_stmt 0 view .LVU763
 2710 00c0 3E46     		mov	r6, r7
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 105


 2711 00c2 4746     		mov	r7, r8
 2712 00c4 56F82830 		ldr	r3, [r6, r8, lsl #2]
 707:SYS/task_manager/task_manager.c **** 
 2713              		.loc 1 707 47 view .LVU764
 2714 00c8 4FF00008 		mov	r8, #0
 2715 00cc C3F85880 		str	r8, [r3, #88]
 710:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.totlal_running_time = 0;
 2716              		.loc 1 710 5 is_stmt 1 view .LVU765
 710:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.totlal_running_time = 0;
 2717              		.loc 1 710 20 is_stmt 0 view .LVU766
 2718 00d0 56F82730 		ldr	r3, [r6, r7, lsl #2]
 710:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.totlal_running_time = 0;
 2719              		.loc 1 710 52 view .LVU767
 2720 00d4 0022     		movs	r2, #0
 2721 00d6 5A64     		str	r2, [r3, #68]	@ float
 711:SYS/task_manager/task_manager.c **** 
 2722              		.loc 1 711 5 is_stmt 1 view .LVU768
 711:SYS/task_manager/task_manager.c **** 
 2723              		.loc 1 711 20 is_stmt 0 view .LVU769
 2724 00d8 56F82730 		ldr	r3, [r6, r7, lsl #2]
 711:SYS/task_manager/task_manager.c **** 
 2725              		.loc 1 711 64 view .LVU770
 2726 00dc C3F84080 		str	r8, [r3, #64]
 714:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 2727              		.loc 1 714 5 is_stmt 1 view .LVU771
 714:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 2728              		.loc 1 714 27 is_stmt 0 view .LVU772
 2729 00e0 414B     		ldr	r3, .L182+16
 2730 00e2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 714:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 2731              		.loc 1 714 35 view .LVU773
 2732 00e4 56F82700 		ldr	r0, [r6, r7, lsl #2]
 2733 00e8 90F800C0 		ldrb	ip, [r0]	@ zero_extendqisi2
 714:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 2734              		.loc 1 714 32 view .LVU774
 2735 00ec 0122     		movs	r2, #1
 2736 00ee 02FA0CFC 		lsl	ip, r2, ip
 714:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 2737              		.loc 1 714 27 view .LVU775
 2738 00f2 41EAEC01 		orr	r1, r1, ip, asr #3
 2739 00f6 C9B2     		uxtb	r1, r1
 2740 00f8 1970     		strb	r1, [r3]
 716:SYS/task_manager/task_manager.c **** 
 2741              		.loc 1 716 5 is_stmt 1 view .LVU776
 716:SYS/task_manager/task_manager.c **** 
 2742              		.loc 1 716 28 is_stmt 0 view .LVU777
 2743 00fa 90F800C0 		ldrb	ip, [r0]	@ zero_extendqisi2
 716:SYS/task_manager/task_manager.c **** 
 2744              		.loc 1 716 102 view .LVU778
 2745 00fe 03EBDC03 		add	r3, r3, ip, lsr #3
 2746 0102 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 716:SYS/task_manager/task_manager.c **** 
 2747              		.loc 1 716 107 view .LVU779
 2748 0104 02FA0CF2 		lsl	r2, r2, ip
 716:SYS/task_manager/task_manager.c **** 
 2749              		.loc 1 716 110 view .LVU780
 2750 0108 02F00702 		and	r2, r2, #7
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 106


 716:SYS/task_manager/task_manager.c **** 
 2751              		.loc 1 716 102 view .LVU781
 2752 010c 0A43     		orrs	r2, r2, r1
 2753 010e 5A70     		strb	r2, [r3, #1]
 718:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_arv = 0;
 2754              		.loc 1 718 5 is_stmt 1 view .LVU782
 718:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_arv = 0;
 2755              		.loc 1 718 60 is_stmt 0 view .LVU783
 2756 0110 C0F82C80 		str	r8, [r0, #44]
 719:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_max = 0;
 2757              		.loc 1 719 5 is_stmt 1 view .LVU784
 719:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_max = 0;
 2758              		.loc 1 719 20 is_stmt 0 view .LVU785
 2759 0114 56F82730 		ldr	r3, [r6, r7, lsl #2]
 719:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_max = 0;
 2760              		.loc 1 719 65 view .LVU786
 2761 0118 C3F83080 		str	r8, [r3, #48]
 720:SYS/task_manager/task_manager.c **** 
 2762              		.loc 1 720 5 is_stmt 1 view .LVU787
 720:SYS/task_manager/task_manager.c **** 
 2763              		.loc 1 720 20 is_stmt 0 view .LVU788
 2764 011c 56F82730 		ldr	r3, [r6, r7, lsl #2]
 720:SYS/task_manager/task_manager.c **** 
 2765              		.loc 1 720 65 view .LVU789
 2766 0120 C3F83480 		str	r8, [r3, #52]
 722:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Init_Time));
 2767              		.loc 1 722 5 is_stmt 1 view .LVU790
 722:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Init_Time));
 2768              		.loc 1 722 39 is_stmt 0 view .LVU791
 2769 0124 56F82700 		ldr	r0, [r6, r7, lsl #2]
 722:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Init_Time));
 2770              		.loc 1 722 5 view .LVU792
 2771 0128 2430     		adds	r0, r0, #36
 2772 012a FFF7FEFF 		bl	RuntimeObj_Reset
 2773              	.LVL137:
 723:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Start_Time));
 2774              		.loc 1 723 5 is_stmt 1 view .LVU793
 723:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Start_Time));
 2775              		.loc 1 723 39 is_stmt 0 view .LVU794
 2776 012e 56F82700 		ldr	r0, [r6, r7, lsl #2]
 723:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Start_Time));
 2777              		.loc 1 723 5 view .LVU795
 2778 0132 1430     		adds	r0, r0, #20
 2779 0134 FFF7FEFF 		bl	RuntimeObj_Reset
 2780              	.LVL138:
 724:SYS/task_manager/task_manager.c **** 
 2781              		.loc 1 724 5 is_stmt 1 view .LVU796
 724:SYS/task_manager/task_manager.c **** 
 2782              		.loc 1 724 39 is_stmt 0 view .LVU797
 2783 0138 56F82700 		ldr	r0, [r6, r7, lsl #2]
 724:SYS/task_manager/task_manager.c **** 
 2784              		.loc 1 724 5 view .LVU798
 2785 013c 1C30     		adds	r0, r0, #28
 2786 013e FFF7FEFF 		bl	RuntimeObj_Reset
 2787              	.LVL139:
 726:SYS/task_manager/task_manager.c **** 
 2788              		.loc 1 726 5 is_stmt 1 view .LVU799
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 107


 726:SYS/task_manager/task_manager.c **** 
 2789              		.loc 1 726 20 is_stmt 0 view .LVU800
 2790 0142 56F82790 		ldr	r9, [r6, r7, lsl #2]
 2791              	.LVL140:
 726:SYS/task_manager/task_manager.c **** 
 2792              		.loc 1 726 56 view .LVU801
 2793 0146 FFF7FEFF 		bl	Get_CurrentRunningUs
 2794              	.LVL141:
 726:SYS/task_manager/task_manager.c **** 
 2795              		.loc 1 726 54 view .LVU802
 2796 014a C9F81400 		str	r0, [r9, #20]
 2797 014e C9F81810 		str	r1, [r9, #24]
 728:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.error_code = NOERROR;
 2798              		.loc 1 728 5 is_stmt 1 view .LVU803
 728:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.error_code = NOERROR;
 2799              		.loc 1 728 20 is_stmt 0 view .LVU804
 2800 0152 56F82730 		ldr	r3, [r6, r7, lsl #2]
 728:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.error_code = NOERROR;
 2801              		.loc 1 728 55 view .LVU805
 2802 0156 C3F83880 		str	r8, [r3, #56]
 729:SYS/task_manager/task_manager.c **** 
 2803              		.loc 1 729 5 is_stmt 1 view .LVU806
 729:SYS/task_manager/task_manager.c **** 
 2804              		.loc 1 729 20 is_stmt 0 view .LVU807
 2805 015a 56F82730 		ldr	r3, [r6, r7, lsl #2]
 729:SYS/task_manager/task_manager.c **** 
 2806              		.loc 1 729 55 view .LVU808
 2807 015e 83F83C80 		strb	r8, [r3, #60]
 731:SYS/task_manager/task_manager.c **** 
 2808              		.loc 1 731 5 is_stmt 1 view .LVU809
 2809 0162 56F82700 		ldr	r0, [r6, r7, lsl #2]
 2810 0166 FFF7FEFF 		bl	Task_SetReady
 2811              	.LVL142:
 733:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority]->item_ptr == NULL)
 2812              		.loc 1 733 5 view .LVU810
 733:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority]->item_ptr == NULL)
 2813              		.loc 1 733 20 is_stmt 0 view .LVU811
 2814 016a 56F82780 		ldr	r8, [r6, r7, lsl #2]
 733:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority]->item_ptr == NULL)
 2815              		.loc 1 733 55 view .LVU812
 2816 016e 1420     		movs	r0, #20
 2817 0170 FFF7FEFF 		bl	MMU_Malloc
 2818              	.LVL143:
 733:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority]->item_ptr == NULL)
 2819              		.loc 1 733 41 view .LVU813
 2820 0174 C8F87000 		str	r0, [r8, #112]
 734:SYS/task_manager/task_manager.c ****     {
 2821              		.loc 1 734 5 is_stmt 1 view .LVU814
 734:SYS/task_manager/task_manager.c ****     {
 2822              		.loc 1 734 24 is_stmt 0 view .LVU815
 2823 0178 56F82710 		ldr	r1, [r6, r7, lsl #2]
 734:SYS/task_manager/task_manager.c ****     {
 2824              		.loc 1 734 34 view .LVU816
 2825 017c 086F     		ldr	r0, [r1, #112]
 734:SYS/task_manager/task_manager.c ****     {
 2826              		.loc 1 734 8 view .LVU817
 2827 017e 40B3     		cbz	r0, .L178
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 108


 739:SYS/task_manager/task_manager.c ****     if (TskCrt_RegList.num == 0)
 2828              		.loc 1 739 5 is_stmt 1 view .LVU818
 2829 0180 FFF7FEFF 		bl	List_ItemInit
 2830              	.LVL144:
 740:SYS/task_manager/task_manager.c ****     {
 2831              		.loc 1 740 5 view .LVU819
 740:SYS/task_manager/task_manager.c ****     {
 2832              		.loc 1 740 23 is_stmt 0 view .LVU820
 2833 0184 194B     		ldr	r3, .L182+20
 2834 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 740:SYS/task_manager/task_manager.c ****     {
 2835              		.loc 1 740 8 view .LVU821
 2836 0188 B3B9     		cbnz	r3, .L174
 742:SYS/task_manager/task_manager.c ****     }
 2837              		.loc 1 742 9 is_stmt 1 view .LVU822
 742:SYS/task_manager/task_manager.c ****     }
 2838              		.loc 1 742 56 is_stmt 0 view .LVU823
 2839 018a 56F82710 		ldr	r1, [r6, r7, lsl #2]
 742:SYS/task_manager/task_manager.c ****     }
 2840              		.loc 1 742 9 view .LVU824
 2841 018e 184B     		ldr	r3, .L182+24
 2842 0190 0222     		movs	r2, #2
 2843 0192 096F     		ldr	r1, [r1, #112]
 2844 0194 1748     		ldr	r0, .L182+28
 2845 0196 FFF7FEFF 		bl	List_Init
 2846              	.LVL145:
 2847              	.L175:
 749:SYS/task_manager/task_manager.c **** 
 2848              		.loc 1 749 5 is_stmt 1 view .LVU825
 749:SYS/task_manager/task_manager.c **** 
 2849              		.loc 1 749 35 is_stmt 0 view .LVU826
 2850 019a 04EBC504 		add	r4, r4, r5, lsl #3
 2851 019e 114B     		ldr	r3, .L182+12
 2852 01a0 53F82400 		ldr	r0, [r3, r4, lsl #2]
 749:SYS/task_manager/task_manager.c **** 
 2853              		.loc 1 749 5 view .LVU827
 2854 01a4 00F15C01 		add	r1, r0, #92
 2855 01a8 7430     		adds	r0, r0, #116
 2856 01aa FFF7FEFF 		bl	List_ItemInit
 2857              	.LVL146:
 751:SYS/task_manager/task_manager.c **** 
 2858              		.loc 1 751 5 is_stmt 1 view .LVU828
 751:SYS/task_manager/task_manager.c **** 
 2859              		.loc 1 751 19 is_stmt 0 view .LVU829
 2860 01ae 0F4A     		ldr	r2, .L182+20
 2861 01b0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 751:SYS/task_manager/task_manager.c **** 
 2862              		.loc 1 751 23 view .LVU830
 2863 01b2 0133     		adds	r3, r3, #1
 2864 01b4 1370     		strb	r3, [r2]
 753:SYS/task_manager/task_manager.c **** }
 2865              		.loc 1 753 5 is_stmt 1 view .LVU831
 753:SYS/task_manager/task_manager.c **** }
 2866              		.loc 1 753 12 is_stmt 0 view .LVU832
 2867 01b6 34E7     		b	.L171
 2868              	.L174:
 746:SYS/task_manager/task_manager.c ****     }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 109


 2869              		.loc 1 746 9 is_stmt 1 view .LVU833
 746:SYS/task_manager/task_manager.c ****     }
 2870              		.loc 1 746 63 is_stmt 0 view .LVU834
 2871 01b8 04EBC503 		add	r3, r4, r5, lsl #3
 2872 01bc 094A     		ldr	r2, .L182+12
 2873 01be 52F82330 		ldr	r3, [r2, r3, lsl #2]
 746:SYS/task_manager/task_manager.c ****     }
 2874              		.loc 1 746 9 view .LVU835
 2875 01c2 196F     		ldr	r1, [r3, #112]
 2876 01c4 0B48     		ldr	r0, .L182+28
 2877 01c6 FFF7FEFF 		bl	List_Insert_Item
 2878              	.LVL147:
 2879 01ca E6E7     		b	.L175
 2880              	.LVL148:
 2881              	.L177:
 702:SYS/task_manager/task_manager.c ****     }
 2882              		.loc 1 702 16 view .LVU836
 2883 01cc 4FF0000A 		mov	r10, #0
 2884              	.LVL149:
 702:SYS/task_manager/task_manager.c ****     }
 2885              		.loc 1 702 16 view .LVU837
 2886 01d0 27E7     		b	.L171
 2887              	.LVL150:
 2888              	.L178:
 736:SYS/task_manager/task_manager.c ****     }
 2889              		.loc 1 736 16 view .LVU838
 2890 01d2 4FF0000A 		mov	r10, #0
 2891              	.LVL151:
 736:SYS/task_manager/task_manager.c ****     }
 2892              		.loc 1 736 16 view .LVU839
 2893 01d6 24E7     		b	.L171
 2894              	.L183:
 2895              		.align	3
 2896              	.L182:
 2897 01d8 00000000 		.word	0
 2898 01dc 80842E41 		.word	1093567616
 2899 01e0 00000000 		.word	.LANCHOR18
 2900 01e4 00000000 		.word	.LANCHOR4
 2901 01e8 00000000 		.word	.LANCHOR0
 2902 01ec 00000000 		.word	.LANCHOR5
 2903 01f0 00000000 		.word	Task_PriorityCompare
 2904 01f4 04000000 		.word	.LANCHOR5+4
 2905              		.cfi_endproc
 2906              	.LFE156:
 2908              		.section	.text.Task_Remove,"ax",%progbits
 2909              		.align	1
 2910              		.global	Task_Remove
 2911              		.syntax unified
 2912              		.thumb
 2913              		.thumb_func
 2914              		.fpu fpv4-sp-d16
 2916              	Task_Remove:
 2917              	.LVL152:
 2918              	.LFB157:
 758:SYS/task_manager/task_manager.c ****     //convert Tsk_Hdl from uint32_t var to Task Address which we need to delete
 2919              		.loc 1 758 1 is_stmt 1 view -0
 2920              		.cfi_startproc
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 110


 2921              		@ args = 0, pretend = 0, frame = 0
 2922              		@ frame_needed = 0, uses_anonymous_args = 0
 758:SYS/task_manager/task_manager.c ****     //convert Tsk_Hdl from uint32_t var to Task Address which we need to delete
 2923              		.loc 1 758 1 is_stmt 0 view .LVU841
 2924 0000 70B5     		push	{r4, r5, r6, lr}
 2925              	.LCFI33:
 2926              		.cfi_def_cfa_offset 16
 2927              		.cfi_offset 4, -16
 2928              		.cfi_offset 5, -12
 2929              		.cfi_offset 6, -8
 2930              		.cfi_offset 14, -4
 2931 0002 0546     		mov	r5, r0
 764:SYS/task_manager/task_manager.c ****     uint8_t remove_task = GET_TASKINGROUP_PRIORITY(((Task *)Tsk_Hdl)->priority.Priority);
 2932              		.loc 1 764 5 is_stmt 1 view .LVU842
 764:SYS/task_manager/task_manager.c ****     uint8_t remove_task = GET_TASKINGROUP_PRIORITY(((Task *)Tsk_Hdl)->priority.Priority);
 2933              		.loc 1 764 28 is_stmt 0 view .LVU843
 2934 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 764:SYS/task_manager/task_manager.c ****     uint8_t remove_task = GET_TASKINGROUP_PRIORITY(((Task *)Tsk_Hdl)->priority.Priority);
 2935              		.loc 1 764 13 view .LVU844
 2936 0006 DE08     		lsrs	r6, r3, #3
 2937              	.LVL153:
 765:SYS/task_manager/task_manager.c **** 
 2938              		.loc 1 765 5 is_stmt 1 view .LVU845
 765:SYS/task_manager/task_manager.c **** 
 2939              		.loc 1 765 13 is_stmt 0 view .LVU846
 2940 0008 03F00704 		and	r4, r3, #7
 2941              	.LVL154:
 767:SYS/task_manager/task_manager.c **** 
 2942              		.loc 1 767 5 is_stmt 1 view .LVU847
 2943 000c FFF7FEFF 		bl	ReSet_Task_Data
 2944              	.LVL155:
 770:SYS/task_manager/task_manager.c ****     MMU_Free((uint32_t *)((Task *)Tsk_Hdl)->TCB.Top_Stk_Ptr);
 2945              		.loc 1 770 5 view .LVU848
 2946 0010 686D     		ldr	r0, [r5, #84]
 2947 0012 FFF7FEFF 		bl	MMU_Free
 2948              	.LVL156:
 771:SYS/task_manager/task_manager.c **** #endif
 2949              		.loc 1 771 5 view .LVU849
 771:SYS/task_manager/task_manager.c **** #endif
 2950              		.loc 1 771 48 is_stmt 0 view .LVU850
 2951 0016 286D     		ldr	r0, [r5, #80]
 771:SYS/task_manager/task_manager.c **** #endif
 2952              		.loc 1 771 5 view .LVU851
 2953 0018 FFF7FEFF 		bl	MMU_Free
 2954              	.LVL157:
 774:SYS/task_manager/task_manager.c ****     Task_Ptr[remove_group][remove_task] = NULL;
 2955              		.loc 1 774 5 is_stmt 1 view .LVU852
 2956 001c 2846     		mov	r0, r5
 2957 001e FFF7FEFF 		bl	MMU_Free
 2958              	.LVL158:
 775:SYS/task_manager/task_manager.c **** }
 2959              		.loc 1 775 5 view .LVU853
 775:SYS/task_manager/task_manager.c **** }
 2960              		.loc 1 775 41 is_stmt 0 view .LVU854
 2961 0022 04EBC603 		add	r3, r4, r6, lsl #3
 2962 0026 024A     		ldr	r2, .L186
 2963 0028 0021     		movs	r1, #0
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 111


 2964 002a 42F82310 		str	r1, [r2, r3, lsl #2]
 776:SYS/task_manager/task_manager.c **** 
 2965              		.loc 1 776 1 view .LVU855
 2966 002e 70BD     		pop	{r4, r5, r6, pc}
 2967              	.LVL159:
 2968              	.L187:
 776:SYS/task_manager/task_manager.c **** 
 2969              		.loc 1 776 1 view .LVU856
 2970              		.align	2
 2971              	.L186:
 2972 0030 00000000 		.word	.LANCHOR4
 2973              		.cfi_endproc
 2974              	.LFE157:
 2976              		.section	.text.TaskSystem_Start,"ax",%progbits
 2977              		.align	1
 2978              		.global	TaskSystem_Start
 2979              		.syntax unified
 2980              		.thumb
 2981              		.thumb_func
 2982              		.fpu fpv4-sp-d16
 2984              	TaskSystem_Start:
 2985              	.LFB158:
 779:SYS/task_manager/task_manager.c ****     Runtime_Config(RUNTIME_TICK_FRQ_40K);
 2986              		.loc 1 779 1 is_stmt 1 view -0
 2987              		.cfi_startproc
 2988              		@ args = 0, pretend = 0, frame = 0
 2989              		@ frame_needed = 0, uses_anonymous_args = 0
 2990 0000 10B5     		push	{r4, lr}
 2991              	.LCFI34:
 2992              		.cfi_def_cfa_offset 8
 2993              		.cfi_offset 4, -8
 2994              		.cfi_offset 14, -4
 780:SYS/task_manager/task_manager.c ****     Runtime_Set_start_Callback(NULL);
 2995              		.loc 1 780 5 view .LVU858
 2996 0002 49F64040 		movw	r0, #40000
 2997 0006 FFF7FEFF 		bl	Runtime_Config
 2998              	.LVL160:
 781:SYS/task_manager/task_manager.c ****     Runtime_Set_stop_Callback(NULL);
 2999              		.loc 1 781 5 view .LVU859
 3000 000a 0020     		movs	r0, #0
 3001 000c FFF7FEFF 		bl	Runtime_Set_start_Callback
 3002              	.LVL161:
 782:SYS/task_manager/task_manager.c ****     Runtime_Set_tick_Callback(Task_Scheduler); /* 5us cast by calling the scheduler */
 3003              		.loc 1 782 5 view .LVU860
 3004 0010 0020     		movs	r0, #0
 3005 0012 FFF7FEFF 		bl	Runtime_Set_stop_Callback
 3006              	.LVL162:
 783:SYS/task_manager/task_manager.c ****     Runtime_Start();
 3007              		.loc 1 783 5 view .LVU861
 3008 0016 1148     		ldr	r0, .L191
 3009 0018 FFF7FEFF 		bl	Runtime_Set_tick_Callback
 3010              	.LVL163:
 784:SYS/task_manager/task_manager.c **** 
 3011              		.loc 1 784 5 view .LVU862
 3012 001c FFF7FEFF 		bl	Runtime_Start
 3013              	.LVL164:
 786:SYS/task_manager/task_manager.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 112


 3014              		.loc 1 786 5 view .LVU863
 3015 0020 0F4C     		ldr	r4, .L191+4
 3016 0022 2046     		mov	r0, r4
 3017 0024 FFF7FEFF 		bl	RuntimeObj_Reset
 3018              	.LVL165:
 788:SYS/task_manager/task_manager.c **** 
 3019              		.loc 1 788 5 view .LVU864
 788:SYS/task_manager/task_manager.c **** 
 3020              		.loc 1 788 25 is_stmt 0 view .LVU865
 3021 0028 FFF7FEFF 		bl	Get_CurrentRunningUs
 3022              	.LVL166:
 788:SYS/task_manager/task_manager.c **** 
 3023              		.loc 1 788 23 view .LVU866
 3024 002c C4E90001 		strd	r0, [r4]
 791:SYS/task_manager/task_manager.c **** 
 3025              		.loc 1 791 5 is_stmt 1 view .LVU867
 791:SYS/task_manager/task_manager.c **** 
 3026              		.loc 1 791 21 is_stmt 0 view .LVU868
 3027 0030 FFF7FEFF 		bl	Task_Get_HighestRank_RdyTask
 3028              	.LVL167:
 791:SYS/task_manager/task_manager.c **** 
 3029              		.loc 1 791 19 view .LVU869
 3030 0034 0B4B     		ldr	r3, .L191+8
 3031 0036 1860     		str	r0, [r3]
 793:SYS/task_manager/task_manager.c ****     {
 3032              		.loc 1 793 5 is_stmt 1 view .LVU870
 793:SYS/task_manager/task_manager.c ****     {
 3033              		.loc 1 793 8 is_stmt 0 view .LVU871
 3034 0038 50B1     		cbz	r0, .L189
 795:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 3035              		.loc 1 795 9 is_stmt 1 view .LVU872
 795:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 3036              		.loc 1 795 34 is_stmt 0 view .LVU873
 3037 003a 00F15002 		add	r2, r0, #80
 795:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 3038              		.loc 1 795 32 view .LVU874
 3039 003e 0A4B     		ldr	r3, .L191+12
 3040 0040 1A60     		str	r2, [r3]
 796:SYS/task_manager/task_manager.c **** 
 3041              		.loc 1 796 9 is_stmt 1 view .LVU875
 796:SYS/task_manager/task_manager.c **** 
 3042              		.loc 1 796 46 is_stmt 0 view .LVU876
 3043 0042 426D     		ldr	r2, [r0, #84]
 796:SYS/task_manager/task_manager.c **** 
 3044              		.loc 1 796 26 view .LVU877
 3045 0044 5A60     		str	r2, [r3, #4]
 798:SYS/task_manager/task_manager.c ****     }
 3046              		.loc 1 798 9 is_stmt 1 view .LVU878
 798:SYS/task_manager/task_manager.c ****     }
 3047              		.loc 1 798 20 is_stmt 0 view .LVU879
 3048 0046 094A     		ldr	r2, .L191+16
 3049 0048 93E80300 		ldm	r3, {r0, r1}
 3050 004c 82E80300 		stm	r2, {r0, r1}
 3051              	.L189:
 802:SYS/task_manager/task_manager.c ****     Task_TriggerPendSV();
 3052              		.loc 1 802 5 is_stmt 1 view .LVU880
 3053 0050 FFF7FEFF 		bl	Task_SetPendSVPro
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 113


 3054              	.LVL168:
 803:SYS/task_manager/task_manager.c **** 
 3055              		.loc 1 803 5 view .LVU881
 3056 0054 FFF7FEFF 		bl	Task_TriggerPendSV
 3057              	.LVL169:
 805:SYS/task_manager/task_manager.c **** }
 3058              		.loc 1 805 5 view .LVU882
 806:SYS/task_manager/task_manager.c **** 
 3059              		.loc 1 806 1 is_stmt 0 view .LVU883
 3060 0058 10BD     		pop	{r4, pc}
 3061              	.L192:
 3062 005a 00BF     		.align	2
 3063              	.L191:
 3064 005c 00000000 		.word	Task_Scheduler
 3065 0060 00000000 		.word	.LANCHOR8
 3066 0064 00000000 		.word	.LANCHOR11
 3067 0068 00000000 		.word	.LANCHOR14
 3068 006c 00000000 		.word	.LANCHOR15
 3069              		.cfi_endproc
 3070              	.LFE158:
 3072              		.section	.text.Task_SetRunState,"ax",%progbits
 3073              		.align	1
 3074              		.global	Task_SetRunState
 3075              		.syntax unified
 3076              		.thumb
 3077              		.thumb_func
 3078              		.fpu fpv4-sp-d16
 3080              	Task_SetRunState:
 3081              	.LVL170:
 3082              	.LFB159:
 809:SYS/task_manager/task_manager.c ****     ((Task *)Tsk_Handle)->Exec_status.State = state;
 3083              		.loc 1 809 1 is_stmt 1 view -0
 3084              		.cfi_startproc
 3085              		@ args = 0, pretend = 0, frame = 0
 3086              		@ frame_needed = 0, uses_anonymous_args = 0
 3087              		@ link register save eliminated.
 810:SYS/task_manager/task_manager.c **** }
 3088              		.loc 1 810 5 view .LVU885
 810:SYS/task_manager/task_manager.c **** }
 3089              		.loc 1 810 45 is_stmt 0 view .LVU886
 3090 0000 80F84810 		strb	r1, [r0, #72]
 811:SYS/task_manager/task_manager.c **** 
 3091              		.loc 1 811 1 view .LVU887
 3092 0004 7047     		bx	lr
 3093              		.cfi_endproc
 3094              	.LFE159:
 3096              		.section	.text.Task_Get_IdleUS,"ax",%progbits
 3097              		.align	1
 3098              		.global	Task_Get_IdleUS
 3099              		.syntax unified
 3100              		.thumb
 3101              		.thumb_func
 3102              		.fpu fpv4-sp-d16
 3104              	Task_Get_IdleUS:
 3105              	.LFB162:
 889:SYS/task_manager/task_manager.c ****     return TaskSys_Idle_US;
 3106              		.loc 1 889 1 is_stmt 1 view -0
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 114


 3107              		.cfi_startproc
 3108              		@ args = 0, pretend = 0, frame = 0
 3109              		@ frame_needed = 0, uses_anonymous_args = 0
 3110              		@ link register save eliminated.
 890:SYS/task_manager/task_manager.c **** }
 3111              		.loc 1 890 5 view .LVU889
 891:SYS/task_manager/task_manager.c **** 
 3112              		.loc 1 891 1 is_stmt 0 view .LVU890
 3113 0000 014B     		ldr	r3, .L195
 3114 0002 1868     		ldr	r0, [r3]
 3115 0004 7047     		bx	lr
 3116              	.L196:
 3117 0006 00BF     		.align	2
 3118              	.L195:
 3119 0008 00000000 		.word	.LANCHOR9
 3120              		.cfi_endproc
 3121              	.LFE162:
 3123              		.section	.text.Task_Get_IdleOcupy,"ax",%progbits
 3124              		.align	1
 3125              		.global	Task_Get_IdleOcupy
 3126              		.syntax unified
 3127              		.thumb
 3128              		.thumb_func
 3129              		.fpu fpv4-sp-d16
 3131              	Task_Get_IdleOcupy:
 3132              	.LFB163:
 894:SYS/task_manager/task_manager.c ****     return TaskSys_Idle_Ocupy;
 3133              		.loc 1 894 1 is_stmt 1 view -0
 3134              		.cfi_startproc
 3135              		@ args = 0, pretend = 0, frame = 0
 3136              		@ frame_needed = 0, uses_anonymous_args = 0
 3137              		@ link register save eliminated.
 895:SYS/task_manager/task_manager.c **** }
 3138              		.loc 1 895 5 view .LVU892
 896:SYS/task_manager/task_manager.c **** 
 3139              		.loc 1 896 1 is_stmt 0 view .LVU893
 3140 0000 014B     		ldr	r3, .L198
 3141 0002 93ED000A 		vldr.32	s0, [r3]
 3142 0006 7047     		bx	lr
 3143              	.L199:
 3144              		.align	2
 3145              	.L198:
 3146 0008 00000000 		.word	.LANCHOR10
 3147              		.cfi_endproc
 3148              	.LFE163:
 3150              		.section	.text.TaskSys_Set_State,"ax",%progbits
 3151              		.align	1
 3152              		.global	TaskSys_Set_State
 3153              		.syntax unified
 3154              		.thumb
 3155              		.thumb_func
 3156              		.fpu fpv4-sp-d16
 3158              	TaskSys_Set_State:
 3159              	.LVL171:
 3160              	.LFB165:
 917:SYS/task_manager/task_manager.c ****     TskSys_state = state;
 3161              		.loc 1 917 1 is_stmt 1 view -0
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 115


 3162              		.cfi_startproc
 3163              		@ args = 0, pretend = 0, frame = 0
 3164              		@ frame_needed = 0, uses_anonymous_args = 0
 3165              		@ link register save eliminated.
 918:SYS/task_manager/task_manager.c **** }
 3166              		.loc 1 918 5 view .LVU895
 918:SYS/task_manager/task_manager.c **** }
 3167              		.loc 1 918 18 is_stmt 0 view .LVU896
 3168 0000 014B     		ldr	r3, .L201
 3169 0002 1870     		strb	r0, [r3]
 919:SYS/task_manager/task_manager.c **** 
 3170              		.loc 1 919 1 view .LVU897
 3171 0004 7047     		bx	lr
 3172              	.L202:
 3173 0006 00BF     		.align	2
 3174              	.L201:
 3175 0008 00000000 		.word	.LANCHOR7
 3176              		.cfi_endproc
 3177              	.LFE165:
 3179              		.section	.text.TaskSys_Get_State,"ax",%progbits
 3180              		.align	1
 3181              		.global	TaskSys_Get_State
 3182              		.syntax unified
 3183              		.thumb
 3184              		.thumb_func
 3185              		.fpu fpv4-sp-d16
 3187              	TaskSys_Get_State:
 3188              	.LFB166:
 922:SYS/task_manager/task_manager.c ****     return TskSys_state;
 3189              		.loc 1 922 1 is_stmt 1 view -0
 3190              		.cfi_startproc
 3191              		@ args = 0, pretend = 0, frame = 0
 3192              		@ frame_needed = 0, uses_anonymous_args = 0
 3193              		@ link register save eliminated.
 923:SYS/task_manager/task_manager.c **** }
 3194              		.loc 1 923 5 view .LVU899
 923:SYS/task_manager/task_manager.c **** }
 3195              		.loc 1 923 12 is_stmt 0 view .LVU900
 3196 0000 014B     		ldr	r3, .L204
 3197 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 924:SYS/task_manager/task_manager.c **** 
 3198              		.loc 1 924 1 view .LVU901
 3199 0004 7047     		bx	lr
 3200              	.L205:
 3201 0006 00BF     		.align	2
 3202              	.L204:
 3203 0008 00000000 		.word	.LANCHOR7
 3204              		.cfi_endproc
 3205              	.LFE166:
 3207              		.section	.text.Task_GetInfo_ByIndex,"ax",%progbits
 3208              		.align	1
 3209              		.global	Task_GetInfo_ByIndex
 3210              		.syntax unified
 3211              		.thumb
 3212              		.thumb_func
 3213              		.fpu fpv4-sp-d16
 3215              	Task_GetInfo_ByIndex:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 116


 3216              	.LVL172:
 3217              	.LFB169:
1064:SYS/task_manager/task_manager.c **** 
1065:SYS/task_manager/task_manager.c **** Task_Base_Info Task_GetInfo_ByIndex(uint8_t index)
1066:SYS/task_manager/task_manager.c **** {
 3218              		.loc 1 1066 1 is_stmt 1 view -0
 3219              		.cfi_startproc
 3220              		@ args = 0, pretend = 0, frame = 0
 3221              		@ frame_needed = 0, uses_anonymous_args = 0
 3222              		@ link register save eliminated.
1067:SYS/task_manager/task_manager.c ****     Task_Base_Info task_info;
 3223              		.loc 1 1067 5 view .LVU903
1068:SYS/task_manager/task_manager.c **** 
1069:SYS/task_manager/task_manager.c ****     return task_info;
 3224              		.loc 1 1069 5 view .LVU904
1070:SYS/task_manager/task_manager.c **** }
 3225              		.loc 1 1070 1 is_stmt 0 view .LVU905
 3226 0000 7047     		bx	lr
 3227              		.cfi_endproc
 3228              	.LFE169:
 3230              		.section	.text.Task_GetCurrentRunTask,"ax",%progbits
 3231              		.align	1
 3232              		.global	Task_GetCurrentRunTask
 3233              		.syntax unified
 3234              		.thumb
 3235              		.thumb_func
 3236              		.fpu fpv4-sp-d16
 3238              	Task_GetCurrentRunTask:
 3239              	.LFB170:
1071:SYS/task_manager/task_manager.c **** 
1072:SYS/task_manager/task_manager.c **** Task *Task_GetCurrentRunTask(void)
1073:SYS/task_manager/task_manager.c **** {
 3240              		.loc 1 1073 1 is_stmt 1 view -0
 3241              		.cfi_startproc
 3242              		@ args = 0, pretend = 0, frame = 0
 3243              		@ frame_needed = 0, uses_anonymous_args = 0
 3244              		@ link register save eliminated.
1074:SYS/task_manager/task_manager.c ****     return CurRunTsk_Ptr;
 3245              		.loc 1 1074 5 view .LVU907
1075:SYS/task_manager/task_manager.c **** }
 3246              		.loc 1 1075 1 is_stmt 0 view .LVU908
 3247 0000 014B     		ldr	r3, .L208
 3248 0002 1868     		ldr	r0, [r3]
 3249 0004 7047     		bx	lr
 3250              	.L209:
 3251 0006 00BF     		.align	2
 3252              	.L208:
 3253 0008 00000000 		.word	.LANCHOR6
 3254              		.cfi_endproc
 3255              	.LFE170:
 3257              		.section	.text.Task_Statistic_Cast,"ax",%progbits
 3258              		.align	1
 3259              		.global	Task_Statistic_Cast
 3260              		.syntax unified
 3261              		.thumb
 3262              		.thumb_func
 3263              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 117


 3265              	Task_Statistic_Cast:
 3266              	.LVL173:
 3267              	.LFB171:
1076:SYS/task_manager/task_manager.c **** 
1077:SYS/task_manager/task_manager.c **** void Task_Statistic_Cast(uint32_t time_base)
1078:SYS/task_manager/task_manager.c **** {
 3268              		.loc 1 1078 1 is_stmt 1 view -0
 3269              		.cfi_startproc
 3270              		@ args = 0, pretend = 0, frame = 0
 3271              		@ frame_needed = 0, uses_anonymous_args = 0
 3272              		@ link register save eliminated.
1079:SYS/task_manager/task_manager.c ****     if ((CurRunTsk_Ptr != NULL) && (CurRunTsk_Ptr->Exec_status.State == Task_Running))
 3273              		.loc 1 1079 5 view .LVU910
 3274              		.loc 1 1079 24 is_stmt 0 view .LVU911
 3275 0000 064B     		ldr	r3, .L213
 3276 0002 1B68     		ldr	r3, [r3]
 3277              		.loc 1 1079 8 view .LVU912
 3278 0004 23B1     		cbz	r3, .L210
 3279              		.loc 1 1079 63 discriminator 1 view .LVU913
 3280 0006 93F84820 		ldrb	r2, [r3, #72]	@ zero_extendqisi2
 3281 000a D2B2     		uxtb	r2, r2
 3282              		.loc 1 1079 33 discriminator 1 view .LVU914
 3283 000c 012A     		cmp	r2, #1
 3284 000e 00D0     		beq	.L212
 3285              	.LVL174:
 3286              	.L210:
1080:SYS/task_manager/task_manager.c ****     {
1081:SYS/task_manager/task_manager.c ****         CurRunTsk_Ptr->TskFuncUing_US += time_base;
1082:SYS/task_manager/task_manager.c ****     }
1083:SYS/task_manager/task_manager.c **** }...
 3287              		.loc 1 1083 1 view .LVU915
 3288 0010 7047     		bx	lr
 3289              	.LVL175:
 3290              	.L212:
1081:SYS/task_manager/task_manager.c ****         CurRunTsk_Ptr->TskFuncUing_US += time_base;
 3291              		.loc 1 1081 9 is_stmt 1 view .LVU916
1081:SYS/task_manager/task_manager.c ****         CurRunTsk_Ptr->TskFuncUing_US += time_base;
 3292              		.loc 1 1081 39 is_stmt 0 view .LVU917
 3293 0012 9A6D     		ldr	r2, [r3, #88]
 3294 0014 1044     		add	r0, r0, r2
 3295              	.LVL176:
1081:SYS/task_manager/task_manager.c ****         CurRunTsk_Ptr->TskFuncUing_US += time_base;
 3296              		.loc 1 1081 39 view .LVU918
 3297 0016 9865     		str	r0, [r3, #88]
 3298              		.loc 1 1083 1 view .LVU919
 3299 0018 FAE7     		b	.L210
 3300              	.L214:
 3301 001a 00BF     		.align	2
 3302              	.L213:
 3303 001c 00000000 		.word	.LANCHOR6
 3304              		.cfi_endproc
 3305              	.LFE171:
 3307              		.global	Task_OS_ExpStkBase
 3308              		.global	NxtTsk_TCB
 3309              		.global	CurTsk_TCB
 3310              		.global	PndHstTsk_Ptr
 3311              		.global	NxtRunTsk_Ptr
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 118


 3312              		.global	CurRunTsk_Ptr
 3313              		.global	Task_Ptr
 3314              		.section	.bss.CurRunTsk_Ptr,"aw",%nobits
 3315              		.align	2
 3316              		.set	.LANCHOR6,. + 0
 3319              	CurRunTsk_Ptr:
 3320 0000 00000000 		.space	4
 3321              		.section	.bss.CurTsk_TCB,"aw",%nobits
 3322              		.align	2
 3323              		.set	.LANCHOR15,. + 0
 3326              	CurTsk_TCB:
 3327 0000 00000000 		.space	8
 3327      00000000 
 3328              		.section	.bss.NxtRunTsk_Ptr,"aw",%nobits
 3329              		.align	2
 3330              		.set	.LANCHOR11,. + 0
 3333              	NxtRunTsk_Ptr:
 3334 0000 00000000 		.space	4
 3335              		.section	.bss.NxtTsk_TCB,"aw",%nobits
 3336              		.align	2
 3337              		.set	.LANCHOR14,. + 0
 3340              	NxtTsk_TCB:
 3341 0000 00000000 		.space	8
 3341      00000000 
 3342              		.section	.bss.PndHstTsk_Ptr,"aw",%nobits
 3343              		.align	2
 3344              		.set	.LANCHOR17,. + 0
 3347              	PndHstTsk_Ptr:
 3348 0000 00000000 		.space	4
 3349              		.section	.bss.TaskSys_Idle_Ocupy,"aw",%nobits
 3350              		.align	2
 3351              		.set	.LANCHOR10,. + 0
 3354              	TaskSys_Idle_Ocupy:
 3355 0000 00000000 		.space	4
 3356              		.section	.bss.TaskSys_Idle_US,"aw",%nobits
 3357              		.align	2
 3358              		.set	.LANCHOR9,. + 0
 3361              	TaskSys_Idle_US:
 3362 0000 00000000 		.space	4
 3363              		.section	.bss.TaskSys_StartTime,"aw",%nobits
 3364              		.align	3
 3365              		.set	.LANCHOR8,. + 0
 3368              	TaskSys_StartTime:
 3369 0000 00000000 		.space	8
 3369      00000000 
 3370              		.section	.bss.Task_OS_ExpStkBase,"aw",%nobits
 3371              		.align	2
 3372              		.set	.LANCHOR3,. + 0
 3375              	Task_OS_ExpStkBase:
 3376 0000 00000000 		.space	4
 3377              		.section	.bss.Task_OS_StkMem,"aw",%nobits
 3378              		.align	2
 3381              	Task_OS_StkMem:
 3382 0000 00000000 		.space	40960
 3382      00000000 
 3382      00000000 
 3382      00000000 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 119


 3382      00000000 
 3383              		.section	.bss.Task_Ptr,"aw",%nobits
 3384              		.align	2
 3385              		.set	.LANCHOR4,. + 0
 3388              	Task_Ptr:
 3389 0000 00000000 		.space	256
 3389      00000000 
 3389      00000000 
 3389      00000000 
 3389      00000000 
 3390              		.section	.bss.TskCrt_RegList,"aw",%nobits
 3391              		.align	2
 3392              		.set	.LANCHOR5,. + 0
 3395              	TskCrt_RegList:
 3396 0000 00000000 		.space	24
 3396      00000000 
 3396      00000000 
 3396      00000000 
 3396      00000000 
 3397              		.section	.bss.TskHdl_BlkMap,"aw",%nobits
 3398              		.align	2
 3399              		.set	.LANCHOR1,. + 0
 3402              	TskHdl_BlkMap:
 3403 0000 00000000 		.space	9
 3403      00000000 
 3403      00
 3404              		.section	.bss.TskHdl_PndMap,"aw",%nobits
 3405              		.align	2
 3406              		.set	.LANCHOR2,. + 0
 3409              	TskHdl_PndMap:
 3410 0000 00000000 		.space	9
 3410      00000000 
 3410      00
 3411              		.section	.bss.TskHdl_RdyMap,"aw",%nobits
 3412              		.align	2
 3413              		.set	.LANCHOR0,. + 0
 3416              	TskHdl_RdyMap:
 3417 0000 00000000 		.space	9
 3417      00000000 
 3417      00
 3418              		.section	.bss.TskSys_state,"aw",%nobits
 3419              		.set	.LANCHOR7,. + 0
 3422              	TskSys_state:
 3423 0000 00       		.space	1
 3424              		.section	.bss.i.0,"aw",%nobits
 3425              		.set	.LANCHOR12,. + 0
 3428              	i.0:
 3429 0000 00       		.space	1
 3430              		.section	.bss.taskOs_InitState.1,"aw",%nobits
 3431              		.set	.LANCHOR18,. + 0
 3434              	taskOs_InitState.1:
 3435 0000 00       		.space	1
 3436              		.section	.bss.traverse_start,"aw",%nobits
 3437              		.set	.LANCHOR13,. + 0
 3440              	traverse_start:
 3441 0000 00       		.space	1
 3442              		.section	.rodata.Tsk_Handle,"a"
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 120


 3443              		.align	2
 3444              		.set	.LANCHOR16,. + 0
 3447              	Tsk_Handle:
 3448 0000 00000100 		.ascii	"\000\000\001\000\002\000\001\000\003\000\001\000\002"
 3448      02000100 
 3448      03000100 
 3448      02
 3449 000d 00010004 		.ascii	"\000\001\000\004\000\001\000\002\000\001\000\003\000"
 3449      00010002 
 3449      00010003 
 3449      00
 3450 001a 01000200 		.ascii	"\001\000\002\000\001\000\005\000\001\000\002\000\001"
 3450      01000500 
 3450      01000200 
 3450      01
 3451 0027 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000\004\000\001\000"
 3451      00020001 
 3451      00040001 
 3451      00
 3452 0034 02000100 		.ascii	"\002\000\001\000\003\000\001\000\002\000\001\000\006"
 3452      03000100 
 3452      02000100 
 3452      06
 3453 0041 00010002 		.ascii	"\000\001\000\002\000\001\000\003\000\001\000\002\000"
 3453      00010003 
 3453      00010002 
 3453      00
 3454 004e 01000400 		.ascii	"\001\000\004\000\001\000\002\000\001\000\003\000\001"
 3454      01000200 
 3454      01000300 
 3454      01
 3455 005b 00020001 		.ascii	"\000\002\000\001\000\005\000\001\000\002\000\001\000"
 3455      00050001 
 3455      00020001 
 3455      00
 3456 0068 03000100 		.ascii	"\003\000\001\000\002\000\001\000\004\000\001\000\002"
 3456      02000100 
 3456      04000100 
 3456      02
 3457 0075 00010003 		.ascii	"\000\001\000\003\000\001\000\002\000\001\000\007\000"
 3457      00010002 
 3457      00010007 
 3457      00
 3458 0082 01000200 		.ascii	"\001\000\002\000\001\000\003\000\001\000\002\000\001"
 3458      01000300 
 3458      01000200 
 3458      01
 3459 008f 00040001 		.ascii	"\000\004\000\001\000\002\000\001\000\003\000\001\000"
 3459      00020001 
 3459      00030001 
 3459      00
 3460 009c 02000100 		.ascii	"\002\000\001\000\005\000\001\000\002\000\001\000\003"
 3460      05000100 
 3460      02000100 
 3460      03
 3461 00a9 00010002 		.ascii	"\000\001\000\002\000\001\000\004\000\001\000\002\000"
 3461      00010004 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 121


 3461      00010002 
 3461      00
 3462 00b6 01000300 		.ascii	"\001\000\003\000\001\000\002\000\001\000\006\000\001"
 3462      01000200 
 3462      01000600 
 3462      01
 3463 00c3 00020001 		.ascii	"\000\002\000\001\000\003\000\001\000\002\000\001\000"
 3463      00030001 
 3463      00020001 
 3463      00
 3464 00d0 04000100 		.ascii	"\004\000\001\000\002\000\001\000\003\000\001\000\002"
 3464      02000100 
 3464      03000100 
 3464      02
 3465 00dd 00010005 		.ascii	"\000\001\000\005\000\001\000\002\000\001\000\003\000"
 3465      00010002 
 3465      00010003 
 3465      00
 3466 00ea 01000200 		.ascii	"\001\000\002\000\001\000\004\000\001\000\002\000\001"
 3466      01000400 
 3466      01000200 
 3466      01
 3467 00f7 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000"
 3467      00020001 
 3467      00
 3468              		.text
 3469              	.Letext0:
 3470              		.file 3 "/usr/local/arm-none-eabi-gcc/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/mac
 3471              		.file 4 "/usr/local/arm-none-eabi-gcc/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys
 3472              		.file 5 "SYS/runtime/runtime.h"
 3473              		.file 6 "SYS/data_structure/linked_list.h"
 3474              		.file 7 "SYS/task_manager/task_manager.h"
 3475              		.file 8 "USER/stm32f4xx.h"
 3476              		.file 9 "SYS/memng/mmu.h"
 3477              		.file 10 "<built-in>"
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 122


DEFINED SYMBOLS
                            *ABS*:0000000000000000 task_manager.c
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:18     .text.Task_Exit:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:25     .text.Task_Exit:0000000000000000 Task_Exit
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:43     .text.Task_SetBASEPRI:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:49     .text.Task_SetBASEPRI:0000000000000000 Task_SetBASEPRI
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:70     .text.Task_SetReady:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:76     .text.Task_SetReady:0000000000000000 Task_SetReady
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:130    .text.Task_SetReady:0000000000000038 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:135    .text.Task_ClearBlock:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:141    .text.Task_ClearBlock:0000000000000000 Task_ClearBlock
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:198    .text.Task_ClearBlock:000000000000003c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:203    .text.Task_ClearPending:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:209    .text.Task_ClearPending:0000000000000000 Task_ClearPending
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:266    .text.Task_ClearPending:000000000000003c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:271    .text.Task_ClearReady:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:277    .text.Task_ClearReady:0000000000000000 Task_ClearReady
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:334    .text.Task_ClearReady:000000000000003c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:339    .text.Task_SetPendSVPro:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:345    .text.Task_SetPendSVPro:0000000000000000 Task_SetPendSVPro
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:355    *ABS*:00000000e000ed22 NVIC_SYSPRI14
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:359    *ABS*:00000000000000ff NVIC_PENDSV_PRI
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3375   .bss.Task_OS_ExpStkBase:0000000000000000 Task_OS_ExpStkBase
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:404    .text.Task_PriorityCompare:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:411    .text.Task_PriorityCompare:0000000000000000 Task_PriorityCompare
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:517    .text.ReSet_Task_Data:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:523    .text.ReSet_Task_Data:0000000000000000 ReSet_Task_Data
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:618    .text.TaskSys_Init:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:624    .text.TaskSys_Init:0000000000000000 TaskSys_Init
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:768    .text.TaskSys_Init:0000000000000078 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3381   .bss.Task_OS_StkMem:0000000000000000 Task_OS_StkMem
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:780    .text.Task_SetStkPtr_Val:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:786    .text.Task_SetStkPtr_Val:0000000000000000 Task_SetStkPtr_Val
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:872    .text.Task_SetStkPtr_Val:0000000000000050 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1174   .text.Task_Caller:0000000000000000 Task_Caller
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:879    .text.Task_Idle:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:885    .text.Task_Idle:0000000000000000 Task_Idle
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:955    .text.Task_Idle:0000000000000054 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:962    .text.Task_Exec:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:968    .text.Task_Exec:0000000000000000 Task_Exec
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1160   .text.Task_Exec:00000000000000e0 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1167   .text.Task_Caller:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1223   .text.Task_Caller:0000000000000028 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1231   .text.Task_CrtList_TraversePoll_callback:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1237   .text.Task_CrtList_TraversePoll_callback:0000000000000000 Task_CrtList_TraversePoll_callback
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1302   .text.Task_CrtList_TraversePoll_callback:0000000000000030 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1307   .text.Task_Resume_FromBlock:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1314   .text.Task_Resume_FromBlock:0000000000000000 Task_Resume_FromBlock
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1361   .text.Task_Resume_FromBlock:0000000000000028 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1367   .text.Task_SetBlock:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1374   .text.Task_SetBlock:0000000000000000 Task_SetBlock
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1460   .text.Task_SetBlock:0000000000000060 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1467   .text.Task_SetPending:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1474   .text.Task_SetPending:0000000000000000 Task_SetPending
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1528   .text.Task_SetPending:0000000000000038 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1533   .text.Task_SwitchStack:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1540   .text.Task_SwitchStack:0000000000000000 Task_SwitchStack
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 123


/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1558   .text.Task_SwitchStack:0000000000000010 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1564   .text.Task_Get_HighestRank_PndTask:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1571   .text.Task_Get_HighestRank_PndTask:0000000000000000 Task_Get_HighestRank_PndTask
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1649   .text.Task_Get_HighestRank_PndTask:0000000000000054 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1656   .text.Task_SaveCurProc:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1663   .text.Task_SaveCurProc:0000000000000000 Task_SaveCurProc
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1717   .text.Task_SaveCurProc:0000000000000024 CurrentTCBConst_Tmp3
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1717   .text.Task_SaveCurProc:0000000000000024 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3326   .bss.CurTsk_TCB:0000000000000000 CurTsk_TCB
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1726   .text.Task_Load:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1733   .text.Task_Load:0000000000000000 Task_Load
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1792   .text.Load_FirstTask:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1799   .text.Load_FirstTask:0000000000000000 Load_FirstTask
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1819   .text.Task_SwitchContext:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1826   .text.Task_SwitchContext:0000000000000000 Task_SwitchContext
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1944   .text.Task_SwitchContext:000000000000005c CurrentTCBConst_Tmp
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1944   .text.Task_SwitchContext:000000000000005c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1957   .text.Task_Get_HighestRank_RdyTask:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:1964   .text.Task_Get_HighestRank_RdyTask:0000000000000000 Task_Get_HighestRank_RdyTask
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2046   .text.Task_Get_HighestRank_RdyTask:0000000000000054 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2053   .text.Task_SetNextTask_Ptr:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2060   .text.Task_SetNextTask_Ptr:0000000000000000 Task_SetNextTask_Ptr
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2092   .text.Task_SetNextTask_Ptr:0000000000000014 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2098   .text.Task_TriggerPendSV:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2105   .text.Task_TriggerPendSV:0000000000000000 Task_TriggerPendSV
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2115   *ABS*:00000000e000ed04 NVIC_INT_CTRL
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2119   *ABS*:0000000010000000 NVIC_PENDSVSET
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2144   .text.Task_Scheduler:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2151   .text.Task_Scheduler:0000000000000000 Task_Scheduler
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2456   .text.Task_Scheduler:000000000000014c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2468   .text.Task_Force_TriggerPendSV:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2475   .text.Task_Force_TriggerPendSV:0000000000000000 Task_Force_TriggerPendSV
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2506   .text.Task_Get_TaskNum:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2513   .text.Task_Get_TaskNum:0000000000000000 Task_Get_TaskNum
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2528   .text.Task_Get_TaskNum:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2536   .text.Task_Create:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2543   .text.Task_Create:0000000000000000 Task_Create
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2897   .text.Task_Create:00000000000001d8 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2909   .text.Task_Remove:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2916   .text.Task_Remove:0000000000000000 Task_Remove
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2972   .text.Task_Remove:0000000000000030 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2977   .text.TaskSystem_Start:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2984   .text.TaskSystem_Start:0000000000000000 TaskSystem_Start
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3064   .text.TaskSystem_Start:000000000000005c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3073   .text.Task_SetRunState:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3080   .text.Task_SetRunState:0000000000000000 Task_SetRunState
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3097   .text.Task_Get_IdleUS:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3104   .text.Task_Get_IdleUS:0000000000000000 Task_Get_IdleUS
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3119   .text.Task_Get_IdleUS:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3124   .text.Task_Get_IdleOcupy:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3131   .text.Task_Get_IdleOcupy:0000000000000000 Task_Get_IdleOcupy
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3146   .text.Task_Get_IdleOcupy:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3151   .text.TaskSys_Set_State:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3158   .text.TaskSys_Set_State:0000000000000000 TaskSys_Set_State
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3175   .text.TaskSys_Set_State:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3180   .text.TaskSys_Get_State:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3187   .text.TaskSys_Get_State:0000000000000000 TaskSys_Get_State
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 124


/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3203   .text.TaskSys_Get_State:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3208   .text.Task_GetInfo_ByIndex:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3215   .text.Task_GetInfo_ByIndex:0000000000000000 Task_GetInfo_ByIndex
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3231   .text.Task_GetCurrentRunTask:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3238   .text.Task_GetCurrentRunTask:0000000000000000 Task_GetCurrentRunTask
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3253   .text.Task_GetCurrentRunTask:0000000000000008 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3258   .text.Task_Statistic_Cast:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3265   .text.Task_Statistic_Cast:0000000000000000 Task_Statistic_Cast
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3303   .text.Task_Statistic_Cast:000000000000001c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3340   .bss.NxtTsk_TCB:0000000000000000 NxtTsk_TCB
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3347   .bss.PndHstTsk_Ptr:0000000000000000 PndHstTsk_Ptr
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3333   .bss.NxtRunTsk_Ptr:0000000000000000 NxtRunTsk_Ptr
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3319   .bss.CurRunTsk_Ptr:0000000000000000 CurRunTsk_Ptr
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3388   .bss.Task_Ptr:0000000000000000 Task_Ptr
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3315   .bss.CurRunTsk_Ptr:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3322   .bss.CurTsk_TCB:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3329   .bss.NxtRunTsk_Ptr:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3336   .bss.NxtTsk_TCB:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3343   .bss.PndHstTsk_Ptr:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3350   .bss.TaskSys_Idle_Ocupy:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3354   .bss.TaskSys_Idle_Ocupy:0000000000000000 TaskSys_Idle_Ocupy
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3357   .bss.TaskSys_Idle_US:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3361   .bss.TaskSys_Idle_US:0000000000000000 TaskSys_Idle_US
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3364   .bss.TaskSys_StartTime:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3368   .bss.TaskSys_StartTime:0000000000000000 TaskSys_StartTime
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3371   .bss.Task_OS_ExpStkBase:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3378   .bss.Task_OS_StkMem:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3384   .bss.Task_Ptr:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3391   .bss.TskCrt_RegList:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3395   .bss.TskCrt_RegList:0000000000000000 TskCrt_RegList
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3398   .bss.TskHdl_BlkMap:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3402   .bss.TskHdl_BlkMap:0000000000000000 TskHdl_BlkMap
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3405   .bss.TskHdl_PndMap:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3409   .bss.TskHdl_PndMap:0000000000000000 TskHdl_PndMap
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3412   .bss.TskHdl_RdyMap:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3416   .bss.TskHdl_RdyMap:0000000000000000 TskHdl_RdyMap
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3422   .bss.TskSys_state:0000000000000000 TskSys_state
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3423   .bss.TskSys_state:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3428   .bss.i.0:0000000000000000 i.0
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3429   .bss.i.0:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3434   .bss.taskOs_InitState.1:0000000000000000 taskOs_InitState.1
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3435   .bss.taskOs_InitState.1:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3440   .bss.traverse_start:0000000000000000 traverse_start
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3441   .bss.traverse_start:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3443   .rodata.Tsk_Handle:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:3447   .rodata.Tsk_Handle:0000000000000000 Tsk_Handle
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:2143   .text.Task_TriggerPendSV:000000000000000a $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:11000  .text.Task_TriggerPendSV:000000000000000c $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:11000  .text.Task_Load:0000000000000020 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s:11000  .text.Task_SetPendSVPro:0000000000000018 $d

UNDEFINED SYMBOLS
List_ItemInit
RuntimeObj_Reset
memset
__aeabi_ul2f
Get_CurrentRunningUs
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccifzlVD.s 			page 125


Get_TimeDifference_Between
Get_TargetRunTime
RuntimeObj_CompareWithCurrent
List_traverse
__aeabi_ui2d
__aeabi_ddiv
__aeabi_d2uiz
MMU_Malloc
List_Init
List_Insert_Item
MMU_Free
Runtime_Config
Runtime_Set_start_Callback
Runtime_Set_stop_Callback
Runtime_Set_tick_Callback
Runtime_Start
