ARM GAS  /tmp/ccUTxatF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"task_manager.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Task_Exit,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Task_Exit:
  26              	.LFB129:
  27              		.file 1 "SYS/task_manager/task_manager.c"
   1:SYS/task_manager/task_manager.c **** #include "task_manager.h"
   2:SYS/task_manager/task_manager.c **** #include "runtime.h"
   3:SYS/task_manager/task_manager.c **** #include "string.h"
   4:SYS/task_manager/task_manager.c **** #include "stddef.h"
   5:SYS/task_manager/task_manager.c **** #include "periph_gpio.h"
   6:SYS/task_manager/task_manager.c **** #include "periph_timer.h"
   7:SYS/task_manager/task_manager.c **** #include <stdio.h>
   8:SYS/task_manager/task_manager.c **** #include "task_manager_cfg.h"
   9:SYS/task_manager/task_manager.c **** #include "binary_tree.h"
  10:SYS/task_manager/task_manager.c **** #include "linked_list.h"
  11:SYS/task_manager/task_manager.c **** #include "mmu.h"
  12:SYS/task_manager/task_manager.c **** 
  13:SYS/task_manager/task_manager.c **** //coder: 8_B!T0
  14:SYS/task_manager/task_manager.c **** //bref:
  15:SYS/task_manager/task_manager.c **** //estabishment a task running system with priority calling functional
  16:SYS/task_manager/task_manager.c **** //alway calling the highest priority function in all function under the ready table
  17:SYS/task_manager/task_manager.c **** //reference to ucos (version earler than v8.6)
  18:SYS/task_manager/task_manager.c **** 
  19:SYS/task_manager/task_manager.c **** /*
  20:SYS/task_manager/task_manager.c **** *******************************   TASK Handle    *******************************
  21:SYS/task_manager/task_manager.c **** 
  22:SYS/task_manager/task_manager.c ****              task0   task1   task2   task3   task4   task5   task6   task7
  23:SYS/task_manager/task_manager.c **** group0     |_______|_______|_______|_______|_______|_______|_______|_______|
  24:SYS/task_manager/task_manager.c **** group1     |_______|_______|_______|_______|_______|_______|_______|_______|
  25:SYS/task_manager/task_manager.c **** group2     |_______|_______|_______|_______|_______|_______|_______|_______|
  26:SYS/task_manager/task_manager.c **** group3     |_______|_______|_______|_______|_______|_______|_______|_______|
  27:SYS/task_manager/task_manager.c **** group4     |_______|_______|_______|_______|_______|_______|_______|_______|
  28:SYS/task_manager/task_manager.c **** group5     |_______|_______|_______|_______|_______|_______|_______|_______|
  29:SYS/task_manager/task_manager.c **** group6     |_______|_______|_______|_______|_______|_______|_______|_______|
  30:SYS/task_manager/task_manager.c **** group7     |_______|_______|_______|_______|_______|_______|_______|_______|
  31:SYS/task_manager/task_manager.c **** 
ARM GAS  /tmp/ccUTxatF.s 			page 2


  32:SYS/task_manager/task_manager.c **** */
  33:SYS/task_manager/task_manager.c **** 
  34:SYS/task_manager/task_manager.c **** #define GET_TASKGROUP_PRIORITY(x) x >> 3
  35:SYS/task_manager/task_manager.c **** #define GET_TASKINGROUP_PRIORITY(y) y & 0X07
  36:SYS/task_manager/task_manager.c **** 
  37:SYS/task_manager/task_manager.c **** static const uint8_t Tsk_Handle[256] = {0, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x00 ~ 0
  38:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x10 ~ 0
  39:SYS/task_manager/task_manager.c ****                                         5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x20 ~ 0
  40:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x30 ~ 0
  41:SYS/task_manager/task_manager.c ****                                         6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x40 ~ 0
  42:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x50 ~ 0
  43:SYS/task_manager/task_manager.c ****                                         5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x60 ~ 0
  44:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x70 ~ 0
  45:SYS/task_manager/task_manager.c ****                                         7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x80 ~ 0
  46:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0x90 ~ 0
  47:SYS/task_manager/task_manager.c ****                                         5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0xA0 ~ 0
  48:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0xB0 ~ 0
  49:SYS/task_manager/task_manager.c ****                                         6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0xC0 ~ 0
  50:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0xD0 ~ 0
  51:SYS/task_manager/task_manager.c ****                                         5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,  //0xE0 ~ 0
  52:SYS/task_manager/task_manager.c ****                                         4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0}; //0xF0 ~ 0
  53:SYS/task_manager/task_manager.c **** 
  54:SYS/task_manager/task_manager.c **** Task *Task_Ptr[Group_Sum][Task_Priority_Sum];
  55:SYS/task_manager/task_manager.c **** volatile Task *CurRunTsk_Ptr = NULL;
  56:SYS/task_manager/task_manager.c **** volatile Task *NxtRunTsk_Ptr = NULL;
  57:SYS/task_manager/task_manager.c **** static bool traverse_start = false;
  58:SYS/task_manager/task_manager.c **** 
  59:SYS/task_manager/task_manager.c **** static volatile TskMap_State TskHdl_RdyMap = {.Grp = 0, .TskInGrp[0] = 0, .TskInGrp[1] = 0, .TskInG
  60:SYS/task_manager/task_manager.c **** static volatile TskMap_State TskHdl_PndMap = {.Grp = 0, .TskInGrp[0] = 0, .TskInGrp[1] = 0, .TskInG
  61:SYS/task_manager/task_manager.c **** static volatile TskMap_State TskHdl_BlkMap = {.Grp = 0, .TskInGrp[0] = 0, .TskInGrp[1] = 0, .TskInG
  62:SYS/task_manager/task_manager.c **** 
  63:SYS/task_manager/task_manager.c **** static Task_Create_RegList_s TskCrt_RegList = {.num = 0,
  64:SYS/task_manager/task_manager.c ****                                                .list = {.prv = NULL, .nxt = NULL, .data = NULL}};
  65:SYS/task_manager/task_manager.c **** static volatile TaskSys_State TskSys_state = TaskSys_Initial;
  66:SYS/task_manager/task_manager.c **** static uint32_t TaskSys_Idle_US = 0;
  67:SYS/task_manager/task_manager.c **** static float TaskSys_Idle_Ocupy = 0.0f;
  68:SYS/task_manager/task_manager.c **** static SYSTEM_RunTime TaskSys_StartTime;
  69:SYS/task_manager/task_manager.c **** 
  70:SYS/task_manager/task_manager.c **** static void Task_SetReady(Task *tsk);
  71:SYS/task_manager/task_manager.c **** static void Task_ClearReady(Task *tsk);
  72:SYS/task_manager/task_manager.c **** 
  73:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
  74:SYS/task_manager/task_manager.c **** volatile Task *PndHstTsk_Ptr = NULL;
  75:SYS/task_manager/task_manager.c **** 
  76:SYS/task_manager/task_manager.c **** volatile TaskStack_ControlBlock CurTsk_TCB;
  77:SYS/task_manager/task_manager.c **** volatile TaskStack_ControlBlock NxtTsk_TCB;
  78:SYS/task_manager/task_manager.c **** 
  79:SYS/task_manager/task_manager.c **** static uint32_t Task_OS_StkMem[MSP_MEM_SPACE_SIZE];
  80:SYS/task_manager/task_manager.c **** uint32_t *Task_OS_ExpStkBase;
  81:SYS/task_manager/task_manager.c **** 
  82:SYS/task_manager/task_manager.c **** static void Task_SetStkPtr_Val(Task *tsk);
  83:SYS/task_manager/task_manager.c **** static void Task_ClearPending(Task *tsk);
  84:SYS/task_manager/task_manager.c **** static void Task_ClearBlock(Task *tsk);
  85:SYS/task_manager/task_manager.c **** static void Task_SetBASEPRI(uint32_t ulBASEPRI);
  86:SYS/task_manager/task_manager.c **** 
  87:SYS/task_manager/task_manager.c **** void Task_SetPending(Task *tsk);
  88:SYS/task_manager/task_manager.c **** #endif
ARM GAS  /tmp/ccUTxatF.s 			page 3


  89:SYS/task_manager/task_manager.c **** 
  90:SYS/task_manager/task_manager.c **** static void Task_Exec(Task *tsk_ptr);
  91:SYS/task_manager/task_manager.c **** static void Task_SetPendSVPro(void);
  92:SYS/task_manager/task_manager.c **** void Task_TriggerPendSV(void);
  93:SYS/task_manager/task_manager.c **** 
  94:SYS/task_manager/task_manager.c **** static void ReSet_Task_Data(Task *task)
  95:SYS/task_manager/task_manager.c **** {
  96:SYS/task_manager/task_manager.c ****     task->priority.Suction.Group_Level = 0;
  97:SYS/task_manager/task_manager.c ****     task->priority.Suction.Task_Level = 0;
  98:SYS/task_manager/task_manager.c ****     task->Task_name = NULL;
  99:SYS/task_manager/task_manager.c ****     task->exec_frq = 0;
 100:SYS/task_manager/task_manager.c ****     task->exec_interval_us = 0;
 101:SYS/task_manager/task_manager.c ****     task->Exec_Func = NULL;
 102:SYS/task_manager/task_manager.c **** 
 103:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_frq = 0;
 104:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_time_arv = 0;
 105:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_time_max = 0;
 106:SYS/task_manager/task_manager.c ****     task->Exec_status.Exec_Times = 0;
 107:SYS/task_manager/task_manager.c ****     task->Exec_status.cpu_opy = 0;
 108:SYS/task_manager/task_manager.c ****     task->Exec_status.totlal_running_time = 0;
 109:SYS/task_manager/task_manager.c **** 
 110:SYS/task_manager/task_manager.c ****     task->delay_info.on_delay = false;
 111:SYS/task_manager/task_manager.c ****     task->delay_info.tsk_hdl = 0;
 112:SYS/task_manager/task_manager.c ****     task->delay_info.time_unit = 0;
 113:SYS/task_manager/task_manager.c **** 
 114:SYS/task_manager/task_manager.c ****     List_ItemInit(&task->delay_item, &task->delay_info);
 115:SYS/task_manager/task_manager.c **** 
 116:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(task->Exec_status.Exec_Time));
 117:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(task->Exec_status.Init_Time));
 118:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(task->Exec_status.Start_Time));
 119:SYS/task_manager/task_manager.c **** 
 120:SYS/task_manager/task_manager.c ****     task->Exec_status.State = Task_Done;
 121:SYS/task_manager/task_manager.c **** }
 122:SYS/task_manager/task_manager.c **** 
 123:SYS/task_manager/task_manager.c **** static void Task_ReSet_BaseInfo(Task_Base_Info *info)
 124:SYS/task_manager/task_manager.c **** {
 125:SYS/task_manager/task_manager.c ****     info->avg_exec_us = 0;
 126:SYS/task_manager/task_manager.c ****     info->cpu_opy = 0;
 127:SYS/task_manager/task_manager.c ****     info->exec_frq = 0;
 128:SYS/task_manager/task_manager.c ****     info->exec_times = 0;
 129:SYS/task_manager/task_manager.c ****     info->group = 0;
 130:SYS/task_manager/task_manager.c ****     info->max_exec_us = 0;
 131:SYS/task_manager/task_manager.c ****     info->priority = 0;
 132:SYS/task_manager/task_manager.c **** 
 133:SYS/task_manager/task_manager.c ****     memset(info->name, NULL, TASK_NAME_MAXLEN);
 134:SYS/task_manager/task_manager.c **** }
 135:SYS/task_manager/task_manager.c **** 
 136:SYS/task_manager/task_manager.c **** static bool TaskSys_Init(void)
 137:SYS/task_manager/task_manager.c **** {
 138:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 139:SYS/task_manager/task_manager.c ****     //init OS Stack Memory Space
 140:SYS/task_manager/task_manager.c ****     memset(Task_OS_StkMem, NULL, MSP_MEM_SPACE_SIZE);
 141:SYS/task_manager/task_manager.c **** 
 142:SYS/task_manager/task_manager.c ****     Task_OS_ExpStkBase = Task_OS_StkMem + MSP_MEM_SPACE_SIZE - 1;
 143:SYS/task_manager/task_manager.c **** #endif
 144:SYS/task_manager/task_manager.c **** 
 145:SYS/task_manager/task_manager.c ****     //periph_Timer_CounterMode_Init(Timer_4, TimerCounter_1M_Prescaler, TimerCounter_1us_Period, 0,
ARM GAS  /tmp/ccUTxatF.s 			page 4


 146:SYS/task_manager/task_manager.c ****     //periph_Timer_Counter_SetEnable(Timer_4, DISABLE);
 147:SYS/task_manager/task_manager.c **** 
 148:SYS/task_manager/task_manager.c ****     uint8_t index = 0;
 149:SYS/task_manager/task_manager.c **** 
 150:SYS/task_manager/task_manager.c ****     for (uint8_t group_index = Group_0; group_index < Group_Sum; group_index++)
 151:SYS/task_manager/task_manager.c ****     {
 152:SYS/task_manager/task_manager.c ****         for (uint8_t task_priority = Task_Priority_0; task_priority < Task_Priority_Sum; task_prior
 153:SYS/task_manager/task_manager.c ****         {
 154:SYS/task_manager/task_manager.c ****             ReSet_Task_Data(Task_Ptr[group_index][task_priority]);
 155:SYS/task_manager/task_manager.c **** 
 156:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 157:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->Stack_Depth = 0;
 158:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Stack = NULL;
 159:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Top_Stk_Ptr = NULL;
 160:SYS/task_manager/task_manager.c **** #endif
 161:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority] = NULL;
 162:SYS/task_manager/task_manager.c **** 
 163:SYS/task_manager/task_manager.c ****             index++;
 164:SYS/task_manager/task_manager.c ****         }
 165:SYS/task_manager/task_manager.c ****     }
 166:SYS/task_manager/task_manager.c **** 
 167:SYS/task_manager/task_manager.c ****     TskCrt_RegList.num = 0;
 168:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.data = NULL;
 169:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.nxt = NULL;
 170:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.prv = NULL;
 171:SYS/task_manager/task_manager.c **** 
 172:SYS/task_manager/task_manager.c ****     ReSet_Task_Data(CurRunTsk_Ptr);
 173:SYS/task_manager/task_manager.c ****     TskSys_state = TaskSys_Prepare;
 174:SYS/task_manager/task_manager.c **** 
 175:SYS/task_manager/task_manager.c ****     NVIC_SetPriority(PendSV_IRQn, 15);
 176:SYS/task_manager/task_manager.c **** }
 177:SYS/task_manager/task_manager.c **** 
 178:SYS/task_manager/task_manager.c **** static void Task_Exit(void)
 179:SYS/task_manager/task_manager.c **** {
  28              		.loc 1 179 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
 180:SYS/task_manager/task_manager.c ****     //task caller will not exit
 181:SYS/task_manager/task_manager.c ****     while (true)
  35              		.loc 1 181 5 discriminator 1 view .LVU1
 182:SYS/task_manager/task_manager.c ****     {
 183:SYS/task_manager/task_manager.c ****     }
  36              		.loc 1 183 5 discriminator 1 view .LVU2
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE129:
  41              		.section	.text.Task_SetBASEPRI,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	Task_SetBASEPRI:
ARM GAS  /tmp/ccUTxatF.s 			page 5


  49              	.LVL0:
  50              	.LFB137:
 184:SYS/task_manager/task_manager.c **** }
 185:SYS/task_manager/task_manager.c **** 
 186:SYS/task_manager/task_manager.c **** static void Task_Idle(void)
 187:SYS/task_manager/task_manager.c **** {
 188:SYS/task_manager/task_manager.c ****     SYSTEM_RunTime cur_time;
 189:SYS/task_manager/task_manager.c ****     SYSTEM_RunTime time_diff;
 190:SYS/task_manager/task_manager.c **** 
 191:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&time_diff);
 192:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&cur_time);
 193:SYS/task_manager/task_manager.c **** 
 194:SYS/task_manager/task_manager.c ****     cur_time = Get_CurrentRunningUs();
 195:SYS/task_manager/task_manager.c ****     time_diff = Get_TimeDifference_Between(TaskSys_StartTime, cur_time);
 196:SYS/task_manager/task_manager.c **** 
 197:SYS/task_manager/task_manager.c ****     TaskSys_Idle_US++;
 198:SYS/task_manager/task_manager.c ****     TaskSys_Idle_Ocupy = (TaskSys_Idle_US / (float)time_diff);
 199:SYS/task_manager/task_manager.c **** }
 200:SYS/task_manager/task_manager.c **** 
 201:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 202:SYS/task_manager/task_manager.c **** 
 203:SYS/task_manager/task_manager.c **** void Task_Resume_FromBlock(Task *tsk)
 204:SYS/task_manager/task_manager.c **** {
 205:SYS/task_manager/task_manager.c ****     Task_ClearBlock(tsk);
 206:SYS/task_manager/task_manager.c ****     Task_SetReady(tsk);
 207:SYS/task_manager/task_manager.c **** 
 208:SYS/task_manager/task_manager.c ****     tsk->Exec_status.State = Task_Running;
 209:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Top_Stk_Ptr = &tsk->TCB.Top_Stk_Ptr;
 210:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Stack = tsk->TCB.Stack;
 211:SYS/task_manager/task_manager.c ****     CurRunTsk_Ptr = tsk;
 212:SYS/task_manager/task_manager.c **** }
 213:SYS/task_manager/task_manager.c **** 
 214:SYS/task_manager/task_manager.c **** void Task_SetBlock(Task *tsk)
 215:SYS/task_manager/task_manager.c **** {
 216:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 217:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 218:SYS/task_manager/task_manager.c **** 
 219:SYS/task_manager/task_manager.c ****     //set current group block
 220:SYS/task_manager/task_manager.c ****     TskHdl_BlkMap.Grp.Flg |= 1 << grp_id;
 221:SYS/task_manager/task_manager.c ****     //set current task under this group flag to block
 222:SYS/task_manager/task_manager.c ****     TskHdl_BlkMap.TskInGrp[grp_id].Flg |= 1 << tsk_id;
 223:SYS/task_manager/task_manager.c **** 
 224:SYS/task_manager/task_manager.c ****     //reset task in ready reg group
 225:SYS/task_manager/task_manager.c ****     TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 226:SYS/task_manager/task_manager.c ****     //if no task ready then clear group reg
 227:SYS/task_manager/task_manager.c ****     if (TskHdl_RdyMap.TskInGrp[grp_id].Flg == 0)
 228:SYS/task_manager/task_manager.c ****     {
 229:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.Grp.Flg &= ~(1 << grp_id);
 230:SYS/task_manager/task_manager.c ****     }
 231:SYS/task_manager/task_manager.c **** 
 232:SYS/task_manager/task_manager.c ****     //set task state
 233:SYS/task_manager/task_manager.c ****     tsk->Exec_status.State = Task_Block;
 234:SYS/task_manager/task_manager.c **** 
 235:SYS/task_manager/task_manager.c ****     CurRunTsk_Ptr = NULL;
 236:SYS/task_manager/task_manager.c **** 
 237:SYS/task_manager/task_manager.c ****     Task_SetBASEPRI(0);
 238:SYS/task_manager/task_manager.c **** }
ARM GAS  /tmp/ccUTxatF.s 			page 6


 239:SYS/task_manager/task_manager.c **** 
 240:SYS/task_manager/task_manager.c **** void Task_SetPending(Task *tsk)
 241:SYS/task_manager/task_manager.c **** {
 242:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 243:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 244:SYS/task_manager/task_manager.c **** 
 245:SYS/task_manager/task_manager.c ****     //set current group pending
 246:SYS/task_manager/task_manager.c ****     TskHdl_PndMap.Grp.Flg |= 1 << grp_id;
 247:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 248:SYS/task_manager/task_manager.c ****     TskHdl_PndMap.TskInGrp[grp_id].Flg |= 1 << tsk_id;
 249:SYS/task_manager/task_manager.c **** 
 250:SYS/task_manager/task_manager.c ****     //set task state
 251:SYS/task_manager/task_manager.c ****     tsk->Exec_status.State = Task_Pending;
 252:SYS/task_manager/task_manager.c **** }
 253:SYS/task_manager/task_manager.c **** 
 254:SYS/task_manager/task_manager.c **** void Task_SwitchStack(void)
 255:SYS/task_manager/task_manager.c **** {
 256:SYS/task_manager/task_manager.c ****     CurTsk_TCB = NxtTsk_TCB;
 257:SYS/task_manager/task_manager.c **** }
 258:SYS/task_manager/task_manager.c **** 
 259:SYS/task_manager/task_manager.c **** Task *Task_Get_HighestRank_PndTask(void)
 260:SYS/task_manager/task_manager.c **** {
 261:SYS/task_manager/task_manager.c ****     uint8_t grp_id;
 262:SYS/task_manager/task_manager.c ****     uint8_t tsk_id;
 263:SYS/task_manager/task_manager.c **** 
 264:SYS/task_manager/task_manager.c ****     if (TskHdl_PndMap.Grp.Flg)
 265:SYS/task_manager/task_manager.c ****     {
 266:SYS/task_manager/task_manager.c ****         //find group
 267:SYS/task_manager/task_manager.c ****         grp_id = Tsk_Handle[TskHdl_PndMap.Grp.Flg];
 268:SYS/task_manager/task_manager.c ****         //find task in group
 269:SYS/task_manager/task_manager.c ****         tsk_id = Tsk_Handle[TskHdl_PndMap.TskInGrp[grp_id].Flg];
 270:SYS/task_manager/task_manager.c ****     }
 271:SYS/task_manager/task_manager.c ****     else
 272:SYS/task_manager/task_manager.c ****         return NULL;
 273:SYS/task_manager/task_manager.c **** 
 274:SYS/task_manager/task_manager.c ****     if (Task_Ptr[grp_id][tsk_id] != NULL)
 275:SYS/task_manager/task_manager.c ****     {
 276:SYS/task_manager/task_manager.c ****         return Task_Ptr[grp_id][tsk_id];
 277:SYS/task_manager/task_manager.c ****     }
 278:SYS/task_manager/task_manager.c ****     else
 279:SYS/task_manager/task_manager.c ****     {
 280:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.Grp.Flg &= ~(1 << grp_id);
 281:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 282:SYS/task_manager/task_manager.c ****         return NULL;
 283:SYS/task_manager/task_manager.c ****     }
 284:SYS/task_manager/task_manager.c **** }
 285:SYS/task_manager/task_manager.c **** 
 286:SYS/task_manager/task_manager.c **** static uint32_t Task_EnterCritical(void)
 287:SYS/task_manager/task_manager.c **** {
 288:SYS/task_manager/task_manager.c ****     /* Set BASEPRI to the max syscall priority to effect a critical
 289:SYS/task_manager/task_manager.c **** 	section. */
 290:SYS/task_manager/task_manager.c ****     uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 291:SYS/task_manager/task_manager.c **** 
 292:SYS/task_manager/task_manager.c ****     __asm volatile(
 293:SYS/task_manager/task_manager.c ****         "	mrs %0, basepri											\n"
 294:SYS/task_manager/task_manager.c ****         "	mov %1, %2												\n"
 295:SYS/task_manager/task_manager.c ****         "	msr basepri, %1											\n"
ARM GAS  /tmp/ccUTxatF.s 			page 7


 296:SYS/task_manager/task_manager.c ****         "	isb														\n"
 297:SYS/task_manager/task_manager.c ****         "	dsb														\n"
 298:SYS/task_manager/task_manager.c ****         : "=r"(ulOriginalBASEPRI), "=r"(ulNewBASEPRI)
 299:SYS/task_manager/task_manager.c ****         : "i"(80)
 300:SYS/task_manager/task_manager.c ****         : "memory");
 301:SYS/task_manager/task_manager.c **** 
 302:SYS/task_manager/task_manager.c ****     /* This return will not be reached but is necessary to prevent compiler
 303:SYS/task_manager/task_manager.c **** 	warnings. */
 304:SYS/task_manager/task_manager.c ****     return ulOriginalBASEPRI;
 305:SYS/task_manager/task_manager.c **** }
 306:SYS/task_manager/task_manager.c **** 
 307:SYS/task_manager/task_manager.c **** __attribute__((nake)) static void Task_SetBASEPRI(uint32_t ulBASEPRI)
 308:SYS/task_manager/task_manager.c **** {
  51              		.loc 1 308 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
 309:SYS/task_manager/task_manager.c ****     __ASM("	msr basepri, %0	" ::"r"(ulBASEPRI)
  56              		.loc 1 309 5 view .LVU4
  57              		.syntax unified
  58              	@ 309 "SYS/task_manager/task_manager.c" 1
  59 0000 80F31188 			msr basepri, r0	
  60              	@ 0 "" 2
 310:SYS/task_manager/task_manager.c ****           : "memory");
 311:SYS/task_manager/task_manager.c **** }
  61              		.loc 1 311 1 is_stmt 0 view .LVU5
  62              		.thumb
  63              		.syntax unified
  64 0004 7047     		bx	lr
  65              		.cfi_endproc
  66              	.LFE137:
  68              		.section	.text.Task_SetReady,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	Task_SetReady:
  76              	.LVL1:
  77              	.LFB145:
 312:SYS/task_manager/task_manager.c **** 
 313:SYS/task_manager/task_manager.c **** __attribute__((naked)) static void Task_ExitCritical(void)
 314:SYS/task_manager/task_manager.c **** {
 315:SYS/task_manager/task_manager.c ****     /* Barrier instructions are not used as this function is only used to
 316:SYS/task_manager/task_manager.c **** 	lower the BASEPRI value. */
 317:SYS/task_manager/task_manager.c ****     __ASM("	msr basepri, %0	" ::"r"(0)
 318:SYS/task_manager/task_manager.c ****           : "memory");
 319:SYS/task_manager/task_manager.c **** }
 320:SYS/task_manager/task_manager.c **** 
 321:SYS/task_manager/task_manager.c **** __attribute__((naked)) static void Task_Recover(void)
 322:SYS/task_manager/task_manager.c **** {
 323:SYS/task_manager/task_manager.c ****     __ASM("LDR	  R3, CurrentTCBConst_Tmp2");
 324:SYS/task_manager/task_manager.c ****     __ASM("LDR    R1, [R3]");
 325:SYS/task_manager/task_manager.c ****     __ASM("LDR    R0, [R1]");
 326:SYS/task_manager/task_manager.c **** 
 327:SYS/task_manager/task_manager.c ****     __ASM("LDMIA  R0!, {R4-R11, R14}");
ARM GAS  /tmp/ccUTxatF.s 			page 8


 328:SYS/task_manager/task_manager.c **** 
 329:SYS/task_manager/task_manager.c ****     __ASM("MSR    PSP, R0");
 330:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 331:SYS/task_manager/task_manager.c ****     __ASM("BX     R14");
 332:SYS/task_manager/task_manager.c ****     __ASM(".ALIGN 4");
 333:SYS/task_manager/task_manager.c ****     __ASM("CurrentTCBConst_Tmp2: .word CurTsk_TCB");
 334:SYS/task_manager/task_manager.c **** }
 335:SYS/task_manager/task_manager.c **** 
 336:SYS/task_manager/task_manager.c **** __attribute__((naked)) void Task_SaveCurProc(void)
 337:SYS/task_manager/task_manager.c **** {
 338:SYS/task_manager/task_manager.c ****     __ASM("MRS    R0, PSP");
 339:SYS/task_manager/task_manager.c ****     __ASM("LDR	  R3, CurrentTCBConst_Tmp3");
 340:SYS/task_manager/task_manager.c ****     __ASM("LDR    R2, [R3]");
 341:SYS/task_manager/task_manager.c **** 
 342:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 343:SYS/task_manager/task_manager.c **** 
 344:SYS/task_manager/task_manager.c ****     __ASM("STMDB    R0!, {R4-R11, R14}");
 345:SYS/task_manager/task_manager.c ****     __ASM("STR      R0, [R2]");
 346:SYS/task_manager/task_manager.c **** 
 347:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 348:SYS/task_manager/task_manager.c ****     __ASM("TST      R14, #0x10");
 349:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 350:SYS/task_manager/task_manager.c ****     __ASM("VSTMDBEQ R0!, {s16-s31}");
 351:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 352:SYS/task_manager/task_manager.c **** 
 353:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 354:SYS/task_manager/task_manager.c ****     __ASM("BX       R14");
 355:SYS/task_manager/task_manager.c **** 
 356:SYS/task_manager/task_manager.c ****     __ASM("CurrentTCBConst_Tmp3: .word CurTsk_TCB");
 357:SYS/task_manager/task_manager.c **** }
 358:SYS/task_manager/task_manager.c **** 
 359:SYS/task_manager/task_manager.c **** __attribute__((naked)) void Task_Load(void)
 360:SYS/task_manager/task_manager.c **** {
 361:SYS/task_manager/task_manager.c ****     __ASM("LDR	  R3, =CurTsk_TCB");
 362:SYS/task_manager/task_manager.c ****     __ASM("LDR    R1, [R3]");
 363:SYS/task_manager/task_manager.c ****     __ASM("LDR    R0, [R1]");
 364:SYS/task_manager/task_manager.c **** 
 365:SYS/task_manager/task_manager.c ****     __ASM("LDMIA  R0!, {R4-R11, R14}");
 366:SYS/task_manager/task_manager.c **** 
 367:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 368:SYS/task_manager/task_manager.c ****     __ASM("TST      R14, #0x10");
 369:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 370:SYS/task_manager/task_manager.c ****     __ASM("VLDMIAEQ R0!, {s16-s31}");
 371:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 372:SYS/task_manager/task_manager.c **** 
 373:SYS/task_manager/task_manager.c ****     __ASM("MSR    PSP, R0");
 374:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 375:SYS/task_manager/task_manager.c ****     //__ASM("MOV    R0, #240");
 376:SYS/task_manager/task_manager.c ****     //__ASM("MSR	  BASEPRI, R0");
 377:SYS/task_manager/task_manager.c ****     __ASM("BX     R14");
 378:SYS/task_manager/task_manager.c ****     __ASM(".ALIGN 4");
 379:SYS/task_manager/task_manager.c **** }
 380:SYS/task_manager/task_manager.c **** 
 381:SYS/task_manager/task_manager.c **** void Load_FirstTask(void)
 382:SYS/task_manager/task_manager.c **** {
 383:SYS/task_manager/task_manager.c ****     Task_Load();
 384:SYS/task_manager/task_manager.c **** }
ARM GAS  /tmp/ccUTxatF.s 			page 9


 385:SYS/task_manager/task_manager.c **** 
 386:SYS/task_manager/task_manager.c **** __attribute__((naked)) void Task_SwitchContext(void)
 387:SYS/task_manager/task_manager.c **** {
 388:SYS/task_manager/task_manager.c ****     __ASM("MRS      R0, PSP");
 389:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 390:SYS/task_manager/task_manager.c **** 
 391:SYS/task_manager/task_manager.c ****     __ASM("LDR      R3, CurrentTCBConst_Tmp");
 392:SYS/task_manager/task_manager.c ****     __ASM("LDR      R2, [R3]");
 393:SYS/task_manager/task_manager.c **** 
 394:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 395:SYS/task_manager/task_manager.c ****     __ASM("TST      R14, #0x10");
 396:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 397:SYS/task_manager/task_manager.c ****     __ASM("VSTMDBEQ R0!, {s16-s31}");
 398:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 399:SYS/task_manager/task_manager.c **** 
 400:SYS/task_manager/task_manager.c ****     __ASM("STMDB    R0!, {R4-R11, R14}");
 401:SYS/task_manager/task_manager.c ****     __ASM("STR      R0, [R2]");
 402:SYS/task_manager/task_manager.c **** 
 403:SYS/task_manager/task_manager.c ****     __ASM("STMDB    SP!, {R0, R3}");
 404:SYS/task_manager/task_manager.c ****     __ASM("MOV      R0, %0" ::"i"(0x50));
 405:SYS/task_manager/task_manager.c ****     __ASM("MSR      BASEPRI, R0");
 406:SYS/task_manager/task_manager.c **** 
 407:SYS/task_manager/task_manager.c ****     __ASM("DSB");
 408:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 409:SYS/task_manager/task_manager.c **** 
 410:SYS/task_manager/task_manager.c ****     __ASM("BL       Task_SwitchStack");
 411:SYS/task_manager/task_manager.c **** 
 412:SYS/task_manager/task_manager.c ****     __ASM("MOV      R0, #0");
 413:SYS/task_manager/task_manager.c ****     __ASM("MSR      BASEPRI, R0");
 414:SYS/task_manager/task_manager.c ****     __ASM("LDMIA    SP!, {R0, R3}");
 415:SYS/task_manager/task_manager.c **** 
 416:SYS/task_manager/task_manager.c ****     __ASM("LDR      R1, [R3]");
 417:SYS/task_manager/task_manager.c ****     __ASM("LDR      R0, [R1]");
 418:SYS/task_manager/task_manager.c **** 
 419:SYS/task_manager/task_manager.c ****     __ASM("LDMIA    R0!, {R4-R11, R14}");
 420:SYS/task_manager/task_manager.c **** 
 421:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 422:SYS/task_manager/task_manager.c ****     __ASM("TST      R14, #0x10");
 423:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 424:SYS/task_manager/task_manager.c ****     __ASM("VLDMIAEQ R0!, {s16-s31}");
 425:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 426:SYS/task_manager/task_manager.c **** 
 427:SYS/task_manager/task_manager.c ****     __ASM("MSR      PSP,R0");
 428:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 429:SYS/task_manager/task_manager.c ****     //__ASM("MOV      R0, #240");
 430:SYS/task_manager/task_manager.c ****     //__ASM("MSR	    BASEPRI, R0");
 431:SYS/task_manager/task_manager.c ****     __ASM("BX       R14");
 432:SYS/task_manager/task_manager.c **** 
 433:SYS/task_manager/task_manager.c ****     __ASM("CurrentTCBConst_Tmp: .word CurTsk_TCB");
 434:SYS/task_manager/task_manager.c ****     __ASM(".ALIGN 4");
 435:SYS/task_manager/task_manager.c **** }
 436:SYS/task_manager/task_manager.c **** 
 437:SYS/task_manager/task_manager.c **** static void Task_SetStkPtr_Val(Task *tsk)
 438:SYS/task_manager/task_manager.c **** {
 439:SYS/task_manager/task_manager.c ****     uint32_t *Tsk_Ptr_tmp = NULL;
 440:SYS/task_manager/task_manager.c **** 
 441:SYS/task_manager/task_manager.c ****     memset(tsk->TCB.Stack, TASK_STACK_DEFAULT, tsk->Stack_Depth * sizeof(uint32_t));
ARM GAS  /tmp/ccUTxatF.s 			page 10


 442:SYS/task_manager/task_manager.c **** 
 443:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = &tsk->TCB.Stack + (tsk->Stack_Depth - (uint32_t)1);
 444:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = (uint32_t *)((uint32_t)(Tsk_Ptr_tmp)&0XFFFFFFF8ul);
 445:SYS/task_manager/task_manager.c **** 
 446:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp--;
 447:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = 0x01000000uL; /* xPSR */
 448:SYS/task_manager/task_manager.c **** 
 449:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp--;
 450:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = ((uint32_t)Task_Caller) & 0xfffffffeUL; /* PC */
 451:SYS/task_manager/task_manager.c **** 
 452:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp--;
 453:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = (uint32_t)Task_Exit; /* LR */
 454:SYS/task_manager/task_manager.c **** 
 455:SYS/task_manager/task_manager.c ****     /* Save code space by skipping register initialisation. */
 456:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp -= 5;              /* R12, R3, R2 and R1. */
 457:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = (uint32_t)NULL; /* R0 */
 458:SYS/task_manager/task_manager.c **** 
 459:SYS/task_manager/task_manager.c ****     /* A save method is being used that requires each task to maintain its
 460:SYS/task_manager/task_manager.c **** 	    own exec return value. */
 461:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp--;
 462:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = 0xfffffffd;
 463:SYS/task_manager/task_manager.c **** 
 464:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp -= 8; /* R11, R10, R9, R8, R7, R6, R5 and R4. */
 465:SYS/task_manager/task_manager.c **** 
 466:SYS/task_manager/task_manager.c ****     //set task stack top pointer
 467:SYS/task_manager/task_manager.c ****     tsk->TCB.Top_Stk_Ptr = Tsk_Ptr_tmp; //&Tsk_Ptr_tmp
 468:SYS/task_manager/task_manager.c **** }
 469:SYS/task_manager/task_manager.c **** 
 470:SYS/task_manager/task_manager.c **** #endif
 471:SYS/task_manager/task_manager.c **** 
 472:SYS/task_manager/task_manager.c **** static void Task_SetReady(Task *tsk)
 473:SYS/task_manager/task_manager.c **** {
  78              		.loc 1 473 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              		.loc 1 473 1 is_stmt 0 view .LVU7
  84 0000 70B4     		push	{r4, r5, r6}
  85              	.LCFI0:
  86              		.cfi_def_cfa_offset 12
  87              		.cfi_offset 4, -12
  88              		.cfi_offset 5, -8
  89              		.cfi_offset 6, -4
 474:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
  90              		.loc 1 474 5 is_stmt 1 view .LVU8
  91              		.loc 1 474 22 is_stmt 0 view .LVU9
  92 0002 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
  93              		.loc 1 474 13 view .LVU10
  94 0004 E208     		lsrs	r2, r4, #3
  95              	.LVL2:
 475:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
  96              		.loc 1 475 5 is_stmt 1 view .LVU11
  97              		.loc 1 475 13 is_stmt 0 view .LVU12
  98 0006 04F00705 		and	r5, r4, #7
  99              	.LVL3:
 476:SYS/task_manager/task_manager.c **** 
ARM GAS  /tmp/ccUTxatF.s 			page 11


 477:SYS/task_manager/task_manager.c ****     //set current group flag to ready
 478:SYS/task_manager/task_manager.c ****     TskHdl_RdyMap.Grp.Flg |= 1 << grp_id;
 100              		.loc 1 478 5 is_stmt 1 view .LVU13
 101              		.loc 1 478 27 is_stmt 0 view .LVU14
 102 000a 094B     		ldr	r3, .L6
 103 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 104              		.loc 1 478 32 view .LVU15
 105 000e 0124     		movs	r4, #1
 106 0010 04FA02F6 		lsl	r6, r4, r2
 107              		.loc 1 478 27 view .LVU16
 108 0014 3143     		orrs	r1, r1, r6
 109 0016 C9B2     		uxtb	r1, r1
 110 0018 1970     		strb	r1, [r3]
 479:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 480:SYS/task_manager/task_manager.c ****     TskHdl_RdyMap.TskInGrp[grp_id].Flg |= 1 << tsk_id;
 111              		.loc 1 480 5 is_stmt 1 view .LVU17
 112              		.loc 1 480 40 is_stmt 0 view .LVU18
 113 001a 1344     		add	r3, r3, r2
 114 001c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 115              	.LVL4:
 116              		.loc 1 480 45 view .LVU19
 117 001e AC40     		lsls	r4, r4, r5
 118              		.loc 1 480 40 view .LVU20
 119 0020 2243     		orrs	r2, r2, r4
 120 0022 D2B2     		uxtb	r2, r2
 121 0024 5A70     		strb	r2, [r3, #1]
 481:SYS/task_manager/task_manager.c **** 
 482:SYS/task_manager/task_manager.c ****     tsk->Exec_status.State = Task_Ready;
 122              		.loc 1 482 5 is_stmt 1 view .LVU21
 123              		.loc 1 482 28 is_stmt 0 view .LVU22
 124 0026 0023     		movs	r3, #0
 125 0028 80F84830 		strb	r3, [r0, #72]
 483:SYS/task_manager/task_manager.c **** }
 126              		.loc 1 483 1 view .LVU23
 127 002c 70BC     		pop	{r4, r5, r6}
 128              	.LCFI1:
 129              		.cfi_restore 6
 130              		.cfi_restore 5
 131              		.cfi_restore 4
 132              		.cfi_def_cfa_offset 0
 133              	.LVL5:
 134              		.loc 1 483 1 view .LVU24
 135 002e 7047     		bx	lr
 136              	.L7:
 137              		.align	2
 138              	.L6:
 139 0030 00000000 		.word	.LANCHOR0
 140              		.cfi_endproc
 141              	.LFE145:
 143              		.section	.text.Task_ClearBlock,"ax",%progbits
 144              		.align	1
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	Task_ClearBlock:
 151              	.LVL6:
ARM GAS  /tmp/ccUTxatF.s 			page 12


 152              	.LFB146:
 484:SYS/task_manager/task_manager.c **** 
 485:SYS/task_manager/task_manager.c **** static void Task_ClearBlock(Task *tsk)
 486:SYS/task_manager/task_manager.c **** {
 153              		.loc 1 486 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158              		.loc 1 486 1 is_stmt 0 view .LVU26
 159 0000 10B4     		push	{r4}
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 4
 162              		.cfi_offset 4, -4
 487:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 163              		.loc 1 487 5 is_stmt 1 view .LVU27
 164              		.loc 1 487 22 is_stmt 0 view .LVU28
 165 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 166              		.loc 1 487 13 view .LVU29
 167 0004 DC08     		lsrs	r4, r3, #3
 168              	.LVL7:
 488:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 169              		.loc 1 488 5 is_stmt 1 view .LVU30
 170              		.loc 1 488 13 is_stmt 0 view .LVU31
 171 0006 03F00702 		and	r2, r3, #7
 172              	.LVL8:
 489:SYS/task_manager/task_manager.c **** 
 490:SYS/task_manager/task_manager.c ****     TskHdl_BlkMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 173              		.loc 1 490 5 is_stmt 1 view .LVU32
 174              		.loc 1 490 40 is_stmt 0 view .LVU33
 175 000a 0A4B     		ldr	r3, .L11
 176 000c 2344     		add	r3, r3, r4
 177 000e 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 178              		.loc 1 490 47 view .LVU34
 179 0010 0120     		movs	r0, #1
 180              	.LVL9:
 181              		.loc 1 490 47 view .LVU35
 182 0012 00FA02F2 		lsl	r2, r0, r2
 183              	.LVL10:
 184              		.loc 1 490 40 view .LVU36
 185 0016 21EA0202 		bic	r2, r1, r2
 186 001a 5A70     		strb	r2, [r3, #1]
 187              	.LVL11:
 491:SYS/task_manager/task_manager.c ****     if (TskHdl_BlkMap.TskInGrp[grp_id].Flg == 0)
 188              		.loc 1 491 5 is_stmt 1 view .LVU37
 189              		.loc 1 491 39 is_stmt 0 view .LVU38
 190 001c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 191              		.loc 1 491 8 view .LVU39
 192 001e 33B9     		cbnz	r3, .L8
 492:SYS/task_manager/task_manager.c ****     {
 493:SYS/task_manager/task_manager.c ****         TskHdl_BlkMap.Grp.Flg &= ~(1 << grp_id);
 193              		.loc 1 493 9 is_stmt 1 view .LVU40
 194              		.loc 1 493 31 is_stmt 0 view .LVU41
 195 0020 0449     		ldr	r1, .L11
 196 0022 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 197              		.loc 1 493 38 view .LVU42
 198 0024 00FA04F4 		lsl	r4, r0, r4
ARM GAS  /tmp/ccUTxatF.s 			page 13


 199              	.LVL12:
 200              		.loc 1 493 31 view .LVU43
 201 0028 23EA0404 		bic	r4, r3, r4
 202 002c 0C70     		strb	r4, [r1]
 203              	.L8:
 494:SYS/task_manager/task_manager.c ****     }
 495:SYS/task_manager/task_manager.c **** }
 204              		.loc 1 495 1 view .LVU44
 205 002e 5DF8044B 		ldr	r4, [sp], #4
 206              	.LCFI3:
 207              		.cfi_restore 4
 208              		.cfi_def_cfa_offset 0
 209 0032 7047     		bx	lr
 210              	.L12:
 211              		.align	2
 212              	.L11:
 213 0034 00000000 		.word	.LANCHOR1
 214              		.cfi_endproc
 215              	.LFE146:
 217              		.section	.text.Task_ClearPending,"ax",%progbits
 218              		.align	1
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	Task_ClearPending:
 225              	.LVL13:
 226              	.LFB147:
 496:SYS/task_manager/task_manager.c **** 
 497:SYS/task_manager/task_manager.c **** static void Task_ClearPending(Task *tsk)
 498:SYS/task_manager/task_manager.c **** {
 227              		.loc 1 498 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232              		.loc 1 498 1 is_stmt 0 view .LVU46
 233 0000 10B4     		push	{r4}
 234              	.LCFI4:
 235              		.cfi_def_cfa_offset 4
 236              		.cfi_offset 4, -4
 499:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 237              		.loc 1 499 5 is_stmt 1 view .LVU47
 238              		.loc 1 499 22 is_stmt 0 view .LVU48
 239 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 240              		.loc 1 499 13 view .LVU49
 241 0004 DC08     		lsrs	r4, r3, #3
 242              	.LVL14:
 500:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 243              		.loc 1 500 5 is_stmt 1 view .LVU50
 244              		.loc 1 500 13 is_stmt 0 view .LVU51
 245 0006 03F00702 		and	r2, r3, #7
 246              	.LVL15:
 501:SYS/task_manager/task_manager.c **** 
 502:SYS/task_manager/task_manager.c ****     TskHdl_PndMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 247              		.loc 1 502 5 is_stmt 1 view .LVU52
 248              		.loc 1 502 40 is_stmt 0 view .LVU53
ARM GAS  /tmp/ccUTxatF.s 			page 14


 249 000a 0A4B     		ldr	r3, .L16
 250 000c 2344     		add	r3, r3, r4
 251 000e 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 252              		.loc 1 502 47 view .LVU54
 253 0010 0120     		movs	r0, #1
 254              	.LVL16:
 255              		.loc 1 502 47 view .LVU55
 256 0012 00FA02F2 		lsl	r2, r0, r2
 257              	.LVL17:
 258              		.loc 1 502 40 view .LVU56
 259 0016 21EA0202 		bic	r2, r1, r2
 260 001a 5A70     		strb	r2, [r3, #1]
 261              	.LVL18:
 503:SYS/task_manager/task_manager.c ****     if (TskHdl_PndMap.TskInGrp[grp_id].Flg == 0)
 262              		.loc 1 503 5 is_stmt 1 view .LVU57
 263              		.loc 1 503 39 is_stmt 0 view .LVU58
 264 001c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 265              		.loc 1 503 8 view .LVU59
 266 001e 33B9     		cbnz	r3, .L13
 504:SYS/task_manager/task_manager.c ****     {
 505:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.Grp.Flg &= ~(1 << grp_id);
 267              		.loc 1 505 9 is_stmt 1 view .LVU60
 268              		.loc 1 505 31 is_stmt 0 view .LVU61
 269 0020 0449     		ldr	r1, .L16
 270 0022 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 271              		.loc 1 505 38 view .LVU62
 272 0024 00FA04F4 		lsl	r4, r0, r4
 273              	.LVL19:
 274              		.loc 1 505 31 view .LVU63
 275 0028 23EA0404 		bic	r4, r3, r4
 276 002c 0C70     		strb	r4, [r1]
 277              	.L13:
 506:SYS/task_manager/task_manager.c ****     }
 507:SYS/task_manager/task_manager.c **** }
 278              		.loc 1 507 1 view .LVU64
 279 002e 5DF8044B 		ldr	r4, [sp], #4
 280              	.LCFI5:
 281              		.cfi_restore 4
 282              		.cfi_def_cfa_offset 0
 283 0032 7047     		bx	lr
 284              	.L17:
 285              		.align	2
 286              	.L16:
 287 0034 00000000 		.word	.LANCHOR2
 288              		.cfi_endproc
 289              	.LFE147:
 291              		.section	.text.Task_ClearReady,"ax",%progbits
 292              		.align	1
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv4-sp-d16
 298              	Task_ClearReady:
 299              	.LVL20:
 300              	.LFB148:
 508:SYS/task_manager/task_manager.c **** 
 509:SYS/task_manager/task_manager.c **** static void Task_ClearReady(Task *tsk)
ARM GAS  /tmp/ccUTxatF.s 			page 15


 510:SYS/task_manager/task_manager.c **** {
 301              		.loc 1 510 1 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 306              		.loc 1 510 1 is_stmt 0 view .LVU66
 307 0000 10B4     		push	{r4}
 308              	.LCFI6:
 309              		.cfi_def_cfa_offset 4
 310              		.cfi_offset 4, -4
 511:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 311              		.loc 1 511 5 is_stmt 1 view .LVU67
 312              		.loc 1 511 22 is_stmt 0 view .LVU68
 313 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 314              		.loc 1 511 13 view .LVU69
 315 0004 DC08     		lsrs	r4, r3, #3
 316              	.LVL21:
 512:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 317              		.loc 1 512 5 is_stmt 1 view .LVU70
 318              		.loc 1 512 13 is_stmt 0 view .LVU71
 319 0006 03F00702 		and	r2, r3, #7
 320              	.LVL22:
 513:SYS/task_manager/task_manager.c **** 
 514:SYS/task_manager/task_manager.c ****     TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 321              		.loc 1 514 5 is_stmt 1 view .LVU72
 322              		.loc 1 514 40 is_stmt 0 view .LVU73
 323 000a 0A4B     		ldr	r3, .L21
 324 000c 2344     		add	r3, r3, r4
 325 000e 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 326              		.loc 1 514 47 view .LVU74
 327 0010 0120     		movs	r0, #1
 328              	.LVL23:
 329              		.loc 1 514 47 view .LVU75
 330 0012 00FA02F2 		lsl	r2, r0, r2
 331              	.LVL24:
 332              		.loc 1 514 40 view .LVU76
 333 0016 21EA0202 		bic	r2, r1, r2
 334 001a 5A70     		strb	r2, [r3, #1]
 335              	.LVL25:
 515:SYS/task_manager/task_manager.c ****     if (TskHdl_RdyMap.TskInGrp[grp_id].Flg == 0)
 336              		.loc 1 515 5 is_stmt 1 view .LVU77
 337              		.loc 1 515 39 is_stmt 0 view .LVU78
 338 001c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 339              		.loc 1 515 8 view .LVU79
 340 001e 33B9     		cbnz	r3, .L18
 516:SYS/task_manager/task_manager.c ****     {
 517:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.Grp.Flg &= ~(1 << grp_id);
 341              		.loc 1 517 9 is_stmt 1 view .LVU80
 342              		.loc 1 517 31 is_stmt 0 view .LVU81
 343 0020 0449     		ldr	r1, .L21
 344 0022 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 345              		.loc 1 517 38 view .LVU82
 346 0024 00FA04F4 		lsl	r4, r0, r4
 347              	.LVL26:
 348              		.loc 1 517 31 view .LVU83
 349 0028 23EA0404 		bic	r4, r3, r4
ARM GAS  /tmp/ccUTxatF.s 			page 16


 350 002c 0C70     		strb	r4, [r1]
 351              	.L18:
 518:SYS/task_manager/task_manager.c ****     }
 519:SYS/task_manager/task_manager.c **** }
 352              		.loc 1 519 1 view .LVU84
 353 002e 5DF8044B 		ldr	r4, [sp], #4
 354              	.LCFI7:
 355              		.cfi_restore 4
 356              		.cfi_def_cfa_offset 0
 357 0032 7047     		bx	lr
 358              	.L22:
 359              		.align	2
 360              	.L21:
 361 0034 00000000 		.word	.LANCHOR0
 362              		.cfi_endproc
 363              	.LFE148:
 365              		.section	.text.Task_SetPendSVPro,"ax",%progbits
 366              		.align	1
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu fpv4-sp-d16
 372              	Task_SetPendSVPro:
 373              	.LFB151:
 520:SYS/task_manager/task_manager.c **** 
 521:SYS/task_manager/task_manager.c **** Task *Task_Get_HighestRank_RdyTask(void)
 522:SYS/task_manager/task_manager.c **** {
 523:SYS/task_manager/task_manager.c ****     uint8_t grp_id = 0;
 524:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = 0;
 525:SYS/task_manager/task_manager.c **** 
 526:SYS/task_manager/task_manager.c ****     if (TskHdl_RdyMap.Grp.Flg)
 527:SYS/task_manager/task_manager.c ****     {
 528:SYS/task_manager/task_manager.c ****         //find group
 529:SYS/task_manager/task_manager.c ****         grp_id = Tsk_Handle[TskHdl_RdyMap.Grp.Flg];
 530:SYS/task_manager/task_manager.c ****         //find task in group
 531:SYS/task_manager/task_manager.c ****         tsk_id = Tsk_Handle[TskHdl_RdyMap.TskInGrp[grp_id].Flg];
 532:SYS/task_manager/task_manager.c ****     }
 533:SYS/task_manager/task_manager.c ****     else
 534:SYS/task_manager/task_manager.c ****         return NULL;
 535:SYS/task_manager/task_manager.c **** 
 536:SYS/task_manager/task_manager.c ****     if (Task_Ptr[grp_id][tsk_id] != NULL)
 537:SYS/task_manager/task_manager.c ****     {
 538:SYS/task_manager/task_manager.c ****         return Task_Ptr[grp_id][tsk_id];
 539:SYS/task_manager/task_manager.c ****     }
 540:SYS/task_manager/task_manager.c ****     else
 541:SYS/task_manager/task_manager.c ****     {
 542:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.Grp.Flg &= ~(1 << grp_id);
 543:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 544:SYS/task_manager/task_manager.c ****         return NULL;
 545:SYS/task_manager/task_manager.c ****     }
 546:SYS/task_manager/task_manager.c **** }
 547:SYS/task_manager/task_manager.c **** 
 548:SYS/task_manager/task_manager.c **** void Task_SetNextTask_Ptr(const Task *nxt)
 549:SYS/task_manager/task_manager.c **** {
 550:SYS/task_manager/task_manager.c ****     if (nxt != NULL)
 551:SYS/task_manager/task_manager.c ****     {
 552:SYS/task_manager/task_manager.c ****         NxtRunTsk_Ptr = nxt;
ARM GAS  /tmp/ccUTxatF.s 			page 17


 553:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
 554:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 555:SYS/task_manager/task_manager.c ****     }
 556:SYS/task_manager/task_manager.c **** }
 557:SYS/task_manager/task_manager.c **** 
 558:SYS/task_manager/task_manager.c **** //first need to know is linux support AT&T formate ASM code
 559:SYS/task_manager/task_manager.c **** __attribute__((naked)) static void Task_SetPendSVPro(void)
 560:SYS/task_manager/task_manager.c **** {
 374              		.loc 1 560 1 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ Naked Function: prologue and epilogue provided by programmer.
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 561:SYS/task_manager/task_manager.c ****     //set pendsv interrupt
 562:SYS/task_manager/task_manager.c ****     __ASM(".equ NVIC_SYSPRI14, 0xE000ED22");
 379              		.loc 1 562 5 view .LVU86
 380              		.syntax unified
 381              	@ 562 "SYS/task_manager/task_manager.c" 1
 382              		.equ NVIC_SYSPRI14, 0xE000ED22
 383              	@ 0 "" 2
 563:SYS/task_manager/task_manager.c ****     __ASM(".equ NVIC_PENDSV_PRI, 0xFF");
 384              		.loc 1 563 5 view .LVU87
 385              	@ 563 "SYS/task_manager/task_manager.c" 1
 386              		.equ NVIC_PENDSV_PRI, 0xFF
 387              	@ 0 "" 2
 564:SYS/task_manager/task_manager.c **** 
 565:SYS/task_manager/task_manager.c ****     __ASM("LDR      R0, =NVIC_SYSPRI14");
 388              		.loc 1 565 5 view .LVU88
 389              	@ 565 "SYS/task_manager/task_manager.c" 1
 390 0000 0548     		LDR      R0, =NVIC_SYSPRI14
 391              	@ 0 "" 2
 566:SYS/task_manager/task_manager.c ****     __ASM("LDR      R1, =NVIC_PENDSV_PRI");
 392              		.loc 1 566 5 view .LVU89
 393              	@ 566 "SYS/task_manager/task_manager.c" 1
 394 0002 4FF0FF01 		LDR      R1, =NVIC_PENDSV_PRI
 395              	@ 0 "" 2
 567:SYS/task_manager/task_manager.c ****     __ASM("STRB     R1, [R0]");
 396              		.loc 1 567 5 view .LVU90
 397              	@ 567 "SYS/task_manager/task_manager.c" 1
 398 0006 0170     		STRB     R1, [R0]
 399              	@ 0 "" 2
 568:SYS/task_manager/task_manager.c **** 
 569:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 570:SYS/task_manager/task_manager.c ****     //set PSP to 0 to initial context switch call
 571:SYS/task_manager/task_manager.c ****     __ASM("MOVS     R0, #0");
 400              		.loc 1 571 5 view .LVU91
 401              	@ 571 "SYS/task_manager/task_manager.c" 1
 402 0008 0020     		MOVS     R0, #0
 403              	@ 0 "" 2
 572:SYS/task_manager/task_manager.c ****     __ASM("MSR      PSP, R0");
 404              		.loc 1 572 5 view .LVU92
 405              	@ 572 "SYS/task_manager/task_manager.c" 1
 406 000a 80F30988 		MSR      PSP, R0
 407              	@ 0 "" 2
 573:SYS/task_manager/task_manager.c **** 
 574:SYS/task_manager/task_manager.c ****     //initial MSP to Task_OS_ExpStkBase
 575:SYS/task_manager/task_manager.c ****     __ASM("LDR      R0, =Task_OS_ExpStkBase");
ARM GAS  /tmp/ccUTxatF.s 			page 18


 408              		.loc 1 575 5 view .LVU93
 409              	@ 575 "SYS/task_manager/task_manager.c" 1
 410 000e 0348     		LDR      R0, =Task_OS_ExpStkBase
 411              	@ 0 "" 2
 576:SYS/task_manager/task_manager.c ****     __ASM("LDR      R1, [R0]");
 412              		.loc 1 576 5 view .LVU94
 413              	@ 576 "SYS/task_manager/task_manager.c" 1
 414 0010 0168     		LDR      R1, [R0]
 415              	@ 0 "" 2
 577:SYS/task_manager/task_manager.c ****     __ASM("MSR      MSP, R1");
 416              		.loc 1 577 5 view .LVU95
 417              	@ 577 "SYS/task_manager/task_manager.c" 1
 418 0012 81F30888 		MSR      MSP, R1
 419              	@ 0 "" 2
 578:SYS/task_manager/task_manager.c **** #endif
 579:SYS/task_manager/task_manager.c **** 
 580:SYS/task_manager/task_manager.c ****     __ASM("BX       LR");
 420              		.loc 1 580 5 view .LVU96
 421              	@ 580 "SYS/task_manager/task_manager.c" 1
 422 0016 7047     		BX       LR
 423              	@ 0 "" 2
 581:SYS/task_manager/task_manager.c **** }
 424              		.loc 1 581 1 is_stmt 0 view .LVU97
 425              		.thumb
 426              		.syntax unified
 427              		.cfi_endproc
 428              	.LFE151:
 430              		.section	.text.Task_PriorityCompare,"ax",%progbits
 431              		.align	1
 432              		.global	Task_PriorityCompare
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu fpv4-sp-d16
 438              	Task_PriorityCompare:
 439              	.LVL27:
 440              	.LFB155:
 582:SYS/task_manager/task_manager.c **** 
 583:SYS/task_manager/task_manager.c **** __attribute__((naked)) void Task_TriggerPendSV(void)
 584:SYS/task_manager/task_manager.c **** {
 585:SYS/task_manager/task_manager.c ****     __ASM(".equ NVIC_INT_CTRL, 0xE000ED04");
 586:SYS/task_manager/task_manager.c ****     __ASM(".equ NVIC_PENDSVSET, 0x10000000");
 587:SYS/task_manager/task_manager.c **** 
 588:SYS/task_manager/task_manager.c ****     __ASM("LDR      R0, =NVIC_INT_CTRL");
 589:SYS/task_manager/task_manager.c ****     __ASM("LDR      R1, =NVIC_PENDSVSET");
 590:SYS/task_manager/task_manager.c ****     __ASM("STR      R1, [R0]");
 591:SYS/task_manager/task_manager.c ****     __ASM("BX       LR");
 592:SYS/task_manager/task_manager.c **** }
 593:SYS/task_manager/task_manager.c **** 
 594:SYS/task_manager/task_manager.c **** void Task_Force_TriggerPendSV(void)
 595:SYS/task_manager/task_manager.c **** {
 596:SYS/task_manager/task_manager.c ****     /* Barriers are normally not required but do ensure the code is completely \
 597:SYS/task_manager/task_manager.c ****         within the specified behaviour for the architecture. */
 598:SYS/task_manager/task_manager.c ****     __ASM volatile("dsb" ::
 599:SYS/task_manager/task_manager.c ****                        : "memory");
 600:SYS/task_manager/task_manager.c ****     __ASM volatile("isb");
 601:SYS/task_manager/task_manager.c ****     Task_TriggerPendSV();
ARM GAS  /tmp/ccUTxatF.s 			page 19


 602:SYS/task_manager/task_manager.c **** }
 603:SYS/task_manager/task_manager.c **** 
 604:SYS/task_manager/task_manager.c **** uint8_t Task_Get_TaskNum(void)
 605:SYS/task_manager/task_manager.c **** {
 606:SYS/task_manager/task_manager.c ****     return TskCrt_RegList.num;
 607:SYS/task_manager/task_manager.c **** }
 608:SYS/task_manager/task_manager.c **** 
 609:SYS/task_manager/task_manager.c **** //return high priority task pointer
 610:SYS/task_manager/task_manager.c **** Task *Task_PriorityCompare(const Task *tsk_l, const Task *tsk_r)
 611:SYS/task_manager/task_manager.c **** {
 441              		.loc 1 611 1 is_stmt 1 view -0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 612:SYS/task_manager/task_manager.c ****     if ((tsk_l == NULL) && (tsk_r == NULL))
 446              		.loc 1 612 5 view .LVU99
 447              		.loc 1 612 8 is_stmt 0 view .LVU100
 448 0000 0346     		mov	r3, r0
 449 0002 78B1     		cbz	r0, .L40
 450              	.L25:
 613:SYS/task_manager/task_manager.c ****     {
 614:SYS/task_manager/task_manager.c ****         return NULL;
 615:SYS/task_manager/task_manager.c ****     }
 616:SYS/task_manager/task_manager.c **** 
 617:SYS/task_manager/task_manager.c ****     if ((tsk_l == NULL) && (tsk_r != NULL))
 451              		.loc 1 617 5 is_stmt 1 view .LVU101
 452              		.loc 1 617 8 is_stmt 0 view .LVU102
 453 0004 93B1     		cbz	r3, .L41
 454              	.L27:
 618:SYS/task_manager/task_manager.c ****     {
 619:SYS/task_manager/task_manager.c ****         return tsk_r;
 620:SYS/task_manager/task_manager.c ****     }
 621:SYS/task_manager/task_manager.c **** 
 622:SYS/task_manager/task_manager.c ****     if ((tsk_l != NULL) && (tsk_r == NULL))
 455              		.loc 1 622 5 is_stmt 1 view .LVU103
 456              		.loc 1 622 8 is_stmt 0 view .LVU104
 457 0006 03B1     		cbz	r3, .L28
 458              		.loc 1 622 25 discriminator 1 view .LVU105
 459 0008 C9B1     		cbz	r1, .L32
 460              	.L28:
 611:SYS/task_manager/task_manager.c ****     if ((tsk_l == NULL) && (tsk_r == NULL))
 461              		.loc 1 611 1 view .LVU106
 462 000a 30B4     		push	{r4, r5}
 463              	.LCFI8:
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 4, -8
 466              		.cfi_offset 5, -4
 623:SYS/task_manager/task_manager.c ****     {
 624:SYS/task_manager/task_manager.c ****         return tsk_l;
 625:SYS/task_manager/task_manager.c ****     }
 626:SYS/task_manager/task_manager.c **** 
 627:SYS/task_manager/task_manager.c ****     uint8_t L_Grp_level = GET_TASKGROUP_PRIORITY(tsk_l->priority.Suction.Group_Level);
 467              		.loc 1 627 5 is_stmt 1 view .LVU107
 468              		.loc 1 627 27 is_stmt 0 view .LVU108
 469 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 470              	.LVL28:
ARM GAS  /tmp/ccUTxatF.s 			page 20


 471              		.loc 1 627 13 view .LVU109
 472 000e 0025     		movs	r5, #0
 473              	.LVL29:
 628:SYS/task_manager/task_manager.c ****     uint8_t R_Grp_level = GET_TASKGROUP_PRIORITY(tsk_r->priority.Suction.Group_Level);
 474              		.loc 1 628 5 is_stmt 1 view .LVU110
 475              		.loc 1 628 27 is_stmt 0 view .LVU111
 476 0010 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 477              	.LVL30:
 629:SYS/task_manager/task_manager.c ****     uint8_t L_TskPri_level = GET_TASKINGROUP_PRIORITY(tsk_l->priority.Suction.Task_Level);
 478              		.loc 1 629 5 is_stmt 1 view .LVU112
 479              		.loc 1 629 30 is_stmt 0 view .LVU113
 480 0012 00F00700 		and	r0, r0, #7
 481              	.LVL31:
 630:SYS/task_manager/task_manager.c ****     uint8_t R_TskPri_level = GET_TASKINGROUP_PRIORITY(tsk_r->priority.Suction.Task_Level);
 482              		.loc 1 630 5 is_stmt 1 view .LVU114
 483              		.loc 1 630 30 is_stmt 0 view .LVU115
 484 0016 02F00702 		and	r2, r2, #7
 485              	.LVL32:
 631:SYS/task_manager/task_manager.c **** 
 632:SYS/task_manager/task_manager.c ****     if (L_Grp_level < R_Grp_level)
 486              		.loc 1 632 5 is_stmt 1 view .LVU116
 633:SYS/task_manager/task_manager.c ****     {
 634:SYS/task_manager/task_manager.c ****         return tsk_l;
 635:SYS/task_manager/task_manager.c ****     }
 636:SYS/task_manager/task_manager.c ****     else if (L_Grp_level > R_Grp_level)
 487              		.loc 1 636 10 view .LVU117
 488              		.loc 1 636 13 is_stmt 0 view .LVU118
 489 001a AD42     		cmp	r5, r5
 490 001c 11D8     		bhi	.L34
 637:SYS/task_manager/task_manager.c ****     {
 638:SYS/task_manager/task_manager.c ****         return tsk_r;
 639:SYS/task_manager/task_manager.c ****     }
 640:SYS/task_manager/task_manager.c ****     else if (L_Grp_level == R_Grp_level)
 491              		.loc 1 640 10 is_stmt 1 view .LVU119
 492              		.loc 1 640 13 is_stmt 0 view .LVU120
 493 001e 09D0     		beq	.L42
 494              	.L24:
 641:SYS/task_manager/task_manager.c ****     {
 642:SYS/task_manager/task_manager.c ****         if (L_TskPri_level < R_TskPri_level)
 643:SYS/task_manager/task_manager.c ****         {
 644:SYS/task_manager/task_manager.c ****             return tsk_l;
 645:SYS/task_manager/task_manager.c ****         }
 646:SYS/task_manager/task_manager.c ****         else if (L_TskPri_level > R_TskPri_level)
 647:SYS/task_manager/task_manager.c ****         {
 648:SYS/task_manager/task_manager.c ****             return tsk_r;
 649:SYS/task_manager/task_manager.c ****         }
 650:SYS/task_manager/task_manager.c ****     }
 651:SYS/task_manager/task_manager.c **** }
 495              		.loc 1 651 1 view .LVU121
 496 0020 30BC     		pop	{r4, r5}
 497              	.LCFI9:
 498              		.cfi_restore 5
 499              		.cfi_restore 4
 500              		.cfi_def_cfa_offset 0
 501              	.LVL33:
 502              		.loc 1 651 1 view .LVU122
 503 0022 7047     		bx	lr
ARM GAS  /tmp/ccUTxatF.s 			page 21


 504              	.LVL34:
 505              	.L40:
 612:SYS/task_manager/task_manager.c ****     {
 506              		.loc 1 612 25 discriminator 1 view .LVU123
 507 0024 0029     		cmp	r1, #0
 508 0026 EDD1     		bne	.L25
 614:SYS/task_manager/task_manager.c ****     }
 509              		.loc 1 614 16 view .LVU124
 510 0028 0020     		movs	r0, #0
 511              	.LVL35:
 614:SYS/task_manager/task_manager.c ****     }
 512              		.loc 1 614 16 view .LVU125
 513 002a 7047     		bx	lr
 514              	.LVL36:
 515              	.L41:
 617:SYS/task_manager/task_manager.c ****     {
 516              		.loc 1 617 25 discriminator 1 view .LVU126
 517 002c 0029     		cmp	r1, #0
 518 002e EAD0     		beq	.L27
 619:SYS/task_manager/task_manager.c ****     }
 519              		.loc 1 619 16 view .LVU127
 520 0030 0846     		mov	r0, r1
 521              	.LVL37:
 619:SYS/task_manager/task_manager.c ****     }
 522              		.loc 1 619 16 view .LVU128
 523 0032 7047     		bx	lr
 524              	.LVL38:
 525              	.L42:
 526              	.LCFI10:
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 4, -8
 529              		.cfi_offset 5, -4
 642:SYS/task_manager/task_manager.c ****         {
 530              		.loc 1 642 9 is_stmt 1 view .LVU129
 642:SYS/task_manager/task_manager.c ****         {
 531              		.loc 1 642 12 is_stmt 0 view .LVU130
 532 0034 9042     		cmp	r0, r2
 533 0036 06D3     		bcc	.L35
 646:SYS/task_manager/task_manager.c ****         {
 534              		.loc 1 646 14 is_stmt 1 view .LVU131
 646:SYS/task_manager/task_manager.c ****         {
 535              		.loc 1 646 17 is_stmt 0 view .LVU132
 536 0038 F2D9     		bls	.L24
 648:SYS/task_manager/task_manager.c ****         }
 537              		.loc 1 648 20 view .LVU133
 538 003a 0846     		mov	r0, r1
 539 003c F0E7     		b	.L24
 540              	.LVL39:
 541              	.L32:
 542              	.LCFI11:
 543              		.cfi_def_cfa_offset 0
 544              		.cfi_restore 4
 545              		.cfi_restore 5
 624:SYS/task_manager/task_manager.c ****     }
 546              		.loc 1 624 16 view .LVU134
 547 003e 1846     		mov	r0, r3
 548              	.LVL40:
ARM GAS  /tmp/ccUTxatF.s 			page 22


 549              		.loc 1 651 1 view .LVU135
 550 0040 7047     		bx	lr
 551              	.LVL41:
 552              	.L34:
 553              	.LCFI12:
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 4, -8
 556              		.cfi_offset 5, -4
 638:SYS/task_manager/task_manager.c ****     }
 557              		.loc 1 638 16 view .LVU136
 558 0042 0846     		mov	r0, r1
 559 0044 ECE7     		b	.L24
 560              	.L35:
 644:SYS/task_manager/task_manager.c ****         }
 561              		.loc 1 644 20 view .LVU137
 562 0046 1846     		mov	r0, r3
 563 0048 EAE7     		b	.L24
 564              		.cfi_endproc
 565              	.LFE155:
 567              		.section	.text.ReSet_Task_Data,"ax",%progbits
 568              		.align	1
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv4-sp-d16
 574              	ReSet_Task_Data:
 575              	.LVL42:
 576              	.LFB126:
  95:SYS/task_manager/task_manager.c ****     task->priority.Suction.Group_Level = 0;
 577              		.loc 1 95 1 is_stmt 1 view -0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
  95:SYS/task_manager/task_manager.c ****     task->priority.Suction.Group_Level = 0;
 581              		.loc 1 95 1 is_stmt 0 view .LVU139
 582 0000 10B5     		push	{r4, lr}
 583              	.LCFI13:
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 4, -8
 586              		.cfi_offset 14, -4
 587 0002 0446     		mov	r4, r0
  96:SYS/task_manager/task_manager.c ****     task->priority.Suction.Task_Level = 0;
 588              		.loc 1 96 5 is_stmt 1 view .LVU140
  96:SYS/task_manager/task_manager.c ****     task->priority.Suction.Task_Level = 0;
 589              		.loc 1 96 40 is_stmt 0 view .LVU141
 590 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  97:SYS/task_manager/task_manager.c ****     task->Task_name = NULL;
 591              		.loc 1 97 5 is_stmt 1 view .LVU142
  97:SYS/task_manager/task_manager.c ****     task->Task_name = NULL;
 592              		.loc 1 97 39 is_stmt 0 view .LVU143
 593 0006 03F0C703 		and	r3, r3, #199
 594 000a 6FF30203 		bfc	r3, #0, #3
 595 000e 0370     		strb	r3, [r0]
  98:SYS/task_manager/task_manager.c ****     task->exec_frq = 0;
 596              		.loc 1 98 5 is_stmt 1 view .LVU144
  98:SYS/task_manager/task_manager.c ****     task->exec_frq = 0;
 597              		.loc 1 98 21 is_stmt 0 view .LVU145
ARM GAS  /tmp/ccUTxatF.s 			page 23


 598 0010 0023     		movs	r3, #0
 599 0012 4360     		str	r3, [r0, #4]
  99:SYS/task_manager/task_manager.c ****     task->exec_interval_us = 0;
 600              		.loc 1 99 5 is_stmt 1 view .LVU146
  99:SYS/task_manager/task_manager.c ****     task->exec_interval_us = 0;
 601              		.loc 1 99 20 is_stmt 0 view .LVU147
 602 0014 8360     		str	r3, [r0, #8]
 100:SYS/task_manager/task_manager.c ****     task->Exec_Func = NULL;
 603              		.loc 1 100 5 is_stmt 1 view .LVU148
 100:SYS/task_manager/task_manager.c ****     task->Exec_Func = NULL;
 604              		.loc 1 100 28 is_stmt 0 view .LVU149
 605 0016 8381     		strh	r3, [r0, #12]	@ movhi
 101:SYS/task_manager/task_manager.c **** 
 606              		.loc 1 101 5 is_stmt 1 view .LVU150
 101:SYS/task_manager/task_manager.c **** 
 607              		.loc 1 101 21 is_stmt 0 view .LVU151
 608 0018 0361     		str	r3, [r0, #16]
 103:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_time_arv = 0;
 609              		.loc 1 103 5 is_stmt 1 view .LVU152
 103:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_time_arv = 0;
 610              		.loc 1 103 39 is_stmt 0 view .LVU153
 611 001a C362     		str	r3, [r0, #44]
 104:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_time_max = 0;
 612              		.loc 1 104 5 is_stmt 1 view .LVU154
 104:SYS/task_manager/task_manager.c ****     task->Exec_status.detect_exec_time_max = 0;
 613              		.loc 1 104 44 is_stmt 0 view .LVU155
 614 001c 0363     		str	r3, [r0, #48]
 105:SYS/task_manager/task_manager.c ****     task->Exec_status.Exec_Times = 0;
 615              		.loc 1 105 5 is_stmt 1 view .LVU156
 105:SYS/task_manager/task_manager.c ****     task->Exec_status.Exec_Times = 0;
 616              		.loc 1 105 44 is_stmt 0 view .LVU157
 617 001e 4363     		str	r3, [r0, #52]
 106:SYS/task_manager/task_manager.c ****     task->Exec_status.cpu_opy = 0;
 618              		.loc 1 106 5 is_stmt 1 view .LVU158
 106:SYS/task_manager/task_manager.c ****     task->Exec_status.cpu_opy = 0;
 619              		.loc 1 106 34 is_stmt 0 view .LVU159
 620 0020 8363     		str	r3, [r0, #56]
 107:SYS/task_manager/task_manager.c ****     task->Exec_status.totlal_running_time = 0;
 621              		.loc 1 107 5 is_stmt 1 view .LVU160
 107:SYS/task_manager/task_manager.c ****     task->Exec_status.totlal_running_time = 0;
 622              		.loc 1 107 31 is_stmt 0 view .LVU161
 623 0022 0022     		movs	r2, #0
 624 0024 4264     		str	r2, [r0, #68]	@ float
 108:SYS/task_manager/task_manager.c **** 
 625              		.loc 1 108 5 is_stmt 1 view .LVU162
 108:SYS/task_manager/task_manager.c **** 
 626              		.loc 1 108 43 is_stmt 0 view .LVU163
 627 0026 0364     		str	r3, [r0, #64]
 110:SYS/task_manager/task_manager.c ****     task->delay_info.tsk_hdl = 0;
 628              		.loc 1 110 5 is_stmt 1 view .LVU164
 110:SYS/task_manager/task_manager.c ****     task->delay_info.tsk_hdl = 0;
 629              		.loc 1 110 31 is_stmt 0 view .LVU165
 630 0028 80F85C30 		strb	r3, [r0, #92]
 111:SYS/task_manager/task_manager.c ****     task->delay_info.time_unit = 0;
 631              		.loc 1 111 5 is_stmt 1 view .LVU166
 111:SYS/task_manager/task_manager.c ****     task->delay_info.time_unit = 0;
 632              		.loc 1 111 30 is_stmt 0 view .LVU167
ARM GAS  /tmp/ccUTxatF.s 			page 24


 633 002c 0366     		str	r3, [r0, #96]
 112:SYS/task_manager/task_manager.c **** 
 634              		.loc 1 112 5 is_stmt 1 view .LVU168
 112:SYS/task_manager/task_manager.c **** 
 635              		.loc 1 112 32 is_stmt 0 view .LVU169
 636 002e 4366     		str	r3, [r0, #100]
 114:SYS/task_manager/task_manager.c **** 
 637              		.loc 1 114 5 is_stmt 1 view .LVU170
 638 0030 00F15C01 		add	r1, r0, #92
 639 0034 7430     		adds	r0, r0, #116
 640              	.LVL43:
 114:SYS/task_manager/task_manager.c **** 
 641              		.loc 1 114 5 is_stmt 0 view .LVU171
 642 0036 FFF7FEFF 		bl	List_ItemInit
 643              	.LVL44:
 116:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(task->Exec_status.Init_Time));
 644              		.loc 1 116 5 is_stmt 1 view .LVU172
 645 003a 04F12400 		add	r0, r4, #36
 646 003e FFF7FEFF 		bl	RuntimeObj_Reset
 647              	.LVL45:
 117:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(task->Exec_status.Start_Time));
 648              		.loc 1 117 5 view .LVU173
 649 0042 04F11400 		add	r0, r4, #20
 650 0046 FFF7FEFF 		bl	RuntimeObj_Reset
 651              	.LVL46:
 118:SYS/task_manager/task_manager.c **** 
 652              		.loc 1 118 5 view .LVU174
 653 004a 04F11C00 		add	r0, r4, #28
 654 004e FFF7FEFF 		bl	RuntimeObj_Reset
 655              	.LVL47:
 120:SYS/task_manager/task_manager.c **** }
 656              		.loc 1 120 5 view .LVU175
 120:SYS/task_manager/task_manager.c **** }
 657              		.loc 1 120 29 is_stmt 0 view .LVU176
 658 0052 0523     		movs	r3, #5
 659 0054 84F84830 		strb	r3, [r4, #72]
 121:SYS/task_manager/task_manager.c **** 
 660              		.loc 1 121 1 view .LVU177
 661 0058 10BD     		pop	{r4, pc}
 121:SYS/task_manager/task_manager.c **** 
 662              		.loc 1 121 1 view .LVU178
 663              		.cfi_endproc
 664              	.LFE126:
 666              		.section	.text.TaskSys_Init,"ax",%progbits
 667              		.align	1
 668              		.syntax unified
 669              		.thumb
 670              		.thumb_func
 671              		.fpu fpv4-sp-d16
 673              	TaskSys_Init:
 674              	.LFB128:
 137:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 675              		.loc 1 137 1 is_stmt 1 view -0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccUTxatF.s 			page 25


 680              	.LCFI14:
 681              		.cfi_def_cfa_offset 24
 682              		.cfi_offset 3, -24
 683              		.cfi_offset 4, -20
 684              		.cfi_offset 5, -16
 685              		.cfi_offset 6, -12
 686              		.cfi_offset 7, -8
 687              		.cfi_offset 14, -4
 140:SYS/task_manager/task_manager.c **** 
 688              		.loc 1 140 5 view .LVU180
 689 0002 4FF42052 		mov	r2, #10240
 690 0006 0021     		movs	r1, #0
 691 0008 1B48     		ldr	r0, .L52
 692 000a FFF7FEFF 		bl	memset
 693              	.LVL48:
 142:SYS/task_manager/task_manager.c **** #endif
 694              		.loc 1 142 5 view .LVU181
 142:SYS/task_manager/task_manager.c **** #endif
 695              		.loc 1 142 24 is_stmt 0 view .LVU182
 696 000e 1B4B     		ldr	r3, .L52+4
 697 0010 1B4A     		ldr	r2, .L52+8
 698 0012 1A60     		str	r2, [r3]
 148:SYS/task_manager/task_manager.c **** 
 699              		.loc 1 148 5 is_stmt 1 view .LVU183
 700              	.LVL49:
 150:SYS/task_manager/task_manager.c ****     {
 701              		.loc 1 150 5 view .LVU184
 702              	.LBB6:
 150:SYS/task_manager/task_manager.c ****     {
 703              		.loc 1 150 10 view .LVU185
 150:SYS/task_manager/task_manager.c ****     {
 704              		.loc 1 150 18 is_stmt 0 view .LVU186
 705 0014 0027     		movs	r7, #0
 150:SYS/task_manager/task_manager.c ****     {
 706              		.loc 1 150 5 view .LVU187
 707 0016 18E0     		b	.L46
 708              	.LVL50:
 709              	.L47:
 710              	.LBB7:
 154:SYS/task_manager/task_manager.c **** 
 711              		.loc 1 154 13 is_stmt 1 discriminator 3 view .LVU188
 712 0018 1A4D     		ldr	r5, .L52+12
 713 001a 04EBC706 		add	r6, r4, r7, lsl #3
 714 001e 55F82600 		ldr	r0, [r5, r6, lsl #2]
 715 0022 FFF7FEFF 		bl	ReSet_Task_Data
 716              	.LVL51:
 157:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Stack = NULL;
 717              		.loc 1 157 13 discriminator 3 view .LVU189
 157:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Stack = NULL;
 718              		.loc 1 157 34 is_stmt 0 discriminator 3 view .LVU190
 719 0026 55F82620 		ldr	r2, [r5, r6, lsl #2]
 157:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Stack = NULL;
 720              		.loc 1 157 63 discriminator 3 view .LVU191
 721 002a 0023     		movs	r3, #0
 722 002c D364     		str	r3, [r2, #76]
 158:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Top_Stk_Ptr = NULL;
 723              		.loc 1 158 13 is_stmt 1 discriminator 3 view .LVU192
ARM GAS  /tmp/ccUTxatF.s 			page 26


 158:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Top_Stk_Ptr = NULL;
 724              		.loc 1 158 34 is_stmt 0 discriminator 3 view .LVU193
 725 002e 55F82620 		ldr	r2, [r5, r6, lsl #2]
 158:SYS/task_manager/task_manager.c ****             Task_Ptr[group_index][task_priority]->TCB.Top_Stk_Ptr = NULL;
 726              		.loc 1 158 61 discriminator 3 view .LVU194
 727 0032 5365     		str	r3, [r2, #84]
 159:SYS/task_manager/task_manager.c **** #endif
 728              		.loc 1 159 13 is_stmt 1 discriminator 3 view .LVU195
 159:SYS/task_manager/task_manager.c **** #endif
 729              		.loc 1 159 34 is_stmt 0 discriminator 3 view .LVU196
 730 0034 55F82620 		ldr	r2, [r5, r6, lsl #2]
 159:SYS/task_manager/task_manager.c **** #endif
 731              		.loc 1 159 67 discriminator 3 view .LVU197
 732 0038 1365     		str	r3, [r2, #80]
 161:SYS/task_manager/task_manager.c **** 
 733              		.loc 1 161 13 is_stmt 1 discriminator 3 view .LVU198
 161:SYS/task_manager/task_manager.c **** 
 734              		.loc 1 161 50 is_stmt 0 discriminator 3 view .LVU199
 735 003a 45F82630 		str	r3, [r5, r6, lsl #2]
 163:SYS/task_manager/task_manager.c ****         }
 736              		.loc 1 163 13 is_stmt 1 discriminator 3 view .LVU200
 152:SYS/task_manager/task_manager.c ****         {
 737              		.loc 1 152 103 is_stmt 0 discriminator 3 view .LVU201
 738 003e 0134     		adds	r4, r4, #1
 739              	.LVL52:
 152:SYS/task_manager/task_manager.c ****         {
 740              		.loc 1 152 103 discriminator 3 view .LVU202
 741 0040 E4B2     		uxtb	r4, r4
 742              	.LVL53:
 743              	.L48:
 152:SYS/task_manager/task_manager.c ****         {
 744              		.loc 1 152 9 discriminator 1 view .LVU203
 745 0042 072C     		cmp	r4, #7
 746 0044 E8D9     		bls	.L47
 747              	.LBE7:
 150:SYS/task_manager/task_manager.c ****     {
 748              		.loc 1 150 77 discriminator 2 view .LVU204
 749 0046 0137     		adds	r7, r7, #1
 750              	.LVL54:
 150:SYS/task_manager/task_manager.c ****     {
 751              		.loc 1 150 77 discriminator 2 view .LVU205
 752 0048 FFB2     		uxtb	r7, r7
 753              	.LVL55:
 754              	.L46:
 150:SYS/task_manager/task_manager.c ****     {
 755              		.loc 1 150 5 discriminator 1 view .LVU206
 756 004a 072F     		cmp	r7, #7
 757 004c 01D8     		bhi	.L51
 758              	.LBB8:
 152:SYS/task_manager/task_manager.c ****         {
 759              		.loc 1 152 22 view .LVU207
 760 004e 0024     		movs	r4, #0
 761 0050 F7E7     		b	.L48
 762              	.L51:
 763              	.LBE8:
 764              	.LBE6:
 167:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.data = NULL;
ARM GAS  /tmp/ccUTxatF.s 			page 27


 765              		.loc 1 167 5 is_stmt 1 view .LVU208
 167:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.data = NULL;
 766              		.loc 1 167 24 is_stmt 0 view .LVU209
 767 0052 0D4B     		ldr	r3, .L52+16
 768 0054 0022     		movs	r2, #0
 769 0056 1A70     		strb	r2, [r3]
 168:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.nxt = NULL;
 770              		.loc 1 168 5 is_stmt 1 view .LVU210
 168:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.nxt = NULL;
 771              		.loc 1 168 30 is_stmt 0 view .LVU211
 772 0058 5A61     		str	r2, [r3, #20]
 169:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.prv = NULL;
 773              		.loc 1 169 5 is_stmt 1 view .LVU212
 169:SYS/task_manager/task_manager.c ****     TskCrt_RegList.list.prv = NULL;
 774              		.loc 1 169 29 is_stmt 0 view .LVU213
 775 005a 1A61     		str	r2, [r3, #16]
 170:SYS/task_manager/task_manager.c **** 
 776              		.loc 1 170 5 is_stmt 1 view .LVU214
 170:SYS/task_manager/task_manager.c **** 
 777              		.loc 1 170 29 is_stmt 0 view .LVU215
 778 005c DA60     		str	r2, [r3, #12]
 172:SYS/task_manager/task_manager.c ****     TskSys_state = TaskSys_Prepare;
 779              		.loc 1 172 5 is_stmt 1 view .LVU216
 780 005e 0B4B     		ldr	r3, .L52+20
 781 0060 1868     		ldr	r0, [r3]
 782 0062 FFF7FEFF 		bl	ReSet_Task_Data
 783              	.LVL56:
 173:SYS/task_manager/task_manager.c **** 
 784              		.loc 1 173 5 view .LVU217
 173:SYS/task_manager/task_manager.c **** 
 785              		.loc 1 173 18 is_stmt 0 view .LVU218
 786 0066 0A4B     		ldr	r3, .L52+24
 787 0068 0122     		movs	r2, #1
 788 006a 1A70     		strb	r2, [r3]
 175:SYS/task_manager/task_manager.c **** }
 789              		.loc 1 175 5 is_stmt 1 view .LVU219
 790              	.LVL57:
 791              	.LBB9:
 792              	.LBI9:
 793              		.file 2 "F4_CORE/core_cm4.h"
   1:F4_CORE/core_cm4.h **** /**************************************************************************//**
   2:F4_CORE/core_cm4.h ****  * @file     core_cm4.h
   3:F4_CORE/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:F4_CORE/core_cm4.h ****  * @version  V4.10
   5:F4_CORE/core_cm4.h ****  * @date     18. March 2015
   6:F4_CORE/core_cm4.h ****  *
   7:F4_CORE/core_cm4.h ****  * @note
   8:F4_CORE/core_cm4.h ****  *
   9:F4_CORE/core_cm4.h ****  ******************************************************************************/
  10:F4_CORE/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
  11:F4_CORE/core_cm4.h **** 
  12:F4_CORE/core_cm4.h ****    All rights reserved.
  13:F4_CORE/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:F4_CORE/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:F4_CORE/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:F4_CORE/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:F4_CORE/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
ARM GAS  /tmp/ccUTxatF.s 			page 28


  18:F4_CORE/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:F4_CORE/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:F4_CORE/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:F4_CORE/core_cm4.h ****      to endorse or promote products derived from this software without
  22:F4_CORE/core_cm4.h ****      specific prior written permission.
  23:F4_CORE/core_cm4.h ****    *
  24:F4_CORE/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:F4_CORE/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:F4_CORE/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:F4_CORE/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:F4_CORE/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:F4_CORE/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:F4_CORE/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:F4_CORE/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:F4_CORE/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:F4_CORE/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:F4_CORE/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:F4_CORE/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:F4_CORE/core_cm4.h **** 
  37:F4_CORE/core_cm4.h **** 
  38:F4_CORE/core_cm4.h **** #if defined ( __ICCARM__ )
  39:F4_CORE/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:F4_CORE/core_cm4.h **** #endif
  41:F4_CORE/core_cm4.h **** 
  42:F4_CORE/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  43:F4_CORE/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  44:F4_CORE/core_cm4.h **** 
  45:F4_CORE/core_cm4.h **** #ifdef __cplusplus
  46:F4_CORE/core_cm4.h ****  extern "C" {
  47:F4_CORE/core_cm4.h **** #endif
  48:F4_CORE/core_cm4.h **** 
  49:F4_CORE/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:F4_CORE/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:F4_CORE/core_cm4.h **** 
  52:F4_CORE/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:F4_CORE/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:F4_CORE/core_cm4.h **** 
  55:F4_CORE/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:F4_CORE/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:F4_CORE/core_cm4.h **** 
  58:F4_CORE/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:F4_CORE/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:F4_CORE/core_cm4.h ****  */
  61:F4_CORE/core_cm4.h **** 
  62:F4_CORE/core_cm4.h **** 
  63:F4_CORE/core_cm4.h **** /*******************************************************************************
  64:F4_CORE/core_cm4.h ****  *                 CMSIS definitions
  65:F4_CORE/core_cm4.h ****  ******************************************************************************/
  66:F4_CORE/core_cm4.h **** /** \ingroup Cortex_M4
  67:F4_CORE/core_cm4.h ****   @{
  68:F4_CORE/core_cm4.h ****  */
  69:F4_CORE/core_cm4.h **** 
  70:F4_CORE/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:F4_CORE/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04)                                   /*!< [31:16] CMSIS HAL m
  72:F4_CORE/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  73:F4_CORE/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:F4_CORE/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
ARM GAS  /tmp/ccUTxatF.s 			page 29


  75:F4_CORE/core_cm4.h **** 
  76:F4_CORE/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:F4_CORE/core_cm4.h **** 
  78:F4_CORE/core_cm4.h **** 
  79:F4_CORE/core_cm4.h **** #if   defined ( __CC_ARM )
  80:F4_CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:F4_CORE/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:F4_CORE/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:F4_CORE/core_cm4.h **** 
  84:F4_CORE/core_cm4.h **** #elif defined ( __GNUC__ )
  85:F4_CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  86:F4_CORE/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  87:F4_CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
  88:F4_CORE/core_cm4.h **** 
  89:F4_CORE/core_cm4.h **** #elif defined ( __ICCARM__ )
  90:F4_CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  91:F4_CORE/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  92:F4_CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
  93:F4_CORE/core_cm4.h **** 
  94:F4_CORE/core_cm4.h **** #elif defined ( __TMS470__ )
  95:F4_CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  96:F4_CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:F4_CORE/core_cm4.h **** 
  98:F4_CORE/core_cm4.h **** #elif defined ( __TASKING__ )
  99:F4_CORE/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:F4_CORE/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:F4_CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:F4_CORE/core_cm4.h **** 
 103:F4_CORE/core_cm4.h **** #elif defined ( __CSMC__ )
 104:F4_CORE/core_cm4.h ****   #define __packed
 105:F4_CORE/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 106:F4_CORE/core_cm4.h ****   #define __INLINE         inline                                    /*use -pc99 on compile line !<
 107:F4_CORE/core_cm4.h ****   #define __STATIC_INLINE  static inline
 108:F4_CORE/core_cm4.h **** 
 109:F4_CORE/core_cm4.h **** #endif
 110:F4_CORE/core_cm4.h **** 
 111:F4_CORE/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 112:F4_CORE/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 113:F4_CORE/core_cm4.h **** */
 114:F4_CORE/core_cm4.h **** #if defined ( __CC_ARM )
 115:F4_CORE/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 116:F4_CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:F4_CORE/core_cm4.h ****       #define __FPU_USED       1
 118:F4_CORE/core_cm4.h ****     #else
 119:F4_CORE/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:F4_CORE/core_cm4.h ****       #define __FPU_USED       0
 121:F4_CORE/core_cm4.h ****     #endif
 122:F4_CORE/core_cm4.h ****   #else
 123:F4_CORE/core_cm4.h ****     #define __FPU_USED         0
 124:F4_CORE/core_cm4.h ****   #endif
 125:F4_CORE/core_cm4.h **** 
 126:F4_CORE/core_cm4.h **** #elif defined ( __GNUC__ )
 127:F4_CORE/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:F4_CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:F4_CORE/core_cm4.h ****       #define __FPU_USED       1
 130:F4_CORE/core_cm4.h ****     #else
 131:F4_CORE/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
ARM GAS  /tmp/ccUTxatF.s 			page 30


 132:F4_CORE/core_cm4.h ****       #define __FPU_USED       0
 133:F4_CORE/core_cm4.h ****     #endif
 134:F4_CORE/core_cm4.h ****   #else
 135:F4_CORE/core_cm4.h ****     #define __FPU_USED         1
 136:F4_CORE/core_cm4.h ****   #endif
 137:F4_CORE/core_cm4.h **** 
 138:F4_CORE/core_cm4.h **** #elif defined ( __ICCARM__ )
 139:F4_CORE/core_cm4.h ****   #if defined __ARMVFP__
 140:F4_CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 141:F4_CORE/core_cm4.h ****       #define __FPU_USED       1
 142:F4_CORE/core_cm4.h ****     #else
 143:F4_CORE/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 144:F4_CORE/core_cm4.h ****       #define __FPU_USED       0
 145:F4_CORE/core_cm4.h ****     #endif
 146:F4_CORE/core_cm4.h ****   #else
 147:F4_CORE/core_cm4.h ****     #define __FPU_USED         0
 148:F4_CORE/core_cm4.h ****   #endif
 149:F4_CORE/core_cm4.h **** 
 150:F4_CORE/core_cm4.h **** #elif defined ( __TMS470__ )
 151:F4_CORE/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 152:F4_CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 153:F4_CORE/core_cm4.h ****       #define __FPU_USED       1
 154:F4_CORE/core_cm4.h ****     #else
 155:F4_CORE/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 156:F4_CORE/core_cm4.h ****       #define __FPU_USED       0
 157:F4_CORE/core_cm4.h ****     #endif
 158:F4_CORE/core_cm4.h ****   #else
 159:F4_CORE/core_cm4.h ****     #define __FPU_USED         0
 160:F4_CORE/core_cm4.h ****   #endif
 161:F4_CORE/core_cm4.h **** 
 162:F4_CORE/core_cm4.h **** #elif defined ( __TASKING__ )
 163:F4_CORE/core_cm4.h ****   #if defined __FPU_VFP__
 164:F4_CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 165:F4_CORE/core_cm4.h ****       #define __FPU_USED       1
 166:F4_CORE/core_cm4.h ****     #else
 167:F4_CORE/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 168:F4_CORE/core_cm4.h ****       #define __FPU_USED       0
 169:F4_CORE/core_cm4.h ****     #endif
 170:F4_CORE/core_cm4.h ****   #else
 171:F4_CORE/core_cm4.h ****     #define __FPU_USED         0
 172:F4_CORE/core_cm4.h ****   #endif
 173:F4_CORE/core_cm4.h **** 
 174:F4_CORE/core_cm4.h **** #elif defined ( __CSMC__ )		/* Cosmic */
 175:F4_CORE/core_cm4.h ****   #if ( __CSMC__ & 0x400)		// FPU present for parser
 176:F4_CORE/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 177:F4_CORE/core_cm4.h ****       #define __FPU_USED       1
 178:F4_CORE/core_cm4.h ****     #else
 179:F4_CORE/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 180:F4_CORE/core_cm4.h ****       #define __FPU_USED       0
 181:F4_CORE/core_cm4.h ****     #endif
 182:F4_CORE/core_cm4.h ****   #else
 183:F4_CORE/core_cm4.h ****     #define __FPU_USED         0
 184:F4_CORE/core_cm4.h ****   #endif
 185:F4_CORE/core_cm4.h **** #endif
 186:F4_CORE/core_cm4.h **** 
 187:F4_CORE/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 188:F4_CORE/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
ARM GAS  /tmp/ccUTxatF.s 			page 31


 189:F4_CORE/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 190:F4_CORE/core_cm4.h **** #include <core_cmSimd.h>                 /* Compiler specific SIMD Intrinsics               */
 191:F4_CORE/core_cm4.h **** 
 192:F4_CORE/core_cm4.h **** #ifdef __cplusplus
 193:F4_CORE/core_cm4.h **** }
 194:F4_CORE/core_cm4.h **** #endif
 195:F4_CORE/core_cm4.h **** 
 196:F4_CORE/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 197:F4_CORE/core_cm4.h **** 
 198:F4_CORE/core_cm4.h **** #ifndef __CMSIS_GENERIC
 199:F4_CORE/core_cm4.h **** 
 200:F4_CORE/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 201:F4_CORE/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 202:F4_CORE/core_cm4.h **** 
 203:F4_CORE/core_cm4.h **** #ifdef __cplusplus
 204:F4_CORE/core_cm4.h ****  extern "C" {
 205:F4_CORE/core_cm4.h **** #endif
 206:F4_CORE/core_cm4.h **** 
 207:F4_CORE/core_cm4.h **** /* check device defines and use defaults */
 208:F4_CORE/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 209:F4_CORE/core_cm4.h ****   #ifndef __CM4_REV
 210:F4_CORE/core_cm4.h ****     #define __CM4_REV               0x0000
 211:F4_CORE/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 212:F4_CORE/core_cm4.h ****   #endif
 213:F4_CORE/core_cm4.h **** 
 214:F4_CORE/core_cm4.h ****   #ifndef __FPU_PRESENT
 215:F4_CORE/core_cm4.h ****     #define __FPU_PRESENT             0
 216:F4_CORE/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 217:F4_CORE/core_cm4.h ****   #endif
 218:F4_CORE/core_cm4.h **** 
 219:F4_CORE/core_cm4.h ****   #ifndef __MPU_PRESENT
 220:F4_CORE/core_cm4.h ****     #define __MPU_PRESENT             0
 221:F4_CORE/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 222:F4_CORE/core_cm4.h ****   #endif
 223:F4_CORE/core_cm4.h **** 
 224:F4_CORE/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 225:F4_CORE/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 226:F4_CORE/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 227:F4_CORE/core_cm4.h ****   #endif
 228:F4_CORE/core_cm4.h **** 
 229:F4_CORE/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 230:F4_CORE/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 231:F4_CORE/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 232:F4_CORE/core_cm4.h ****   #endif
 233:F4_CORE/core_cm4.h **** #endif
 234:F4_CORE/core_cm4.h **** 
 235:F4_CORE/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 236:F4_CORE/core_cm4.h **** /**
 237:F4_CORE/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 238:F4_CORE/core_cm4.h **** 
 239:F4_CORE/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 240:F4_CORE/core_cm4.h ****     \li to specify the access to peripheral variables.
 241:F4_CORE/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 242:F4_CORE/core_cm4.h **** */
 243:F4_CORE/core_cm4.h **** #ifdef __cplusplus
 244:F4_CORE/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 245:F4_CORE/core_cm4.h **** #else
ARM GAS  /tmp/ccUTxatF.s 			page 32


 246:F4_CORE/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 247:F4_CORE/core_cm4.h **** #endif
 248:F4_CORE/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 249:F4_CORE/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 250:F4_CORE/core_cm4.h **** 
 251:F4_CORE/core_cm4.h **** /*@} end of group Cortex_M4 */
 252:F4_CORE/core_cm4.h **** 
 253:F4_CORE/core_cm4.h **** 
 254:F4_CORE/core_cm4.h **** 
 255:F4_CORE/core_cm4.h **** /*******************************************************************************
 256:F4_CORE/core_cm4.h ****  *                 Register Abstraction
 257:F4_CORE/core_cm4.h ****   Core Register contain:
 258:F4_CORE/core_cm4.h ****   - Core Register
 259:F4_CORE/core_cm4.h ****   - Core NVIC Register
 260:F4_CORE/core_cm4.h ****   - Core SCB Register
 261:F4_CORE/core_cm4.h ****   - Core SysTick Register
 262:F4_CORE/core_cm4.h ****   - Core Debug Register
 263:F4_CORE/core_cm4.h ****   - Core MPU Register
 264:F4_CORE/core_cm4.h ****   - Core FPU Register
 265:F4_CORE/core_cm4.h ****  ******************************************************************************/
 266:F4_CORE/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 267:F4_CORE/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 268:F4_CORE/core_cm4.h **** */
 269:F4_CORE/core_cm4.h **** 
 270:F4_CORE/core_cm4.h **** /** \ingroup    CMSIS_core_register
 271:F4_CORE/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 272:F4_CORE/core_cm4.h ****     \brief  Core Register type definitions.
 273:F4_CORE/core_cm4.h ****   @{
 274:F4_CORE/core_cm4.h ****  */
 275:F4_CORE/core_cm4.h **** 
 276:F4_CORE/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 277:F4_CORE/core_cm4.h ****  */
 278:F4_CORE/core_cm4.h **** typedef union
 279:F4_CORE/core_cm4.h **** {
 280:F4_CORE/core_cm4.h ****   struct
 281:F4_CORE/core_cm4.h ****   {
 282:F4_CORE/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 283:F4_CORE/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 284:F4_CORE/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 285:F4_CORE/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 286:F4_CORE/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 287:F4_CORE/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 288:F4_CORE/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 289:F4_CORE/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 290:F4_CORE/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 291:F4_CORE/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 292:F4_CORE/core_cm4.h **** } APSR_Type;
 293:F4_CORE/core_cm4.h **** 
 294:F4_CORE/core_cm4.h **** /* APSR Register Definitions */
 295:F4_CORE/core_cm4.h **** #define APSR_N_Pos                         31                                             /*!< APSR
 296:F4_CORE/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 297:F4_CORE/core_cm4.h **** 
 298:F4_CORE/core_cm4.h **** #define APSR_Z_Pos                         30                                             /*!< APSR
 299:F4_CORE/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 300:F4_CORE/core_cm4.h **** 
 301:F4_CORE/core_cm4.h **** #define APSR_C_Pos                         29                                             /*!< APSR
 302:F4_CORE/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
ARM GAS  /tmp/ccUTxatF.s 			page 33


 303:F4_CORE/core_cm4.h **** 
 304:F4_CORE/core_cm4.h **** #define APSR_V_Pos                         28                                             /*!< APSR
 305:F4_CORE/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 306:F4_CORE/core_cm4.h **** 
 307:F4_CORE/core_cm4.h **** #define APSR_Q_Pos                         27                                             /*!< APSR
 308:F4_CORE/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 309:F4_CORE/core_cm4.h **** 
 310:F4_CORE/core_cm4.h **** #define APSR_GE_Pos                        16                                             /*!< APSR
 311:F4_CORE/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 312:F4_CORE/core_cm4.h **** 
 313:F4_CORE/core_cm4.h **** 
 314:F4_CORE/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 315:F4_CORE/core_cm4.h ****  */
 316:F4_CORE/core_cm4.h **** typedef union
 317:F4_CORE/core_cm4.h **** {
 318:F4_CORE/core_cm4.h ****   struct
 319:F4_CORE/core_cm4.h ****   {
 320:F4_CORE/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 321:F4_CORE/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 322:F4_CORE/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 323:F4_CORE/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 324:F4_CORE/core_cm4.h **** } IPSR_Type;
 325:F4_CORE/core_cm4.h **** 
 326:F4_CORE/core_cm4.h **** /* IPSR Register Definitions */
 327:F4_CORE/core_cm4.h **** #define IPSR_ISR_Pos                        0                                             /*!< IPSR
 328:F4_CORE/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 329:F4_CORE/core_cm4.h **** 
 330:F4_CORE/core_cm4.h **** 
 331:F4_CORE/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 332:F4_CORE/core_cm4.h ****  */
 333:F4_CORE/core_cm4.h **** typedef union
 334:F4_CORE/core_cm4.h **** {
 335:F4_CORE/core_cm4.h ****   struct
 336:F4_CORE/core_cm4.h ****   {
 337:F4_CORE/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 338:F4_CORE/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 339:F4_CORE/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 340:F4_CORE/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 341:F4_CORE/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 342:F4_CORE/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 343:F4_CORE/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 344:F4_CORE/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 345:F4_CORE/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 346:F4_CORE/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 347:F4_CORE/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 348:F4_CORE/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 349:F4_CORE/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 350:F4_CORE/core_cm4.h **** } xPSR_Type;
 351:F4_CORE/core_cm4.h **** 
 352:F4_CORE/core_cm4.h **** /* xPSR Register Definitions */
 353:F4_CORE/core_cm4.h **** #define xPSR_N_Pos                         31                                             /*!< xPSR
 354:F4_CORE/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 355:F4_CORE/core_cm4.h **** 
 356:F4_CORE/core_cm4.h **** #define xPSR_Z_Pos                         30                                             /*!< xPSR
 357:F4_CORE/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 358:F4_CORE/core_cm4.h **** 
 359:F4_CORE/core_cm4.h **** #define xPSR_C_Pos                         29                                             /*!< xPSR
ARM GAS  /tmp/ccUTxatF.s 			page 34


 360:F4_CORE/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 361:F4_CORE/core_cm4.h **** 
 362:F4_CORE/core_cm4.h **** #define xPSR_V_Pos                         28                                             /*!< xPSR
 363:F4_CORE/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 364:F4_CORE/core_cm4.h **** 
 365:F4_CORE/core_cm4.h **** #define xPSR_Q_Pos                         27                                             /*!< xPSR
 366:F4_CORE/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 367:F4_CORE/core_cm4.h **** 
 368:F4_CORE/core_cm4.h **** #define xPSR_IT_Pos                        25                                             /*!< xPSR
 369:F4_CORE/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 370:F4_CORE/core_cm4.h **** 
 371:F4_CORE/core_cm4.h **** #define xPSR_T_Pos                         24                                             /*!< xPSR
 372:F4_CORE/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 373:F4_CORE/core_cm4.h **** 
 374:F4_CORE/core_cm4.h **** #define xPSR_GE_Pos                        16                                             /*!< xPSR
 375:F4_CORE/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 376:F4_CORE/core_cm4.h **** 
 377:F4_CORE/core_cm4.h **** #define xPSR_ISR_Pos                        0                                             /*!< xPSR
 378:F4_CORE/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 379:F4_CORE/core_cm4.h **** 
 380:F4_CORE/core_cm4.h **** 
 381:F4_CORE/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 382:F4_CORE/core_cm4.h ****  */
 383:F4_CORE/core_cm4.h **** typedef union
 384:F4_CORE/core_cm4.h **** {
 385:F4_CORE/core_cm4.h ****   struct
 386:F4_CORE/core_cm4.h ****   {
 387:F4_CORE/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 388:F4_CORE/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 389:F4_CORE/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 390:F4_CORE/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 391:F4_CORE/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 392:F4_CORE/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 393:F4_CORE/core_cm4.h **** } CONTROL_Type;
 394:F4_CORE/core_cm4.h **** 
 395:F4_CORE/core_cm4.h **** /* CONTROL Register Definitions */
 396:F4_CORE/core_cm4.h **** #define CONTROL_FPCA_Pos                    2                                             /*!< CONT
 397:F4_CORE/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 398:F4_CORE/core_cm4.h **** 
 399:F4_CORE/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1                                             /*!< CONT
 400:F4_CORE/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 401:F4_CORE/core_cm4.h **** 
 402:F4_CORE/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0                                             /*!< CONT
 403:F4_CORE/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 404:F4_CORE/core_cm4.h **** 
 405:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_CORE */
 406:F4_CORE/core_cm4.h **** 
 407:F4_CORE/core_cm4.h **** 
 408:F4_CORE/core_cm4.h **** /** \ingroup    CMSIS_core_register
 409:F4_CORE/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 410:F4_CORE/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 411:F4_CORE/core_cm4.h ****   @{
 412:F4_CORE/core_cm4.h ****  */
 413:F4_CORE/core_cm4.h **** 
 414:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 415:F4_CORE/core_cm4.h ****  */
 416:F4_CORE/core_cm4.h **** typedef struct
ARM GAS  /tmp/ccUTxatF.s 			page 35


 417:F4_CORE/core_cm4.h **** {
 418:F4_CORE/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 419:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[24];
 420:F4_CORE/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 421:F4_CORE/core_cm4.h ****        uint32_t RSERVED1[24];
 422:F4_CORE/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 423:F4_CORE/core_cm4.h ****        uint32_t RESERVED2[24];
 424:F4_CORE/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 425:F4_CORE/core_cm4.h ****        uint32_t RESERVED3[24];
 426:F4_CORE/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 427:F4_CORE/core_cm4.h ****        uint32_t RESERVED4[56];
 428:F4_CORE/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 429:F4_CORE/core_cm4.h ****        uint32_t RESERVED5[644];
 430:F4_CORE/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 431:F4_CORE/core_cm4.h **** }  NVIC_Type;
 432:F4_CORE/core_cm4.h **** 
 433:F4_CORE/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 434:F4_CORE/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 435:F4_CORE/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 436:F4_CORE/core_cm4.h **** 
 437:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 438:F4_CORE/core_cm4.h **** 
 439:F4_CORE/core_cm4.h **** 
 440:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 441:F4_CORE/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 442:F4_CORE/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 443:F4_CORE/core_cm4.h ****   @{
 444:F4_CORE/core_cm4.h ****  */
 445:F4_CORE/core_cm4.h **** 
 446:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 447:F4_CORE/core_cm4.h ****  */
 448:F4_CORE/core_cm4.h **** typedef struct
 449:F4_CORE/core_cm4.h **** {
 450:F4_CORE/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 451:F4_CORE/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 452:F4_CORE/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 453:F4_CORE/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 454:F4_CORE/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 455:F4_CORE/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 456:F4_CORE/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 457:F4_CORE/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 458:F4_CORE/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 459:F4_CORE/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 460:F4_CORE/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 461:F4_CORE/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 462:F4_CORE/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 463:F4_CORE/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 464:F4_CORE/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 465:F4_CORE/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 466:F4_CORE/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 467:F4_CORE/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 468:F4_CORE/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 469:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[5];
 470:F4_CORE/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 471:F4_CORE/core_cm4.h **** } SCB_Type;
 472:F4_CORE/core_cm4.h **** 
 473:F4_CORE/core_cm4.h **** /* SCB CPUID Register Definitions */
ARM GAS  /tmp/ccUTxatF.s 			page 36


 474:F4_CORE/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 475:F4_CORE/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 476:F4_CORE/core_cm4.h **** 
 477:F4_CORE/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 478:F4_CORE/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 479:F4_CORE/core_cm4.h **** 
 480:F4_CORE/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 481:F4_CORE/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 482:F4_CORE/core_cm4.h **** 
 483:F4_CORE/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 484:F4_CORE/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 485:F4_CORE/core_cm4.h **** 
 486:F4_CORE/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 487:F4_CORE/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 488:F4_CORE/core_cm4.h **** 
 489:F4_CORE/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 490:F4_CORE/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 491:F4_CORE/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 492:F4_CORE/core_cm4.h **** 
 493:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 494:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 495:F4_CORE/core_cm4.h **** 
 496:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 497:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 498:F4_CORE/core_cm4.h **** 
 499:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 500:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 501:F4_CORE/core_cm4.h **** 
 502:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 503:F4_CORE/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 504:F4_CORE/core_cm4.h **** 
 505:F4_CORE/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 506:F4_CORE/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 507:F4_CORE/core_cm4.h **** 
 508:F4_CORE/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 509:F4_CORE/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 510:F4_CORE/core_cm4.h **** 
 511:F4_CORE/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 512:F4_CORE/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 513:F4_CORE/core_cm4.h **** 
 514:F4_CORE/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 515:F4_CORE/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 516:F4_CORE/core_cm4.h **** 
 517:F4_CORE/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 518:F4_CORE/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 519:F4_CORE/core_cm4.h **** 
 520:F4_CORE/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 521:F4_CORE/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 522:F4_CORE/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 523:F4_CORE/core_cm4.h **** 
 524:F4_CORE/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 525:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 526:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 527:F4_CORE/core_cm4.h **** 
 528:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 529:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 530:F4_CORE/core_cm4.h **** 
ARM GAS  /tmp/ccUTxatF.s 			page 37


 531:F4_CORE/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 532:F4_CORE/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 533:F4_CORE/core_cm4.h **** 
 534:F4_CORE/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 535:F4_CORE/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 536:F4_CORE/core_cm4.h **** 
 537:F4_CORE/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 538:F4_CORE/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 539:F4_CORE/core_cm4.h **** 
 540:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 541:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 542:F4_CORE/core_cm4.h **** 
 543:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 544:F4_CORE/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 545:F4_CORE/core_cm4.h **** 
 546:F4_CORE/core_cm4.h **** /* SCB System Control Register Definitions */
 547:F4_CORE/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 548:F4_CORE/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 549:F4_CORE/core_cm4.h **** 
 550:F4_CORE/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 551:F4_CORE/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 552:F4_CORE/core_cm4.h **** 
 553:F4_CORE/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 554:F4_CORE/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 555:F4_CORE/core_cm4.h **** 
 556:F4_CORE/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 557:F4_CORE/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 558:F4_CORE/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 559:F4_CORE/core_cm4.h **** 
 560:F4_CORE/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 561:F4_CORE/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 562:F4_CORE/core_cm4.h **** 
 563:F4_CORE/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 564:F4_CORE/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 565:F4_CORE/core_cm4.h **** 
 566:F4_CORE/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 567:F4_CORE/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 568:F4_CORE/core_cm4.h **** 
 569:F4_CORE/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 570:F4_CORE/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 571:F4_CORE/core_cm4.h **** 
 572:F4_CORE/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 573:F4_CORE/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 574:F4_CORE/core_cm4.h **** 
 575:F4_CORE/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 576:F4_CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 577:F4_CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 578:F4_CORE/core_cm4.h **** 
 579:F4_CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 580:F4_CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 581:F4_CORE/core_cm4.h **** 
 582:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 583:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 584:F4_CORE/core_cm4.h **** 
 585:F4_CORE/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 586:F4_CORE/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 587:F4_CORE/core_cm4.h **** 
ARM GAS  /tmp/ccUTxatF.s 			page 38


 588:F4_CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 589:F4_CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 590:F4_CORE/core_cm4.h **** 
 591:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 592:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 593:F4_CORE/core_cm4.h **** 
 594:F4_CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 595:F4_CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 596:F4_CORE/core_cm4.h **** 
 597:F4_CORE/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 598:F4_CORE/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 599:F4_CORE/core_cm4.h **** 
 600:F4_CORE/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 601:F4_CORE/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 602:F4_CORE/core_cm4.h **** 
 603:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 604:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 605:F4_CORE/core_cm4.h **** 
 606:F4_CORE/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 607:F4_CORE/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 608:F4_CORE/core_cm4.h **** 
 609:F4_CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 610:F4_CORE/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 611:F4_CORE/core_cm4.h **** 
 612:F4_CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 613:F4_CORE/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 614:F4_CORE/core_cm4.h **** 
 615:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 616:F4_CORE/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 617:F4_CORE/core_cm4.h **** 
 618:F4_CORE/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 619:F4_CORE/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 620:F4_CORE/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 621:F4_CORE/core_cm4.h **** 
 622:F4_CORE/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 623:F4_CORE/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 624:F4_CORE/core_cm4.h **** 
 625:F4_CORE/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 626:F4_CORE/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 627:F4_CORE/core_cm4.h **** 
 628:F4_CORE/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 629:F4_CORE/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 630:F4_CORE/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 631:F4_CORE/core_cm4.h **** 
 632:F4_CORE/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 633:F4_CORE/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 634:F4_CORE/core_cm4.h **** 
 635:F4_CORE/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 636:F4_CORE/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 637:F4_CORE/core_cm4.h **** 
 638:F4_CORE/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 639:F4_CORE/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 640:F4_CORE/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 641:F4_CORE/core_cm4.h **** 
 642:F4_CORE/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 643:F4_CORE/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 644:F4_CORE/core_cm4.h **** 
ARM GAS  /tmp/ccUTxatF.s 			page 39


 645:F4_CORE/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 646:F4_CORE/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 647:F4_CORE/core_cm4.h **** 
 648:F4_CORE/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 649:F4_CORE/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 650:F4_CORE/core_cm4.h **** 
 651:F4_CORE/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 652:F4_CORE/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 653:F4_CORE/core_cm4.h **** 
 654:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_SCB */
 655:F4_CORE/core_cm4.h **** 
 656:F4_CORE/core_cm4.h **** 
 657:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 658:F4_CORE/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 659:F4_CORE/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 660:F4_CORE/core_cm4.h ****   @{
 661:F4_CORE/core_cm4.h ****  */
 662:F4_CORE/core_cm4.h **** 
 663:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 664:F4_CORE/core_cm4.h ****  */
 665:F4_CORE/core_cm4.h **** typedef struct
 666:F4_CORE/core_cm4.h **** {
 667:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[1];
 668:F4_CORE/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 669:F4_CORE/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 670:F4_CORE/core_cm4.h **** } SCnSCB_Type;
 671:F4_CORE/core_cm4.h **** 
 672:F4_CORE/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 673:F4_CORE/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 674:F4_CORE/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 675:F4_CORE/core_cm4.h **** 
 676:F4_CORE/core_cm4.h **** /* Auxiliary Control Register Definitions */
 677:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 678:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 679:F4_CORE/core_cm4.h **** 
 680:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 681:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 682:F4_CORE/core_cm4.h **** 
 683:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 684:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 685:F4_CORE/core_cm4.h **** 
 686:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 687:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 688:F4_CORE/core_cm4.h **** 
 689:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 690:F4_CORE/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 691:F4_CORE/core_cm4.h **** 
 692:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 693:F4_CORE/core_cm4.h **** 
 694:F4_CORE/core_cm4.h **** 
 695:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 696:F4_CORE/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 697:F4_CORE/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 698:F4_CORE/core_cm4.h ****   @{
 699:F4_CORE/core_cm4.h ****  */
 700:F4_CORE/core_cm4.h **** 
 701:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
ARM GAS  /tmp/ccUTxatF.s 			page 40


 702:F4_CORE/core_cm4.h ****  */
 703:F4_CORE/core_cm4.h **** typedef struct
 704:F4_CORE/core_cm4.h **** {
 705:F4_CORE/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 706:F4_CORE/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 707:F4_CORE/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 708:F4_CORE/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 709:F4_CORE/core_cm4.h **** } SysTick_Type;
 710:F4_CORE/core_cm4.h **** 
 711:F4_CORE/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 712:F4_CORE/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 713:F4_CORE/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 714:F4_CORE/core_cm4.h **** 
 715:F4_CORE/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 716:F4_CORE/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 717:F4_CORE/core_cm4.h **** 
 718:F4_CORE/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 719:F4_CORE/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 720:F4_CORE/core_cm4.h **** 
 721:F4_CORE/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 722:F4_CORE/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 723:F4_CORE/core_cm4.h **** 
 724:F4_CORE/core_cm4.h **** /* SysTick Reload Register Definitions */
 725:F4_CORE/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 726:F4_CORE/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 727:F4_CORE/core_cm4.h **** 
 728:F4_CORE/core_cm4.h **** /* SysTick Current Register Definitions */
 729:F4_CORE/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 730:F4_CORE/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 731:F4_CORE/core_cm4.h **** 
 732:F4_CORE/core_cm4.h **** /* SysTick Calibration Register Definitions */
 733:F4_CORE/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 734:F4_CORE/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 735:F4_CORE/core_cm4.h **** 
 736:F4_CORE/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 737:F4_CORE/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 738:F4_CORE/core_cm4.h **** 
 739:F4_CORE/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 740:F4_CORE/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 741:F4_CORE/core_cm4.h **** 
 742:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 743:F4_CORE/core_cm4.h **** 
 744:F4_CORE/core_cm4.h **** 
 745:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 746:F4_CORE/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 747:F4_CORE/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 748:F4_CORE/core_cm4.h ****   @{
 749:F4_CORE/core_cm4.h ****  */
 750:F4_CORE/core_cm4.h **** 
 751:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 752:F4_CORE/core_cm4.h ****  */
 753:F4_CORE/core_cm4.h **** typedef struct
 754:F4_CORE/core_cm4.h **** {
 755:F4_CORE/core_cm4.h ****   __O  union
 756:F4_CORE/core_cm4.h ****   {
 757:F4_CORE/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 758:F4_CORE/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
ARM GAS  /tmp/ccUTxatF.s 			page 41


 759:F4_CORE/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 760:F4_CORE/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 761:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[864];
 762:F4_CORE/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 763:F4_CORE/core_cm4.h ****        uint32_t RESERVED1[15];
 764:F4_CORE/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 765:F4_CORE/core_cm4.h ****        uint32_t RESERVED2[15];
 766:F4_CORE/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 767:F4_CORE/core_cm4.h ****        uint32_t RESERVED3[29];
 768:F4_CORE/core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 769:F4_CORE/core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 770:F4_CORE/core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 771:F4_CORE/core_cm4.h ****        uint32_t RESERVED4[43];
 772:F4_CORE/core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 773:F4_CORE/core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 774:F4_CORE/core_cm4.h ****        uint32_t RESERVED5[6];
 775:F4_CORE/core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 776:F4_CORE/core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 777:F4_CORE/core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 778:F4_CORE/core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 779:F4_CORE/core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 780:F4_CORE/core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 781:F4_CORE/core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 782:F4_CORE/core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 783:F4_CORE/core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 784:F4_CORE/core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 785:F4_CORE/core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 786:F4_CORE/core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 787:F4_CORE/core_cm4.h **** } ITM_Type;
 788:F4_CORE/core_cm4.h **** 
 789:F4_CORE/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 790:F4_CORE/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 791:F4_CORE/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 792:F4_CORE/core_cm4.h **** 
 793:F4_CORE/core_cm4.h **** /* ITM Trace Control Register Definitions */
 794:F4_CORE/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 795:F4_CORE/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 796:F4_CORE/core_cm4.h **** 
 797:F4_CORE/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 798:F4_CORE/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 799:F4_CORE/core_cm4.h **** 
 800:F4_CORE/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 801:F4_CORE/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 802:F4_CORE/core_cm4.h **** 
 803:F4_CORE/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 804:F4_CORE/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 805:F4_CORE/core_cm4.h **** 
 806:F4_CORE/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 807:F4_CORE/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 808:F4_CORE/core_cm4.h **** 
 809:F4_CORE/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 810:F4_CORE/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 811:F4_CORE/core_cm4.h **** 
 812:F4_CORE/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 813:F4_CORE/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 814:F4_CORE/core_cm4.h **** 
 815:F4_CORE/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
ARM GAS  /tmp/ccUTxatF.s 			page 42


 816:F4_CORE/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 817:F4_CORE/core_cm4.h **** 
 818:F4_CORE/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 819:F4_CORE/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 820:F4_CORE/core_cm4.h **** 
 821:F4_CORE/core_cm4.h **** /* ITM Integration Write Register Definitions */
 822:F4_CORE/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 823:F4_CORE/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 824:F4_CORE/core_cm4.h **** 
 825:F4_CORE/core_cm4.h **** /* ITM Integration Read Register Definitions */
 826:F4_CORE/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 827:F4_CORE/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 828:F4_CORE/core_cm4.h **** 
 829:F4_CORE/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 830:F4_CORE/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 831:F4_CORE/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 832:F4_CORE/core_cm4.h **** 
 833:F4_CORE/core_cm4.h **** /* ITM Lock Status Register Definitions */
 834:F4_CORE/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 835:F4_CORE/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 836:F4_CORE/core_cm4.h **** 
 837:F4_CORE/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 838:F4_CORE/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 839:F4_CORE/core_cm4.h **** 
 840:F4_CORE/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 841:F4_CORE/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 842:F4_CORE/core_cm4.h **** 
 843:F4_CORE/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 844:F4_CORE/core_cm4.h **** 
 845:F4_CORE/core_cm4.h **** 
 846:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:F4_CORE/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 848:F4_CORE/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 849:F4_CORE/core_cm4.h ****   @{
 850:F4_CORE/core_cm4.h ****  */
 851:F4_CORE/core_cm4.h **** 
 852:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 853:F4_CORE/core_cm4.h ****  */
 854:F4_CORE/core_cm4.h **** typedef struct
 855:F4_CORE/core_cm4.h **** {
 856:F4_CORE/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 857:F4_CORE/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 858:F4_CORE/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 859:F4_CORE/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 860:F4_CORE/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 861:F4_CORE/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 862:F4_CORE/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 863:F4_CORE/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 864:F4_CORE/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 865:F4_CORE/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 866:F4_CORE/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 867:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[1];
 868:F4_CORE/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 869:F4_CORE/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 870:F4_CORE/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 871:F4_CORE/core_cm4.h ****        uint32_t RESERVED1[1];
 872:F4_CORE/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
ARM GAS  /tmp/ccUTxatF.s 			page 43


 873:F4_CORE/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 874:F4_CORE/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 875:F4_CORE/core_cm4.h ****        uint32_t RESERVED2[1];
 876:F4_CORE/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 877:F4_CORE/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 878:F4_CORE/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 879:F4_CORE/core_cm4.h **** } DWT_Type;
 880:F4_CORE/core_cm4.h **** 
 881:F4_CORE/core_cm4.h **** /* DWT Control Register Definitions */
 882:F4_CORE/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 883:F4_CORE/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 884:F4_CORE/core_cm4.h **** 
 885:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 886:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 887:F4_CORE/core_cm4.h **** 
 888:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 889:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 890:F4_CORE/core_cm4.h **** 
 891:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 892:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 893:F4_CORE/core_cm4.h **** 
 894:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 895:F4_CORE/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 896:F4_CORE/core_cm4.h **** 
 897:F4_CORE/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 898:F4_CORE/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 899:F4_CORE/core_cm4.h **** 
 900:F4_CORE/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 901:F4_CORE/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 902:F4_CORE/core_cm4.h **** 
 903:F4_CORE/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 904:F4_CORE/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 905:F4_CORE/core_cm4.h **** 
 906:F4_CORE/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 907:F4_CORE/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 908:F4_CORE/core_cm4.h **** 
 909:F4_CORE/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 910:F4_CORE/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 911:F4_CORE/core_cm4.h **** 
 912:F4_CORE/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 913:F4_CORE/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 914:F4_CORE/core_cm4.h **** 
 915:F4_CORE/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 916:F4_CORE/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 917:F4_CORE/core_cm4.h **** 
 918:F4_CORE/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 919:F4_CORE/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 920:F4_CORE/core_cm4.h **** 
 921:F4_CORE/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 922:F4_CORE/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 923:F4_CORE/core_cm4.h **** 
 924:F4_CORE/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 925:F4_CORE/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 926:F4_CORE/core_cm4.h **** 
 927:F4_CORE/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 928:F4_CORE/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 929:F4_CORE/core_cm4.h **** 
ARM GAS  /tmp/ccUTxatF.s 			page 44


 930:F4_CORE/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 931:F4_CORE/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 932:F4_CORE/core_cm4.h **** 
 933:F4_CORE/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 934:F4_CORE/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 935:F4_CORE/core_cm4.h **** 
 936:F4_CORE/core_cm4.h **** /* DWT CPI Count Register Definitions */
 937:F4_CORE/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 938:F4_CORE/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 939:F4_CORE/core_cm4.h **** 
 940:F4_CORE/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 941:F4_CORE/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 942:F4_CORE/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 943:F4_CORE/core_cm4.h **** 
 944:F4_CORE/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 945:F4_CORE/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 946:F4_CORE/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 947:F4_CORE/core_cm4.h **** 
 948:F4_CORE/core_cm4.h **** /* DWT LSU Count Register Definitions */
 949:F4_CORE/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 950:F4_CORE/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 951:F4_CORE/core_cm4.h **** 
 952:F4_CORE/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 953:F4_CORE/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 954:F4_CORE/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 955:F4_CORE/core_cm4.h **** 
 956:F4_CORE/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 957:F4_CORE/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 958:F4_CORE/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 959:F4_CORE/core_cm4.h **** 
 960:F4_CORE/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 961:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 962:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 963:F4_CORE/core_cm4.h **** 
 964:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 965:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 966:F4_CORE/core_cm4.h **** 
 967:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 968:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 969:F4_CORE/core_cm4.h **** 
 970:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 971:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 972:F4_CORE/core_cm4.h **** 
 973:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 974:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 975:F4_CORE/core_cm4.h **** 
 976:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 977:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 978:F4_CORE/core_cm4.h **** 
 979:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 980:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 981:F4_CORE/core_cm4.h **** 
 982:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 983:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 984:F4_CORE/core_cm4.h **** 
 985:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 986:F4_CORE/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
ARM GAS  /tmp/ccUTxatF.s 			page 45


 987:F4_CORE/core_cm4.h **** 
 988:F4_CORE/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 989:F4_CORE/core_cm4.h **** 
 990:F4_CORE/core_cm4.h **** 
 991:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
 992:F4_CORE/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 993:F4_CORE/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 994:F4_CORE/core_cm4.h ****   @{
 995:F4_CORE/core_cm4.h ****  */
 996:F4_CORE/core_cm4.h **** 
 997:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 998:F4_CORE/core_cm4.h ****  */
 999:F4_CORE/core_cm4.h **** typedef struct
1000:F4_CORE/core_cm4.h **** {
1001:F4_CORE/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1002:F4_CORE/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1003:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[2];
1004:F4_CORE/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1005:F4_CORE/core_cm4.h ****        uint32_t RESERVED1[55];
1006:F4_CORE/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1007:F4_CORE/core_cm4.h ****        uint32_t RESERVED2[131];
1008:F4_CORE/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1009:F4_CORE/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1010:F4_CORE/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1011:F4_CORE/core_cm4.h ****        uint32_t RESERVED3[759];
1012:F4_CORE/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1013:F4_CORE/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1014:F4_CORE/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1015:F4_CORE/core_cm4.h ****        uint32_t RESERVED4[1];
1016:F4_CORE/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1017:F4_CORE/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1018:F4_CORE/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1019:F4_CORE/core_cm4.h ****        uint32_t RESERVED5[39];
1020:F4_CORE/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1021:F4_CORE/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1022:F4_CORE/core_cm4.h ****        uint32_t RESERVED7[8];
1023:F4_CORE/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1024:F4_CORE/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1025:F4_CORE/core_cm4.h **** } TPI_Type;
1026:F4_CORE/core_cm4.h **** 
1027:F4_CORE/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1028:F4_CORE/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
1029:F4_CORE/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1030:F4_CORE/core_cm4.h **** 
1031:F4_CORE/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1032:F4_CORE/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
1033:F4_CORE/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1034:F4_CORE/core_cm4.h **** 
1035:F4_CORE/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1036:F4_CORE/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
1037:F4_CORE/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1038:F4_CORE/core_cm4.h **** 
1039:F4_CORE/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
1040:F4_CORE/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1041:F4_CORE/core_cm4.h **** 
1042:F4_CORE/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
1043:F4_CORE/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
ARM GAS  /tmp/ccUTxatF.s 			page 46


1044:F4_CORE/core_cm4.h **** 
1045:F4_CORE/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
1046:F4_CORE/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1047:F4_CORE/core_cm4.h **** 
1048:F4_CORE/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1049:F4_CORE/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
1050:F4_CORE/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1051:F4_CORE/core_cm4.h **** 
1052:F4_CORE/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
1053:F4_CORE/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1054:F4_CORE/core_cm4.h **** 
1055:F4_CORE/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1056:F4_CORE/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
1057:F4_CORE/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1058:F4_CORE/core_cm4.h **** 
1059:F4_CORE/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1060:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1061:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1062:F4_CORE/core_cm4.h **** 
1063:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1064:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1065:F4_CORE/core_cm4.h **** 
1066:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1067:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1068:F4_CORE/core_cm4.h **** 
1069:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1070:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1071:F4_CORE/core_cm4.h **** 
1072:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
1073:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1074:F4_CORE/core_cm4.h **** 
1075:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
1076:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1077:F4_CORE/core_cm4.h **** 
1078:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
1079:F4_CORE/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1080:F4_CORE/core_cm4.h **** 
1081:F4_CORE/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1082:F4_CORE/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1083:F4_CORE/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1084:F4_CORE/core_cm4.h **** 
1085:F4_CORE/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1087:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:F4_CORE/core_cm4.h **** 
1089:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1090:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:F4_CORE/core_cm4.h **** 
1092:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1093:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:F4_CORE/core_cm4.h **** 
1095:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1096:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:F4_CORE/core_cm4.h **** 
1098:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1099:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:F4_CORE/core_cm4.h **** 
ARM GAS  /tmp/ccUTxatF.s 			page 47


1101:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1102:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:F4_CORE/core_cm4.h **** 
1104:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1105:F4_CORE/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:F4_CORE/core_cm4.h **** 
1107:F4_CORE/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1108:F4_CORE/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1109:F4_CORE/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1110:F4_CORE/core_cm4.h **** 
1111:F4_CORE/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1112:F4_CORE/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1113:F4_CORE/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1114:F4_CORE/core_cm4.h **** 
1115:F4_CORE/core_cm4.h **** /* TPI DEVID Register Definitions */
1116:F4_CORE/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1117:F4_CORE/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1118:F4_CORE/core_cm4.h **** 
1119:F4_CORE/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1120:F4_CORE/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1121:F4_CORE/core_cm4.h **** 
1122:F4_CORE/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1123:F4_CORE/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1124:F4_CORE/core_cm4.h **** 
1125:F4_CORE/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1126:F4_CORE/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1127:F4_CORE/core_cm4.h **** 
1128:F4_CORE/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1129:F4_CORE/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1130:F4_CORE/core_cm4.h **** 
1131:F4_CORE/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1132:F4_CORE/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1133:F4_CORE/core_cm4.h **** 
1134:F4_CORE/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1135:F4_CORE/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1136:F4_CORE/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1137:F4_CORE/core_cm4.h **** 
1138:F4_CORE/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1139:F4_CORE/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:F4_CORE/core_cm4.h **** 
1141:F4_CORE/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1142:F4_CORE/core_cm4.h **** 
1143:F4_CORE/core_cm4.h **** 
1144:F4_CORE/core_cm4.h **** #if (__MPU_PRESENT == 1)
1145:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
1146:F4_CORE/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1147:F4_CORE/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1148:F4_CORE/core_cm4.h ****   @{
1149:F4_CORE/core_cm4.h ****  */
1150:F4_CORE/core_cm4.h **** 
1151:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1152:F4_CORE/core_cm4.h ****  */
1153:F4_CORE/core_cm4.h **** typedef struct
1154:F4_CORE/core_cm4.h **** {
1155:F4_CORE/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1156:F4_CORE/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1157:F4_CORE/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
ARM GAS  /tmp/ccUTxatF.s 			page 48


1158:F4_CORE/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1159:F4_CORE/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1160:F4_CORE/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1161:F4_CORE/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1162:F4_CORE/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1163:F4_CORE/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1164:F4_CORE/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1165:F4_CORE/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1166:F4_CORE/core_cm4.h **** } MPU_Type;
1167:F4_CORE/core_cm4.h **** 
1168:F4_CORE/core_cm4.h **** /* MPU Type Register */
1169:F4_CORE/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1170:F4_CORE/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1171:F4_CORE/core_cm4.h **** 
1172:F4_CORE/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1173:F4_CORE/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1174:F4_CORE/core_cm4.h **** 
1175:F4_CORE/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1176:F4_CORE/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1177:F4_CORE/core_cm4.h **** 
1178:F4_CORE/core_cm4.h **** /* MPU Control Register */
1179:F4_CORE/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1180:F4_CORE/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1181:F4_CORE/core_cm4.h **** 
1182:F4_CORE/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1183:F4_CORE/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1184:F4_CORE/core_cm4.h **** 
1185:F4_CORE/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1186:F4_CORE/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1187:F4_CORE/core_cm4.h **** 
1188:F4_CORE/core_cm4.h **** /* MPU Region Number Register */
1189:F4_CORE/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1190:F4_CORE/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1191:F4_CORE/core_cm4.h **** 
1192:F4_CORE/core_cm4.h **** /* MPU Region Base Address Register */
1193:F4_CORE/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1194:F4_CORE/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1195:F4_CORE/core_cm4.h **** 
1196:F4_CORE/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1197:F4_CORE/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1198:F4_CORE/core_cm4.h **** 
1199:F4_CORE/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1200:F4_CORE/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1201:F4_CORE/core_cm4.h **** 
1202:F4_CORE/core_cm4.h **** /* MPU Region Attribute and Size Register */
1203:F4_CORE/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1204:F4_CORE/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1205:F4_CORE/core_cm4.h **** 
1206:F4_CORE/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1207:F4_CORE/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1208:F4_CORE/core_cm4.h **** 
1209:F4_CORE/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1210:F4_CORE/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1211:F4_CORE/core_cm4.h **** 
1212:F4_CORE/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1213:F4_CORE/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1214:F4_CORE/core_cm4.h **** 
ARM GAS  /tmp/ccUTxatF.s 			page 49


1215:F4_CORE/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1216:F4_CORE/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1217:F4_CORE/core_cm4.h **** 
1218:F4_CORE/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1219:F4_CORE/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1220:F4_CORE/core_cm4.h **** 
1221:F4_CORE/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1222:F4_CORE/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1223:F4_CORE/core_cm4.h **** 
1224:F4_CORE/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1225:F4_CORE/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1226:F4_CORE/core_cm4.h **** 
1227:F4_CORE/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1228:F4_CORE/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1229:F4_CORE/core_cm4.h **** 
1230:F4_CORE/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1231:F4_CORE/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1232:F4_CORE/core_cm4.h **** 
1233:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_MPU */
1234:F4_CORE/core_cm4.h **** #endif
1235:F4_CORE/core_cm4.h **** 
1236:F4_CORE/core_cm4.h **** 
1237:F4_CORE/core_cm4.h **** #if (__FPU_PRESENT == 1)
1238:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
1239:F4_CORE/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1240:F4_CORE/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1241:F4_CORE/core_cm4.h ****   @{
1242:F4_CORE/core_cm4.h ****  */
1243:F4_CORE/core_cm4.h **** 
1244:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1245:F4_CORE/core_cm4.h ****  */
1246:F4_CORE/core_cm4.h **** typedef struct
1247:F4_CORE/core_cm4.h **** {
1248:F4_CORE/core_cm4.h ****        uint32_t RESERVED0[1];
1249:F4_CORE/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1250:F4_CORE/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1251:F4_CORE/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1252:F4_CORE/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1253:F4_CORE/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1254:F4_CORE/core_cm4.h **** } FPU_Type;
1255:F4_CORE/core_cm4.h **** 
1256:F4_CORE/core_cm4.h **** /* Floating-Point Context Control Register */
1257:F4_CORE/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1258:F4_CORE/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1259:F4_CORE/core_cm4.h **** 
1260:F4_CORE/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1261:F4_CORE/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1262:F4_CORE/core_cm4.h **** 
1263:F4_CORE/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1264:F4_CORE/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1265:F4_CORE/core_cm4.h **** 
1266:F4_CORE/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1267:F4_CORE/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1268:F4_CORE/core_cm4.h **** 
1269:F4_CORE/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1270:F4_CORE/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1271:F4_CORE/core_cm4.h **** 
ARM GAS  /tmp/ccUTxatF.s 			page 50


1272:F4_CORE/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1273:F4_CORE/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1274:F4_CORE/core_cm4.h **** 
1275:F4_CORE/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1276:F4_CORE/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1277:F4_CORE/core_cm4.h **** 
1278:F4_CORE/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1279:F4_CORE/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1280:F4_CORE/core_cm4.h **** 
1281:F4_CORE/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1282:F4_CORE/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1283:F4_CORE/core_cm4.h **** 
1284:F4_CORE/core_cm4.h **** /* Floating-Point Context Address Register */
1285:F4_CORE/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1286:F4_CORE/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1287:F4_CORE/core_cm4.h **** 
1288:F4_CORE/core_cm4.h **** /* Floating-Point Default Status Control Register */
1289:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1290:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1291:F4_CORE/core_cm4.h **** 
1292:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1293:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1294:F4_CORE/core_cm4.h **** 
1295:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1296:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1297:F4_CORE/core_cm4.h **** 
1298:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1299:F4_CORE/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1300:F4_CORE/core_cm4.h **** 
1301:F4_CORE/core_cm4.h **** /* Media and FP Feature Register 0 */
1302:F4_CORE/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1303:F4_CORE/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1304:F4_CORE/core_cm4.h **** 
1305:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1306:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1307:F4_CORE/core_cm4.h **** 
1308:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1309:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1310:F4_CORE/core_cm4.h **** 
1311:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1312:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1313:F4_CORE/core_cm4.h **** 
1314:F4_CORE/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1315:F4_CORE/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1316:F4_CORE/core_cm4.h **** 
1317:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1318:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1319:F4_CORE/core_cm4.h **** 
1320:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1321:F4_CORE/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1322:F4_CORE/core_cm4.h **** 
1323:F4_CORE/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1324:F4_CORE/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1325:F4_CORE/core_cm4.h **** 
1326:F4_CORE/core_cm4.h **** /* Media and FP Feature Register 1 */
1327:F4_CORE/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1328:F4_CORE/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
ARM GAS  /tmp/ccUTxatF.s 			page 51


1329:F4_CORE/core_cm4.h **** 
1330:F4_CORE/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1331:F4_CORE/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1332:F4_CORE/core_cm4.h **** 
1333:F4_CORE/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1334:F4_CORE/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1335:F4_CORE/core_cm4.h **** 
1336:F4_CORE/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1337:F4_CORE/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1338:F4_CORE/core_cm4.h **** 
1339:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_FPU */
1340:F4_CORE/core_cm4.h **** #endif
1341:F4_CORE/core_cm4.h **** 
1342:F4_CORE/core_cm4.h **** 
1343:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_core_register
1344:F4_CORE/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1345:F4_CORE/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1346:F4_CORE/core_cm4.h ****   @{
1347:F4_CORE/core_cm4.h ****  */
1348:F4_CORE/core_cm4.h **** 
1349:F4_CORE/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1350:F4_CORE/core_cm4.h ****  */
1351:F4_CORE/core_cm4.h **** typedef struct
1352:F4_CORE/core_cm4.h **** {
1353:F4_CORE/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1354:F4_CORE/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1355:F4_CORE/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1356:F4_CORE/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1357:F4_CORE/core_cm4.h **** } CoreDebug_Type;
1358:F4_CORE/core_cm4.h **** 
1359:F4_CORE/core_cm4.h **** /* Debug Halting Control and Status Register */
1360:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1361:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1362:F4_CORE/core_cm4.h **** 
1363:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1364:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1365:F4_CORE/core_cm4.h **** 
1366:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1367:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1368:F4_CORE/core_cm4.h **** 
1369:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1370:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1371:F4_CORE/core_cm4.h **** 
1372:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1373:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1374:F4_CORE/core_cm4.h **** 
1375:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1376:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1377:F4_CORE/core_cm4.h **** 
1378:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1379:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1380:F4_CORE/core_cm4.h **** 
1381:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1382:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1383:F4_CORE/core_cm4.h **** 
1384:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1385:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
ARM GAS  /tmp/ccUTxatF.s 			page 52


1386:F4_CORE/core_cm4.h **** 
1387:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1388:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1389:F4_CORE/core_cm4.h **** 
1390:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1391:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1392:F4_CORE/core_cm4.h **** 
1393:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1394:F4_CORE/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1395:F4_CORE/core_cm4.h **** 
1396:F4_CORE/core_cm4.h **** /* Debug Core Register Selector Register */
1397:F4_CORE/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1398:F4_CORE/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1399:F4_CORE/core_cm4.h **** 
1400:F4_CORE/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1401:F4_CORE/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1402:F4_CORE/core_cm4.h **** 
1403:F4_CORE/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1404:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1405:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1406:F4_CORE/core_cm4.h **** 
1407:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1408:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1409:F4_CORE/core_cm4.h **** 
1410:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1411:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1412:F4_CORE/core_cm4.h **** 
1413:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1414:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1415:F4_CORE/core_cm4.h **** 
1416:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1417:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1418:F4_CORE/core_cm4.h **** 
1419:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1420:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1421:F4_CORE/core_cm4.h **** 
1422:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1423:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1424:F4_CORE/core_cm4.h **** 
1425:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1426:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1427:F4_CORE/core_cm4.h **** 
1428:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1429:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1430:F4_CORE/core_cm4.h **** 
1431:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1432:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1433:F4_CORE/core_cm4.h **** 
1434:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1435:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1436:F4_CORE/core_cm4.h **** 
1437:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1438:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1439:F4_CORE/core_cm4.h **** 
1440:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1441:F4_CORE/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1442:F4_CORE/core_cm4.h **** 
ARM GAS  /tmp/ccUTxatF.s 			page 53


1443:F4_CORE/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1444:F4_CORE/core_cm4.h **** 
1445:F4_CORE/core_cm4.h **** 
1446:F4_CORE/core_cm4.h **** /** \ingroup    CMSIS_core_register
1447:F4_CORE/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1448:F4_CORE/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1449:F4_CORE/core_cm4.h ****   @{
1450:F4_CORE/core_cm4.h ****  */
1451:F4_CORE/core_cm4.h **** 
1452:F4_CORE/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1453:F4_CORE/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1454:F4_CORE/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1455:F4_CORE/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1456:F4_CORE/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1457:F4_CORE/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1458:F4_CORE/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1459:F4_CORE/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1460:F4_CORE/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1461:F4_CORE/core_cm4.h **** 
1462:F4_CORE/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1463:F4_CORE/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1464:F4_CORE/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1465:F4_CORE/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1466:F4_CORE/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1467:F4_CORE/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1468:F4_CORE/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1469:F4_CORE/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1470:F4_CORE/core_cm4.h **** 
1471:F4_CORE/core_cm4.h **** #if (__MPU_PRESENT == 1)
1472:F4_CORE/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1473:F4_CORE/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1474:F4_CORE/core_cm4.h **** #endif
1475:F4_CORE/core_cm4.h **** 
1476:F4_CORE/core_cm4.h **** #if (__FPU_PRESENT == 1)
1477:F4_CORE/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1478:F4_CORE/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1479:F4_CORE/core_cm4.h **** #endif
1480:F4_CORE/core_cm4.h **** 
1481:F4_CORE/core_cm4.h **** /*@} */
1482:F4_CORE/core_cm4.h **** 
1483:F4_CORE/core_cm4.h **** 
1484:F4_CORE/core_cm4.h **** 
1485:F4_CORE/core_cm4.h **** /*******************************************************************************
1486:F4_CORE/core_cm4.h ****  *                Hardware Abstraction Layer
1487:F4_CORE/core_cm4.h ****   Core Function Interface contains:
1488:F4_CORE/core_cm4.h ****   - Core NVIC Functions
1489:F4_CORE/core_cm4.h ****   - Core SysTick Functions
1490:F4_CORE/core_cm4.h ****   - Core Debug Functions
1491:F4_CORE/core_cm4.h ****   - Core Register Access Functions
1492:F4_CORE/core_cm4.h ****  ******************************************************************************/
1493:F4_CORE/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1494:F4_CORE/core_cm4.h **** */
1495:F4_CORE/core_cm4.h **** 
1496:F4_CORE/core_cm4.h **** 
1497:F4_CORE/core_cm4.h **** 
1498:F4_CORE/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1499:F4_CORE/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  /tmp/ccUTxatF.s 			page 54


1500:F4_CORE/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1501:F4_CORE/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1502:F4_CORE/core_cm4.h ****     @{
1503:F4_CORE/core_cm4.h ****  */
1504:F4_CORE/core_cm4.h **** 
1505:F4_CORE/core_cm4.h **** /** \brief  Set Priority Grouping
1506:F4_CORE/core_cm4.h **** 
1507:F4_CORE/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1508:F4_CORE/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1509:F4_CORE/core_cm4.h ****   Only values from 0..7 are used.
1510:F4_CORE/core_cm4.h ****   In case of a conflict between priority grouping and available
1511:F4_CORE/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1512:F4_CORE/core_cm4.h **** 
1513:F4_CORE/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1514:F4_CORE/core_cm4.h ****  */
1515:F4_CORE/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1516:F4_CORE/core_cm4.h **** {
1517:F4_CORE/core_cm4.h ****   uint32_t reg_value;
1518:F4_CORE/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1519:F4_CORE/core_cm4.h **** 
1520:F4_CORE/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1521:F4_CORE/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk));             /* clear 
1522:F4_CORE/core_cm4.h ****   reg_value  =  (reg_value                                   |
1523:F4_CORE/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1524:F4_CORE/core_cm4.h ****                 (PriorityGroupTmp << 8)                       );              /* Insert write key a
1525:F4_CORE/core_cm4.h ****   SCB->AIRCR =  reg_value;
1526:F4_CORE/core_cm4.h **** }
1527:F4_CORE/core_cm4.h **** 
1528:F4_CORE/core_cm4.h **** 
1529:F4_CORE/core_cm4.h **** /** \brief  Get Priority Grouping
1530:F4_CORE/core_cm4.h **** 
1531:F4_CORE/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1532:F4_CORE/core_cm4.h **** 
1533:F4_CORE/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1534:F4_CORE/core_cm4.h ****  */
1535:F4_CORE/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1536:F4_CORE/core_cm4.h **** {
1537:F4_CORE/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1538:F4_CORE/core_cm4.h **** }
1539:F4_CORE/core_cm4.h **** 
1540:F4_CORE/core_cm4.h **** 
1541:F4_CORE/core_cm4.h **** /** \brief  Enable External Interrupt
1542:F4_CORE/core_cm4.h **** 
1543:F4_CORE/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1544:F4_CORE/core_cm4.h **** 
1545:F4_CORE/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1546:F4_CORE/core_cm4.h ****  */
1547:F4_CORE/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1548:F4_CORE/core_cm4.h **** {
1549:F4_CORE/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1550:F4_CORE/core_cm4.h **** }
1551:F4_CORE/core_cm4.h **** 
1552:F4_CORE/core_cm4.h **** 
1553:F4_CORE/core_cm4.h **** /** \brief  Disable External Interrupt
1554:F4_CORE/core_cm4.h **** 
1555:F4_CORE/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1556:F4_CORE/core_cm4.h **** 
ARM GAS  /tmp/ccUTxatF.s 			page 55


1557:F4_CORE/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1558:F4_CORE/core_cm4.h ****  */
1559:F4_CORE/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1560:F4_CORE/core_cm4.h **** {
1561:F4_CORE/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1562:F4_CORE/core_cm4.h **** }
1563:F4_CORE/core_cm4.h **** 
1564:F4_CORE/core_cm4.h **** 
1565:F4_CORE/core_cm4.h **** /** \brief  Get Pending Interrupt
1566:F4_CORE/core_cm4.h **** 
1567:F4_CORE/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1568:F4_CORE/core_cm4.h ****     for the specified interrupt.
1569:F4_CORE/core_cm4.h **** 
1570:F4_CORE/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1571:F4_CORE/core_cm4.h **** 
1572:F4_CORE/core_cm4.h ****     \return             0  Interrupt status is not pending.
1573:F4_CORE/core_cm4.h ****     \return             1  Interrupt status is pending.
1574:F4_CORE/core_cm4.h ****  */
1575:F4_CORE/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1576:F4_CORE/core_cm4.h **** {
1577:F4_CORE/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1578:F4_CORE/core_cm4.h **** }
1579:F4_CORE/core_cm4.h **** 
1580:F4_CORE/core_cm4.h **** 
1581:F4_CORE/core_cm4.h **** /** \brief  Set Pending Interrupt
1582:F4_CORE/core_cm4.h **** 
1583:F4_CORE/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1584:F4_CORE/core_cm4.h **** 
1585:F4_CORE/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1586:F4_CORE/core_cm4.h ****  */
1587:F4_CORE/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1588:F4_CORE/core_cm4.h **** {
1589:F4_CORE/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1590:F4_CORE/core_cm4.h **** }
1591:F4_CORE/core_cm4.h **** 
1592:F4_CORE/core_cm4.h **** 
1593:F4_CORE/core_cm4.h **** /** \brief  Clear Pending Interrupt
1594:F4_CORE/core_cm4.h **** 
1595:F4_CORE/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1596:F4_CORE/core_cm4.h **** 
1597:F4_CORE/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1598:F4_CORE/core_cm4.h ****  */
1599:F4_CORE/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1600:F4_CORE/core_cm4.h **** {
1601:F4_CORE/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1602:F4_CORE/core_cm4.h **** }
1603:F4_CORE/core_cm4.h **** 
1604:F4_CORE/core_cm4.h **** 
1605:F4_CORE/core_cm4.h **** /** \brief  Get Active Interrupt
1606:F4_CORE/core_cm4.h **** 
1607:F4_CORE/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1608:F4_CORE/core_cm4.h **** 
1609:F4_CORE/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1610:F4_CORE/core_cm4.h **** 
1611:F4_CORE/core_cm4.h ****     \return             0  Interrupt status is not active.
1612:F4_CORE/core_cm4.h ****     \return             1  Interrupt status is active.
1613:F4_CORE/core_cm4.h ****  */
ARM GAS  /tmp/ccUTxatF.s 			page 56


1614:F4_CORE/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1615:F4_CORE/core_cm4.h **** {
1616:F4_CORE/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1617:F4_CORE/core_cm4.h **** }
1618:F4_CORE/core_cm4.h **** 
1619:F4_CORE/core_cm4.h **** 
1620:F4_CORE/core_cm4.h **** /** \brief  Set Interrupt Priority
1621:F4_CORE/core_cm4.h **** 
1622:F4_CORE/core_cm4.h ****     The function sets the priority of an interrupt.
1623:F4_CORE/core_cm4.h **** 
1624:F4_CORE/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1625:F4_CORE/core_cm4.h **** 
1626:F4_CORE/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1627:F4_CORE/core_cm4.h ****     \param [in]  priority  Priority to set.
1628:F4_CORE/core_cm4.h ****  */
1629:F4_CORE/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 794              		.loc 2 1629 22 view .LVU220
 795              	.LBB10:
1630:F4_CORE/core_cm4.h **** {
1631:F4_CORE/core_cm4.h ****   if((int32_t)IRQn < 0) {
 796              		.loc 2 1631 3 view .LVU221
1632:F4_CORE/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
 797              		.loc 2 1632 5 view .LVU222
 798              		.loc 2 1632 55 is_stmt 0 view .LVU223
 799 006c 094B     		ldr	r3, .L52+28
 800 006e F022     		movs	r2, #240
 801 0070 83F82220 		strb	r2, [r3, #34]
 802              	.LVL58:
 803              		.loc 2 1632 55 view .LVU224
 804              	.LBE10:
 805              	.LBE9:
 176:SYS/task_manager/task_manager.c **** 
 806              		.loc 1 176 1 view .LVU225
 807 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 808              	.LVL59:
 809              	.L53:
 176:SYS/task_manager/task_manager.c **** 
 810              		.loc 1 176 1 view .LVU226
 811 0076 00BF     		.align	2
 812              	.L52:
 813 0078 00000000 		.word	Task_OS_StkMem
 814 007c 00000000 		.word	Task_OS_ExpStkBase
 815 0080 FC9F0000 		.word	Task_OS_StkMem+40956
 816 0084 00000000 		.word	Task_Ptr
 817 0088 00000000 		.word	.LANCHOR3
 818 008c 00000000 		.word	.LANCHOR4
 819 0090 00000000 		.word	.LANCHOR5
 820 0094 00ED00E0 		.word	-536810240
 821              		.cfi_endproc
 822              	.LFE128:
 824              		.section	.text.Task_SetStkPtr_Val,"ax",%progbits
 825              		.align	1
 826              		.syntax unified
 827              		.thumb
 828              		.thumb_func
 829              		.fpu fpv4-sp-d16
 831              	Task_SetStkPtr_Val:
ARM GAS  /tmp/ccUTxatF.s 			page 57


 832              	.LVL60:
 833              	.LFB144:
 438:SYS/task_manager/task_manager.c ****     uint32_t *Tsk_Ptr_tmp = NULL;
 834              		.loc 1 438 1 is_stmt 1 view -0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 438:SYS/task_manager/task_manager.c ****     uint32_t *Tsk_Ptr_tmp = NULL;
 838              		.loc 1 438 1 is_stmt 0 view .LVU228
 839 0000 10B5     		push	{r4, lr}
 840              	.LCFI15:
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 4, -8
 843              		.cfi_offset 14, -4
 844 0002 0446     		mov	r4, r0
 439:SYS/task_manager/task_manager.c **** 
 845              		.loc 1 439 5 is_stmt 1 view .LVU229
 846              	.LVL61:
 441:SYS/task_manager/task_manager.c **** 
 847              		.loc 1 441 5 view .LVU230
 441:SYS/task_manager/task_manager.c **** 
 848              		.loc 1 441 51 is_stmt 0 view .LVU231
 849 0004 C26C     		ldr	r2, [r0, #76]
 441:SYS/task_manager/task_manager.c **** 
 850              		.loc 1 441 5 view .LVU232
 851 0006 9200     		lsls	r2, r2, #2
 852 0008 8B21     		movs	r1, #139
 853 000a 406D     		ldr	r0, [r0, #84]
 854              	.LVL62:
 441:SYS/task_manager/task_manager.c **** 
 855              		.loc 1 441 5 view .LVU233
 856 000c FFF7FEFF 		bl	memset
 857              	.LVL63:
 443:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = (uint32_t *)((uint32_t)(Tsk_Ptr_tmp)&0XFFFFFFF8ul);
 858              		.loc 1 443 5 is_stmt 1 view .LVU234
 443:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = (uint32_t *)((uint32_t)(Tsk_Ptr_tmp)&0XFFFFFFF8ul);
 859              		.loc 1 443 19 is_stmt 0 view .LVU235
 860 0010 04F15403 		add	r3, r4, #84
 443:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = (uint32_t *)((uint32_t)(Tsk_Ptr_tmp)&0XFFFFFFF8ul);
 861              		.loc 1 443 41 view .LVU236
 862 0014 E26C     		ldr	r2, [r4, #76]
 443:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = (uint32_t *)((uint32_t)(Tsk_Ptr_tmp)&0XFFFFFFF8ul);
 863              		.loc 1 443 35 view .LVU237
 864 0016 02F18042 		add	r2, r2, #1073741824
 865 001a 013A     		subs	r2, r2, #1
 443:SYS/task_manager/task_manager.c ****     Tsk_Ptr_tmp = (uint32_t *)((uint32_t)(Tsk_Ptr_tmp)&0XFFFFFFF8ul);
 866              		.loc 1 443 17 view .LVU238
 867 001c 03EB8203 		add	r3, r3, r2, lsl #2
 868              	.LVL64:
 444:SYS/task_manager/task_manager.c **** 
 869              		.loc 1 444 5 is_stmt 1 view .LVU239
 444:SYS/task_manager/task_manager.c **** 
 870              		.loc 1 444 55 is_stmt 0 view .LVU240
 871 0020 23F00703 		bic	r3, r3, #7
 872              	.LVL65:
 446:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = 0x01000000uL; /* xPSR */
 873              		.loc 1 446 5 is_stmt 1 view .LVU241
ARM GAS  /tmp/ccUTxatF.s 			page 58


 447:SYS/task_manager/task_manager.c **** 
 874              		.loc 1 447 5 view .LVU242
 447:SYS/task_manager/task_manager.c **** 
 875              		.loc 1 447 18 is_stmt 0 view .LVU243
 876 0024 4FF08072 		mov	r2, #16777216
 877 0028 43F8042C 		str	r2, [r3, #-4]
 449:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = ((uint32_t)Task_Caller) & 0xfffffffeUL; /* PC */
 878              		.loc 1 449 5 is_stmt 1 view .LVU244
 879              	.LVL66:
 450:SYS/task_manager/task_manager.c **** 
 880              		.loc 1 450 5 view .LVU245
 450:SYS/task_manager/task_manager.c **** 
 881              		.loc 1 450 21 is_stmt 0 view .LVU246
 882 002c 084A     		ldr	r2, .L56
 450:SYS/task_manager/task_manager.c **** 
 883              		.loc 1 450 44 view .LVU247
 884 002e 22F00102 		bic	r2, r2, #1
 450:SYS/task_manager/task_manager.c **** 
 885              		.loc 1 450 18 view .LVU248
 886 0032 43F8082C 		str	r2, [r3, #-8]
 452:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = (uint32_t)Task_Exit; /* LR */
 887              		.loc 1 452 5 is_stmt 1 view .LVU249
 888              	.LVL67:
 453:SYS/task_manager/task_manager.c **** 
 889              		.loc 1 453 5 view .LVU250
 453:SYS/task_manager/task_manager.c **** 
 890              		.loc 1 453 20 is_stmt 0 view .LVU251
 891 0036 074A     		ldr	r2, .L56+4
 453:SYS/task_manager/task_manager.c **** 
 892              		.loc 1 453 18 view .LVU252
 893 0038 43F80C2C 		str	r2, [r3, #-12]
 456:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = (uint32_t)NULL; /* R0 */
 894              		.loc 1 456 5 is_stmt 1 view .LVU253
 895              	.LVL68:
 457:SYS/task_manager/task_manager.c **** 
 896              		.loc 1 457 5 view .LVU254
 457:SYS/task_manager/task_manager.c **** 
 897              		.loc 1 457 18 is_stmt 0 view .LVU255
 898 003c 0022     		movs	r2, #0
 899 003e 43F8202C 		str	r2, [r3, #-32]
 461:SYS/task_manager/task_manager.c ****     *Tsk_Ptr_tmp = 0xfffffffd;
 900              		.loc 1 461 5 is_stmt 1 view .LVU256
 901              	.LVL69:
 462:SYS/task_manager/task_manager.c **** 
 902              		.loc 1 462 5 view .LVU257
 462:SYS/task_manager/task_manager.c **** 
 903              		.loc 1 462 18 is_stmt 0 view .LVU258
 904 0042 6FF00202 		mvn	r2, #2
 905 0046 43F8242C 		str	r2, [r3, #-36]
 464:SYS/task_manager/task_manager.c **** 
 906              		.loc 1 464 5 is_stmt 1 view .LVU259
 464:SYS/task_manager/task_manager.c **** 
 907              		.loc 1 464 17 is_stmt 0 view .LVU260
 908 004a 443B     		subs	r3, r3, #68
 909              	.LVL70:
 467:SYS/task_manager/task_manager.c **** }
 910              		.loc 1 467 5 is_stmt 1 view .LVU261
ARM GAS  /tmp/ccUTxatF.s 			page 59


 467:SYS/task_manager/task_manager.c **** }
 911              		.loc 1 467 26 is_stmt 0 view .LVU262
 912 004c 2365     		str	r3, [r4, #80]
 468:SYS/task_manager/task_manager.c **** 
 913              		.loc 1 468 1 view .LVU263
 914 004e 10BD     		pop	{r4, pc}
 915              	.LVL71:
 916              	.L57:
 468:SYS/task_manager/task_manager.c **** 
 917              		.loc 1 468 1 view .LVU264
 918              		.align	2
 919              	.L56:
 920 0050 00000000 		.word	Task_Caller
 921 0054 00000000 		.word	Task_Exit
 922              		.cfi_endproc
 923              	.LFE144:
 925              		.global	__aeabi_ul2f
 926              		.section	.text.Task_Idle,"ax",%progbits
 927              		.align	1
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
 931              		.fpu fpv4-sp-d16
 933              	Task_Idle:
 934              	.LFB130:
 187:SYS/task_manager/task_manager.c ****     SYSTEM_RunTime cur_time;
 935              		.loc 1 187 1 is_stmt 1 view -0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 16
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939 0000 10B5     		push	{r4, lr}
 940              	.LCFI16:
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 84B0     		sub	sp, sp, #16
 945              	.LCFI17:
 946              		.cfi_def_cfa_offset 24
 188:SYS/task_manager/task_manager.c ****     SYSTEM_RunTime time_diff;
 947              		.loc 1 188 5 view .LVU266
 189:SYS/task_manager/task_manager.c **** 
 948              		.loc 1 189 5 view .LVU267
 191:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&cur_time);
 949              		.loc 1 191 5 view .LVU268
 950 0004 6846     		mov	r0, sp
 951 0006 FFF7FEFF 		bl	RuntimeObj_Reset
 952              	.LVL72:
 192:SYS/task_manager/task_manager.c **** 
 953              		.loc 1 192 5 view .LVU269
 954 000a 02A8     		add	r0, sp, #8
 955 000c FFF7FEFF 		bl	RuntimeObj_Reset
 956              	.LVL73:
 194:SYS/task_manager/task_manager.c ****     time_diff = Get_TimeDifference_Between(TaskSys_StartTime, cur_time);
 957              		.loc 1 194 5 view .LVU270
 194:SYS/task_manager/task_manager.c ****     time_diff = Get_TimeDifference_Between(TaskSys_StartTime, cur_time);
 958              		.loc 1 194 16 is_stmt 0 view .LVU271
 959 0010 FFF7FEFF 		bl	Get_CurrentRunningUs
ARM GAS  /tmp/ccUTxatF.s 			page 60


 960              	.LVL74:
 961 0014 0246     		mov	r2, r0
 962 0016 0B46     		mov	r3, r1
 194:SYS/task_manager/task_manager.c ****     time_diff = Get_TimeDifference_Between(TaskSys_StartTime, cur_time);
 963              		.loc 1 194 14 view .LVU272
 964 0018 CDE90223 		strd	r2, [sp, #8]
 195:SYS/task_manager/task_manager.c **** 
 965              		.loc 1 195 5 is_stmt 1 view .LVU273
 195:SYS/task_manager/task_manager.c **** 
 966              		.loc 1 195 17 is_stmt 0 view .LVU274
 967 001c 0B49     		ldr	r1, .L60
 968 001e D1E90001 		ldrd	r0, [r1]
 969 0022 FFF7FEFF 		bl	Get_TimeDifference_Between
 970              	.LVL75:
 197:SYS/task_manager/task_manager.c ****     TaskSys_Idle_Ocupy = (TaskSys_Idle_US / (float)time_diff);
 971              		.loc 1 197 5 is_stmt 1 view .LVU275
 197:SYS/task_manager/task_manager.c ****     TaskSys_Idle_Ocupy = (TaskSys_Idle_US / (float)time_diff);
 972              		.loc 1 197 20 is_stmt 0 view .LVU276
 973 0026 0A4B     		ldr	r3, .L60+4
 974 0028 1C68     		ldr	r4, [r3]
 975 002a 0134     		adds	r4, r4, #1
 976 002c 1C60     		str	r4, [r3]
 198:SYS/task_manager/task_manager.c **** }
 977              		.loc 1 198 5 is_stmt 1 view .LVU277
 198:SYS/task_manager/task_manager.c **** }
 978              		.loc 1 198 45 is_stmt 0 view .LVU278
 979 002e FFF7FEFF 		bl	__aeabi_ul2f
 980              	.LVL76:
 198:SYS/task_manager/task_manager.c **** }
 981              		.loc 1 198 43 view .LVU279
 982 0032 07EE904A 		vmov	s15, r4	@ int
 983 0036 F8EE677A 		vcvt.f32.u32	s15, s15
 984 003a 07EE100A 		vmov	s14, r0
 985 003e 87EE877A 		vdiv.f32	s14, s15, s14
 198:SYS/task_manager/task_manager.c **** }
 986              		.loc 1 198 24 view .LVU280
 987 0042 044B     		ldr	r3, .L60+8
 988 0044 83ED007A 		vstr.32	s14, [r3]
 199:SYS/task_manager/task_manager.c **** 
 989              		.loc 1 199 1 view .LVU281
 990 0048 04B0     		add	sp, sp, #16
 991              	.LCFI18:
 992              		.cfi_def_cfa_offset 8
 993              		@ sp needed
 994 004a 10BD     		pop	{r4, pc}
 995              	.L61:
 996              		.align	2
 997              	.L60:
 998 004c 00000000 		.word	.LANCHOR6
 999 0050 00000000 		.word	.LANCHOR7
 1000 0054 00000000 		.word	.LANCHOR8
 1001              		.cfi_endproc
 1002              	.LFE130:
 1004              		.section	.text.Task_Exec,"ax",%progbits
 1005              		.align	1
 1006              		.syntax unified
 1007              		.thumb
ARM GAS  /tmp/ccUTxatF.s 			page 61


 1008              		.thumb_func
 1009              		.fpu fpv4-sp-d16
 1011              	Task_Exec:
 1012              	.LVL77:
 1013              	.LFB161:
 652:SYS/task_manager/task_manager.c **** 
 653:SYS/task_manager/task_manager.c **** Task_Handler Task_Create(const char *name, uint32_t frq, Priority_Group group, TASK_Priority priori
 654:SYS/task_manager/task_manager.c **** {
 655:SYS/task_manager/task_manager.c ****     Task_Handler handle;
 656:SYS/task_manager/task_manager.c ****     uint16_t task_name_len = strlen(name);
 657:SYS/task_manager/task_manager.c ****     uint32_t *Tsk_Ptr_tmp = NULL;
 658:SYS/task_manager/task_manager.c ****     static bool taskOs_InitState = false;
 659:SYS/task_manager/task_manager.c **** 
 660:SYS/task_manager/task_manager.c ****     if (!taskOs_InitState)
 661:SYS/task_manager/task_manager.c ****     {
 662:SYS/task_manager/task_manager.c ****         TaskSys_Init();
 663:SYS/task_manager/task_manager.c ****         taskOs_InitState = true;
 664:SYS/task_manager/task_manager.c ****     }
 665:SYS/task_manager/task_manager.c **** 
 666:SYS/task_manager/task_manager.c ****     //already have task in current group and priority in task pointer matrix
 667:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority] != NULL)
 668:SYS/task_manager/task_manager.c ****     {
 669:SYS/task_manager/task_manager.c ****         return TASK_REGISTED;
 670:SYS/task_manager/task_manager.c ****     }
 671:SYS/task_manager/task_manager.c **** 
 672:SYS/task_manager/task_manager.c ****     //request a memory space for Task_Ptr contain
 673:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority] = (Task *)MMU_Malloc(sizeof(Task));
 674:SYS/task_manager/task_manager.c **** 
 675:SYS/task_manager/task_manager.c ****     //record Task_Ptr poiner`s address
 676:SYS/task_manager/task_manager.c ****     handle = *&Task_Ptr[group][priority];
 677:SYS/task_manager/task_manager.c **** 
 678:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Task_name = name;
 679:SYS/task_manager/task_manager.c **** 
 680:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->exec_frq = frq;
 681:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->exec_interval_us = RUNTIEM_MAX_TICK_FRQ / frq;
 682:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_Func = func;
 683:SYS/task_manager/task_manager.c **** 
 684:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->priority.Priority = (group << 3) | priority;
 685:SYS/task_manager/task_manager.c **** 
 686:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 687:SYS/task_manager/task_manager.c ****     //init delay tag
 688:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.on_delay = false;
 689:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.tsk_hdl = handle;
 690:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.time_unit = 0;
 691:SYS/task_manager/task_manager.c **** 
 692:SYS/task_manager/task_manager.c ****     //request memory space for task stack
 693:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Stack_Depth = StackDepth;
 694:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->TCB.Stack = (uint32_t *)MMU_Malloc(StackDepth * sizeof(uint32_t));
 695:SYS/task_manager/task_manager.c **** 
 696:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority]->TCB.Stack != NULL)
 697:SYS/task_manager/task_manager.c ****     {
 698:SYS/task_manager/task_manager.c ****         Task_SetStkPtr_Val(Task_Ptr[group][priority]);
 699:SYS/task_manager/task_manager.c ****     }
 700:SYS/task_manager/task_manager.c ****     else
 701:SYS/task_manager/task_manager.c ****     {
 702:SYS/task_manager/task_manager.c ****         return TASK_BAD_MEMSPC_REQ;
 703:SYS/task_manager/task_manager.c ****     }
ARM GAS  /tmp/ccUTxatF.s 			page 62


 704:SYS/task_manager/task_manager.c **** #endif
 705:SYS/task_manager/task_manager.c **** 
 706:SYS/task_manager/task_manager.c ****     //reset single loop running us
 707:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->TskFuncUing_US = 0;
 708:SYS/task_manager/task_manager.c **** 
 709:SYS/task_manager/task_manager.c ****     //reset task cpu occupy data
 710:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.cpu_opy = 0;
 711:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.totlal_running_time = 0;
 712:SYS/task_manager/task_manager.c **** 
 713:SYS/task_manager/task_manager.c ****     //set current group flag to ready
 714:SYS/task_manager/task_manager.c ****     TskHdl_RdyMap.Grp.Flg |= 1 << GET_TASKGROUP_PRIORITY(Task_Ptr[group][priority]->priority.Priori
 715:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 716:SYS/task_manager/task_manager.c ****     TskHdl_RdyMap.TskInGrp[GET_TASKGROUP_PRIORITY(Task_Ptr[group][priority]->priority.Priority)].Fl
 717:SYS/task_manager/task_manager.c **** 
 718:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_frq = 0;
 719:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_arv = 0;
 720:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_max = 0;
 721:SYS/task_manager/task_manager.c **** 
 722:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Exec_Time));
 723:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Init_Time));
 724:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Start_Time));
 725:SYS/task_manager/task_manager.c **** 
 726:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.Init_Time = Get_CurrentRunningUs();
 727:SYS/task_manager/task_manager.c **** 
 728:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.Exec_Times = 0;
 729:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.error_code = NOERROR;
 730:SYS/task_manager/task_manager.c **** 
 731:SYS/task_manager/task_manager.c ****     Task_SetReady(Task_Ptr[group][priority]);
 732:SYS/task_manager/task_manager.c **** 
 733:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->item_ptr = (item_obj *)MMU_Malloc(sizeof(item_obj));
 734:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority]->item_ptr == NULL)
 735:SYS/task_manager/task_manager.c ****     {
 736:SYS/task_manager/task_manager.c ****         return TASK_BAD_MEMSPC_REQ;
 737:SYS/task_manager/task_manager.c ****     }
 738:SYS/task_manager/task_manager.c **** 
 739:SYS/task_manager/task_manager.c ****     List_ItemInit(Task_Ptr[group][priority]->item_ptr, Task_Ptr[group][priority]);
 740:SYS/task_manager/task_manager.c ****     if (TskCrt_RegList.num == 0)
 741:SYS/task_manager/task_manager.c ****     {
 742:SYS/task_manager/task_manager.c ****         List_Init(&TskCrt_RegList.list, Task_Ptr[group][priority]->item_ptr, by_condition, Task_Pri
 743:SYS/task_manager/task_manager.c ****     }
 744:SYS/task_manager/task_manager.c ****     else
 745:SYS/task_manager/task_manager.c ****     {
 746:SYS/task_manager/task_manager.c ****         List_Insert_Item(&TskCrt_RegList.list, Task_Ptr[group][priority]->item_ptr);
 747:SYS/task_manager/task_manager.c ****     }
 748:SYS/task_manager/task_manager.c **** 
 749:SYS/task_manager/task_manager.c ****     List_ItemInit(&Task_Ptr[group][priority]->delay_item, &Task_Ptr[group][priority]->delay_info);
 750:SYS/task_manager/task_manager.c **** 
 751:SYS/task_manager/task_manager.c ****     TskCrt_RegList.num++;
 752:SYS/task_manager/task_manager.c **** 
 753:SYS/task_manager/task_manager.c ****     return handle;
 754:SYS/task_manager/task_manager.c **** }
 755:SYS/task_manager/task_manager.c **** 
 756:SYS/task_manager/task_manager.c **** //Remove func untest
 757:SYS/task_manager/task_manager.c **** void Task_Remove(Task_Handler Tsk_Hdl)
 758:SYS/task_manager/task_manager.c **** {
 759:SYS/task_manager/task_manager.c ****     //convert Tsk_Hdl from uint32_t var to Task Address which we need to delete
 760:SYS/task_manager/task_manager.c ****     //MMU_Free that memory space
ARM GAS  /tmp/ccUTxatF.s 			page 63


 761:SYS/task_manager/task_manager.c ****     //erase all data in specificly memory space
 762:SYS/task_manager/task_manager.c ****     //set Task pointer to Null which we wanted to be delete
 763:SYS/task_manager/task_manager.c **** 
 764:SYS/task_manager/task_manager.c ****     uint8_t remove_group = GET_TASKGROUP_PRIORITY(((Task *)Tsk_Hdl)->priority.Priority);
 765:SYS/task_manager/task_manager.c ****     uint8_t remove_task = GET_TASKINGROUP_PRIORITY(((Task *)Tsk_Hdl)->priority.Priority);
 766:SYS/task_manager/task_manager.c **** 
 767:SYS/task_manager/task_manager.c ****     ReSet_Task_Data((Task *)Tsk_Hdl);
 768:SYS/task_manager/task_manager.c **** 
 769:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 770:SYS/task_manager/task_manager.c ****     MMU_Free((uint32_t *)((Task *)Tsk_Hdl)->TCB.Stack);
 771:SYS/task_manager/task_manager.c ****     MMU_Free((uint32_t *)((Task *)Tsk_Hdl)->TCB.Top_Stk_Ptr);
 772:SYS/task_manager/task_manager.c **** #endif
 773:SYS/task_manager/task_manager.c **** 
 774:SYS/task_manager/task_manager.c ****     MMU_Free((Task *)Tsk_Hdl);
 775:SYS/task_manager/task_manager.c ****     Task_Ptr[remove_group][remove_task] = NULL;
 776:SYS/task_manager/task_manager.c **** }
 777:SYS/task_manager/task_manager.c **** 
 778:SYS/task_manager/task_manager.c **** void TaskSystem_Start(void)
 779:SYS/task_manager/task_manager.c **** {
 780:SYS/task_manager/task_manager.c ****     Runtime_Config(RUNTIME_TICK_FRQ_40K);
 781:SYS/task_manager/task_manager.c ****     Runtime_Set_start_Callback(NULL);
 782:SYS/task_manager/task_manager.c ****     Runtime_Set_stop_Callback(NULL);
 783:SYS/task_manager/task_manager.c ****     Runtime_Set_tick_Callback(Task_Scheduler); /* 5us cast by calling the scheduler */
 784:SYS/task_manager/task_manager.c ****     Runtime_Start();
 785:SYS/task_manager/task_manager.c **** 
 786:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&TaskSys_StartTime);
 787:SYS/task_manager/task_manager.c **** 
 788:SYS/task_manager/task_manager.c ****     TaskSys_StartTime = Get_CurrentRunningUs();
 789:SYS/task_manager/task_manager.c **** 
 790:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 791:SYS/task_manager/task_manager.c ****     NxtRunTsk_Ptr = Task_Get_HighestRank_RdyTask();
 792:SYS/task_manager/task_manager.c **** 
 793:SYS/task_manager/task_manager.c ****     if (NxtRunTsk_Ptr != NULL)
 794:SYS/task_manager/task_manager.c ****     {
 795:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
 796:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 797:SYS/task_manager/task_manager.c **** 
 798:SYS/task_manager/task_manager.c ****         CurTsk_TCB = NxtTsk_TCB;
 799:SYS/task_manager/task_manager.c ****     }
 800:SYS/task_manager/task_manager.c **** #endif
 801:SYS/task_manager/task_manager.c **** 
 802:SYS/task_manager/task_manager.c ****     Task_SetPendSVPro();
 803:SYS/task_manager/task_manager.c ****     Task_TriggerPendSV();
 804:SYS/task_manager/task_manager.c **** 
 805:SYS/task_manager/task_manager.c ****     return true;
 806:SYS/task_manager/task_manager.c **** }
 807:SYS/task_manager/task_manager.c **** 
 808:SYS/task_manager/task_manager.c **** void Task_SetRunState(Task_Handler Tsk_Handle, TASK_STATE state)
 809:SYS/task_manager/task_manager.c **** {
 810:SYS/task_manager/task_manager.c ****     ((Task *)Tsk_Handle)->Exec_status.State = state;
 811:SYS/task_manager/task_manager.c **** }
 812:SYS/task_manager/task_manager.c **** 
 813:SYS/task_manager/task_manager.c **** static Task *Get_TaskInstance(uint8_t group, uint8_t priority)
 814:SYS/task_manager/task_manager.c **** {
 815:SYS/task_manager/task_manager.c ****     return Task_Ptr[group][priority];
 816:SYS/task_manager/task_manager.c **** }
 817:SYS/task_manager/task_manager.c **** 
ARM GAS  /tmp/ccUTxatF.s 			page 64


 818:SYS/task_manager/task_manager.c **** static void Task_Exec(Task *tsk_ptr)
 819:SYS/task_manager/task_manager.c **** {
 1014              		.loc 1 819 1 is_stmt 1 view -0
 1015              		.cfi_startproc
 1016              		@ Volatile: function does not return.
 1017              		@ args = 0, pretend = 0, frame = 8
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019              		.loc 1 819 1 is_stmt 0 view .LVU283
 1020 0000 00B5     		push	{lr}
 1021              	.LCFI19:
 1022              		.cfi_def_cfa_offset 4
 1023              		.cfi_offset 14, -4
 1024 0002 83B0     		sub	sp, sp, #12
 1025              	.LCFI20:
 1026              		.cfi_def_cfa_offset 16
 820:SYS/task_manager/task_manager.c ****     SYSTEM_RunTime time_diff;
 1027              		.loc 1 820 5 is_stmt 1 view .LVU284
 821:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&time_diff);
 1028              		.loc 1 821 5 view .LVU285
 1029 0004 6846     		mov	r0, sp
 1030              	.LVL78:
 1031              		.loc 1 821 5 is_stmt 0 view .LVU286
 1032 0006 FFF7FEFF 		bl	RuntimeObj_Reset
 1033              	.LVL79:
 822:SYS/task_manager/task_manager.c **** 
 823:SYS/task_manager/task_manager.c ****     tsk_ptr = NxtRunTsk_Ptr;
 1034              		.loc 1 823 5 is_stmt 1 view .LVU287
 1035              		.loc 1 823 13 is_stmt 0 view .LVU288
 1036 000a 334B     		ldr	r3, .L71
 1037 000c 1C68     		ldr	r4, [r3]
 1038              	.LVL80:
 1039              		.loc 1 823 13 view .LVU289
 1040 000e 0CE0     		b	.L63
 1041              	.L70:
 824:SYS/task_manager/task_manager.c **** 
 825:SYS/task_manager/task_manager.c ****     while (true)
 826:SYS/task_manager/task_manager.c ****     {
 827:SYS/task_manager/task_manager.c ****         if (tsk_ptr->Exec_status.State == Task_Ready)
 828:SYS/task_manager/task_manager.c ****         {
 829:SYS/task_manager/task_manager.c ****             tsk_ptr->TskFuncUing_US = 0;
 830:SYS/task_manager/task_manager.c **** 
 831:SYS/task_manager/task_manager.c ****             //when task function execute finish reset ready flag of current task in group
 832:SYS/task_manager/task_manager.c ****             //code down below
 833:SYS/task_manager/task_manager.c ****             Task_ClearReady(tsk_ptr);
 834:SYS/task_manager/task_manager.c **** 
 835:SYS/task_manager/task_manager.c ****             //set current running task
 836:SYS/task_manager/task_manager.c ****             CurRunTsk_Ptr = tsk_ptr;
 837:SYS/task_manager/task_manager.c **** 
 838:SYS/task_manager/task_manager.c ****             if (tsk_ptr->Exec_status.Exec_Times == 0)
 839:SYS/task_manager/task_manager.c ****             {
 840:SYS/task_manager/task_manager.c ****                 tsk_ptr->Exec_status.Start_Time = Get_CurrentRunningUs();
 1042              		.loc 1 840 17 is_stmt 1 view .LVU290
 1043              		.loc 1 840 51 is_stmt 0 view .LVU291
 1044 0010 FFF7FEFF 		bl	Get_CurrentRunningUs
 1045              	.LVL81:
 1046              		.loc 1 840 49 view .LVU292
 1047 0014 E061     		str	r0, [r4, #28]
ARM GAS  /tmp/ccUTxatF.s 			page 65


 1048 0016 2162     		str	r1, [r4, #32]
 841:SYS/task_manager/task_manager.c ****                 tsk_ptr->Exec_status.Exec_Time = tsk_ptr->Exec_status.Start_Time;
 1049              		.loc 1 841 17 is_stmt 1 view .LVU293
 1050              		.loc 1 841 48 is_stmt 0 view .LVU294
 1051 0018 6062     		str	r0, [r4, #36]
 1052 001a A162     		str	r1, [r4, #40]
 1053 001c 12E0     		b	.L64
 1054              	.L67:
 842:SYS/task_manager/task_manager.c ****             }
 843:SYS/task_manager/task_manager.c **** 
 844:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.State = Task_Running;
 845:SYS/task_manager/task_manager.c **** 
 846:SYS/task_manager/task_manager.c ****             //execute task funtion
 847:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_Func(*&tsk_ptr);
 848:SYS/task_manager/task_manager.c **** 
 849:SYS/task_manager/task_manager.c ****             //record task running times
 850:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.Exec_Times++;
 851:SYS/task_manager/task_manager.c **** 
 852:SYS/task_manager/task_manager.c ****             //get max task execut time
 853:SYS/task_manager/task_manager.c ****             if (tsk_ptr->TskFuncUing_US > tsk_ptr->Exec_status.detect_exec_time_max)
 854:SYS/task_manager/task_manager.c ****             {
 855:SYS/task_manager/task_manager.c ****                 tsk_ptr->Exec_status.detect_exec_time_max = tsk_ptr->TskFuncUing_US;
 856:SYS/task_manager/task_manager.c ****             }
 857:SYS/task_manager/task_manager.c **** 
 858:SYS/task_manager/task_manager.c ****             //get task total execute time unit in us
 859:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.totlal_running_time += tsk_ptr->TskFuncUing_US;
 860:SYS/task_manager/task_manager.c ****             time_diff = Get_TimeDifference_Between(tsk_ptr->Exec_status.Start_Time, tsk_ptr->Exec_s
 861:SYS/task_manager/task_manager.c **** 
 862:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy = tsk_ptr->Exec_status.totlal_running_time / (float)time_d
 863:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy *= 100;
 864:SYS/task_manager/task_manager.c **** 
 865:SYS/task_manager/task_manager.c ****             //get average task running time
 866:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.detect_exec_time_arv += tsk_ptr->TskFuncUing_US;
 867:SYS/task_manager/task_manager.c ****             if (tsk_ptr->Exec_status.Exec_Times > 1)
 868:SYS/task_manager/task_manager.c ****             {
 869:SYS/task_manager/task_manager.c ****                 tsk_ptr->Exec_status.detect_exec_time_arv /= 2;
 870:SYS/task_manager/task_manager.c ****             }
 871:SYS/task_manager/task_manager.c **** 
 872:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.Exec_Time = Get_TargetRunTime(tsk_ptr->exec_interval_us);
 873:SYS/task_manager/task_manager.c **** 
 874:SYS/task_manager/task_manager.c ****             //get task execute frequence
 875:SYS/task_manager/task_manager.c ****             if (tsk_ptr->Exec_status.Exec_Times)
 876:SYS/task_manager/task_manager.c ****             {
 877:SYS/task_manager/task_manager.c ****                 tsk_ptr->Exec_status.detect_exec_frq = (uint32_t)(tsk_ptr->Exec_status.Exec_Times /
 878:SYS/task_manager/task_manager.c ****             }
 879:SYS/task_manager/task_manager.c **** 
 880:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.State = Task_Stop;
 1055              		.loc 1 880 13 is_stmt 1 view .LVU295
 1056              		.loc 1 880 40 is_stmt 0 view .LVU296
 1057 001e 0223     		movs	r3, #2
 1058 0020 84F84830 		strb	r3, [r4, #72]
 881:SYS/task_manager/task_manager.c **** 
 882:SYS/task_manager/task_manager.c ****             //erase currnet runnint task pointer
 883:SYS/task_manager/task_manager.c ****             CurRunTsk_Ptr = NULL;
 1059              		.loc 1 883 13 is_stmt 1 view .LVU297
 1060              		.loc 1 883 27 is_stmt 0 view .LVU298
 1061 0024 2D4B     		ldr	r3, .L71+4
ARM GAS  /tmp/ccUTxatF.s 			page 66


 1062 0026 0022     		movs	r2, #0
 1063 0028 1A60     		str	r2, [r3]
 1064              	.L63:
 825:SYS/task_manager/task_manager.c ****     {
 1065              		.loc 1 825 5 is_stmt 1 view .LVU299
 827:SYS/task_manager/task_manager.c ****         {
 1066              		.loc 1 827 9 view .LVU300
 827:SYS/task_manager/task_manager.c ****         {
 1067              		.loc 1 827 33 is_stmt 0 view .LVU301
 1068 002a 94F84830 		ldrb	r3, [r4, #72]	@ zero_extendqisi2
 827:SYS/task_manager/task_manager.c ****         {
 1069              		.loc 1 827 12 view .LVU302
 1070 002e 002B     		cmp	r3, #0
 1071 0030 FBD1     		bne	.L63
 829:SYS/task_manager/task_manager.c **** 
 1072              		.loc 1 829 13 is_stmt 1 view .LVU303
 829:SYS/task_manager/task_manager.c **** 
 1073              		.loc 1 829 37 is_stmt 0 view .LVU304
 1074 0032 A365     		str	r3, [r4, #88]
 833:SYS/task_manager/task_manager.c **** 
 1075              		.loc 1 833 13 is_stmt 1 view .LVU305
 1076 0034 2046     		mov	r0, r4
 1077 0036 FFF7FEFF 		bl	Task_ClearReady
 1078              	.LVL82:
 836:SYS/task_manager/task_manager.c **** 
 1079              		.loc 1 836 13 view .LVU306
 836:SYS/task_manager/task_manager.c **** 
 1080              		.loc 1 836 27 is_stmt 0 view .LVU307
 1081 003a 284B     		ldr	r3, .L71+4
 1082 003c 1C60     		str	r4, [r3]
 838:SYS/task_manager/task_manager.c ****             {
 1083              		.loc 1 838 13 is_stmt 1 view .LVU308
 838:SYS/task_manager/task_manager.c ****             {
 1084              		.loc 1 838 37 is_stmt 0 view .LVU309
 1085 003e A36B     		ldr	r3, [r4, #56]
 838:SYS/task_manager/task_manager.c ****             {
 1086              		.loc 1 838 16 view .LVU310
 1087 0040 002B     		cmp	r3, #0
 1088 0042 E5D0     		beq	.L70
 1089              	.L64:
 844:SYS/task_manager/task_manager.c **** 
 1090              		.loc 1 844 13 is_stmt 1 view .LVU311
 844:SYS/task_manager/task_manager.c **** 
 1091              		.loc 1 844 40 is_stmt 0 view .LVU312
 1092 0044 0123     		movs	r3, #1
 1093 0046 84F84830 		strb	r3, [r4, #72]
 847:SYS/task_manager/task_manager.c **** 
 1094              		.loc 1 847 13 is_stmt 1 view .LVU313
 847:SYS/task_manager/task_manager.c **** 
 1095              		.loc 1 847 20 is_stmt 0 view .LVU314
 1096 004a 2369     		ldr	r3, [r4, #16]
 847:SYS/task_manager/task_manager.c **** 
 1097              		.loc 1 847 13 view .LVU315
 1098 004c 2046     		mov	r0, r4
 1099 004e 9847     		blx	r3
 1100              	.LVL83:
 850:SYS/task_manager/task_manager.c **** 
ARM GAS  /tmp/ccUTxatF.s 			page 67


 1101              		.loc 1 850 13 is_stmt 1 view .LVU316
 850:SYS/task_manager/task_manager.c **** 
 1102              		.loc 1 850 33 is_stmt 0 view .LVU317
 1103 0050 A36B     		ldr	r3, [r4, #56]
 850:SYS/task_manager/task_manager.c **** 
 1104              		.loc 1 850 44 view .LVU318
 1105 0052 0133     		adds	r3, r3, #1
 1106 0054 A363     		str	r3, [r4, #56]
 853:SYS/task_manager/task_manager.c ****             {
 1107              		.loc 1 853 13 is_stmt 1 view .LVU319
 853:SYS/task_manager/task_manager.c ****             {
 1108              		.loc 1 853 24 is_stmt 0 view .LVU320
 1109 0056 A26D     		ldr	r2, [r4, #88]
 853:SYS/task_manager/task_manager.c ****             {
 1110              		.loc 1 853 63 view .LVU321
 1111 0058 636B     		ldr	r3, [r4, #52]
 853:SYS/task_manager/task_manager.c ****             {
 1112              		.loc 1 853 16 view .LVU322
 1113 005a 9A42     		cmp	r2, r3
 1114 005c 00D9     		bls	.L65
 855:SYS/task_manager/task_manager.c ****             }
 1115              		.loc 1 855 17 is_stmt 1 view .LVU323
 855:SYS/task_manager/task_manager.c ****             }
 1116              		.loc 1 855 59 is_stmt 0 view .LVU324
 1117 005e 6263     		str	r2, [r4, #52]
 1118              	.L65:
 859:SYS/task_manager/task_manager.c ****             time_diff = Get_TimeDifference_Between(tsk_ptr->Exec_status.Start_Time, tsk_ptr->Exec_s
 1119              		.loc 1 859 13 is_stmt 1 view .LVU325
 859:SYS/task_manager/task_manager.c ****             time_diff = Get_TimeDifference_Between(tsk_ptr->Exec_status.Start_Time, tsk_ptr->Exec_s
 1120              		.loc 1 859 54 is_stmt 0 view .LVU326
 1121 0060 236C     		ldr	r3, [r4, #64]
 1122 0062 1344     		add	r3, r3, r2
 1123 0064 2364     		str	r3, [r4, #64]
 860:SYS/task_manager/task_manager.c **** 
 1124              		.loc 1 860 13 is_stmt 1 view .LVU327
 860:SYS/task_manager/task_manager.c **** 
 1125              		.loc 1 860 25 is_stmt 0 view .LVU328
 1126 0066 626A     		ldr	r2, [r4, #36]
 1127 0068 A36A     		ldr	r3, [r4, #40]
 1128 006a E069     		ldr	r0, [r4, #28]
 1129 006c 216A     		ldr	r1, [r4, #32]
 1130 006e FFF7FEFF 		bl	Get_TimeDifference_Between
 1131              	.LVL84:
 860:SYS/task_manager/task_manager.c **** 
 1132              		.loc 1 860 23 view .LVU329
 1133 0072 CDE90001 		strd	r0, [sp]
 862:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy *= 100;
 1134              		.loc 1 862 13 is_stmt 1 view .LVU330
 862:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy *= 100;
 1135              		.loc 1 862 64 is_stmt 0 view .LVU331
 1136 0076 256C     		ldr	r5, [r4, #64]
 862:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy *= 100;
 1137              		.loc 1 862 87 view .LVU332
 1138 0078 FFF7FEFF 		bl	__aeabi_ul2f
 1139              	.LVL85:
 862:SYS/task_manager/task_manager.c ****             tsk_ptr->Exec_status.cpu_opy *= 100;
 1140              		.loc 1 862 85 view .LVU333
ARM GAS  /tmp/ccUTxatF.s 			page 68


 1141 007c 07EE905A 		vmov	s15, r5	@ int
 1142 0080 B8EE677A 		vcvt.f32.u32	s14, s15
 1143 0084 07EE900A 		vmov	s15, r0
 1144 0088 C7EE277A 		vdiv.f32	s15, s14, s15
 863:SYS/task_manager/task_manager.c **** 
 1145              		.loc 1 863 13 is_stmt 1 view .LVU334
 863:SYS/task_manager/task_manager.c **** 
 1146              		.loc 1 863 42 is_stmt 0 view .LVU335
 1147 008c 9FED147A 		vldr.32	s14, .L71+8
 1148 0090 67EE877A 		vmul.f32	s15, s15, s14
 1149 0094 C4ED117A 		vstr.32	s15, [r4, #68]
 866:SYS/task_manager/task_manager.c ****             if (tsk_ptr->Exec_status.Exec_Times > 1)
 1150              		.loc 1 866 13 is_stmt 1 view .LVU336
 866:SYS/task_manager/task_manager.c ****             if (tsk_ptr->Exec_status.Exec_Times > 1)
 1151              		.loc 1 866 65 is_stmt 0 view .LVU337
 1152 0098 A36D     		ldr	r3, [r4, #88]
 866:SYS/task_manager/task_manager.c ****             if (tsk_ptr->Exec_status.Exec_Times > 1)
 1153              		.loc 1 866 55 view .LVU338
 1154 009a 226B     		ldr	r2, [r4, #48]
 1155 009c 1344     		add	r3, r3, r2
 1156 009e 2363     		str	r3, [r4, #48]
 867:SYS/task_manager/task_manager.c ****             {
 1157              		.loc 1 867 13 is_stmt 1 view .LVU339
 867:SYS/task_manager/task_manager.c ****             {
 1158              		.loc 1 867 37 is_stmt 0 view .LVU340
 1159 00a0 A26B     		ldr	r2, [r4, #56]
 867:SYS/task_manager/task_manager.c ****             {
 1160              		.loc 1 867 16 view .LVU341
 1161 00a2 012A     		cmp	r2, #1
 1162 00a4 01D9     		bls	.L66
 869:SYS/task_manager/task_manager.c ****             }
 1163              		.loc 1 869 17 is_stmt 1 view .LVU342
 869:SYS/task_manager/task_manager.c ****             }
 1164              		.loc 1 869 59 is_stmt 0 view .LVU343
 1165 00a6 5B08     		lsrs	r3, r3, #1
 1166 00a8 2363     		str	r3, [r4, #48]
 1167              	.L66:
 872:SYS/task_manager/task_manager.c **** 
 1168              		.loc 1 872 13 is_stmt 1 view .LVU344
 872:SYS/task_manager/task_manager.c **** 
 1169              		.loc 1 872 46 is_stmt 0 view .LVU345
 1170 00aa A089     		ldrh	r0, [r4, #12]
 1171 00ac FFF7FEFF 		bl	Get_TargetRunTime
 1172              	.LVL86:
 872:SYS/task_manager/task_manager.c **** 
 1173              		.loc 1 872 44 view .LVU346
 1174 00b0 6062     		str	r0, [r4, #36]
 1175 00b2 A162     		str	r1, [r4, #40]
 875:SYS/task_manager/task_manager.c ****             {
 1176              		.loc 1 875 13 is_stmt 1 view .LVU347
 875:SYS/task_manager/task_manager.c ****             {
 1177              		.loc 1 875 37 is_stmt 0 view .LVU348
 1178 00b4 A56B     		ldr	r5, [r4, #56]
 875:SYS/task_manager/task_manager.c ****             {
 1179              		.loc 1 875 16 view .LVU349
 1180 00b6 002D     		cmp	r5, #0
 1181 00b8 B1D0     		beq	.L67
ARM GAS  /tmp/ccUTxatF.s 			page 69


 877:SYS/task_manager/task_manager.c ****             }
 1182              		.loc 1 877 17 is_stmt 1 view .LVU350
 877:SYS/task_manager/task_manager.c ****             }
 1183              		.loc 1 877 101 is_stmt 0 view .LVU351
 1184 00ba FFF7FEFF 		bl	__aeabi_ul2f
 1185              	.LVL87:
 877:SYS/task_manager/task_manager.c ****             }
 1186              		.loc 1 877 99 view .LVU352
 1187 00be 07EE905A 		vmov	s15, r5	@ int
 1188 00c2 F8EE677A 		vcvt.f32.u32	s15, s15
 1189 00c6 07EE100A 		vmov	s14, r0
 1190 00ca 87EE877A 		vdiv.f32	s14, s15, s14
 877:SYS/task_manager/task_manager.c ****             }
 1191              		.loc 1 877 56 view .LVU353
 1192 00ce BCEEC77A 		vcvt.u32.f32	s14, s14
 877:SYS/task_manager/task_manager.c ****             }
 1193              		.loc 1 877 54 view .LVU354
 1194 00d2 84ED0B7A 		vstr.32	s14, [r4, #44]	@ int
 1195 00d6 A2E7     		b	.L67
 1196              	.L72:
 1197              		.align	2
 1198              	.L71:
 1199 00d8 00000000 		.word	.LANCHOR9
 1200 00dc 00000000 		.word	.LANCHOR4
 1201 00e0 0000C842 		.word	1120403456
 1202              		.cfi_endproc
 1203              	.LFE161:
 1205              		.section	.text.Task_Caller,"ax",%progbits
 1206              		.align	1
 1207              		.global	Task_Caller
 1208              		.syntax unified
 1209              		.thumb
 1210              		.thumb_func
 1211              		.fpu fpv4-sp-d16
 1213              	Task_Caller:
 1214              	.LFB164:
 884:SYS/task_manager/task_manager.c ****         }
 885:SYS/task_manager/task_manager.c ****     }
 886:SYS/task_manager/task_manager.c **** }
 887:SYS/task_manager/task_manager.c **** 
 888:SYS/task_manager/task_manager.c **** uint32_t Task_Get_IdleUS(void)
 889:SYS/task_manager/task_manager.c **** {
 890:SYS/task_manager/task_manager.c ****     return TaskSys_Idle_US;
 891:SYS/task_manager/task_manager.c **** }
 892:SYS/task_manager/task_manager.c **** 
 893:SYS/task_manager/task_manager.c **** float Task_Get_IdleOcupy(void)
 894:SYS/task_manager/task_manager.c **** {
 895:SYS/task_manager/task_manager.c ****     return TaskSys_Idle_Ocupy;
 896:SYS/task_manager/task_manager.c **** }
 897:SYS/task_manager/task_manager.c **** 
 898:SYS/task_manager/task_manager.c **** void Task_Caller(void)
 899:SYS/task_manager/task_manager.c **** {
 1215              		.loc 1 899 1 is_stmt 1 view -0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 0
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
 1219 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccUTxatF.s 			page 70


 1220              	.LCFI21:
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 3, -8
 1223              		.cfi_offset 14, -4
 900:SYS/task_manager/task_manager.c ****     static uint8_t i = 0;
 1224              		.loc 1 900 5 view .LVU356
 901:SYS/task_manager/task_manager.c **** 
 902:SYS/task_manager/task_manager.c ****     //if any task in any group is under ready state
 903:SYS/task_manager/task_manager.c ****     if (NxtRunTsk_Ptr != NULL)
 1225              		.loc 1 903 5 view .LVU357
 1226              		.loc 1 903 23 is_stmt 0 view .LVU358
 1227 0002 094B     		ldr	r3, .L79
 1228 0004 1868     		ldr	r0, [r3]
 1229              		.loc 1 903 8 view .LVU359
 1230 0006 00B9     		cbnz	r0, .L77
 904:SYS/task_manager/task_manager.c ****     {
 905:SYS/task_manager/task_manager.c ****         i++;
 906:SYS/task_manager/task_manager.c ****         if (i == TskCrt_RegList.num)
 907:SYS/task_manager/task_manager.c ****         {
 908:SYS/task_manager/task_manager.c ****             traverse_start = true;
 909:SYS/task_manager/task_manager.c ****         }
 910:SYS/task_manager/task_manager.c **** 
 911:SYS/task_manager/task_manager.c ****         //execute task function in function matrix
 912:SYS/task_manager/task_manager.c ****         Task_Exec(NxtRunTsk_Ptr);
 913:SYS/task_manager/task_manager.c ****     }
 914:SYS/task_manager/task_manager.c **** }
 1231              		.loc 1 914 1 view .LVU360
 1232 0008 08BD     		pop	{r3, pc}
 1233              	.L77:
 905:SYS/task_manager/task_manager.c ****         if (i == TskCrt_RegList.num)
 1234              		.loc 1 905 9 is_stmt 1 view .LVU361
 905:SYS/task_manager/task_manager.c ****         if (i == TskCrt_RegList.num)
 1235              		.loc 1 905 10 is_stmt 0 view .LVU362
 1236 000a 084A     		ldr	r2, .L79+4
 1237 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1238 000e 0133     		adds	r3, r3, #1
 1239 0010 DBB2     		uxtb	r3, r3
 1240 0012 1370     		strb	r3, [r2]
 906:SYS/task_manager/task_manager.c ****         {
 1241              		.loc 1 906 9 is_stmt 1 view .LVU363
 906:SYS/task_manager/task_manager.c ****         {
 1242              		.loc 1 906 32 is_stmt 0 view .LVU364
 1243 0014 064A     		ldr	r2, .L79+8
 1244 0016 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 906:SYS/task_manager/task_manager.c ****         {
 1245              		.loc 1 906 12 view .LVU365
 1246 0018 9342     		cmp	r3, r2
 1247 001a 01D0     		beq	.L78
 1248              	.L75:
 912:SYS/task_manager/task_manager.c ****     }
 1249              		.loc 1 912 9 is_stmt 1 view .LVU366
 1250 001c FFF7FEFF 		bl	Task_Exec
 1251              	.LVL88:
 1252              	.L78:
 908:SYS/task_manager/task_manager.c ****         }
 1253              		.loc 1 908 13 view .LVU367
 908:SYS/task_manager/task_manager.c ****         }
ARM GAS  /tmp/ccUTxatF.s 			page 71


 1254              		.loc 1 908 28 is_stmt 0 view .LVU368
 1255 0020 044B     		ldr	r3, .L79+12
 1256 0022 0122     		movs	r2, #1
 1257 0024 1A70     		strb	r2, [r3]
 1258 0026 F9E7     		b	.L75
 1259              	.L80:
 1260              		.align	2
 1261              	.L79:
 1262 0028 00000000 		.word	.LANCHOR9
 1263 002c 00000000 		.word	.LANCHOR10
 1264 0030 00000000 		.word	.LANCHOR3
 1265 0034 00000000 		.word	.LANCHOR11
 1266              		.cfi_endproc
 1267              	.LFE164:
 1269              		.section	.text.Task_CrtList_TraversePoll_callback,"ax",%progbits
 1270              		.align	1
 1271              		.syntax unified
 1272              		.thumb
 1273              		.thumb_func
 1274              		.fpu fpv4-sp-d16
 1276              	Task_CrtList_TraversePoll_callback:
 1277              	.LVL89:
 1278              	.LFB167:
 915:SYS/task_manager/task_manager.c **** 
 916:SYS/task_manager/task_manager.c **** void TaskSys_Set_State(TaskSys_State state)
 917:SYS/task_manager/task_manager.c **** {
 918:SYS/task_manager/task_manager.c ****     TskSys_state = state;
 919:SYS/task_manager/task_manager.c **** }
 920:SYS/task_manager/task_manager.c **** 
 921:SYS/task_manager/task_manager.c **** TaskSys_State TaskSys_Get_State(void)
 922:SYS/task_manager/task_manager.c **** {
 923:SYS/task_manager/task_manager.c ****     return TskSys_state;
 924:SYS/task_manager/task_manager.c **** }
 925:SYS/task_manager/task_manager.c **** 
 926:SYS/task_manager/task_manager.c **** static int Task_CrtList_TraversePoll_callback(item_obj *item, void *data, void *arg)
 927:SYS/task_manager/task_manager.c **** {
 1279              		.loc 1 927 1 is_stmt 1 view -0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 0
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
 928:SYS/task_manager/task_manager.c ****     if (data != NULL)
 1283              		.loc 1 928 5 view .LVU370
 1284              		.loc 1 928 8 is_stmt 0 view .LVU371
 1285 0000 B1B1     		cbz	r1, .L84
 927:SYS/task_manager/task_manager.c ****     if (data != NULL)
 1286              		.loc 1 927 1 view .LVU372
 1287 0002 10B5     		push	{r4, lr}
 1288              	.LCFI22:
 1289              		.cfi_def_cfa_offset 8
 1290              		.cfi_offset 4, -8
 1291              		.cfi_offset 14, -4
 1292 0004 0C46     		mov	r4, r1
 929:SYS/task_manager/task_manager.c ****     {
 930:SYS/task_manager/task_manager.c ****         //get current highest priority task handler AKA NxtRunTsk_Ptr
 931:SYS/task_manager/task_manager.c **** 
 932:SYS/task_manager/task_manager.c ****         if ((TskSys_state == TaskSys_Start) &&
 1293              		.loc 1 932 9 is_stmt 1 view .LVU373
ARM GAS  /tmp/ccUTxatF.s 			page 72


 1294              		.loc 1 932 27 is_stmt 0 view .LVU374
 1295 0006 0B4B     		ldr	r3, .L88
 1296 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1297 000a DBB2     		uxtb	r3, r3
 1298              		.loc 1 932 12 view .LVU375
 1299 000c 022B     		cmp	r3, #2
 1300 000e 01D0     		beq	.L87
 1301              	.LVL90:
 1302              	.L82:
 933:SYS/task_manager/task_manager.c ****             (((Task *)data)->Exec_status.State == Task_Stop) &&
 934:SYS/task_manager/task_manager.c ****             (!RuntimeObj_CompareWithCurrent(((Task *)data)->Exec_status.Exec_Time)))
 935:SYS/task_manager/task_manager.c ****         {
 936:SYS/task_manager/task_manager.c ****             Task_SetReady((Task *)data);
 937:SYS/task_manager/task_manager.c ****         }
 938:SYS/task_manager/task_manager.c ****     }
 939:SYS/task_manager/task_manager.c **** 
 940:SYS/task_manager/task_manager.c ****     return 0;
 1303              		.loc 1 940 5 is_stmt 1 view .LVU376
 941:SYS/task_manager/task_manager.c **** }
 1304              		.loc 1 941 1 is_stmt 0 view .LVU377
 1305 0010 0020     		movs	r0, #0
 1306 0012 10BD     		pop	{r4, pc}
 1307              	.LVL91:
 1308              	.L87:
 933:SYS/task_manager/task_manager.c ****             (((Task *)data)->Exec_status.State == Task_Stop) &&
 1309              		.loc 1 933 41 discriminator 1 view .LVU378
 1310 0014 91F84830 		ldrb	r3, [r1, #72]	@ zero_extendqisi2
 932:SYS/task_manager/task_manager.c ****             (((Task *)data)->Exec_status.State == Task_Stop) &&
 1311              		.loc 1 932 45 discriminator 1 view .LVU379
 1312 0018 022B     		cmp	r3, #2
 1313 001a F9D1     		bne	.L82
 934:SYS/task_manager/task_manager.c ****         {
 1314              		.loc 1 934 15 view .LVU380
 1315 001c 486A     		ldr	r0, [r1, #36]
 1316              	.LVL92:
 934:SYS/task_manager/task_manager.c ****         {
 1317              		.loc 1 934 15 view .LVU381
 1318 001e 896A     		ldr	r1, [r1, #40]
 1319              	.LVL93:
 934:SYS/task_manager/task_manager.c ****         {
 1320              		.loc 1 934 15 view .LVU382
 1321 0020 FFF7FEFF 		bl	RuntimeObj_CompareWithCurrent
 1322              	.LVL94:
 933:SYS/task_manager/task_manager.c ****             (!RuntimeObj_CompareWithCurrent(((Task *)data)->Exec_status.Exec_Time)))
 1323              		.loc 1 933 62 view .LVU383
 1324 0024 0028     		cmp	r0, #0
 1325 0026 F3D1     		bne	.L82
 936:SYS/task_manager/task_manager.c ****         }
 1326              		.loc 1 936 13 is_stmt 1 view .LVU384
 1327 0028 2046     		mov	r0, r4
 1328 002a FFF7FEFF 		bl	Task_SetReady
 1329              	.LVL95:
 1330 002e EFE7     		b	.L82
 1331              	.LVL96:
 1332              	.L84:
 1333              	.LCFI23:
 1334              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccUTxatF.s 			page 73


 1335              		.cfi_restore 4
 1336              		.cfi_restore 14
 940:SYS/task_manager/task_manager.c **** }
 1337              		.loc 1 940 5 view .LVU385
 1338              		.loc 1 941 1 is_stmt 0 view .LVU386
 1339 0030 0020     		movs	r0, #0
 1340              	.LVL97:
 1341              		.loc 1 941 1 view .LVU387
 1342 0032 7047     		bx	lr
 1343              	.L89:
 1344              		.align	2
 1345              	.L88:
 1346 0034 00000000 		.word	.LANCHOR5
 1347              		.cfi_endproc
 1348              	.LFE167:
 1350              		.section	.text.Task_Resume_FromBlock,"ax",%progbits
 1351              		.align	1
 1352              		.global	Task_Resume_FromBlock
 1353              		.syntax unified
 1354              		.thumb
 1355              		.thumb_func
 1356              		.fpu fpv4-sp-d16
 1358              	Task_Resume_FromBlock:
 1359              	.LVL98:
 1360              	.LFB131:
 204:SYS/task_manager/task_manager.c ****     Task_ClearBlock(tsk);
 1361              		.loc 1 204 1 is_stmt 1 view -0
 1362              		.cfi_startproc
 1363              		@ args = 0, pretend = 0, frame = 0
 1364              		@ frame_needed = 0, uses_anonymous_args = 0
 204:SYS/task_manager/task_manager.c ****     Task_ClearBlock(tsk);
 1365              		.loc 1 204 1 is_stmt 0 view .LVU389
 1366 0000 10B5     		push	{r4, lr}
 1367              	.LCFI24:
 1368              		.cfi_def_cfa_offset 8
 1369              		.cfi_offset 4, -8
 1370              		.cfi_offset 14, -4
 1371 0002 0446     		mov	r4, r0
 205:SYS/task_manager/task_manager.c ****     Task_SetReady(tsk);
 1372              		.loc 1 205 5 is_stmt 1 view .LVU390
 1373 0004 FFF7FEFF 		bl	Task_ClearBlock
 1374              	.LVL99:
 206:SYS/task_manager/task_manager.c **** 
 1375              		.loc 1 206 5 view .LVU391
 1376 0008 2046     		mov	r0, r4
 1377 000a FFF7FEFF 		bl	Task_SetReady
 1378              	.LVL100:
 208:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Top_Stk_Ptr = &tsk->TCB.Top_Stk_Ptr;
 1379              		.loc 1 208 5 view .LVU392
 208:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Top_Stk_Ptr = &tsk->TCB.Top_Stk_Ptr;
 1380              		.loc 1 208 28 is_stmt 0 view .LVU393
 1381 000e 0123     		movs	r3, #1
 1382 0010 84F84830 		strb	r3, [r4, #72]
 209:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Stack = tsk->TCB.Stack;
 1383              		.loc 1 209 5 is_stmt 1 view .LVU394
 209:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Stack = tsk->TCB.Stack;
 1384              		.loc 1 209 30 is_stmt 0 view .LVU395
ARM GAS  /tmp/ccUTxatF.s 			page 74


 1385 0014 04F15002 		add	r2, r4, #80
 209:SYS/task_manager/task_manager.c ****     NxtTsk_TCB.Stack = tsk->TCB.Stack;
 1386              		.loc 1 209 28 view .LVU396
 1387 0018 034B     		ldr	r3, .L92
 1388 001a 1A60     		str	r2, [r3]
 210:SYS/task_manager/task_manager.c ****     CurRunTsk_Ptr = tsk;
 1389              		.loc 1 210 5 is_stmt 1 view .LVU397
 210:SYS/task_manager/task_manager.c ****     CurRunTsk_Ptr = tsk;
 1390              		.loc 1 210 32 is_stmt 0 view .LVU398
 1391 001c 626D     		ldr	r2, [r4, #84]
 210:SYS/task_manager/task_manager.c ****     CurRunTsk_Ptr = tsk;
 1392              		.loc 1 210 22 view .LVU399
 1393 001e 5A60     		str	r2, [r3, #4]
 211:SYS/task_manager/task_manager.c **** }
 1394              		.loc 1 211 5 is_stmt 1 view .LVU400
 211:SYS/task_manager/task_manager.c **** }
 1395              		.loc 1 211 19 is_stmt 0 view .LVU401
 1396 0020 024B     		ldr	r3, .L92+4
 1397 0022 1C60     		str	r4, [r3]
 212:SYS/task_manager/task_manager.c **** 
 1398              		.loc 1 212 1 view .LVU402
 1399 0024 10BD     		pop	{r4, pc}
 1400              	.LVL101:
 1401              	.L93:
 212:SYS/task_manager/task_manager.c **** 
 1402              		.loc 1 212 1 view .LVU403
 1403 0026 00BF     		.align	2
 1404              	.L92:
 1405 0028 00000000 		.word	NxtTsk_TCB
 1406 002c 00000000 		.word	.LANCHOR4
 1407              		.cfi_endproc
 1408              	.LFE131:
 1410              		.section	.text.Task_SetBlock,"ax",%progbits
 1411              		.align	1
 1412              		.global	Task_SetBlock
 1413              		.syntax unified
 1414              		.thumb
 1415              		.thumb_func
 1416              		.fpu fpv4-sp-d16
 1418              	Task_SetBlock:
 1419              	.LVL102:
 1420              	.LFB132:
 215:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 1421              		.loc 1 215 1 is_stmt 1 view -0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 215:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 1425              		.loc 1 215 1 is_stmt 0 view .LVU405
 1426 0000 70B5     		push	{r4, r5, r6, lr}
 1427              	.LCFI25:
 1428              		.cfi_def_cfa_offset 16
 1429              		.cfi_offset 4, -16
 1430              		.cfi_offset 5, -12
 1431              		.cfi_offset 6, -8
 1432              		.cfi_offset 14, -4
 216:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
ARM GAS  /tmp/ccUTxatF.s 			page 75


 1433              		.loc 1 216 5 is_stmt 1 view .LVU406
 216:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 1434              		.loc 1 216 22 is_stmt 0 view .LVU407
 1435 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 216:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 1436              		.loc 1 216 13 view .LVU408
 1437 0004 DD08     		lsrs	r5, r3, #3
 1438              	.LVL103:
 217:SYS/task_manager/task_manager.c **** 
 1439              		.loc 1 217 5 is_stmt 1 view .LVU409
 217:SYS/task_manager/task_manager.c **** 
 1440              		.loc 1 217 13 is_stmt 0 view .LVU410
 1441 0006 03F00706 		and	r6, r3, #7
 1442              	.LVL104:
 220:SYS/task_manager/task_manager.c ****     //set current task under this group flag to block
 1443              		.loc 1 220 5 is_stmt 1 view .LVU411
 220:SYS/task_manager/task_manager.c ****     //set current task under this group flag to block
 1444              		.loc 1 220 27 is_stmt 0 view .LVU412
 1445 000a 134A     		ldr	r2, .L97
 1446 000c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 220:SYS/task_manager/task_manager.c ****     //set current task under this group flag to block
 1447              		.loc 1 220 32 view .LVU413
 1448 000e 0123     		movs	r3, #1
 1449 0010 03FA05F4 		lsl	r4, r3, r5
 220:SYS/task_manager/task_manager.c ****     //set current task under this group flag to block
 1450              		.loc 1 220 27 view .LVU414
 1451 0014 64B2     		sxtb	r4, r4
 1452 0016 2143     		orrs	r1, r1, r4
 1453 0018 C9B2     		uxtb	r1, r1
 1454 001a 1170     		strb	r1, [r2]
 222:SYS/task_manager/task_manager.c **** 
 1455              		.loc 1 222 5 is_stmt 1 view .LVU415
 222:SYS/task_manager/task_manager.c **** 
 1456              		.loc 1 222 40 is_stmt 0 view .LVU416
 1457 001c 2A44     		add	r2, r2, r5
 1458 001e 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 222:SYS/task_manager/task_manager.c **** 
 1459              		.loc 1 222 45 view .LVU417
 1460 0020 B340     		lsls	r3, r3, r6
 222:SYS/task_manager/task_manager.c **** 
 1461              		.loc 1 222 40 view .LVU418
 1462 0022 5BB2     		sxtb	r3, r3
 1463 0024 1943     		orrs	r1, r1, r3
 1464 0026 C9B2     		uxtb	r1, r1
 1465 0028 5170     		strb	r1, [r2, #1]
 225:SYS/task_manager/task_manager.c ****     //if no task ready then clear group reg
 1466              		.loc 1 225 5 is_stmt 1 view .LVU419
 225:SYS/task_manager/task_manager.c ****     //if no task ready then clear group reg
 1467              		.loc 1 225 40 is_stmt 0 view .LVU420
 1468 002a 0C4A     		ldr	r2, .L97+4
 1469 002c 2A44     		add	r2, r2, r5
 1470 002e 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1471 0030 21EA0303 		bic	r3, r1, r3
 1472 0034 5370     		strb	r3, [r2, #1]
 227:SYS/task_manager/task_manager.c ****     {
 1473              		.loc 1 227 5 is_stmt 1 view .LVU421
 227:SYS/task_manager/task_manager.c ****     {
ARM GAS  /tmp/ccUTxatF.s 			page 76


 1474              		.loc 1 227 39 is_stmt 0 view .LVU422
 1475 0036 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 227:SYS/task_manager/task_manager.c ****     {
 1476              		.loc 1 227 8 view .LVU423
 1477 0038 23B9     		cbnz	r3, .L95
 229:SYS/task_manager/task_manager.c ****     }
 1478              		.loc 1 229 9 is_stmt 1 view .LVU424
 229:SYS/task_manager/task_manager.c ****     }
 1479              		.loc 1 229 31 is_stmt 0 view .LVU425
 1480 003a 084A     		ldr	r2, .L97+4
 1481 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1482 003e 23EA0404 		bic	r4, r3, r4
 1483 0042 1470     		strb	r4, [r2]
 1484              	.L95:
 233:SYS/task_manager/task_manager.c **** 
 1485              		.loc 1 233 5 is_stmt 1 view .LVU426
 233:SYS/task_manager/task_manager.c **** 
 1486              		.loc 1 233 28 is_stmt 0 view .LVU427
 1487 0044 0323     		movs	r3, #3
 1488 0046 80F84830 		strb	r3, [r0, #72]
 235:SYS/task_manager/task_manager.c **** 
 1489              		.loc 1 235 5 is_stmt 1 view .LVU428
 235:SYS/task_manager/task_manager.c **** 
 1490              		.loc 1 235 19 is_stmt 0 view .LVU429
 1491 004a 0020     		movs	r0, #0
 1492              	.LVL105:
 235:SYS/task_manager/task_manager.c **** 
 1493              		.loc 1 235 19 view .LVU430
 1494 004c 044B     		ldr	r3, .L97+8
 1495 004e 1860     		str	r0, [r3]
 237:SYS/task_manager/task_manager.c **** }
 1496              		.loc 1 237 5 is_stmt 1 view .LVU431
 1497 0050 FFF7FEFF 		bl	Task_SetBASEPRI
 1498              	.LVL106:
 238:SYS/task_manager/task_manager.c **** 
 1499              		.loc 1 238 1 is_stmt 0 view .LVU432
 1500 0054 70BD     		pop	{r4, r5, r6, pc}
 1501              	.LVL107:
 1502              	.L98:
 238:SYS/task_manager/task_manager.c **** 
 1503              		.loc 1 238 1 view .LVU433
 1504 0056 00BF     		.align	2
 1505              	.L97:
 1506 0058 00000000 		.word	.LANCHOR1
 1507 005c 00000000 		.word	.LANCHOR0
 1508 0060 00000000 		.word	.LANCHOR4
 1509              		.cfi_endproc
 1510              	.LFE132:
 1512              		.section	.text.Task_SetPending,"ax",%progbits
 1513              		.align	1
 1514              		.global	Task_SetPending
 1515              		.syntax unified
 1516              		.thumb
 1517              		.thumb_func
 1518              		.fpu fpv4-sp-d16
 1520              	Task_SetPending:
 1521              	.LVL108:
ARM GAS  /tmp/ccUTxatF.s 			page 77


 1522              	.LFB133:
 241:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 1523              		.loc 1 241 1 is_stmt 1 view -0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 0
 1526              		@ frame_needed = 0, uses_anonymous_args = 0
 1527              		@ link register save eliminated.
 241:SYS/task_manager/task_manager.c ****     uint8_t grp_id = GET_TASKGROUP_PRIORITY(tsk->priority.Priority);
 1528              		.loc 1 241 1 is_stmt 0 view .LVU435
 1529 0000 70B4     		push	{r4, r5, r6}
 1530              	.LCFI26:
 1531              		.cfi_def_cfa_offset 12
 1532              		.cfi_offset 4, -12
 1533              		.cfi_offset 5, -8
 1534              		.cfi_offset 6, -4
 242:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 1535              		.loc 1 242 5 is_stmt 1 view .LVU436
 242:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 1536              		.loc 1 242 22 is_stmt 0 view .LVU437
 1537 0002 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 242:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = GET_TASKINGROUP_PRIORITY(tsk->priority.Priority);
 1538              		.loc 1 242 13 view .LVU438
 1539 0004 E208     		lsrs	r2, r4, #3
 1540              	.LVL109:
 243:SYS/task_manager/task_manager.c **** 
 1541              		.loc 1 243 5 is_stmt 1 view .LVU439
 243:SYS/task_manager/task_manager.c **** 
 1542              		.loc 1 243 13 is_stmt 0 view .LVU440
 1543 0006 04F00705 		and	r5, r4, #7
 1544              	.LVL110:
 246:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 1545              		.loc 1 246 5 is_stmt 1 view .LVU441
 246:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 1546              		.loc 1 246 27 is_stmt 0 view .LVU442
 1547 000a 094B     		ldr	r3, .L101
 1548 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 246:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 1549              		.loc 1 246 32 view .LVU443
 1550 000e 0124     		movs	r4, #1
 1551 0010 04FA02F6 		lsl	r6, r4, r2
 246:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 1552              		.loc 1 246 27 view .LVU444
 1553 0014 3143     		orrs	r1, r1, r6
 1554 0016 C9B2     		uxtb	r1, r1
 1555 0018 1970     		strb	r1, [r3]
 248:SYS/task_manager/task_manager.c **** 
 1556              		.loc 1 248 5 is_stmt 1 view .LVU445
 248:SYS/task_manager/task_manager.c **** 
 1557              		.loc 1 248 40 is_stmt 0 view .LVU446
 1558 001a 1344     		add	r3, r3, r2
 1559 001c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1560              	.LVL111:
 248:SYS/task_manager/task_manager.c **** 
 1561              		.loc 1 248 45 view .LVU447
 1562 001e AC40     		lsls	r4, r4, r5
 248:SYS/task_manager/task_manager.c **** 
 1563              		.loc 1 248 40 view .LVU448
ARM GAS  /tmp/ccUTxatF.s 			page 78


 1564 0020 2243     		orrs	r2, r2, r4
 1565 0022 D2B2     		uxtb	r2, r2
 1566 0024 5A70     		strb	r2, [r3, #1]
 251:SYS/task_manager/task_manager.c **** }
 1567              		.loc 1 251 5 is_stmt 1 view .LVU449
 251:SYS/task_manager/task_manager.c **** }
 1568              		.loc 1 251 28 is_stmt 0 view .LVU450
 1569 0026 0423     		movs	r3, #4
 1570 0028 80F84830 		strb	r3, [r0, #72]
 252:SYS/task_manager/task_manager.c **** 
 1571              		.loc 1 252 1 view .LVU451
 1572 002c 70BC     		pop	{r4, r5, r6}
 1573              	.LCFI27:
 1574              		.cfi_restore 6
 1575              		.cfi_restore 5
 1576              		.cfi_restore 4
 1577              		.cfi_def_cfa_offset 0
 1578              	.LVL112:
 252:SYS/task_manager/task_manager.c **** 
 1579              		.loc 1 252 1 view .LVU452
 1580 002e 7047     		bx	lr
 1581              	.L102:
 1582              		.align	2
 1583              	.L101:
 1584 0030 00000000 		.word	.LANCHOR2
 1585              		.cfi_endproc
 1586              	.LFE133:
 1588              		.section	.text.Task_SwitchStack,"ax",%progbits
 1589              		.align	1
 1590              		.global	Task_SwitchStack
 1591              		.syntax unified
 1592              		.thumb
 1593              		.thumb_func
 1594              		.fpu fpv4-sp-d16
 1596              	Task_SwitchStack:
 1597              	.LFB134:
 255:SYS/task_manager/task_manager.c ****     CurTsk_TCB = NxtTsk_TCB;
 1598              		.loc 1 255 1 is_stmt 1 view -0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 0
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
 1602              		@ link register save eliminated.
 256:SYS/task_manager/task_manager.c **** }
 1603              		.loc 1 256 5 view .LVU454
 256:SYS/task_manager/task_manager.c **** }
 1604              		.loc 1 256 16 is_stmt 0 view .LVU455
 1605 0000 034B     		ldr	r3, .L104
 1606 0002 044A     		ldr	r2, .L104+4
 1607 0004 92E80300 		ldm	r2, {r0, r1}
 1608 0008 83E80300 		stm	r3, {r0, r1}
 257:SYS/task_manager/task_manager.c **** 
 1609              		.loc 1 257 1 view .LVU456
 1610 000c 7047     		bx	lr
 1611              	.L105:
 1612 000e 00BF     		.align	2
 1613              	.L104:
 1614 0010 00000000 		.word	CurTsk_TCB
ARM GAS  /tmp/ccUTxatF.s 			page 79


 1615 0014 00000000 		.word	NxtTsk_TCB
 1616              		.cfi_endproc
 1617              	.LFE134:
 1619              		.section	.text.Task_Get_HighestRank_PndTask,"ax",%progbits
 1620              		.align	1
 1621              		.global	Task_Get_HighestRank_PndTask
 1622              		.syntax unified
 1623              		.thumb
 1624              		.thumb_func
 1625              		.fpu fpv4-sp-d16
 1627              	Task_Get_HighestRank_PndTask:
 1628              	.LFB135:
 260:SYS/task_manager/task_manager.c ****     uint8_t grp_id;
 1629              		.loc 1 260 1 is_stmt 1 view -0
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 0
 1632              		@ frame_needed = 0, uses_anonymous_args = 0
 1633              		@ link register save eliminated.
 261:SYS/task_manager/task_manager.c ****     uint8_t tsk_id;
 1634              		.loc 1 261 5 view .LVU458
 262:SYS/task_manager/task_manager.c **** 
 1635              		.loc 1 262 5 view .LVU459
 264:SYS/task_manager/task_manager.c ****     {
 1636              		.loc 1 264 5 view .LVU460
 264:SYS/task_manager/task_manager.c ****     {
 1637              		.loc 1 264 26 is_stmt 0 view .LVU461
 1638 0000 134B     		ldr	r3, .L114
 1639 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 264:SYS/task_manager/task_manager.c ****     {
 1640              		.loc 1 264 8 view .LVU462
 1641 0004 0BB3     		cbz	r3, .L108
 267:SYS/task_manager/task_manager.c ****         //find task in group
 1642              		.loc 1 267 9 is_stmt 1 view .LVU463
 267:SYS/task_manager/task_manager.c ****         //find task in group
 1643              		.loc 1 267 46 is_stmt 0 view .LVU464
 1644 0006 124B     		ldr	r3, .L114
 1645 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1646 000a D2B2     		uxtb	r2, r2
 267:SYS/task_manager/task_manager.c ****         //find task in group
 1647              		.loc 1 267 16 view .LVU465
 1648 000c 1149     		ldr	r1, .L114+4
 1649 000e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 269:SYS/task_manager/task_manager.c ****     }
 1650              		.loc 1 269 9 is_stmt 1 view .LVU466
 269:SYS/task_manager/task_manager.c ****     }
 1651              		.loc 1 269 59 is_stmt 0 view .LVU467
 1652 0010 1344     		add	r3, r3, r2
 1653 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1654 0014 DBB2     		uxtb	r3, r3
 269:SYS/task_manager/task_manager.c ****     }
 1655              		.loc 1 269 16 view .LVU468
 1656 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 274:SYS/task_manager/task_manager.c ****     {
 1657              		.loc 1 274 5 is_stmt 1 view .LVU469
 274:SYS/task_manager/task_manager.c ****     {
 1658              		.loc 1 274 25 is_stmt 0 view .LVU470
 1659 0018 03EBC200 		add	r0, r3, r2, lsl #3
ARM GAS  /tmp/ccUTxatF.s 			page 80


 1660 001c 0E49     		ldr	r1, .L114+8
 1661 001e 51F82000 		ldr	r0, [r1, r0, lsl #2]
 274:SYS/task_manager/task_manager.c ****     {
 1662              		.loc 1 274 8 view .LVU471
 1663 0022 00B1     		cbz	r0, .L113
 284:SYS/task_manager/task_manager.c **** 
 1664              		.loc 1 284 1 view .LVU472
 1665 0024 7047     		bx	lr
 1666              	.L113:
 260:SYS/task_manager/task_manager.c ****     uint8_t grp_id;
 1667              		.loc 1 260 1 view .LVU473
 1668 0026 70B4     		push	{r4, r5, r6}
 1669              	.LCFI28:
 1670              		.cfi_def_cfa_offset 12
 1671              		.cfi_offset 4, -12
 1672              		.cfi_offset 5, -8
 1673              		.cfi_offset 6, -4
 280:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 1674              		.loc 1 280 9 is_stmt 1 view .LVU474
 280:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 1675              		.loc 1 280 31 is_stmt 0 view .LVU475
 1676 0028 0949     		ldr	r1, .L114
 1677 002a 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 280:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 1678              		.loc 1 280 38 view .LVU476
 1679 002c 0124     		movs	r4, #1
 1680 002e 04FA02F6 		lsl	r6, r4, r2
 280:SYS/task_manager/task_manager.c ****         TskHdl_PndMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 1681              		.loc 1 280 31 view .LVU477
 1682 0032 25EA0605 		bic	r5, r5, r6
 1683 0036 0D70     		strb	r5, [r1]
 281:SYS/task_manager/task_manager.c ****         return NULL;
 1684              		.loc 1 281 9 is_stmt 1 view .LVU478
 281:SYS/task_manager/task_manager.c ****         return NULL;
 1685              		.loc 1 281 44 is_stmt 0 view .LVU479
 1686 0038 0A44     		add	r2, r2, r1
 1687 003a 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 281:SYS/task_manager/task_manager.c ****         return NULL;
 1688              		.loc 1 281 51 view .LVU480
 1689 003c 04FA03F3 		lsl	r3, r4, r3
 281:SYS/task_manager/task_manager.c ****         return NULL;
 1690              		.loc 1 281 44 view .LVU481
 1691 0040 21EA0303 		bic	r3, r1, r3
 1692 0044 5370     		strb	r3, [r2, #1]
 282:SYS/task_manager/task_manager.c ****     }
 1693              		.loc 1 282 9 is_stmt 1 view .LVU482
 284:SYS/task_manager/task_manager.c **** 
 1694              		.loc 1 284 1 is_stmt 0 view .LVU483
 1695 0046 70BC     		pop	{r4, r5, r6}
 1696              	.LCFI29:
 1697              		.cfi_restore 6
 1698              		.cfi_restore 5
 1699              		.cfi_restore 4
 1700              		.cfi_def_cfa_offset 0
 1701 0048 7047     		bx	lr
 1702              	.L108:
 272:SYS/task_manager/task_manager.c **** 
ARM GAS  /tmp/ccUTxatF.s 			page 81


 1703              		.loc 1 272 16 view .LVU484
 1704 004a 0020     		movs	r0, #0
 1705 004c 7047     		bx	lr
 1706              	.L115:
 1707 004e 00BF     		.align	2
 1708              	.L114:
 1709 0050 00000000 		.word	.LANCHOR2
 1710 0054 00000000 		.word	.LANCHOR12
 1711 0058 00000000 		.word	Task_Ptr
 1712              		.cfi_endproc
 1713              	.LFE135:
 1715              		.section	.text.Task_SaveCurProc,"ax",%progbits
 1716              		.align	1
 1717              		.global	Task_SaveCurProc
 1718              		.syntax unified
 1719              		.thumb
 1720              		.thumb_func
 1721              		.fpu fpv4-sp-d16
 1723              	Task_SaveCurProc:
 1724              	.LFB140:
 337:SYS/task_manager/task_manager.c ****     __ASM("MRS    R0, PSP");
 1725              		.loc 1 337 1 is_stmt 1 view -0
 1726              		.cfi_startproc
 1727              		@ Naked Function: prologue and epilogue provided by programmer.
 1728              		@ args = 0, pretend = 0, frame = 0
 1729              		@ frame_needed = 0, uses_anonymous_args = 0
 338:SYS/task_manager/task_manager.c ****     __ASM("LDR	  R3, CurrentTCBConst_Tmp3");
 1730              		.loc 1 338 5 view .LVU486
 1731              		.syntax unified
 1732              	@ 338 "SYS/task_manager/task_manager.c" 1
 1733 0000 EFF30980 		MRS    R0, PSP
 1734              	@ 0 "" 2
 339:SYS/task_manager/task_manager.c ****     __ASM("LDR    R2, [R3]");
 1735              		.loc 1 339 5 view .LVU487
 1736              	@ 339 "SYS/task_manager/task_manager.c" 1
 1737 0004 DFF81C30 		LDR	  R3, CurrentTCBConst_Tmp3
 1738              	@ 0 "" 2
 340:SYS/task_manager/task_manager.c **** 
 1739              		.loc 1 340 5 view .LVU488
 1740              	@ 340 "SYS/task_manager/task_manager.c" 1
 1741 0008 1A68     		LDR    R2, [R3]
 1742              	@ 0 "" 2
 342:SYS/task_manager/task_manager.c **** 
 1743              		.loc 1 342 5 view .LVU489
 1744              	@ 342 "SYS/task_manager/task_manager.c" 1
 1745 000a BFF36F8F 		ISB
 1746              	@ 0 "" 2
 344:SYS/task_manager/task_manager.c ****     __ASM("STR      R0, [R2]");
 1747              		.loc 1 344 5 view .LVU490
 1748              	@ 344 "SYS/task_manager/task_manager.c" 1
 1749 000e 20E9F04F 		STMDB    R0!, {R4-R11, R14}
 1750              	@ 0 "" 2
 345:SYS/task_manager/task_manager.c **** 
 1751              		.loc 1 345 5 view .LVU491
 1752              	@ 345 "SYS/task_manager/task_manager.c" 1
 1753 0012 1060     		STR      R0, [R2]
 1754              	@ 0 "" 2
ARM GAS  /tmp/ccUTxatF.s 			page 82


 348:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 1755              		.loc 1 348 5 view .LVU492
 1756              	@ 348 "SYS/task_manager/task_manager.c" 1
 1757 0014 1EF0100F 		TST      R14, #0x10
 1758              	@ 0 "" 2
 349:SYS/task_manager/task_manager.c ****     __ASM("VSTMDBEQ R0!, {s16-s31}");
 1759              		.loc 1 349 5 view .LVU493
 1760              	@ 349 "SYS/task_manager/task_manager.c" 1
 1761 0018 08BF     		IT       EQ
 1762              	@ 0 "" 2
 350:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 1763              		.loc 1 350 5 view .LVU494
 1764              	@ 350 "SYS/task_manager/task_manager.c" 1
 1765 001a 20ED108A 		VSTMDBEQ R0!, {s16-s31}
 1766              	@ 0 "" 2
 353:SYS/task_manager/task_manager.c ****     __ASM("BX       R14");
 1767              		.loc 1 353 5 view .LVU495
 1768              	@ 353 "SYS/task_manager/task_manager.c" 1
 1769 001e BFF36F8F 		ISB
 1770              	@ 0 "" 2
 354:SYS/task_manager/task_manager.c **** 
 1771              		.loc 1 354 5 view .LVU496
 1772              	@ 354 "SYS/task_manager/task_manager.c" 1
 1773 0022 7047     		BX       R14
 1774              	@ 0 "" 2
 356:SYS/task_manager/task_manager.c **** }
 1775              		.loc 1 356 5 view .LVU497
 1776              	@ 356 "SYS/task_manager/task_manager.c" 1
 1777 0024 00000000 		CurrentTCBConst_Tmp3: .word CurTsk_TCB
 1778              	@ 0 "" 2
 357:SYS/task_manager/task_manager.c **** 
 1779              		.loc 1 357 1 is_stmt 0 view .LVU498
 1780              		.thumb
 1781              		.syntax unified
 1782              		.cfi_endproc
 1783              	.LFE140:
 1785              		.section	.text.Task_Load,"ax",%progbits
 1786              		.align	1
 1787              		.global	Task_Load
 1788              		.syntax unified
 1789              		.thumb
 1790              		.thumb_func
 1791              		.fpu fpv4-sp-d16
 1793              	Task_Load:
 1794              	.LFB141:
 360:SYS/task_manager/task_manager.c ****     __ASM("LDR	  R3, =CurTsk_TCB");
 1795              		.loc 1 360 1 is_stmt 1 view -0
 1796              		.cfi_startproc
 1797              		@ Naked Function: prologue and epilogue provided by programmer.
 1798              		@ args = 0, pretend = 0, frame = 0
 1799              		@ frame_needed = 0, uses_anonymous_args = 0
 361:SYS/task_manager/task_manager.c ****     __ASM("LDR    R1, [R3]");
 1800              		.loc 1 361 5 view .LVU500
 1801              		.syntax unified
 1802              	@ 361 "SYS/task_manager/task_manager.c" 1
 1803 0000 074B     		LDR	  R3, =CurTsk_TCB
 1804              	@ 0 "" 2
ARM GAS  /tmp/ccUTxatF.s 			page 83


 362:SYS/task_manager/task_manager.c ****     __ASM("LDR    R0, [R1]");
 1805              		.loc 1 362 5 view .LVU501
 1806              	@ 362 "SYS/task_manager/task_manager.c" 1
 1807 0002 1968     		LDR    R1, [R3]
 1808              	@ 0 "" 2
 363:SYS/task_manager/task_manager.c **** 
 1809              		.loc 1 363 5 view .LVU502
 1810              	@ 363 "SYS/task_manager/task_manager.c" 1
 1811 0004 0868     		LDR    R0, [R1]
 1812              	@ 0 "" 2
 365:SYS/task_manager/task_manager.c **** 
 1813              		.loc 1 365 5 view .LVU503
 1814              	@ 365 "SYS/task_manager/task_manager.c" 1
 1815 0006 B0E8F04F 		LDMIA  R0!, {R4-R11, R14}
 1816              	@ 0 "" 2
 368:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 1817              		.loc 1 368 5 view .LVU504
 1818              	@ 368 "SYS/task_manager/task_manager.c" 1
 1819 000a 1EF0100F 		TST      R14, #0x10
 1820              	@ 0 "" 2
 369:SYS/task_manager/task_manager.c ****     __ASM("VLDMIAEQ R0!, {s16-s31}");
 1821              		.loc 1 369 5 view .LVU505
 1822              	@ 369 "SYS/task_manager/task_manager.c" 1
 1823 000e 08BF     		IT       EQ
 1824              	@ 0 "" 2
 370:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 1825              		.loc 1 370 5 view .LVU506
 1826              	@ 370 "SYS/task_manager/task_manager.c" 1
 1827 0010 B0EC108A 		VLDMIAEQ R0!, {s16-s31}
 1828              	@ 0 "" 2
 373:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 1829              		.loc 1 373 5 view .LVU507
 1830              	@ 373 "SYS/task_manager/task_manager.c" 1
 1831 0014 80F30988 		MSR    PSP, R0
 1832              	@ 0 "" 2
 374:SYS/task_manager/task_manager.c ****     //__ASM("MOV    R0, #240");
 1833              		.loc 1 374 5 view .LVU508
 1834              	@ 374 "SYS/task_manager/task_manager.c" 1
 1835 0018 BFF36F8F 		ISB
 1836              	@ 0 "" 2
 377:SYS/task_manager/task_manager.c ****     __ASM(".ALIGN 4");
 1837              		.loc 1 377 5 view .LVU509
 1838              	@ 377 "SYS/task_manager/task_manager.c" 1
 1839 001c 7047     		BX     R14
 1840              	@ 0 "" 2
 378:SYS/task_manager/task_manager.c **** }
 1841              		.loc 1 378 5 view .LVU510
 1842              	@ 378 "SYS/task_manager/task_manager.c" 1
 1843 001e 00BF     		.ALIGN 4
 1844              	@ 0 "" 2
 379:SYS/task_manager/task_manager.c **** 
 1845              		.loc 1 379 1 is_stmt 0 view .LVU511
 1846              		.thumb
 1847              		.syntax unified
 1848              		.cfi_endproc
 1849              	.LFE141:
 1851              		.section	.text.Load_FirstTask,"ax",%progbits
ARM GAS  /tmp/ccUTxatF.s 			page 84


 1852              		.align	1
 1853              		.global	Load_FirstTask
 1854              		.syntax unified
 1855              		.thumb
 1856              		.thumb_func
 1857              		.fpu fpv4-sp-d16
 1859              	Load_FirstTask:
 1860              	.LFB142:
 382:SYS/task_manager/task_manager.c ****     Task_Load();
 1861              		.loc 1 382 1 is_stmt 1 view -0
 1862              		.cfi_startproc
 1863              		@ args = 0, pretend = 0, frame = 0
 1864              		@ frame_needed = 0, uses_anonymous_args = 0
 1865 0000 08B5     		push	{r3, lr}
 1866              	.LCFI30:
 1867              		.cfi_def_cfa_offset 8
 1868              		.cfi_offset 3, -8
 1869              		.cfi_offset 14, -4
 383:SYS/task_manager/task_manager.c **** }
 1870              		.loc 1 383 5 view .LVU513
 1871 0002 FFF7FEFF 		bl	Task_Load
 1872              	.LVL113:
 384:SYS/task_manager/task_manager.c **** 
 1873              		.loc 1 384 1 is_stmt 0 view .LVU514
 1874 0006 08BD     		pop	{r3, pc}
 1875              		.cfi_endproc
 1876              	.LFE142:
 1878              		.section	.text.Task_SwitchContext,"ax",%progbits
 1879              		.align	1
 1880              		.global	Task_SwitchContext
 1881              		.syntax unified
 1882              		.thumb
 1883              		.thumb_func
 1884              		.fpu fpv4-sp-d16
 1886              	Task_SwitchContext:
 1887              	.LFB143:
 387:SYS/task_manager/task_manager.c ****     __ASM("MRS      R0, PSP");
 1888              		.loc 1 387 1 is_stmt 1 view -0
 1889              		.cfi_startproc
 1890              		@ Naked Function: prologue and epilogue provided by programmer.
 1891              		@ args = 0, pretend = 0, frame = 0
 1892              		@ frame_needed = 0, uses_anonymous_args = 0
 388:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 1893              		.loc 1 388 5 view .LVU516
 1894              		.syntax unified
 1895              	@ 388 "SYS/task_manager/task_manager.c" 1
 1896 0000 EFF30980 		MRS      R0, PSP
 1897              	@ 0 "" 2
 389:SYS/task_manager/task_manager.c **** 
 1898              		.loc 1 389 5 view .LVU517
 1899              	@ 389 "SYS/task_manager/task_manager.c" 1
 1900 0004 BFF36F8F 		ISB
 1901              	@ 0 "" 2
 391:SYS/task_manager/task_manager.c ****     __ASM("LDR      R2, [R3]");
 1902              		.loc 1 391 5 view .LVU518
 1903              	@ 391 "SYS/task_manager/task_manager.c" 1
 1904 0008 DFF85030 		LDR      R3, CurrentTCBConst_Tmp
ARM GAS  /tmp/ccUTxatF.s 			page 85


 1905              	@ 0 "" 2
 392:SYS/task_manager/task_manager.c **** 
 1906              		.loc 1 392 5 view .LVU519
 1907              	@ 392 "SYS/task_manager/task_manager.c" 1
 1908 000c 1A68     		LDR      R2, [R3]
 1909              	@ 0 "" 2
 395:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 1910              		.loc 1 395 5 view .LVU520
 1911              	@ 395 "SYS/task_manager/task_manager.c" 1
 1912 000e 1EF0100F 		TST      R14, #0x10
 1913              	@ 0 "" 2
 396:SYS/task_manager/task_manager.c ****     __ASM("VSTMDBEQ R0!, {s16-s31}");
 1914              		.loc 1 396 5 view .LVU521
 1915              	@ 396 "SYS/task_manager/task_manager.c" 1
 1916 0012 08BF     		IT       EQ
 1917              	@ 0 "" 2
 397:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 1918              		.loc 1 397 5 view .LVU522
 1919              	@ 397 "SYS/task_manager/task_manager.c" 1
 1920 0014 20ED108A 		VSTMDBEQ R0!, {s16-s31}
 1921              	@ 0 "" 2
 400:SYS/task_manager/task_manager.c ****     __ASM("STR      R0, [R2]");
 1922              		.loc 1 400 5 view .LVU523
 1923              	@ 400 "SYS/task_manager/task_manager.c" 1
 1924 0018 20E9F04F 		STMDB    R0!, {R4-R11, R14}
 1925              	@ 0 "" 2
 401:SYS/task_manager/task_manager.c **** 
 1926              		.loc 1 401 5 view .LVU524
 1927              	@ 401 "SYS/task_manager/task_manager.c" 1
 1928 001c 1060     		STR      R0, [R2]
 1929              	@ 0 "" 2
 403:SYS/task_manager/task_manager.c ****     __ASM("MOV      R0, %0" ::"i"(0x50));
 1930              		.loc 1 403 5 view .LVU525
 1931              	@ 403 "SYS/task_manager/task_manager.c" 1
 1932 001e 2DE90900 		STMDB    SP!, {R0, R3}
 1933              	@ 0 "" 2
 404:SYS/task_manager/task_manager.c ****     __ASM("MSR      BASEPRI, R0");
 1934              		.loc 1 404 5 view .LVU526
 1935              	@ 404 "SYS/task_manager/task_manager.c" 1
 1936 0022 4FF05000 		MOV      R0, #80
 1937              	@ 0 "" 2
 405:SYS/task_manager/task_manager.c **** 
 1938              		.loc 1 405 5 view .LVU527
 1939              	@ 405 "SYS/task_manager/task_manager.c" 1
 1940 0026 80F31188 		MSR      BASEPRI, R0
 1941              	@ 0 "" 2
 407:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 1942              		.loc 1 407 5 view .LVU528
 1943              	@ 407 "SYS/task_manager/task_manager.c" 1
 1944 002a BFF34F8F 		DSB
 1945              	@ 0 "" 2
 408:SYS/task_manager/task_manager.c **** 
 1946              		.loc 1 408 5 view .LVU529
 1947              	@ 408 "SYS/task_manager/task_manager.c" 1
 1948 002e BFF36F8F 		ISB
 1949              	@ 0 "" 2
 410:SYS/task_manager/task_manager.c **** 
ARM GAS  /tmp/ccUTxatF.s 			page 86


 1950              		.loc 1 410 5 view .LVU530
 1951              	@ 410 "SYS/task_manager/task_manager.c" 1
 1952 0032 FFF7FEFF 		BL       Task_SwitchStack
 1953              	@ 0 "" 2
 412:SYS/task_manager/task_manager.c ****     __ASM("MSR      BASEPRI, R0");
 1954              		.loc 1 412 5 view .LVU531
 1955              	@ 412 "SYS/task_manager/task_manager.c" 1
 1956 0036 4FF00000 		MOV      R0, #0
 1957              	@ 0 "" 2
 413:SYS/task_manager/task_manager.c ****     __ASM("LDMIA    SP!, {R0, R3}");
 1958              		.loc 1 413 5 view .LVU532
 1959              	@ 413 "SYS/task_manager/task_manager.c" 1
 1960 003a 80F31188 		MSR      BASEPRI, R0
 1961              	@ 0 "" 2
 414:SYS/task_manager/task_manager.c **** 
 1962              		.loc 1 414 5 view .LVU533
 1963              	@ 414 "SYS/task_manager/task_manager.c" 1
 1964 003e 09BC     		LDMIA    SP!, {R0, R3}
 1965              	@ 0 "" 2
 416:SYS/task_manager/task_manager.c ****     __ASM("LDR      R0, [R1]");
 1966              		.loc 1 416 5 view .LVU534
 1967              	@ 416 "SYS/task_manager/task_manager.c" 1
 1968 0040 1968     		LDR      R1, [R3]
 1969              	@ 0 "" 2
 417:SYS/task_manager/task_manager.c **** 
 1970              		.loc 1 417 5 view .LVU535
 1971              	@ 417 "SYS/task_manager/task_manager.c" 1
 1972 0042 0868     		LDR      R0, [R1]
 1973              	@ 0 "" 2
 419:SYS/task_manager/task_manager.c **** 
 1974              		.loc 1 419 5 view .LVU536
 1975              	@ 419 "SYS/task_manager/task_manager.c" 1
 1976 0044 B0E8F04F 		LDMIA    R0!, {R4-R11, R14}
 1977              	@ 0 "" 2
 422:SYS/task_manager/task_manager.c ****     __ASM("IT       EQ");
 1978              		.loc 1 422 5 view .LVU537
 1979              	@ 422 "SYS/task_manager/task_manager.c" 1
 1980 0048 1EF0100F 		TST      R14, #0x10
 1981              	@ 0 "" 2
 423:SYS/task_manager/task_manager.c ****     __ASM("VLDMIAEQ R0!, {s16-s31}");
 1982              		.loc 1 423 5 view .LVU538
 1983              	@ 423 "SYS/task_manager/task_manager.c" 1
 1984 004c 08BF     		IT       EQ
 1985              	@ 0 "" 2
 424:SYS/task_manager/task_manager.c ****     /******************************  FPU SECTION  *********************************/
 1986              		.loc 1 424 5 view .LVU539
 1987              	@ 424 "SYS/task_manager/task_manager.c" 1
 1988 004e B0EC108A 		VLDMIAEQ R0!, {s16-s31}
 1989              	@ 0 "" 2
 427:SYS/task_manager/task_manager.c ****     __ASM("ISB");
 1990              		.loc 1 427 5 view .LVU540
 1991              	@ 427 "SYS/task_manager/task_manager.c" 1
 1992 0052 80F30988 		MSR      PSP,R0
 1993              	@ 0 "" 2
 428:SYS/task_manager/task_manager.c ****     //__ASM("MOV      R0, #240");
 1994              		.loc 1 428 5 view .LVU541
 1995              	@ 428 "SYS/task_manager/task_manager.c" 1
ARM GAS  /tmp/ccUTxatF.s 			page 87


 1996 0056 BFF36F8F 		ISB
 1997              	@ 0 "" 2
 431:SYS/task_manager/task_manager.c **** 
 1998              		.loc 1 431 5 view .LVU542
 1999              	@ 431 "SYS/task_manager/task_manager.c" 1
 2000 005a 7047     		BX       R14
 2001              	@ 0 "" 2
 433:SYS/task_manager/task_manager.c ****     __ASM(".ALIGN 4");
 2002              		.loc 1 433 5 view .LVU543
 2003              	@ 433 "SYS/task_manager/task_manager.c" 1
 2004 005c 00000000 		CurrentTCBConst_Tmp: .word CurTsk_TCB
 2005              	@ 0 "" 2
 434:SYS/task_manager/task_manager.c **** }
 2006              		.loc 1 434 5 view .LVU544
 2007              	@ 434 "SYS/task_manager/task_manager.c" 1
 2008              		.ALIGN 4
 2009              	@ 0 "" 2
 435:SYS/task_manager/task_manager.c **** 
 2010              		.loc 1 435 1 is_stmt 0 view .LVU545
 2011              		.thumb
 2012              		.syntax unified
 2013              		.cfi_endproc
 2014              	.LFE143:
 2016              		.section	.text.Task_Get_HighestRank_RdyTask,"ax",%progbits
 2017              		.align	1
 2018              		.global	Task_Get_HighestRank_RdyTask
 2019              		.syntax unified
 2020              		.thumb
 2021              		.thumb_func
 2022              		.fpu fpv4-sp-d16
 2024              	Task_Get_HighestRank_RdyTask:
 2025              	.LFB149:
 522:SYS/task_manager/task_manager.c ****     uint8_t grp_id = 0;
 2026              		.loc 1 522 1 is_stmt 1 view -0
 2027              		.cfi_startproc
 2028              		@ args = 0, pretend = 0, frame = 0
 2029              		@ frame_needed = 0, uses_anonymous_args = 0
 2030              		@ link register save eliminated.
 523:SYS/task_manager/task_manager.c ****     uint8_t tsk_id = 0;
 2031              		.loc 1 523 5 view .LVU547
 2032              	.LVL114:
 524:SYS/task_manager/task_manager.c **** 
 2033              		.loc 1 524 5 view .LVU548
 526:SYS/task_manager/task_manager.c ****     {
 2034              		.loc 1 526 5 view .LVU549
 526:SYS/task_manager/task_manager.c ****     {
 2035              		.loc 1 526 26 is_stmt 0 view .LVU550
 2036 0000 134B     		ldr	r3, .L129
 2037 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 526:SYS/task_manager/task_manager.c ****     {
 2038              		.loc 1 526 8 view .LVU551
 2039 0004 0BB3     		cbz	r3, .L123
 529:SYS/task_manager/task_manager.c ****         //find task in group
 2040              		.loc 1 529 9 is_stmt 1 view .LVU552
 529:SYS/task_manager/task_manager.c ****         //find task in group
 2041              		.loc 1 529 46 is_stmt 0 view .LVU553
 2042 0006 124B     		ldr	r3, .L129
ARM GAS  /tmp/ccUTxatF.s 			page 88


 2043 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2044 000a D2B2     		uxtb	r2, r2
 529:SYS/task_manager/task_manager.c ****         //find task in group
 2045              		.loc 1 529 16 view .LVU554
 2046 000c 1149     		ldr	r1, .L129+4
 2047 000e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2048              	.LVL115:
 531:SYS/task_manager/task_manager.c ****     }
 2049              		.loc 1 531 9 is_stmt 1 view .LVU555
 531:SYS/task_manager/task_manager.c ****     }
 2050              		.loc 1 531 59 is_stmt 0 view .LVU556
 2051 0010 1344     		add	r3, r3, r2
 2052 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2053 0014 DBB2     		uxtb	r3, r3
 531:SYS/task_manager/task_manager.c ****     }
 2054              		.loc 1 531 16 view .LVU557
 2055 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2056              	.LVL116:
 536:SYS/task_manager/task_manager.c ****     {
 2057              		.loc 1 536 5 is_stmt 1 view .LVU558
 536:SYS/task_manager/task_manager.c ****     {
 2058              		.loc 1 536 25 is_stmt 0 view .LVU559
 2059 0018 03EBC200 		add	r0, r3, r2, lsl #3
 2060 001c 0E49     		ldr	r1, .L129+8
 2061 001e 51F82000 		ldr	r0, [r1, r0, lsl #2]
 536:SYS/task_manager/task_manager.c ****     {
 2062              		.loc 1 536 8 view .LVU560
 2063 0022 00B1     		cbz	r0, .L128
 546:SYS/task_manager/task_manager.c **** 
 2064              		.loc 1 546 1 view .LVU561
 2065 0024 7047     		bx	lr
 2066              	.L128:
 522:SYS/task_manager/task_manager.c ****     uint8_t grp_id = 0;
 2067              		.loc 1 522 1 view .LVU562
 2068 0026 70B4     		push	{r4, r5, r6}
 2069              	.LCFI31:
 2070              		.cfi_def_cfa_offset 12
 2071              		.cfi_offset 4, -12
 2072              		.cfi_offset 5, -8
 2073              		.cfi_offset 6, -4
 542:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 2074              		.loc 1 542 9 is_stmt 1 view .LVU563
 542:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 2075              		.loc 1 542 31 is_stmt 0 view .LVU564
 2076 0028 0949     		ldr	r1, .L129
 2077 002a 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 542:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 2078              		.loc 1 542 38 view .LVU565
 2079 002c 0124     		movs	r4, #1
 2080 002e 04FA02F6 		lsl	r6, r4, r2
 542:SYS/task_manager/task_manager.c ****         TskHdl_RdyMap.TskInGrp[grp_id].Flg &= ~(1 << tsk_id);
 2081              		.loc 1 542 31 view .LVU566
 2082 0032 25EA0605 		bic	r5, r5, r6
 2083 0036 0D70     		strb	r5, [r1]
 543:SYS/task_manager/task_manager.c ****         return NULL;
 2084              		.loc 1 543 9 is_stmt 1 view .LVU567
 543:SYS/task_manager/task_manager.c ****         return NULL;
ARM GAS  /tmp/ccUTxatF.s 			page 89


 2085              		.loc 1 543 44 is_stmt 0 view .LVU568
 2086 0038 0A44     		add	r2, r2, r1
 2087 003a 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 543:SYS/task_manager/task_manager.c ****         return NULL;
 2088              		.loc 1 543 51 view .LVU569
 2089 003c 04FA03F3 		lsl	r3, r4, r3
 543:SYS/task_manager/task_manager.c ****         return NULL;
 2090              		.loc 1 543 44 view .LVU570
 2091 0040 21EA0303 		bic	r3, r1, r3
 2092 0044 5370     		strb	r3, [r2, #1]
 544:SYS/task_manager/task_manager.c ****     }
 2093              		.loc 1 544 9 is_stmt 1 view .LVU571
 546:SYS/task_manager/task_manager.c **** 
 2094              		.loc 1 546 1 is_stmt 0 view .LVU572
 2095 0046 70BC     		pop	{r4, r5, r6}
 2096              	.LCFI32:
 2097              		.cfi_restore 6
 2098              		.cfi_restore 5
 2099              		.cfi_restore 4
 2100              		.cfi_def_cfa_offset 0
 2101 0048 7047     		bx	lr
 2102              	.LVL117:
 2103              	.L123:
 534:SYS/task_manager/task_manager.c **** 
 2104              		.loc 1 534 16 view .LVU573
 2105 004a 0020     		movs	r0, #0
 2106 004c 7047     		bx	lr
 2107              	.L130:
 2108 004e 00BF     		.align	2
 2109              	.L129:
 2110 0050 00000000 		.word	.LANCHOR0
 2111 0054 00000000 		.word	.LANCHOR12
 2112 0058 00000000 		.word	Task_Ptr
 2113              		.cfi_endproc
 2114              	.LFE149:
 2116              		.section	.text.Task_SetNextTask_Ptr,"ax",%progbits
 2117              		.align	1
 2118              		.global	Task_SetNextTask_Ptr
 2119              		.syntax unified
 2120              		.thumb
 2121              		.thumb_func
 2122              		.fpu fpv4-sp-d16
 2124              	Task_SetNextTask_Ptr:
 2125              	.LVL118:
 2126              	.LFB150:
 549:SYS/task_manager/task_manager.c ****     if (nxt != NULL)
 2127              		.loc 1 549 1 is_stmt 1 view -0
 2128              		.cfi_startproc
 2129              		@ args = 0, pretend = 0, frame = 0
 2130              		@ frame_needed = 0, uses_anonymous_args = 0
 2131              		@ link register save eliminated.
 550:SYS/task_manager/task_manager.c ****     {
 2132              		.loc 1 550 5 view .LVU575
 550:SYS/task_manager/task_manager.c ****     {
 2133              		.loc 1 550 8 is_stmt 0 view .LVU576
 2134 0000 38B1     		cbz	r0, .L131
 552:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
ARM GAS  /tmp/ccUTxatF.s 			page 90


 2135              		.loc 1 552 9 is_stmt 1 view .LVU577
 552:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
 2136              		.loc 1 552 23 is_stmt 0 view .LVU578
 2137 0002 044A     		ldr	r2, .L133
 2138 0004 1060     		str	r0, [r2]
 553:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2139              		.loc 1 553 9 is_stmt 1 view .LVU579
 553:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2140              		.loc 1 553 34 is_stmt 0 view .LVU580
 2141 0006 00F15001 		add	r1, r0, #80
 553:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2142              		.loc 1 553 32 view .LVU581
 2143 000a 034A     		ldr	r2, .L133+4
 2144 000c 1160     		str	r1, [r2]
 554:SYS/task_manager/task_manager.c ****     }
 2145              		.loc 1 554 9 is_stmt 1 view .LVU582
 554:SYS/task_manager/task_manager.c ****     }
 2146              		.loc 1 554 46 is_stmt 0 view .LVU583
 2147 000e 436D     		ldr	r3, [r0, #84]
 554:SYS/task_manager/task_manager.c ****     }
 2148              		.loc 1 554 26 view .LVU584
 2149 0010 5360     		str	r3, [r2, #4]
 2150              	.L131:
 556:SYS/task_manager/task_manager.c **** 
 2151              		.loc 1 556 1 view .LVU585
 2152 0012 7047     		bx	lr
 2153              	.L134:
 2154              		.align	2
 2155              	.L133:
 2156 0014 00000000 		.word	.LANCHOR9
 2157 0018 00000000 		.word	NxtTsk_TCB
 2158              		.cfi_endproc
 2159              	.LFE150:
 2161              		.section	.text.Task_TriggerPendSV,"ax",%progbits
 2162              		.align	1
 2163              		.global	Task_TriggerPendSV
 2164              		.syntax unified
 2165              		.thumb
 2166              		.thumb_func
 2167              		.fpu fpv4-sp-d16
 2169              	Task_TriggerPendSV:
 2170              	.LFB152:
 584:SYS/task_manager/task_manager.c ****     __ASM(".equ NVIC_INT_CTRL, 0xE000ED04");
 2171              		.loc 1 584 1 is_stmt 1 view -0
 2172              		.cfi_startproc
 2173              		@ Naked Function: prologue and epilogue provided by programmer.
 2174              		@ args = 0, pretend = 0, frame = 0
 2175              		@ frame_needed = 0, uses_anonymous_args = 0
 585:SYS/task_manager/task_manager.c ****     __ASM(".equ NVIC_PENDSVSET, 0x10000000");
 2176              		.loc 1 585 5 view .LVU587
 2177              		.syntax unified
 2178              	@ 585 "SYS/task_manager/task_manager.c" 1
 2179              		.equ NVIC_INT_CTRL, 0xE000ED04
 2180              	@ 0 "" 2
 586:SYS/task_manager/task_manager.c **** 
 2181              		.loc 1 586 5 view .LVU588
 2182              	@ 586 "SYS/task_manager/task_manager.c" 1
ARM GAS  /tmp/ccUTxatF.s 			page 91


 2183              		.equ NVIC_PENDSVSET, 0x10000000
 2184              	@ 0 "" 2
 588:SYS/task_manager/task_manager.c ****     __ASM("LDR      R1, =NVIC_PENDSVSET");
 2185              		.loc 1 588 5 view .LVU589
 2186              	@ 588 "SYS/task_manager/task_manager.c" 1
 2187 0000 0248     		LDR      R0, =NVIC_INT_CTRL
 2188              	@ 0 "" 2
 589:SYS/task_manager/task_manager.c ****     __ASM("STR      R1, [R0]");
 2189              		.loc 1 589 5 view .LVU590
 2190              	@ 589 "SYS/task_manager/task_manager.c" 1
 2191 0002 4FF08051 		LDR      R1, =NVIC_PENDSVSET
 2192              	@ 0 "" 2
 590:SYS/task_manager/task_manager.c ****     __ASM("BX       LR");
 2193              		.loc 1 590 5 view .LVU591
 2194              	@ 590 "SYS/task_manager/task_manager.c" 1
 2195 0006 0160     		STR      R1, [R0]
 2196              	@ 0 "" 2
 591:SYS/task_manager/task_manager.c **** }
 2197              		.loc 1 591 5 view .LVU592
 2198              	@ 591 "SYS/task_manager/task_manager.c" 1
 2199 0008 7047     		BX       LR
 2200              	@ 0 "" 2
 592:SYS/task_manager/task_manager.c **** 
 2201              		.loc 1 592 1 is_stmt 0 view .LVU593
 2202              		.thumb
 2203              		.syntax unified
 2204              		.cfi_endproc
 2205              	.LFE152:
 2207 000a 0000     		.section	.text.Task_Scheduler,"ax",%progbits
 2208              		.align	1
 2209              		.global	Task_Scheduler
 2210              		.syntax unified
 2211              		.thumb
 2212              		.thumb_func
 2213              		.fpu fpv4-sp-d16
 2215              	Task_Scheduler:
 2216              	.LFB168:
 942:SYS/task_manager/task_manager.c **** 
 943:SYS/task_manager/task_manager.c **** void Task_Scheduler(void)
 944:SYS/task_manager/task_manager.c **** {
 2217              		.loc 1 944 1 is_stmt 1 view -0
 2218              		.cfi_startproc
 2219              		@ args = 0, pretend = 0, frame = 0
 2220              		@ frame_needed = 0, uses_anonymous_args = 0
 945:SYS/task_manager/task_manager.c ****     static uint8_t grp = 0;
 2221              		.loc 1 945 5 view .LVU595
 946:SYS/task_manager/task_manager.c ****     static uint8_t tsk = 0;
 2222              		.loc 1 946 5 view .LVU596
 947:SYS/task_manager/task_manager.c **** 
 948:SYS/task_manager/task_manager.c ****     if (TskSys_state != TaskSys_Start)
 2223              		.loc 1 948 5 view .LVU597
 2224              		.loc 1 948 22 is_stmt 0 view .LVU598
 2225 0000 514B     		ldr	r3, .L159
 2226 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2227 0004 DBB2     		uxtb	r3, r3
 2228              		.loc 1 948 8 view .LVU599
 2229 0006 022B     		cmp	r3, #2
ARM GAS  /tmp/ccUTxatF.s 			page 92


 2230 0008 40F09D80 		bne	.L150
 944:SYS/task_manager/task_manager.c ****     static uint8_t grp = 0;
 2231              		.loc 1 944 1 view .LVU600
 2232 000c 70B5     		push	{r4, r5, r6, lr}
 2233              	.LCFI33:
 2234              		.cfi_def_cfa_offset 16
 2235              		.cfi_offset 4, -16
 2236              		.cfi_offset 5, -12
 2237              		.cfi_offset 6, -8
 2238              		.cfi_offset 14, -4
 949:SYS/task_manager/task_manager.c ****         return;
 950:SYS/task_manager/task_manager.c **** 
 951:SYS/task_manager/task_manager.c ****     if (traverse_start)
 2239              		.loc 1 951 5 is_stmt 1 view .LVU601
 2240              		.loc 1 951 9 is_stmt 0 view .LVU602
 2241 000e 4F4B     		ldr	r3, .L159+4
 2242 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2243              		.loc 1 951 8 view .LVU603
 2244 0012 BBB9     		cbnz	r3, .L153
 2245              	.L138:
 952:SYS/task_manager/task_manager.c ****         List_traverse(&TskCrt_RegList.list, Task_CrtList_TraversePoll_callback, NULL, sub_callback)
 953:SYS/task_manager/task_manager.c **** 
 954:SYS/task_manager/task_manager.c ****     NxtRunTsk_Ptr = Task_Get_HighestRank_RdyTask();
 2246              		.loc 1 954 5 is_stmt 1 view .LVU604
 2247              		.loc 1 954 21 is_stmt 0 view .LVU605
 2248 0014 FFF7FEFF 		bl	Task_Get_HighestRank_RdyTask
 2249              	.LVL119:
 2250              		.loc 1 954 19 view .LVU606
 2251 0018 4D4B     		ldr	r3, .L159+8
 2252 001a 1860     		str	r0, [r3]
 955:SYS/task_manager/task_manager.c **** 
 956:SYS/task_manager/task_manager.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 957:SYS/task_manager/task_manager.c **** 
 958:SYS/task_manager/task_manager.c ****     PndHstTsk_Ptr = Task_Get_HighestRank_PndTask();
 2253              		.loc 1 958 5 is_stmt 1 view .LVU607
 2254              		.loc 1 958 21 is_stmt 0 view .LVU608
 2255 001c FFF7FEFF 		bl	Task_Get_HighestRank_PndTask
 2256              	.LVL120:
 2257 0020 0546     		mov	r5, r0
 2258              		.loc 1 958 19 view .LVU609
 2259 0022 4C4B     		ldr	r3, .L159+12
 2260 0024 1860     		str	r0, [r3]
 959:SYS/task_manager/task_manager.c **** 
 960:SYS/task_manager/task_manager.c ****     if (CurRunTsk_Ptr == NULL)
 2261              		.loc 1 960 5 is_stmt 1 view .LVU610
 2262              		.loc 1 960 23 is_stmt 0 view .LVU611
 2263 0026 4C4B     		ldr	r3, .L159+16
 2264 0028 1C68     		ldr	r4, [r3]
 2265              		.loc 1 960 8 view .LVU612
 2266 002a 94B1     		cbz	r4, .L154
 961:SYS/task_manager/task_manager.c ****     {
 962:SYS/task_manager/task_manager.c ****         if (PndHstTsk_Ptr == NULL)
 963:SYS/task_manager/task_manager.c ****         {
 964:SYS/task_manager/task_manager.c ****             //Current Run task Pointer is Null also no task In pending mode
 965:SYS/task_manager/task_manager.c ****             //set CurRunTsk_Ptr to NxtRunTsk_Ptr
 966:SYS/task_manager/task_manager.c ****             if (NxtRunTsk_Ptr != NULL)
 967:SYS/task_manager/task_manager.c ****             {
ARM GAS  /tmp/ccUTxatF.s 			page 93


 968:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
 969:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 970:SYS/task_manager/task_manager.c **** 
 971:SYS/task_manager/task_manager.c ****                 Task_TriggerPendSV();
 972:SYS/task_manager/task_manager.c ****                 return;
 973:SYS/task_manager/task_manager.c ****             }
 974:SYS/task_manager/task_manager.c ****             else
 975:SYS/task_manager/task_manager.c ****             {
 976:SYS/task_manager/task_manager.c ****                 //doing idle function
 977:SYS/task_manager/task_manager.c ****                 Task_Idle();
 978:SYS/task_manager/task_manager.c ****             }
 979:SYS/task_manager/task_manager.c ****         }
 980:SYS/task_manager/task_manager.c ****         else
 981:SYS/task_manager/task_manager.c ****         {
 982:SYS/task_manager/task_manager.c ****             if (NxtRunTsk_Ptr != NULL)
 983:SYS/task_manager/task_manager.c ****             {
 984:SYS/task_manager/task_manager.c ****                 //if has NxtRunTsk_Ptr is not NULL also have task in pending state
 985:SYS/task_manager/task_manager.c ****                 //then get the highest priority task in pend list
 986:SYS/task_manager/task_manager.c ****                 //compare with NxtRunTsk_Ptr
 987:SYS/task_manager/task_manager.c ****                 if (((NxtRunTsk_Ptr != PndHstTsk_Ptr) &&
 988:SYS/task_manager/task_manager.c ****                      (Task_PriorityCompare(NxtRunTsk_Ptr, PndHstTsk_Ptr) == PndHstTsk_Ptr)) ||
 989:SYS/task_manager/task_manager.c ****                     (NxtRunTsk_Ptr == PndHstTsk_Ptr))
 990:SYS/task_manager/task_manager.c ****                 {
 991:SYS/task_manager/task_manager.c ****                     Task_ClearPending(PndHstTsk_Ptr);
 992:SYS/task_manager/task_manager.c ****                     PndHstTsk_Ptr->Exec_status.State = Task_Stop;
 993:SYS/task_manager/task_manager.c ****                     NxtRunTsk_Ptr = PndHstTsk_Ptr;
 994:SYS/task_manager/task_manager.c ****                 }
 995:SYS/task_manager/task_manager.c ****             }
 996:SYS/task_manager/task_manager.c ****             else
 997:SYS/task_manager/task_manager.c ****             {
 998:SYS/task_manager/task_manager.c ****                 //if NxtRunTsk_Ptr is NULL
 999:SYS/task_manager/task_manager.c ****                 //then set NxtRunTsk_Ptr PndHstTsk_Ptr
1000:SYS/task_manager/task_manager.c ****                 NxtRunTsk_Ptr = PndHstTsk_Ptr;
1001:SYS/task_manager/task_manager.c ****             }
1002:SYS/task_manager/task_manager.c **** 
1003:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
1004:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
1005:SYS/task_manager/task_manager.c **** 
1006:SYS/task_manager/task_manager.c ****             Task_TriggerPendSV();
1007:SYS/task_manager/task_manager.c ****             return;
1008:SYS/task_manager/task_manager.c ****         }
1009:SYS/task_manager/task_manager.c ****     }
1010:SYS/task_manager/task_manager.c ****     else
1011:SYS/task_manager/task_manager.c ****     {
1012:SYS/task_manager/task_manager.c ****         if (CurRunTsk_Ptr != NxtRunTsk_Ptr)
 2267              		.loc 1 1012 9 is_stmt 1 view .LVU613
 2268              		.loc 1 1012 27 is_stmt 0 view .LVU614
 2269 002c 484B     		ldr	r3, .L159+8
 2270 002e 1E68     		ldr	r6, [r3]
 2271              		.loc 1 1012 12 view .LVU615
 2272 0030 B442     		cmp	r4, r6
 2273 0032 6BD0     		beq	.L146
1013:SYS/task_manager/task_manager.c ****         {
1014:SYS/task_manager/task_manager.c ****             if ((NxtRunTsk_Ptr != NULL) && (Task_PriorityCompare(CurRunTsk_Ptr, NxtRunTsk_Ptr) == N
 2274              		.loc 1 1014 13 is_stmt 1 view .LVU616
 2275              		.loc 1 1014 16 is_stmt 0 view .LVU617
 2276 0034 2EB1     		cbz	r6, .L136
ARM GAS  /tmp/ccUTxatF.s 			page 94


 2277              		.loc 1 1014 45 discriminator 1 view .LVU618
 2278 0036 3146     		mov	r1, r6
 2279 0038 2046     		mov	r0, r4
 2280 003a FFF7FEFF 		bl	Task_PriorityCompare
 2281              	.LVL121:
 2282              		.loc 1 1014 41 discriminator 1 view .LVU619
 2283 003e 8642     		cmp	r6, r0
 2284 0040 3DD0     		beq	.L155
 2285              	.L136:
1015:SYS/task_manager/task_manager.c ****             {
1016:SYS/task_manager/task_manager.c ****                 //if NxtRunTsk_Ptr group priority is higher then CurRunTsk_Ptr also PndHstTsk_Ptr
1017:SYS/task_manager/task_manager.c ****                 //set current run task as pending state first
1018:SYS/task_manager/task_manager.c ****                 Task_ClearReady(CurRunTsk_Ptr);
1019:SYS/task_manager/task_manager.c ****                 Task_SetPending(CurRunTsk_Ptr);
1020:SYS/task_manager/task_manager.c **** 
1021:SYS/task_manager/task_manager.c ****                 //get the highset priority task in pending list
1022:SYS/task_manager/task_manager.c ****                 //if PndHstTsk_Ptr is not NULL
1023:SYS/task_manager/task_manager.c ****                 //then compare the priority between the NxtRunTsk_Ptr and PndHstTsk_Ptr
1024:SYS/task_manager/task_manager.c ****                 if (PndHstTsk_Ptr != NULL)
1025:SYS/task_manager/task_manager.c ****                 {
1026:SYS/task_manager/task_manager.c ****                     if (Task_PriorityCompare(PndHstTsk_Ptr, NxtRunTsk_Ptr) == PndHstTsk_Ptr)
1027:SYS/task_manager/task_manager.c ****                     {
1028:SYS/task_manager/task_manager.c ****                         Task_ClearPending(PndHstTsk_Ptr);
1029:SYS/task_manager/task_manager.c ****                         PndHstTsk_Ptr->Exec_status.State = Task_Stop;
1030:SYS/task_manager/task_manager.c ****                         NxtRunTsk_Ptr = PndHstTsk_Ptr;
1031:SYS/task_manager/task_manager.c ****                     }
1032:SYS/task_manager/task_manager.c ****                 }
1033:SYS/task_manager/task_manager.c **** 
1034:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
1035:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
1036:SYS/task_manager/task_manager.c **** 
1037:SYS/task_manager/task_manager.c ****                 Task_TriggerPendSV();
1038:SYS/task_manager/task_manager.c ****                 return;
1039:SYS/task_manager/task_manager.c ****             }
1040:SYS/task_manager/task_manager.c ****         }
1041:SYS/task_manager/task_manager.c ****         else
1042:SYS/task_manager/task_manager.c ****         {
1043:SYS/task_manager/task_manager.c ****             //compare with the highest priority pending task
1044:SYS/task_manager/task_manager.c ****             if ((PndHstTsk_Ptr != NULL) && (Task_PriorityCompare(CurRunTsk_Ptr, PndHstTsk_Ptr) == P
1045:SYS/task_manager/task_manager.c ****             {
1046:SYS/task_manager/task_manager.c ****                 //if PndHstTsk_Ptr group priority is higher then CurRunTsk_Ptr
1047:SYS/task_manager/task_manager.c ****                 //set current run task as pending state first
1048:SYS/task_manager/task_manager.c ****                 Task_SetPending(CurRunTsk_Ptr);
1049:SYS/task_manager/task_manager.c ****                 Task_SetReady(PndHstTsk_Ptr);
1050:SYS/task_manager/task_manager.c ****                 NxtRunTsk_Ptr = Task_Stop;
1051:SYS/task_manager/task_manager.c **** 
1052:SYS/task_manager/task_manager.c ****                 NxtRunTsk_Ptr = PndHstTsk_Ptr;
1053:SYS/task_manager/task_manager.c ****             }
1054:SYS/task_manager/task_manager.c **** 
1055:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Top_Stk_Ptr = &NxtRunTsk_Ptr->TCB.Top_Stk_Ptr;
1056:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
1057:SYS/task_manager/task_manager.c **** 
1058:SYS/task_manager/task_manager.c ****             Task_TriggerPendSV();
1059:SYS/task_manager/task_manager.c ****             return;
1060:SYS/task_manager/task_manager.c ****         }
1061:SYS/task_manager/task_manager.c ****     }
1062:SYS/task_manager/task_manager.c **** #else
ARM GAS  /tmp/ccUTxatF.s 			page 95


1063:SYS/task_manager/task_manager.c ****     Task_TriggerPendSV();
1064:SYS/task_manager/task_manager.c **** #endif
1065:SYS/task_manager/task_manager.c **** }
 2286              		.loc 1 1065 1 view .LVU620
 2287 0042 70BD     		pop	{r4, r5, r6, pc}
 2288              	.L153:
 952:SYS/task_manager/task_manager.c **** 
 2289              		.loc 1 952 9 is_stmt 1 view .LVU621
 2290 0044 0123     		movs	r3, #1
 2291 0046 0022     		movs	r2, #0
 2292 0048 4449     		ldr	r1, .L159+20
 2293 004a 4548     		ldr	r0, .L159+24
 2294 004c FFF7FEFF 		bl	List_traverse
 2295              	.LVL122:
 2296 0050 E0E7     		b	.L138
 2297              	.L154:
 962:SYS/task_manager/task_manager.c ****         {
 2298              		.loc 1 962 9 view .LVU622
 962:SYS/task_manager/task_manager.c ****         {
 2299              		.loc 1 962 12 is_stmt 0 view .LVU623
 2300 0052 B8B1     		cbz	r0, .L156
 982:SYS/task_manager/task_manager.c ****             {
 2301              		.loc 1 982 13 is_stmt 1 view .LVU624
 982:SYS/task_manager/task_manager.c ****             {
 2302              		.loc 1 982 31 is_stmt 0 view .LVU625
 2303 0054 3E4B     		ldr	r3, .L159+8
 2304 0056 1C68     		ldr	r4, [r3]
 982:SYS/task_manager/task_manager.c ****             {
 2305              		.loc 1 982 16 view .LVU626
 2306 0058 74B3     		cbz	r4, .L142
 987:SYS/task_manager/task_manager.c ****                      (Task_PriorityCompare(NxtRunTsk_Ptr, PndHstTsk_Ptr) == PndHstTsk_Ptr)) ||
 2307              		.loc 1 987 17 is_stmt 1 view .LVU627
 987:SYS/task_manager/task_manager.c ****                      (Task_PriorityCompare(NxtRunTsk_Ptr, PndHstTsk_Ptr) == PndHstTsk_Ptr)) ||
 2308              		.loc 1 987 20 is_stmt 0 view .LVU628
 2309 005a A042     		cmp	r0, r4
 2310 005c 05D0     		beq	.L143
 988:SYS/task_manager/task_manager.c ****                     (NxtRunTsk_Ptr == PndHstTsk_Ptr))
 2311              		.loc 1 988 23 discriminator 1 view .LVU629
 2312 005e 0146     		mov	r1, r0
 2313 0060 2046     		mov	r0, r4
 2314 0062 FFF7FEFF 		bl	Task_PriorityCompare
 2315              	.LVL123:
 987:SYS/task_manager/task_manager.c ****                      (Task_PriorityCompare(NxtRunTsk_Ptr, PndHstTsk_Ptr) == PndHstTsk_Ptr)) ||
 2316              		.loc 1 987 55 discriminator 1 view .LVU630
 2317 0066 8542     		cmp	r5, r0
 2318 0068 1BD0     		beq	.L144
 2319              	.L143:
 988:SYS/task_manager/task_manager.c ****                     (NxtRunTsk_Ptr == PndHstTsk_Ptr))
 2320              		.loc 1 988 93 view .LVU631
 2321 006a A542     		cmp	r5, r4
 2322 006c 19D0     		beq	.L144
 2323              	.L145:
1003:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2324              		.loc 1 1003 13 is_stmt 1 view .LVU632
1003:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2325              		.loc 1 1003 52 is_stmt 0 view .LVU633
 2326 006e 384B     		ldr	r3, .L159+8
ARM GAS  /tmp/ccUTxatF.s 			page 96


 2327 0070 1A68     		ldr	r2, [r3]
1003:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2328              		.loc 1 1003 38 view .LVU634
 2329 0072 02F15001 		add	r1, r2, #80
1003:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2330              		.loc 1 1003 36 view .LVU635
 2331 0076 3B4B     		ldr	r3, .L159+28
 2332 0078 1960     		str	r1, [r3]
1004:SYS/task_manager/task_manager.c **** 
 2333              		.loc 1 1004 13 is_stmt 1 view .LVU636
1004:SYS/task_manager/task_manager.c **** 
 2334              		.loc 1 1004 50 is_stmt 0 view .LVU637
 2335 007a 526D     		ldr	r2, [r2, #84]
1004:SYS/task_manager/task_manager.c **** 
 2336              		.loc 1 1004 30 view .LVU638
 2337 007c 5A60     		str	r2, [r3, #4]
1006:SYS/task_manager/task_manager.c ****             return;
 2338              		.loc 1 1006 13 is_stmt 1 view .LVU639
 2339 007e FFF7FEFF 		bl	Task_TriggerPendSV
 2340              	.LVL124:
1007:SYS/task_manager/task_manager.c ****         }
 2341              		.loc 1 1007 13 view .LVU640
 2342 0082 DEE7     		b	.L136
 2343              	.L156:
 966:SYS/task_manager/task_manager.c ****             {
 2344              		.loc 1 966 13 view .LVU641
 966:SYS/task_manager/task_manager.c ****             {
 2345              		.loc 1 966 31 is_stmt 0 view .LVU642
 2346 0084 324B     		ldr	r3, .L159+8
 2347 0086 1B68     		ldr	r3, [r3]
 966:SYS/task_manager/task_manager.c ****             {
 2348              		.loc 1 966 16 view .LVU643
 2349 0088 43B1     		cbz	r3, .L141
 968:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2350              		.loc 1 968 17 is_stmt 1 view .LVU644
 968:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2351              		.loc 1 968 42 is_stmt 0 view .LVU645
 2352 008a 03F15001 		add	r1, r3, #80
 968:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2353              		.loc 1 968 40 view .LVU646
 2354 008e 354A     		ldr	r2, .L159+28
 2355 0090 1160     		str	r1, [r2]
 969:SYS/task_manager/task_manager.c **** 
 2356              		.loc 1 969 17 is_stmt 1 view .LVU647
 969:SYS/task_manager/task_manager.c **** 
 2357              		.loc 1 969 54 is_stmt 0 view .LVU648
 2358 0092 5B6D     		ldr	r3, [r3, #84]
 969:SYS/task_manager/task_manager.c **** 
 2359              		.loc 1 969 34 view .LVU649
 2360 0094 5360     		str	r3, [r2, #4]
 971:SYS/task_manager/task_manager.c ****                 return;
 2361              		.loc 1 971 17 is_stmt 1 view .LVU650
 2362 0096 FFF7FEFF 		bl	Task_TriggerPendSV
 2363              	.LVL125:
 972:SYS/task_manager/task_manager.c ****             }
 2364              		.loc 1 972 17 view .LVU651
 2365 009a D2E7     		b	.L136
ARM GAS  /tmp/ccUTxatF.s 			page 97


 2366              	.L141:
 977:SYS/task_manager/task_manager.c ****             }
 2367              		.loc 1 977 17 view .LVU652
 2368 009c FFF7FEFF 		bl	Task_Idle
 2369              	.LVL126:
 2370 00a0 CFE7     		b	.L136
 2371              	.L144:
 991:SYS/task_manager/task_manager.c ****                     PndHstTsk_Ptr->Exec_status.State = Task_Stop;
 2372              		.loc 1 991 21 view .LVU653
 2373 00a2 2846     		mov	r0, r5
 2374 00a4 FFF7FEFF 		bl	Task_ClearPending
 2375              	.LVL127:
 992:SYS/task_manager/task_manager.c ****                     NxtRunTsk_Ptr = PndHstTsk_Ptr;
 2376              		.loc 1 992 21 view .LVU654
 992:SYS/task_manager/task_manager.c ****                     NxtRunTsk_Ptr = PndHstTsk_Ptr;
 2377              		.loc 1 992 34 is_stmt 0 view .LVU655
 2378 00a8 2A4B     		ldr	r3, .L159+12
 2379 00aa 1B68     		ldr	r3, [r3]
 992:SYS/task_manager/task_manager.c ****                     NxtRunTsk_Ptr = PndHstTsk_Ptr;
 2380              		.loc 1 992 54 view .LVU656
 2381 00ac 0222     		movs	r2, #2
 2382 00ae 83F84820 		strb	r2, [r3, #72]
 993:SYS/task_manager/task_manager.c ****                 }
 2383              		.loc 1 993 21 is_stmt 1 view .LVU657
 993:SYS/task_manager/task_manager.c ****                 }
 2384              		.loc 1 993 35 is_stmt 0 view .LVU658
 2385 00b2 274A     		ldr	r2, .L159+8
 2386 00b4 1360     		str	r3, [r2]
 2387 00b6 DAE7     		b	.L145
 2388              	.L142:
1000:SYS/task_manager/task_manager.c ****             }
 2389              		.loc 1 1000 17 is_stmt 1 view .LVU659
1000:SYS/task_manager/task_manager.c ****             }
 2390              		.loc 1 1000 31 is_stmt 0 view .LVU660
 2391 00b8 254B     		ldr	r3, .L159+8
 2392 00ba 1860     		str	r0, [r3]
 2393 00bc D7E7     		b	.L145
 2394              	.L155:
1018:SYS/task_manager/task_manager.c ****                 Task_SetPending(CurRunTsk_Ptr);
 2395              		.loc 1 1018 17 is_stmt 1 view .LVU661
 2396 00be 2046     		mov	r0, r4
 2397 00c0 FFF7FEFF 		bl	Task_ClearReady
 2398              	.LVL128:
1019:SYS/task_manager/task_manager.c **** 
 2399              		.loc 1 1019 17 view .LVU662
 2400 00c4 244B     		ldr	r3, .L159+16
 2401 00c6 1868     		ldr	r0, [r3]
 2402 00c8 FFF7FEFF 		bl	Task_SetPending
 2403              	.LVL129:
1024:SYS/task_manager/task_manager.c ****                 {
 2404              		.loc 1 1024 17 view .LVU663
1024:SYS/task_manager/task_manager.c ****                 {
 2405              		.loc 1 1024 35 is_stmt 0 view .LVU664
 2406 00cc 214B     		ldr	r3, .L159+12
 2407 00ce 1C68     		ldr	r4, [r3]
1024:SYS/task_manager/task_manager.c ****                 {
 2408              		.loc 1 1024 20 view .LVU665
ARM GAS  /tmp/ccUTxatF.s 			page 98


 2409 00d0 34B1     		cbz	r4, .L147
1026:SYS/task_manager/task_manager.c ****                     {
 2410              		.loc 1 1026 21 is_stmt 1 view .LVU666
1026:SYS/task_manager/task_manager.c ****                     {
 2411              		.loc 1 1026 25 is_stmt 0 view .LVU667
 2412 00d2 1F4B     		ldr	r3, .L159+8
 2413 00d4 1968     		ldr	r1, [r3]
 2414 00d6 2046     		mov	r0, r4
 2415 00d8 FFF7FEFF 		bl	Task_PriorityCompare
 2416              	.LVL130:
1026:SYS/task_manager/task_manager.c ****                     {
 2417              		.loc 1 1026 24 view .LVU668
 2418 00dc 8442     		cmp	r4, r0
 2419 00de 0AD0     		beq	.L157
 2420              	.L147:
1034:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2421              		.loc 1 1034 17 is_stmt 1 view .LVU669
1034:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2422              		.loc 1 1034 56 is_stmt 0 view .LVU670
 2423 00e0 1B4B     		ldr	r3, .L159+8
 2424 00e2 1A68     		ldr	r2, [r3]
1034:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2425              		.loc 1 1034 42 view .LVU671
 2426 00e4 02F15001 		add	r1, r2, #80
1034:SYS/task_manager/task_manager.c ****                 NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2427              		.loc 1 1034 40 view .LVU672
 2428 00e8 1E4B     		ldr	r3, .L159+28
 2429 00ea 1960     		str	r1, [r3]
1035:SYS/task_manager/task_manager.c **** 
 2430              		.loc 1 1035 17 is_stmt 1 view .LVU673
1035:SYS/task_manager/task_manager.c **** 
 2431              		.loc 1 1035 54 is_stmt 0 view .LVU674
 2432 00ec 526D     		ldr	r2, [r2, #84]
1035:SYS/task_manager/task_manager.c **** 
 2433              		.loc 1 1035 34 view .LVU675
 2434 00ee 5A60     		str	r2, [r3, #4]
1037:SYS/task_manager/task_manager.c ****                 return;
 2435              		.loc 1 1037 17 is_stmt 1 view .LVU676
 2436 00f0 FFF7FEFF 		bl	Task_TriggerPendSV
 2437              	.LVL131:
1038:SYS/task_manager/task_manager.c ****             }
 2438              		.loc 1 1038 17 view .LVU677
 2439 00f4 A5E7     		b	.L136
 2440              	.L157:
1028:SYS/task_manager/task_manager.c ****                         PndHstTsk_Ptr->Exec_status.State = Task_Stop;
 2441              		.loc 1 1028 25 view .LVU678
 2442 00f6 2046     		mov	r0, r4
 2443 00f8 FFF7FEFF 		bl	Task_ClearPending
 2444              	.LVL132:
1029:SYS/task_manager/task_manager.c ****                         NxtRunTsk_Ptr = PndHstTsk_Ptr;
 2445              		.loc 1 1029 25 view .LVU679
1029:SYS/task_manager/task_manager.c ****                         NxtRunTsk_Ptr = PndHstTsk_Ptr;
 2446              		.loc 1 1029 38 is_stmt 0 view .LVU680
 2447 00fc 154B     		ldr	r3, .L159+12
 2448 00fe 1B68     		ldr	r3, [r3]
1029:SYS/task_manager/task_manager.c ****                         NxtRunTsk_Ptr = PndHstTsk_Ptr;
 2449              		.loc 1 1029 58 view .LVU681
ARM GAS  /tmp/ccUTxatF.s 			page 99


 2450 0100 0222     		movs	r2, #2
 2451 0102 83F84820 		strb	r2, [r3, #72]
1030:SYS/task_manager/task_manager.c ****                     }
 2452              		.loc 1 1030 25 is_stmt 1 view .LVU682
1030:SYS/task_manager/task_manager.c ****                     }
 2453              		.loc 1 1030 39 is_stmt 0 view .LVU683
 2454 0106 124A     		ldr	r2, .L159+8
 2455 0108 1360     		str	r3, [r2]
 2456 010a E9E7     		b	.L147
 2457              	.L146:
1044:SYS/task_manager/task_manager.c ****             {
 2458              		.loc 1 1044 13 is_stmt 1 view .LVU684
1044:SYS/task_manager/task_manager.c ****             {
 2459              		.loc 1 1044 16 is_stmt 0 view .LVU685
 2460 010c 28B1     		cbz	r0, .L148
1044:SYS/task_manager/task_manager.c ****             {
 2461              		.loc 1 1044 45 discriminator 1 view .LVU686
 2462 010e 0146     		mov	r1, r0
 2463 0110 2046     		mov	r0, r4
 2464 0112 FFF7FEFF 		bl	Task_PriorityCompare
 2465              	.LVL133:
1044:SYS/task_manager/task_manager.c ****             {
 2466              		.loc 1 1044 41 discriminator 1 view .LVU687
 2467 0116 8542     		cmp	r5, r0
 2468 0118 0AD0     		beq	.L158
 2469              	.L148:
1055:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2470              		.loc 1 1055 13 is_stmt 1 view .LVU688
1055:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2471              		.loc 1 1055 52 is_stmt 0 view .LVU689
 2472 011a 0D4B     		ldr	r3, .L159+8
 2473 011c 1A68     		ldr	r2, [r3]
1055:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2474              		.loc 1 1055 38 view .LVU690
 2475 011e 02F15001 		add	r1, r2, #80
1055:SYS/task_manager/task_manager.c ****             NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 2476              		.loc 1 1055 36 view .LVU691
 2477 0122 104B     		ldr	r3, .L159+28
 2478 0124 1960     		str	r1, [r3]
1056:SYS/task_manager/task_manager.c **** 
 2479              		.loc 1 1056 13 is_stmt 1 view .LVU692
1056:SYS/task_manager/task_manager.c **** 
 2480              		.loc 1 1056 50 is_stmt 0 view .LVU693
 2481 0126 526D     		ldr	r2, [r2, #84]
1056:SYS/task_manager/task_manager.c **** 
 2482              		.loc 1 1056 30 view .LVU694
 2483 0128 5A60     		str	r2, [r3, #4]
1058:SYS/task_manager/task_manager.c ****             return;
 2484              		.loc 1 1058 13 is_stmt 1 view .LVU695
 2485 012a FFF7FEFF 		bl	Task_TriggerPendSV
 2486              	.LVL134:
1059:SYS/task_manager/task_manager.c ****         }
 2487              		.loc 1 1059 13 view .LVU696
 2488 012e 88E7     		b	.L136
 2489              	.L158:
1048:SYS/task_manager/task_manager.c ****                 Task_SetReady(PndHstTsk_Ptr);
 2490              		.loc 1 1048 17 view .LVU697
ARM GAS  /tmp/ccUTxatF.s 			page 100


 2491 0130 2046     		mov	r0, r4
 2492 0132 FFF7FEFF 		bl	Task_SetPending
 2493              	.LVL135:
1049:SYS/task_manager/task_manager.c ****                 NxtRunTsk_Ptr = Task_Stop;
 2494              		.loc 1 1049 17 view .LVU698
 2495 0136 074C     		ldr	r4, .L159+12
 2496 0138 2068     		ldr	r0, [r4]
 2497 013a FFF7FEFF 		bl	Task_SetReady
 2498              	.LVL136:
1050:SYS/task_manager/task_manager.c **** 
 2499              		.loc 1 1050 17 view .LVU699
1052:SYS/task_manager/task_manager.c ****             }
 2500              		.loc 1 1052 17 view .LVU700
1052:SYS/task_manager/task_manager.c ****             }
 2501              		.loc 1 1052 31 is_stmt 0 view .LVU701
 2502 013e 2268     		ldr	r2, [r4]
 2503 0140 034B     		ldr	r3, .L159+8
 2504 0142 1A60     		str	r2, [r3]
 2505 0144 E9E7     		b	.L148
 2506              	.L150:
 2507              	.LCFI34:
 2508              		.cfi_def_cfa_offset 0
 2509              		.cfi_restore 4
 2510              		.cfi_restore 5
 2511              		.cfi_restore 6
 2512              		.cfi_restore 14
 2513 0146 7047     		bx	lr
 2514              	.L160:
 2515              		.align	2
 2516              	.L159:
 2517 0148 00000000 		.word	.LANCHOR5
 2518 014c 00000000 		.word	.LANCHOR11
 2519 0150 00000000 		.word	.LANCHOR9
 2520 0154 00000000 		.word	.LANCHOR13
 2521 0158 00000000 		.word	.LANCHOR4
 2522 015c 00000000 		.word	Task_CrtList_TraversePoll_callback
 2523 0160 04000000 		.word	.LANCHOR3+4
 2524 0164 00000000 		.word	NxtTsk_TCB
 2525              		.cfi_endproc
 2526              	.LFE168:
 2528              		.section	.text.Task_Force_TriggerPendSV,"ax",%progbits
 2529              		.align	1
 2530              		.global	Task_Force_TriggerPendSV
 2531              		.syntax unified
 2532              		.thumb
 2533              		.thumb_func
 2534              		.fpu fpv4-sp-d16
 2536              	Task_Force_TriggerPendSV:
 2537              	.LFB153:
 595:SYS/task_manager/task_manager.c ****     /* Barriers are normally not required but do ensure the code is completely \
 2538              		.loc 1 595 1 is_stmt 1 view -0
 2539              		.cfi_startproc
 2540              		@ args = 0, pretend = 0, frame = 0
 2541              		@ frame_needed = 0, uses_anonymous_args = 0
 2542 0000 08B5     		push	{r3, lr}
 2543              	.LCFI35:
 2544              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccUTxatF.s 			page 101


 2545              		.cfi_offset 3, -8
 2546              		.cfi_offset 14, -4
 598:SYS/task_manager/task_manager.c ****                        : "memory");
 2547              		.loc 1 598 5 view .LVU703
 2548              		.syntax unified
 2549              	@ 598 "SYS/task_manager/task_manager.c" 1
 2550 0002 BFF34F8F 		dsb
 2551              	@ 0 "" 2
 600:SYS/task_manager/task_manager.c ****     Task_TriggerPendSV();
 2552              		.loc 1 600 5 view .LVU704
 2553              	@ 600 "SYS/task_manager/task_manager.c" 1
 2554 0006 BFF36F8F 		isb
 2555              	@ 0 "" 2
 601:SYS/task_manager/task_manager.c **** }
 2556              		.loc 1 601 5 view .LVU705
 2557              		.thumb
 2558              		.syntax unified
 2559 000a FFF7FEFF 		bl	Task_TriggerPendSV
 2560              	.LVL137:
 602:SYS/task_manager/task_manager.c **** 
 2561              		.loc 1 602 1 is_stmt 0 view .LVU706
 2562 000e 08BD     		pop	{r3, pc}
 2563              		.cfi_endproc
 2564              	.LFE153:
 2566              		.section	.text.Task_Get_TaskNum,"ax",%progbits
 2567              		.align	1
 2568              		.global	Task_Get_TaskNum
 2569              		.syntax unified
 2570              		.thumb
 2571              		.thumb_func
 2572              		.fpu fpv4-sp-d16
 2574              	Task_Get_TaskNum:
 2575              	.LFB154:
 605:SYS/task_manager/task_manager.c ****     return TskCrt_RegList.num;
 2576              		.loc 1 605 1 is_stmt 1 view -0
 2577              		.cfi_startproc
 2578              		@ args = 0, pretend = 0, frame = 0
 2579              		@ frame_needed = 0, uses_anonymous_args = 0
 2580              		@ link register save eliminated.
 606:SYS/task_manager/task_manager.c **** }
 2581              		.loc 1 606 5 view .LVU708
 607:SYS/task_manager/task_manager.c **** 
 2582              		.loc 1 607 1 is_stmt 0 view .LVU709
 2583 0000 014B     		ldr	r3, .L164
 2584 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2585 0004 7047     		bx	lr
 2586              	.L165:
 2587 0006 00BF     		.align	2
 2588              	.L164:
 2589 0008 00000000 		.word	.LANCHOR3
 2590              		.cfi_endproc
 2591              	.LFE154:
 2593              		.global	__aeabi_ui2d
 2594              		.global	__aeabi_ddiv
 2595              		.global	__aeabi_d2uiz
 2596              		.section	.text.Task_Create,"ax",%progbits
 2597              		.align	1
ARM GAS  /tmp/ccUTxatF.s 			page 102


 2598              		.global	Task_Create
 2599              		.syntax unified
 2600              		.thumb
 2601              		.thumb_func
 2602              		.fpu fpv4-sp-d16
 2604              	Task_Create:
 2605              	.LVL138:
 2606              	.LFB156:
 654:SYS/task_manager/task_manager.c ****     Task_Handler handle;
 2607              		.loc 1 654 1 is_stmt 1 view -0
 2608              		.cfi_startproc
 2609              		@ args = 8, pretend = 0, frame = 8
 2610              		@ frame_needed = 0, uses_anonymous_args = 0
 654:SYS/task_manager/task_manager.c ****     Task_Handler handle;
 2611              		.loc 1 654 1 is_stmt 0 view .LVU711
 2612 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2613              	.LCFI36:
 2614              		.cfi_def_cfa_offset 36
 2615              		.cfi_offset 4, -36
 2616              		.cfi_offset 5, -32
 2617              		.cfi_offset 6, -28
 2618              		.cfi_offset 7, -24
 2619              		.cfi_offset 8, -20
 2620              		.cfi_offset 9, -16
 2621              		.cfi_offset 10, -12
 2622              		.cfi_offset 11, -8
 2623              		.cfi_offset 14, -4
 2624 0004 83B0     		sub	sp, sp, #12
 2625              	.LCFI37:
 2626              		.cfi_def_cfa_offset 48
 2627 0006 0190     		str	r0, [sp, #4]
 2628 0008 8B46     		mov	fp, r1
 2629 000a 1746     		mov	r7, r2
 2630 000c 1E46     		mov	r6, r3
 655:SYS/task_manager/task_manager.c ****     uint16_t task_name_len = strlen(name);
 2631              		.loc 1 655 5 is_stmt 1 view .LVU712
 656:SYS/task_manager/task_manager.c ****     uint32_t *Tsk_Ptr_tmp = NULL;
 2632              		.loc 1 656 5 view .LVU713
 657:SYS/task_manager/task_manager.c ****     static bool taskOs_InitState = false;
 2633              		.loc 1 657 5 view .LVU714
 2634              	.LVL139:
 658:SYS/task_manager/task_manager.c **** 
 2635              		.loc 1 658 5 view .LVU715
 660:SYS/task_manager/task_manager.c ****     {
 2636              		.loc 1 660 5 view .LVU716
 660:SYS/task_manager/task_manager.c ****     {
 2637              		.loc 1 660 9 is_stmt 0 view .LVU717
 2638 000e 784B     		ldr	r3, .L177+8
 2639              	.LVL140:
 660:SYS/task_manager/task_manager.c ****     {
 2640              		.loc 1 660 9 view .LVU718
 2641 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 660:SYS/task_manager/task_manager.c ****     {
 2642              		.loc 1 660 8 view .LVU719
 2643 0012 5BB1     		cbz	r3, .L175
 2644              	.LVL141:
 2645              	.L167:
ARM GAS  /tmp/ccUTxatF.s 			page 103


 667:SYS/task_manager/task_manager.c ****     {
 2646              		.loc 1 667 5 is_stmt 1 view .LVU720
 667:SYS/task_manager/task_manager.c ****     {
 2647              		.loc 1 667 24 is_stmt 0 view .LVU721
 2648 0014 06EBC703 		add	r3, r6, r7, lsl #3
 2649 0018 764A     		ldr	r2, .L177+12
 2650 001a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 667:SYS/task_manager/task_manager.c ****     {
 2651              		.loc 1 667 8 view .LVU722
 2652 001e 5BB1     		cbz	r3, .L176
 669:SYS/task_manager/task_manager.c ****     }
 2653              		.loc 1 669 16 view .LVU723
 2654 0020 4FF00108 		mov	r8, #1
 2655              	.LVL142:
 2656              	.L166:
 754:SYS/task_manager/task_manager.c **** 
 2657              		.loc 1 754 1 view .LVU724
 2658 0024 4046     		mov	r0, r8
 2659 0026 03B0     		add	sp, sp, #12
 2660              	.LCFI38:
 2661              		.cfi_remember_state
 2662              		.cfi_def_cfa_offset 36
 2663              		@ sp needed
 2664 0028 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2665              	.LVL143:
 2666              	.L175:
 2667              	.LCFI39:
 2668              		.cfi_restore_state
 662:SYS/task_manager/task_manager.c ****         taskOs_InitState = true;
 2669              		.loc 1 662 9 is_stmt 1 view .LVU725
 2670 002c FFF7FEFF 		bl	TaskSys_Init
 2671              	.LVL144:
 663:SYS/task_manager/task_manager.c ****     }
 2672              		.loc 1 663 9 view .LVU726
 663:SYS/task_manager/task_manager.c ****     }
 2673              		.loc 1 663 26 is_stmt 0 view .LVU727
 2674 0030 6F4B     		ldr	r3, .L177+8
 2675 0032 0122     		movs	r2, #1
 2676 0034 1A70     		strb	r2, [r3]
 2677 0036 EDE7     		b	.L167
 2678              	.L176:
 673:SYS/task_manager/task_manager.c **** 
 2679              		.loc 1 673 5 is_stmt 1 view .LVU728
 673:SYS/task_manager/task_manager.c **** 
 2680              		.loc 1 673 41 is_stmt 0 view .LVU729
 2681 0038 8820     		movs	r0, #136
 2682 003a FFF7FEFF 		bl	MMU_Malloc
 2683              	.LVL145:
 2684 003e 8146     		mov	r9, r0
 673:SYS/task_manager/task_manager.c **** 
 2685              		.loc 1 673 31 view .LVU730
 2686 0040 6C4C     		ldr	r4, .L177+12
 2687 0042 4FEAC70A 		lsl	r10, r7, #3
 2688 0046 0AEB0605 		add	r5, r10, r6
 2689 004a 44F82500 		str	r0, [r4, r5, lsl #2]
 676:SYS/task_manager/task_manager.c **** 
 2690              		.loc 1 676 5 is_stmt 1 view .LVU731
ARM GAS  /tmp/ccUTxatF.s 			page 104


 676:SYS/task_manager/task_manager.c **** 
 2691              		.loc 1 676 12 is_stmt 0 view .LVU732
 2692 004e 8046     		mov	r8, r0
 2693              	.LVL146:
 678:SYS/task_manager/task_manager.c **** 
 2694              		.loc 1 678 5 is_stmt 1 view .LVU733
 678:SYS/task_manager/task_manager.c **** 
 2695              		.loc 1 678 42 is_stmt 0 view .LVU734
 2696 0050 019B     		ldr	r3, [sp, #4]
 2697 0052 4360     		str	r3, [r0, #4]
 680:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->exec_interval_us = RUNTIEM_MAX_TICK_FRQ / frq;
 2698              		.loc 1 680 5 is_stmt 1 view .LVU735
 680:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->exec_interval_us = RUNTIEM_MAX_TICK_FRQ / frq;
 2699              		.loc 1 680 20 is_stmt 0 view .LVU736
 2700 0054 54F82530 		ldr	r3, [r4, r5, lsl #2]
 680:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->exec_interval_us = RUNTIEM_MAX_TICK_FRQ / frq;
 2701              		.loc 1 680 41 view .LVU737
 2702 0058 C3F808B0 		str	fp, [r3, #8]
 681:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_Func = func;
 2703              		.loc 1 681 5 is_stmt 1 view .LVU738
 681:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_Func = func;
 2704              		.loc 1 681 72 is_stmt 0 view .LVU739
 2705 005c 5846     		mov	r0, fp
 2706              	.LVL147:
 681:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_Func = func;
 2707              		.loc 1 681 72 view .LVU740
 2708 005e FFF7FEFF 		bl	__aeabi_ui2d
 2709              	.LVL148:
 2710 0062 0246     		mov	r2, r0
 2711 0064 0B46     		mov	r3, r1
 2712 0066 60A1     		adr	r1, .L177
 2713 0068 D1E90001 		ldrd	r0, [r1]
 2714 006c FFF7FEFF 		bl	__aeabi_ddiv
 2715              	.LVL149:
 681:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_Func = func;
 2716              		.loc 1 681 20 view .LVU741
 2717 0070 54F825B0 		ldr	fp, [r4, r5, lsl #2]
 2718              	.LVL150:
 681:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_Func = func;
 2719              		.loc 1 681 49 view .LVU742
 2720 0074 FFF7FEFF 		bl	__aeabi_d2uiz
 2721              	.LVL151:
 2722 0078 ABF80C00 		strh	r0, [fp, #12]	@ movhi
 682:SYS/task_manager/task_manager.c **** 
 2723              		.loc 1 682 5 is_stmt 1 view .LVU743
 682:SYS/task_manager/task_manager.c **** 
 2724              		.loc 1 682 20 is_stmt 0 view .LVU744
 2725 007c 54F82530 		ldr	r3, [r4, r5, lsl #2]
 682:SYS/task_manager/task_manager.c **** 
 2726              		.loc 1 682 42 view .LVU745
 2727 0080 0C9A     		ldr	r2, [sp, #48]
 2728 0082 1A61     		str	r2, [r3, #16]
 684:SYS/task_manager/task_manager.c **** 
 2729              		.loc 1 684 5 is_stmt 1 view .LVU746
 684:SYS/task_manager/task_manager.c **** 
 2730              		.loc 1 684 20 is_stmt 0 view .LVU747
 2731 0084 54F82530 		ldr	r3, [r4, r5, lsl #2]
ARM GAS  /tmp/ccUTxatF.s 			page 105


 684:SYS/task_manager/task_manager.c **** 
 2732              		.loc 1 684 65 view .LVU748
 2733 0088 4AEA060A 		orr	r10, r10, r6
 684:SYS/task_manager/task_manager.c **** 
 2734              		.loc 1 684 50 view .LVU749
 2735 008c 83F800A0 		strb	r10, [r3]
 688:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.tsk_hdl = handle;
 2736              		.loc 1 688 5 is_stmt 1 view .LVU750
 688:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.tsk_hdl = handle;
 2737              		.loc 1 688 20 is_stmt 0 view .LVU751
 2738 0090 54F82520 		ldr	r2, [r4, r5, lsl #2]
 688:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.tsk_hdl = handle;
 2739              		.loc 1 688 52 view .LVU752
 2740 0094 0023     		movs	r3, #0
 2741 0096 82F85C30 		strb	r3, [r2, #92]
 689:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.time_unit = 0;
 2742              		.loc 1 689 5 is_stmt 1 view .LVU753
 689:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.time_unit = 0;
 2743              		.loc 1 689 20 is_stmt 0 view .LVU754
 2744 009a 54F82520 		ldr	r2, [r4, r5, lsl #2]
 689:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->delay_info.time_unit = 0;
 2745              		.loc 1 689 51 view .LVU755
 2746 009e C2F86090 		str	r9, [r2, #96]
 690:SYS/task_manager/task_manager.c **** 
 2747              		.loc 1 690 5 is_stmt 1 view .LVU756
 690:SYS/task_manager/task_manager.c **** 
 2748              		.loc 1 690 20 is_stmt 0 view .LVU757
 2749 00a2 54F82520 		ldr	r2, [r4, r5, lsl #2]
 690:SYS/task_manager/task_manager.c **** 
 2750              		.loc 1 690 53 view .LVU758
 2751 00a6 5366     		str	r3, [r2, #100]
 693:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->TCB.Stack = (uint32_t *)MMU_Malloc(StackDepth * sizeof(uint32_t));
 2752              		.loc 1 693 5 is_stmt 1 view .LVU759
 693:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->TCB.Stack = (uint32_t *)MMU_Malloc(StackDepth * sizeof(uint32_t));
 2753              		.loc 1 693 20 is_stmt 0 view .LVU760
 2754 00a8 54F82530 		ldr	r3, [r4, r5, lsl #2]
 693:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->TCB.Stack = (uint32_t *)MMU_Malloc(StackDepth * sizeof(uint32_t));
 2755              		.loc 1 693 44 view .LVU761
 2756 00ac 0D9A     		ldr	r2, [sp, #52]
 2757 00ae DA64     		str	r2, [r3, #76]
 694:SYS/task_manager/task_manager.c **** 
 2758              		.loc 1 694 5 is_stmt 1 view .LVU762
 694:SYS/task_manager/task_manager.c **** 
 2759              		.loc 1 694 20 is_stmt 0 view .LVU763
 2760 00b0 54F82590 		ldr	r9, [r4, r5, lsl #2]
 694:SYS/task_manager/task_manager.c **** 
 2761              		.loc 1 694 56 view .LVU764
 2762 00b4 9000     		lsls	r0, r2, #2
 2763 00b6 80B2     		uxth	r0, r0
 2764 00b8 FFF7FEFF 		bl	MMU_Malloc
 2765              	.LVL152:
 694:SYS/task_manager/task_manager.c **** 
 2766              		.loc 1 694 42 view .LVU765
 2767 00bc C9F85400 		str	r0, [r9, #84]
 696:SYS/task_manager/task_manager.c ****     {
 2768              		.loc 1 696 5 is_stmt 1 view .LVU766
 696:SYS/task_manager/task_manager.c ****     {
ARM GAS  /tmp/ccUTxatF.s 			page 106


 2769              		.loc 1 696 24 is_stmt 0 view .LVU767
 2770 00c0 54F82500 		ldr	r0, [r4, r5, lsl #2]
 696:SYS/task_manager/task_manager.c ****     {
 2771              		.loc 1 696 39 view .LVU768
 2772 00c4 436D     		ldr	r3, [r0, #84]
 696:SYS/task_manager/task_manager.c ****     {
 2773              		.loc 1 696 8 view .LVU769
 2774 00c6 002B     		cmp	r3, #0
 2775 00c8 00F08680 		beq	.L172
 698:SYS/task_manager/task_manager.c ****     }
 2776              		.loc 1 698 9 is_stmt 1 view .LVU770
 2777 00cc FFF7FEFF 		bl	Task_SetStkPtr_Val
 2778              	.LVL153:
 707:SYS/task_manager/task_manager.c **** 
 2779              		.loc 1 707 5 view .LVU771
 707:SYS/task_manager/task_manager.c **** 
 2780              		.loc 1 707 20 is_stmt 0 view .LVU772
 2781 00d0 54F82530 		ldr	r3, [r4, r5, lsl #2]
 707:SYS/task_manager/task_manager.c **** 
 2782              		.loc 1 707 47 view .LVU773
 2783 00d4 4FF00009 		mov	r9, #0
 2784 00d8 C3F85890 		str	r9, [r3, #88]
 710:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.totlal_running_time = 0;
 2785              		.loc 1 710 5 is_stmt 1 view .LVU774
 710:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.totlal_running_time = 0;
 2786              		.loc 1 710 20 is_stmt 0 view .LVU775
 2787 00dc 54F82530 		ldr	r3, [r4, r5, lsl #2]
 710:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.totlal_running_time = 0;
 2788              		.loc 1 710 52 view .LVU776
 2789 00e0 0022     		movs	r2, #0
 2790 00e2 5A64     		str	r2, [r3, #68]	@ float
 711:SYS/task_manager/task_manager.c **** 
 2791              		.loc 1 711 5 is_stmt 1 view .LVU777
 711:SYS/task_manager/task_manager.c **** 
 2792              		.loc 1 711 20 is_stmt 0 view .LVU778
 2793 00e4 54F82530 		ldr	r3, [r4, r5, lsl #2]
 711:SYS/task_manager/task_manager.c **** 
 2794              		.loc 1 711 64 view .LVU779
 2795 00e8 C3F84090 		str	r9, [r3, #64]
 714:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 2796              		.loc 1 714 5 is_stmt 1 view .LVU780
 714:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 2797              		.loc 1 714 27 is_stmt 0 view .LVU781
 2798 00ec 424B     		ldr	r3, .L177+16
 2799 00ee 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 714:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 2800              		.loc 1 714 35 view .LVU782
 2801 00f0 54F82500 		ldr	r0, [r4, r5, lsl #2]
 2802 00f4 90F800C0 		ldrb	ip, [r0]	@ zero_extendqisi2
 714:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 2803              		.loc 1 714 32 view .LVU783
 2804 00f8 0122     		movs	r2, #1
 2805 00fa 02FA0CFC 		lsl	ip, r2, ip
 714:SYS/task_manager/task_manager.c ****     //set current task under this group flag to ready
 2806              		.loc 1 714 27 view .LVU784
 2807 00fe 41EAEC01 		orr	r1, r1, ip, asr #3
 2808 0102 C9B2     		uxtb	r1, r1
ARM GAS  /tmp/ccUTxatF.s 			page 107


 2809 0104 1970     		strb	r1, [r3]
 716:SYS/task_manager/task_manager.c **** 
 2810              		.loc 1 716 5 is_stmt 1 view .LVU785
 716:SYS/task_manager/task_manager.c **** 
 2811              		.loc 1 716 28 is_stmt 0 view .LVU786
 2812 0106 90F800C0 		ldrb	ip, [r0]	@ zero_extendqisi2
 716:SYS/task_manager/task_manager.c **** 
 2813              		.loc 1 716 102 view .LVU787
 2814 010a 03EBDC03 		add	r3, r3, ip, lsr #3
 2815 010e 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 716:SYS/task_manager/task_manager.c **** 
 2816              		.loc 1 716 107 view .LVU788
 2817 0110 02FA0CF2 		lsl	r2, r2, ip
 716:SYS/task_manager/task_manager.c **** 
 2818              		.loc 1 716 110 view .LVU789
 2819 0114 02F00702 		and	r2, r2, #7
 716:SYS/task_manager/task_manager.c **** 
 2820              		.loc 1 716 102 view .LVU790
 2821 0118 0A43     		orrs	r2, r2, r1
 2822 011a 5A70     		strb	r2, [r3, #1]
 718:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_arv = 0;
 2823              		.loc 1 718 5 is_stmt 1 view .LVU791
 718:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_arv = 0;
 2824              		.loc 1 718 60 is_stmt 0 view .LVU792
 2825 011c C0F82C90 		str	r9, [r0, #44]
 719:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_max = 0;
 2826              		.loc 1 719 5 is_stmt 1 view .LVU793
 719:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_max = 0;
 2827              		.loc 1 719 20 is_stmt 0 view .LVU794
 2828 0120 54F82530 		ldr	r3, [r4, r5, lsl #2]
 719:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.detect_exec_time_max = 0;
 2829              		.loc 1 719 65 view .LVU795
 2830 0124 C3F83090 		str	r9, [r3, #48]
 720:SYS/task_manager/task_manager.c **** 
 2831              		.loc 1 720 5 is_stmt 1 view .LVU796
 720:SYS/task_manager/task_manager.c **** 
 2832              		.loc 1 720 20 is_stmt 0 view .LVU797
 2833 0128 54F82530 		ldr	r3, [r4, r5, lsl #2]
 720:SYS/task_manager/task_manager.c **** 
 2834              		.loc 1 720 65 view .LVU798
 2835 012c C3F83490 		str	r9, [r3, #52]
 722:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Init_Time));
 2836              		.loc 1 722 5 is_stmt 1 view .LVU799
 722:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Init_Time));
 2837              		.loc 1 722 39 is_stmt 0 view .LVU800
 2838 0130 54F82500 		ldr	r0, [r4, r5, lsl #2]
 722:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Init_Time));
 2839              		.loc 1 722 5 view .LVU801
 2840 0134 2430     		adds	r0, r0, #36
 2841 0136 FFF7FEFF 		bl	RuntimeObj_Reset
 2842              	.LVL154:
 723:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Start_Time));
 2843              		.loc 1 723 5 is_stmt 1 view .LVU802
 723:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Start_Time));
 2844              		.loc 1 723 39 is_stmt 0 view .LVU803
 2845 013a 54F82500 		ldr	r0, [r4, r5, lsl #2]
 723:SYS/task_manager/task_manager.c ****     RuntimeObj_Reset(&(Task_Ptr[group][priority]->Exec_status.Start_Time));
ARM GAS  /tmp/ccUTxatF.s 			page 108


 2846              		.loc 1 723 5 view .LVU804
 2847 013e 1430     		adds	r0, r0, #20
 2848 0140 FFF7FEFF 		bl	RuntimeObj_Reset
 2849              	.LVL155:
 724:SYS/task_manager/task_manager.c **** 
 2850              		.loc 1 724 5 is_stmt 1 view .LVU805
 724:SYS/task_manager/task_manager.c **** 
 2851              		.loc 1 724 39 is_stmt 0 view .LVU806
 2852 0144 54F82500 		ldr	r0, [r4, r5, lsl #2]
 724:SYS/task_manager/task_manager.c **** 
 2853              		.loc 1 724 5 view .LVU807
 2854 0148 1C30     		adds	r0, r0, #28
 2855 014a FFF7FEFF 		bl	RuntimeObj_Reset
 2856              	.LVL156:
 726:SYS/task_manager/task_manager.c **** 
 2857              		.loc 1 726 5 is_stmt 1 view .LVU808
 726:SYS/task_manager/task_manager.c **** 
 2858              		.loc 1 726 20 is_stmt 0 view .LVU809
 2859 014e 54F825A0 		ldr	r10, [r4, r5, lsl #2]
 726:SYS/task_manager/task_manager.c **** 
 2860              		.loc 1 726 56 view .LVU810
 2861 0152 FFF7FEFF 		bl	Get_CurrentRunningUs
 2862              	.LVL157:
 726:SYS/task_manager/task_manager.c **** 
 2863              		.loc 1 726 54 view .LVU811
 2864 0156 CAF81400 		str	r0, [r10, #20]
 2865 015a CAF81810 		str	r1, [r10, #24]
 728:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.error_code = NOERROR;
 2866              		.loc 1 728 5 is_stmt 1 view .LVU812
 728:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.error_code = NOERROR;
 2867              		.loc 1 728 20 is_stmt 0 view .LVU813
 2868 015e 54F82530 		ldr	r3, [r4, r5, lsl #2]
 728:SYS/task_manager/task_manager.c ****     Task_Ptr[group][priority]->Exec_status.error_code = NOERROR;
 2869              		.loc 1 728 55 view .LVU814
 2870 0162 C3F83890 		str	r9, [r3, #56]
 729:SYS/task_manager/task_manager.c **** 
 2871              		.loc 1 729 5 is_stmt 1 view .LVU815
 729:SYS/task_manager/task_manager.c **** 
 2872              		.loc 1 729 20 is_stmt 0 view .LVU816
 2873 0166 54F82530 		ldr	r3, [r4, r5, lsl #2]
 729:SYS/task_manager/task_manager.c **** 
 2874              		.loc 1 729 55 view .LVU817
 2875 016a 83F83C90 		strb	r9, [r3, #60]
 731:SYS/task_manager/task_manager.c **** 
 2876              		.loc 1 731 5 is_stmt 1 view .LVU818
 2877 016e 54F82500 		ldr	r0, [r4, r5, lsl #2]
 2878 0172 FFF7FEFF 		bl	Task_SetReady
 2879              	.LVL158:
 733:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority]->item_ptr == NULL)
 2880              		.loc 1 733 5 view .LVU819
 733:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority]->item_ptr == NULL)
 2881              		.loc 1 733 20 is_stmt 0 view .LVU820
 2882 0176 54F82590 		ldr	r9, [r4, r5, lsl #2]
 733:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority]->item_ptr == NULL)
 2883              		.loc 1 733 55 view .LVU821
 2884 017a 1420     		movs	r0, #20
 2885 017c FFF7FEFF 		bl	MMU_Malloc
ARM GAS  /tmp/ccUTxatF.s 			page 109


 2886              	.LVL159:
 733:SYS/task_manager/task_manager.c ****     if (Task_Ptr[group][priority]->item_ptr == NULL)
 2887              		.loc 1 733 41 view .LVU822
 2888 0180 C9F87000 		str	r0, [r9, #112]
 734:SYS/task_manager/task_manager.c ****     {
 2889              		.loc 1 734 5 is_stmt 1 view .LVU823
 734:SYS/task_manager/task_manager.c ****     {
 2890              		.loc 1 734 24 is_stmt 0 view .LVU824
 2891 0184 54F82510 		ldr	r1, [r4, r5, lsl #2]
 734:SYS/task_manager/task_manager.c ****     {
 2892              		.loc 1 734 34 view .LVU825
 2893 0188 086F     		ldr	r0, [r1, #112]
 734:SYS/task_manager/task_manager.c ****     {
 2894              		.loc 1 734 8 view .LVU826
 2895 018a 40B3     		cbz	r0, .L173
 739:SYS/task_manager/task_manager.c ****     if (TskCrt_RegList.num == 0)
 2896              		.loc 1 739 5 is_stmt 1 view .LVU827
 2897 018c FFF7FEFF 		bl	List_ItemInit
 2898              	.LVL160:
 740:SYS/task_manager/task_manager.c ****     {
 2899              		.loc 1 740 5 view .LVU828
 740:SYS/task_manager/task_manager.c ****     {
 2900              		.loc 1 740 23 is_stmt 0 view .LVU829
 2901 0190 1A4B     		ldr	r3, .L177+20
 2902 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 740:SYS/task_manager/task_manager.c ****     {
 2903              		.loc 1 740 8 view .LVU830
 2904 0194 B3B9     		cbnz	r3, .L169
 742:SYS/task_manager/task_manager.c ****     }
 2905              		.loc 1 742 9 is_stmt 1 view .LVU831
 742:SYS/task_manager/task_manager.c ****     }
 2906              		.loc 1 742 56 is_stmt 0 view .LVU832
 2907 0196 54F82510 		ldr	r1, [r4, r5, lsl #2]
 742:SYS/task_manager/task_manager.c ****     }
 2908              		.loc 1 742 9 view .LVU833
 2909 019a 194B     		ldr	r3, .L177+24
 2910 019c 0222     		movs	r2, #2
 2911 019e 096F     		ldr	r1, [r1, #112]
 2912 01a0 1848     		ldr	r0, .L177+28
 2913 01a2 FFF7FEFF 		bl	List_Init
 2914              	.LVL161:
 2915              	.L170:
 749:SYS/task_manager/task_manager.c **** 
 2916              		.loc 1 749 5 is_stmt 1 view .LVU834
 749:SYS/task_manager/task_manager.c **** 
 2917              		.loc 1 749 35 is_stmt 0 view .LVU835
 2918 01a6 06EBC706 		add	r6, r6, r7, lsl #3
 2919 01aa 124B     		ldr	r3, .L177+12
 2920 01ac 53F82600 		ldr	r0, [r3, r6, lsl #2]
 749:SYS/task_manager/task_manager.c **** 
 2921              		.loc 1 749 5 view .LVU836
 2922 01b0 00F15C01 		add	r1, r0, #92
 2923 01b4 7430     		adds	r0, r0, #116
 2924 01b6 FFF7FEFF 		bl	List_ItemInit
 2925              	.LVL162:
 751:SYS/task_manager/task_manager.c **** 
 2926              		.loc 1 751 5 is_stmt 1 view .LVU837
ARM GAS  /tmp/ccUTxatF.s 			page 110


 751:SYS/task_manager/task_manager.c **** 
 2927              		.loc 1 751 19 is_stmt 0 view .LVU838
 2928 01ba 104A     		ldr	r2, .L177+20
 2929 01bc 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 751:SYS/task_manager/task_manager.c **** 
 2930              		.loc 1 751 23 view .LVU839
 2931 01be 0133     		adds	r3, r3, #1
 2932 01c0 1370     		strb	r3, [r2]
 753:SYS/task_manager/task_manager.c **** }
 2933              		.loc 1 753 5 is_stmt 1 view .LVU840
 753:SYS/task_manager/task_manager.c **** }
 2934              		.loc 1 753 12 is_stmt 0 view .LVU841
 2935 01c2 2FE7     		b	.L166
 2936              	.L169:
 746:SYS/task_manager/task_manager.c ****     }
 2937              		.loc 1 746 9 is_stmt 1 view .LVU842
 746:SYS/task_manager/task_manager.c ****     }
 2938              		.loc 1 746 63 is_stmt 0 view .LVU843
 2939 01c4 06EBC703 		add	r3, r6, r7, lsl #3
 2940 01c8 0A4A     		ldr	r2, .L177+12
 2941 01ca 52F82330 		ldr	r3, [r2, r3, lsl #2]
 746:SYS/task_manager/task_manager.c ****     }
 2942              		.loc 1 746 9 view .LVU844
 2943 01ce 196F     		ldr	r1, [r3, #112]
 2944 01d0 0C48     		ldr	r0, .L177+28
 2945 01d2 FFF7FEFF 		bl	List_Insert_Item
 2946              	.LVL163:
 2947 01d6 E6E7     		b	.L170
 2948              	.L172:
 702:SYS/task_manager/task_manager.c ****     }
 2949              		.loc 1 702 16 view .LVU845
 2950 01d8 4FF00008 		mov	r8, #0
 2951              	.LVL164:
 702:SYS/task_manager/task_manager.c ****     }
 2952              		.loc 1 702 16 view .LVU846
 2953 01dc 22E7     		b	.L166
 2954              	.LVL165:
 2955              	.L173:
 736:SYS/task_manager/task_manager.c ****     }
 2956              		.loc 1 736 16 view .LVU847
 2957 01de 4FF00008 		mov	r8, #0
 2958              	.LVL166:
 736:SYS/task_manager/task_manager.c ****     }
 2959              		.loc 1 736 16 view .LVU848
 2960 01e2 1FE7     		b	.L166
 2961              	.L178:
 2962 01e4 AFF30080 		.align	3
 2963              	.L177:
 2964 01e8 00000000 		.word	0
 2965 01ec 80842E41 		.word	1093567616
 2966 01f0 00000000 		.word	.LANCHOR14
 2967 01f4 00000000 		.word	Task_Ptr
 2968 01f8 00000000 		.word	.LANCHOR0
 2969 01fc 00000000 		.word	.LANCHOR3
 2970 0200 00000000 		.word	Task_PriorityCompare
 2971 0204 04000000 		.word	.LANCHOR3+4
 2972              		.cfi_endproc
ARM GAS  /tmp/ccUTxatF.s 			page 111


 2973              	.LFE156:
 2975              		.section	.text.Task_Remove,"ax",%progbits
 2976              		.align	1
 2977              		.global	Task_Remove
 2978              		.syntax unified
 2979              		.thumb
 2980              		.thumb_func
 2981              		.fpu fpv4-sp-d16
 2983              	Task_Remove:
 2984              	.LVL167:
 2985              	.LFB157:
 758:SYS/task_manager/task_manager.c ****     //convert Tsk_Hdl from uint32_t var to Task Address which we need to delete
 2986              		.loc 1 758 1 is_stmt 1 view -0
 2987              		.cfi_startproc
 2988              		@ args = 0, pretend = 0, frame = 0
 2989              		@ frame_needed = 0, uses_anonymous_args = 0
 758:SYS/task_manager/task_manager.c ****     //convert Tsk_Hdl from uint32_t var to Task Address which we need to delete
 2990              		.loc 1 758 1 is_stmt 0 view .LVU850
 2991 0000 70B5     		push	{r4, r5, r6, lr}
 2992              	.LCFI40:
 2993              		.cfi_def_cfa_offset 16
 2994              		.cfi_offset 4, -16
 2995              		.cfi_offset 5, -12
 2996              		.cfi_offset 6, -8
 2997              		.cfi_offset 14, -4
 2998 0002 0546     		mov	r5, r0
 764:SYS/task_manager/task_manager.c ****     uint8_t remove_task = GET_TASKINGROUP_PRIORITY(((Task *)Tsk_Hdl)->priority.Priority);
 2999              		.loc 1 764 5 is_stmt 1 view .LVU851
 764:SYS/task_manager/task_manager.c ****     uint8_t remove_task = GET_TASKINGROUP_PRIORITY(((Task *)Tsk_Hdl)->priority.Priority);
 3000              		.loc 1 764 28 is_stmt 0 view .LVU852
 3001 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 764:SYS/task_manager/task_manager.c ****     uint8_t remove_task = GET_TASKINGROUP_PRIORITY(((Task *)Tsk_Hdl)->priority.Priority);
 3002              		.loc 1 764 13 view .LVU853
 3003 0006 DE08     		lsrs	r6, r3, #3
 3004              	.LVL168:
 765:SYS/task_manager/task_manager.c **** 
 3005              		.loc 1 765 5 is_stmt 1 view .LVU854
 765:SYS/task_manager/task_manager.c **** 
 3006              		.loc 1 765 13 is_stmt 0 view .LVU855
 3007 0008 03F00704 		and	r4, r3, #7
 3008              	.LVL169:
 767:SYS/task_manager/task_manager.c **** 
 3009              		.loc 1 767 5 is_stmt 1 view .LVU856
 3010 000c FFF7FEFF 		bl	ReSet_Task_Data
 3011              	.LVL170:
 770:SYS/task_manager/task_manager.c ****     MMU_Free((uint32_t *)((Task *)Tsk_Hdl)->TCB.Top_Stk_Ptr);
 3012              		.loc 1 770 5 view .LVU857
 3013 0010 686D     		ldr	r0, [r5, #84]
 3014 0012 FFF7FEFF 		bl	MMU_Free
 3015              	.LVL171:
 771:SYS/task_manager/task_manager.c **** #endif
 3016              		.loc 1 771 5 view .LVU858
 771:SYS/task_manager/task_manager.c **** #endif
 3017              		.loc 1 771 48 is_stmt 0 view .LVU859
 3018 0016 286D     		ldr	r0, [r5, #80]
 771:SYS/task_manager/task_manager.c **** #endif
 3019              		.loc 1 771 5 view .LVU860
ARM GAS  /tmp/ccUTxatF.s 			page 112


 3020 0018 FFF7FEFF 		bl	MMU_Free
 3021              	.LVL172:
 774:SYS/task_manager/task_manager.c ****     Task_Ptr[remove_group][remove_task] = NULL;
 3022              		.loc 1 774 5 is_stmt 1 view .LVU861
 3023 001c 2846     		mov	r0, r5
 3024 001e FFF7FEFF 		bl	MMU_Free
 3025              	.LVL173:
 775:SYS/task_manager/task_manager.c **** }
 3026              		.loc 1 775 5 view .LVU862
 775:SYS/task_manager/task_manager.c **** }
 3027              		.loc 1 775 41 is_stmt 0 view .LVU863
 3028 0022 04EBC603 		add	r3, r4, r6, lsl #3
 3029 0026 024A     		ldr	r2, .L181
 3030 0028 0021     		movs	r1, #0
 3031 002a 42F82310 		str	r1, [r2, r3, lsl #2]
 776:SYS/task_manager/task_manager.c **** 
 3032              		.loc 1 776 1 view .LVU864
 3033 002e 70BD     		pop	{r4, r5, r6, pc}
 3034              	.LVL174:
 3035              	.L182:
 776:SYS/task_manager/task_manager.c **** 
 3036              		.loc 1 776 1 view .LVU865
 3037              		.align	2
 3038              	.L181:
 3039 0030 00000000 		.word	Task_Ptr
 3040              		.cfi_endproc
 3041              	.LFE157:
 3043              		.section	.text.TaskSystem_Start,"ax",%progbits
 3044              		.align	1
 3045              		.global	TaskSystem_Start
 3046              		.syntax unified
 3047              		.thumb
 3048              		.thumb_func
 3049              		.fpu fpv4-sp-d16
 3051              	TaskSystem_Start:
 3052              	.LFB158:
 779:SYS/task_manager/task_manager.c ****     Runtime_Config(RUNTIME_TICK_FRQ_40K);
 3053              		.loc 1 779 1 is_stmt 1 view -0
 3054              		.cfi_startproc
 3055              		@ args = 0, pretend = 0, frame = 0
 3056              		@ frame_needed = 0, uses_anonymous_args = 0
 3057 0000 10B5     		push	{r4, lr}
 3058              	.LCFI41:
 3059              		.cfi_def_cfa_offset 8
 3060              		.cfi_offset 4, -8
 3061              		.cfi_offset 14, -4
 780:SYS/task_manager/task_manager.c ****     Runtime_Set_start_Callback(NULL);
 3062              		.loc 1 780 5 view .LVU867
 3063 0002 49F64040 		movw	r0, #40000
 3064 0006 FFF7FEFF 		bl	Runtime_Config
 3065              	.LVL175:
 781:SYS/task_manager/task_manager.c ****     Runtime_Set_stop_Callback(NULL);
 3066              		.loc 1 781 5 view .LVU868
 3067 000a 0020     		movs	r0, #0
 3068 000c FFF7FEFF 		bl	Runtime_Set_start_Callback
 3069              	.LVL176:
 782:SYS/task_manager/task_manager.c ****     Runtime_Set_tick_Callback(Task_Scheduler); /* 5us cast by calling the scheduler */
ARM GAS  /tmp/ccUTxatF.s 			page 113


 3070              		.loc 1 782 5 view .LVU869
 3071 0010 0020     		movs	r0, #0
 3072 0012 FFF7FEFF 		bl	Runtime_Set_stop_Callback
 3073              	.LVL177:
 783:SYS/task_manager/task_manager.c ****     Runtime_Start();
 3074              		.loc 1 783 5 view .LVU870
 3075 0016 1148     		ldr	r0, .L186
 3076 0018 FFF7FEFF 		bl	Runtime_Set_tick_Callback
 3077              	.LVL178:
 784:SYS/task_manager/task_manager.c **** 
 3078              		.loc 1 784 5 view .LVU871
 3079 001c FFF7FEFF 		bl	Runtime_Start
 3080              	.LVL179:
 786:SYS/task_manager/task_manager.c **** 
 3081              		.loc 1 786 5 view .LVU872
 3082 0020 0F4C     		ldr	r4, .L186+4
 3083 0022 2046     		mov	r0, r4
 3084 0024 FFF7FEFF 		bl	RuntimeObj_Reset
 3085              	.LVL180:
 788:SYS/task_manager/task_manager.c **** 
 3086              		.loc 1 788 5 view .LVU873
 788:SYS/task_manager/task_manager.c **** 
 3087              		.loc 1 788 25 is_stmt 0 view .LVU874
 3088 0028 FFF7FEFF 		bl	Get_CurrentRunningUs
 3089              	.LVL181:
 788:SYS/task_manager/task_manager.c **** 
 3090              		.loc 1 788 23 view .LVU875
 3091 002c C4E90001 		strd	r0, [r4]
 791:SYS/task_manager/task_manager.c **** 
 3092              		.loc 1 791 5 is_stmt 1 view .LVU876
 791:SYS/task_manager/task_manager.c **** 
 3093              		.loc 1 791 21 is_stmt 0 view .LVU877
 3094 0030 FFF7FEFF 		bl	Task_Get_HighestRank_RdyTask
 3095              	.LVL182:
 791:SYS/task_manager/task_manager.c **** 
 3096              		.loc 1 791 19 view .LVU878
 3097 0034 0B4B     		ldr	r3, .L186+8
 3098 0036 1860     		str	r0, [r3]
 793:SYS/task_manager/task_manager.c ****     {
 3099              		.loc 1 793 5 is_stmt 1 view .LVU879
 793:SYS/task_manager/task_manager.c ****     {
 3100              		.loc 1 793 8 is_stmt 0 view .LVU880
 3101 0038 50B1     		cbz	r0, .L184
 795:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 3102              		.loc 1 795 9 is_stmt 1 view .LVU881
 795:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 3103              		.loc 1 795 34 is_stmt 0 view .LVU882
 3104 003a 00F15002 		add	r2, r0, #80
 795:SYS/task_manager/task_manager.c ****         NxtTsk_TCB.Stack = NxtRunTsk_Ptr->TCB.Stack;
 3105              		.loc 1 795 32 view .LVU883
 3106 003e 0A4B     		ldr	r3, .L186+12
 3107 0040 1A60     		str	r2, [r3]
 796:SYS/task_manager/task_manager.c **** 
 3108              		.loc 1 796 9 is_stmt 1 view .LVU884
 796:SYS/task_manager/task_manager.c **** 
 3109              		.loc 1 796 46 is_stmt 0 view .LVU885
 3110 0042 426D     		ldr	r2, [r0, #84]
ARM GAS  /tmp/ccUTxatF.s 			page 114


 796:SYS/task_manager/task_manager.c **** 
 3111              		.loc 1 796 26 view .LVU886
 3112 0044 5A60     		str	r2, [r3, #4]
 798:SYS/task_manager/task_manager.c ****     }
 3113              		.loc 1 798 9 is_stmt 1 view .LVU887
 798:SYS/task_manager/task_manager.c ****     }
 3114              		.loc 1 798 20 is_stmt 0 view .LVU888
 3115 0046 094A     		ldr	r2, .L186+16
 3116 0048 93E80300 		ldm	r3, {r0, r1}
 3117 004c 82E80300 		stm	r2, {r0, r1}
 3118              	.L184:
 802:SYS/task_manager/task_manager.c ****     Task_TriggerPendSV();
 3119              		.loc 1 802 5 is_stmt 1 view .LVU889
 3120 0050 FFF7FEFF 		bl	Task_SetPendSVPro
 3121              	.LVL183:
 803:SYS/task_manager/task_manager.c **** 
 3122              		.loc 1 803 5 view .LVU890
 3123 0054 FFF7FEFF 		bl	Task_TriggerPendSV
 3124              	.LVL184:
 805:SYS/task_manager/task_manager.c **** }
 3125              		.loc 1 805 5 view .LVU891
 806:SYS/task_manager/task_manager.c **** 
 3126              		.loc 1 806 1 is_stmt 0 view .LVU892
 3127 0058 10BD     		pop	{r4, pc}
 3128              	.L187:
 3129 005a 00BF     		.align	2
 3130              	.L186:
 3131 005c 00000000 		.word	Task_Scheduler
 3132 0060 00000000 		.word	.LANCHOR6
 3133 0064 00000000 		.word	.LANCHOR9
 3134 0068 00000000 		.word	NxtTsk_TCB
 3135 006c 00000000 		.word	CurTsk_TCB
 3136              		.cfi_endproc
 3137              	.LFE158:
 3139              		.section	.text.Task_SetRunState,"ax",%progbits
 3140              		.align	1
 3141              		.global	Task_SetRunState
 3142              		.syntax unified
 3143              		.thumb
 3144              		.thumb_func
 3145              		.fpu fpv4-sp-d16
 3147              	Task_SetRunState:
 3148              	.LVL185:
 3149              	.LFB159:
 809:SYS/task_manager/task_manager.c ****     ((Task *)Tsk_Handle)->Exec_status.State = state;
 3150              		.loc 1 809 1 is_stmt 1 view -0
 3151              		.cfi_startproc
 3152              		@ args = 0, pretend = 0, frame = 0
 3153              		@ frame_needed = 0, uses_anonymous_args = 0
 3154              		@ link register save eliminated.
 810:SYS/task_manager/task_manager.c **** }
 3155              		.loc 1 810 5 view .LVU894
 810:SYS/task_manager/task_manager.c **** }
 3156              		.loc 1 810 45 is_stmt 0 view .LVU895
 3157 0000 80F84810 		strb	r1, [r0, #72]
 811:SYS/task_manager/task_manager.c **** 
 3158              		.loc 1 811 1 view .LVU896
ARM GAS  /tmp/ccUTxatF.s 			page 115


 3159 0004 7047     		bx	lr
 3160              		.cfi_endproc
 3161              	.LFE159:
 3163              		.section	.text.Task_Get_IdleUS,"ax",%progbits
 3164              		.align	1
 3165              		.global	Task_Get_IdleUS
 3166              		.syntax unified
 3167              		.thumb
 3168              		.thumb_func
 3169              		.fpu fpv4-sp-d16
 3171              	Task_Get_IdleUS:
 3172              	.LFB162:
 889:SYS/task_manager/task_manager.c ****     return TaskSys_Idle_US;
 3173              		.loc 1 889 1 is_stmt 1 view -0
 3174              		.cfi_startproc
 3175              		@ args = 0, pretend = 0, frame = 0
 3176              		@ frame_needed = 0, uses_anonymous_args = 0
 3177              		@ link register save eliminated.
 890:SYS/task_manager/task_manager.c **** }
 3178              		.loc 1 890 5 view .LVU898
 891:SYS/task_manager/task_manager.c **** 
 3179              		.loc 1 891 1 is_stmt 0 view .LVU899
 3180 0000 014B     		ldr	r3, .L190
 3181 0002 1868     		ldr	r0, [r3]
 3182 0004 7047     		bx	lr
 3183              	.L191:
 3184 0006 00BF     		.align	2
 3185              	.L190:
 3186 0008 00000000 		.word	.LANCHOR7
 3187              		.cfi_endproc
 3188              	.LFE162:
 3190              		.section	.text.Task_Get_IdleOcupy,"ax",%progbits
 3191              		.align	1
 3192              		.global	Task_Get_IdleOcupy
 3193              		.syntax unified
 3194              		.thumb
 3195              		.thumb_func
 3196              		.fpu fpv4-sp-d16
 3198              	Task_Get_IdleOcupy:
 3199              	.LFB163:
 894:SYS/task_manager/task_manager.c ****     return TaskSys_Idle_Ocupy;
 3200              		.loc 1 894 1 is_stmt 1 view -0
 3201              		.cfi_startproc
 3202              		@ args = 0, pretend = 0, frame = 0
 3203              		@ frame_needed = 0, uses_anonymous_args = 0
 3204              		@ link register save eliminated.
 895:SYS/task_manager/task_manager.c **** }
 3205              		.loc 1 895 5 view .LVU901
 896:SYS/task_manager/task_manager.c **** 
 3206              		.loc 1 896 1 is_stmt 0 view .LVU902
 3207 0000 014B     		ldr	r3, .L193
 3208 0002 93ED000A 		vldr.32	s0, [r3]
 3209 0006 7047     		bx	lr
 3210              	.L194:
 3211              		.align	2
 3212              	.L193:
 3213 0008 00000000 		.word	.LANCHOR8
ARM GAS  /tmp/ccUTxatF.s 			page 116


 3214              		.cfi_endproc
 3215              	.LFE163:
 3217              		.section	.text.TaskSys_Set_State,"ax",%progbits
 3218              		.align	1
 3219              		.global	TaskSys_Set_State
 3220              		.syntax unified
 3221              		.thumb
 3222              		.thumb_func
 3223              		.fpu fpv4-sp-d16
 3225              	TaskSys_Set_State:
 3226              	.LVL186:
 3227              	.LFB165:
 917:SYS/task_manager/task_manager.c ****     TskSys_state = state;
 3228              		.loc 1 917 1 is_stmt 1 view -0
 3229              		.cfi_startproc
 3230              		@ args = 0, pretend = 0, frame = 0
 3231              		@ frame_needed = 0, uses_anonymous_args = 0
 3232              		@ link register save eliminated.
 918:SYS/task_manager/task_manager.c **** }
 3233              		.loc 1 918 5 view .LVU904
 918:SYS/task_manager/task_manager.c **** }
 3234              		.loc 1 918 18 is_stmt 0 view .LVU905
 3235 0000 014B     		ldr	r3, .L196
 3236 0002 1870     		strb	r0, [r3]
 919:SYS/task_manager/task_manager.c **** 
 3237              		.loc 1 919 1 view .LVU906
 3238 0004 7047     		bx	lr
 3239              	.L197:
 3240 0006 00BF     		.align	2
 3241              	.L196:
 3242 0008 00000000 		.word	.LANCHOR5
 3243              		.cfi_endproc
 3244              	.LFE165:
 3246              		.section	.text.TaskSys_Get_State,"ax",%progbits
 3247              		.align	1
 3248              		.global	TaskSys_Get_State
 3249              		.syntax unified
 3250              		.thumb
 3251              		.thumb_func
 3252              		.fpu fpv4-sp-d16
 3254              	TaskSys_Get_State:
 3255              	.LFB166:
 922:SYS/task_manager/task_manager.c ****     return TskSys_state;
 3256              		.loc 1 922 1 is_stmt 1 view -0
 3257              		.cfi_startproc
 3258              		@ args = 0, pretend = 0, frame = 0
 3259              		@ frame_needed = 0, uses_anonymous_args = 0
 3260              		@ link register save eliminated.
 923:SYS/task_manager/task_manager.c **** }
 3261              		.loc 1 923 5 view .LVU908
 923:SYS/task_manager/task_manager.c **** }
 3262              		.loc 1 923 12 is_stmt 0 view .LVU909
 3263 0000 014B     		ldr	r3, .L199
 3264 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 924:SYS/task_manager/task_manager.c **** 
 3265              		.loc 1 924 1 view .LVU910
 3266 0004 7047     		bx	lr
ARM GAS  /tmp/ccUTxatF.s 			page 117


 3267              	.L200:
 3268 0006 00BF     		.align	2
 3269              	.L199:
 3270 0008 00000000 		.word	.LANCHOR5
 3271              		.cfi_endproc
 3272              	.LFE166:
 3274              		.section	.text.Task_GetInfo_ByIndex,"ax",%progbits
 3275              		.align	1
 3276              		.global	Task_GetInfo_ByIndex
 3277              		.syntax unified
 3278              		.thumb
 3279              		.thumb_func
 3280              		.fpu fpv4-sp-d16
 3282              	Task_GetInfo_ByIndex:
 3283              	.LVL187:
 3284              	.LFB169:
1066:SYS/task_manager/task_manager.c **** 
1067:SYS/task_manager/task_manager.c **** Task_Base_Info Task_GetInfo_ByIndex(uint8_t index)
1068:SYS/task_manager/task_manager.c **** {
 3285              		.loc 1 1068 1 is_stmt 1 view -0
 3286              		.cfi_startproc
 3287              		@ args = 0, pretend = 0, frame = 0
 3288              		@ frame_needed = 0, uses_anonymous_args = 0
 3289              		@ link register save eliminated.
1069:SYS/task_manager/task_manager.c ****     Task_Base_Info task_info;
 3290              		.loc 1 1069 5 view .LVU912
1070:SYS/task_manager/task_manager.c **** 
1071:SYS/task_manager/task_manager.c ****     return task_info;
 3291              		.loc 1 1071 5 view .LVU913
1072:SYS/task_manager/task_manager.c **** }
 3292              		.loc 1 1072 1 is_stmt 0 view .LVU914
 3293 0000 7047     		bx	lr
 3294              		.cfi_endproc
 3295              	.LFE169:
 3297              		.section	.text.Task_GetCurrentRunTask,"ax",%progbits
 3298              		.align	1
 3299              		.global	Task_GetCurrentRunTask
 3300              		.syntax unified
 3301              		.thumb
 3302              		.thumb_func
 3303              		.fpu fpv4-sp-d16
 3305              	Task_GetCurrentRunTask:
 3306              	.LFB170:
1073:SYS/task_manager/task_manager.c **** 
1074:SYS/task_manager/task_manager.c **** Task *Task_GetCurrentRunTask(void)
1075:SYS/task_manager/task_manager.c **** {
 3307              		.loc 1 1075 1 is_stmt 1 view -0
 3308              		.cfi_startproc
 3309              		@ args = 0, pretend = 0, frame = 0
 3310              		@ frame_needed = 0, uses_anonymous_args = 0
 3311              		@ link register save eliminated.
1076:SYS/task_manager/task_manager.c ****     return CurRunTsk_Ptr;
 3312              		.loc 1 1076 5 view .LVU916
1077:SYS/task_manager/task_manager.c **** }
 3313              		.loc 1 1077 1 is_stmt 0 view .LVU917
 3314 0000 014B     		ldr	r3, .L203
 3315 0002 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccUTxatF.s 			page 118


 3316 0004 7047     		bx	lr
 3317              	.L204:
 3318 0006 00BF     		.align	2
 3319              	.L203:
 3320 0008 00000000 		.word	.LANCHOR4
 3321              		.cfi_endproc
 3322              	.LFE170:
 3324              		.section	.text.Task_Statistic_Cast,"ax",%progbits
 3325              		.align	1
 3326              		.global	Task_Statistic_Cast
 3327              		.syntax unified
 3328              		.thumb
 3329              		.thumb_func
 3330              		.fpu fpv4-sp-d16
 3332              	Task_Statistic_Cast:
 3333              	.LVL188:
 3334              	.LFB171:
1078:SYS/task_manager/task_manager.c **** 
1079:SYS/task_manager/task_manager.c **** void Task_Statistic_Cast(uint32_t time_base)
1080:SYS/task_manager/task_manager.c **** {
 3335              		.loc 1 1080 1 is_stmt 1 view -0
 3336              		.cfi_startproc
 3337              		@ args = 0, pretend = 0, frame = 0
 3338              		@ frame_needed = 0, uses_anonymous_args = 0
 3339              		@ link register save eliminated.
1081:SYS/task_manager/task_manager.c ****     if ((CurRunTsk_Ptr != NULL) && (CurRunTsk_Ptr->Exec_status.State == Task_Running))
 3340              		.loc 1 1081 5 view .LVU919
 3341              		.loc 1 1081 24 is_stmt 0 view .LVU920
 3342 0000 064B     		ldr	r3, .L208
 3343 0002 1B68     		ldr	r3, [r3]
 3344              		.loc 1 1081 8 view .LVU921
 3345 0004 23B1     		cbz	r3, .L205
 3346              		.loc 1 1081 63 discriminator 1 view .LVU922
 3347 0006 93F84820 		ldrb	r2, [r3, #72]	@ zero_extendqisi2
 3348 000a D2B2     		uxtb	r2, r2
 3349              		.loc 1 1081 33 discriminator 1 view .LVU923
 3350 000c 012A     		cmp	r2, #1
 3351 000e 00D0     		beq	.L207
 3352              	.LVL189:
 3353              	.L205:
1082:SYS/task_manager/task_manager.c ****     {
1083:SYS/task_manager/task_manager.c ****         CurRunTsk_Ptr->TskFuncUing_US += time_base;
1084:SYS/task_manager/task_manager.c ****     }
1085:SYS/task_manager/task_manager.c **** }
 3354              		.loc 1 1085 1 view .LVU924
 3355 0010 7047     		bx	lr
 3356              	.LVL190:
 3357              	.L207:
1083:SYS/task_manager/task_manager.c ****     }
 3358              		.loc 1 1083 9 is_stmt 1 view .LVU925
1083:SYS/task_manager/task_manager.c ****     }
 3359              		.loc 1 1083 39 is_stmt 0 view .LVU926
 3360 0012 9A6D     		ldr	r2, [r3, #88]
 3361 0014 1044     		add	r0, r0, r2
 3362              	.LVL191:
1083:SYS/task_manager/task_manager.c ****     }
 3363              		.loc 1 1083 39 view .LVU927
ARM GAS  /tmp/ccUTxatF.s 			page 119


 3364 0016 9865     		str	r0, [r3, #88]
 3365              		.loc 1 1085 1 view .LVU928
 3366 0018 FAE7     		b	.L205
 3367              	.L209:
 3368 001a 00BF     		.align	2
 3369              	.L208:
 3370 001c 00000000 		.word	.LANCHOR4
 3371              		.cfi_endproc
 3372              	.LFE171:
 3374              		.section	.text.Task_GetStackRemain,"ax",%progbits
 3375              		.align	1
 3376              		.global	Task_GetStackRemain
 3377              		.syntax unified
 3378              		.thumb
 3379              		.thumb_func
 3380              		.fpu fpv4-sp-d16
 3382              	Task_GetStackRemain:
 3383              	.LVL192:
 3384              	.LFB172:
1086:SYS/task_manager/task_manager.c **** 
1087:SYS/task_manager/task_manager.c **** uint32_t Task_GetStackRemain(const Task_Handler hdl)
1088:SYS/task_manager/task_manager.c **** {
 3385              		.loc 1 1088 1 is_stmt 1 view -0
 3386              		.cfi_startproc
 3387              		@ args = 0, pretend = 0, frame = 0
 3388              		@ frame_needed = 0, uses_anonymous_args = 0
 3389              		@ link register save eliminated.
1089:SYS/task_manager/task_manager.c ****     uint32_t remain_size = 0;
 3390              		.loc 1 1089 5 view .LVU930
1090:SYS/task_manager/task_manager.c **** 
1091:SYS/task_manager/task_manager.c ****     __asm("cpsid i");
 3391              		.loc 1 1091 5 view .LVU931
 3392              		.syntax unified
 3393              	@ 1091 "SYS/task_manager/task_manager.c" 1
 3394 0000 72B6     		cpsid i
 3395              	@ 0 "" 2
1092:SYS/task_manager/task_manager.c **** 
1093:SYS/task_manager/task_manager.c ****     while ((uint8_t)(((Task *)hdl)->TCB.Stack + remain_size) == TASK_STACK_DEFAULT)
 3396              		.loc 1 1093 5 view .LVU932
1089:SYS/task_manager/task_manager.c **** 
 3397              		.loc 1 1089 14 is_stmt 0 view .LVU933
 3398              		.thumb
 3399              		.syntax unified
 3400 0002 0022     		movs	r2, #0
 3401              	.LVL193:
 3402              	.L211:
 3403              		.loc 1 1093 40 view .LVU934
 3404 0004 436D     		ldr	r3, [r0, #84]
 3405              		.loc 1 1093 47 view .LVU935
 3406 0006 03EB8203 		add	r3, r3, r2, lsl #2
 3407              		.loc 1 1093 12 view .LVU936
 3408 000a DBB2     		uxtb	r3, r3
 3409              		.loc 1 1093 11 view .LVU937
 3410 000c 8B2B     		cmp	r3, #139
 3411 000e 01D1     		bne	.L213
1094:SYS/task_manager/task_manager.c ****     {
1095:SYS/task_manager/task_manager.c ****         remain_size++;
ARM GAS  /tmp/ccUTxatF.s 			page 120


 3412              		.loc 1 1095 9 is_stmt 1 view .LVU938
 3413              		.loc 1 1095 20 is_stmt 0 view .LVU939
 3414 0010 0132     		adds	r2, r2, #1
 3415              	.LVL194:
 3416              		.loc 1 1095 20 view .LVU940
 3417 0012 F7E7     		b	.L211
 3418              	.L213:
1096:SYS/task_manager/task_manager.c ****     }
1097:SYS/task_manager/task_manager.c **** 
1098:SYS/task_manager/task_manager.c ****     __asm("cpsie i");
 3419              		.loc 1 1098 5 is_stmt 1 view .LVU941
 3420              		.syntax unified
 3421              	@ 1098 "SYS/task_manager/task_manager.c" 1
 3422 0014 62B6     		cpsie i
 3423              	@ 0 "" 2
1099:SYS/task_manager/task_manager.c **** 
1100:SYS/task_manager/task_manager.c ****     return (remain_size / 4);
 3424              		.loc 1 1100 5 view .LVU942
1101:SYS/task_manager/task_manager.c **** }
 3425              		.loc 1 1101 1 is_stmt 0 view .LVU943
 3426              		.thumb
 3427              		.syntax unified
 3428 0016 9008     		lsrs	r0, r2, #2
 3429              	.LVL195:
 3430              		.loc 1 1101 1 view .LVU944
 3431 0018 7047     		bx	lr
 3432              		.cfi_endproc
 3433              	.LFE172:
 3435              		.comm	Task_OS_ExpStkBase,4,4
 3436              		.comm	NxtTsk_TCB,8,4
 3437              		.comm	CurTsk_TCB,8,4
 3438              		.global	PndHstTsk_Ptr
 3439              		.global	NxtRunTsk_Ptr
 3440              		.global	CurRunTsk_Ptr
 3441              		.comm	Task_Ptr,256,4
 3442              		.section	.bss.CurRunTsk_Ptr,"aw",%nobits
 3443              		.align	2
 3444              		.set	.LANCHOR4,. + 0
 3447              	CurRunTsk_Ptr:
 3448 0000 00000000 		.space	4
 3449              		.section	.bss.NxtRunTsk_Ptr,"aw",%nobits
 3450              		.align	2
 3451              		.set	.LANCHOR9,. + 0
 3454              	NxtRunTsk_Ptr:
 3455 0000 00000000 		.space	4
 3456              		.section	.bss.PndHstTsk_Ptr,"aw",%nobits
 3457              		.align	2
 3458              		.set	.LANCHOR13,. + 0
 3461              	PndHstTsk_Ptr:
 3462 0000 00000000 		.space	4
 3463              		.section	.bss.TaskSys_Idle_Ocupy,"aw",%nobits
 3464              		.align	2
 3465              		.set	.LANCHOR8,. + 0
 3468              	TaskSys_Idle_Ocupy:
 3469 0000 00000000 		.space	4
 3470              		.section	.bss.TaskSys_Idle_US,"aw",%nobits
 3471              		.align	2
ARM GAS  /tmp/ccUTxatF.s 			page 121


 3472              		.set	.LANCHOR7,. + 0
 3475              	TaskSys_Idle_US:
 3476 0000 00000000 		.space	4
 3477              		.section	.bss.TaskSys_StartTime,"aw",%nobits
 3478              		.align	3
 3479              		.set	.LANCHOR6,. + 0
 3482              	TaskSys_StartTime:
 3483 0000 00000000 		.space	8
 3483      00000000 
 3484              		.section	.bss.Task_OS_StkMem,"aw",%nobits
 3485              		.align	2
 3488              	Task_OS_StkMem:
 3489 0000 00000000 		.space	40960
 3489      00000000 
 3489      00000000 
 3489      00000000 
 3489      00000000 
 3490              		.section	.bss.TskCrt_RegList,"aw",%nobits
 3491              		.align	2
 3492              		.set	.LANCHOR3,. + 0
 3495              	TskCrt_RegList:
 3496 0000 00000000 		.space	24
 3496      00000000 
 3496      00000000 
 3496      00000000 
 3496      00000000 
 3497              		.section	.bss.TskHdl_BlkMap,"aw",%nobits
 3498              		.align	2
 3499              		.set	.LANCHOR1,. + 0
 3502              	TskHdl_BlkMap:
 3503 0000 00000000 		.space	9
 3503      00000000 
 3503      00
 3504              		.section	.bss.TskHdl_PndMap,"aw",%nobits
 3505              		.align	2
 3506              		.set	.LANCHOR2,. + 0
 3509              	TskHdl_PndMap:
 3510 0000 00000000 		.space	9
 3510      00000000 
 3510      00
 3511              		.section	.bss.TskHdl_RdyMap,"aw",%nobits
 3512              		.align	2
 3513              		.set	.LANCHOR0,. + 0
 3516              	TskHdl_RdyMap:
 3517 0000 00000000 		.space	9
 3517      00000000 
 3517      00
 3518              		.section	.bss.TskSys_state,"aw",%nobits
 3519              		.set	.LANCHOR5,. + 0
 3522              	TskSys_state:
 3523 0000 00       		.space	1
 3524              		.section	.bss.i.11589,"aw",%nobits
 3525              		.set	.LANCHOR10,. + 0
 3528              	i.11589:
 3529 0000 00       		.space	1
 3530              		.section	.bss.taskOs_InitState.11558,"aw",%nobits
 3531              		.set	.LANCHOR14,. + 0
ARM GAS  /tmp/ccUTxatF.s 			page 122


 3534              	taskOs_InitState.11558:
 3535 0000 00       		.space	1
 3536              		.section	.bss.traverse_start,"aw",%nobits
 3537              		.set	.LANCHOR11,. + 0
 3540              	traverse_start:
 3541 0000 00       		.space	1
 3542              		.section	.rodata.Tsk_Handle,"a"
 3543              		.align	2
 3544              		.set	.LANCHOR12,. + 0
 3547              	Tsk_Handle:
 3548 0000 00       		.byte	0
 3549 0001 00       		.byte	0
 3550 0002 01       		.byte	1
 3551 0003 00       		.byte	0
 3552 0004 02       		.byte	2
 3553 0005 00       		.byte	0
 3554 0006 01       		.byte	1
 3555 0007 00       		.byte	0
 3556 0008 03       		.byte	3
 3557 0009 00       		.byte	0
 3558 000a 01       		.byte	1
 3559 000b 00       		.byte	0
 3560 000c 02       		.byte	2
 3561 000d 00       		.byte	0
 3562 000e 01       		.byte	1
 3563 000f 00       		.byte	0
 3564 0010 04       		.byte	4
 3565 0011 00       		.byte	0
 3566 0012 01       		.byte	1
 3567 0013 00       		.byte	0
 3568 0014 02       		.byte	2
 3569 0015 00       		.byte	0
 3570 0016 01       		.byte	1
 3571 0017 00       		.byte	0
 3572 0018 03       		.byte	3
 3573 0019 00       		.byte	0
 3574 001a 01       		.byte	1
 3575 001b 00       		.byte	0
 3576 001c 02       		.byte	2
 3577 001d 00       		.byte	0
 3578 001e 01       		.byte	1
 3579 001f 00       		.byte	0
 3580 0020 05       		.byte	5
 3581 0021 00       		.byte	0
 3582 0022 01       		.byte	1
 3583 0023 00       		.byte	0
 3584 0024 02       		.byte	2
 3585 0025 00       		.byte	0
 3586 0026 01       		.byte	1
 3587 0027 00       		.byte	0
 3588 0028 03       		.byte	3
 3589 0029 00       		.byte	0
 3590 002a 01       		.byte	1
 3591 002b 00       		.byte	0
 3592 002c 02       		.byte	2
 3593 002d 00       		.byte	0
 3594 002e 01       		.byte	1
ARM GAS  /tmp/ccUTxatF.s 			page 123


 3595 002f 00       		.byte	0
 3596 0030 04       		.byte	4
 3597 0031 00       		.byte	0
 3598 0032 01       		.byte	1
 3599 0033 00       		.byte	0
 3600 0034 02       		.byte	2
 3601 0035 00       		.byte	0
 3602 0036 01       		.byte	1
 3603 0037 00       		.byte	0
 3604 0038 03       		.byte	3
 3605 0039 00       		.byte	0
 3606 003a 01       		.byte	1
 3607 003b 00       		.byte	0
 3608 003c 02       		.byte	2
 3609 003d 00       		.byte	0
 3610 003e 01       		.byte	1
 3611 003f 00       		.byte	0
 3612 0040 06       		.byte	6
 3613 0041 00       		.byte	0
 3614 0042 01       		.byte	1
 3615 0043 00       		.byte	0
 3616 0044 02       		.byte	2
 3617 0045 00       		.byte	0
 3618 0046 01       		.byte	1
 3619 0047 00       		.byte	0
 3620 0048 03       		.byte	3
 3621 0049 00       		.byte	0
 3622 004a 01       		.byte	1
 3623 004b 00       		.byte	0
 3624 004c 02       		.byte	2
 3625 004d 00       		.byte	0
 3626 004e 01       		.byte	1
 3627 004f 00       		.byte	0
 3628 0050 04       		.byte	4
 3629 0051 00       		.byte	0
 3630 0052 01       		.byte	1
 3631 0053 00       		.byte	0
 3632 0054 02       		.byte	2
 3633 0055 00       		.byte	0
 3634 0056 01       		.byte	1
 3635 0057 00       		.byte	0
 3636 0058 03       		.byte	3
 3637 0059 00       		.byte	0
 3638 005a 01       		.byte	1
 3639 005b 00       		.byte	0
 3640 005c 02       		.byte	2
 3641 005d 00       		.byte	0
 3642 005e 01       		.byte	1
 3643 005f 00       		.byte	0
 3644 0060 05       		.byte	5
 3645 0061 00       		.byte	0
 3646 0062 01       		.byte	1
 3647 0063 00       		.byte	0
 3648 0064 02       		.byte	2
 3649 0065 00       		.byte	0
 3650 0066 01       		.byte	1
 3651 0067 00       		.byte	0
ARM GAS  /tmp/ccUTxatF.s 			page 124


 3652 0068 03       		.byte	3
 3653 0069 00       		.byte	0
 3654 006a 01       		.byte	1
 3655 006b 00       		.byte	0
 3656 006c 02       		.byte	2
 3657 006d 00       		.byte	0
 3658 006e 01       		.byte	1
 3659 006f 00       		.byte	0
 3660 0070 04       		.byte	4
 3661 0071 00       		.byte	0
 3662 0072 01       		.byte	1
 3663 0073 00       		.byte	0
 3664 0074 02       		.byte	2
 3665 0075 00       		.byte	0
 3666 0076 01       		.byte	1
 3667 0077 00       		.byte	0
 3668 0078 03       		.byte	3
 3669 0079 00       		.byte	0
 3670 007a 01       		.byte	1
 3671 007b 00       		.byte	0
 3672 007c 02       		.byte	2
 3673 007d 00       		.byte	0
 3674 007e 01       		.byte	1
 3675 007f 00       		.byte	0
 3676 0080 07       		.byte	7
 3677 0081 00       		.byte	0
 3678 0082 01       		.byte	1
 3679 0083 00       		.byte	0
 3680 0084 02       		.byte	2
 3681 0085 00       		.byte	0
 3682 0086 01       		.byte	1
 3683 0087 00       		.byte	0
 3684 0088 03       		.byte	3
 3685 0089 00       		.byte	0
 3686 008a 01       		.byte	1
 3687 008b 00       		.byte	0
 3688 008c 02       		.byte	2
 3689 008d 00       		.byte	0
 3690 008e 01       		.byte	1
 3691 008f 00       		.byte	0
 3692 0090 04       		.byte	4
 3693 0091 00       		.byte	0
 3694 0092 01       		.byte	1
 3695 0093 00       		.byte	0
 3696 0094 02       		.byte	2
 3697 0095 00       		.byte	0
 3698 0096 01       		.byte	1
 3699 0097 00       		.byte	0
 3700 0098 03       		.byte	3
 3701 0099 00       		.byte	0
 3702 009a 01       		.byte	1
 3703 009b 00       		.byte	0
 3704 009c 02       		.byte	2
 3705 009d 00       		.byte	0
 3706 009e 01       		.byte	1
 3707 009f 00       		.byte	0
 3708 00a0 05       		.byte	5
ARM GAS  /tmp/ccUTxatF.s 			page 125


 3709 00a1 00       		.byte	0
 3710 00a2 01       		.byte	1
 3711 00a3 00       		.byte	0
 3712 00a4 02       		.byte	2
 3713 00a5 00       		.byte	0
 3714 00a6 01       		.byte	1
 3715 00a7 00       		.byte	0
 3716 00a8 03       		.byte	3
 3717 00a9 00       		.byte	0
 3718 00aa 01       		.byte	1
 3719 00ab 00       		.byte	0
 3720 00ac 02       		.byte	2
 3721 00ad 00       		.byte	0
 3722 00ae 01       		.byte	1
 3723 00af 00       		.byte	0
 3724 00b0 04       		.byte	4
 3725 00b1 00       		.byte	0
 3726 00b2 01       		.byte	1
 3727 00b3 00       		.byte	0
 3728 00b4 02       		.byte	2
 3729 00b5 00       		.byte	0
 3730 00b6 01       		.byte	1
 3731 00b7 00       		.byte	0
 3732 00b8 03       		.byte	3
 3733 00b9 00       		.byte	0
 3734 00ba 01       		.byte	1
 3735 00bb 00       		.byte	0
 3736 00bc 02       		.byte	2
 3737 00bd 00       		.byte	0
 3738 00be 01       		.byte	1
 3739 00bf 00       		.byte	0
 3740 00c0 06       		.byte	6
 3741 00c1 00       		.byte	0
 3742 00c2 01       		.byte	1
 3743 00c3 00       		.byte	0
 3744 00c4 02       		.byte	2
 3745 00c5 00       		.byte	0
 3746 00c6 01       		.byte	1
 3747 00c7 00       		.byte	0
 3748 00c8 03       		.byte	3
 3749 00c9 00       		.byte	0
 3750 00ca 01       		.byte	1
 3751 00cb 00       		.byte	0
 3752 00cc 02       		.byte	2
 3753 00cd 00       		.byte	0
 3754 00ce 01       		.byte	1
 3755 00cf 00       		.byte	0
 3756 00d0 04       		.byte	4
 3757 00d1 00       		.byte	0
 3758 00d2 01       		.byte	1
 3759 00d3 00       		.byte	0
 3760 00d4 02       		.byte	2
 3761 00d5 00       		.byte	0
 3762 00d6 01       		.byte	1
 3763 00d7 00       		.byte	0
 3764 00d8 03       		.byte	3
 3765 00d9 00       		.byte	0
ARM GAS  /tmp/ccUTxatF.s 			page 126


 3766 00da 01       		.byte	1
 3767 00db 00       		.byte	0
 3768 00dc 02       		.byte	2
 3769 00dd 00       		.byte	0
 3770 00de 01       		.byte	1
 3771 00df 00       		.byte	0
 3772 00e0 05       		.byte	5
 3773 00e1 00       		.byte	0
 3774 00e2 01       		.byte	1
 3775 00e3 00       		.byte	0
 3776 00e4 02       		.byte	2
 3777 00e5 00       		.byte	0
 3778 00e6 01       		.byte	1
 3779 00e7 00       		.byte	0
 3780 00e8 03       		.byte	3
 3781 00e9 00       		.byte	0
 3782 00ea 01       		.byte	1
 3783 00eb 00       		.byte	0
 3784 00ec 02       		.byte	2
 3785 00ed 00       		.byte	0
 3786 00ee 01       		.byte	1
 3787 00ef 00       		.byte	0
 3788 00f0 04       		.byte	4
 3789 00f1 00       		.byte	0
 3790 00f2 01       		.byte	1
 3791 00f3 00       		.byte	0
 3792 00f4 02       		.byte	2
 3793 00f5 00       		.byte	0
 3794 00f6 01       		.byte	1
 3795 00f7 00       		.byte	0
 3796 00f8 03       		.byte	3
 3797 00f9 00       		.byte	0
 3798 00fa 01       		.byte	1
 3799 00fb 00       		.byte	0
 3800 00fc 02       		.byte	2
 3801 00fd 00       		.byte	0
 3802 00fe 01       		.byte	1
 3803 00ff 00       		.byte	0
 3804              		.text
 3805              	.Letext0:
 3806              		.file 3 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 3807              		.file 4 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 3808              		.file 5 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 3809              		.file 6 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 3810              		.file 7 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 3811              		.file 8 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 3812              		.file 9 "SYS/runtime/runtime.h"
 3813              		.file 10 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8
 3814              		.file 11 "SYS/data_structure/linked_list.h"
 3815              		.file 12 "SYS/task_manager/task_manager.h"
 3816              		.file 13 "USER/stm32f4xx.h"
 3817              		.file 14 "USER/system_stm32f4xx.h"
 3818              		.file 15 "Bsp/periph_timer.h"
 3819              		.file 16 "SYS/memng/mmu.h"
 3820              		.file 17 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8
 3821              		.file 18 "<built-in>"
ARM GAS  /tmp/ccUTxatF.s 			page 127


DEFINED SYMBOLS
                            *ABS*:0000000000000000 task_manager.c
     /tmp/ccUTxatF.s:18     .text.Task_Exit:0000000000000000 $t
     /tmp/ccUTxatF.s:25     .text.Task_Exit:0000000000000000 Task_Exit
     /tmp/ccUTxatF.s:42     .text.Task_SetBASEPRI:0000000000000000 $t
     /tmp/ccUTxatF.s:48     .text.Task_SetBASEPRI:0000000000000000 Task_SetBASEPRI
     /tmp/ccUTxatF.s:69     .text.Task_SetReady:0000000000000000 $t
     /tmp/ccUTxatF.s:75     .text.Task_SetReady:0000000000000000 Task_SetReady
     /tmp/ccUTxatF.s:139    .text.Task_SetReady:0000000000000030 $d
     /tmp/ccUTxatF.s:144    .text.Task_ClearBlock:0000000000000000 $t
     /tmp/ccUTxatF.s:150    .text.Task_ClearBlock:0000000000000000 Task_ClearBlock
     /tmp/ccUTxatF.s:213    .text.Task_ClearBlock:0000000000000034 $d
     /tmp/ccUTxatF.s:218    .text.Task_ClearPending:0000000000000000 $t
     /tmp/ccUTxatF.s:224    .text.Task_ClearPending:0000000000000000 Task_ClearPending
     /tmp/ccUTxatF.s:287    .text.Task_ClearPending:0000000000000034 $d
     /tmp/ccUTxatF.s:292    .text.Task_ClearReady:0000000000000000 $t
     /tmp/ccUTxatF.s:298    .text.Task_ClearReady:0000000000000000 Task_ClearReady
     /tmp/ccUTxatF.s:361    .text.Task_ClearReady:0000000000000034 $d
     /tmp/ccUTxatF.s:366    .text.Task_SetPendSVPro:0000000000000000 $t
     /tmp/ccUTxatF.s:372    .text.Task_SetPendSVPro:0000000000000000 Task_SetPendSVPro
     /tmp/ccUTxatF.s:382    *ABS*:00000000e000ed22 NVIC_SYSPRI14
     /tmp/ccUTxatF.s:386    *ABS*:00000000000000ff NVIC_PENDSV_PRI
                            *COM*:0000000000000004 Task_OS_ExpStkBase
     /tmp/ccUTxatF.s:431    .text.Task_PriorityCompare:0000000000000000 $t
     /tmp/ccUTxatF.s:438    .text.Task_PriorityCompare:0000000000000000 Task_PriorityCompare
     /tmp/ccUTxatF.s:568    .text.ReSet_Task_Data:0000000000000000 $t
     /tmp/ccUTxatF.s:574    .text.ReSet_Task_Data:0000000000000000 ReSet_Task_Data
     /tmp/ccUTxatF.s:667    .text.TaskSys_Init:0000000000000000 $t
     /tmp/ccUTxatF.s:673    .text.TaskSys_Init:0000000000000000 TaskSys_Init
     /tmp/ccUTxatF.s:813    .text.TaskSys_Init:0000000000000078 $d
     /tmp/ccUTxatF.s:3488   .bss.Task_OS_StkMem:0000000000000000 Task_OS_StkMem
                            *COM*:0000000000000100 Task_Ptr
     /tmp/ccUTxatF.s:825    .text.Task_SetStkPtr_Val:0000000000000000 $t
     /tmp/ccUTxatF.s:831    .text.Task_SetStkPtr_Val:0000000000000000 Task_SetStkPtr_Val
     /tmp/ccUTxatF.s:920    .text.Task_SetStkPtr_Val:0000000000000050 $d
     /tmp/ccUTxatF.s:1213   .text.Task_Caller:0000000000000000 Task_Caller
     /tmp/ccUTxatF.s:927    .text.Task_Idle:0000000000000000 $t
     /tmp/ccUTxatF.s:933    .text.Task_Idle:0000000000000000 Task_Idle
     /tmp/ccUTxatF.s:998    .text.Task_Idle:000000000000004c $d
     /tmp/ccUTxatF.s:1005   .text.Task_Exec:0000000000000000 $t
     /tmp/ccUTxatF.s:1011   .text.Task_Exec:0000000000000000 Task_Exec
     /tmp/ccUTxatF.s:1199   .text.Task_Exec:00000000000000d8 $d
     /tmp/ccUTxatF.s:1206   .text.Task_Caller:0000000000000000 $t
     /tmp/ccUTxatF.s:1262   .text.Task_Caller:0000000000000028 $d
     /tmp/ccUTxatF.s:1270   .text.Task_CrtList_TraversePoll_callback:0000000000000000 $t
     /tmp/ccUTxatF.s:1276   .text.Task_CrtList_TraversePoll_callback:0000000000000000 Task_CrtList_TraversePoll_callback
     /tmp/ccUTxatF.s:1346   .text.Task_CrtList_TraversePoll_callback:0000000000000034 $d
     /tmp/ccUTxatF.s:1351   .text.Task_Resume_FromBlock:0000000000000000 $t
     /tmp/ccUTxatF.s:1358   .text.Task_Resume_FromBlock:0000000000000000 Task_Resume_FromBlock
     /tmp/ccUTxatF.s:1405   .text.Task_Resume_FromBlock:0000000000000028 $d
                            *COM*:0000000000000008 NxtTsk_TCB
     /tmp/ccUTxatF.s:1411   .text.Task_SetBlock:0000000000000000 $t
     /tmp/ccUTxatF.s:1418   .text.Task_SetBlock:0000000000000000 Task_SetBlock
     /tmp/ccUTxatF.s:1506   .text.Task_SetBlock:0000000000000058 $d
     /tmp/ccUTxatF.s:1513   .text.Task_SetPending:0000000000000000 $t
     /tmp/ccUTxatF.s:1520   .text.Task_SetPending:0000000000000000 Task_SetPending
     /tmp/ccUTxatF.s:1584   .text.Task_SetPending:0000000000000030 $d
ARM GAS  /tmp/ccUTxatF.s 			page 128


     /tmp/ccUTxatF.s:1589   .text.Task_SwitchStack:0000000000000000 $t
     /tmp/ccUTxatF.s:1596   .text.Task_SwitchStack:0000000000000000 Task_SwitchStack
     /tmp/ccUTxatF.s:1614   .text.Task_SwitchStack:0000000000000010 $d
                            *COM*:0000000000000008 CurTsk_TCB
     /tmp/ccUTxatF.s:1620   .text.Task_Get_HighestRank_PndTask:0000000000000000 $t
     /tmp/ccUTxatF.s:1627   .text.Task_Get_HighestRank_PndTask:0000000000000000 Task_Get_HighestRank_PndTask
     /tmp/ccUTxatF.s:1709   .text.Task_Get_HighestRank_PndTask:0000000000000050 $d
     /tmp/ccUTxatF.s:1716   .text.Task_SaveCurProc:0000000000000000 $t
     /tmp/ccUTxatF.s:1723   .text.Task_SaveCurProc:0000000000000000 Task_SaveCurProc
     /tmp/ccUTxatF.s:1777   .text.Task_SaveCurProc:0000000000000024 CurrentTCBConst_Tmp3
     /tmp/ccUTxatF.s:1777   .text.Task_SaveCurProc:0000000000000024 $d
     /tmp/ccUTxatF.s:1786   .text.Task_Load:0000000000000000 $t
     /tmp/ccUTxatF.s:1793   .text.Task_Load:0000000000000000 Task_Load
     /tmp/ccUTxatF.s:1852   .text.Load_FirstTask:0000000000000000 $t
     /tmp/ccUTxatF.s:1859   .text.Load_FirstTask:0000000000000000 Load_FirstTask
     /tmp/ccUTxatF.s:1879   .text.Task_SwitchContext:0000000000000000 $t
     /tmp/ccUTxatF.s:1886   .text.Task_SwitchContext:0000000000000000 Task_SwitchContext
     /tmp/ccUTxatF.s:2004   .text.Task_SwitchContext:000000000000005c CurrentTCBConst_Tmp
     /tmp/ccUTxatF.s:2004   .text.Task_SwitchContext:000000000000005c $d
     /tmp/ccUTxatF.s:2017   .text.Task_Get_HighestRank_RdyTask:0000000000000000 $t
     /tmp/ccUTxatF.s:2024   .text.Task_Get_HighestRank_RdyTask:0000000000000000 Task_Get_HighestRank_RdyTask
     /tmp/ccUTxatF.s:2110   .text.Task_Get_HighestRank_RdyTask:0000000000000050 $d
     /tmp/ccUTxatF.s:2117   .text.Task_SetNextTask_Ptr:0000000000000000 $t
     /tmp/ccUTxatF.s:2124   .text.Task_SetNextTask_Ptr:0000000000000000 Task_SetNextTask_Ptr
     /tmp/ccUTxatF.s:2156   .text.Task_SetNextTask_Ptr:0000000000000014 $d
     /tmp/ccUTxatF.s:2162   .text.Task_TriggerPendSV:0000000000000000 $t
     /tmp/ccUTxatF.s:2169   .text.Task_TriggerPendSV:0000000000000000 Task_TriggerPendSV
     /tmp/ccUTxatF.s:2179   *ABS*:00000000e000ed04 NVIC_INT_CTRL
     /tmp/ccUTxatF.s:2183   *ABS*:0000000010000000 NVIC_PENDSVSET
     /tmp/ccUTxatF.s:2208   .text.Task_Scheduler:0000000000000000 $t
     /tmp/ccUTxatF.s:2215   .text.Task_Scheduler:0000000000000000 Task_Scheduler
     /tmp/ccUTxatF.s:2517   .text.Task_Scheduler:0000000000000148 $d
     /tmp/ccUTxatF.s:2529   .text.Task_Force_TriggerPendSV:0000000000000000 $t
     /tmp/ccUTxatF.s:2536   .text.Task_Force_TriggerPendSV:0000000000000000 Task_Force_TriggerPendSV
     /tmp/ccUTxatF.s:2567   .text.Task_Get_TaskNum:0000000000000000 $t
     /tmp/ccUTxatF.s:2574   .text.Task_Get_TaskNum:0000000000000000 Task_Get_TaskNum
     /tmp/ccUTxatF.s:2589   .text.Task_Get_TaskNum:0000000000000008 $d
     /tmp/ccUTxatF.s:2597   .text.Task_Create:0000000000000000 $t
     /tmp/ccUTxatF.s:2604   .text.Task_Create:0000000000000000 Task_Create
     /tmp/ccUTxatF.s:2964   .text.Task_Create:00000000000001e8 $d
     /tmp/ccUTxatF.s:2976   .text.Task_Remove:0000000000000000 $t
     /tmp/ccUTxatF.s:2983   .text.Task_Remove:0000000000000000 Task_Remove
     /tmp/ccUTxatF.s:3039   .text.Task_Remove:0000000000000030 $d
     /tmp/ccUTxatF.s:3044   .text.TaskSystem_Start:0000000000000000 $t
     /tmp/ccUTxatF.s:3051   .text.TaskSystem_Start:0000000000000000 TaskSystem_Start
     /tmp/ccUTxatF.s:3131   .text.TaskSystem_Start:000000000000005c $d
     /tmp/ccUTxatF.s:3140   .text.Task_SetRunState:0000000000000000 $t
     /tmp/ccUTxatF.s:3147   .text.Task_SetRunState:0000000000000000 Task_SetRunState
     /tmp/ccUTxatF.s:3164   .text.Task_Get_IdleUS:0000000000000000 $t
     /tmp/ccUTxatF.s:3171   .text.Task_Get_IdleUS:0000000000000000 Task_Get_IdleUS
     /tmp/ccUTxatF.s:3186   .text.Task_Get_IdleUS:0000000000000008 $d
     /tmp/ccUTxatF.s:3191   .text.Task_Get_IdleOcupy:0000000000000000 $t
     /tmp/ccUTxatF.s:3198   .text.Task_Get_IdleOcupy:0000000000000000 Task_Get_IdleOcupy
     /tmp/ccUTxatF.s:3213   .text.Task_Get_IdleOcupy:0000000000000008 $d
     /tmp/ccUTxatF.s:3218   .text.TaskSys_Set_State:0000000000000000 $t
     /tmp/ccUTxatF.s:3225   .text.TaskSys_Set_State:0000000000000000 TaskSys_Set_State
     /tmp/ccUTxatF.s:3242   .text.TaskSys_Set_State:0000000000000008 $d
ARM GAS  /tmp/ccUTxatF.s 			page 129


     /tmp/ccUTxatF.s:3247   .text.TaskSys_Get_State:0000000000000000 $t
     /tmp/ccUTxatF.s:3254   .text.TaskSys_Get_State:0000000000000000 TaskSys_Get_State
     /tmp/ccUTxatF.s:3270   .text.TaskSys_Get_State:0000000000000008 $d
     /tmp/ccUTxatF.s:3275   .text.Task_GetInfo_ByIndex:0000000000000000 $t
     /tmp/ccUTxatF.s:3282   .text.Task_GetInfo_ByIndex:0000000000000000 Task_GetInfo_ByIndex
     /tmp/ccUTxatF.s:3298   .text.Task_GetCurrentRunTask:0000000000000000 $t
     /tmp/ccUTxatF.s:3305   .text.Task_GetCurrentRunTask:0000000000000000 Task_GetCurrentRunTask
     /tmp/ccUTxatF.s:3320   .text.Task_GetCurrentRunTask:0000000000000008 $d
     /tmp/ccUTxatF.s:3325   .text.Task_Statistic_Cast:0000000000000000 $t
     /tmp/ccUTxatF.s:3332   .text.Task_Statistic_Cast:0000000000000000 Task_Statistic_Cast
     /tmp/ccUTxatF.s:3370   .text.Task_Statistic_Cast:000000000000001c $d
     /tmp/ccUTxatF.s:3375   .text.Task_GetStackRemain:0000000000000000 $t
     /tmp/ccUTxatF.s:3382   .text.Task_GetStackRemain:0000000000000000 Task_GetStackRemain
     /tmp/ccUTxatF.s:3461   .bss.PndHstTsk_Ptr:0000000000000000 PndHstTsk_Ptr
     /tmp/ccUTxatF.s:3454   .bss.NxtRunTsk_Ptr:0000000000000000 NxtRunTsk_Ptr
     /tmp/ccUTxatF.s:3447   .bss.CurRunTsk_Ptr:0000000000000000 CurRunTsk_Ptr
     /tmp/ccUTxatF.s:3443   .bss.CurRunTsk_Ptr:0000000000000000 $d
     /tmp/ccUTxatF.s:3450   .bss.NxtRunTsk_Ptr:0000000000000000 $d
     /tmp/ccUTxatF.s:3457   .bss.PndHstTsk_Ptr:0000000000000000 $d
     /tmp/ccUTxatF.s:3464   .bss.TaskSys_Idle_Ocupy:0000000000000000 $d
     /tmp/ccUTxatF.s:3468   .bss.TaskSys_Idle_Ocupy:0000000000000000 TaskSys_Idle_Ocupy
     /tmp/ccUTxatF.s:3471   .bss.TaskSys_Idle_US:0000000000000000 $d
     /tmp/ccUTxatF.s:3475   .bss.TaskSys_Idle_US:0000000000000000 TaskSys_Idle_US
     /tmp/ccUTxatF.s:3478   .bss.TaskSys_StartTime:0000000000000000 $d
     /tmp/ccUTxatF.s:3482   .bss.TaskSys_StartTime:0000000000000000 TaskSys_StartTime
     /tmp/ccUTxatF.s:3485   .bss.Task_OS_StkMem:0000000000000000 $d
     /tmp/ccUTxatF.s:3491   .bss.TskCrt_RegList:0000000000000000 $d
     /tmp/ccUTxatF.s:3495   .bss.TskCrt_RegList:0000000000000000 TskCrt_RegList
     /tmp/ccUTxatF.s:3498   .bss.TskHdl_BlkMap:0000000000000000 $d
     /tmp/ccUTxatF.s:3502   .bss.TskHdl_BlkMap:0000000000000000 TskHdl_BlkMap
     /tmp/ccUTxatF.s:3505   .bss.TskHdl_PndMap:0000000000000000 $d
     /tmp/ccUTxatF.s:3509   .bss.TskHdl_PndMap:0000000000000000 TskHdl_PndMap
     /tmp/ccUTxatF.s:3512   .bss.TskHdl_RdyMap:0000000000000000 $d
     /tmp/ccUTxatF.s:3516   .bss.TskHdl_RdyMap:0000000000000000 TskHdl_RdyMap
     /tmp/ccUTxatF.s:3522   .bss.TskSys_state:0000000000000000 TskSys_state
     /tmp/ccUTxatF.s:3523   .bss.TskSys_state:0000000000000000 $d
     /tmp/ccUTxatF.s:3528   .bss.i.11589:0000000000000000 i.11589
     /tmp/ccUTxatF.s:3529   .bss.i.11589:0000000000000000 $d
     /tmp/ccUTxatF.s:3534   .bss.taskOs_InitState.11558:0000000000000000 taskOs_InitState.11558
     /tmp/ccUTxatF.s:3535   .bss.taskOs_InitState.11558:0000000000000000 $d
     /tmp/ccUTxatF.s:3540   .bss.traverse_start:0000000000000000 traverse_start
     /tmp/ccUTxatF.s:3541   .bss.traverse_start:0000000000000000 $d
     /tmp/ccUTxatF.s:3543   .rodata.Tsk_Handle:0000000000000000 $d
     /tmp/ccUTxatF.s:3547   .rodata.Tsk_Handle:0000000000000000 Tsk_Handle
     /tmp/ccUTxatF.s:2207   .text.Task_TriggerPendSV:000000000000000a $d
     /tmp/ccUTxatF.s:13613  .text.Task_TriggerPendSV:000000000000000c $d
     /tmp/ccUTxatF.s:13613  .text.Task_Load:0000000000000020 $d
     /tmp/ccUTxatF.s:13613  .text.Task_SetPendSVPro:0000000000000018 $d

UNDEFINED SYMBOLS
List_ItemInit
RuntimeObj_Reset
memset
__aeabi_ul2f
Get_CurrentRunningUs
Get_TimeDifference_Between
Get_TargetRunTime
ARM GAS  /tmp/ccUTxatF.s 			page 130


RuntimeObj_CompareWithCurrent
List_traverse
__aeabi_ui2d
__aeabi_ddiv
__aeabi_d2uiz
MMU_Malloc
List_Init
List_Insert_Item
MMU_Free
Runtime_Config
Runtime_Set_start_Callback
Runtime_Set_stop_Callback
Runtime_Set_tick_Callback
Runtime_Start
