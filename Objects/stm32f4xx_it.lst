ARM GAS  /tmp/ccsIRDdk.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB126:
  28              		.file 1 "USER/stm32f4xx_it.c"
   1:USER/stm32f4xx_it.c **** /**
   2:USER/stm32f4xx_it.c ****   ******************************************************************************
   3:USER/stm32f4xx_it.c ****   * @file    Project/STM32F4xx_StdPeriph_Templates/stm32f4xx_it.c 
   4:USER/stm32f4xx_it.c ****   * @author  MCD Application Team
   5:USER/stm32f4xx_it.c ****   * @version V1.8.0
   6:USER/stm32f4xx_it.c ****   * @date    04-November-2016
   7:USER/stm32f4xx_it.c ****   * @brief   Main Interrupt Service Routines.
   8:USER/stm32f4xx_it.c ****   *          This file provides template for all exceptions handler and 
   9:USER/stm32f4xx_it.c ****   *          peripherals interrupt service routine.
  10:USER/stm32f4xx_it.c ****   ******************************************************************************
  11:USER/stm32f4xx_it.c ****   * @attention
  12:USER/stm32f4xx_it.c ****   *
  13:USER/stm32f4xx_it.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
  14:USER/stm32f4xx_it.c ****   *
  15:USER/stm32f4xx_it.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  16:USER/stm32f4xx_it.c ****   * You may not use this file except in compliance with the License.
  17:USER/stm32f4xx_it.c ****   * You may obtain a copy of the License at:
  18:USER/stm32f4xx_it.c ****   *
  19:USER/stm32f4xx_it.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  20:USER/stm32f4xx_it.c ****   *
  21:USER/stm32f4xx_it.c ****   * Unless required by applicable law or agreed to in writing, software 
  22:USER/stm32f4xx_it.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  23:USER/stm32f4xx_it.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  24:USER/stm32f4xx_it.c ****   * See the License for the specific language governing permissions and
  25:USER/stm32f4xx_it.c ****   * limitations under the License.
  26:USER/stm32f4xx_it.c ****   *
  27:USER/stm32f4xx_it.c ****   ******************************************************************************
  28:USER/stm32f4xx_it.c ****   */
  29:USER/stm32f4xx_it.c **** 
  30:USER/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/ccsIRDdk.s 			page 2


  31:USER/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  32:USER/stm32f4xx_it.c **** #include "runtime.h"
  33:USER/stm32f4xx_it.c **** #include "task_manager.h"
  34:USER/stm32f4xx_it.c **** #include "fault_check.h"
  35:USER/stm32f4xx_it.c **** #include "periph_gpio.h"
  36:USER/stm32f4xx_it.c **** 
  37:USER/stm32f4xx_it.c **** /** @addtogroup Template_Project
  38:USER/stm32f4xx_it.c ****   * @{
  39:USER/stm32f4xx_it.c ****   */
  40:USER/stm32f4xx_it.c **** 
  41:USER/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  42:USER/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  43:USER/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  44:USER/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:USER/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  46:USER/stm32f4xx_it.c **** /* Private functions ---------------------------------------------------------*/
  47:USER/stm32f4xx_it.c **** 
  48:USER/stm32f4xx_it.c **** /******************************************************************************/
  49:USER/stm32f4xx_it.c **** /*            Cortex-M4 Processor Exceptions Handlers                         */
  50:USER/stm32f4xx_it.c **** /******************************************************************************/
  51:USER/stm32f4xx_it.c **** 
  52:USER/stm32f4xx_it.c **** /**
  53:USER/stm32f4xx_it.c ****   * @brief  This function handles NMI exception.
  54:USER/stm32f4xx_it.c ****   * @param  None
  55:USER/stm32f4xx_it.c ****   * @retval None
  56:USER/stm32f4xx_it.c ****   */
  57:USER/stm32f4xx_it.c **** void NMI_Handler(void)
  58:USER/stm32f4xx_it.c **** {
  29              		.loc 1 58 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  59:USER/stm32f4xx_it.c **** }
  34              		.loc 1 59 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE126:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB127:
  60:USER/stm32f4xx_it.c **** 
  61:USER/stm32f4xx_it.c **** /**
  62:USER/stm32f4xx_it.c ****   * @brief  This function handles Hard Fault exception.
  63:USER/stm32f4xx_it.c ****   * @param  None
  64:USER/stm32f4xx_it.c ****   * @retval None
  65:USER/stm32f4xx_it.c ****   */
  66:USER/stm32f4xx_it.c **** void HardFault_Handler(void)
  67:USER/stm32f4xx_it.c **** {
  49              		.loc 1 67 1 view -0
  50              		.cfi_startproc
ARM GAS  /tmp/ccsIRDdk.s 			page 3


  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 8
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54 0000 00B5     		push	{lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 4
  57              		.cfi_offset 14, -4
  58 0002 83B0     		sub	sp, sp, #12
  59              	.LCFI1:
  60              		.cfi_def_cfa_offset 16
  68:USER/stm32f4xx_it.c ****   volatile fault_item hardfault_reg;
  61              		.loc 1 68 3 view .LVU3
  69:USER/stm32f4xx_it.c ****   hardfault_reg.value = 0;
  62              		.loc 1 69 3 view .LVU4
  63              		.loc 1 69 23 is_stmt 0 view .LVU5
  64 0004 0023     		movs	r3, #0
  65 0006 8DF80430 		strb	r3, [sp, #4]
  70:USER/stm32f4xx_it.c **** 
  71:USER/stm32f4xx_it.c ****   hardfault_reg = Get_FaultReg_Value();
  66              		.loc 1 71 3 is_stmt 1 view .LVU6
  67              		.loc 1 71 19 is_stmt 0 view .LVU7
  68 000a FFF7FEFF 		bl	Get_FaultReg_Value
  69              	.LVL0:
  70 000e 8DF80400 		strb	r0, [sp, #4]
  71              	.L3:
  72:USER/stm32f4xx_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  73:USER/stm32f4xx_it.c ****   while (1)
  72              		.loc 1 73 3 is_stmt 1 discriminator 1 view .LVU8
  74:USER/stm32f4xx_it.c ****   {
  75:USER/stm32f4xx_it.c ****   }
  73              		.loc 1 75 3 discriminator 1 view .LVU9
  74 0012 FEE7     		b	.L3
  75              		.cfi_endproc
  76              	.LFE127:
  78              		.section	.text.MemManage_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	MemManage_Handler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv4-sp-d16
  86              	MemManage_Handler:
  87              	.LFB128:
  76:USER/stm32f4xx_it.c **** }
  77:USER/stm32f4xx_it.c **** 
  78:USER/stm32f4xx_it.c **** /**
  79:USER/stm32f4xx_it.c ****   * @brief  This function handles Memory Manage exception.
  80:USER/stm32f4xx_it.c ****   * @param  None
  81:USER/stm32f4xx_it.c ****   * @retval None
  82:USER/stm32f4xx_it.c ****   */
  83:USER/stm32f4xx_it.c **** void MemManage_Handler(void)
  84:USER/stm32f4xx_it.c **** {
  88              		.loc 1 84 1 view -0
  89              		.cfi_startproc
  90              		@ Volatile: function does not return.
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccsIRDdk.s 			page 4


  93              		@ link register save eliminated.
  94              	.L6:
  85:USER/stm32f4xx_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
  86:USER/stm32f4xx_it.c ****   while (1)
  95              		.loc 1 86 3 discriminator 1 view .LVU11
  87:USER/stm32f4xx_it.c ****   {
  88:USER/stm32f4xx_it.c ****   }
  96              		.loc 1 88 3 discriminator 1 view .LVU12
  97 0000 FEE7     		b	.L6
  98              		.cfi_endproc
  99              	.LFE128:
 101              		.section	.text.BusFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	BusFault_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	BusFault_Handler:
 110              	.LFB129:
  89:USER/stm32f4xx_it.c **** }
  90:USER/stm32f4xx_it.c **** 
  91:USER/stm32f4xx_it.c **** /**
  92:USER/stm32f4xx_it.c ****   * @brief  This function handles Bus Fault exception.
  93:USER/stm32f4xx_it.c ****   * @param  None
  94:USER/stm32f4xx_it.c ****   * @retval None
  95:USER/stm32f4xx_it.c ****   */
  96:USER/stm32f4xx_it.c **** void BusFault_Handler(void)
  97:USER/stm32f4xx_it.c **** {
 111              		.loc 1 97 1 view -0
 112              		.cfi_startproc
 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L8:
  98:USER/stm32f4xx_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
  99:USER/stm32f4xx_it.c ****   while (1)
 118              		.loc 1 99 3 discriminator 1 view .LVU14
 100:USER/stm32f4xx_it.c ****   {
 101:USER/stm32f4xx_it.c ****   }
 119              		.loc 1 101 3 discriminator 1 view .LVU15
 120 0000 FEE7     		b	.L8
 121              		.cfi_endproc
 122              	.LFE129:
 124              		.section	.text.UsageFault_Handler,"ax",%progbits
 125              		.align	1
 126              		.global	UsageFault_Handler
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv4-sp-d16
 132              	UsageFault_Handler:
 133              	.LFB130:
 102:USER/stm32f4xx_it.c **** }
 103:USER/stm32f4xx_it.c **** 
 104:USER/stm32f4xx_it.c **** /**
ARM GAS  /tmp/ccsIRDdk.s 			page 5


 105:USER/stm32f4xx_it.c ****   * @brief  This function handles Usage Fault exception.
 106:USER/stm32f4xx_it.c ****   * @param  None
 107:USER/stm32f4xx_it.c ****   * @retval None
 108:USER/stm32f4xx_it.c ****   */
 109:USER/stm32f4xx_it.c **** void UsageFault_Handler(void)
 110:USER/stm32f4xx_it.c **** {
 134              		.loc 1 110 1 view -0
 135              		.cfi_startproc
 136              		@ Volatile: function does not return.
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.L10:
 111:USER/stm32f4xx_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 112:USER/stm32f4xx_it.c ****   while (1)
 141              		.loc 1 112 3 discriminator 1 view .LVU17
 113:USER/stm32f4xx_it.c ****   {
 114:USER/stm32f4xx_it.c ****   }
 142              		.loc 1 114 3 discriminator 1 view .LVU18
 143 0000 FEE7     		b	.L10
 144              		.cfi_endproc
 145              	.LFE130:
 147              		.section	.text.SVC_Handler,"ax",%progbits
 148              		.align	1
 149              		.global	SVC_Handler
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu fpv4-sp-d16
 155              	SVC_Handler:
 156              	.LFB131:
 115:USER/stm32f4xx_it.c **** }
 116:USER/stm32f4xx_it.c **** 
 117:USER/stm32f4xx_it.c **** /**
 118:USER/stm32f4xx_it.c ****   * @brief  This function handles SVCall exception.
 119:USER/stm32f4xx_it.c ****   * @param  None
 120:USER/stm32f4xx_it.c ****   * @retval None
 121:USER/stm32f4xx_it.c ****   */
 122:USER/stm32f4xx_it.c **** void SVC_Handler(void)
 123:USER/stm32f4xx_it.c **** {
 157              		.loc 1 123 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 124:USER/stm32f4xx_it.c **** }
 162              		.loc 1 124 1 view .LVU20
 163 0000 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE131:
 167              		.section	.text.DebugMon_Handler,"ax",%progbits
 168              		.align	1
 169              		.global	DebugMon_Handler
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccsIRDdk.s 			page 6


 175              	DebugMon_Handler:
 176              	.LFB132:
 125:USER/stm32f4xx_it.c **** 
 126:USER/stm32f4xx_it.c **** /**
 127:USER/stm32f4xx_it.c ****   * @brief  This function handles Debug Monitor exception.
 128:USER/stm32f4xx_it.c ****   * @param  None
 129:USER/stm32f4xx_it.c ****   * @retval None
 130:USER/stm32f4xx_it.c ****   */
 131:USER/stm32f4xx_it.c **** void DebugMon_Handler(void)
 132:USER/stm32f4xx_it.c **** {
 177              		.loc 1 132 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 133:USER/stm32f4xx_it.c **** }
 182              		.loc 1 133 1 view .LVU22
 183 0000 7047     		bx	lr
 184              		.cfi_endproc
 185              	.LFE132:
 187              		.section	.text.PendSV_Handler,"ax",%progbits
 188              		.align	1
 189              		.global	PendSV_Handler
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu fpv4-sp-d16
 195              	PendSV_Handler:
 196              	.LFB133:
 134:USER/stm32f4xx_it.c **** 
 135:USER/stm32f4xx_it.c **** /**
 136:USER/stm32f4xx_it.c ****   * @brief  This function handles PendSVC exception.
 137:USER/stm32f4xx_it.c ****   * @param  None
 138:USER/stm32f4xx_it.c ****   * @retval None
 139:USER/stm32f4xx_it.c ****   */
 140:USER/stm32f4xx_it.c **** void PendSV_Handler(void)
 141:USER/stm32f4xx_it.c **** {
 197              		.loc 1 141 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 08B5     		push	{r3, lr}
 202              	.LCFI2:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 3, -8
 205              		.cfi_offset 14, -4
 142:USER/stm32f4xx_it.c ****   static bool tasksystem_runstate = false;
 206              		.loc 1 142 3 view .LVU24
 143:USER/stm32f4xx_it.c **** 
 144:USER/stm32f4xx_it.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 145:USER/stm32f4xx_it.c ****   extern volatile TaskStack_ControlBlock CurTsk_TCB;
 207              		.loc 1 145 3 view .LVU25
 146:USER/stm32f4xx_it.c **** #endif
 147:USER/stm32f4xx_it.c ****   GPIO_Set_IO_LEVEL(GPIOB, GPIO_Pin_4, LO);
 208              		.loc 1 147 3 view .LVU26
 209 0002 0122     		movs	r2, #1
 210 0004 1021     		movs	r1, #16
ARM GAS  /tmp/ccsIRDdk.s 			page 7


 211 0006 0B48     		ldr	r0, .L17
 212 0008 FFF7FEFF 		bl	GPIO_Set_IO_LEVEL
 213              	.LVL1:
 148:USER/stm32f4xx_it.c ****   //cast 1.2us
 149:USER/stm32f4xx_it.c **** 
 150:USER/stm32f4xx_it.c ****   //first time triggered by TaskSystem_Start function
 151:USER/stm32f4xx_it.c ****   if (!tasksystem_runstate)
 214              		.loc 1 151 3 view .LVU27
 215              		.loc 1 151 7 is_stmt 0 view .LVU28
 216 000c 0A4B     		ldr	r3, .L17+4
 217 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 218              		.loc 1 151 6 view .LVU29
 219 0010 6BB9     		cbnz	r3, .L14
 152:USER/stm32f4xx_it.c ****   {
 153:USER/stm32f4xx_it.c ****     tasksystem_runstate = true;
 220              		.loc 1 153 5 is_stmt 1 view .LVU30
 221              		.loc 1 153 25 is_stmt 0 view .LVU31
 222 0012 094B     		ldr	r3, .L17+4
 223 0014 0122     		movs	r2, #1
 224 0016 1A70     		strb	r2, [r3]
 154:USER/stm32f4xx_it.c ****     TaskSys_Set_State(TaskSys_Start);
 225              		.loc 1 154 5 is_stmt 1 view .LVU32
 226 0018 0220     		movs	r0, #2
 227 001a FFF7FEFF 		bl	TaskSys_Set_State
 228              	.LVL2:
 155:USER/stm32f4xx_it.c **** 
 156:USER/stm32f4xx_it.c ****     //Event_TaskOS_StartSchedul_Triggered();
 157:USER/stm32f4xx_it.c ****     Load_FirstTask();
 229              		.loc 1 157 5 view .LVU33
 230 001e FFF7FEFF 		bl	Load_FirstTask
 231              	.LVL3:
 232              	.L15:
 158:USER/stm32f4xx_it.c ****   }
 159:USER/stm32f4xx_it.c ****   else
 160:USER/stm32f4xx_it.c ****   {
 161:USER/stm32f4xx_it.c **** #if (TASK_SCHEDULER_TYPE == POLL_SCHEDULER)
 162:USER/stm32f4xx_it.c ****     Task_Caller();
 163:USER/stm32f4xx_it.c **** #else
 164:USER/stm32f4xx_it.c ****     Task_SwitchContext();
 165:USER/stm32f4xx_it.c **** #endif
 166:USER/stm32f4xx_it.c ****   }
 167:USER/stm32f4xx_it.c ****   GPIO_Set_IO_LEVEL(GPIOB, GPIO_Pin_4, HI);
 233              		.loc 1 167 3 view .LVU34
 234 0022 0022     		movs	r2, #0
 235 0024 1021     		movs	r1, #16
 236 0026 0348     		ldr	r0, .L17
 237 0028 FFF7FEFF 		bl	GPIO_Set_IO_LEVEL
 238              	.LVL4:
 168:USER/stm32f4xx_it.c **** }
 239              		.loc 1 168 1 is_stmt 0 view .LVU35
 240 002c 08BD     		pop	{r3, pc}
 241              	.L14:
 164:USER/stm32f4xx_it.c **** #endif
 242              		.loc 1 164 5 is_stmt 1 view .LVU36
 243 002e FFF7FEFF 		bl	Task_SwitchContext
 244              	.LVL5:
 245 0032 F6E7     		b	.L15
ARM GAS  /tmp/ccsIRDdk.s 			page 8


 246              	.L18:
 247              		.align	2
 248              	.L17:
 249 0034 00040240 		.word	1073873920
 250 0038 00000000 		.word	.LANCHOR0
 251              		.cfi_endproc
 252              	.LFE133:
 254              		.section	.text.SysTick_Handler,"ax",%progbits
 255              		.align	1
 256              		.global	SysTick_Handler
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	SysTick_Handler:
 263              	.LFB134:
 169:USER/stm32f4xx_it.c **** 
 170:USER/stm32f4xx_it.c **** /**
 171:USER/stm32f4xx_it.c ****   * @brief  This function handles SysTick Handler.
 172:USER/stm32f4xx_it.c ****   * @param  None
 173:USER/stm32f4xx_it.c ****   * @retval None
 174:USER/stm32f4xx_it.c ****   */
 175:USER/stm32f4xx_it.c **** void SysTick_Handler(void)
 176:USER/stm32f4xx_it.c **** {
 264              		.loc 1 176 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 10B5     		push	{r4, lr}
 269              	.LCFI3:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 4, -8
 272              		.cfi_offset 14, -4
 177:USER/stm32f4xx_it.c ****   GPIO_Set_IO_LEVEL(GPIOB, GPIO_Pin_5, LO);
 273              		.loc 1 177 3 view .LVU38
 274 0002 074C     		ldr	r4, .L21
 275 0004 0122     		movs	r2, #1
 276 0006 2021     		movs	r1, #32
 277 0008 2046     		mov	r0, r4
 278 000a FFF7FEFF 		bl	GPIO_Set_IO_LEVEL
 279              	.LVL6:
 178:USER/stm32f4xx_it.c ****   //cast 4.8us
 179:USER/stm32f4xx_it.c ****   Runtime_Tick();
 280              		.loc 1 179 3 view .LVU39
 281 000e FFF7FEFF 		bl	Runtime_Tick
 282              	.LVL7:
 180:USER/stm32f4xx_it.c ****   GPIO_Set_IO_LEVEL(GPIOB, GPIO_Pin_5, HI);
 283              		.loc 1 180 3 view .LVU40
 284 0012 0022     		movs	r2, #0
 285 0014 2021     		movs	r1, #32
 286 0016 2046     		mov	r0, r4
 287 0018 FFF7FEFF 		bl	GPIO_Set_IO_LEVEL
 288              	.LVL8:
 181:USER/stm32f4xx_it.c **** }
 289              		.loc 1 181 1 is_stmt 0 view .LVU41
 290 001c 10BD     		pop	{r4, pc}
 291              	.L22:
ARM GAS  /tmp/ccsIRDdk.s 			page 9


 292 001e 00BF     		.align	2
 293              	.L21:
 294 0020 00040240 		.word	1073873920
 295              		.cfi_endproc
 296              	.LFE134:
 298              		.section	.bss.tasksystem_runstate.11327,"aw",%nobits
 299              		.set	.LANCHOR0,. + 0
 302              	tasksystem_runstate.11327:
 303 0000 00       		.space	1
 304              		.text
 305              	.Letext0:
 306              		.file 2 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 307              		.file 3 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 308              		.file 4 "F4_CORE/core_cm4.h"
 309              		.file 5 "USER/system_stm32f4xx.h"
 310              		.file 6 "USER/stm32f4xx.h"
 311              		.file 7 "USER/stm32f4xx_it.h"
 312              		.file 8 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 313              		.file 9 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 314              		.file 10 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8
 315              		.file 11 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8
 316              		.file 12 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8
 317              		.file 13 "SYS/task_manager/task_manager.h"
 318              		.file 14 "SYS/faultcheck/fault_check.h"
 319              		.file 15 "Bsp/periph_gpio.h"
 320              		.file 16 "SYS/runtime/runtime.h"
ARM GAS  /tmp/ccsIRDdk.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccsIRDdk.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccsIRDdk.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccsIRDdk.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccsIRDdk.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccsIRDdk.s:79     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccsIRDdk.s:86     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccsIRDdk.s:102    .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccsIRDdk.s:109    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccsIRDdk.s:125    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccsIRDdk.s:132    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccsIRDdk.s:148    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccsIRDdk.s:155    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccsIRDdk.s:168    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccsIRDdk.s:175    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccsIRDdk.s:188    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccsIRDdk.s:195    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccsIRDdk.s:249    .text.PendSV_Handler:0000000000000034 $d
     /tmp/ccsIRDdk.s:255    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccsIRDdk.s:262    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccsIRDdk.s:294    .text.SysTick_Handler:0000000000000020 $d
     /tmp/ccsIRDdk.s:302    .bss.tasksystem_runstate.11327:0000000000000000 tasksystem_runstate.11327
     /tmp/ccsIRDdk.s:303    .bss.tasksystem_runstate.11327:0000000000000000 $d

UNDEFINED SYMBOLS
Get_FaultReg_Value
GPIO_Set_IO_LEVEL
TaskSys_Set_State
Load_FirstTask
Task_SwitchContext
Runtime_Tick
