ARM GAS  C:\Users\why\AppData\Local\Temp\ccHXTqbi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f4xx_it.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.NMI_Handler,"ax",%progbits
  22              		.align	2
  23              		.global	NMI_Handler
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB124:
  29              		.file 1 "USER/stm32f4xx_it.c"
   1:USER/stm32f4xx_it.c **** /**
   2:USER/stm32f4xx_it.c ****   ******************************************************************************
   3:USER/stm32f4xx_it.c ****   * @file    Project/STM32F4xx_StdPeriph_Templates/stm32f4xx_it.c 
   4:USER/stm32f4xx_it.c ****   * @author  MCD Application Team
   5:USER/stm32f4xx_it.c ****   * @version V1.8.0
   6:USER/stm32f4xx_it.c ****   * @date    04-November-2016
   7:USER/stm32f4xx_it.c ****   * @brief   Main Interrupt Service Routines.
   8:USER/stm32f4xx_it.c ****   *          This file provides template for all exceptions handler and 
   9:USER/stm32f4xx_it.c ****   *          peripherals interrupt service routine.
  10:USER/stm32f4xx_it.c ****   ******************************************************************************
  11:USER/stm32f4xx_it.c ****   * @attention
  12:USER/stm32f4xx_it.c ****   *
  13:USER/stm32f4xx_it.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
  14:USER/stm32f4xx_it.c ****   *
  15:USER/stm32f4xx_it.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  16:USER/stm32f4xx_it.c ****   * You may not use this file except in compliance with the License.
  17:USER/stm32f4xx_it.c ****   * You may obtain a copy of the License at:
  18:USER/stm32f4xx_it.c ****   *
  19:USER/stm32f4xx_it.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  20:USER/stm32f4xx_it.c ****   *
  21:USER/stm32f4xx_it.c ****   * Unless required by applicable law or agreed to in writing, software 
  22:USER/stm32f4xx_it.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  23:USER/stm32f4xx_it.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  24:USER/stm32f4xx_it.c ****   * See the License for the specific language governing permissions and
  25:USER/stm32f4xx_it.c ****   * limitations under the License.
  26:USER/stm32f4xx_it.c ****   *
  27:USER/stm32f4xx_it.c ****   ******************************************************************************
  28:USER/stm32f4xx_it.c ****   */
  29:USER/stm32f4xx_it.c **** 
ARM GAS  C:\Users\why\AppData\Local\Temp\ccHXTqbi.s 			page 2


  30:USER/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  31:USER/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  32:USER/stm32f4xx_it.c **** #include "runtime.h"
  33:USER/stm32f4xx_it.c **** #include "task_manager.h"
  34:USER/stm32f4xx_it.c **** #include "fault_check.h"
  35:USER/stm32f4xx_it.c **** #include "periph_gpio.h"
  36:USER/stm32f4xx_it.c **** 
  37:USER/stm32f4xx_it.c **** /** @addtogroup Template_Project
  38:USER/stm32f4xx_it.c ****   * @{
  39:USER/stm32f4xx_it.c ****   */
  40:USER/stm32f4xx_it.c **** 
  41:USER/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  42:USER/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  43:USER/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  44:USER/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:USER/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  46:USER/stm32f4xx_it.c **** /* Private functions ---------------------------------------------------------*/
  47:USER/stm32f4xx_it.c **** 
  48:USER/stm32f4xx_it.c **** /******************************************************************************/
  49:USER/stm32f4xx_it.c **** /*            Cortex-M4 Processor Exceptions Handlers                         */
  50:USER/stm32f4xx_it.c **** /******************************************************************************/
  51:USER/stm32f4xx_it.c **** 
  52:USER/stm32f4xx_it.c **** /**
  53:USER/stm32f4xx_it.c ****   * @brief  This function handles NMI exception.
  54:USER/stm32f4xx_it.c ****   * @param  None
  55:USER/stm32f4xx_it.c ****   * @retval None
  56:USER/stm32f4xx_it.c ****   */
  57:USER/stm32f4xx_it.c **** void NMI_Handler(void)
  58:USER/stm32f4xx_it.c **** {
  30              		.loc 1 58 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE124:
  39 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	2
  41              		.global	HardFault_Handler
  42              		.thumb
  43              		.thumb_func
  45              	HardFault_Handler:
  46              	.LFB125:
  59:USER/stm32f4xx_it.c **** }
  60:USER/stm32f4xx_it.c **** 
  61:USER/stm32f4xx_it.c **** /**
  62:USER/stm32f4xx_it.c ****   * @brief  This function handles Hard Fault exception.
  63:USER/stm32f4xx_it.c ****   * @param  None
  64:USER/stm32f4xx_it.c ****   * @retval None
  65:USER/stm32f4xx_it.c ****   */
  66:USER/stm32f4xx_it.c **** void HardFault_Handler(void)
  67:USER/stm32f4xx_it.c **** {
  47              		.loc 1 67 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 8
  50              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccHXTqbi.s 			page 3


  51              		.loc 1 67 0
  52 0000 00B5     		push	{lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 4
  55              		.cfi_offset 14, -4
  56 0002 83B0     		sub	sp, sp, #12
  57              	.LCFI1:
  58              		.cfi_def_cfa_offset 16
  68:USER/stm32f4xx_it.c ****   volatile fault_item hardfault_reg;
  69:USER/stm32f4xx_it.c ****   hardfault_reg.value = 0;
  59              		.loc 1 69 0
  60 0004 0023     		movs	r3, #0
  61 0006 8DF80430 		strb	r3, [sp, #4]
  70:USER/stm32f4xx_it.c **** 
  71:USER/stm32f4xx_it.c ****   hardfault_reg = Get_FaultReg_Value();
  62              		.loc 1 71 0
  63 000a FFF7FEFF 		bl	Get_FaultReg_Value
  64              	.LVL0:
  65 000e 8DF80400 		strb	r0, [sp, #4]
  66              	.L3:
  67 0012 FEE7     		b	.L3
  68              		.cfi_endproc
  69              	.LFE125:
  71              		.section	.text.MemManage_Handler,"ax",%progbits
  72              		.align	2
  73              		.global	MemManage_Handler
  74              		.thumb
  75              		.thumb_func
  77              	MemManage_Handler:
  78              	.LFB126:
  72:USER/stm32f4xx_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  73:USER/stm32f4xx_it.c ****   while (1)
  74:USER/stm32f4xx_it.c ****   {
  75:USER/stm32f4xx_it.c ****   }
  76:USER/stm32f4xx_it.c **** }
  77:USER/stm32f4xx_it.c **** 
  78:USER/stm32f4xx_it.c **** /**
  79:USER/stm32f4xx_it.c ****   * @brief  This function handles Memory Manage exception.
  80:USER/stm32f4xx_it.c ****   * @param  None
  81:USER/stm32f4xx_it.c ****   * @retval None
  82:USER/stm32f4xx_it.c ****   */
  83:USER/stm32f4xx_it.c **** void MemManage_Handler(void)
  84:USER/stm32f4xx_it.c **** {
  79              		.loc 1 84 0
  80              		.cfi_startproc
  81              		@ Volatile: function does not return.
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.L6:
  86 0000 FEE7     		b	.L6
  87              		.cfi_endproc
  88              	.LFE126:
  90 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  91              		.align	2
  92              		.global	BusFault_Handler
  93              		.thumb
ARM GAS  C:\Users\why\AppData\Local\Temp\ccHXTqbi.s 			page 4


  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB127:
  85:USER/stm32f4xx_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
  86:USER/stm32f4xx_it.c ****   while (1)
  87:USER/stm32f4xx_it.c ****   {
  88:USER/stm32f4xx_it.c ****   }
  89:USER/stm32f4xx_it.c **** }
  90:USER/stm32f4xx_it.c **** 
  91:USER/stm32f4xx_it.c **** /**
  92:USER/stm32f4xx_it.c ****   * @brief  This function handles Bus Fault exception.
  93:USER/stm32f4xx_it.c ****   * @param  None
  94:USER/stm32f4xx_it.c ****   * @retval None
  95:USER/stm32f4xx_it.c ****   */
  96:USER/stm32f4xx_it.c **** void BusFault_Handler(void)
  97:USER/stm32f4xx_it.c **** {
  98              		.loc 1 97 0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 105 0000 FEE7     		b	.L8
 106              		.cfi_endproc
 107              	.LFE127:
 109 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 110              		.align	2
 111              		.global	UsageFault_Handler
 112              		.thumb
 113              		.thumb_func
 115              	UsageFault_Handler:
 116              	.LFB128:
  98:USER/stm32f4xx_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
  99:USER/stm32f4xx_it.c ****   while (1)
 100:USER/stm32f4xx_it.c ****   {
 101:USER/stm32f4xx_it.c ****   }
 102:USER/stm32f4xx_it.c **** }
 103:USER/stm32f4xx_it.c **** 
 104:USER/stm32f4xx_it.c **** /**
 105:USER/stm32f4xx_it.c ****   * @brief  This function handles Usage Fault exception.
 106:USER/stm32f4xx_it.c ****   * @param  None
 107:USER/stm32f4xx_it.c ****   * @retval None
 108:USER/stm32f4xx_it.c ****   */
 109:USER/stm32f4xx_it.c **** void UsageFault_Handler(void)
 110:USER/stm32f4xx_it.c **** {
 117              		.loc 1 110 0
 118              		.cfi_startproc
 119              		@ Volatile: function does not return.
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.L10:
 124 0000 FEE7     		b	.L10
 125              		.cfi_endproc
 126              	.LFE128:
 128 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
ARM GAS  C:\Users\why\AppData\Local\Temp\ccHXTqbi.s 			page 5


 129              		.align	2
 130              		.global	SVC_Handler
 131              		.thumb
 132              		.thumb_func
 134              	SVC_Handler:
 135              	.LFB129:
 111:USER/stm32f4xx_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 112:USER/stm32f4xx_it.c ****   while (1)
 113:USER/stm32f4xx_it.c ****   {
 114:USER/stm32f4xx_it.c ****   }
 115:USER/stm32f4xx_it.c **** }
 116:USER/stm32f4xx_it.c **** 
 117:USER/stm32f4xx_it.c **** /**
 118:USER/stm32f4xx_it.c ****   * @brief  This function handles SVCall exception.
 119:USER/stm32f4xx_it.c ****   * @param  None
 120:USER/stm32f4xx_it.c ****   * @retval None
 121:USER/stm32f4xx_it.c ****   */
 122:USER/stm32f4xx_it.c **** void SVC_Handler(void)
 123:USER/stm32f4xx_it.c **** {
 136              		.loc 1 123 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141 0000 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE129:
 145 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 146              		.align	2
 147              		.global	DebugMon_Handler
 148              		.thumb
 149              		.thumb_func
 151              	DebugMon_Handler:
 152              	.LFB130:
 124:USER/stm32f4xx_it.c **** }
 125:USER/stm32f4xx_it.c **** 
 126:USER/stm32f4xx_it.c **** /**
 127:USER/stm32f4xx_it.c ****   * @brief  This function handles Debug Monitor exception.
 128:USER/stm32f4xx_it.c ****   * @param  None
 129:USER/stm32f4xx_it.c ****   * @retval None
 130:USER/stm32f4xx_it.c ****   */
 131:USER/stm32f4xx_it.c **** void DebugMon_Handler(void)
 132:USER/stm32f4xx_it.c **** {
 153              		.loc 1 132 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE130:
 162 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 163              		.align	2
 164              		.global	PendSV_Handler
 165              		.thumb
 166              		.thumb_func
 168              	PendSV_Handler:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccHXTqbi.s 			page 6


 169              	.LFB131:
 133:USER/stm32f4xx_it.c **** }
 134:USER/stm32f4xx_it.c **** 
 135:USER/stm32f4xx_it.c **** /**
 136:USER/stm32f4xx_it.c ****   * @brief  This function handles PendSVC exception.
 137:USER/stm32f4xx_it.c ****   * @param  None
 138:USER/stm32f4xx_it.c ****   * @retval None
 139:USER/stm32f4xx_it.c ****   */
 140:USER/stm32f4xx_it.c **** void PendSV_Handler(void)
 141:USER/stm32f4xx_it.c **** {
 170              		.loc 1 141 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		.loc 1 141 0
 175 0000 08B5     		push	{r3, lr}
 176              	.LCFI2:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 142:USER/stm32f4xx_it.c ****   static bool tasksystem_runstate = false;
 143:USER/stm32f4xx_it.c **** 
 144:USER/stm32f4xx_it.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 145:USER/stm32f4xx_it.c ****   extern volatile TaskStack_ControlBlock CurTsk_TCB;
 146:USER/stm32f4xx_it.c **** #endif
 147:USER/stm32f4xx_it.c ****   GPIO_Set_IO_LEVEL(GPIOB, GPIO_Pin_4, LO);
 180              		.loc 1 147 0
 181 0002 0122     		movs	r2, #1
 182 0004 1021     		movs	r1, #16
 183 0006 0B48     		ldr	r0, .L17
 184 0008 FFF7FEFF 		bl	GPIO_Set_IO_LEVEL
 185              	.LVL1:
 148:USER/stm32f4xx_it.c ****   //cast 1.2us
 149:USER/stm32f4xx_it.c **** 
 150:USER/stm32f4xx_it.c ****   //first time triggered by TaskSystem_Start function
 151:USER/stm32f4xx_it.c ****   if (!tasksystem_runstate)
 186              		.loc 1 151 0
 187 000c 0A4B     		ldr	r3, .L17+4
 188 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 189 0010 43B9     		cbnz	r3, .L14
 152:USER/stm32f4xx_it.c ****   {
 153:USER/stm32f4xx_it.c ****     tasksystem_runstate = true;
 190              		.loc 1 153 0
 191 0012 0122     		movs	r2, #1
 192 0014 084B     		ldr	r3, .L17+4
 193 0016 1A70     		strb	r2, [r3]
 154:USER/stm32f4xx_it.c ****     TaskSys_Set_State(TaskSys_Start);
 194              		.loc 1 154 0
 195 0018 0220     		movs	r0, #2
 196 001a FFF7FEFF 		bl	TaskSys_Set_State
 197              	.LVL2:
 155:USER/stm32f4xx_it.c **** 
 156:USER/stm32f4xx_it.c ****     //Event_TaskOS_StartSchedul_Triggered();
 157:USER/stm32f4xx_it.c ****     Load_FirstTask();
 198              		.loc 1 157 0
 199 001e FFF7FEFF 		bl	Load_FirstTask
 200              	.LVL3:
ARM GAS  C:\Users\why\AppData\Local\Temp\ccHXTqbi.s 			page 7


 201 0022 01E0     		b	.L15
 202              	.L14:
 158:USER/stm32f4xx_it.c ****   }
 159:USER/stm32f4xx_it.c ****   else
 160:USER/stm32f4xx_it.c ****   {
 161:USER/stm32f4xx_it.c **** #if (TASK_SCHEDULER_TYPE == POLL_SCHEDULER)
 162:USER/stm32f4xx_it.c ****     Task_Caller();
 163:USER/stm32f4xx_it.c **** #else
 164:USER/stm32f4xx_it.c ****     Task_SwitchContext();
 203              		.loc 1 164 0
 204 0024 FFF7FEFF 		bl	Task_SwitchContext
 205              	.LVL4:
 206              	.L15:
 165:USER/stm32f4xx_it.c **** #endif
 166:USER/stm32f4xx_it.c ****   }
 167:USER/stm32f4xx_it.c ****   GPIO_Set_IO_LEVEL(GPIOB, GPIO_Pin_4, HI);
 207              		.loc 1 167 0
 208 0028 0022     		movs	r2, #0
 209 002a 1021     		movs	r1, #16
 210 002c 0148     		ldr	r0, .L17
 211 002e FFF7FEFF 		bl	GPIO_Set_IO_LEVEL
 212              	.LVL5:
 213 0032 08BD     		pop	{r3, pc}
 214              	.L18:
 215              		.align	2
 216              	.L17:
 217 0034 00040240 		.word	1073873920
 218 0038 00000000 		.word	.LANCHOR0
 219              		.cfi_endproc
 220              	.LFE131:
 222              		.section	.text.SysTick_Handler,"ax",%progbits
 223              		.align	2
 224              		.global	SysTick_Handler
 225              		.thumb
 226              		.thumb_func
 228              	SysTick_Handler:
 229              	.LFB132:
 168:USER/stm32f4xx_it.c **** }
 169:USER/stm32f4xx_it.c **** 
 170:USER/stm32f4xx_it.c **** /**
 171:USER/stm32f4xx_it.c ****   * @brief  This function handles SysTick Handler.
 172:USER/stm32f4xx_it.c ****   * @param  None
 173:USER/stm32f4xx_it.c ****   * @retval None
 174:USER/stm32f4xx_it.c ****   */
 175:USER/stm32f4xx_it.c **** void SysTick_Handler(void)
 176:USER/stm32f4xx_it.c **** {
 230              		.loc 1 176 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 10B5     		push	{r4, lr}
 235              	.LCFI3:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 4, -8
 238              		.cfi_offset 14, -4
 177:USER/stm32f4xx_it.c ****   GPIO_Set_IO_LEVEL(GPIOB, GPIO_Pin_5, LO);
 239              		.loc 1 177 0
ARM GAS  C:\Users\why\AppData\Local\Temp\ccHXTqbi.s 			page 8


 240 0002 074C     		ldr	r4, .L21
 241 0004 0122     		movs	r2, #1
 242 0006 2021     		movs	r1, #32
 243 0008 2046     		mov	r0, r4
 244 000a FFF7FEFF 		bl	GPIO_Set_IO_LEVEL
 245              	.LVL6:
 178:USER/stm32f4xx_it.c ****   //cast 4.8us
 179:USER/stm32f4xx_it.c ****   Runtime_Tick();
 246              		.loc 1 179 0
 247 000e FFF7FEFF 		bl	Runtime_Tick
 248              	.LVL7:
 180:USER/stm32f4xx_it.c ****   GPIO_Set_IO_LEVEL(GPIOB, GPIO_Pin_5, HI);
 249              		.loc 1 180 0
 250 0012 0022     		movs	r2, #0
 251 0014 2021     		movs	r1, #32
 252 0016 2046     		mov	r0, r4
 253 0018 FFF7FEFF 		bl	GPIO_Set_IO_LEVEL
 254              	.LVL8:
 255 001c 10BD     		pop	{r4, pc}
 256              	.L22:
 257 001e 00BF     		.align	2
 258              	.L21:
 259 0020 00040240 		.word	1073873920
 260              		.cfi_endproc
 261              	.LFE132:
 263              		.section	.bss.tasksystem_runstate.9915,"aw",%nobits
 264              		.set	.LANCHOR0,. + 0
 267              	tasksystem_runstate.9915:
 268 0000 00       		.space	1
 269              		.text
 270              	.Letext0:
 271              		.file 2 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_types.h"
 272              		.file 3 "d:\\gcc_arm\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 273              		.file 4 "USER/stm32f4xx.h"
 274              		.file 5 "SYS/task_manager/task_manager.h"
 275              		.file 6 "SYS/faultcheck/fault_check.h"
 276              		.file 7 "Bsp/periph_gpio.h"
 277              		.file 8 "F4_CORE/core_cm4.h"
 278              		.file 9 "SYS/runtime/runtime.h"
ARM GAS  C:\Users\why\AppData\Local\Temp\ccHXTqbi.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:22     .text.NMI_Handler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:27     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:40     .text.HardFault_Handler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:72     .text.MemManage_Handler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:77     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:91     .text.BusFault_Handler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:110    .text.UsageFault_Handler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:115    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:129    .text.SVC_Handler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:134    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:146    .text.DebugMon_Handler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:151    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:163    .text.PendSV_Handler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:168    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:217    .text.PendSV_Handler:00000034 $d
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:223    .text.SysTick_Handler:00000000 $t
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:228    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:259    .text.SysTick_Handler:00000020 $d
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:267    .bss.tasksystem_runstate.9915:00000000 tasksystem_runstate.9915
C:\Users\why\AppData\Local\Temp\ccHXTqbi.s:268    .bss.tasksystem_runstate.9915:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
Get_FaultReg_Value
GPIO_Set_IO_LEVEL
TaskSys_Set_State
Load_FirstTask
Task_SwitchContext
Runtime_Tick
