ARM GAS  /tmp/ccb5gzuh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB124:
  27              		.file 1 "USER/stm32f4xx_it.c"
   1:USER/stm32f4xx_it.c **** /**
   2:USER/stm32f4xx_it.c ****   ******************************************************************************
   3:USER/stm32f4xx_it.c ****   * @file    Project/STM32F4xx_StdPeriph_Templates/stm32f4xx_it.c 
   4:USER/stm32f4xx_it.c ****   * @author  MCD Application Team
   5:USER/stm32f4xx_it.c ****   * @version V1.8.0
   6:USER/stm32f4xx_it.c ****   * @date    04-November-2016
   7:USER/stm32f4xx_it.c ****   * @brief   Main Interrupt Service Routines.
   8:USER/stm32f4xx_it.c ****   *          This file provides template for all exceptions handler and 
   9:USER/stm32f4xx_it.c ****   *          peripherals interrupt service routine.
  10:USER/stm32f4xx_it.c ****   ******************************************************************************
  11:USER/stm32f4xx_it.c ****   * @attention
  12:USER/stm32f4xx_it.c ****   *
  13:USER/stm32f4xx_it.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
  14:USER/stm32f4xx_it.c ****   *
  15:USER/stm32f4xx_it.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  16:USER/stm32f4xx_it.c ****   * You may not use this file except in compliance with the License.
  17:USER/stm32f4xx_it.c ****   * You may obtain a copy of the License at:
  18:USER/stm32f4xx_it.c ****   *
  19:USER/stm32f4xx_it.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  20:USER/stm32f4xx_it.c ****   *
  21:USER/stm32f4xx_it.c ****   * Unless required by applicable law or agreed to in writing, software 
  22:USER/stm32f4xx_it.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  23:USER/stm32f4xx_it.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  24:USER/stm32f4xx_it.c ****   * See the License for the specific language governing permissions and
  25:USER/stm32f4xx_it.c ****   * limitations under the License.
  26:USER/stm32f4xx_it.c ****   *
  27:USER/stm32f4xx_it.c ****   ******************************************************************************
  28:USER/stm32f4xx_it.c ****   */
  29:USER/stm32f4xx_it.c **** 
  30:USER/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  31:USER/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
ARM GAS  /tmp/ccb5gzuh.s 			page 2


  32:USER/stm32f4xx_it.c **** #include "runtime.h"
  33:USER/stm32f4xx_it.c **** #include "task_manager.h"
  34:USER/stm32f4xx_it.c **** #include "fault_check.h"
  35:USER/stm32f4xx_it.c **** #include "periph_gpio.h"
  36:USER/stm32f4xx_it.c **** 
  37:USER/stm32f4xx_it.c **** /** @addtogroup Template_Project
  38:USER/stm32f4xx_it.c ****   * @{
  39:USER/stm32f4xx_it.c ****   */
  40:USER/stm32f4xx_it.c **** 
  41:USER/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  42:USER/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  43:USER/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  44:USER/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:USER/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  46:USER/stm32f4xx_it.c **** /* Private functions ---------------------------------------------------------*/
  47:USER/stm32f4xx_it.c **** 
  48:USER/stm32f4xx_it.c **** /******************************************************************************/
  49:USER/stm32f4xx_it.c **** /*            Cortex-M4 Processor Exceptions Handlers                         */
  50:USER/stm32f4xx_it.c **** /******************************************************************************/
  51:USER/stm32f4xx_it.c **** 
  52:USER/stm32f4xx_it.c **** /**
  53:USER/stm32f4xx_it.c ****   * @brief  This function handles NMI exception.
  54:USER/stm32f4xx_it.c ****   * @param  None
  55:USER/stm32f4xx_it.c ****   * @retval None
  56:USER/stm32f4xx_it.c ****   */
  57:USER/stm32f4xx_it.c **** void NMI_Handler(void)
  58:USER/stm32f4xx_it.c **** {
  28              		.loc 1 58 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE124:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HardFault_Handler:
  46              	.LFB125:
  59:USER/stm32f4xx_it.c **** }
  60:USER/stm32f4xx_it.c **** 
  61:USER/stm32f4xx_it.c **** /**
  62:USER/stm32f4xx_it.c ****   * @brief  This function handles Hard Fault exception.
  63:USER/stm32f4xx_it.c ****   * @param  None
  64:USER/stm32f4xx_it.c ****   * @retval None
  65:USER/stm32f4xx_it.c ****   */
  66:USER/stm32f4xx_it.c **** void HardFault_Handler(void)
  67:USER/stm32f4xx_it.c **** {
  47              		.loc 1 67 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccb5gzuh.s 			page 3


  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		.loc 1 67 0
  53 0000 00B5     		push	{lr}
  54              	.LCFI0:
  55              		.cfi_def_cfa_offset 4
  56              		.cfi_offset 14, -4
  57 0002 83B0     		sub	sp, sp, #12
  58              	.LCFI1:
  59              		.cfi_def_cfa_offset 16
  68:USER/stm32f4xx_it.c ****   volatile fault_item hardfault_reg;
  69:USER/stm32f4xx_it.c ****   hardfault_reg.value = 0;
  60              		.loc 1 69 0
  61 0004 0023     		movs	r3, #0
  62 0006 8DF80430 		strb	r3, [sp, #4]
  70:USER/stm32f4xx_it.c **** 
  71:USER/stm32f4xx_it.c ****   hardfault_reg = Get_FaultReg_Value();
  63              		.loc 1 71 0
  64 000a FFF7FEFF 		bl	Get_FaultReg_Value
  65              	.LVL0:
  66 000e 8DF80400 		strb	r0, [sp, #4]
  67              	.L3:
  68 0012 FEE7     		b	.L3
  69              		.cfi_endproc
  70              	.LFE125:
  72              		.section	.text.MemManage_Handler,"ax",%progbits
  73              		.align	1
  74              		.global	MemManage_Handler
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv4-sp-d16
  80              	MemManage_Handler:
  81              	.LFB126:
  72:USER/stm32f4xx_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  73:USER/stm32f4xx_it.c ****   while (1)
  74:USER/stm32f4xx_it.c ****   {
  75:USER/stm32f4xx_it.c ****   }
  76:USER/stm32f4xx_it.c **** }
  77:USER/stm32f4xx_it.c **** 
  78:USER/stm32f4xx_it.c **** /**
  79:USER/stm32f4xx_it.c ****   * @brief  This function handles Memory Manage exception.
  80:USER/stm32f4xx_it.c ****   * @param  None
  81:USER/stm32f4xx_it.c ****   * @retval None
  82:USER/stm32f4xx_it.c ****   */
  83:USER/stm32f4xx_it.c **** void MemManage_Handler(void)
  84:USER/stm32f4xx_it.c **** {
  82              		.loc 1 84 0
  83              		.cfi_startproc
  84              		@ Volatile: function does not return.
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.L6:
  89 0000 FEE7     		b	.L6
  90              		.cfi_endproc
  91              	.LFE126:
  93              		.section	.text.BusFault_Handler,"ax",%progbits
ARM GAS  /tmp/ccb5gzuh.s 			page 4


  94              		.align	1
  95              		.global	BusFault_Handler
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv4-sp-d16
 101              	BusFault_Handler:
 102              	.LFB127:
  85:USER/stm32f4xx_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
  86:USER/stm32f4xx_it.c ****   while (1)
  87:USER/stm32f4xx_it.c ****   {
  88:USER/stm32f4xx_it.c ****   }
  89:USER/stm32f4xx_it.c **** }
  90:USER/stm32f4xx_it.c **** 
  91:USER/stm32f4xx_it.c **** /**
  92:USER/stm32f4xx_it.c ****   * @brief  This function handles Bus Fault exception.
  93:USER/stm32f4xx_it.c ****   * @param  None
  94:USER/stm32f4xx_it.c ****   * @retval None
  95:USER/stm32f4xx_it.c ****   */
  96:USER/stm32f4xx_it.c **** void BusFault_Handler(void)
  97:USER/stm32f4xx_it.c **** {
 103              		.loc 1 97 0
 104              		.cfi_startproc
 105              		@ Volatile: function does not return.
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              	.L8:
 110 0000 FEE7     		b	.L8
 111              		.cfi_endproc
 112              	.LFE127:
 114              		.section	.text.UsageFault_Handler,"ax",%progbits
 115              		.align	1
 116              		.global	UsageFault_Handler
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu fpv4-sp-d16
 122              	UsageFault_Handler:
 123              	.LFB128:
  98:USER/stm32f4xx_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
  99:USER/stm32f4xx_it.c ****   while (1)
 100:USER/stm32f4xx_it.c ****   {
 101:USER/stm32f4xx_it.c ****   }
 102:USER/stm32f4xx_it.c **** }
 103:USER/stm32f4xx_it.c **** 
 104:USER/stm32f4xx_it.c **** /**
 105:USER/stm32f4xx_it.c ****   * @brief  This function handles Usage Fault exception.
 106:USER/stm32f4xx_it.c ****   * @param  None
 107:USER/stm32f4xx_it.c ****   * @retval None
 108:USER/stm32f4xx_it.c ****   */
 109:USER/stm32f4xx_it.c **** void UsageFault_Handler(void)
 110:USER/stm32f4xx_it.c **** {
 124              		.loc 1 110 0
 125              		.cfi_startproc
 126              		@ Volatile: function does not return.
 127              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccb5gzuh.s 			page 5


 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              	.L10:
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE128:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB129:
 111:USER/stm32f4xx_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 112:USER/stm32f4xx_it.c ****   while (1)
 113:USER/stm32f4xx_it.c ****   {
 114:USER/stm32f4xx_it.c ****   }
 115:USER/stm32f4xx_it.c **** }
 116:USER/stm32f4xx_it.c **** 
 117:USER/stm32f4xx_it.c **** /**
 118:USER/stm32f4xx_it.c ****   * @brief  This function handles SVCall exception.
 119:USER/stm32f4xx_it.c ****   * @param  None
 120:USER/stm32f4xx_it.c ****   * @retval None
 121:USER/stm32f4xx_it.c ****   */
 122:USER/stm32f4xx_it.c **** void SVC_Handler(void)
 123:USER/stm32f4xx_it.c **** {
 145              		.loc 1 123 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE129:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv4-sp-d16
 162              	DebugMon_Handler:
 163              	.LFB130:
 124:USER/stm32f4xx_it.c **** }
 125:USER/stm32f4xx_it.c **** 
 126:USER/stm32f4xx_it.c **** /**
 127:USER/stm32f4xx_it.c ****   * @brief  This function handles Debug Monitor exception.
 128:USER/stm32f4xx_it.c ****   * @param  None
 129:USER/stm32f4xx_it.c ****   * @retval None
 130:USER/stm32f4xx_it.c ****   */
 131:USER/stm32f4xx_it.c **** void DebugMon_Handler(void)
 132:USER/stm32f4xx_it.c **** {
 164              		.loc 1 132 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccb5gzuh.s 			page 6


 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE130:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv4-sp-d16
 181              	PendSV_Handler:
 182              	.LFB131:
 133:USER/stm32f4xx_it.c **** }
 134:USER/stm32f4xx_it.c **** 
 135:USER/stm32f4xx_it.c **** /**
 136:USER/stm32f4xx_it.c ****   * @brief  This function handles PendSVC exception.
 137:USER/stm32f4xx_it.c ****   * @param  None
 138:USER/stm32f4xx_it.c ****   * @retval None
 139:USER/stm32f4xx_it.c ****   */
 140:USER/stm32f4xx_it.c **** void PendSV_Handler(void)
 141:USER/stm32f4xx_it.c **** {
 183              		.loc 1 141 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		.loc 1 141 0
 188 0000 08B5     		push	{r3, lr}
 189              	.LCFI2:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 142:USER/stm32f4xx_it.c ****   static bool tasksystem_runstate = false;
 143:USER/stm32f4xx_it.c **** 
 144:USER/stm32f4xx_it.c **** #if (TASK_SCHEDULER_TYPE == PREEMPTIVE_SCHDULER)
 145:USER/stm32f4xx_it.c ****   extern volatile TaskStack_ControlBlock CurTsk_TCB;
 146:USER/stm32f4xx_it.c **** #endif
 147:USER/stm32f4xx_it.c ****   //GPIO_Set_IO_LEVEL(GPIOB, GPIO_Pin_4, LO);
 148:USER/stm32f4xx_it.c ****   //cast 1.2us
 149:USER/stm32f4xx_it.c **** 
 150:USER/stm32f4xx_it.c ****   //first time triggered by TaskSystem_Start function
 151:USER/stm32f4xx_it.c ****   if (!tasksystem_runstate)
 193              		.loc 1 151 0
 194 0002 074B     		ldr	r3, .L18
 195 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 196 0006 13B1     		cbz	r3, .L17
 152:USER/stm32f4xx_it.c ****   {
 153:USER/stm32f4xx_it.c ****     tasksystem_runstate = true;
 154:USER/stm32f4xx_it.c ****     TaskSys_Set_State(TaskSys_Start);
 155:USER/stm32f4xx_it.c **** 
 156:USER/stm32f4xx_it.c ****     //Event_TaskOS_StartSchedul_Triggered();
 157:USER/stm32f4xx_it.c ****     Load_FirstTask();
 158:USER/stm32f4xx_it.c ****   }
 159:USER/stm32f4xx_it.c ****   else
 160:USER/stm32f4xx_it.c ****   {
 161:USER/stm32f4xx_it.c **** #if (TASK_SCHEDULER_TYPE == POLL_SCHEDULER)
ARM GAS  /tmp/ccb5gzuh.s 			page 7


 162:USER/stm32f4xx_it.c ****     Task_Caller();
 163:USER/stm32f4xx_it.c **** #else
 164:USER/stm32f4xx_it.c ****     Task_SwitchContext();
 197              		.loc 1 164 0
 198 0008 FFF7FEFF 		bl	Task_SwitchContext
 199              	.LVL1:
 200 000c 08BD     		pop	{r3, pc}
 201              	.L17:
 153:USER/stm32f4xx_it.c ****     TaskSys_Set_State(TaskSys_Start);
 202              		.loc 1 153 0
 203 000e 0122     		movs	r2, #1
 204 0010 034B     		ldr	r3, .L18
 205 0012 1A70     		strb	r2, [r3]
 154:USER/stm32f4xx_it.c **** 
 206              		.loc 1 154 0
 207 0014 0220     		movs	r0, #2
 208 0016 FFF7FEFF 		bl	TaskSys_Set_State
 209              	.LVL2:
 157:USER/stm32f4xx_it.c ****   }
 210              		.loc 1 157 0
 211 001a FFF7FEFF 		bl	Load_FirstTask
 212              	.LVL3:
 213 001e 08BD     		pop	{r3, pc}
 214              	.L19:
 215              		.align	2
 216              	.L18:
 217 0020 00000000 		.word	.LANCHOR0
 218              		.cfi_endproc
 219              	.LFE131:
 221              		.section	.text.SysTick_Handler,"ax",%progbits
 222              		.align	1
 223              		.global	SysTick_Handler
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv4-sp-d16
 229              	SysTick_Handler:
 230              	.LFB132:
 165:USER/stm32f4xx_it.c **** #endif
 166:USER/stm32f4xx_it.c ****   }
 167:USER/stm32f4xx_it.c ****   //GPIO_Set_IO_LEVEL(GPIOB, GPIO_Pin_4, HI);
 168:USER/stm32f4xx_it.c **** }
 169:USER/stm32f4xx_it.c **** 
 170:USER/stm32f4xx_it.c **** /**
 171:USER/stm32f4xx_it.c ****   * @brief  This function handles SysTick Handler.
 172:USER/stm32f4xx_it.c ****   * @param  None
 173:USER/stm32f4xx_it.c ****   * @retval None
 174:USER/stm32f4xx_it.c ****   */
 175:USER/stm32f4xx_it.c **** void SysTick_Handler(void)
 176:USER/stm32f4xx_it.c **** {
 231              		.loc 1 176 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235 0000 08B5     		push	{r3, lr}
 236              	.LCFI3:
 237              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccb5gzuh.s 			page 8


 238              		.cfi_offset 3, -8
 239              		.cfi_offset 14, -4
 177:USER/stm32f4xx_it.c ****   //GPIO_Set_IO_LEVEL(GPIOB, GPIO_Pin_5, LO);
 178:USER/stm32f4xx_it.c ****   //cast 4.8us
 179:USER/stm32f4xx_it.c ****   Runtime_Tick();
 240              		.loc 1 179 0
 241 0002 FFF7FEFF 		bl	Runtime_Tick
 242              	.LVL4:
 180:USER/stm32f4xx_it.c **** 
 181:USER/stm32f4xx_it.c ****   Task_Statistic_Cast(Runtime_GetTickBase());
 243              		.loc 1 181 0
 244 0006 FFF7FEFF 		bl	Runtime_GetTickBase
 245              	.LVL5:
 246 000a FFF7FEFF 		bl	Task_Statistic_Cast
 247              	.LVL6:
 248 000e 08BD     		pop	{r3, pc}
 249              		.cfi_endproc
 250              	.LFE132:
 252              		.section	.bss.tasksystem_runstate.11010,"aw",%nobits
 253              		.set	.LANCHOR0,. + 0
 256              	tasksystem_runstate.11010:
 257 0000 00       		.space	1
 258              		.text
 259              	.Letext0:
 260              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 261              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 262              		.file 4 "F4_CORE/core_cm4.h"
 263              		.file 5 "USER/system_stm32f4xx.h"
 264              		.file 6 "USER/stm32f4xx_it.h"
 265              		.file 7 "/usr/include/newlib/sys/lock.h"
 266              		.file 8 "/usr/include/newlib/sys/_types.h"
 267              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 268              		.file 10 "/usr/include/newlib/sys/reent.h"
 269              		.file 11 "/usr/include/newlib/stdlib.h"
 270              		.file 12 "SYS/task_manager/task_manager.h"
 271              		.file 13 "SYS/faultcheck/fault_check.h"
 272              		.file 14 "SYS/runtime/runtime.h"
ARM GAS  /tmp/ccb5gzuh.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccb5gzuh.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccb5gzuh.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccb5gzuh.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccb5gzuh.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccb5gzuh.s:73     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccb5gzuh.s:80     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccb5gzuh.s:94     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccb5gzuh.s:101    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccb5gzuh.s:115    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccb5gzuh.s:122    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccb5gzuh.s:136    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccb5gzuh.s:143    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccb5gzuh.s:155    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccb5gzuh.s:162    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccb5gzuh.s:174    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccb5gzuh.s:181    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccb5gzuh.s:217    .text.PendSV_Handler:0000000000000020 $d
     /tmp/ccb5gzuh.s:222    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccb5gzuh.s:229    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccb5gzuh.s:256    .bss.tasksystem_runstate.11010:0000000000000000 tasksystem_runstate.11010
     /tmp/ccb5gzuh.s:257    .bss.tasksystem_runstate.11010:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
Get_FaultReg_Value
Task_SwitchContext
TaskSys_Set_State
Load_FirstTask
Runtime_Tick
Runtime_GetTickBase
Task_Statistic_Cast
