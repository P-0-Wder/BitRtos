ARM GAS  /tmp/ccvJk5dy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_dcmi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.DCMI_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	DCMI_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	DCMI_DeInit:
  27              	.LFB123:
  28              		.file 1 "FWLIB/src/stm32f4xx_dcmi.c"
   1:FWLIB/src/stm32f4xx_dcmi.c **** /**
   2:FWLIB/src/stm32f4xx_dcmi.c ****   ******************************************************************************
   3:FWLIB/src/stm32f4xx_dcmi.c ****   * @file    stm32f4xx_dcmi.c
   4:FWLIB/src/stm32f4xx_dcmi.c ****   * @author  MCD Application Team
   5:FWLIB/src/stm32f4xx_dcmi.c ****   * @version V1.8.0
   6:FWLIB/src/stm32f4xx_dcmi.c ****   * @date    04-November-2016
   7:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief   This file provides firmware functions to manage the following 
   8:FWLIB/src/stm32f4xx_dcmi.c ****   *          functionalities of the DCMI peripheral:           
   9:FWLIB/src/stm32f4xx_dcmi.c ****   *           + Initialization and Configuration
  10:FWLIB/src/stm32f4xx_dcmi.c ****   *           + Image capture functions  
  11:FWLIB/src/stm32f4xx_dcmi.c ****   *           + Interrupts and flags management
  12:FWLIB/src/stm32f4xx_dcmi.c ****   *
  13:FWLIB/src/stm32f4xx_dcmi.c ****  @verbatim          
  14:FWLIB/src/stm32f4xx_dcmi.c ****  ===============================================================================
  15:FWLIB/src/stm32f4xx_dcmi.c ****                         ##### How to use this driver #####
  16:FWLIB/src/stm32f4xx_dcmi.c ****  ===============================================================================  
  17:FWLIB/src/stm32f4xx_dcmi.c ****     [..]       
  18:FWLIB/src/stm32f4xx_dcmi.c ****       The sequence below describes how to use this driver to capture image
  19:FWLIB/src/stm32f4xx_dcmi.c ****       from a camera module connected to the DCMI Interface.
  20:FWLIB/src/stm32f4xx_dcmi.c ****       This sequence does not take into account the configuration of the  
  21:FWLIB/src/stm32f4xx_dcmi.c ****       camera module, which should be made before to configure and enable
  22:FWLIB/src/stm32f4xx_dcmi.c ****       the DCMI to capture images.
  23:FWLIB/src/stm32f4xx_dcmi.c ****              
  24:FWLIB/src/stm32f4xx_dcmi.c ****       (#) Enable the clock for the DCMI and associated GPIOs using the following 
  25:FWLIB/src/stm32f4xx_dcmi.c ****           functions:
  26:FWLIB/src/stm32f4xx_dcmi.c ****           RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_DCMI, ENABLE);
  27:FWLIB/src/stm32f4xx_dcmi.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  28:FWLIB/src/stm32f4xx_dcmi.c ****   
  29:FWLIB/src/stm32f4xx_dcmi.c ****       (#) DCMI pins configuration 
  30:FWLIB/src/stm32f4xx_dcmi.c ****         (++) Connect the involved DCMI pins to AF13 using the following function 
ARM GAS  /tmp/ccvJk5dy.s 			page 2


  31:FWLIB/src/stm32f4xx_dcmi.c ****             GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_DCMI); 
  32:FWLIB/src/stm32f4xx_dcmi.c ****         (++) Configure these DCMI pins in alternate function mode by calling 
  33:FWLIB/src/stm32f4xx_dcmi.c ****             the function GPIO_Init();
  34:FWLIB/src/stm32f4xx_dcmi.c ****       
  35:FWLIB/src/stm32f4xx_dcmi.c ****       (#) Declare a DCMI_InitTypeDef structure, for example:
  36:FWLIB/src/stm32f4xx_dcmi.c ****           DCMI_InitTypeDef  DCMI_InitStructure;
  37:FWLIB/src/stm32f4xx_dcmi.c ****           and fill the DCMI_InitStructure variable with the allowed values
  38:FWLIB/src/stm32f4xx_dcmi.c ****           of the structure member.
  39:FWLIB/src/stm32f4xx_dcmi.c ****     
  40:FWLIB/src/stm32f4xx_dcmi.c ****       (#) Initialize the DCMI interface by calling the function
  41:FWLIB/src/stm32f4xx_dcmi.c ****           DCMI_Init(&DCMI_InitStructure); 
  42:FWLIB/src/stm32f4xx_dcmi.c ****     
  43:FWLIB/src/stm32f4xx_dcmi.c ****       (#) Configure the DMA2_Stream1 channel1 to transfer Data from DCMI DR
  44:FWLIB/src/stm32f4xx_dcmi.c ****           register to the destination memory buffer.
  45:FWLIB/src/stm32f4xx_dcmi.c ****     
  46:FWLIB/src/stm32f4xx_dcmi.c ****       (#) Enable DCMI interface using the function
  47:FWLIB/src/stm32f4xx_dcmi.c ****           DCMI_Cmd(ENABLE);
  48:FWLIB/src/stm32f4xx_dcmi.c ****                    
  49:FWLIB/src/stm32f4xx_dcmi.c ****       (#) Start the image capture using the function
  50:FWLIB/src/stm32f4xx_dcmi.c ****           DCMI_CaptureCmd(ENABLE);
  51:FWLIB/src/stm32f4xx_dcmi.c ****                    
  52:FWLIB/src/stm32f4xx_dcmi.c ****       (#) At this stage the DCMI interface waits for the first start of frame,
  53:FWLIB/src/stm32f4xx_dcmi.c ****           then a DMA request is generated continuously/once (depending on the
  54:FWLIB/src/stm32f4xx_dcmi.c ****           mode used, Continuous/Snapshot) to transfer the received data into
  55:FWLIB/src/stm32f4xx_dcmi.c ****           the destination memory. 
  56:FWLIB/src/stm32f4xx_dcmi.c ****      
  57:FWLIB/src/stm32f4xx_dcmi.c ****       -@-  If you need to capture only a rectangular window from the received
  58:FWLIB/src/stm32f4xx_dcmi.c ****            image, you have to use the DCMI_CROPConfig() function to configure 
  59:FWLIB/src/stm32f4xx_dcmi.c ****            the coordinates and size of the window to be captured, then enable 
  60:FWLIB/src/stm32f4xx_dcmi.c ****            the Crop feature using DCMI_CROPCmd(ENABLE);  
  61:FWLIB/src/stm32f4xx_dcmi.c ****            In this case, the Crop configuration should be made before to enable
  62:FWLIB/src/stm32f4xx_dcmi.c ****            and start the DCMI interface. 
  63:FWLIB/src/stm32f4xx_dcmi.c **** 
  64:FWLIB/src/stm32f4xx_dcmi.c ****  @endverbatim     
  65:FWLIB/src/stm32f4xx_dcmi.c ****   ******************************************************************************
  66:FWLIB/src/stm32f4xx_dcmi.c ****   * @attention
  67:FWLIB/src/stm32f4xx_dcmi.c ****   *
  68:FWLIB/src/stm32f4xx_dcmi.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
  69:FWLIB/src/stm32f4xx_dcmi.c ****   *
  70:FWLIB/src/stm32f4xx_dcmi.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  71:FWLIB/src/stm32f4xx_dcmi.c ****   * You may not use this file except in compliance with the License.
  72:FWLIB/src/stm32f4xx_dcmi.c ****   * You may obtain a copy of the License at:
  73:FWLIB/src/stm32f4xx_dcmi.c ****   *
  74:FWLIB/src/stm32f4xx_dcmi.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  75:FWLIB/src/stm32f4xx_dcmi.c ****   *
  76:FWLIB/src/stm32f4xx_dcmi.c ****   * Unless required by applicable law or agreed to in writing, software 
  77:FWLIB/src/stm32f4xx_dcmi.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  78:FWLIB/src/stm32f4xx_dcmi.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  79:FWLIB/src/stm32f4xx_dcmi.c ****   * See the License for the specific language governing permissions and
  80:FWLIB/src/stm32f4xx_dcmi.c ****   * limitations under the License.
  81:FWLIB/src/stm32f4xx_dcmi.c ****   *
  82:FWLIB/src/stm32f4xx_dcmi.c ****   ******************************************************************************
  83:FWLIB/src/stm32f4xx_dcmi.c ****   */
  84:FWLIB/src/stm32f4xx_dcmi.c **** 
  85:FWLIB/src/stm32f4xx_dcmi.c **** /* Includes ------------------------------------------------------------------*/
  86:FWLIB/src/stm32f4xx_dcmi.c **** #include "stm32f4xx_dcmi.h"
  87:FWLIB/src/stm32f4xx_dcmi.c **** #include "stm32f4xx_rcc.h"
ARM GAS  /tmp/ccvJk5dy.s 			page 3


  88:FWLIB/src/stm32f4xx_dcmi.c **** 
  89:FWLIB/src/stm32f4xx_dcmi.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  90:FWLIB/src/stm32f4xx_dcmi.c ****   * @{
  91:FWLIB/src/stm32f4xx_dcmi.c ****   */
  92:FWLIB/src/stm32f4xx_dcmi.c **** 
  93:FWLIB/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI 
  94:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief DCMI driver modules
  95:FWLIB/src/stm32f4xx_dcmi.c ****   * @{
  96:FWLIB/src/stm32f4xx_dcmi.c ****   */ 
  97:FWLIB/src/stm32f4xx_dcmi.c **** 
  98:FWLIB/src/stm32f4xx_dcmi.c **** /* Private typedef -----------------------------------------------------------*/
  99:FWLIB/src/stm32f4xx_dcmi.c **** /* Private define ------------------------------------------------------------*/
 100:FWLIB/src/stm32f4xx_dcmi.c **** /* Private macro -------------------------------------------------------------*/
 101:FWLIB/src/stm32f4xx_dcmi.c **** /* Private variables ---------------------------------------------------------*/
 102:FWLIB/src/stm32f4xx_dcmi.c **** /* Private function prototypes -----------------------------------------------*/
 103:FWLIB/src/stm32f4xx_dcmi.c **** /* Private functions ---------------------------------------------------------*/
 104:FWLIB/src/stm32f4xx_dcmi.c **** 
 105:FWLIB/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Private_Functions
 106:FWLIB/src/stm32f4xx_dcmi.c ****   * @{
 107:FWLIB/src/stm32f4xx_dcmi.c ****   */ 
 108:FWLIB/src/stm32f4xx_dcmi.c **** 
 109:FWLIB/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Group1 Initialization and Configuration functions
 110:FWLIB/src/stm32f4xx_dcmi.c ****  *  @brief   Initialization and Configuration functions 
 111:FWLIB/src/stm32f4xx_dcmi.c ****  *
 112:FWLIB/src/stm32f4xx_dcmi.c **** @verbatim   
 113:FWLIB/src/stm32f4xx_dcmi.c ****  ===============================================================================
 114:FWLIB/src/stm32f4xx_dcmi.c ****               ##### Initialization and Configuration functions #####
 115:FWLIB/src/stm32f4xx_dcmi.c ****  ===============================================================================  
 116:FWLIB/src/stm32f4xx_dcmi.c **** 
 117:FWLIB/src/stm32f4xx_dcmi.c **** @endverbatim
 118:FWLIB/src/stm32f4xx_dcmi.c ****   * @{
 119:FWLIB/src/stm32f4xx_dcmi.c ****   */
 120:FWLIB/src/stm32f4xx_dcmi.c **** 
 121:FWLIB/src/stm32f4xx_dcmi.c **** /**
 122:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Deinitializes the DCMI registers to their default reset values.
 123:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  None
 124:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval None
 125:FWLIB/src/stm32f4xx_dcmi.c ****   */
 126:FWLIB/src/stm32f4xx_dcmi.c **** void DCMI_DeInit(void)
 127:FWLIB/src/stm32f4xx_dcmi.c **** {
  29              		.loc 1 127 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 128:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->CR = 0x0;
  34              		.loc 1 128 3 view .LVU1
  35              		.loc 1 128 12 is_stmt 0 view .LVU2
  36 0000 054B     		ldr	r3, .L2
  37 0002 0022     		movs	r2, #0
  38 0004 1A60     		str	r2, [r3]
 129:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->IER = 0x0;
  39              		.loc 1 129 3 is_stmt 1 view .LVU3
  40              		.loc 1 129 13 is_stmt 0 view .LVU4
  41 0006 DA60     		str	r2, [r3, #12]
 130:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->ICR = 0x1F;
  42              		.loc 1 130 3 is_stmt 1 view .LVU5
ARM GAS  /tmp/ccvJk5dy.s 			page 4


  43              		.loc 1 130 13 is_stmt 0 view .LVU6
  44 0008 1F21     		movs	r1, #31
  45 000a 5961     		str	r1, [r3, #20]
 131:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->ESCR = 0x0;
  46              		.loc 1 131 3 is_stmt 1 view .LVU7
  47              		.loc 1 131 14 is_stmt 0 view .LVU8
  48 000c 9A61     		str	r2, [r3, #24]
 132:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->ESUR = 0x0;
  49              		.loc 1 132 3 is_stmt 1 view .LVU9
  50              		.loc 1 132 14 is_stmt 0 view .LVU10
  51 000e DA61     		str	r2, [r3, #28]
 133:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->CWSTRTR = 0x0;
  52              		.loc 1 133 3 is_stmt 1 view .LVU11
  53              		.loc 1 133 17 is_stmt 0 view .LVU12
  54 0010 1A62     		str	r2, [r3, #32]
 134:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->CWSIZER = 0x0;
  55              		.loc 1 134 3 is_stmt 1 view .LVU13
  56              		.loc 1 134 17 is_stmt 0 view .LVU14
  57 0012 5A62     		str	r2, [r3, #36]
 135:FWLIB/src/stm32f4xx_dcmi.c **** }
  58              		.loc 1 135 1 view .LVU15
  59 0014 7047     		bx	lr
  60              	.L3:
  61 0016 00BF     		.align	2
  62              	.L2:
  63 0018 00000550 		.word	1342504960
  64              		.cfi_endproc
  65              	.LFE123:
  67              		.section	.text.DCMI_Init,"ax",%progbits
  68              		.align	1
  69              		.global	DCMI_Init
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	DCMI_Init:
  76              	.LVL0:
  77              	.LFB124:
 136:FWLIB/src/stm32f4xx_dcmi.c **** 
 137:FWLIB/src/stm32f4xx_dcmi.c **** /**
 138:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Initializes the DCMI according to the specified parameters in the DCMI_InitStruct.
 139:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  DCMI_InitStruct: pointer to a DCMI_InitTypeDef structure that contains 
 140:FWLIB/src/stm32f4xx_dcmi.c ****   *         the configuration information for the DCMI.
 141:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval None
 142:FWLIB/src/stm32f4xx_dcmi.c ****   */
 143:FWLIB/src/stm32f4xx_dcmi.c **** void DCMI_Init(DCMI_InitTypeDef* DCMI_InitStruct)
 144:FWLIB/src/stm32f4xx_dcmi.c **** {
  78              		.loc 1 144 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		.loc 1 144 1 is_stmt 0 view .LVU17
  83 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  84              	.LCFI0:
  85              		.cfi_def_cfa_offset 20
  86              		.cfi_offset 4, -20
  87              		.cfi_offset 5, -16
ARM GAS  /tmp/ccvJk5dy.s 			page 5


  88              		.cfi_offset 6, -12
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
 145:FWLIB/src/stm32f4xx_dcmi.c ****   uint32_t temp = 0x0;
  91              		.loc 1 145 3 is_stmt 1 view .LVU18
  92              	.LVL1:
 146:FWLIB/src/stm32f4xx_dcmi.c ****   
 147:FWLIB/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 148:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CAPTURE_MODE(DCMI_InitStruct->DCMI_CaptureMode));
  93              		.loc 1 148 3 view .LVU19
 149:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_SYNCHRO(DCMI_InitStruct->DCMI_SynchroMode));
  94              		.loc 1 149 3 view .LVU20
 150:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_PCKPOLARITY(DCMI_InitStruct->DCMI_PCKPolarity));
  95              		.loc 1 150 3 view .LVU21
 151:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_VSPOLARITY(DCMI_InitStruct->DCMI_VSPolarity));
  96              		.loc 1 151 3 view .LVU22
 152:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_HSPOLARITY(DCMI_InitStruct->DCMI_HSPolarity));
  97              		.loc 1 152 3 view .LVU23
 153:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CAPTURE_RATE(DCMI_InitStruct->DCMI_CaptureRate));
  98              		.loc 1 153 3 view .LVU24
 154:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_EXTENDED_DATA(DCMI_InitStruct->DCMI_ExtendedDataMode));
  99              		.loc 1 154 3 view .LVU25
 155:FWLIB/src/stm32f4xx_dcmi.c **** 
 156:FWLIB/src/stm32f4xx_dcmi.c ****   /* The DCMI configuration registers should be programmed correctly before 
 157:FWLIB/src/stm32f4xx_dcmi.c ****   enabling the CR_ENABLE Bit and the CR_CAPTURE Bit */
 158:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->CR &= ~(DCMI_CR_ENABLE | DCMI_CR_CAPTURE);
 100              		.loc 1 158 3 view .LVU26
 101              		.loc 1 158 12 is_stmt 0 view .LVU27
 102 0002 1049     		ldr	r1, .L6
 103 0004 0B68     		ldr	r3, [r1]
 104 0006 23F48043 		bic	r3, r3, #16384
 105 000a 23F00103 		bic	r3, r3, #1
 106 000e 0B60     		str	r3, [r1]
 159:FWLIB/src/stm32f4xx_dcmi.c ****    
 160:FWLIB/src/stm32f4xx_dcmi.c ****   /* Reset the old DCMI configuration */
 161:FWLIB/src/stm32f4xx_dcmi.c ****   temp = DCMI->CR;
 107              		.loc 1 161 3 is_stmt 1 view .LVU28
 108              		.loc 1 161 8 is_stmt 0 view .LVU29
 109 0010 0A68     		ldr	r2, [r1]
 110              	.LVL2:
 162:FWLIB/src/stm32f4xx_dcmi.c ****   
 163:FWLIB/src/stm32f4xx_dcmi.c ****   temp &= ~((uint32_t)DCMI_CR_CM     | DCMI_CR_ESS   | DCMI_CR_PCKPOL |
 111              		.loc 1 163 3 is_stmt 1 view .LVU30
 112              		.loc 1 163 8 is_stmt 0 view .LVU31
 113 0012 22F47F62 		bic	r2, r2, #4080
 114              	.LVL3:
 115              		.loc 1 163 8 view .LVU32
 116 0016 22F00202 		bic	r2, r2, #2
 117              	.LVL4:
 164:FWLIB/src/stm32f4xx_dcmi.c ****                       DCMI_CR_HSPOL  | DCMI_CR_VSPOL | DCMI_CR_FCRC_0 | 
 165:FWLIB/src/stm32f4xx_dcmi.c ****                       DCMI_CR_FCRC_1 | DCMI_CR_EDM_0 | DCMI_CR_EDM_1); 
 166:FWLIB/src/stm32f4xx_dcmi.c ****                   
 167:FWLIB/src/stm32f4xx_dcmi.c ****   /* Sets the new configuration of the DCMI peripheral */
 168:FWLIB/src/stm32f4xx_dcmi.c ****   temp |= ((uint32_t)DCMI_InitStruct->DCMI_CaptureMode |
 118              		.loc 1 168 3 is_stmt 1 view .LVU33
 119              		.loc 1 168 37 is_stmt 0 view .LVU34
 120 001a B0F800C0 		ldrh	ip, [r0]
ARM GAS  /tmp/ccvJk5dy.s 			page 6


 169:FWLIB/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_SynchroMode |
 121              		.loc 1 169 37 view .LVU35
 122 001e B0F802E0 		ldrh	lr, [r0, #2]
 170:FWLIB/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_PCKPolarity |
 123              		.loc 1 170 37 view .LVU36
 124 0022 8788     		ldrh	r7, [r0, #4]
 171:FWLIB/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_VSPolarity |
 125              		.loc 1 171 37 view .LVU37
 126 0024 C688     		ldrh	r6, [r0, #6]
 172:FWLIB/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_HSPolarity |
 127              		.loc 1 172 37 view .LVU38
 128 0026 0589     		ldrh	r5, [r0, #8]
 173:FWLIB/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_CaptureRate |
 129              		.loc 1 173 37 view .LVU39
 130 0028 4489     		ldrh	r4, [r0, #10]
 174:FWLIB/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_ExtendedDataMode);
 131              		.loc 1 174 37 view .LVU40
 132 002a 8389     		ldrh	r3, [r0, #12]
 173:FWLIB/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_CaptureRate |
 133              		.loc 1 173 56 view .LVU41
 134 002c 4CEA0E0C 		orr	ip, ip, lr
 135 0030 47EA0C07 		orr	r7, r7, ip
 136 0034 3E43     		orrs	r6, r6, r7
 137 0036 3543     		orrs	r5, r5, r6
 138 0038 2C43     		orrs	r4, r4, r5
 139 003a 2343     		orrs	r3, r3, r4
 168:FWLIB/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_SynchroMode |
 140              		.loc 1 168 8 view .LVU42
 141 003c 1343     		orrs	r3, r3, r2
 142              	.LVL5:
 175:FWLIB/src/stm32f4xx_dcmi.c **** 
 176:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->CR = temp;                              
 143              		.loc 1 176 3 is_stmt 1 view .LVU43
 144              		.loc 1 176 12 is_stmt 0 view .LVU44
 145 003e 0B60     		str	r3, [r1]
 177:FWLIB/src/stm32f4xx_dcmi.c **** }
 146              		.loc 1 177 1 view .LVU45
 147 0040 F0BD     		pop	{r4, r5, r6, r7, pc}
 148              	.L7:
 149 0042 00BF     		.align	2
 150              	.L6:
 151 0044 00000550 		.word	1342504960
 152              		.cfi_endproc
 153              	.LFE124:
 155              		.section	.text.DCMI_StructInit,"ax",%progbits
 156              		.align	1
 157              		.global	DCMI_StructInit
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	DCMI_StructInit:
 164              	.LVL6:
 165              	.LFB125:
 178:FWLIB/src/stm32f4xx_dcmi.c **** 
 179:FWLIB/src/stm32f4xx_dcmi.c **** /**
 180:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Fills each DCMI_InitStruct member with its default value.
ARM GAS  /tmp/ccvJk5dy.s 			page 7


 181:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  DCMI_InitStruct : pointer to a DCMI_InitTypeDef structure which will
 182:FWLIB/src/stm32f4xx_dcmi.c ****   *         be initialized.
 183:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval None
 184:FWLIB/src/stm32f4xx_dcmi.c ****   */
 185:FWLIB/src/stm32f4xx_dcmi.c **** void DCMI_StructInit(DCMI_InitTypeDef* DCMI_InitStruct)
 186:FWLIB/src/stm32f4xx_dcmi.c **** {
 166              		.loc 1 186 1 is_stmt 1 view -0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 187:FWLIB/src/stm32f4xx_dcmi.c ****   /* Set the default configuration */
 188:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_CaptureMode = DCMI_CaptureMode_Continuous;
 171              		.loc 1 188 3 view .LVU47
 172              		.loc 1 188 37 is_stmt 0 view .LVU48
 173 0000 0023     		movs	r3, #0
 174 0002 0380     		strh	r3, [r0]	@ movhi
 189:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_SynchroMode = DCMI_SynchroMode_Hardware;
 175              		.loc 1 189 3 is_stmt 1 view .LVU49
 176              		.loc 1 189 37 is_stmt 0 view .LVU50
 177 0004 4380     		strh	r3, [r0, #2]	@ movhi
 190:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_PCKPolarity = DCMI_PCKPolarity_Falling;
 178              		.loc 1 190 3 is_stmt 1 view .LVU51
 179              		.loc 1 190 37 is_stmt 0 view .LVU52
 180 0006 8380     		strh	r3, [r0, #4]	@ movhi
 191:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_VSPolarity = DCMI_VSPolarity_Low;
 181              		.loc 1 191 3 is_stmt 1 view .LVU53
 182              		.loc 1 191 36 is_stmt 0 view .LVU54
 183 0008 C380     		strh	r3, [r0, #6]	@ movhi
 192:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_HSPolarity = DCMI_HSPolarity_Low;
 184              		.loc 1 192 3 is_stmt 1 view .LVU55
 185              		.loc 1 192 36 is_stmt 0 view .LVU56
 186 000a 0381     		strh	r3, [r0, #8]	@ movhi
 193:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_CaptureRate = DCMI_CaptureRate_All_Frame;
 187              		.loc 1 193 3 is_stmt 1 view .LVU57
 188              		.loc 1 193 37 is_stmt 0 view .LVU58
 189 000c 4381     		strh	r3, [r0, #10]	@ movhi
 194:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_ExtendedDataMode = DCMI_ExtendedDataMode_8b;
 190              		.loc 1 194 3 is_stmt 1 view .LVU59
 191              		.loc 1 194 42 is_stmt 0 view .LVU60
 192 000e 8381     		strh	r3, [r0, #12]	@ movhi
 195:FWLIB/src/stm32f4xx_dcmi.c **** }
 193              		.loc 1 195 1 view .LVU61
 194 0010 7047     		bx	lr
 195              		.cfi_endproc
 196              	.LFE125:
 198              		.section	.text.DCMI_CROPConfig,"ax",%progbits
 199              		.align	1
 200              		.global	DCMI_CROPConfig
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv4-sp-d16
 206              	DCMI_CROPConfig:
 207              	.LVL7:
 208              	.LFB126:
 196:FWLIB/src/stm32f4xx_dcmi.c **** 
ARM GAS  /tmp/ccvJk5dy.s 			page 8


 197:FWLIB/src/stm32f4xx_dcmi.c **** /**
 198:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Initializes the DCMI peripheral CROP mode according to the specified
 199:FWLIB/src/stm32f4xx_dcmi.c ****   *         parameters in the DCMI_CROPInitStruct.
 200:FWLIB/src/stm32f4xx_dcmi.c ****   * @note   This function should be called before to enable and start the DCMI interface.   
 201:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  DCMI_CROPInitStruct:  pointer to a DCMI_CROPInitTypeDef structure that 
 202:FWLIB/src/stm32f4xx_dcmi.c ****   *         contains the configuration information for the DCMI peripheral CROP mode.
 203:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval None
 204:FWLIB/src/stm32f4xx_dcmi.c ****   */
 205:FWLIB/src/stm32f4xx_dcmi.c **** void DCMI_CROPConfig(DCMI_CROPInitTypeDef* DCMI_CROPInitStruct)
 206:FWLIB/src/stm32f4xx_dcmi.c **** {  
 209              		.loc 1 206 1 is_stmt 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 207:FWLIB/src/stm32f4xx_dcmi.c ****   /* Sets the CROP window coordinates */
 208:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->CWSTRTR = (uint32_t)((uint32_t)DCMI_CROPInitStruct->DCMI_HorizontalOffsetCount |
 214              		.loc 1 208 3 view .LVU63
 215              		.loc 1 208 59 is_stmt 0 view .LVU64
 216 0000 4388     		ldrh	r3, [r0, #2]
 209:FWLIB/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalStartLine << 16));
 217              		.loc 1 209 49 view .LVU65
 218 0002 0288     		ldrh	r2, [r0]
 208:FWLIB/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalStartLine << 16));
 219              		.loc 1 208 19 view .LVU66
 220 0004 43EA0243 		orr	r3, r3, r2, lsl #16
 208:FWLIB/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalStartLine << 16));
 221              		.loc 1 208 17 view .LVU67
 222 0008 034A     		ldr	r2, .L10
 223 000a 1362     		str	r3, [r2, #32]
 210:FWLIB/src/stm32f4xx_dcmi.c **** 
 211:FWLIB/src/stm32f4xx_dcmi.c ****   /* Sets the CROP window size */
 212:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->CWSIZER = (uint32_t)(DCMI_CROPInitStruct->DCMI_CaptureCount |
 224              		.loc 1 212 3 is_stmt 1 view .LVU68
 225              		.loc 1 212 49 is_stmt 0 view .LVU69
 226 000c C388     		ldrh	r3, [r0, #6]
 213:FWLIB/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
 227              		.loc 1 213 49 view .LVU70
 228 000e 8188     		ldrh	r1, [r0, #4]
 212:FWLIB/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
 229              		.loc 1 212 19 view .LVU71
 230 0010 43EA0143 		orr	r3, r3, r1, lsl #16
 212:FWLIB/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
 231              		.loc 1 212 17 view .LVU72
 232 0014 5362     		str	r3, [r2, #36]
 214:FWLIB/src/stm32f4xx_dcmi.c **** }
 233              		.loc 1 214 1 view .LVU73
 234 0016 7047     		bx	lr
 235              	.L11:
 236              		.align	2
 237              	.L10:
 238 0018 00000550 		.word	1342504960
 239              		.cfi_endproc
 240              	.LFE126:
 242              		.section	.text.DCMI_CROPCmd,"ax",%progbits
 243              		.align	1
 244              		.global	DCMI_CROPCmd
ARM GAS  /tmp/ccvJk5dy.s 			page 9


 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv4-sp-d16
 250              	DCMI_CROPCmd:
 251              	.LVL8:
 252              	.LFB127:
 215:FWLIB/src/stm32f4xx_dcmi.c **** 
 216:FWLIB/src/stm32f4xx_dcmi.c **** /**
 217:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI Crop feature.
 218:FWLIB/src/stm32f4xx_dcmi.c ****   * @note   This function should be called before to enable and start the DCMI interface.
 219:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI Crop feature. 
 220:FWLIB/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 221:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval None
 222:FWLIB/src/stm32f4xx_dcmi.c ****   */
 223:FWLIB/src/stm32f4xx_dcmi.c **** void DCMI_CROPCmd(FunctionalState NewState)
 224:FWLIB/src/stm32f4xx_dcmi.c **** {
 253              		.loc 1 224 1 is_stmt 1 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 225:FWLIB/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 226:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 258              		.loc 1 226 3 view .LVU75
 227:FWLIB/src/stm32f4xx_dcmi.c ****     
 228:FWLIB/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 259              		.loc 1 228 3 view .LVU76
 260              		.loc 1 228 6 is_stmt 0 view .LVU77
 261 0000 28B1     		cbz	r0, .L13
 229:FWLIB/src/stm32f4xx_dcmi.c ****   {
 230:FWLIB/src/stm32f4xx_dcmi.c ****     /* Enable the DCMI Crop feature */
 231:FWLIB/src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_CROP;
 262              		.loc 1 231 5 is_stmt 1 view .LVU78
 263              		.loc 1 231 14 is_stmt 0 view .LVU79
 264 0002 064A     		ldr	r2, .L15
 265 0004 1368     		ldr	r3, [r2]
 266 0006 43F00403 		orr	r3, r3, #4
 267 000a 1360     		str	r3, [r2]
 268 000c 7047     		bx	lr
 269              	.L13:
 232:FWLIB/src/stm32f4xx_dcmi.c ****   }
 233:FWLIB/src/stm32f4xx_dcmi.c ****   else
 234:FWLIB/src/stm32f4xx_dcmi.c ****   {
 235:FWLIB/src/stm32f4xx_dcmi.c ****     /* Disable the DCMI Crop feature */
 236:FWLIB/src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_CROP;
 270              		.loc 1 236 5 is_stmt 1 view .LVU80
 271              		.loc 1 236 14 is_stmt 0 view .LVU81
 272 000e 034A     		ldr	r2, .L15
 273 0010 1368     		ldr	r3, [r2]
 274 0012 23F00403 		bic	r3, r3, #4
 275 0016 1360     		str	r3, [r2]
 237:FWLIB/src/stm32f4xx_dcmi.c ****   }
 238:FWLIB/src/stm32f4xx_dcmi.c **** }
 276              		.loc 1 238 1 view .LVU82
 277 0018 7047     		bx	lr
 278              	.L16:
ARM GAS  /tmp/ccvJk5dy.s 			page 10


 279 001a 00BF     		.align	2
 280              	.L15:
 281 001c 00000550 		.word	1342504960
 282              		.cfi_endproc
 283              	.LFE127:
 285              		.section	.text.DCMI_SetEmbeddedSynchroCodes,"ax",%progbits
 286              		.align	1
 287              		.global	DCMI_SetEmbeddedSynchroCodes
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	DCMI_SetEmbeddedSynchroCodes:
 294              	.LVL9:
 295              	.LFB128:
 239:FWLIB/src/stm32f4xx_dcmi.c **** 
 240:FWLIB/src/stm32f4xx_dcmi.c **** /**
 241:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Sets the embedded synchronization codes
 242:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  DCMI_CodesInitTypeDef: pointer to a DCMI_CodesInitTypeDef structure that
 243:FWLIB/src/stm32f4xx_dcmi.c ****   *         contains the embedded synchronization codes for the DCMI peripheral.
 244:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval None
 245:FWLIB/src/stm32f4xx_dcmi.c ****   */
 246:FWLIB/src/stm32f4xx_dcmi.c **** void DCMI_SetEmbeddedSynchroCodes(DCMI_CodesInitTypeDef* DCMI_CodesInitStruct)
 247:FWLIB/src/stm32f4xx_dcmi.c **** {
 296              		.loc 1 247 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 248:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->ESCR = (uint32_t)(DCMI_CodesInitStruct->DCMI_FrameStartCode |
 301              		.loc 1 248 3 view .LVU84
 302              		.loc 1 248 47 is_stmt 0 view .LVU85
 303 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 249:FWLIB/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 304              		.loc 1 249 58 view .LVU86
 305 0002 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 248:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->ESCR = (uint32_t)(DCMI_CodesInitStruct->DCMI_FrameStartCode |
 306              		.loc 1 248 69 view .LVU87
 307 0004 43EA0223 		orr	r3, r3, r2, lsl #8
 250:FWLIB/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineEndCode << 16)|
 308              		.loc 1 250 58 view .LVU88
 309 0008 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 249:FWLIB/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 310              		.loc 1 249 84 view .LVU89
 311 000a 43EA0243 		orr	r3, r3, r2, lsl #16
 251:FWLIB/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_FrameEndCode << 24));
 312              		.loc 1 251 58 view .LVU90
 313 000e C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
 248:FWLIB/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 314              		.loc 1 248 16 view .LVU91
 315 0010 43EA0263 		orr	r3, r3, r2, lsl #24
 248:FWLIB/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 316              		.loc 1 248 14 view .LVU92
 317 0014 014A     		ldr	r2, .L18
 318 0016 9361     		str	r3, [r2, #24]
 252:FWLIB/src/stm32f4xx_dcmi.c **** }
 319              		.loc 1 252 1 view .LVU93
ARM GAS  /tmp/ccvJk5dy.s 			page 11


 320 0018 7047     		bx	lr
 321              	.L19:
 322 001a 00BF     		.align	2
 323              	.L18:
 324 001c 00000550 		.word	1342504960
 325              		.cfi_endproc
 326              	.LFE128:
 328              		.section	.text.DCMI_JPEGCmd,"ax",%progbits
 329              		.align	1
 330              		.global	DCMI_JPEGCmd
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu fpv4-sp-d16
 336              	DCMI_JPEGCmd:
 337              	.LVL10:
 338              	.LFB129:
 253:FWLIB/src/stm32f4xx_dcmi.c **** 
 254:FWLIB/src/stm32f4xx_dcmi.c **** /**
 255:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI JPEG format.
 256:FWLIB/src/stm32f4xx_dcmi.c ****   * @note   The Crop and Embedded Synchronization features cannot be used in this mode.  
 257:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI JPEG format. 
 258:FWLIB/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 259:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval None
 260:FWLIB/src/stm32f4xx_dcmi.c ****   */
 261:FWLIB/src/stm32f4xx_dcmi.c **** void DCMI_JPEGCmd(FunctionalState NewState)
 262:FWLIB/src/stm32f4xx_dcmi.c **** {
 339              		.loc 1 262 1 is_stmt 1 view -0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 263:FWLIB/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 264:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 344              		.loc 1 264 3 view .LVU95
 265:FWLIB/src/stm32f4xx_dcmi.c ****  
 266:FWLIB/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 345              		.loc 1 266 3 view .LVU96
 346              		.loc 1 266 6 is_stmt 0 view .LVU97
 347 0000 28B1     		cbz	r0, .L21
 267:FWLIB/src/stm32f4xx_dcmi.c ****   {
 268:FWLIB/src/stm32f4xx_dcmi.c ****     /* Enable the DCMI JPEG format */
 269:FWLIB/src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_JPEG;
 348              		.loc 1 269 5 is_stmt 1 view .LVU98
 349              		.loc 1 269 14 is_stmt 0 view .LVU99
 350 0002 064A     		ldr	r2, .L23
 351 0004 1368     		ldr	r3, [r2]
 352 0006 43F00803 		orr	r3, r3, #8
 353 000a 1360     		str	r3, [r2]
 354 000c 7047     		bx	lr
 355              	.L21:
 270:FWLIB/src/stm32f4xx_dcmi.c ****   }
 271:FWLIB/src/stm32f4xx_dcmi.c ****   else
 272:FWLIB/src/stm32f4xx_dcmi.c ****   {
 273:FWLIB/src/stm32f4xx_dcmi.c ****     /* Disable the DCMI JPEG format */
 274:FWLIB/src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_JPEG;
 356              		.loc 1 274 5 is_stmt 1 view .LVU100
ARM GAS  /tmp/ccvJk5dy.s 			page 12


 357              		.loc 1 274 14 is_stmt 0 view .LVU101
 358 000e 034A     		ldr	r2, .L23
 359 0010 1368     		ldr	r3, [r2]
 360 0012 23F00803 		bic	r3, r3, #8
 361 0016 1360     		str	r3, [r2]
 275:FWLIB/src/stm32f4xx_dcmi.c ****   }
 276:FWLIB/src/stm32f4xx_dcmi.c **** }
 362              		.loc 1 276 1 view .LVU102
 363 0018 7047     		bx	lr
 364              	.L24:
 365 001a 00BF     		.align	2
 366              	.L23:
 367 001c 00000550 		.word	1342504960
 368              		.cfi_endproc
 369              	.LFE129:
 371              		.section	.text.DCMI_Cmd,"ax",%progbits
 372              		.align	1
 373              		.global	DCMI_Cmd
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu fpv4-sp-d16
 379              	DCMI_Cmd:
 380              	.LVL11:
 381              	.LFB130:
 277:FWLIB/src/stm32f4xx_dcmi.c **** /**
 278:FWLIB/src/stm32f4xx_dcmi.c ****   * @}
 279:FWLIB/src/stm32f4xx_dcmi.c ****   */
 280:FWLIB/src/stm32f4xx_dcmi.c **** 
 281:FWLIB/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Group2 Image capture functions
 282:FWLIB/src/stm32f4xx_dcmi.c ****  *  @brief   Image capture functions
 283:FWLIB/src/stm32f4xx_dcmi.c ****  *
 284:FWLIB/src/stm32f4xx_dcmi.c **** @verbatim   
 285:FWLIB/src/stm32f4xx_dcmi.c ****  ===============================================================================
 286:FWLIB/src/stm32f4xx_dcmi.c ****                     ##### Image capture functions #####
 287:FWLIB/src/stm32f4xx_dcmi.c ****  ===============================================================================  
 288:FWLIB/src/stm32f4xx_dcmi.c **** 
 289:FWLIB/src/stm32f4xx_dcmi.c **** @endverbatim
 290:FWLIB/src/stm32f4xx_dcmi.c ****   * @{
 291:FWLIB/src/stm32f4xx_dcmi.c ****   */
 292:FWLIB/src/stm32f4xx_dcmi.c ****   
 293:FWLIB/src/stm32f4xx_dcmi.c **** /**
 294:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI interface.
 295:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI interface. 
 296:FWLIB/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 297:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval None
 298:FWLIB/src/stm32f4xx_dcmi.c ****   */
 299:FWLIB/src/stm32f4xx_dcmi.c **** void DCMI_Cmd(FunctionalState NewState)
 300:FWLIB/src/stm32f4xx_dcmi.c **** {
 382              		.loc 1 300 1 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 301:FWLIB/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 302:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 387              		.loc 1 302 3 view .LVU104
ARM GAS  /tmp/ccvJk5dy.s 			page 13


 303:FWLIB/src/stm32f4xx_dcmi.c ****   
 304:FWLIB/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 388              		.loc 1 304 3 view .LVU105
 389              		.loc 1 304 6 is_stmt 0 view .LVU106
 390 0000 28B1     		cbz	r0, .L26
 305:FWLIB/src/stm32f4xx_dcmi.c ****   {
 306:FWLIB/src/stm32f4xx_dcmi.c ****     /* Enable the DCMI by setting ENABLE bit */
 307:FWLIB/src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_ENABLE;
 391              		.loc 1 307 5 is_stmt 1 view .LVU107
 392              		.loc 1 307 14 is_stmt 0 view .LVU108
 393 0002 064A     		ldr	r2, .L28
 394 0004 1368     		ldr	r3, [r2]
 395 0006 43F48043 		orr	r3, r3, #16384
 396 000a 1360     		str	r3, [r2]
 397 000c 7047     		bx	lr
 398              	.L26:
 308:FWLIB/src/stm32f4xx_dcmi.c ****   }
 309:FWLIB/src/stm32f4xx_dcmi.c ****   else
 310:FWLIB/src/stm32f4xx_dcmi.c ****   {
 311:FWLIB/src/stm32f4xx_dcmi.c ****     /* Disable the DCMI by clearing ENABLE bit */
 312:FWLIB/src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_ENABLE;
 399              		.loc 1 312 5 is_stmt 1 view .LVU109
 400              		.loc 1 312 14 is_stmt 0 view .LVU110
 401 000e 034A     		ldr	r2, .L28
 402 0010 1368     		ldr	r3, [r2]
 403 0012 23F48043 		bic	r3, r3, #16384
 404 0016 1360     		str	r3, [r2]
 313:FWLIB/src/stm32f4xx_dcmi.c ****   }
 314:FWLIB/src/stm32f4xx_dcmi.c **** }
 405              		.loc 1 314 1 view .LVU111
 406 0018 7047     		bx	lr
 407              	.L29:
 408 001a 00BF     		.align	2
 409              	.L28:
 410 001c 00000550 		.word	1342504960
 411              		.cfi_endproc
 412              	.LFE130:
 414              		.section	.text.DCMI_CaptureCmd,"ax",%progbits
 415              		.align	1
 416              		.global	DCMI_CaptureCmd
 417              		.syntax unified
 418              		.thumb
 419              		.thumb_func
 420              		.fpu fpv4-sp-d16
 422              	DCMI_CaptureCmd:
 423              	.LVL12:
 424              	.LFB131:
 315:FWLIB/src/stm32f4xx_dcmi.c **** 
 316:FWLIB/src/stm32f4xx_dcmi.c **** /**
 317:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI Capture.
 318:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI capture. 
 319:FWLIB/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 320:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval None
 321:FWLIB/src/stm32f4xx_dcmi.c ****   */
 322:FWLIB/src/stm32f4xx_dcmi.c **** void DCMI_CaptureCmd(FunctionalState NewState)
 323:FWLIB/src/stm32f4xx_dcmi.c **** {
 425              		.loc 1 323 1 is_stmt 1 view -0
ARM GAS  /tmp/ccvJk5dy.s 			page 14


 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 324:FWLIB/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 325:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 430              		.loc 1 325 3 view .LVU113
 326:FWLIB/src/stm32f4xx_dcmi.c ****     
 327:FWLIB/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 431              		.loc 1 327 3 view .LVU114
 432              		.loc 1 327 6 is_stmt 0 view .LVU115
 433 0000 28B1     		cbz	r0, .L31
 328:FWLIB/src/stm32f4xx_dcmi.c ****   {
 329:FWLIB/src/stm32f4xx_dcmi.c ****     /* Enable the DCMI Capture */
 330:FWLIB/src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_CAPTURE;
 434              		.loc 1 330 5 is_stmt 1 view .LVU116
 435              		.loc 1 330 14 is_stmt 0 view .LVU117
 436 0002 064A     		ldr	r2, .L33
 437 0004 1368     		ldr	r3, [r2]
 438 0006 43F00103 		orr	r3, r3, #1
 439 000a 1360     		str	r3, [r2]
 440 000c 7047     		bx	lr
 441              	.L31:
 331:FWLIB/src/stm32f4xx_dcmi.c ****   }
 332:FWLIB/src/stm32f4xx_dcmi.c ****   else
 333:FWLIB/src/stm32f4xx_dcmi.c ****   {
 334:FWLIB/src/stm32f4xx_dcmi.c ****     /* Disable the DCMI Capture */
 335:FWLIB/src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_CAPTURE;
 442              		.loc 1 335 5 is_stmt 1 view .LVU118
 443              		.loc 1 335 14 is_stmt 0 view .LVU119
 444 000e 034A     		ldr	r2, .L33
 445 0010 1368     		ldr	r3, [r2]
 446 0012 23F00103 		bic	r3, r3, #1
 447 0016 1360     		str	r3, [r2]
 336:FWLIB/src/stm32f4xx_dcmi.c ****   }
 337:FWLIB/src/stm32f4xx_dcmi.c **** }
 448              		.loc 1 337 1 view .LVU120
 449 0018 7047     		bx	lr
 450              	.L34:
 451 001a 00BF     		.align	2
 452              	.L33:
 453 001c 00000550 		.word	1342504960
 454              		.cfi_endproc
 455              	.LFE131:
 457              		.section	.text.DCMI_ReadData,"ax",%progbits
 458              		.align	1
 459              		.global	DCMI_ReadData
 460              		.syntax unified
 461              		.thumb
 462              		.thumb_func
 463              		.fpu fpv4-sp-d16
 465              	DCMI_ReadData:
 466              	.LFB132:
 338:FWLIB/src/stm32f4xx_dcmi.c **** 
 339:FWLIB/src/stm32f4xx_dcmi.c **** /**
 340:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Reads the data stored in the DR register.
 341:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  None 
ARM GAS  /tmp/ccvJk5dy.s 			page 15


 342:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval Data register value
 343:FWLIB/src/stm32f4xx_dcmi.c ****   */
 344:FWLIB/src/stm32f4xx_dcmi.c **** uint32_t DCMI_ReadData(void)
 345:FWLIB/src/stm32f4xx_dcmi.c **** {
 467              		.loc 1 345 1 is_stmt 1 view -0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 346:FWLIB/src/stm32f4xx_dcmi.c ****   return DCMI->DR;
 472              		.loc 1 346 3 view .LVU122
 473              		.loc 1 346 14 is_stmt 0 view .LVU123
 474 0000 014B     		ldr	r3, .L36
 475 0002 986A     		ldr	r0, [r3, #40]
 347:FWLIB/src/stm32f4xx_dcmi.c **** }
 476              		.loc 1 347 1 view .LVU124
 477 0004 7047     		bx	lr
 478              	.L37:
 479 0006 00BF     		.align	2
 480              	.L36:
 481 0008 00000550 		.word	1342504960
 482              		.cfi_endproc
 483              	.LFE132:
 485              		.section	.text.DCMI_ITConfig,"ax",%progbits
 486              		.align	1
 487              		.global	DCMI_ITConfig
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
 491              		.fpu fpv4-sp-d16
 493              	DCMI_ITConfig:
 494              	.LVL13:
 495              	.LFB133:
 348:FWLIB/src/stm32f4xx_dcmi.c **** /**
 349:FWLIB/src/stm32f4xx_dcmi.c ****   * @}
 350:FWLIB/src/stm32f4xx_dcmi.c ****   */
 351:FWLIB/src/stm32f4xx_dcmi.c **** 
 352:FWLIB/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Group3 Interrupts and flags management functions
 353:FWLIB/src/stm32f4xx_dcmi.c ****  *  @brief   Interrupts and flags management functions
 354:FWLIB/src/stm32f4xx_dcmi.c ****  *
 355:FWLIB/src/stm32f4xx_dcmi.c **** @verbatim   
 356:FWLIB/src/stm32f4xx_dcmi.c ****  ===============================================================================
 357:FWLIB/src/stm32f4xx_dcmi.c ****              ##### Interrupts and flags management functions #####
 358:FWLIB/src/stm32f4xx_dcmi.c ****  ===============================================================================  
 359:FWLIB/src/stm32f4xx_dcmi.c **** 
 360:FWLIB/src/stm32f4xx_dcmi.c **** @endverbatim
 361:FWLIB/src/stm32f4xx_dcmi.c ****   * @{
 362:FWLIB/src/stm32f4xx_dcmi.c ****   */
 363:FWLIB/src/stm32f4xx_dcmi.c **** 
 364:FWLIB/src/stm32f4xx_dcmi.c **** /**
 365:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI interface interrupts.
 366:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  DCMI_IT: specifies the DCMI interrupt sources to be enabled or disabled. 
 367:FWLIB/src/stm32f4xx_dcmi.c ****   *          This parameter can be any combination of the following values:
 368:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_FRAME: Frame capture complete interrupt mask
 369:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_OVF: Overflow interrupt mask
 370:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_ERR: Synchronization error interrupt mask
 371:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_VSYNC: VSYNC interrupt mask
ARM GAS  /tmp/ccvJk5dy.s 			page 16


 372:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_LINE: Line interrupt mask
 373:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the specified DCMI interrupts.
 374:FWLIB/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 375:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval None
 376:FWLIB/src/stm32f4xx_dcmi.c ****   */
 377:FWLIB/src/stm32f4xx_dcmi.c **** void DCMI_ITConfig(uint16_t DCMI_IT, FunctionalState NewState)
 378:FWLIB/src/stm32f4xx_dcmi.c **** {
 496              		.loc 1 378 1 is_stmt 1 view -0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 379:FWLIB/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 380:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CONFIG_IT(DCMI_IT));
 501              		.loc 1 380 3 view .LVU126
 381:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 502              		.loc 1 381 3 view .LVU127
 382:FWLIB/src/stm32f4xx_dcmi.c ****   
 383:FWLIB/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 503              		.loc 1 383 3 view .LVU128
 504              		.loc 1 383 6 is_stmt 0 view .LVU129
 505 0000 21B1     		cbz	r1, .L39
 384:FWLIB/src/stm32f4xx_dcmi.c ****   {
 385:FWLIB/src/stm32f4xx_dcmi.c ****     /* Enable the Interrupt sources */
 386:FWLIB/src/stm32f4xx_dcmi.c ****     DCMI->IER |= DCMI_IT;
 506              		.loc 1 386 5 is_stmt 1 view .LVU130
 507              		.loc 1 386 15 is_stmt 0 view .LVU131
 508 0002 064B     		ldr	r3, .L41
 509 0004 DA68     		ldr	r2, [r3, #12]
 510 0006 1043     		orrs	r0, r0, r2
 511              	.LVL14:
 512              		.loc 1 386 15 view .LVU132
 513 0008 D860     		str	r0, [r3, #12]
 514 000a 7047     		bx	lr
 515              	.LVL15:
 516              	.L39:
 387:FWLIB/src/stm32f4xx_dcmi.c ****   }
 388:FWLIB/src/stm32f4xx_dcmi.c ****   else
 389:FWLIB/src/stm32f4xx_dcmi.c ****   {
 390:FWLIB/src/stm32f4xx_dcmi.c ****     /* Disable the Interrupt sources */
 391:FWLIB/src/stm32f4xx_dcmi.c ****     DCMI->IER &= (uint16_t)(~DCMI_IT);
 517              		.loc 1 391 5 is_stmt 1 view .LVU133
 518              		.loc 1 391 15 is_stmt 0 view .LVU134
 519 000c 034A     		ldr	r2, .L41
 520 000e D368     		ldr	r3, [r2, #12]
 521              		.loc 1 391 18 view .LVU135
 522 0010 C043     		mvns	r0, r0
 523              	.LVL16:
 524              		.loc 1 391 18 view .LVU136
 525 0012 80B2     		uxth	r0, r0
 526              		.loc 1 391 15 view .LVU137
 527 0014 1840     		ands	r0, r0, r3
 528 0016 D060     		str	r0, [r2, #12]
 392:FWLIB/src/stm32f4xx_dcmi.c ****   }  
 393:FWLIB/src/stm32f4xx_dcmi.c **** }
 529              		.loc 1 393 1 view .LVU138
 530 0018 7047     		bx	lr
ARM GAS  /tmp/ccvJk5dy.s 			page 17


 531              	.L42:
 532 001a 00BF     		.align	2
 533              	.L41:
 534 001c 00000550 		.word	1342504960
 535              		.cfi_endproc
 536              	.LFE133:
 538              		.section	.text.DCMI_GetFlagStatus,"ax",%progbits
 539              		.align	1
 540              		.global	DCMI_GetFlagStatus
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 544              		.fpu fpv4-sp-d16
 546              	DCMI_GetFlagStatus:
 547              	.LVL17:
 548              	.LFB134:
 394:FWLIB/src/stm32f4xx_dcmi.c **** 
 395:FWLIB/src/stm32f4xx_dcmi.c **** /**
 396:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Checks whether the  DCMI interface flag is set or not.
 397:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  DCMI_FLAG: specifies the flag to check.
 398:FWLIB/src/stm32f4xx_dcmi.c ****   *          This parameter can be one of the following values:
 399:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FRAMERI: Frame capture complete Raw flag mask
 400:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_OVFRI: Overflow Raw flag mask
 401:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_ERRRI: Synchronization error Raw flag mask
 402:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNCRI: VSYNC Raw flag mask
 403:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_LINERI: Line Raw flag mask
 404:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FRAMEMI: Frame capture complete Masked flag mask
 405:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_OVFMI: Overflow Masked flag mask
 406:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_ERRMI: Synchronization error Masked flag mask
 407:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNCMI: VSYNC Masked flag mask
 408:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_LINEMI: Line Masked flag mask
 409:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_HSYNC: HSYNC flag mask
 410:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNC: VSYNC flag mask
 411:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FNE: Fifo not empty flag mask
 412:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval The new state of DCMI_FLAG (SET or RESET).
 413:FWLIB/src/stm32f4xx_dcmi.c ****   */
 414:FWLIB/src/stm32f4xx_dcmi.c **** FlagStatus DCMI_GetFlagStatus(uint16_t DCMI_FLAG)
 415:FWLIB/src/stm32f4xx_dcmi.c **** {
 549              		.loc 1 415 1 is_stmt 1 view -0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 416:FWLIB/src/stm32f4xx_dcmi.c ****   FlagStatus bitstatus = RESET;
 554              		.loc 1 416 3 view .LVU140
 417:FWLIB/src/stm32f4xx_dcmi.c ****   uint32_t dcmireg, tempreg = 0;
 555              		.loc 1 417 3 view .LVU141
 418:FWLIB/src/stm32f4xx_dcmi.c **** 
 419:FWLIB/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 420:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_GET_FLAG(DCMI_FLAG));
 556              		.loc 1 420 3 view .LVU142
 421:FWLIB/src/stm32f4xx_dcmi.c ****   
 422:FWLIB/src/stm32f4xx_dcmi.c ****   /* Get the DCMI register index */
 423:FWLIB/src/stm32f4xx_dcmi.c ****   dcmireg = (((uint16_t)DCMI_FLAG) >> 12);
 557              		.loc 1 423 3 view .LVU143
 424:FWLIB/src/stm32f4xx_dcmi.c ****   
 425:FWLIB/src/stm32f4xx_dcmi.c ****   if (dcmireg == 0x00) /* The FLAG is in RISR register */
ARM GAS  /tmp/ccvJk5dy.s 			page 18


 558              		.loc 1 425 3 view .LVU144
 559              		.loc 1 425 6 is_stmt 0 view .LVU145
 560 0000 030B     		lsrs	r3, r0, #12
 561              	.LVL18:
 562              		.loc 1 425 6 view .LVU146
 563 0002 05D1     		bne	.L44
 426:FWLIB/src/stm32f4xx_dcmi.c ****   {
 427:FWLIB/src/stm32f4xx_dcmi.c ****     tempreg= DCMI->RISR;
 564              		.loc 1 427 5 is_stmt 1 view .LVU147
 565              		.loc 1 427 12 is_stmt 0 view .LVU148
 566 0004 074B     		ldr	r3, .L50
 567              	.LVL19:
 568              		.loc 1 427 12 view .LVU149
 569 0006 9B68     		ldr	r3, [r3, #8]
 570              	.LVL20:
 571              	.L45:
 428:FWLIB/src/stm32f4xx_dcmi.c ****   }
 429:FWLIB/src/stm32f4xx_dcmi.c ****   else if (dcmireg == 0x02) /* The FLAG is in SR register */
 430:FWLIB/src/stm32f4xx_dcmi.c ****   {
 431:FWLIB/src/stm32f4xx_dcmi.c ****     tempreg = DCMI->SR;
 432:FWLIB/src/stm32f4xx_dcmi.c ****   }
 433:FWLIB/src/stm32f4xx_dcmi.c ****   else /* The FLAG is in MISR register */
 434:FWLIB/src/stm32f4xx_dcmi.c ****   {
 435:FWLIB/src/stm32f4xx_dcmi.c ****     tempreg = DCMI->MISR;
 436:FWLIB/src/stm32f4xx_dcmi.c ****   }
 437:FWLIB/src/stm32f4xx_dcmi.c ****   
 438:FWLIB/src/stm32f4xx_dcmi.c ****   if ((tempreg & DCMI_FLAG) != (uint16_t)RESET )
 572              		.loc 1 438 3 is_stmt 1 view .LVU150
 573              		.loc 1 438 6 is_stmt 0 view .LVU151
 574 0008 1842     		tst	r0, r3
 575 000a 09D0     		beq	.L48
 439:FWLIB/src/stm32f4xx_dcmi.c ****   {
 440:FWLIB/src/stm32f4xx_dcmi.c ****     bitstatus = SET;
 576              		.loc 1 440 15 view .LVU152
 577 000c 0120     		movs	r0, #1
 578              	.LVL21:
 579              		.loc 1 440 15 view .LVU153
 580 000e 7047     		bx	lr
 581              	.LVL22:
 582              	.L44:
 429:FWLIB/src/stm32f4xx_dcmi.c ****   {
 583              		.loc 1 429 8 is_stmt 1 view .LVU154
 429:FWLIB/src/stm32f4xx_dcmi.c ****   {
 584              		.loc 1 429 11 is_stmt 0 view .LVU155
 585 0010 022B     		cmp	r3, #2
 586 0012 02D0     		beq	.L49
 435:FWLIB/src/stm32f4xx_dcmi.c ****   }
 587              		.loc 1 435 5 is_stmt 1 view .LVU156
 435:FWLIB/src/stm32f4xx_dcmi.c ****   }
 588              		.loc 1 435 13 is_stmt 0 view .LVU157
 589 0014 034B     		ldr	r3, .L50
 590              	.LVL23:
 435:FWLIB/src/stm32f4xx_dcmi.c ****   }
 591              		.loc 1 435 13 view .LVU158
 592 0016 1B69     		ldr	r3, [r3, #16]
 593              	.LVL24:
 435:FWLIB/src/stm32f4xx_dcmi.c ****   }
ARM GAS  /tmp/ccvJk5dy.s 			page 19


 594              		.loc 1 435 13 view .LVU159
 595 0018 F6E7     		b	.L45
 596              	.LVL25:
 597              	.L49:
 431:FWLIB/src/stm32f4xx_dcmi.c ****   }
 598              		.loc 1 431 5 is_stmt 1 view .LVU160
 431:FWLIB/src/stm32f4xx_dcmi.c ****   }
 599              		.loc 1 431 13 is_stmt 0 view .LVU161
 600 001a 024B     		ldr	r3, .L50
 601              	.LVL26:
 431:FWLIB/src/stm32f4xx_dcmi.c ****   }
 602              		.loc 1 431 13 view .LVU162
 603 001c 5B68     		ldr	r3, [r3, #4]
 604              	.LVL27:
 431:FWLIB/src/stm32f4xx_dcmi.c ****   }
 605              		.loc 1 431 13 view .LVU163
 606 001e F3E7     		b	.L45
 607              	.L48:
 441:FWLIB/src/stm32f4xx_dcmi.c ****   }
 442:FWLIB/src/stm32f4xx_dcmi.c ****   else
 443:FWLIB/src/stm32f4xx_dcmi.c ****   {
 444:FWLIB/src/stm32f4xx_dcmi.c ****     bitstatus = RESET;
 608              		.loc 1 444 15 view .LVU164
 609 0020 0020     		movs	r0, #0
 610              	.LVL28:
 445:FWLIB/src/stm32f4xx_dcmi.c ****   }
 446:FWLIB/src/stm32f4xx_dcmi.c ****   /* Return the DCMI_FLAG status */
 447:FWLIB/src/stm32f4xx_dcmi.c ****   return  bitstatus;
 611              		.loc 1 447 3 is_stmt 1 view .LVU165
 448:FWLIB/src/stm32f4xx_dcmi.c **** }
 612              		.loc 1 448 1 is_stmt 0 view .LVU166
 613 0022 7047     		bx	lr
 614              	.L51:
 615              		.align	2
 616              	.L50:
 617 0024 00000550 		.word	1342504960
 618              		.cfi_endproc
 619              	.LFE134:
 621              		.section	.text.DCMI_ClearFlag,"ax",%progbits
 622              		.align	1
 623              		.global	DCMI_ClearFlag
 624              		.syntax unified
 625              		.thumb
 626              		.thumb_func
 627              		.fpu fpv4-sp-d16
 629              	DCMI_ClearFlag:
 630              	.LVL29:
 631              	.LFB135:
 449:FWLIB/src/stm32f4xx_dcmi.c **** 
 450:FWLIB/src/stm32f4xx_dcmi.c **** /**
 451:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Clears the DCMI's pending flags.
 452:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  DCMI_FLAG: specifies the flag to clear.
 453:FWLIB/src/stm32f4xx_dcmi.c ****   *          This parameter can be any combination of the following values:
 454:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FRAMERI: Frame capture complete Raw flag mask
 455:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_OVFRI: Overflow Raw flag mask
 456:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_ERRRI: Synchronization error Raw flag mask
 457:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNCRI: VSYNC Raw flag mask
ARM GAS  /tmp/ccvJk5dy.s 			page 20


 458:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_LINERI: Line Raw flag mask
 459:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval None
 460:FWLIB/src/stm32f4xx_dcmi.c ****   */
 461:FWLIB/src/stm32f4xx_dcmi.c **** void DCMI_ClearFlag(uint16_t DCMI_FLAG)
 462:FWLIB/src/stm32f4xx_dcmi.c **** {
 632              		.loc 1 462 1 is_stmt 1 view -0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 463:FWLIB/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 464:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CLEAR_FLAG(DCMI_FLAG));
 637              		.loc 1 464 3 view .LVU168
 465:FWLIB/src/stm32f4xx_dcmi.c ****   
 466:FWLIB/src/stm32f4xx_dcmi.c ****   /* Clear the flag by writing in the ICR register 1 in the corresponding 
 467:FWLIB/src/stm32f4xx_dcmi.c ****   Flag position*/
 468:FWLIB/src/stm32f4xx_dcmi.c ****   
 469:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->ICR = DCMI_FLAG;
 638              		.loc 1 469 3 view .LVU169
 639              		.loc 1 469 13 is_stmt 0 view .LVU170
 640 0000 014B     		ldr	r3, .L53
 641 0002 5861     		str	r0, [r3, #20]
 470:FWLIB/src/stm32f4xx_dcmi.c **** }
 642              		.loc 1 470 1 view .LVU171
 643 0004 7047     		bx	lr
 644              	.L54:
 645 0006 00BF     		.align	2
 646              	.L53:
 647 0008 00000550 		.word	1342504960
 648              		.cfi_endproc
 649              	.LFE135:
 651              		.section	.text.DCMI_GetITStatus,"ax",%progbits
 652              		.align	1
 653              		.global	DCMI_GetITStatus
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 657              		.fpu fpv4-sp-d16
 659              	DCMI_GetITStatus:
 660              	.LVL30:
 661              	.LFB136:
 471:FWLIB/src/stm32f4xx_dcmi.c **** 
 472:FWLIB/src/stm32f4xx_dcmi.c **** /**
 473:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Checks whether the DCMI interrupt has occurred or not.
 474:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  DCMI_IT: specifies the DCMI interrupt source to check.
 475:FWLIB/src/stm32f4xx_dcmi.c ****   *          This parameter can be one of the following values:
 476:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_FRAME: Frame capture complete interrupt mask
 477:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_OVF: Overflow interrupt mask
 478:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_ERR: Synchronization error interrupt mask
 479:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_VSYNC: VSYNC interrupt mask
 480:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_LINE: Line interrupt mask
 481:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval The new state of DCMI_IT (SET or RESET).
 482:FWLIB/src/stm32f4xx_dcmi.c ****   */
 483:FWLIB/src/stm32f4xx_dcmi.c **** ITStatus DCMI_GetITStatus(uint16_t DCMI_IT)
 484:FWLIB/src/stm32f4xx_dcmi.c **** {
 662              		.loc 1 484 1 is_stmt 1 view -0
 663              		.cfi_startproc
ARM GAS  /tmp/ccvJk5dy.s 			page 21


 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 485:FWLIB/src/stm32f4xx_dcmi.c ****   ITStatus bitstatus = RESET;
 667              		.loc 1 485 3 view .LVU173
 486:FWLIB/src/stm32f4xx_dcmi.c ****   uint32_t itstatus = 0;
 668              		.loc 1 486 3 view .LVU174
 487:FWLIB/src/stm32f4xx_dcmi.c ****   
 488:FWLIB/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 489:FWLIB/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_GET_IT(DCMI_IT));
 669              		.loc 1 489 3 view .LVU175
 490:FWLIB/src/stm32f4xx_dcmi.c ****   
 491:FWLIB/src/stm32f4xx_dcmi.c ****   itstatus = DCMI->MISR & DCMI_IT; /* Only masked interrupts are checked */
 670              		.loc 1 491 3 view .LVU176
 671              		.loc 1 491 18 is_stmt 0 view .LVU177
 672 0000 034B     		ldr	r3, .L58
 673 0002 1B69     		ldr	r3, [r3, #16]
 674              	.LVL31:
 492:FWLIB/src/stm32f4xx_dcmi.c ****   
 493:FWLIB/src/stm32f4xx_dcmi.c ****   if ((itstatus != (uint16_t)RESET))
 675              		.loc 1 493 3 is_stmt 1 view .LVU178
 676              		.loc 1 493 6 is_stmt 0 view .LVU179
 677 0004 0342     		tst	r3, r0
 678 0006 01D0     		beq	.L57
 494:FWLIB/src/stm32f4xx_dcmi.c ****   {
 495:FWLIB/src/stm32f4xx_dcmi.c ****     bitstatus = SET;
 679              		.loc 1 495 15 view .LVU180
 680 0008 0120     		movs	r0, #1
 681              	.LVL32:
 682              		.loc 1 495 15 view .LVU181
 683 000a 7047     		bx	lr
 684              	.LVL33:
 685              	.L57:
 496:FWLIB/src/stm32f4xx_dcmi.c ****   }
 497:FWLIB/src/stm32f4xx_dcmi.c ****   else
 498:FWLIB/src/stm32f4xx_dcmi.c ****   {
 499:FWLIB/src/stm32f4xx_dcmi.c ****     bitstatus = RESET;
 686              		.loc 1 499 15 view .LVU182
 687 000c 0020     		movs	r0, #0
 688              	.LVL34:
 500:FWLIB/src/stm32f4xx_dcmi.c ****   }
 501:FWLIB/src/stm32f4xx_dcmi.c ****   return bitstatus;
 689              		.loc 1 501 3 is_stmt 1 view .LVU183
 502:FWLIB/src/stm32f4xx_dcmi.c **** }
 690              		.loc 1 502 1 is_stmt 0 view .LVU184
 691 000e 7047     		bx	lr
 692              	.L59:
 693              		.align	2
 694              	.L58:
 695 0010 00000550 		.word	1342504960
 696              		.cfi_endproc
 697              	.LFE136:
 699              		.section	.text.DCMI_ClearITPendingBit,"ax",%progbits
 700              		.align	1
 701              		.global	DCMI_ClearITPendingBit
 702              		.syntax unified
 703              		.thumb
ARM GAS  /tmp/ccvJk5dy.s 			page 22


 704              		.thumb_func
 705              		.fpu fpv4-sp-d16
 707              	DCMI_ClearITPendingBit:
 708              	.LVL35:
 709              	.LFB137:
 503:FWLIB/src/stm32f4xx_dcmi.c **** 
 504:FWLIB/src/stm32f4xx_dcmi.c **** /**
 505:FWLIB/src/stm32f4xx_dcmi.c ****   * @brief  Clears the DCMI's interrupt pending bits.
 506:FWLIB/src/stm32f4xx_dcmi.c ****   * @param  DCMI_IT: specifies the DCMI interrupt pending bit to clear.
 507:FWLIB/src/stm32f4xx_dcmi.c ****   *          This parameter can be any combination of the following values:
 508:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_FRAME: Frame capture complete interrupt mask
 509:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_OVF: Overflow interrupt mask
 510:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_ERR: Synchronization error interrupt mask
 511:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_VSYNC: VSYNC interrupt mask
 512:FWLIB/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_LINE: Line interrupt mask
 513:FWLIB/src/stm32f4xx_dcmi.c ****   * @retval None
 514:FWLIB/src/stm32f4xx_dcmi.c ****   */
 515:FWLIB/src/stm32f4xx_dcmi.c **** void DCMI_ClearITPendingBit(uint16_t DCMI_IT)
 516:FWLIB/src/stm32f4xx_dcmi.c **** {
 710              		.loc 1 516 1 is_stmt 1 view -0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              		@ link register save eliminated.
 517:FWLIB/src/stm32f4xx_dcmi.c ****   /* Clear the interrupt pending Bit by writing in the ICR register 1 in the 
 518:FWLIB/src/stm32f4xx_dcmi.c ****   corresponding pending Bit position*/
 519:FWLIB/src/stm32f4xx_dcmi.c ****   
 520:FWLIB/src/stm32f4xx_dcmi.c ****   DCMI->ICR = DCMI_IT;
 715              		.loc 1 520 3 view .LVU186
 716              		.loc 1 520 13 is_stmt 0 view .LVU187
 717 0000 014B     		ldr	r3, .L61
 718 0002 5861     		str	r0, [r3, #20]
 521:FWLIB/src/stm32f4xx_dcmi.c **** }
 719              		.loc 1 521 1 view .LVU188
 720 0004 7047     		bx	lr
 721              	.L62:
 722 0006 00BF     		.align	2
 723              	.L61:
 724 0008 00000550 		.word	1342504960
 725              		.cfi_endproc
 726              	.LFE137:
 728              		.text
 729              	.Letext0:
 730              		.file 2 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 731              		.file 3 "/home/bt0/stm32/compile-tool/gcc-arm-none-eabi-8-2018-q4-major-linux/gcc-arm-none-eabi-8-
 732              		.file 4 "F4_CORE/core_cm4.h"
 733              		.file 5 "USER/system_stm32f4xx.h"
 734              		.file 6 "USER/stm32f4xx.h"
 735              		.file 7 "FWLIB/inc/stm32f4xx_dcmi.h"
ARM GAS  /tmp/ccvJk5dy.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_dcmi.c
     /tmp/ccvJk5dy.s:18     .text.DCMI_DeInit:0000000000000000 $t
     /tmp/ccvJk5dy.s:26     .text.DCMI_DeInit:0000000000000000 DCMI_DeInit
     /tmp/ccvJk5dy.s:63     .text.DCMI_DeInit:0000000000000018 $d
     /tmp/ccvJk5dy.s:68     .text.DCMI_Init:0000000000000000 $t
     /tmp/ccvJk5dy.s:75     .text.DCMI_Init:0000000000000000 DCMI_Init
     /tmp/ccvJk5dy.s:151    .text.DCMI_Init:0000000000000044 $d
     /tmp/ccvJk5dy.s:156    .text.DCMI_StructInit:0000000000000000 $t
     /tmp/ccvJk5dy.s:163    .text.DCMI_StructInit:0000000000000000 DCMI_StructInit
     /tmp/ccvJk5dy.s:199    .text.DCMI_CROPConfig:0000000000000000 $t
     /tmp/ccvJk5dy.s:206    .text.DCMI_CROPConfig:0000000000000000 DCMI_CROPConfig
     /tmp/ccvJk5dy.s:238    .text.DCMI_CROPConfig:0000000000000018 $d
     /tmp/ccvJk5dy.s:243    .text.DCMI_CROPCmd:0000000000000000 $t
     /tmp/ccvJk5dy.s:250    .text.DCMI_CROPCmd:0000000000000000 DCMI_CROPCmd
     /tmp/ccvJk5dy.s:281    .text.DCMI_CROPCmd:000000000000001c $d
     /tmp/ccvJk5dy.s:286    .text.DCMI_SetEmbeddedSynchroCodes:0000000000000000 $t
     /tmp/ccvJk5dy.s:293    .text.DCMI_SetEmbeddedSynchroCodes:0000000000000000 DCMI_SetEmbeddedSynchroCodes
     /tmp/ccvJk5dy.s:324    .text.DCMI_SetEmbeddedSynchroCodes:000000000000001c $d
     /tmp/ccvJk5dy.s:329    .text.DCMI_JPEGCmd:0000000000000000 $t
     /tmp/ccvJk5dy.s:336    .text.DCMI_JPEGCmd:0000000000000000 DCMI_JPEGCmd
     /tmp/ccvJk5dy.s:367    .text.DCMI_JPEGCmd:000000000000001c $d
     /tmp/ccvJk5dy.s:372    .text.DCMI_Cmd:0000000000000000 $t
     /tmp/ccvJk5dy.s:379    .text.DCMI_Cmd:0000000000000000 DCMI_Cmd
     /tmp/ccvJk5dy.s:410    .text.DCMI_Cmd:000000000000001c $d
     /tmp/ccvJk5dy.s:415    .text.DCMI_CaptureCmd:0000000000000000 $t
     /tmp/ccvJk5dy.s:422    .text.DCMI_CaptureCmd:0000000000000000 DCMI_CaptureCmd
     /tmp/ccvJk5dy.s:453    .text.DCMI_CaptureCmd:000000000000001c $d
     /tmp/ccvJk5dy.s:458    .text.DCMI_ReadData:0000000000000000 $t
     /tmp/ccvJk5dy.s:465    .text.DCMI_ReadData:0000000000000000 DCMI_ReadData
     /tmp/ccvJk5dy.s:481    .text.DCMI_ReadData:0000000000000008 $d
     /tmp/ccvJk5dy.s:486    .text.DCMI_ITConfig:0000000000000000 $t
     /tmp/ccvJk5dy.s:493    .text.DCMI_ITConfig:0000000000000000 DCMI_ITConfig
     /tmp/ccvJk5dy.s:534    .text.DCMI_ITConfig:000000000000001c $d
     /tmp/ccvJk5dy.s:539    .text.DCMI_GetFlagStatus:0000000000000000 $t
     /tmp/ccvJk5dy.s:546    .text.DCMI_GetFlagStatus:0000000000000000 DCMI_GetFlagStatus
     /tmp/ccvJk5dy.s:617    .text.DCMI_GetFlagStatus:0000000000000024 $d
     /tmp/ccvJk5dy.s:622    .text.DCMI_ClearFlag:0000000000000000 $t
     /tmp/ccvJk5dy.s:629    .text.DCMI_ClearFlag:0000000000000000 DCMI_ClearFlag
     /tmp/ccvJk5dy.s:647    .text.DCMI_ClearFlag:0000000000000008 $d
     /tmp/ccvJk5dy.s:652    .text.DCMI_GetITStatus:0000000000000000 $t
     /tmp/ccvJk5dy.s:659    .text.DCMI_GetITStatus:0000000000000000 DCMI_GetITStatus
     /tmp/ccvJk5dy.s:695    .text.DCMI_GetITStatus:0000000000000010 $d
     /tmp/ccvJk5dy.s:700    .text.DCMI_ClearITPendingBit:0000000000000000 $t
     /tmp/ccvJk5dy.s:707    .text.DCMI_ClearITPendingBit:0000000000000000 DCMI_ClearITPendingBit
     /tmp/ccvJk5dy.s:724    .text.DCMI_ClearITPendingBit:0000000000000008 $d

NO UNDEFINED SYMBOLS
